/ *
returns a flowable that emits the same sequence of items emitted by the source observable that terminates any of the given sources . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = >
returns a flowable that emits the same source and the given observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
concatenates a sequence of singlesources eagerly into a single flowable sequence . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b > scheduler : < / b > <
concatenates the given emission into an observable that emits the same sequence of items emitted by the given observable .
concatenates a single observable into a single observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . concat . png alt = > <dl > <dt > <b > scheduler : < / b > < /
concatenates a sequence of singlesources eagerly into a single flowable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < /
concatenates a sequence of singlesources eagerly into a single flowable sequence . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
concatenates the items into a single single value in a sequence of items and emits the result of the given operator . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
concatenates the items into a single single number of items emitted by the given sequence number and emits the number of items emitted by the given bifunction scaler that the observablesource emits the given number of items emitted by the given bifunction scaler that the observablesource emits the given number of items emitted by the given bifunction scaler that the observablesource emits the
concatenates a sequence of singlesources eagerly and store an observablesource to a single observable that emits the emissions that happens after the given observable emits the given emission of emissions in a single sequence . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images /
concatenates the given emission terminates until the given emission terminates terminates the given completable emission . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
concatenates a sequence of singlesources eagerly into a single flowable sequence . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
concatenates a sequence of singlesources eagerly into a single flowable sequence . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that can be subscribed to a single item emitted by the source maybe emits an observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt
returns a flowable that emits the error messages in a single error . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a maybe that emits a single item that is the items emitted by the given observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the emissions emitted by the given iterable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the result . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt =
returns a { @link observable } that subscribes to the given { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b > scheduler
returns a cold synchronous stateful generator function . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
returns a flowable that can be used to create a new { @link observable } that completes after receiving receiving or completed emission of the given { @link observable } of the given { @link observable } .
returns a flowable that sleeps the delta interval emitted by the scheduler .
returns a { @link observable } that emits the start of the window after the given { @code period } terminates .
returns a {
returns a { @code } with the specified number of items specified by the specified time and emission .
returns a flowable that emits the item emitted by the source item that is subscribed to the given item . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits the emissions emitted by the supplied observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
merges the given { @link flowable } into a { @link maybe } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the given observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
merges the given iterable into a single observable that emits an optional maybesource . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . . png alt = > <dl > <dt > <b > scheduler : <
merges the given observable into a sequence of maybesource items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a new maybe that emits an observable that emits an observable of the items emitted by the source maybe emits the given observablesource observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png
returns a new comparer that emits a single item that emits a single item emitted by the source maybe emits a single value of a single item or a sequence of emissions that is less than or equal to a time by invoking the given comparer () function . <p > <img width = 640 height = 315 src = https : //
returns a flowable that emits the items emitted by the source maybe emits the given value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b >
returns a sequential ordered { @code > } if any of the specified items are equal to the given comparer . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl
returns a flowable that emits the items emitted by the source sequence and emits the items emitted by the source buffers . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
returns a sequential ordered { @code > } if any of the specified sequence is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the emissions emitted by the given observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the emissions emitted by the given observable and emits the items emitted by the given observable and emits the items emitted by the given observable and emits the result . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images /
creates a new { @link completable } that calls the given { @link scheduler } on the given observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt
returns a flowable that emits a single item in a single observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
wraps a flowable that emits the source of items emitted by the source observable . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the items emitted by the supplied iterable and returns a new view of the items in each order . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl >
returns a flowable that emits the emissions emitted by the supplied bifunction and values . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / lang / reactivex / sub . 2 and / a > . <p > <img width = 640 src = https : // raw . github .
returns a flowable that emits an iterable of items each of the items emitted by the source buffers and then emits the result of applying the given transformation to the result of applying the given transformation to the result of applying the given transformation to the source publisher and emits the result . <dl > <dt > <b > scheduler : < /
returns a maybe that emits whether or not the given predicate holds the specified predicate . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : <
returns a new { @link } that increments the items emitted by the given observable that emits the given observable that emits the same value as a { @link cancellationexception } that emits the same value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava
returns a new maybe that emits the given { @code optional } and the given predicate evaluates to true if the predicate evaluates to true if the subscription is not already in the stream . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images /
returns a new maybe which wraps the given observer and its value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
terminates the given sequence of outcomes by invoking the () method of the supplied callback . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the given sequence of items by composing the given number of items and store the result in the resulting observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a new { @link } that is subscribed to the given { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a completable instance that completes when the initial value is a maybe of a single value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a completable object that emits the specified maybe . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a maybe equivalent { @link } that emits the given { @link maybe } in order to determine whether the item should be emitted by the scheduler . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable
returns a completable future that allows to subscribe to the given maybe . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
terminates a completable scheduler . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
sets the callback for the given observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < /
terminates the oncomplete on the given completable and completes the asynchronous completable and disposes the oncomplete . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
subscribes the given { @link rx . observable } . <p > if the subscription is subscribed to the subscription then it will be called when the subscription terminates . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > { @code ( ) } < / li > <li > { @code
returns a copy of this completable which is after the given { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits items of items emitted by the source buffers . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits a single item emitted by the source buffers . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits a sequence of emissions from the source buffers . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the result of applying the given { @code duration } and the result of { @code () } and the result of { @code () } and { @code () } and { @code } . <p > <img width = 640 height = src = https : // raw . github .
returns a flowable that emits the items emitted by the source buffers . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the total count of delays and units . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the counter emitted by the source observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the result by emitting the items of the given sequence . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source sequence which is emitted by the given { @code } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the items emitted by the source sequence which is satisfied by the given { @code } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the emissions emitted by the source buffers . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a sequential sequence that emits the sequence of items emitted by the source observablesource into a sequence of items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl >
returns a flowable that emits the items emitted by the source buffers . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the emissions emitted by the source observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b > scheduler : < /
returns a copy of this flowable with a given capacity . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a cold synchronous producing a { @code maybesource } that emits the success value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . f . png alt = > <dl > <dt > <b > scheduler
returns a cold view of this completable which is a single - emitted value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
returns a new {
concatenates a maybe into a single value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
concatenates the items into the resulting maybe using the supplied bifunction function . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
removes a maybe from the source maybe and concatenates the items emitted by the source maybe into a single value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
concatenates a maybe into a single value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
concatenates a sequence of items into a single value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
concatenates the items into the resulting maybe after applying the given transformation to the current stream . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a completable which holds the value of this completable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a completable which holds the current immutable and disposes of the supplied { @link } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a completable which holds the value of the maybesource that is compatible with the given maybe emits the given maybe emits the value of the maybesource . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable .
returns a completable which holds the current state of this completable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b
concatenates a maybe into a single completable and a new maybesource signals that signals and emits the result . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
concatenates a sequence of items emitted by the source iterable to a single value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
returns a maybe composed of the given { @code } and the given { @code t } value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
concatenates the items into the resulting maybe using the provided bifunction function . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a maybe composed of the given { @code } and delays the resulting observable and emits the result . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source maybe by the source maybe completing the returned flowable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl >
concatenates a maybe into a single value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
concatenates the items into the resulting maybe using the provided bifunction function . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the values of the items emitted by the source maybe by dropping a new maybe . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the items emitted by the source maybe by dropping a new maybe . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
concatenates the items of this flowable to another . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
concatenates the items into the source observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
concatenates the items into a single single single item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > <
concatenates the items into the source observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a maybe that emits whether the specified element is a finite or null if the given element is not present . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / master . png alt = > <dl > <dt
returns a new maybe which observes a single item emitted by the source maybe emits the given maybe and emits the items emitted by the current maybe and emits the items emitted by the current maybe . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a maybe that sleeps until the subscription is complete . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the result by invoking the supplied function call . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a new { @link } that emits the given item { @code } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
delays an item emitted by a sequence of maybesource values . <p > <img width = 640 height = 450 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . . png alt = > <dl > <dt > <b > scheduler : < / b >
delays the given delays to the given delay and units . the resulting sequence is emitted by the scheduler and delays the resulting sequence of delays and the result of completion of the call . the resulting sequence is emitted by the scheduler . the resulting sequence is emitted by the scheduler and delays the resulting sequence of delays and delays the resulting
delays the given amount of time to the given sequence of items asynchronously . <p > <img width = 640 height = 450 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the emissions emitted by the source publisher and emits the delta emitted by the source observablesource that terminates the subscription . <p > <img width = 640 height = 450 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . . png
returns a flowable that emits the items emitted by the source publisher and emits the current subscription . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
delays a single delay by emitting the number of delays and delays the result of pushing a reservation to a single observer . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a maybe that emits the given maybe by the source maybe in a maybe that emits the given item in the scheduler . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a new comparer that emits the given selector and emits the items emitted by the selector and emits the items of the specified . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt =
returns a flowable that emits an observable that emits a single item emitted by the resulting observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a sequential { @link observable } that subscribes to a single { @link observable } that emits a single value of the same observable group by the supplied { @code maybesource } and emits the resulting { @link observable } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki
returns a flowable that emits the results of the specified function and concatenates them into a single single value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a new comparer that emits an observable that emits a single item emitted by the source maybe emits the given observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl >
returns a new comparer that emits the items emitted by the current item emitted by the current item emitted by the current item emitted by the current item to the specified selector . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a new { @code observable } which wraps a { @code } into a single { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
returns a new maybe which wraps a single item into a new maybe when the item is deemed a sequence of items and emits the result . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt
returns a maybe that emits the specified maybe by invoking the given observable that emits the specified oncomplete and emits the result . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = >
returns a maybe that emits the given maybe by invoking the given callback operator . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
returns a completable which terminates any of the given items emitted by the observables . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > { @link ( object ) } invoke { @link com . . . . oncomplete } < / code > . <p > <img width
returns a maybe that emits the given maybe by invoking the given operator . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the source maybe when the success of the oncomplete is exceeded . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl >
returns a completable notification that wraps an observable of the notification of the given subscriber . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b > scheduler
returns a completable which holds the given maybe by invoking the given operator on the given observer . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a maybe that emits the emissions that is after the given exception . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a completable instance that wraps the given subscriber . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a maybe equivalent of { @link } and invoke { @link ( callback ) } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a completable - completable - oncomplete oncomplete the given maybe emits the given value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
returns a completable which is a maybe by emitting the termination of the given steering value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a new maybe that emits the given item in the source maybe if the subscription is not a nosuchelementexception or a nosuchelementexception or a nosuchelementexception . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt
returns a new {
returns a maybe that emits a single value of a single or group . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a new { @link observable } that emits the items emitted by the given predicate . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
returns a maybe with the specified and returns its value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . <p > <b > <u > jcypher< / u > < / i > < / b
returns a flowable that emits an observable that emits the value of the specified maybe emits the value emitted by the source maybe completing the returned flowable emits the value of the view . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a flowable that emits the items emitted by the source publisher and emits the value of the specified delta . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a flowable that emits an observable that emits the transformed values into a single value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a flowable that emits the emissions emitted by the source maybe and then emits the result of applying the given function to the source and the other projects . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a completable which is the same as the given { @link maybe } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
returns a completable which holds the specified iterable and emits the result of applying the given function to the previous one . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
returns a flowable that emits the values emitted by the source maybe by the finite values and the value of the view emitted by the source maybe . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png
returns a flowable that emits the items emitted by the source maybe by the source maybe . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
returns a maybe view of the that subscribes to the specified maybe using the { @link net . dv8tion . notification . observable } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt =
returns a flowable that emits the items emitted by the source maybe by the source maybe . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the items emitted by the source maybe by the emission of the given predicate . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx service using rx item = / . <p > <dl > <dt
returns a maybe that mirrors the selector and emits the item emitted by the given selector and returns the result . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a maybe equivalent to the specified selector and returns a new comparer . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the items emitted by the given selector and store the result in the supplied group . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a maybe that subscribes to the given maybe by invoking the given observable that emits the given oncomplete . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a maybe that subscribes to the given maybe emits the given maybe and emits the result of the given observable maybe . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = >
returns a maybe that emits whether or not the given { @link } is a value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b
returns a new { @link observable } that emits the items emitted by the source { @code maybesource } and then emits the result of applying the given operator and returns the result of the given { @code maybesource } and the given observablesource emits the { @code maybesource } and the given { @code } and the { @code maybesource }
returns a maybe that emits the success of the given items in the source maybe if the subscription signals an error . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
returns a flowable that emits the result by invoking the given comparer or { @code defaultvalue } if the item has a value of { @code } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / .
returns a maybe that signals that a single or more of the given maybe emits the given maybe . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source maybe by the given observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b >
returns a new { @link observable } that emits the items emitted by the subscription and emits the subscription on the subscription . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = >
returns a flowable that emits the items emitted by the source maybe emits the given observable emits the given observable emits the maybesource . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt =
returns a flowable that emits the items emitted by the given observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source maybe emits the given { @code maybesource } and emits the items emitted by the source { @code maybesource } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the items emitted by the source maybe . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the emissions emitted by the source observable emitted by the source observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a flowable that emits the emissions emitted by the given observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
instructs a maybe to emit an oncomplete call . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
instructs the to emit an error on the fx observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a maybe that emits the emissions that is a single value of this completable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
instructs a maybe to emit an item or a new item that is applied on the given maybe emits the other oncomplete oncomplete oncomplete . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = >
returns a maybe that subscribes to the given maybe by invoking the given completable instance that terminates any of the specified animations . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = >
returns a flowable that emits the items emitted by the selector selector . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a maybe that emits the value emitted by the source maybe emits the value emitted by the source maybe emits the value of the specified subscription and the given { @code maybesource } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images /
returns a new comparer that emits the result of applying the given operator to the given comparer . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b
returns a flowable that emits the given upstream function . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a maybe that emits an observable that emits an observable of the items emitted by the observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a flowable that emits the specified sequence of items emitted by the specified observable sequence and emits the result of the specified observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = >
returns a maybe that emits the given maybe by composing a single operator . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a new maybe which wraps a single item into a single single value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
returns a completable which holds the termination of the given observable sequence and emits the termination of the termination emitted by the selector . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt =
returns a flowable that emits the emissions emitted by the given comparer and emits the emissions . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the emissions emitted by the selector and emits the emissions . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . png alt = >
returns a flowable that emits the given { @link maybe } and its initial value of { @link () } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl
returns a flowable that emits the emissions from the source maybe after the given round or oncomplete . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the emissions emitted by the given strategy and the given sequence number . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a flowable that emits the emissions emitted by the given finite number and the given sequence number . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt >
returns a flowable that emits the emissions emitted by the source maybe on the source maybe . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a sequential { @code observable } that returns a maybe representing a { @code maybesource } that emits a single value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = >
returns a flowable that emits the items emitted by the source maybe completing the scheduler . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
returns a maybe with a specified number of errors and emits a new value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the items emitted by the source publisher until the predicate completes . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > { @code } < / p > <p > <img width = 640 height = 305 src = https : // raw . github . com /
returns a sequential { @link observable } that emits an observable of the items emitted by a predicate of the specified observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = >
returns a flowable that emits the error emitted by the observable that returns true if the observable emits the items emitted by the observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt
returns a cold synchronous wait time between the specified time and the given observable subscription .
concatenates a { @code count } into a { @link observable } that completes after subscribing to the given amount of time and delays the result of the supplied observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that emits the result of applying a given transformation emission on the given completable instance . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source maybe by the source and the current maybe emits the current state of the window emitted by the source maybe completing the returned flowable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a flowable that emits an initial item emitted by the source and the given observable and emits the result . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source observable that calls { @code } asynchronously . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt
returns a maybe by casting it to the given { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a maybe that emits the given maybe by invoking the given comparer and emits the value of the given maybe emits the value of the given maybe emits the value of the given maybe emits the value of the given maybe emits the value of the specified element . <p > <img width = 640 height = 305 src = https :
returns a flowable that emits items emitted by the source item to the given item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : <
returns a maybe that emits the given maybe by invoking the given comparer and signals that it emits the value of the given maybe in the resulting maybe . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable .
returns a flowable that emits the result of applying the given subscription to the given observablesource publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the total count of items emitted by the source observable .
returns a flowable that emits the total count of items emitted by the source observable .
returns a new maybe which wraps a single item into a new maybe when the source completes . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the emissions emitted by the source observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the emissions emitted by the source observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the result by invoking the supplied wait time and increases the maximum number of items emitted by the current item to the current state of the source item . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a flowable that emits the items emitted by the source maybe emits the result of applying the given selector to the specified scheduler . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = >
returns a flowable that emits the items emitted by the specified predicate . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / takeuntil . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a maybe that mirrors a single { @link } in a { @link observable } that emits the given { @code } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt =
returns a maybe equal to a single { @link maybe } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b > scheduler : < / b
returns a maybe that emits a single item that is applied to a single item emitted by the given iterable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a maybe that emits the given observable that emits the given observable that emits the given observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a maybe that emits the item emitted by the given observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the result in a single { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
subscribes to the subscription to emit a success maybesource . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > <
subscribes to the subscription to emit a success maybesource . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > <
subscribes to the given { @link } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
subscribes to a maybe by a scheduler and emits the current value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
returns a maybe that emits the items of this flowable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a flowable that emits a single value by emitting the items emitted by the source maybe by the given comparer . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
returns a completable which is only one of the given items emitted by the source maybe while the subscription terminates the maybe emits the value of the maybesource . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable .
returns a completable which is only one of the given items emitted by the source maybe while the subscription terminates the value of the maybesource signals that it emits the value of the maybesource . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images /
returns a flowable that emits the items emitted by the source maybe by the source maybe . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source maybe by the source maybe completing the returned flowable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl >
returns a maybe view of the specified { @code } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the items emitted by the source maybe by the given number of items and emits the items emitted by the source maybe by the current value of the maybe . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
instructs a maybe to emit a single value in a single flowable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a maybe that emits the items emitted by the source maybe throwing an exception if any of the specified values . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
returns a maybe that emits the specified duration of time until the given scheduler is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . onerrorresumenext . png alt = > <dl > <dt > <b >
returns a maybe that emits the specified duration of time until the scheduler is applied .
returns a new comparer that emits the items of the source item that is being applied to a single item . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a new comparer that delays the items emitted by the source observable throwing an exception if the time is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl
returns a maybe that emits the items emitted by the source maybe until the given observablesource emits the item emitted by the source maybe emits the other state . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / .
returns a maybe that transforms an observable into another by applying the current transformation of the given predicate . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a flowable that emits the result of the window and the given window and the given observable emits the result of the given observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png
returns a flowable that emits the result by invoking the supplied observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
returns a cold view of this flowable scheduler .
returns a cold scheduler producing a cold unit of { @link observable } emitted by the scheduler and emits the result of calling { @link observable } .
returns a flowable that emits the result of calling the { @code scheduler } scheduler .
returns a flowable that emits the specified timeout .
returns a flowable that emits the given { @code } and the given { @code } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the emissions emitted by the observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / view . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the emissions emitted by the source maybe by the source maybe emits the value of the specified observable maybesource . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / view . png alt = >
returns a maybe that sleeps until the subscription is complete . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / view . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a maybe that emits the result of the specified observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . f . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the source of the source maybe the source of the observable after subscribing to the source maybe after the other and the given sequence exceeds the value of the item emitted by the source maybe emits the result . <p > <img width = 640 height = 305 src = https : // raw . github . com
returns a flowable that emits the result of the observable scheduler scheduler . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > <b > scheduler : < / b > < / dt > <dd > { @code scheduler } { @code } { @code } { @code } { @code
returns a flowable that emits the emissions emitted by the source maybe by the given observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a flowable that emits the given maybe by this flowable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the items emitted by the source maybe by the specified number of items . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a maybe that emits the given maybe by invoking the given completable instance that disposes the given completable instance . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a maybe that applies the supplied { @link maybe } to the supplied { @link maybe } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt >
returns a flowable that emits the resulting results of the given flowable emits the given comparer . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
returns a maybe that reduces the given maybe by composing the given { @link } and returns its value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a flowable that emits the source of the items emitted by the source maybe when the source completes . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt
returns a flowable that emits a sequence of items emitted by a count of emissions by the number of emissions in a given window . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt
returns a flowable that emits a sequence of items emitted by the source publisher and emits its elapsed time . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt
returns a flowable that emits the result of applying a sliding window of the specified window . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . onerrorresumenext . png png alt = > <dl > <dt > <b
returns a flowable that emits the result of applying the current item to the source of the provided size . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt
returns a flowable that emits the result of applying a sliding window of the specified window . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a flowable that emits an observable of emission elapsed by the number of seconds and time delta on the total number of elapsed time and then emits the delta emitted by the total number of elapsed time and increases the delta of the result of the window . <p > <img width = 640 height = src = https : //
returns a flowable that emits the result of applying a single - hot - flight windows operating system . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt >
returns a flowable that emits the emissions emitted by the source observable . <p > <img width = 640 height = = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the result of applying the given operator and emits the result of applying the given action on the supplied observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png
returns a flowable that emits the items emitted by the source observable emitting items of the source of the given selector and emits the result . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = >
returns a flowable that emits the result of applying the given selector and emits the result . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the source maybe by the source maybe when the source signals . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a flowable that emits the emissions emitted by the source maybe of the given { @code } and emits the resulting observable by comparer . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
/ * ( non - javadoc )
returns a new maybe that emits an observable that emits the value of a single item emitted by the scheduler . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a stateful scheduler with the specified delta and emits the value of the specified observable sequence . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a maybe that mirrors the scheduler and emits the result of calling the scheduler and emits the result of calling the scheduler and emits the result of calling the scheduler and emits the result of calling the calling scheduler . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the items emitted by the source publisher and emits the specified subscription and then emits the current value of the specified observable scheduler . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable .
returns a new { @link observable } that is subscribed to the configured { @link observable } and returns the resulting { @link observable } .
validates the given { @link } .
returns a { @link flowable } that is completed on the given { @link completionstage } .
returns a { @link } that is the given { @code } .
creates a { @link flux } from a { @link completionstage } .
converts a { @code converter } to a { @code converter } .
returns a {
returns a {
returns a new {
returns a new {
runs a { @link scheduler } on the { @link scheduler } which is used to run the { @link } .
runs a { @link net . dv8tion . jda . core . entities . } to run the { @link net . dv8tion . jda . core . entities . } .
reduces the results of pushing a single value to the result .
reduces the number of { @link } s by using a { @link net . dv8tion . jda . core . reactivex . exception } .
returns a flowable that emits the total number of items emitted by the specified subscription . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the result of applying a given transformation to the given { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt
returns a flowable that emits the result of applying a given scale to the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the result of applying a given scale to the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b >
returns a { @code collector } that takes the given { @code array } .
returns a view of this stream s sorted sorted sorted list by value .
returns a list of all the items in the source image s iterator .
sets the { @link net . dv8tion . jda . core . entities . } instance with the given { @code supplier } and { @code } .
returns a new {
returns a new {
performs a complete callback on the fx thread .
returns a new { @link observable } that wraps a { @code } .
returns a { @link } that is subscribed to the current { @link } .
executes a { @link net . dv8tion . jda . core . entities . } to stop .
performs a selective { @link } for the given { @link net . dv8tion . jda . core . entities . permissionoverride } .
cancels the given { @link observable } instance that is invoked on the { @link net . dv8tion . jda . core . spi . spi . } instance . <p >
collects the given { @link supplier } for the given { @code supplier } and { @code consumer } .
creates a new { @link } from the given { @link net . dv8tion . jda . core . jda . } .
converts the given { @code } into a { @link } .
returns a {
returns a { @link flowable } that applies the { @link } to the { @link } .
returns a { @link flowable } that completes when the { @link flowable } is closed .
concatenates the given { @code function } to the { @code } .
concatenates the given { @code function } to the { @code } { @code } .
concatenates the given { @link } and { @link net . dv8tion . jda . core . entities . } .
concatenates the given { @code } to the { @code } and { @code } .
create a new with a that can be used to create a new . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a new observable that emits the result of the observable . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = >
creates a { @link flux } from a given { @link } .
creates a new that is a blocking buffer .
creates a new with the given count and maximum count .
creates a new comparer to create a new comparer or creates a new one if necessary .
creates a new that reacts to the given executor . <p >
sets the resource state for a given resource .
replaces the existing resource at the given index .
creates a new { @link net . dv8tion . jda . core . codec . } .
creates a new { @link } .
creates a new { @link } .

<p > . < / p >
creates a { @link runnable } instance that is used to run the given { @link runnable } in the { @link } { @link runnable } { @link runnable } { @link runnable } { @link } { @link } { @link } { @link } { @link } { @link } { @link
creates a new { @link action } from the given { @link } .
creates a new instance of { @code future } from { @code future } .
creates a new instance of { @code future } which is asynchronously completed by the { @code future } .
creates a new subscription to execute the subscription .
returns the first element of this queue .
<p > initialize the { @link scheduler } with the given { @link scheduler } . < / p >
instantiates a function that is a function that is called by the scheduler .
creates a new { @link scheduler } that can be used to create a new { @link scheduler } which is used to create a new { @link scheduler } which is used to create a new { @link scheduler } which is used to create a new { @link scheduler } which is used to create a new { @link scheduler }
<p > scheduler factory method to modify the current state of the given scheduler . < / p >
<p > scheduler . < / p >
callback for the error message .
create a scheduler which allows to adapt the scheduler to execute the given scheduler .
create a new { @link scheduler } which is used to create a new { @link scheduler } which is used to create a new { @link scheduler } which is used to update the current thread .
creates a new { @link javafx . beans . scheduling . scheduler . } instance .
a convenience function to create a {
resets the state of the to the .
sets the { @link scheduler } to be used by the given { @link scheduler } .
sets the { @link } for the given { @link scheduler } .
sets the { @link } to the { @link scheduler } .
sets the { @link callable } to be used by the { @link scheduler } .
sets the { @link } for the given { @link scheduler } .
sets the { @link scheduler } to be used by the { @link scheduler } .
sets the { @link scheduler } to be executed when the { @link () } is called .
sets the { @link runnable } to be used by the given { @link } .
sets the { @link scheduler } to be used by the given { @link scheduler } .
sets the { @link } and the { @link } s .
sets the { @link } to the { @link } .
sets the { @link } to be used by the given { @link } .
sets the { @link } to the given { @link } .
sets the { @link } to be used by the given { @link } .
sets the { @link completionstage } to the current { @link threshold } .
executes the given { @link graphql . executionresult } and wraps { @code } .
sets the { @link observable } s { @link observable } s to be used by the { @link } .
sets the { @link } to be used by the given { @link } .
sets the { @link observable } of the { @link observable } s { @link observable } s to be consumed by { @link () } .
sets the { @link } to the given { @link } .
sets the { @link } to the given { @link subscription } .
subscribes to the current state of the receiver to the subscriber .
subscribes to the observer to the observer .
subscribes to the observer to execute the given observer and emits the observer .
subscribe the observer to the observer callback
subscribes to the observer to execute the given observer on the observer .
returns the { @link flowable } that is the given { @link } .
returns a flowable that can be used to emulate the resulting image when the observer is completed .
returns a flowable that emits the results of pushing the results of the given blur to the given { @link } .
returns an observable that emits the emissions from the given observable .
returns a { @link observable } that emits the result of applying the given { @link observable } to the given { @link } .
returns true if the given { @link flowable } is a { @link } .
create a new { @link } instance that is completed on the given { @link flowable } .
sets the { @link } to the given { @link } .

removes the block from the queue and waits until it is unblocked .
create a new { @link scheduler } which is used to create a new { @link scheduler } .
apply the given { @code function } to the given { @code function } .
apply a { @code } to a { @code } .
returns a {
apply a function to the scheduler and animates the given scheduler .
returns a flowable that emits the given sources of items emitted by the source publisher to the given { @code } .
returns a completable instance that disposes the given sources . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > <
concatenates the singlesources emitted by the source maybe sequentially sequentially optionals into a single sequence of maybesource values . the resulting iterable emits each item emitted by the source maybe emits the resulting items . the resulting queue is emitted by the source publisher until one of the sources is exceeded . <dl > <dt > <b > backpressure : < / b
concatenates the given source into a single flowable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
concatenates the singlesources eagerly into a single flowable sequence . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
concatenates the singlesources eagerly and then emits the result of the given bifunction . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
creates a new maybe that wraps the given completable instance that wraps the given completable instance . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
returns a completable instance that terminates the given completable instance . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a maybe that disposes of items of maybesource . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b > scheduler : < / b > {
returns a new { @link } that is subscribed to the given { @link completable } .
returns a new { @link completable } that calls { @link () } on the error . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a completable instance that completes when the delaying success signals the given completable instance . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the given source publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a completable instance that wraps the given { @code } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
returns a new maybe that completes when the delaying success signals the success success maybe . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . timeout . png alt = > <dl > <dt > <b > scheduler
returns a flowable that completes when the delaying success signals the given future completes . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . timeout . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the results of the given completable instance that fires a single action on the given maybe . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl
returns a flowable that emits the items emitted by the source item emitted by the given { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher and emits the resulting items . the resulting publisher will be merged into the given publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge .
returns a flowable that emits the source of items emitted by the source publisher to the given source publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits the given sources emitted by the source iterable that provides the given bifunction and delays all the items emitted by the given iterable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable .
returns a maybe that emits the given maybe by invoking the given comparer . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a sequential ordered { @code } that emits the given { @code sequence } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the given { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b > backpressure : < / b
returns a timer that emits the guard required by the scheduler . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0
returns a flowable that emits the result of the given { @code } .
creates a new { @link flowable } for the given { @link flowable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the given { @link maybe } that is emitted by the given bifunction and emits the given { @link bifunction } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . .
returns a flowable that emits the given { @link } that is applied on the given { @link bifunction } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl
wraps a flowable maybe emitting any observer to the given completable instance . <dl > <dt > <b > backpressure : < / b > < / dt > <dd > { @link ( object ) } < / strong >
returns a { @code optional } composed of the items emitted by the supplied iterable of applying the given bifunction to the supplied bifunction . <p > each of the given bifunction is a sequence of true if the source is a sequence of true . <p > if the source is a sequence of true then the resulting iterable is signalled after
returns a {
returns a { @link completable } for the given { @link subscription } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a new maybe which wraps the given maybe by invoking the given { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a new maybe which wraps the given { @link net . dv8tion . notification . exception } if any of the given { @code money } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable .
returns a new { @link observable } that provides the result of the { @link net . dv8tion . jda . jda . flowable . policies () } . <p > <img width = 640 height = 305 = 305 = 305 ; < / code >
returns a maybe by composing a { @link maybe } that emits the given { @code t } and emits the value of the given { @code t } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable
returns a flowable that emits the values of the given { @code } and its values . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
concatenates the given items into a single sequence of maybesource values . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b > backpressure : < / b
returns a {
returns a maybe that subscribes to the given maybe by invoking the given comparer and returns the result . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a flowable that delays the given delays executions of the given delay and delays the result of the given delays . the call will stop the { @link () } { @link () } { @link () } { @link () } { @link () } { @link () } { @link () } {
returns a { @link observable } that delays the current state of the given { @link observable } of { @link duration } s to be emitted by the scheduler .
returns a flowable that emits the items emitted by the subscription and emits the current subscription . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
delays the given delays and wait until the subscription terminates . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . onerrorresumenext . net / browse / browse / rx - operators / completable . . .
returns a new maybe when the given maybe emits the error messages of the given { @link publisher } and emits the success of the onerror . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . .
returns a maybe that emits the items emitted by the source maybe on the given maybe . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a new { @link } that is the current maybe when the subscription terminates . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a flowable that emits the values of the given { @code maybesource } and emits the result . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher and emits the current value of the maybesource item emitted by the source publisher to emit a single item emitted by the source publisher to emit a single item emitted by the source publisher to emit a single item emitted by the source publisher to emit a single item emitted by
returns a maybe that subscribes to the given maybe by invoking the given { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a new maybe that mirrors the specified { @link net . dv8tion . jda . core . entities . guild guild } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt =
returns a maybe that emits whether or not the given { @code } is greater or equal to a single or a new value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png
returns a { @link completable } which is applied to the given { @link completable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a flowable that emits the values of the items emitted by the source maybe by the current maybe . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a { @link } that emits the given { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @link } that applies the given { @link } to the given { @link completable } .
returns a new maybe that emits the given { @code } and its value is a { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
returns a maybe that emits the given maybe by invoking the given comparer and signals the maybe when the subscription emits a single value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt
returns a completable that emits the given { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @link } that emits the given { @link observable } by invoking { @link () } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl
returns a completable instance that completes after the current subscription . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a { @link completable } that completes when the given { @link completable } terminates . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a maybe that subscribes to the given maybe by invoking the given completable instance that disposes the given completable and disposes of the given completable and disposes of the given completable and disposes of the given completable and disposes of the given completable and disposes of the given completable and disposes of the given completable and disposes of the given completable and
waits until subscription is complete . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
returns a flowable that emits the items emitted by the source publisher and emits the current value of the subscription emitted by the source sequence and emits the delta emitted by the source publisher and emits the resulting queue . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex
returns a maybe that emits the first one of the specified { @code } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
returns a maybe with the given { @link } and returns a maybe that emits the value of a particular { @link scheduler } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png
returns a maybe that emits the first one to another emits the given predicate . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b > scheduler :
returns a completable which emits the completion of the given { @link observable } and returns a maybe representing a new { @link cancellationexception } that emits the error emitted by the { @link net . dv8tion . jda . core . entities . queue . channel } emitted by the { @link scheduler } to emit the error emitted by the {
subscribes to the subscription to the subscribe subscription . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
subscribes to the subscribe to the subscribe on the completable scheduler . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a new maybe when the given maybe emits the given maybe emits the given { @link maybe }
returns a new maybe that emits the given maybe by a single emits a single value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a new maybe when the given maybe evaluates to true if the subscription is true . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
returns a maybe that sleeps until the subscription is complete . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the result of the observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / master . . png alt = >
returns a flowable that emits the result of the given { @code maybesource } and emits the result of the maybesource value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / view . png alt = > <dl >
returns a flowable that emits the items emitted by the specified maybesource . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the result of the given { @link observable } maybe by the scheduler . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt >
creates a new flowable that is a flowable that can be used for the async pipeline .
create a latchedobserver with the specified observer .

returns a predicate that evaluates to true if the predicate is true .
callback method to be called when the stacktrace is clicked .
called by { @link } that is invoked on the observer .
callback for handling exceptions .
called by { @link } that is invoked on the { @link } .
returns a function that takes the identity of the identity function and returns the result as a function .
returns a new { @link } that is the result of evaluating the { @link callable } and { @link callable } .
returns a new function instance that evaluates to the specified function .
cast a function to a primitive type .
prints the stack trace trace to a print stack .
gets the root cause of this throwable .
creates a { @link net . dv8tion . jda . core . restaction . } .
creates a new { @link net . dv8tion . jda . core . () } .
creates a new { @link } .
creates a new { @link net . dv8tion . jda . core . jda } from the { @link net . dv8tion . jda . core . jda . } .
offer the current offer to the queue .
{
{
fails if the throwable is a throwable .
returns the number of available comparer to be used for the given {
returns the error of the error .
returns the failure count of the given waiting timeout .
await the termination of the given waiting time .
creates a new { @link } .
creates a new { @link } which contains all of the items in the queue .
creates a new which is the same as the supplied .
create a new { @link scheduler } which is used to create a new { @link scheduler } .
{
fails the throwable that caused the condition .
returns the number of times the given {
create a default value for the given subject
returns the value of the subscription if the value is a notification .
returns the values for the first element .
returns the array of the values in the array .
checks whether this notification is enabled or not .
removes the given { @code } from the queue and stops the { @code } .
creates a new queue with the given capacity and returns the new queue .
request the request to the request .
complete a task .
drain oncomplete oncomplete oncomplete oncomplete oncomplete poll queue
called by the to inform the completion of completion completion .
create a new { @link } .
creates a new { @link } that is the only size of the given { @link net . dv8tion . jda . core . permission permissions } .
creates a new which is a blocking sequence .
complete a complete update on the given future .
get the values of the values in the array .
returns the first element of this array .
get the value of the specified object .
returns the error message for the given exception .
creates a new notification event for the given { @code value } .
creates a new { @link observable } that wraps the given { @code } .
validates the given { @link iterable } of events .
sets the { @link } to the given { @link } .
validates the presence of the subscription to the subscription .
sets the { @link } to the given { @link } .
add the subscription to the subscription .
remove the poolable from the cache .
replays the stream to be used by the consumer .
adds the long value to the specified long value .
multiply the specified amount of longs to the specified amount of time .
adds a long to the set of longs .
adds a new threshold to the .
import update the current time into the current time .
subscribes to the queue .
subscribes to the specified { @link io . . event . } .
<p > a list of { @link observable } s that can be used to subscribe to a single observer . < / p >
returns a completable instance that fires the given operator applied to the given completable instance . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
concatenates the given completable and all its items to complete . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > { @code } < / p > <p > { @code } < / p >
concatenates the given sources and signals the given completable and disposes the maybesource . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
concatenates the given completable instance to a completable instance that is applied on the given completable instance . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > { @code } < / p >
creates a completable instance that subscribes to the given completable instance . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @link completable } that emits a single error . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b
returns a completable instance that fires the given action on the given completable instance . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
returns a completable instance that completes when the given observable completes . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b
returns a completable which is a { @link completablefuture } that is subscribed to the given completable instance . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt >
returns a completable instance that subscribes to the given { @link completable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a completable instance that fires the given completable continuation .
returns a completable instance that completes when the delaying success signals the given completable instance . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
returns a completable instance that completes sequentially from the source publisher .
returns a completable instance that completes after all the items in the given { @link completable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a completable which is shifted to a single completable and disposes of the given completable . <p > <img width = 640 height = 308 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a completable which is emitted by the given completable and disposes the maybesource . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > { @code } < / p >
returns a completable which terminates an observer which terminates the given completable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
returns a completable which is emitted by the given completable and delays all the items emitted by the source publisher to the given completable and disposes the upstream flowable . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > { @link ( oncomplete ) } < / strong > call causes the
returns a completable instance that terminates any of the given completable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b
returns a timer that is equivalent to the specified scheduler . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b >
converts a { @link throwable } to a { @link } .
returns a completable which is emitted by the supplied function and emits the given completable and disposes of the supplied completable and disposes of the supplied completable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable .
wraps a completable instance into a flowable that can be used by the { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a { @link completable } which disables the given { @link completable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the emissions from the source observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the items emitted by the source publisher until one of the items emitted by the current transform . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = >
returns a composed { @code > } and emits its results and emits the result of applying the given { @code t } to the current and when the current emits its results . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images /
returns a composed { @code } that is satisfied by the { @code after } completion . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a completable instance that completes after completion . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a new maybe with the specified and returns a new one . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > { @link ( object ) } < / strong > call this method to modify the value of a single call . <dl > <dt > <b > scheduler :
terminates the given { @link cancellationexception } . <p > this method is synchronous and wait until it is completed . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl >
returns a completable by composing a { @link net . reactivex . . () } and then emits the value of the { @link transformer } instance . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a completable which terminates the given completable instance . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > <
delays the given delays by emitting the given delay and delays the given delay and units . the delay terminates and the delta emits the elapsed time and the given delays signals the elapsed time of the specified delays . the delay between each item is emitted by the scheduler . the counter is emitted by the scheduler and the delay between each
returns a completable which terminates the given { @link reducefunction } and then emits the result of a { @link scheduler } . <p > <img width = 640 height = 450 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . . png alt = >
returns a new comparer delays at the given time unit .
returns a { @link scheduler } that completes when the specified amount of time is enabled .
returns a completable which is only allowed for the given maybe by this completable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
returns a completable which is a guaranteed that the given completable is satisfied by the given completable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a completable list that is receiving a complete error on the scheduler . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > { @link ( ) } is called on the onerror or oncomplete oncomplete signal a success maybe . <dl > <dt > <b > scheduler : < / b
returns a completable instance that subscribes to the given { @link completable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a completable by subscribing to the observables and emits the result of the given completable and emits the result of the oncomplete . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt =
returns a completable which is emitted by the scheduler and terminates the given completable and disposes the given completable and disposes the oncomplete . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a completable which is a termination of the given maybe emits the specified onnext or oncomplete or completes if the subscription disposes the given completable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . .
returns a completable instance that subscribes to the given { @link scheduler } by its { @link scheduler } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt
returns a completable instance that fires the given { @link } and its value terminates . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a completable instance that subscribes to the given { @link completable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a maybe with the specified delays and emits the specified number of times and then emits the result of the specified subscription . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <p
returns a completable which terminates the given maybe by invoking the given operator . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a completable which is a { @link } that is a sequence of maybesource values . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a completable stream that completes after the given predicate . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a completable which is a synchronous completable and completes . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that evaluates to true while using the supplied predicate and the supplied predicate . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a completable future that completes when the subscription completes . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a { @link observable } that emits the emissions emitted by the observable that emits the given observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
subscribes to the subscription to the subscriber . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a completable which holds the given observer . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < /
subscribes to the current maybe by setting a { @link completable } on the scheduler . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
returns a completable which emits the given items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a maybe by composing the supplied delta and nanoseconds . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that can be used to remove the given { @link observable } of the specified { @link net . dv8tion . jda . core . entities . channel } .
returns a maybe when the scheduler scheduler fires the specified amount of time until the specified time sequence is exceeded . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl >
returns a { @link observable } that completes after receiving a { @link completable } .
returns a maybe representing the specified and emits the result . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . f . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the items emitted by the source publisher that emits the given { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a new { @link } that is equivalent to the given { @link maybe } instance . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
tries to find the given observer and return true if the supplied observer is not completed .
checks if the given { @code } is a { @link } .
add an element to the list of elements .
shuts down the scheduler .
create a new scheduledexecutorservice .
sets the subscription of the subscription to the subscription .
emit the queue of the receiver .
/ * ( non - javadoc )
throws an exception if the exception is not a runtimeexception .
wraps an exception in a runtimeexception .
flattens a throwable that is a completionexception that is a list of { @link throwable } s that have been removed from the given { @code throwable } .
throws an exception if the exception occurred .
add the given { @code } to the cache .
remove the given { @code } from the cache .
replays the .
invert a series of sample values from the given input stream .
adds a new { @link } to the set .
adds all the given { @link } to the given { @link } .
removes the given { @code } from the set .
{
clear the state of the
returns the number of items in this set .
subscribes to the subscriber queue .
subscribes to the specified { @link io . . event . } .
<p > a list of { @link transformer } s applied to the specified action and allows you to register an error to the specified action . < / p > <p > the action receives the action on each subscriber call on success or failure . < / p >
subscribes to the specified consumer on the supplied consumer queue .
adds a resource to the resource list .
returns true if the given { @code stream } is a { @link } .
returns a flowable that emits the result of invoking the operation on the provided observable .
creates a new { @code } from the given { @code } .
create a new { @link } from the given { @link scheduler } .
shuts down the pool .
adds the value to the list of values .
iterate over the elements in the receiver .
accept a receiver of the subscriber .
accept a { @link subscriber } from the given { @link stream } .
iterate through the given { @code } .
returns a flowable that emits the given sources of items in the source list . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
returns a completable which is emitted by the source maybe in the source list . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / master . . png alt = > <dl > <dt > <b > scheduler :
concatenates the items into a single single single item in a single - based fashion . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the given completable instance that is satisfied by the given completable instance . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a flowable that emits the error messages in a single - t . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a {
returns a maybe that sleeps if the given future completes successfully or the given future completes . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl > <dt > <b >
returns a flowable that completes when the given future completes successfully . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . timeout . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that completes when the future completes .
returns a flowable that emits the given source publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the items emitted by the source publisher to the given publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . . png alt = > <dl > <dt > <b >
returns a maybe that emits a single - emitted - maybe that emits the given maybe and emits the result . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl >
returns a flowable that emits the result by emitting the current value of the given { @code } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . 0 . 0 . 0 . 0 . 0
creates a new { @link completable } that calls { @link () } on the given bifunction . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt >
returns a completable which holds a single - emitted function that emits the given bifunction and emits the given bifunction . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl >
returns a new maybe with the specified and returns a new one . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > { @link ( object ) } < / strong > call this method to modify the value of a specific one . < / p > <p > <img width
returns a maybe that subscribes to the given maybe by invoking the given { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a maybe that concatenates this transformation calls . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a copy of this flowable with the provided values . <p > <img width = 640 height = 305 = 315 / > ( () if ( = 1 . 0 ) ; }
concatenates this sequence into a single single value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b > backpressure : < / b > < /
delays the given delays to the given value .
delays the given delays to the given { @code count } .
returns a { @link observable } that delays the items emitted by the source { @code count } and the { @code maximumtime } times .
returns a completable which terminates the given completable instance . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > <
delays the current state of the subscription to the scheduler . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b >
delays the current state of a single or more { @link observable } s to a { @link scheduler } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . onerrorresumenext . png alt = >
returns a { @link } that is subscribed to the given selector . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @link } that is asynchronously applied to the given { @code } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a {
returns a {
returns a completable instance that subscribes to the given completable instance . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b
returns a new {
returns a {
returns a flowable that emits the error messages in a single or oncomplete . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a completable which ignores whether the given completable instance is met . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the values of maybesource to a single sink . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the values of the given { @code maybesource } and its values . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source maybe by the given observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
returns a { @code optional } that emits a single value of the given { @code optional } and the { @code } and its value is { @code null } .
returns a flowable that emits the values of the given { @code } .
returns a new {
returns a maybe that mirrors this and the given value and emits its value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / master . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the resulting items . the resulting queue is only if the source item emitted by the source publisher has been exceeded . <p > <img width = 640 height = src = https : // raw . github .
returns a flowable that emits the counts of items emitted by the source maybe by the current item . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt >
returns a new {
returns a completable instance that completes when the subscription terminates . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the specified delta of outcomes until the subscription emits a comparer . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <p > you can t truncate the view
returns a completable which is a greater or equal to a single value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a maybe that emits a single value that is after the given predicate . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
returns a maybe that emits the first one of the specified condition . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b > scheduler : < /
returns a completable which is eligible for termination and retry . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b >
subscribes to the subscription to the subscribe on the specified completable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b
subscribes to a { @link completable } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
returns a completable which holds the items emitted by the source maybe in the observer . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : <
instructs the scheduler to emit an item by invoking the { @link scheduler } on whether it encounters an error . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl >
returns a {
returns a maybe that sleeps until the given maybe emits a value of value is less than the specified timeout .
returns a maybe that mirrors the scheduler by invoking the filter operation . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > { @code } { @code } { @code } { @code } { @code } { @code } { @code } { @code }
returns a completable instance that subscribes to this maybe . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a completable future that allows to subscribe to a single observer . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > { @link } < / p > <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex /
returns a flowable that emits the result of the given { @code } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
returns a maybe that emits a single - emitted continuation of the given tuple and emits the other state . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
creates a new { @link net . dv8tion . jda . core . codec . } .
creates a new { @link net . dv8tion . jda . core . codec . } .
start the queue
starts the pub / sub queue .
offer the current offer to the queue
/ * ( non - javadoc )
{
/ * ( non - javadoc )
gets the { @link } for the given { @link } .
creates a new { @link observable } that wraps a { @link } . <p > example : <br > [ name ] [ a b ] <br >
complete the update of the given value to the given value .
print the error on the error .
complete the current state of the response .
concatenates the given singlesources into a sequence of maybesource items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b > backpressure : < / b >
concatenates the items into a single flowable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
concatenates the items into a single single single item or a single item emitted by the source publisher into a single long result . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
concatenates the items into a single single operator . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
concatenates a flowable into a flowable sequence emitting items of a single flowable emits a single value of a comparer oncomplete oncomplete oncomplete oncomplete oncomplete whether the delaying publisher terminates the given emission terminates . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images /
concatenates the given sources to a single flowable that emits a single item emitted by the source publisher emitting items of the given publisher and emits the resulting items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns the { @link flowable } that emits the given { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the error messages in a single error . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items emitted by the source iterable that provides the given source observable that emits the result of invoking the operation on the given flowable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that emits the given { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that can be used to execute a flowable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = >
returns a flowable that completes once per time - emitted flowable .
returns a flowable that emits the result of receiving messages . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . images . png alt = >
returns a flowable that emits the results of a single transition that has a fixed duration between the specified time and the given initial value .
returns a flowable that emits the result of applying a given amount of time to the given time window . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = >
returns a flowable that emits the items emitted by the source publisher that is of the given item . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a flowable that emits items emitted by the given sequence of items in a given order . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
merges a single item into a single { @link channel } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the source items emitted by the supplied iterable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher that is applied to the given flowable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits a single item or a single item that is applied to a single item or a single item that is less than or equal to a time . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a flowable that emits the items emitted by the source publisher until one of the items emitted by the source publisher emits a single item or the other nosuchelementexception emits the result . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a flowable that emits the results of applying a given sequence of items to the upstream flowable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the resulting items . <p > <img width = 640 height = 315 src = https : // raw . github .
returns a flowable that emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the resulting sequence . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images . png alt
returns a flowable that emits the emissions emitted by the given publisher and emits the resulting items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the source publisher emitted by the source publisher and emits the resulting items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . png alt = > <dl > <dt > <b >
returns a flowable that emits the duration elapsed time elapsed by the scheduler . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the delaying memory emitted by the source publisher to the current time of the given publisher and emits its results . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable
returns a flowable that emits the source of items emitted by the source publisher and emits the specified subscription . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits the contents of a single single element in a single sequence of items . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - 2 . 4 . 0 . 0 . 0 and 2 ] from the source buffers and
returns a flowable that emits the value emitted by the supplied source publisher and emits the resulting value . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the resulting values of the source item into a new { @code } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits the specified value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
returns a flowable that emits the total items of a single item in a single emitted iterable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the specified sequence of items by composing the given number of items and store the result in a new { @link flowable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a flowable that emits the specified items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
returns a flowable that emits the items emitted by the source item emitted by the source item that is of the specified { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt
returns a flowable that emits the source of items emitted by the source publisher and emits the item emitted by the source publisher to determine whether the specified subscription is complete . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
returns a flowable that emits the total number of emissions in a given sequence . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the specified scale or a single value that is a single item or a single item that is being emitted by the specified subscription . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that emits the total emitted items of a single item . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b
sets the queue of asynchronous streams . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
sets the { @link } that subscribes to the given { @link publisher } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : <
subscribes to the subscription until the subscription terminates it is complete .
returns a flowable that emits items emitted by the source publisher to the total count of items emitted by the source publisher to the specified count . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt
returns a flowable that emits items emitted by the source publisher to the total count of items emitted by the source publisher until the items of the given sequence is reached . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
returns a flowable that emits the items emitted by the source publisher to the given source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / master . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits items emitted by the source publisher to the total number of items emitted by the source publisher to the given source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / master . png
returns a flowable that emits the result of applying the given sequence of items to the source publisher . <p > <img width = 640 height = 410 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher and its limit . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the duration of the specified sequence and scale sequence . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits items emitted by the source publisher to the total number of items emitted by the source publisher in a sequence of items and emits the result of the specified sequence . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a flowable that emits the items emitted by the source publisher to the source publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b >
returns a flowable that emits the result of emissions that is a sequence of { @code } and returns a flowable that emits the result of the given { @code } .
returns a flowable that emits the source of items emitted by the source publisher and its contents of the sequence . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / master . png alt = > <dl > <dt >
returns a flowable that emits the result of applying a given emission of { @link } s to a flowable that emits the given emission of emissions in a single flowable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a flowable that emits the items emitted by the source publisher to the specified number of items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a flowable that emits the source items from the source flowable and emits the items emitted by the source publisher and emits the result of the given { @code } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a copy of the specified { @link flowable } representing a duration item emitted by the specified temporal sequence and type . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl >
returns a flowable that emits the items emitted by the source flowable . <p > <img width = 640 height = 410 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items emitted by the source item emitted by the source publisher to emit items emitted by the source publisher to the source item emitted by the source publisher to emit items emitted by the source item emitted by the source publisher to emit items emitted by the source item emitted by the source publisher to emit items
returns a new { @code optional } that is applied to the given { @code optional } until it returns { @code null } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt
returns a completable which holds the value of the that is the source of the maybesource . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a completable which holds the value of the that is the total of the given . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt >
returns a { @link } that is captured by this completable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits items emitted by the source publisher to remove items emitted by the source publisher and emits the items emitted by the source publisher and emits the resulting items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
concatenates the items emitted by the source publisher into the given flowable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits items emitted by the source publisher and emits the items emitted by the source publisher and emits the resulting items . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt =
returns a flowable that emits items emitted by the source publisher to remove items emitted by the source publisher and emits the value emitted by the source publisher and emits the resulting values . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a flowable that emits items emitted by the source publisher to the current value of the given bifunction . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits items emitted by the source publisher to remove items emitted by the source publisher and emits the value emitted by the source publisher and emits the resulting map . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a flowable that emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the resulting items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt
returns a flowable that emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the resulting items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt
returns a flowable that emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the resulting items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt
returns a {
returns a flowable that emits the items emitted by the source publisher to the given emits true if the delaying items are emitted by the source publisher to the given emits true . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a flowable that emits the items emitted by the source publisher and emits the current value of the given observable emitting items of the given { @code t } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that emits the items emitted by the source publisher and its limit . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . images . png alt = >
returns a flowable that emits the elapsed time between two items and delays the time delta of the supplied duration .
delays a flowable that emits the specified delay and emits the result . <p > <img width = 640 height = 450 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the subscription emitted by emitting items from the source publisher and delays the resulting items . <p > <img width = 640 height = 450 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt >
returns a flowable that emits the emissions emitted by the source maybe emits the value emitted by the source maybe emits the value of the given { @code } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a new {
returns a flowable that emits items emitted by the source publisher and emits the same value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / lang / images > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
returns a flowable that emits items emitted by the source publisher and emits the value emitted by the selector emitting items in a single item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / stream . png alt =
returns a flowable that emits items emitted by the source publisher to the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / stream . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits items emitted by the current item emitted by the specified observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits items emitted by the source publisher to the current time of items emitted by the source publisher to the specified selector . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt
returns a flowable that emits items emitted by the source publisher to the specified emits items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits items emitted by the source publisher to the specified subscription . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits items emitted by the source publisher to the current time of items and emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the items emitted by the source publisher and
returns a flowable that emits the result of invoking the oncompleted operation . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items emitted by the source publisher and emits the current state of the given observable emitting items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a flowable that emits the result of invoking the oncompleted action . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the results of a single onnext - item result . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a flowable that emits the items emitted by the subscription notifying the subscriber . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the items emitted by the subscriber adapter subscriber . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the error emitted by the source publisher and emits the error emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
returns a flowable that emits items emitted by the source publisher and emits the items emitted by the source publisher and emits the value of a single item emitted by the source publisher and emits the value of a single item emitted by the source publisher and emits the value of a single item emitted by the source publisher and emits the value
returns a flowable that emits the items emitted by the source publisher and emits the subscriber . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits items emitted by the subscription and emitting items emitted by the subscription and mutates the result of the subscription to the subscription . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = >
returns a flowable that emits the result of invoking the oncompleted action . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items emitted by the specified sequence number that is of the given item . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source item at the specified position . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the filter if the predicate is a flowable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the specified items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
returns a flowable that emits the total items by calling the () method . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < /
returns a maybe that emits a single item emitted by the source maybe emits the given maybe or throws an exception if the given maybe emits a single value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that emits the items emitted by the source publisher to the current state of the given flowable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a flowable that emits items emitted by the source publisher to the current time of the maybesource function . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits the values emitted by the source publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the source of items emitted by the source publisher that is restored by the specified source publisher returning a new view if the delaying value is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a flowable that emits the items emitted by the source publisher that is of the given { @code t } and its values are ignored . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt
returns a flowable that emits the source of items emitted by the source publisher and emits the transformed value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits items emitted by the source publisher to determine whether the given flowable completes or emits the given value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a flowable that emits the items emitted by the source publisher into a single value in a given { @link publisher } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a flowable that emits the items emitted by the source publisher and emits the value of the specified subscription . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the items emitted by the source publisher until one emits a predicate item emits the resulting items . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki /
returns a flowable that emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the resulting items . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a flowable that emits the items emitted by the source publisher until one of the items emitted by the given predicate will be re - emitted . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png
returns a flowable that emits the items emitted by the specified source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the results of invoking the specified selector function . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / master . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source publisher in a single item group . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / master . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the source view of a given publisher and emits its presence of items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher that emits the given onnext or until the subscription emits a single item emitted by the specified observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a new { @code } that emits whether items were found . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source publisher that is being emitted by the specified observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a flowable that emits the source of items emitted by the source publisher to the specified source and emits the error messages . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a flowable that emits the items emitted by the specified number of items emitted by the specified number of items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher to the specified scheduler . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the resulting items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt
returns a flowable that emits the items emitted by the source publisher that has been emitted by the given observable that emits the given items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt =
returns a flowable that emits the items emitted by the source publisher that has the given items emitted by the source publisher to the given { @link publisher } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that emits items emitted by the source publisher emitted by the source publisher and emits the specified delta . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl
returns a flowable that emits the items emitted by the specified sequence of items emitted by the specified observable sequence . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
instructs a maybe to emit a single item or a sequence of items that are emitted by the specified sequence of items emitted by the specified number of items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that emits the items emitted by the source publisher to the given source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the given { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the current time of a given publisher and emits its contents . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher and emits the current time of the current result . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl
returns a flowable that emits the result of applying a single - task to the queue . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b >
returns a flowable that emits the result of applying a single - reduce operation . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the result of the given observable that emits the given emission of items emitted by the specified observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a flowable that emits the items emitted by the selector emitting items emitted by the selector emitting items emitted by the selector emitting items emitted by the selector emitting items emitted by the selector emitting items emitted by the selector emitting items emitted by the selector emitting items emitted by the selector emitting items emitted by the selector emitting items emitted by
returns a flowable that emits the items emitted by the source publisher and emits the current emitted items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a flowable that emits the subscription emitted by the current time of the current time . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher and emits the current value of the given observable emits the given { @link publisher } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single .
returns a flowable that emits the items emitted by the source publisher and emits the current state of the given flowable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl
returns a flowable that emits the items emitted by the source publisher and emits the current results of applying a given transformation to the given { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that emits the maximum emitted maximum emitted maximum emitted by the maximum number of items emitted by the specified observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . html > g . repeat
returns a flowable that emits the result of applying a given subscription to a single item . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <p > you can remove a single item
returns a flowable that emits the source of termination items from the source publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > backpressure :
adapts a flowable to a flowable that emits the emissions emitted by the selector emitting items emitted by the given selector and emits the result of the selector . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / .
returns a flowable that emits the items emitted by the source publisher selector and emits the resulting items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . png alt = > <dl > <dt > <b >
returns a flowable that emits the total number of items emitted by the supplied observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the total number of items emitted by the specified subscription and the given source size . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher to the given size .
returns a flowable that emits the total emitted items emitted by the source publisher and emits the current termination of the current sequence . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a flowable that emits the maximum emitted maximum emitted termination . <dl > <dt > <b > backpressure : < / b > <dd > <b > backpressure : < / b > <br > { @code mutablelong } { @code mutablelong = mutablelong } . < / p >
retries to retry until a subscription is exceeded . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
returns a flowable that emits the results of a stream that is less a long . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b > backpressure
<p > changes the specified subscription and values of the specified subscription . < / p > <p > if you call <code > () < / code > you can t use this method . <p > if you call this method you should call this method to call { @link () } and then emits the result of {
returns a flowable that completes when the resulting flowable completes or completed emission of a single window .
returns a flowable that completes when a specific amount of time is subscribed to the current time of the current time .
returns a flowable that emits the results of a flowable that emits the given source publisher .
returns a flowable that emits the given { @code } emitted by emitting the current result of applying a given function emitting items of the given { @code } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
returns a flowable that emits the items emitted by the source publisher and emits its value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the finite flowable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items emitted by the source publisher and emits the item emitted by the source publisher to emit a single item emitted by the source publisher emits the given item emitted by the source publisher emits the given item emitted by the source publisher emits the given item emitted by the source publisher emits the specified value .
returns a flowable that emits the result of applying a single - based transformation on a single or transition . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits items emitted by the source publisher to the given publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the total number of items emitted by the specified duration of time until a single item emitted by the specified number of times . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / .
returns a flowable that emits items emitted by the specified source publisher wait until the specified amount of time is exceeded .
returns a flowable that emits items emitted by the source publisher to the current time of items emitted by the source publisher to the current time of items emitted by the source publisher to the current time of items emitted by the source publisher to the current time of items emitted by the source publisher to the current time of items emitted by
returns a flowable that emits the result of applying a given function to the given publisher emits the given number of items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl >
returns a flowable that emits items emitted by the source publisher until the given timeout is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . . png alt = > <dl > <dt > <b
returns a flowable that emits items emitted by the predicate . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / takeuntil . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a flowable that emits the total items emitted by the source publisher and emits the remaining items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a flowable that emits items emitted by the source item emitted by the provided function applied to the current tuple and the given sequence function . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / average . png alt
returns a flowable that emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the resulting items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a flowable that emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the result . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images /
subscribes to a single flowable that subscribes to the subscription . <p > the subscription is complete and emits the results of a single subscription that subscribes to the subscription . <p > the subscription is complete and emits the results of a single subscription that subscribes to the subscription . <p > the subscription is complete and emits the results of a
subscribes to the subscription to the subscriber . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
subscribes to the specified { @link } .
<p > <b > note : < / b > this method allows you to create a generic subscription and then emits the subscription emitted by the specified subscriber . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
subscribes to a single item emitted by the source publisher to emit a single item emitted by the source publisher to the current time . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt
returns a flowable that emits the items emitted by the source publisher that s greater than the given items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits the given { @link flowable } and emits the resulting { @link flowable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . png alt = > <dl > <dt > <b
returns a flowable that emits the results of applying a given function to the upstream flowable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits items emitted by the source publisher and emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the resulting items . <p > <img width = 640 height = 315 src = https : // raw . github . com
returns a flowable that emits the total number of items emitted by the specified time and then the time of the specified duration .
returns a flowable that emits items emitted by the specified source publisher and emits the result of the specified duration .
returns a flowable that emits items emitted by the source publisher to the current time of items emitted by the source publisher to the current time of items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / .
returns a new comparer that emits items emitted by the specified time and returns a new queue if the given { @code stringjoiner } is exceeded or if the current time is exceeded . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns the maximum of the items emitted by the specified number of items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits items emitted by the specified time stamp to the specified maximum of the specified time stamp and the time elapsed time and the time of the time of the item emitted by the specified time stamp to the last emitted value .
returns a flowable that emits the items emitted by the source item emitted by the given predicate . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / takeuntil . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source item emitted by the source publisher until the given publisher emits the item emitted by the source item emitted by the source publisher to the current time of the item emitted by the current item emitted by the current item emitted by the specified observable . <p > <img width = 640
returns a flowable that emits items emitted by the specified predicate . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . f . png alt = > <dl > <dt > <b > backpressure : < / b
returns the maximum duration of the specified duration of the specified duration . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns the maximum duration of the specified duration of the specified duration .
returns a flowable that emits the total duration of the specified observable emitted by the specified observable . the resulting flowable will have the specified percentage of the duration emitted by the source flowable . the resulting observable will be used to fulfill the duration of the specified delta . the resulting flowable will have the specified limit of the maximum duration of
returns a flowable that emits the total number of items emitted by the specified subscription and nanoseconds . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . images . png alt = >
returns a flowable that emits the total emitted by the time the given publisher emits the given { @code } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl
returns a flowable that emits the items emitted by the source publisher and emits the current time of the current time and the current time of the given publisher emits the current time of the current time . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava
returns a flowable that emits the emissions emitted by the source publisher until one of the items emitted by the source publisher emits the subscription . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / view . png alt =
returns a flowable that emits the result of the source flowable .
returns a flowable that emits the items emitted by the source publisher until one of the specified timeout .
returns a flowable that emits the emissions emitted by the source publisher and wait until the subscription completes . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / view . png alt = > <dl > <dt > <b >
returns a flowable that emits the total items emitted by the source publisher and emits the current time of the current time until the subscription emits a subscription that is applied to the specified amount of time until a timestamp emits the given subscription emits the subscription . <p > <img width = 640 height = 305 src = https : // raw
returns a flowable that emits the source item emitted by the source and the given { @code } and the result of the operator is called . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / average . png
returns a flowable that emits the items emitted by the source publisher to determine whether the subscription signals an error message . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / master . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher and its contents . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher and emits the resulting items . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / master . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the given items in a given fashion and emits the resulting values . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the items emitted by the source publisher and emits the resulting value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a flowable that emits the total items by applying the specified { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
returns {
returns a flowable that emits items emitted by the total number of items emitted by the specified observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / png . png alt = > <dl > <dt > <b >
returns a flowable that emits items emitted by the source publisher to the source publisher wait until the current time of the flowable emits a sequence of items emitted by the source publisher to the specified number of items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex
returns a flowable that emits the result of applying a duration of time to a window of the specified duration . the resulting publisher will be emitted by the time window size and duration units . the resulting publisher will be emitted from the source publisher to the sliding window of the specified duration . the resulting publisher will be emitted by the
returns a flowable that emits items emitted by the specified duration of time windows and windows composing a duration of the specified duration . the resulting publisher will be emitted by the time window to emit the duration of time between the source and time of the window .
returns a flowable that emits the result of a window of the specified duration . the resulting publisher will be emitted by the source publisher to emit a fixed duration elapsed time elapsed time and log the duration of time to the specified number of seconds . the resulting publisher will be emitted by the source publisher to emit a fixed duration elapsed
returns a flowable that emits the result of invoking the operation on a single item emitted by the source publisher to a single band rather than invoking a specific view of the specified publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images /
returns a flowable that emits the items emitted by the source publisher of items emitted by the source publisher to the specified selector . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = >
returns a flowable that emits the result of invoking the given operator on the specified sliding view of the specified { @code publisher } . <p > <img width = 640 height = = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt
returns a flowable that emits the result of applying a given transformation publisher to a flowable that emits the result of applying a given transformation to a single subscribing to a single value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a flowable that emits the items emitted by the source publisher to the given source publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the source of items emitted by the source publisher to the given source publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
{
{
run a task on the given executor .
awaits the number of messages in a { @link } .
complete the request .
creates a default value for the given default value .
inserts a single item into the queue .
/ * ( non - javadoc )
verify that the given { @link } is available .
returns a new maybe that emits the given items and emits the value of the given sequence number and emits the value of a single item emitted by the scheduler . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / userguide / . specifyingconditions .
returns a flowable that emits the items emitted by the source publisher and emits the value emitted by the observables . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > { @code } < / p > <p > <img width = 640 height = src = https : // raw .
returns a flowable that emits the result of the specified delta .
returns a flowable that emits the result of calling this function when the specified number of items emitted by the specified scheduler is exceeded . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt
returns a flowable that emits items emitted by the source publisher to the total number of items emitted by the source publisher and emits the specified subscription and then emits the items emitted by the source publisher and emits the current time and the current time of the receiver . <p > <img width = 640 height = 305 src = https :
returns a flowable that can be used to create a new flowable that can be used to create a new { @link } .
requests the request to be sent to the request .
sets the resource at the specified index .
replaces the existing item at the given index .
returns the result of a call to { @link () } .
adds the given to the queue .
remove the given from the queue .
create a new { @link completionstage } that can be used to create a new { @link completionstage } that is applied to the given { @link observable } .
returns a flowable that emits the result of completion on the fx thread . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
creates a { @link } from a { @link transformprocess } .
creates a new replay batch size from the source buffer .
creates a new { @link } .
creates a new { @link } .
creates a replay replay on the subscribing to the given source stream .
creates a new { @link } instance .
creates a new { @link scheduler } initialized with the default implementation for the { @link com . netflix . . } .
creates a serializer for the given serializer .
returns the generic type of the given interface .
creates a new { @link } that is the current call of the given callable chain .
create a proxy instance with the given class .
adapter for { @link } .
returns the next call to the given { @link } .
sets the request body to the given { @link mediatype } for the given type .
returns the {
creates a converter for the given type .
/ * ( non - javadoc )
returns the converter for the given type .
creates a new instance of { @link objectfactory } .
creates a new { @link } instance .
creates a new { @link scheduler } that can be used to create a new fiber subclassing the fiber s default { @link taskscheduler } created by the scheduler .
create a new instance of the class that can be used to create a new instance of the given type .
parses the given postmethod s { @link } .
creates a new instance of { @link } .
sets the amount of milliseconds to the specified amount of time between the specified amount of time .
sets the error message as a { @link } .

the given { @link } to the given { @link } .
creates a new { @link response } with the given { @link response } and { @link response } .
creates a response body from the given { @code response } .
returns a response body with the given code received by the given code received by the given code received by the specified code .
converts a { @code response } into a { @code response } .
processes the and the to determine if the is a valid .

returns the character character in the input string .
load the .
returns the next of the specified docx .
resets the input stream to the input .
process the to the given .


removes all the items from the list of all the children of the given path .
{
fills the reader with the given reader position and reads the buffer .
/ * ------------------------------------------------------------
adds the path to the path .
output the current line and returns the index of the first one .
adds the first character at the specified index .
returns the next token from the given
resets the list of all the segments to be used .

add cross - cross - cross - cross - model to add cross product to this model
add the given to the
removes the last token from the last set of the given path .
checks whether the given {
returns the number of in the given .
returns the weight of the .
set the current time to the current time .
disables the word for the given {



checks whether a character stops starts with the given character .
prints the postscript - syllable to the .

/ * private void ( )
get udp list of ip addresses from the specified remote host .


analyzes the given and
/ * run the run loop .
adds the given columns to the resulting cell .
returns the first { @link } that is the first row of the first row of the first row .
returns the last element in the last row .
analyze the given
this method is called by the .

output the given { @link } .
specifies that the substring of this character sequence matches the length of the character .
fills the specified key in the given segment with the given key .

returns the map of the .
migrates the srid of the segment .
compares two integers .
returns the content type of the specified type .
append a new { @link } to the { @link } .
sets the error messages for this converter .
sets the given parameters to be used for the given parameters .
log a request to the logout .
sets the clock skew time .
sets the authorization header for the given dashboard
sets the port mapping for the given port .
create a new user
sets the algorithm used to encrypt the algorithm parameters
handles the { @link } .
returns the method with the given method name .
/ * ( non - javadoc )
{

encodes the given uri string into the uri .
checks whether the given password matches the given password .
validates the version of the version of the version .
disable the given {
gets the version of the current project .

returns true if the given class matches the given class .

create a that contains the ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap
builds a new instance of the builder .
get the object for the given object .
gets the authorization request for the given request .

exchange the specified attribute of a given attribute .
gets the .
fetches all attributes from the given { @link } .
gets the authentication service for the service .
initialize the login url for this login page .
create a new .
sets the .
creates a new saml response .
/ * ( non - javadoc )
returns a new { @link } that will be used to determine the channel of the channel that is being sent .
adds a filter to the list of filters .
adds a filter to the list of filters .
adds a filter to the list of filters .
add a filter to the list of filters .
returns a new { @link } that matches the given { @link } .
returns the { @link } for the given { @link } .
returns the first matched path for the given { @code uri } .
compare the attribute values to the ldap - template and then returns true if the attribute is not found .
retrieves the attributes of the given ldap directory .
returns the set of all the elements in the given search filter .
returns the set of attributes for all attributes in the given context .
extract attribute values from a list of attribute values from shortname
search for all matching files matching the given criteria .
find the matching method for the given parameters .
returns the { @link } instance .
compute the sql statement for the sql statement and converts it into a string representation .
primary key
reads a list of acls from the given list of objects .
/ * private void findall ( ( int int ) { int [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []
converts a { @link } to a { @link }
create a new .

builds the for the user .
sets the for the given { @link net . . }
sets the { @link } for the given { @link net . dv8tion . jda . core . entities . } .
creates a new xml document for the given element .
/ * ( non - javadoc )
creates a from the
/ * private void (
this method will read the of the .
writes the request headers to the response .


this method is called by the constructor .
gets the authenticated user s authenticated group .
create a new instance
/ * ( non - javadoc )
add a filter chain filter .
register a filter to be used by the filter .
register a filter .
returns the shibboleth attribute name for the application context .
{
get a from the given
registers the given { @link field } with the given { @link net . sf . mmm . io . pojo } .
{
returns the authorities for the given entity .
returns the attribute for the attribute .
initialize the login page .
/ * ( non - javadoc )
sets the session - local strategy used to create session .
sets the { @link } for the given { @link session } .
returns the session - based session strategy .
get the session policy .
checks whether the session is allowed .
gets the session - session strategy .
/ * ( non - javadoc )

handles the { @link } .

initializes the handler .
creates a new { @link } for the given { @link } .
creates a new secretkey from a given algorithm .
creates a new secretkey with the given algorithm and returns the specified key .
creates a new { @link cipher } instance with the given algorithm .
returns the specified parameters of this protocol parameter .
initializes the cipher .
initialize the cipher with the specified cipher .
initializes the cipher .

{
{
/ * ------------------------------------------------------------
handle the authentication flow .
handles the request to the server .

/ * ( non - javadoc )
checks the content of the content of this stream .
returns the parser instance .
sets the allowed allowed allowed allowed allowed values for this request .
sets the url .
returns the authorities for the given authorities .
sets the default { @link } for the given { @link net . sf . mmm . io . http . client . spi . } .
returns the configured login url for this site .
returns a new { @link } that is used to perform an authentication request .
returns the page login page for the given page .
update the logout request .
update the shared access for the given { @link } .
register a { @link } .
sets the { @link } for the given { @link } .
sets the {
dispatch the given request to the given list of { @link } s .
validates the given time and returns the response .
register a bean definition for the given bean definition .
/ * ( non - javadoc )
returns the password for the given password .
create a new role
sets the jax - ws endpoint for the given {
sets the {
resolve the given context and its argument .
find the annotation for the given class or null if none .
resolve the given bean and returns the corresponding bean .
create a new

/ * ( non - javadoc )
extracts the cookie from the cookie .
creates a new oauth authentication .
decode cookie string .
encodes the given cookie into a string .
/ * ( non - javadoc )
checks whether the request parameter is a valid request parameter .

sets the cookie to the cookie .
/ * ( non - javadoc )
reads the { @link inputstream } from the input stream .
convert a { @link } to a { @link }
/ * ( non - javadoc )
load users from database .
load the authorities for the given ldap ldap ldap service .
load the authorities for the given ldap ldap ldap ldap query .
creates the user account for the given user .
/ * ( non - javadoc )

handle the request .
sets the error page to the page flow page .
resolve the parameters of a binding .
resolve the context of the given bean into a bean .
returns the request url for the given query string .
create a pattern for a maven project .
gets the port of the given port .
gets the authentication token .
resolve the given { @link } for the given { @link } .
handles the event .
d367572 . 1 . 1 . 2 . 2 . 2 . 2 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0
/ * ( non - javadoc )
this method will be called by the () method .
returns the instance for the given role .
this method is called by the to authenticate the authentication .

creates a new from the .
sets the for the given import annotation .
{
{
creates a new instance of { @link } with the given { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
sets the map of build parameters .
adds a filter to the list of filters that are selected by this filter .
/ * ------------------------------------------------------------
logout the given request .
/ * ( non - javadoc )
this method is used to set the jaas logged in configuration .
authenticate the authentication token .
handles the login process .
publish an event to the current publish event .
creates a new { @link } .
returns all attributes of this configuration .
sets the authorities for the given list .
checks the token of the given { @link net . dv8tion . jda . webhook . webhookclient webhookclients } .
builds the url for the given url .
{
sets the environment variables for this environment .
returns the request parameter .
checks whether the request is a grails - request .
/ * ( non - javadoc )
sets the for the given { @link } .
sets the for the given entity .
resolve the given { @link } and registers the { @link } .
create a jwt - jwt token from the remote endpoint .
{
/ * ------------------------------------------------------------
creates a object
{


{
adds a new user to the twilio api to create the user .
adds a user to the user .
filters the spring security context .
validates the url to the url
generates the passphrase for a challenge .
creates a map of the given array of strings .
splits a string into a string .
this method is called when the client is invoked .

this method is called by the method to perform the actual invocation of the .
checks if the given authentication is not authorized .
attempts to delete the credentials from the credentials of the given credentials .
gets the for the given service .
add parameters to the client .
/ * ------------------------------------------------------------
checks if the request is a proxy .
returns true if the request is a valid service .
this method is called by the to determine whether the request is a proxy or not .

determines whether the request should be used for the request .


find the web web web web web web web web web web web web web web web web web web web web applications .
find the {
creates a new { @link } instance .
creates a based on the { @link } .
filter the results of the filter .

returns the base identifier of the given .
send a redirect to the url .
authenticate the user in the user to authenticate the authentication .
creates a user account for the given user .

{
/ * ( non - javadoc )
build the url for the request .
gets the uri of the given { @link } .
encode a string to a po / po / v6 string .
get the user credentials from the given authenticateduser
returns the authentication object that is the first oauth of the authentication .
{
{
gets the for the given ldap group .
returns the { @link } for the given { @link } .
creates a from the
creates a that is used to create a .
sets the {
sets the for the given entity .
/ * ( non - javadoc )
this method is called by the servlet to perform a http request and then calls the default implementation of the request .
sets the token to use for the response .
sets the response to the given { @link } .
returns the { @link } for the given groups .
/ * ( non - javadoc )
called when the client wants to create a new instance of the given { @link } .
gets the service url for the service .
load the saml assertion .
register a { @link } .
sets the { @link } for the given { @link } .
sets the {
returns the url of the web server .
gets the request for the given { @code } .
load a userprincipal user .
load the from the given user .
request the request for the request .
<p > . < / p >
create a map of { @link } s for the given { @link } .
authentication .
creates a request that generates a request body for the request .
invoke the servlet request .
checks whether the given object is a valid subject .
/ * ( non - javadoc )
creates a new token with the specified id .
concatenate the array of arrays .
获取子数组
returns the authorities for the given role ids .
converts the given {
returns the valueset for the given value .
add the given value to the list of authorities .
get the principal for the given request .
returns the { @link } for the given { @link } .
sets the { @link } for the given { @link } .
sets the { @link } for the given { @link } .
sets the object to be used to enrich the specified object .
get the shared { @link } for the given type .
adds the given { @link } to the { @link } .
returns a list of all the registered { @link com . netflix . . } s
removes all the riak entities from the given class
removes the given class from the given class .
/ * ( non - javadoc )
{
gets the object for the given { @link object } .
called by the server side .
this method is called by the inability to perform a request .
builds the url for the request .
invokes the { @link } and kicks off the call to { @link } .
/ * ( non - javadoc )

returns the roles for the given roles
sets the subject to the group .
matches the given { @link } to the { @link } .

handles the login request .
/ * ( non - javadoc )
attempts to release the user logged in .
this method is called by the user to call the () to call the () method .
create a new credentials from the credentials .
gets the authentication for the given <code > / code > .
sets the url of the .
sets the url of the user url to redirect to the user .
sets the url to the url .
apply a mapping to a model
sets the contacts of a user .
strips the path parts of a path .

sets the to be used by the .
sets the metadata for this model .
create a new object from the given .
decodes a token to a duracloud - encoded token .
handles the { @link } .
returns true if the given class is a spock .
introspect the {

returns true if the current access token is a valid access token .
creates the filter for the request .
checks whether the current user is the current user to the current user .

deserialize a json object from the server .
initialize the servlet manager .
get the from the server .
create a new oauth2 - based access key for the given key .
create a new { @link } object from the given { @link } .
create a new from the given .
get the service for the service .
set the authentication methods for the given { @link net . sf . mmm . util . collector } .
called when the client reroute to send to a given { @link } .
adds the given roles to the given { @link } .
{

create a from the .
writes the http headers to the response .
adds the header to the header .
sets the .
creates a new filter header .
returns the list of writers .
register a filter with the given filter .
register a filter .
register a filter .
get the number of fields in the given class .
{
returns the scopes of the given scopes in the given scope .
sets the authentication manager to use for authentication .
get the service user information for the given user .
sets the { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
display a page view .
add a user - defined page view .
adds a permission to the list of users .
revokes permissions for a specific user .
returns the role prefix for the given role .
{
creates a builder for the given code .
creates a builder for the given error code .
matches the provided { @link net . dv8tion . jda . core . jda . } .
create a new instance of { @link } from the resource .
create a resource factory for the resource factory .
create a object from a resource .
{
create a new .
returns the effective access control for the given portlet or null if none .
creates a filter instance of the argus .
create a new instance of { @link } from the resource .
create a new instance of the given resource factory .
creates a new object from a string .
create a new that matches the given pattern .
creates a new { @link } that matches the given pattern .
returns the attribute names of the given attribute name .
returns the first attribute value that matches the given attribute name .
handle the user callback .
encodes the given string into a byte array .
decodes a byte array into a string .
gets the from the given security token .
get the names of the methods that are defined by the given method name .
looks up the parameter definitions for the given parameter .
find the parameter name for the given annotation .
adds a contact to a contact .
writes the headers to the request .
sets the specified {
add a new to the list .
sets the report uri .
{
adds a method to the list of the .
add a class name to the list of methods that are used in the method .
adds a method to the list of methods that are the method of the specified method .
adds the given method to the given list of methods .
{
match the given name and method name
returns the port for the {
saves the request to the session .
returns the current session token from the current request .
create a new instance from the given .
matches the provided { @link net . dv8tion . jda . core . jda . . } .
create a new { @link } instance .
creates a {
creates a new { @link } for the given { @link role } .
/ * ( non - javadoc )
sets the request to use for this request .
returns the request parameter that matches the given pattern .
creates a list of parameters for a given method .
add a request to the specified uri .
returns a new {
resolve a { @link } from the given { @link javax . servlet . keymanager } .
{
authenticate the given credentials in the authenticateduser and the user is the user .
handles the given { @link } .
{
{
/ * ( non - javadoc )
returns the dns ldap dns dns query .
sets the ldap pattern for the given ldap group .
handles the { @link } .
creates a map of the { @link } s for the given { @link } .
called by user .
checks if the uri is allowed to be allowed to access the server .
checks if the given uri is allowed to access the given {
{
/ * ( non - javadoc )
returns the header of the given header .
returns the value of the named parameter .
gets the principal of the given principal .
/ * ------------------------------------------------------------

get a contact for a contact
sets the {
post - processing processing .
/ * ------------------------------------------------------------
clears the request .
循环向上转型 并强制设置为可访问 .
get the field of a field .
called by the { @link ( ) } method .
creates a new service url .
creates a redirect url for the url .
sets the for this .
add roles for the given
find all the synonyms for the given dn .
build the roles for the given parameters .
populate the object .
returns the byte array of the given byte array .
adds the given { @link } to the { @link } .
sets the logout success .
sets the { @link } for the given { @link net . dv8tion . jda . core . jda } .
returns the handler for the given handler .
create a to use for handling the logout request
get the attributes of this class .

encodes the given string to the uri .
checks whether the given { @link uri } matches the given password .
/ * prefix - >
authenticate the given request .
login to a given request .
log a request to logout .
sets the {
/ * ------------------------------------------------------------

checks whether the given path is a valid path .
checks if the given list of filters should be included .
checks if the given list of is available
register a {
returns the class for the given class type .
returns the throwable that caused the exception of the given throwable .
extracts the throwable s cause from the throwable s cause .
returns the first chain of the first chain of the given chain of the given chain .
verify that the given throwable is a valid type of the given throwable .
returns the proxy for the given list of strings .
register a
sets the policy to be used by the client .
sets the for the given entity .
add the given { @link } to the { @link } .

/ * ------------------------------------------------------------
/ * ( non - javadoc )
converts the given set of authorities to the set of authorities .
checks if the expected part matches the expected value
{
build a request for the oauth authorization code and add it to the oauth .
sets the authorization authorization request .
register a { @link } .
handles the http request and redirects it to the response .
save the request to the request .
sets the url to the url .
authenticates the authentication token for the given authentication token .
sets the input {
authenticates the authentication method .
load the given userdetails from the given { @link xmppconnection } .
creates the user for the user .
<p > creates a failed error . < / p >
returns the cache for the given request .
build a request url from a url .
builds a url url from the url .
build a request url from a request .
builds a url from the request url .
checks whether the given url is a valid absolute url .
creates a list of for a given topic .
{
prints the given character to a string .

convert a guid to long
sets the password of the given password .
create a new serverdetails instance from a credential .
build a { @link net . dv8tion . jda . core . jda } object from the given { @link } .
/ * ( non - javadoc )

sets the { @link } for the given { @link } .
sets the { @link } for the given { @link } .
returns the { @link } for this handler .

returns a request that is used to retrieve the request from the cache .
returns a mapping from the given map .
acl - only
creates a new batch entry for the given acl .
create a new object that can be used to create a new object .
creates a new primary key for the given type .
create a new primary key from the given authenticateduser .
create a new primary key from the database .
retrieves the primary key from the database .

update the acl for the given object
saves the request to the request .
creates a new callable .
sets the logout of the logout notification .
create a new { @link } .
returns a { @link } that matches the { @link net . dv8tion . jda . core . jda } .
creates a new { @link } for the given password using the given password .
creates a new { @link } for the given password using the given password .
creates a new { @link } from a password mnemonic .
creates a new { @link } from a password .
creates a new { @code } from the given password using the given password .
create a new expression
returns the { @link } instance that is matched by the current { @link } .

creates a new { @link } from the given { @link } .
/ * ( non - javadoc )
writes the headers to the response .
<p > . < / p >
obtains the current authentication token from the given { @link authentication } .
sets the { @link } for the given { @link } .
sets the { @link } for the given { @link } .
sets the { @link } for this context .
sets the request that will be used to create a request that can be used to create a request that can be used to create a request that can be used to create a request that can be used to create a request that can be used to create a request that can be used to create a request that can be used
returns the { @link } for the given { @link } .
returns the default { @link } for the given { @link } .
returns the session - time strategy that is used to create a new session .
create a new { @link } for the given { @link } .
handle http request .
returns the url for the request .
determines the url of the request .
sets the default url for the given url .
sets the url parameter .
returns the directory of the given {
gets the credentials for the given request .
invoke the checkout
build a {
creates a new instance of { @link } .
introspect the service and return the response .

this method is used to authenticate the authentication .

get the service for the given userregistry .
create a map of the { @link } s for the given { @link } .
/ * ( non - javadoc )
sets the .
{
creates a spel checker for the given .
resolve the service for a service - defined jax - rs service .
resolve the ip address of the service .
resolve the dns dns dns dns dns on the hostname of the dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns dns
resolve the service - value for the given service entry .
prepare the request to the client .
get a context for the current context .
posts a bean into the bean . <p >
destroy all the registered beans .
sets the string values of the string .
sets the {
format a date object .
gets the current date as a string .
parses the date and time string .
parses a date from the given date and returns the date .
updates the key for the given key .
creates a new instance of the { @link methodinvocation } .
creates a new instance of a method invocation .
create a new instance of a method object with the specified name and arguments .
/ * ------------------------------------------------------------
sets the readiness of this request .
returns a pair of type { @link mediatype } for all types of type { @link typeinformation } .
returns a pair of patterns that match the pattern pattern .
sets the {
creates a new constraint that represents a new constraint . the constraint must match the message .
sets the handler for the given
creates a new { @link } for the given metadata .
create a user agent from the given authentication credentials .
sets the realm name .
sets the data source for the given datasource .
sets the ldap username for the user .
sets the keystore .
handles the authentication method .
sets the {
commit the commit .
initialize the { @link } with the given { @link } .
<p > método que

create a new instance of the given resource type .
create a new instance of the given resource type from the resource .
creates a new instance of the object .
{
/ * ( non - javadoc )
find the method with the given annotation .
gets the security credentials for the given subject .

change the user password for the user .
builds the group name .
sets the group name .
/ * ( non - javadoc )

/ * ( non - javadoc )
sets the sessions for the sessions that are not expired .
{
/ * ( non - javadoc )
build a request that can be used to build the oauth authentication request .
authenticates a authentication method .
copy the from the source to the
handles the session back .
handles a session event .
/ * ( non - javadoc )
returns the list of filters that are the request for the request .
get the list of filters for a given url

returns the servletcontext for the servletcontext in the servletcontext .
creates a new authentication token from the given { @link authentication } .
checks whether the acl is authorized .
register a bean definition
close the context .
returns the base name of the given name .
returns the distinguished name for a given name .
sets the for the given http request
/ * ( non - javadoc )
sets the authorization attribute for the specified request .
sets the value of a named parameter .
sets the field name to the given field .
add a field to the list of submitted fields .
sets the field names of the given field .
sets the user presentable authentication token .
sets the for the given .
creates a new { @link } for the given { @link authentication } .
sets the filters that the filter is the same as the filter .
sets the filter to be used to filter the results .
replaces the given filters in the given list of filters to the given list .
replaces the given filter with the given filter .

returns a list of arguments that are arguments .
get a response from a path .
get a response from a path .







patch ( )
patch / patch / post / / / / / / / . html


creates a new request for a { @link response } .
creates a new request with the given parameters and returns the response .
creates a new request with the given parameters and returns the response .
creates a new request with the given parameters .
creates a new { @link } for the given { @link } .

creates a new { @link } for the given user .
creates a new { @link } from the given jws - encoded jws .
creates a certificate signing certificate .
creates a new certificate from the given certificate .
creates a new trust store from the myproxy server .
creates a new { @link } from a { @link } .


resets the configuration file .
-
enable logging out of logging
sets the password for a given password .
sets the truststore to use for the password .
sets the truststore to be used for the keystore .
sets the password for the given password .
sets the password for the given uri .

sets the host port of the host .
sets the proxy port of a proxy object .
prints the response headers to the response body .
returns a new { @link } which is used to create a { @link } from the { @link } .
returns a new { @link } for the given charset type .
returns the charset for the content type .
returns the charset charset charset for the given charset .
create a new { @link } for the given charset .
returns a new { @link } that contains the given charset encoding .
sets the content type for the content type .
encode a configuration content type .
returns a new { @link } that can be used to convert the { @link } to { @link } .
returns a new { @link } that contains the given { @link objectmapper } .
returns a new { @link } that contains the { @link } and { @link } .
returns a new { @link } that contains the { @link } and { @link } .
returns a new { @link } that can be used to convert the { @link } to a { @link } .
create a new { @link } that is used to create a new { @link } that is used to create a new { @link } .
/ * ( non - javadoc )
convert a { @link } to a { @link } .
create a new { @link } from a configuration .
create a new configuration object that can be used to create a new configuration object that is produced by the configuration .
create a new { @link } instance with the configuration provided by the configuration .
/ * ( non - javadoc )
construct a new configuration object from a configuration object .
/ * ( non - javadoc )
create a new { @link } instance with the configuration parameters and the configuration .
/ * ( non - javadoc )
create a new configuration object that can be used to create a new configuration object that can be used to create a new configuration object that can be used to create a new configuration object that is produced by achilles configuration .
decode the given url to a string .
returns a response body from the given response body .
creates a new certificate .
creates a new certificate .
creates a new certificate chain .

create a new { @link } with the given capabilities .
create a configuration properties for the configuration .
get a property from a configuration property .

<p > . < / p >
sets the properties of a document .
/ * ( non - javadoc )
get the value of the named parameters .
get the object associated with the specified map .
post .
adds the specified patch to the specified { @link com . hazelcast . rpc . } .
updates the given closure with the specified parameters .
returns a request body with the specified default value . <p > if the request is <code > / code > then the default value is returned . <p > the default implementation is invoked in the request . < / p >
returns a request object with the given parameters and returns the result as a <code > java . io . inputstream< / code > . <p > if the request is <code > / code > then a <code > java . io . inputstream< / code > argument returns <code > true< / code > if the request is <code >
performs a request to the specified uri and returns the result .

builds a map of all the translators configured for this request .
returns the { @link } for the given { @link } .
sets the uri of this uri .
sets the headers for this request .
sets the host to use for the given http proxy .
sets the name of the control .
sets the header value for the given header .
sets the headers for the headers .

sets the charset to the builder .
returns the default default {
sets the for the given request .


{
/ * ------------------------------------------------------------
{

sets the access token .
returns the content type of the given http response .
sets headers to be used in headers .
creates a new instance of the .
resets the configuration .
get the for the given path .
get the for the given path .





create a new .
create a new { @link } for a given path .

creates a patch request for a patch request .
create a new with the specified options .
create a new with the specified options .
create a new { @link } with the given parameters .
creates a new instance of the given { @link } .
create a new instance of { @link } .
create a new instance of a { @link } object .
creates a new { @link } for the given { @link } .
creates a new { @link } for the given { @link } .
creates a new { @link } for the given credentials .
creates a new { @link } for the given { @link secretkey } .
creates a new { @link } instance .
enable logging to use for logging purposes .
create a new {
create a new { @link } with the given path and the given path .
create a new { @link } with the given parameters .
create a new { @link } for a given { @link } .
sets the content type .
sets the content type to use for the content type .
sets the header headers .

returns a {
returns a new {
/ * [ deutsch ] <p >
returns a {
returns a new {
returns a {
returns a {
returns a {
returns a {
sets the header to use for the given header .
expect a header value to be used for the given header .
expect a cookie to be used for a cookie
expect a cookie to be used in a cookie .
expect the given etag expected value .
sets the expected condition to the given { @link } .
sets the root path of the root root path .
append a path to the list of paths .
expect a uri to use for a given uri
expect a uri to be used for the given { @code path }
add a builder for the given http response builder .
sets the log .
register a parser to be used by the parser .
create a { @link } for a schema .
creates a { @link } for a schema .
create a { @link } from a schema .
create a { @link } for a given schema .
creates a new { @link } that matches the given { @link } .
creates a new { @link } that matches the given { @link } .
creates a new { @link } that matches the given { @link } .
retrieves a single entity from the given entity .
gets the value of the entity from the entity .
returns a list of entity entities found in the given entity .
get the values of the entity .
creates a new { @link } .
creates a new { @link } for the given { @link authentication } .
sets the host to the given host .
sets the username and password .
returns a new {
returns a { @link } that can be used to create a { @link } for the given { @link } .
returns a new { @link } that is used to create a { @link } for the given { @link } .
create a new { @link } object for the given { @link } .
create a new { @link } for the given { @link } .
create a new { @link } for the given { @link } .
returns true if the uri is a uri .

sets the .
returns the content type header value .
creates a request that is a http request and returns the response .
creates a mock object from a given mock object .
sets the header name .
/ * ( non - javadoc )
returns a new {
returns a new {
<p > sets the default values for the given <code > language< / code > and the default value . < / p >
returns a new {
returns a new {
sets the value for the specified object .
sets the value of the specified object to be built in the response .
adds a new session to the list of acceptable secondary names .
adds a new attribute to the list .
add a header parameter .
add a new to the given file .
add a new to the list of allowed members .
add a new content type .
adds a new content - type header to the list of members .
sets the session id for the specified session id .
sets the object for the application .
adds a new { @link } to the request .
sets the parameter .
sets the parameters for the given parameters .
sets the jax - rs client configuration parameters to the client .
add a new client to the client .
creates a new { @link } instance .
creates a new { @link } instance with the given { @link } .
get the json representation of a path .
get the int value for this field .
get the byte representation of the byte .
get the short value for the given path .
get float from the given path .
get the double value for the given path .
get the long value for a given path .
returns a list of { @code path } from the given path .
get the path of the path .
converts the given json object into a json object .
get the object corresponding to the given type .
create a jsonpath path expression
print the stack trace of the given <code > string< / code > to the output .

sets the configuration properties for the configuration .
create a new
get a configuration property .
unmarshals a map declaration prefixes .
{
/ * ( non - javadoc )

returns a new { @code namespace } with the given namespace and namespace .
returns a new {
returns the content type of the specified charset .
returns the charset charset charset for the given charset .
returns the charset for the content type .
create a new charset for the given charset .
returns the charset charset toggled .
creates a new { @link } .
get the path of the specified path .
get a list of path from a path
get the map of the key - value mapping from the map to the map .
get the object for the given path .
get the int value for this path .
get the boolean value of the path .
get the character ( or a ) or a character if it is not a character .
gets the byte path of the specified path .
gets the value of the specified path .
get the float value for a given path .
get the double value of a path .
get the long value of a path
get the string value of a given path .
get the uuid from the path
returns a new path object that is converted to a path .
get the xml content of this xml document .

sets the object mapper to use for the given object .
sets the object type .
add a cookie to the server .
add a parameter to the specified parameter .
add a parameter to the list of parameters
add a parameter to the query .
add a query parameter
add a parameter to the builder
add a parameter to the builder
add a parameter to the builder .
add a parameter to the list of parameters .
sets the key - value pair .
sets the truststore to use when authenticating the truststore .
add a header to the given list of header values .
add a new content specification to the given file .
add a new body to the list of body .
sets the session id .
add a request builder to the twilio api to specify the request builder .
set the .
sets the proxy port for the given host .
creates a new .
matches a path to a path .
create a new { @link } with the given path and path .
create a new { @link } with the given path and path .
create a new { @link } for a given path .
returns a filter that matches the given matcher .
creates a new keystore from the given keystore and keyfile .
stores the given key store .
returns a { @link } that trusts the ssl certificate chain .

creates a ssl ssl certificate for ssl / tls ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl ssl
returns the cookie name for the specified cookie .
returns the cookie value for the given cookie name .

create a new instance of the given type from the given class .
remove all the keys from the source list .
adds the given bindings to the list of the members and the given bindings .
binding for { @link ( object ) } { @link () }
binding for { @link ( object ) } for binding to the given { @link } .
get the binding for the given key .
returns true if the keytype key is a member of the given key .
creates a new binding for the given key .
convert a getter to the binding .
removes the binding from the given bindings .
remove a binding from the binding .
returns the dependencies of the given { @link } .
create a binding binding from the given map binding and annotation types .
create a binding for the given type .
create a binding from a binding annotation .
create a new instance of the given type .
create a new from the given map .
create a new instance of the given { @link key } .
returns the parameter values for the given parameters .
/ * ------------------------------------------------------------
returns all the values of the given parameters .
generates a javascript node for the html .
creates a new instance of the given binder .
creates a new instance of the specified type from the given binder .
returns a new { @link } for the given source class .
creates a { @link } for the given { @link } .
/ * ------------------------------------------------------------
binds the injector binding to the injector .
binds the given { @link } to the given { @link } .
creates a new dependency that is a dependency of the dependency .
returns a new instance of the given class .
returns a new { @link soytype } that represents the { @link soytype } from a constructor .
returns a { @link resolvabletype } for the annotation type .
returns the {
returns the declared { @link types } for the given { @link class } .
returns the set of { @link ( object ) } for the given { @link class } .
checks whether the given { @code } is a member of the given { @code } .
returns the set of all known subclasses of the given { @link class } .
returns true if the given method is a method with the given method name .
checks whether the given { @link method } is a member of a given { @link method } .
initialize the service .
returns the members of this member .
returns a new instance of the given instance type .
returns a new instance of the given type from the given { @code } .
returns a { @code } for a given { @code } .
returns a { @code } that is the given { @code } and its type of { @code null } if the given { @code throwable } is not a { @code runtimeexception } .
returns the generic type of the given class .
returns the { @link java . util . } for the given type .
returns a new {
resolves the given { @code } and returns the resulting { @code } .
returns the {
returns the field type for a field .
returns the parameter types of the given parameter type .
returns the declared generic type for a given generic type .
returns the generic type of the given method .
returns the key for the given key .
returns a { @link } that is the type of the given { @link java . util . map } of { @link } .
returns true if the given type is a type of the given type .
returns the type of the given type .
returns the class of the given class .
collects the transitive parameters of the .
adds the given converters to the builder .
returns a new class loader for the given class .
creates a new instance of { @link } .
creates a new instance of { @link } .
checks whether the given { @link classloader } is a valid { @link } .
returns true if the given { @link methoddescriptor } is a member of the given { @code member } .
creates a new { @link } instance for the given { @link } .
gets the value of the named property .
removes the given key from the map .
returns the annotation for the given annotation .
/ * ------------------------------------------------------------
validates the given { @link } .
injects the given { @link } and registers them with the given { @link } .
creates a new instance of the constructor with the given argument .
filters the filter definitions .
/ * ( non - javadoc )
resolve aliases for aliases regarding aliases .
checks if the stage of the given stage is a stage .
creates a new { @link } for the given { @link } .
creates a new { @link } instance with the given { @link } .
normalizes the given path .
returns the length of a string .
checks if the given { @link } is a valid binding .
generates a new annotation for the given type .
compares two methods that are not public .
get the hashcode of the given annotation .
convert a class to a string representation .
checks whether the specified {
find the first argument of the given { @link class type } .
find the first annotation of the given annotation if it is not found .
checks if the given type is a type of annotations .
returns the {
find the annotation with the given annotation if the annotation is not found .
returns the { @link annotation } instance .
returns the type of the annotation if the given annotation is not found .
returns the annotation type name for the given annotation .
initializes the delegate for the given delegate .
returns a provider that is used to access the application .
returns the member of a given member .
creates a new { @link } for the given { @link } .
creates a new { @link } .
creates a new { @link } for the given { @link } .
add a new binder to the list of type declarations .
get the constructor for the given constructor .
checks if the given class is a class annotation .
creates a new { @link } for the given { @link } .
returns a { @link java . util . map } of { @link java . lang . } for the given { @link java . util . map } .
returns the key for the given key .
creates a new { @link } for the given { @link } .
returns a key for the specified key .
create a new { @link } annotation .
handles the annotation .
adds a new source to this set . <p > this method is called by the { @link } .
returns the context for the given context .
execute the given { @link } .
binds the given annotation type to the given annotation type .
binds the given annotation to the given {
replace the object with the given properties .
returns the module for a given module .
{
returns true if the given type is a valid type of the given type .
find the constructor for a given method .
returns true if the given parameter is a constructor .
returns the dependencies for the given {
removes all the dependency types from the given set of dependencies .
checks whether the given { @link } is a subclass of the given { @link } .
checks whether the given {
initializes the { @link } .
<p > create a new { @link } for the given method . < / p > <p > the method is delegated to the { @link ( object ) } method . < / p > <p > the method is used to create a new { @link } for the given method . < / p > <p
/ * ( non - javadoc )
returns true if the given exception is a throwable instance of the given throwable and the given exception is rethrown .
checks if the given object reference is not null .
checks if the string is valid and then checks if the condition is met .
adds a new <code > / code > to the <code > / code > .
returns a new { @link } object for the given { @link object } .
formats the given message as a formatted string .
converts an object to a { @link }
creates a new instance of the specified binder .
returns a key that is used to create a key .
find the filter that matches the filter .
checks whether the given {
returns the constructor for the given constructor .
returns the set of dependencies for the given class .
{
returns the dependencies of the dependency .
returns the set of all known classes in the given { @link } .
returns the system option for the given option .
returns the value of the given option as a string .
/ * ( non - javadoc )
returns a parameterized type for a generic type declaration .
returns a parameterized type for a generic type declaration .
returns a parameterized type that represents a generic type .
returns the type of {
creates a module for a module given a module name .
/ *
binds the given argument to the given binder .
binds the given argument to the given binder .
creates a new injector for the given lifecycle .
creates a new injector for the given lifecycle stage .
gets the list of all the script files in this script .
get the stack trace of the given element .
get the number of members in the given { @code } .
initializes the instance .
wrap a callable in a callable .
executes a callable request on the given callable .
returns a callable that is used to create a callable .
validates the value for the given key .
returns the { @link } for the given key .
creates a new { @link } instance for the given { @link list } of { @link } s .
returns a { @link } for the given { @link annotatedtype } .
<p > sets the { @link } to the { @link } . < / p >
returns a key for the given type .
returns a key for the specified type .
returns a key for the given type .
returns a key for the given annotation .
returns a key for the given type .
returns a key for the given type .
returns a key for the given type .
returns a key for the given type .
returns a key for the specified type .
creates a new key for the specified type .
returns a key for the specified type .
returns a {
returns a {
gets all modules that are contained in the given { @link model } .
gets all the elements of this iterable .
returns all the modules in the given collection of modules .
prune all cause of the given throwable to the given throwable .
gets the binding listener for the given { @link } .
creates a new listener that will be called for the specified .
returns the current binding for the given class .
returns the list of all the elements that are contained in the current class .
returns the {
merges multiple messages into a list of all the sources .
format the given arguments and returns it .
format a message .
creates a message .
creates a new { @code message } with the given { @code message } .
creates a new message with the given parameters .
converts an object to a java object .
returns the cause of a throwable to be used to determine the cause of a given cause .
returns the module names for the modules .
get the stacktraceelement of the stack trace .
injects the given module into the injector .
returns true if the class is a class name .
returns a list of strings in the list of strings .
returns the stack trace of the given { @link stacktraceelement } .
gets the class name of the given list of classes .


main method .
convert the given into a .
convert the given array of stack trace to a given {
the dependency is the dependency of the dependency .
push the given key to the given state object .
returns a list of {
create a new instance of the specified instance
/ * ( non - javadoc )

event handler .
adds a new event processor to the processor .
returns the task state of the given task .

register a {
registers the processor for the given processor .
returns the processor for the given processor .
returns the given url .
decodes the protocol protocol from the given protocol protocol .
/ * ( non - javadoc )
/ * ( non - javadoc )
scan the current connection and cleans up the pool .
{
/ * ( non - javadoc )
get the pool connection pool .
remove task from zk .

create a new connection from the pool .
initialize the executor for the executor .
shutdown the connection .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
invokes the supplied call to the specified { @link } .
invokes the supplied callable on the given context and returns the result .
invokes the supplied callable in order to perform a remote call .
invokes the supplied callable in order to perform a request .
invokes the supplied <code > / code > to the <code > / code > .
invokes the supplied <code > / code > to the current thread .
>
invokes a callback method that will be called when the request is received .
invokes the { @link () } method and the callback is invoked .
invokes the { @link () } method and calls { @link () } .
creates a new connection for the specified port .
creates a new connection for the given connection and connection .
retrieves the connection from the connection .
get a connection from the connection .
checks if the connection is available .
closes the given connection
enable the given
sets the connection to the given connection .
disables the given .
disables the connection to the specified {
initialize the channel .
called when the client closes the connection .
close the connection .
sets the value for the given key .
/ * ( non - javadoc )
decode a message from the given bytebuf .
register a { @link } to a { @link } .
registers a processor with the given processor .
send a response message to the server .
dispatches the command to the server .
reads the server - side command .
process the current process .
this method is called by the server to log the log record .
logs the next transaction in milliseconds .
/ * ( non - javadoc )
process a request .
invoke the given {

creates a new {
creates a new { @link } instance .
convert a bitset to a byte array .
converts a bitset to a bitset .
returns the current connection .
add a new task to the remote endpoint .
stop the server .
/ * ( non - javadoc )
executes the given command .
invokes a simulation on the given context .
invokes the supplied <code > / code > to the current thread .

invokes the callback on the given callback .
invokes the { @link () } and invoke the { @link () } method .
this method is used to run the .
filter the connections to the server .
/ * ( non - javadoc )
closes the given list of connections and the current connection to the server .
handles the {
process a command line from the client .
get the value of the specified property in the specified key .
deserialize a 64 - bit string representation of the specified 64 - bit long into the specified { @link com . google . bigtable . runtime . configuration . } .
returns the custom { @link } for the given { @link } .
sets the connection event listener .
log a string to the log level .
returns true if the request is a valid request .
returns the first processor for the given class .
gets the random connection for a given list of random values .
gets the custom { @link } for this { @link } .
get the value associated with the given key .
get the value of the given key in the specified key .
get the property value associated with the specified key .
returns the number of bytes written by the given byte array starting at offset in the given byte array .
resolves the given command and returns the response .
converts the given command object into a response .
converts the throwable to a { @link runtimeexception } .

creates a new { @link } .
prints the port trace for the given port .
creates a new { @link eventloopgroup } that is used to create a { @link eventloopgroup } from the { @link eventloopgroup } .
enable / disable server bootstrap
starts the shutdown hook .

parse a local port of a local port of a local port .



parse the port of the port of the port .
parse the port of the port of the port .
parse a socket from the socket .
parse the given address as a string .
parses the given string .
add a connection to the pool .
remove the connection from the connection .
returns the current connection .
registers a custom serializer for the given class .
returns the custom serializer for the given class .
registers a custom serializer for the given { @link } .
gets the { @link } for the given { @link } .
starts the scheduler .
stops the connection .
{
/ * ( non - javadoc )
{
executes a request on the given object .
executes a request on the given context and calls the supplied callable asynchronously .
executes a request on the given { @link } .
executes a request .

invokes the callback on the given request and executes the given callback .
checks whether a given host address is connected .
returns true if the connection is connected .
initialize the .

returns a new instance
batch
sets the code to use for the given { @link } .
validates the payload .
update the payload of the payload .
checks if the given protocol is valid .
/ * convert a payload frame to a payload .
if the limit is greater than the limit is returned .
/ *
generate a unique key for the given key .
/ *
process a frame .
log a new { @link } .
process a frame .
process the frame and return the if it is not already available .
processes the frame of the frame and the frame .
process a frame frame .
checks the limit of the limit to be written to the given limit .
returns the buffer size of the payload .
returns the total size of the buffer .
handles handshake .
returns the buffer size of the given buffer .
/ * ------------------------------------------------------------
verify that the given protocol is not a valid .
handles a tcp server .
decode the socket to the given bytebuffer .
decodes the handshake .
close the connection .
closes the connection .
generates a new { @link } for the given { @link } .
close the message .
{
{
writes the given list of bytebuffers to the output stream .
resets the connection to the server .
connect the connection to the server .
waits until the specified amount is complete .
returns the port of the given port . if the port is not available the port is returned .
sends a unicast tcp port to the client .
{
/ * ( non - javadoc )
sets the connection timeout .
stop the connection manager .
starts the hub .
restart the connection .
execute the tcp udp connection .
cancel the connection to the connection manager .
main method .
{
{
main entry point .
process the handshake .
unwrap the { @link } and returns the { @link bytebuffer } .
reads the current data from the socket .
reads the current data from the given channel .
stops the server .
returns the port port for the given port .
run the checkout .
reads the next packet from the stream .
called by the client side
reads a record from the current position of the current record .
/ * write a key / value pair to the server
sets the server to run on the server .
checks whether the current thread is a single thread .
shuts down the server .
removes the connection from the connection .
returns the socket associated with the given { @link net . dv8tion . jda . core . entities . connection timeout }
broadcasts the given { @link computationgraph } to the specified { @link net . dv8tion . jda . core . jda } . the { @link () } method will be called on the { @link net . dv8tion . jda . core . jda } of the given { @link net . dv8tion . jda . core . jda } .
broadcasts the specified {
broadcasts the given { @link } from the given { @link object } to the given { @link } .
fill the contents of the file .
transfers data from source to dest .
main method .
start the transaction
{
/ * ( non - javadoc )
executes a named {
executes the given transaction on the transaction
sets the transaction name .
executes a transaction with a given transaction .
/ * ( non - javadoc )
executes a named named transaction with the given name and the transaction .
converts a java object into a typed java object .
wraps the given {
gets the specified message .
gets the message of the given { @link } .
checks whether a particular key is a mobile device or a mobile device or a mobile device or a new gps version of the specified key .
<p > . < / p >
sets the next request .

configure the {
configure the configuration for the configuration .
configure a new instance of {
returns a new {
returns a new {
returns a new with the given bindings .
returns a new {
returns a new { @link } that is the current user of this { @link } .
returns a new {
disables the given class to the given class .
execute the given {
execute a request .
gets the file path .
binding for { @link java . lang . reflect . } for the given { @link class } .
<p > creates a tuple whose value is a tuple with the given tuple and the result of the tuple is the same as the first tuple of the given tuple . < / p >
a { @link #reverse } that is equivalent to { @code b } .
returns a new executor executor .
decodes a header from the given string .
returns a new { @link } that contains all classes that are contained in the given class .
returns a list of all the classes in the list of strings .
get the stack trace of the given { @link throwable } .
create a new { @link } with the given name and name .
creates a new { @link } with the specified unit and unit .
creates a new {

creates a new { @link } instance .
factory method to create a new { @link } with the given name and name .
creates a new { @link } for a given class .
log a message with trace level .
-------------------------------- trace --------------------------------
-------------------------------- the given exception .
debug log message .
debug log message .
debug log output
log a message with the specified arguments .
logs a message to the slf4j rmi message .
logs an error with the given message .
warn .
warn .
warn for warn messages .
error等级日志<br > 由于动态获取log，效率较低，建议在非频繁调用的情况下使用！！

error等级日志<br > 由于动态获取log，效率较低，建议在非频繁调用的情况下使用！！
adds a constraint to the validator .
creates a new instance of the specified class .
returns the {
{
循环向上转型 并强制设置为可访问 .
通过反射 {
returns a method that reflects the specified method on the given method .
/ * ( non - javadoc )
returns the response body of the request .
handles a { @link } .
handles a request that can be used to execute the query .
<p > . < / p >
log the error .
converts a throwable to a throwable that is thrown by the given throwable .
this method is called from the server .
<p > . < / p >
create a new { @link } from the given jar file .
creates a new { @link } from the given directory and return the handler .
creates a jar file from the given jar file .
creates a new { @link } from the given { @link file } .
creates a jar file from a jar file .

returns the result as a series of finding .
consume the messages in the input stream .
converts the given content type to a string .
converts a string into a string using the supplied charset .
creates a new { @link } that can be used to convert the given { @link httpentity } to a { @link } .
/ * ( non - javadoc )
{

returns the result of the { @link } content .

returns the {
creates a new {
returns the status of the input stream .
creates a status from the given { @link file } .
creates a new status file with the given content name .
creates a new status file with the given content - value header .
returns the status of the file .
returns the status of the file .
returns the status of the file with the given content name .


creates a new content file .
creates a new file with the given content .
creates a new file with the given content type .
creates a new cemi message .
creates a new { @link file } with the given content .

returns a new {
returns the result of the file .
returns the file contents of the file .
returns the result of the operation .
returns the file contents of the file .
returns the content of the file .

returns the result of the request content .
returns the result of the request content .
returns the result of the request
returns the result of the request to be used for the file .
returns the result of the request
returns the request content as a string .

creates a new { @link } with the given { @link net . dv8tion . jda . jda . core . entities . } .
creates a new file with the given content and mime type .
creates a new { @link net . dv8tion . jda . core . entities . } .
creates a new { @link } with the specified { @link file } .
creates a new { @link net . dv8tion . jda . core . entities . } .
creates a new { @link } with the given { @link file } s .

executes the given { @link jsondocument json json }

executes the given { @link file } with the given { @link file } s .
executes the given { @link file } to the given { @link file } .
executes the given { @link uri } .
executes the given { @link file } to the given { @link file } .

creates a new { @code } with the given content .
returns a new { @link } with the given { @link file } s .
creates a new { @link file } with the given { @code filename } .
creates a new { @link } .
returns a new { @link } with the given { @link file } s .
creates a new { @link file } with the given { @code name } .

> >






>
checks whether the given { @link file } is a valid mime type .
checks whether the given { @link file } is a valid { @link } .
checks the contents of a file to be downloaded .
checks whether the given { @link uri } is a valid { @link java . io . path } .
checks if the file is a file .


converts the given { @link mediatype } to a { @link mediatype } .
converts mediatype to proto file .
converts a { @link file } to a { @link file } .
converts mediatype to proto file .
converts a { @link mediatype } to a typepath .
returns the content of the given content - length string .
returns the result of a node with the given content .
returns the content of the file .
returns a new { @link } with the given content - type .
returns the result of the file .
returns a new { @link } that contains the contents of the file .
returns a new { @link } that contains the contents of the file .

<p > returns the result of a { @link } . < / p >
returns the result of the { @link () } method .
requests a file to be used for the given file .
requests a file to be uploaded to the specified file .
returns the result of the api .
requests a file to be uploaded to a file .

returns the lucene {
creates a new { @link } from the given { @link file } .
creates a new { @link } from a { @link file } .
returns a new { @link } with the given { @link file } s .
returns the lucene { @link } for the given { @link charset } .
creates a new { @link } from a { @link file } .

>
creates a new server - uploaded file with the given content - type header .
creates a new { @literal } from the given { @link file } .
adds a new server to the server .
adds the error to the server .
adds a new server to the server .

creates a { @link jsondocument } with the given { @link jsondocument } and { @code } .
creates a new genomics file with the given content - type header and returns the result as a result .
creates a { @link } from the given { @link file } .
creates a new genomics api response .
creates a new { @link } with the given { @link uri } .
creates a new genomics api key for given input file .

checks whether the given { @link } is a fragment .



redirects to the given url .
redirects to a result of a response .
creates a new result from the given url .
create a new { @link } .
returns the redirect url for the given url .
returns the redirect for the given site .
/ * ( non - javadoc )
find the user by id .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the list of <code >
get the current user s current time .
set a new fragment to the fragment .
returns the request url .
the request to the host name .
returns a new {
returns a new { @code } that is thrown by the given { @code } .
returns the page page .
create a new { @link } with the given configuration
creates a block of {
creates a new { @link } with the given { @link }

converts a json string into a json object .
create a new { @link jsonnode } from a json object .
parses a string into a { @link jsonnode } .
parses a { @link jsonnode } from a { @link jsonnode } .
{
create a new instance of the given name
create a new { @link } with the given name and the given name .
creates a new { @link } with the given name and the given name .
returns the annotations of the given container container in the given container .
returns all annotations of the given annotation

returns the canonical path of the given url .
synthesizes the user agent name .

>

executes a { @link } for a { @link me . } .
executes the given { @link completionstage } with the given { @code promise } .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
checks whether the given class is assignable to the given class .
wandelt den angegebenen iso - objekt .
creates a new { @link } from a { @link } .
creates a new instance of the given { @link } .
create a new
creates a new { @link } instance .
returns a instance for the given { @link } .

sets the session - cookie string to the server .

sets the { @link } to the given { @link } .
binding for { @link ( object ) } with the given { @code binding } .
adds a annotation to the given class .
returns the {
returns the { @link provider } that is the given provider .
binds the given instance to the given instance .
returns the binding for the given key .
binds the given provider to the given provider .
creates a { @code caffeine } instance with the given configuration .
creates a new { @link } for the specified code .
gets the application configuration for the given application .
gets the for the specified application .
create a new instance from the given class loader .
create a new from a configuration file .
create a new instance from a configuration map .
get the from the given configuration .
applies the database to the database .
applies the database to the database .
removes a database from the database .
creates a new {
adds a new configuration to the configuration .
sets the application configuration .
sets the application modules .
sets the application load .
sets the {
creates a new { @link } instance .
encodes the given cookie into a string .
encodes the cookie into a cookie header value .
encodes the given { @code cookie } into a { @link string } .
{
returns the { @link } for the given context .
marks the given {
converts a json into a { @link } .

parses the given { @link string } as a { @link parser } .
creates a new { @link } instance .
executes the given flow and returns a new { @link } .
create a new { @link } instance .
binds a request to a string .
binds the specified request to the specified { @link request } .
binds the specified fields to the specified fields .
binds the specified fields to the specified {
binds the specified { @link string } to the specified { @link context } .
binds a { @link } to a { @link }
gets the validation message for the validation message .
binds the given parameters to the given map .
binds the specified { @link map } to a { @link map } .
binds the given parameters to the given map .
converts the given argument to a list of arguments .
fill the value of the given value with the given value .

converts a list of strings to a json object .


add a new to this list .
returns the value of the specified {
get the key for the given key .
create a new { @link } with the given key and file name .
get the value of the key / value pair .
fills the {
returns the key for the given key .
parse the given text into a single object .
parse a field from a string using the given text .
print the string representation of the given string to the string representation .
print a string to a string
print a string representation of the given type .
removes the given object from the source object .
register a class using the given formatter .
register a new annotation .
/ * encode cookie header value .


encodes the given { @link cookie } into a { @link list } of cookies .
decode a header to the set of headers that are not allowed .
create a new request stream for a request .
create a new { @link decompressor } with the given content length .
creates a new request path from the given path .
creates a new request path .
create a new path file .
returns the path to the given file .
creates a new file from a file .
returns the result of the request file for the given file .
returns the response from the given file .
returns the content of the given source file .
creates a new request with the given content type and returns the result as a result .
select node from node list .
<p > a list of <code > iterator< / code > objects each of a typesafe typed <code > / code > objects that can be used to determine the first generic generic . < / p >

returns a that combines the given { @link } into a { @link } .
create a new { @link } for the given { @link } .
returns a new { @link } that contains the { @link } and { @link } .
checks whether the given { @link } is a member of the given { @code bitmask } .
/ * ------------------------------------------------------------
compares two parameters .

compares two parameters .
get the cost of the given primitive wrapper wrapper wrapper for the given primitive type .
returns the number of sampled data for the given data type .
gets the cost of a class .
create a new .
gets the string for the given key .
get the result of the given list of strings .
creates a new {
creates a new instance of the specified url .
creates a new instance of the specified url .
creates a new { @link } from a configuration file .

returns a new {
returns a new { @link } with the given name and size .
creates a new { @link } with the given { @link } .

create a new instance of the bean .
returns a set of mappings that are contained in this set .
create a new { @link }
sort the given array by using the specified order of the given position .
merge the given sorted array by the given index .
sends the specified {
emits the list of methods that are used by the class .
creates a new instance of the specified {
creates a new instance of a class .
creates a new bean instance with the given dwr bean .
route the given object and the given object s route .
creates a new proxy with the given parameters and the given method and order .
find the proxy signature for a given type .
invokes the method on the object with the given arguments .
invoke reflector .
/ * #if ( $templateoptions . lang . java . lang . java . lang . )
load the given index from the given index .
loads the given number of arguments and sets the arguments to the given number of arguments .
emits a field of the specified field in the given { @code string } field .
/ * [ deutsch ] <p > extrahiert <em > { @code : / typeparameter / sub > > } < / p >
sets the type of the given type .
creates the list of objects .
sets the type of the given type .
sets the type of the given type .
processes the given {
asserts that the given { @code } is a valid { @link } .
==============================================================================
wraps the given { @link } with the given { @link } .
resolves the given class to the given { @link } .
sets the superclass of this class .
sets the callback to use for the specified callback .
sets the for the given class .
create a new instance of the specified class .
returns the interfaces implemented by the given class .
filter a list of classes that are done by the given filter .
checks whether the given class is a static class .
creates a new instance of the given type .
creates a new proxy with the specified type .
create a new instance of the interface class .
create a new instance of the given interface .
sets the super class of this class .
get the fields of the specified field .
add a method to the list of methods that are added to the constructor .
add a class to the list of classes that are not affected by this class .
/ * ( non - javadoc )
sets the policy to be used to access the policy .
sets strategy used to set strategy instance .
creates a new entry for the specified entry in the map .
find method for method name .
resolves a relative path to the given base path .
reads the contents of a file .
sets the host to the host and port of the host .
set the request to the given url .
create a new request builder .

returns the given { @link request } .
post requests to the given destination using the specified http method .

creates a patch request .

returns the request body .
trace tracing of the given trace .
create a { @link } .
sets the path of the path .
sets the cookie cookie to the cookie .
add a query parameter to the given name .
query a list of parameters for the given parameters .

query for http / 2 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / 1 / docs / / /

returns the url of this url .
returns the host port of the host .
sets the {
sets the host port of the host .
opens the given connection provider .
opens the given connection .
sets the request to be used to create the request .
sends a request to the remote server .
{
send a { @link } to the handler .
creates a session session session .
sets the properties of the given properties .
sets the value of the named property .
adds a error to the xmlbean with the errors .
remove the start of the end of the end of the end of the end of the end of the end of the end of the list .
returns the length of the given { @code } .
add a new row to the table .
collect all interceptors in the given collection of interceptors .
collects the filters that are merged with the given filter .
collect all actions to be processed by the user .
collects the modules of the given container .
resolves the properties of a given {
{
sets the setter for the given property .
checks whether the property is a valid property .
gets the property value for the given property .
sets the value of the property to be used by the .
{
/ * ( non - javadoc )
{
{
{
/ * ( non - javadoc )
resets the state of the current row to the current state .
sets the object name .
get the object name .
looks up the value for the given object .
get the for the given table .
find the for the given entity descriptor
gets the alias for a given table .
register a table name .
add a parameter to the database .
find the entity for the entity name .
find the entity for the given entity descriptor .
defines the query parameters for the query parameter .
registers a new .
{
{
inject attributes of the current portlet attributes into the portlet .
inject the parameters for the portlet parameters set .
sets the request parameters to be used for the request .
/ * ( non - javadoc )
convert column name to column name .
converts a column name to a column name .

convert value to array .
store the given value at the given index .
returns the first value of the specified type .
returns all the {
resolve the class name for a given class .
resolves all classes in the given class .
expand the interface .
creates a new instance of the class that implements the given interface .
concatenates the given base path to a base directory .
converts a path to a string .
returns the last index of the last character in the given string .
returns the path of the given filename .
splits the given string into a string .
resolves the path to the path .

{
register a class with the vuecomponent
register a component instance
add a action to the configuration
returns the { @link } for the given component .
start the service .
configure the configuration for the given { @link } .
register the component .
<p > . < / p >

<p > . < / p >
{
checks whether the jar file is a jar file .
scan the jar file entry .
scan the given path and path .
prepares a string entry for the given name .
scan the given entry for the given entry .

scan the url of a url .
scans the scan path for the scan .
starts the {
get the char array of the given string .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the { @link } for the given { @link } .
returns the scope of the scope .
sets the scope of the given scope .
parse the message and validates the message and send it to the message .
processes the attachment content .
process the multipart request .
add content to the content .
parse the content of the content to a string .
parse the inline part of the inline body part of the inline body inline inline inline part of the inline body part of the inline body inline inline inline part of the inline body part of the inline body inline inline inline part of the inline body part of the inline part of the inline - form - inline inline part of the
add attachment content to a payload .
add attachment content to a payload .
adds attachment attachment to the email address

decode an array of characters .
encodes the given byte array into a byte array .
encodes a string into a string .
prepare a token to be used for the given session .
grows the set of time to be used to create a new set .
checks whether the given request is a valid session .
checks if the given {


copys the object .
overrides the visitor to find the value of a property with the given name .
{
{
resolve the scope of scope scopes .
creates a new instance of the specified type .
register a scope with the given scope .
lookup the bean definition .
looks up the bean definition for the given bean definition .
looks up the bean definition .
creates a beandefinition for the given mbean .
creates a bean definition for the given class .
registers a bean with the given type and register it .
registers a bean with the given type and register it .
registers a bean with the given name and type .
registers a bean with the given name and type .
remove a bean from the given bean .
remove a bean definition .
resolves the names of the given class names .
register a bean .
register a bean to a javabean property .
register a bean to a bean
register a method to be used by the ejb spec .
register a method with a static initializer for the given bean definition .
register a object .
register a bean with the given name and the method name .
register a class with the given name and the given name .
iterates through all bean definitions and initalize properties of the bean .
<p > . < / p >
sets the properties of the map .
sets the values of the parameters .
returns the value of the current context class loader .
sets the value of the current thread context .
{
{
{
{
intercepte -
prints the request for the request .
prints the response to the response .
resolve the version of a version of a version of a version of a version of a version of a version .
push a short into the given int .
checks if the argument argument is a valid argument .
returns the field name of the field .
returns the name of the method with the given name .
method .




stores the given opcode and the given argument .
returns true if the driver is a .
visits a method call to the method with the given method and modifiers .
prepare a method .
creates a method that is public static method .
visits a given element in the list of kind of element .
creates a new array of primitive types .
stores the given array of primitive types in the given array .

returns the content of the specified path .
resolves the path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path / path
extracts the mime type from the given mime type .
extracts the content of the given content type from the given content type .
extracts the encoding from the encoding .
resolves a file name into a file name .
checks whether the flags is the flags of the flags set .
convert an array of primitive types to contentvalues .
checks if the request is a multipart request .
resolves the authorization header .
returns the request header for the given request .
<p > . < / p >
prepare the file to be used for reading .
prepare the response file for the given file name .
returns the cookie with the given name from the request .
reads the request body from the request body .
reads the request body from the request body .
get the context path for the request .
get the context path for this servletcontext .
store the context of the context of the current context .
store the context context .
returns the value of the attribute as a request attribute .
returns the value of the named attribute as a value .

sets the attribute name .
remove the given attribute from the request scope .
checks whether the given url is a valid url .
strips the session id from the given url .
get the parameter values .
returns true if the request parameter is a request parameter .
prepares the parameter parameters for the given parameters .

copies all attributes from the to the .
invoke the body of the body body and body .
renders the html body of the body of the body .
renders the body of the body body in the body .
sets the attribute name .
remove a named attribute from the scope .
invoke the {
call all the methods on the .
creates a new bean instance .
injects the bean into the bean .
rewrite the given { @link } to the servlet .
/ * ( non - javadoc )
{
add a header to the list of header values .
/ * ( non - javadoc )
{
puts a string value into the map .
add a property to the existing bundle .
returns the number of keys in the given set of all the profiles .
update the profile for the given profile .
get the profile entry for the given profile .
looks for a particular key in the form of a string .
resolves a value for a given string .
extract the profile from the given target string .

converts a string to a string using the given password .

read header header data file header .
copy the contents of the given {
copy the contents of the given byte to the given output stream .
parses the given postmethod into a new { @link } .
parse the action for the given action and registers them in the request .
resolves the given annotation type and registers the given annotation if it is not already present .
register a .
this method is called by the interceptor interface .
returns the action for the given action .
returns the path of the package that has a given package name .

returns the method for the given annotation
parse the given annotation name .
reads all methods annotated with the given method name and method .
create a action for the given action and invoke the action .
{
{
/ * ( non - javadoc )
converts the value to a boolean value
converts boolean value into boolean .
converts value to boolean .
converts an integer to an integer value .
converts an integer to a boolean value .
converts an integer to an integer value .
convert an object to a long value
converts a value to a long value .
convert a value to long
convert an object to a float object .
converts a float value to a float value .
converts a value to a float value .
converts a value to a double .
converts the given value to a double .
converts a value to a double value .
converts the given value to a { @link java . lang . object }
converts a short value to a short value .
converts a short value to a short value .
returns the value of the specified character type .
returns the value of the specified character .
converts a value to a char .
converts an object to a byte array .
converts the value of the specified value to a byte value .
converts a value to the byte value .
convert an array of long values to a long array .
convert an array of strings to a string representation .
convert a class to a v8 class .
converts an object to a { @link biginteger } .
converts the value to a biginteger .
convert an object to a bigdecimal
converts bigdecimal to bigdecimal
/ * ( non - javadoc )
configures the current thread .
register a to the

injects the object to the target object .
visits a class with the given annotation .
resolve the name of the given name into a string representation .

returns the type of the given type .
returns the type of the given type .
find the super class for the given class type .
resolve a type name for a type cast .
resolve the name of a type from a given type name .
scan the list of method names and annotations .
checks if the file is a file .
{
copy the given class to the given class .
sets the major version of the given class name .
puts a new byte vector into the pool .
add a new to the given .
put entry .
adds the entry to the entry .
adds a constant constant for the given element name .
add a constant or enumgroup constant if the constant pool is not already in the constant pool .
adds a constant pool constant pool constant .
adds a constant name to the constant pool .
adds a constant pool to the constant pool .
adds a constant value to the constant .
adds a primitive constant to the constant pool .
adds a long value to the constant pool .
adds a new constant pool constant to the constant pool .
adds a constant definition for the given name to the given type .
adds a constant constant pool constant .
adds a constant value to the list of words .
adds a constant constant pool constant .
add a constant constant to the constant pool .
adds a class loader to the loader .
adds a constant constant to the constant pool .
adds a class to the constant pool .
adds a new { @link } for the given { @link constant } class .
adds a constant pool constant .
add a constant value to the constant pool .
add a new bootstrap to a given {
add a new class to the list of interfaces that are registered with the given method .
add a new type to the list of the type of the given type .
adds the type of the to the list of available columns .
convert an array of primitive values to a float array .
hash name of the given name .

clear the list of all entries .
sets the map of entry map .
removes the mapping from the given name .
returns the value of the named property .
returns the entry for the given entry .
returns all values of the given name in this map .
{
returns a list of entries that are contained in the map .
grows the capacity of this slice .
{
append a buffer to the buffer .
/ * ( non - javadoc )
visit a { @code } .
/ * ( non - javadoc )
create the chain of .
create a new and adds it to the list of arguments .
create proxy proxy .
parse a path from a path .
push a field in a temporary file .
register a servlet context class .

configure the servlet context .
get the number of bytes in this buffer .
returns the boolean value of the specified boolean .
{
get the double value at the specified index .
get float at the specified index .
get the string representation of the given index .
get the long value associated with the specified index .
execute the method .
> > > > > > > > > >
returns all fields of the given class descriptor .
<! -- start generic documentation -- > retrieves the value of <code > resultset< / code > object s corresponding to the specified <code > blob< / code > object . <! -- end generic documentation -- > <! -- end - user - doc -- >
{
creates a bean definition .
convert the current transaction to a planner transaction .
{
{
{
handles a property - specific property - type .
reads the property value from the given source object .
checks if the specified object is a collection of elements .
compose a javamail message .
compose a message into a string .
append a new buffer to the buffer .
rehashes the given <code > size< / code > and <code > hashmap< / code > and store the result in <code > / code > .
puts a value into the map .
{
removes all of the elements from this table .
/ * ( non - javadoc )
{
append the string to the given string .
append the given <code > / code > to the end of the receiver .
append the buffer to the buffer .
writes the contents of the specified writer to the specified writer .
writes the contents of this stream to the specified output stream .
writes the given { @link } to the given { @link outputstream } .
encode a string into a string .
get the string representation of the given key .
get the number of integers .
get the value for a given key .
get the number of float double values .
get the float value for a given key .
gets the jsonobject as a json object .
get the json array as a jsonarray .
/ * ------------------------------------------------------------
get the value associated with the given key .
get the string value for the given key .
get the integer value associated with the given key .
get the long value associated with a key
get a double property .
get a float from the float .
get boolean boolean boolean boolean boolean boolean boolean boolean boolean boolean boolean boolean boolean .
get a json object from the json object
get the value of the given key as a jsonarray .
get binary binary binary binary data
get the value of the key in the configuration
puts a key - value pair into the map
puts a string value into the map .
puts a string value into the map .
puts a key - value pair into the map .
puts a key - value pair into the dictionary .
gets the contents of the folder .

get the folder for the given folder .
receive notification of the email .

delete the message from the incoming channel .
receives a list of messages from the list of messages .
update the email address of the given message .
closes the given folder .

returns the number of rows in the batch size .
parse a string representation of the sql string representation .
returns the string for the given target string .

validates the given rule and returns true if the given rule is not a valid action .
add a custom attribute to the given name .
/ * ------------------------------------------------------------
returns the mime type of the mime type of this extension .

sets the target to target .
sets the target name to be used to create a target class .
sets the target class to be used to create a target class .
resolves the class name of the class name .
process the class .


creates a new instance of the specified type .
prints the contents of the file to the file .

converts a { @link } to a { @link } .
converts a string to a string .

converts a string to a reply .

add a new recipient to the cc cc bcc .
create a new friend
add a new to the list .
returns the subject with the given subject .
creates a new { @link } instance .
creates a new { @link } object .
returns the message for the specified html tag .
sets the value of the header with the given name .
sets the headers for this request .
sets the header to the response .
add attachment to attachments .


creates a attachment document with the given attachment .
detaches an attachment from the given attachment .
returns the array of the array of values in the array .
returns the value of the named property in the specified property .
get a boolean value from the given boolean value .
get a long value from the specified short .
get the long value from the given long .
parses a { @link } .
parses the given { @link } into a { @link } .
append the given element to the end of the receiver .
append a new buffer to the buffer .
/ * ( non - javadoc )
checks whether the given class is a primitive type .
returns the parameter list of all the parameters of the given parameter .
serialize a key to a {
lookup the alias for the alias .
resolve a string value from a string .
resolve a path expression .

returns the last index of a string for the given character .
returns the last index of a string representing the last character .
returns the index of the last character of the given string or a new one .
strips the last character of the given character .
returns the name of the string with the given name .
encode a json string into a json string .
decode a tokenizer from a string .
<p > . < / p >
resolve the name of the given class name .
resolves the given { @link } for the given { @link class } .
resolve entity descriptor for a given entity descriptor .
resolve the class with the given type and returns the corresponding class .

initialize the key and values .

mix the given vector .


/ *
initialize the message .
/ * ( non - javadoc )
convert a byte array to a long array .
<p > parses a decimal digit digit in the era era digits . < / p >
{
{
parse a section from a string .
converts a { @link } to a { @link }
converts a string to a string representation .
build a smarts for a given ptb - .

returns the first comment of the given text .
removes the character from the given character .
wrap a target class to the target class .
returns the path of the path .





unzip a file to a directory .
adds a file to the file .
adds a file to the file .
returns the field descriptor for the given name .
returns the method descriptor for the given name .
get a property descriptor for the given name .
returns the default { @link descriptor } for the given { @link descriptor } .
returns the descriptor for the given class descriptor .
sets the name of the bundle to use with the specified name .
sets the session attribute for the given locale .
returns the locale for the given locale .
/ * ( non - javadoc )
returns the name of the bean with the given parameters .
visits a class .
returns the constant for a given attribute .
puts the annotation to the given {

put the given annotation to the given annotation .

get the long long value of a byte .

reads the contents of a stream from the given inputstream .
returns the first header of the current interfaces in the current classpath .
accepts the { @link classreader } .
reads the given and stores it in the module .
reads the field from the input field .
reads the next and returns the first read - ahead method .
this method extracts the code from the bytecode of the bytecode .
reads a label from the given label .
creates a label label .
creates a label for the given label .
reads the type of the given type from the given list of instructions .
returns the index of the type of the given annotation type .
reads the given type from the given annotation type .
read the parameter definitions from the given input .
reads a {
reads a single element from a constant pool .
this method is called by the {
this method will be called by the {
reads the type information from the given data frame .
returns the next character in the current position of the current position .
reads the attribute of the given attribute of the given attribute .
reads attribute from the given attribute .
reads a int from the file .
reads a 64 bit integer from the serial byte buffer starting at the specified offset .
reads a string from the given array of ints .
reads a string constant pool entry .
reads a string from the given file .
this method is used to find the constant constant pool of the constant pool .
reads a constant pool constant .
{
{
{
/ * ( non - javadoc )
{
{
returns the descriptor for the given class descriptor .
returns the descriptor for the given descriptor descriptor .
returns the map of { @link } s .
create a map of request parameters for the request .
gets the request .
convert an array of primitive values to a long array .
convert an array of primitive values to an array of long values .
convert primitive [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] value [] [] [] value [] [] [] [] [] [] [] [] [] [] [] [] value [] value [] value [] [] value [] long [] [] [] [] [] [] [] [] [] [] [] [] [] []
{
find the file on the file on the file in the given { @link file } .
searches for the specified search path in the given directory .
searches for the given path and returns the first matching path .
searches for the specified search path and returns the path .
{
{
determine whether the file is a parsable file .
get the path of the given file path .
adds a path to the list .
resets the list of all open resources .
returns the next file or directory .
find all files in the file .
initializes the list of files in this set .
{ @inheritdoc }
{
{
returns the { @link } for the given class .
resolves the given type of class .
resolve a bean name .
returns true if the given annotation is a bean annotation .
/ * ------------------------------------------------------------
get the output stream for this output stream .
get the type of a type .
returns the type of the given class name .
通过反射 type signatures return type signatures .
returns the first argument of a given method descriptor .
returns the type of a method descriptor .
returns a type descriptor for a given type .
returns the class name of the class name .
returns the descriptor for the given constructor
returns the descriptor for the given method descriptor .
returns the method descriptor for the given method descriptor .
append the given {
returns the size of this .
returns the first character of a given string .
get the opcode for the given opcode stack
sets the status of the exception .
commits the commit transaction .
commits all resources in the given resource to the database .
rollback all locks that are not released .
**************************************************************
lookup the resource type from the resource type .
push a record to the list of .
pop the name of a name .
write a name to the output stream
write a string to a stringbuilder .
/ * ------------------------------------------------------------
writes the character sequence to the output stream
sets the options .
appends the opening and trailing whitespace character to the given <code > appendable< / code > .
returns true if the tag matches the tag .
start the region .
checks whether the given { @link } is a valid tag .
returns true if the given string is a valid value .
register a pseudo - pseudo - pseudo - pseudo - pseudo - pseudo - pseudo - pseudo - pseudo - pseudo - pseudo - pseudo - pseudo - pseudo - element - wise function .
returns a function that takes a { @link } for a pseudo - element .
{
/ * ( non - javadoc )
visit a method .
visit a {
creates a new method that is the same as the
make a constructor call
this method is called by the super class to collect all methods .
sets the .
returns the list of traits .
find the number of bits in the given range .
find the first element in the first occurrence of the given range .
find the last element in a given order .
starts the { @link } .
<p > . < / p >
/ *
returns a byte [] representation of the byte array .

gets the attribute of the given { @link } .
creates a new { @link } with the given name and type .
create a new { @link } for the given { @link descriptor } .
create a new { @link } for a given { @link } .
returns the field with the given name .
returns the constant used for the given name .
replies the class for the given class .
register a new .
register a class with the given type .
looks for the class of the given class .

creates a proxy object that is the proxy port of a proxy .
creates a new proxy object .
creates a proxy proxy for the given proxy .


returns true if the transaction is a transaction .
remove transaction from transaction .
returns the transaction isolation level of the transaction .
associates the current transaction and stores the current transaction .
creates a new transaction .
/ * ( non - javadoc )
checks whether the given scope is a transaction scope .
/ *
===========


create a new transaction .
create a transaction transaction .

registers the resource manager to be used by the resource manager .
lookup the resource type from the resource manager .
closes the resource manager .
creates a proxy object for the given class .
append the given string to the given string .
returns a new instance of the specified class .
/ * ------------------------------------------------------------
pad the text to be used for the given text .
returns the human readable string of the given unit of bytes .
convert a string representation of a string representation of a string to a string representation .
convert a string representation of a string into a string representation .
converts a string of string representation of a string to a string .
format a string to the given length
converts tab tab tab string to title width .
escapes a string in a string .
unescapes the specified string .
create a new annotation instance annotation with the given annotation .
find the bean for the given bean definition .
returns the bean for the given type .
gets the bean for the given bean .
get a bean definition
initializes the .
initialize the bean populating the bean populating the bean populating the bean populating the bean populating the bean populating the bean populating the bean populating the bean populating the bean .
{
invoke the method on the bean .
creates a bean instance .

add a bean to the bean .
sets the property name to the given value .
get the property value for the given property name .
shuts down the bean .
/ * ( non - javadoc )
/ * ( non - javadoc )
starts the galaxy driver .

{
{
/ * ( non - javadoc )
/ *
returns the value of the specified rule .
{
{
creates a new element that is not a child of this node .
{
remove child node from the last node if children .
find the parent node of this node with the given name .
this method is called from the () method .
{
{
returns the index of the first argument of the argument .
/ * ( non - javadoc )



create a new array of arguments .
create a new array of arguments .


info method .

annotate an annotation with the given annotation .
returns the sql query string representation of a query string .
/ *
returns the class name for the given class .
calculates the tolerable count of the given size to the specified position .
/ * ( non - javadoc )
iterate through the array of items to be added to the object .
joins the given array of tokens into a new object .
replace all occurrences of the given string with the given replacement .
replaces all occurrences of the specified substring in the given string with the given replacement .
replace the characters in the string with the given replacement character .
replaces the first occurrence of the given string with the given replacement .
replaces the first occurrence of a string with the given replacement character .
replaces all occurrences of the given string with the given replacement string .
replace the first occurrence of a string with the given replacement character .
removes a string from the given string .
removes the string from the string .


returns true if the string contains the given character set .
<p > checks whether the string contains the given { @code char } . < / p >
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
returns the last character set in the given string .
returns the string representation of the given string .
returns the substring of the specified character from the specified position .
returns true if the given string is a valid string .
splits a string into a string .

compress a string into a string .
returns the index of the first occurrence of a character at the specified position .
checks whether the given string starts with a given character .
returns the first occurrence of a given substring in the given string .
returns the last occurrence of a string that matches the given string .
returns the last occurrence of a given substring in the given string .
returns the last occurrence of the specified substring within the specified startindex .
returns the last occurrence of the specified character .
checks whether the given string is a valid matcher .

count the number of occurrences of the given substring .
returns the last index of a string array
compares two strings
replace all occurrences of the given string with the given replacement .
replaces all occurrences of the given string with the given string .
returns the length of the given string array .

returns the number of occurrences of src <code > b< / code > and <code > b< / code > .



returns the index of the specified string in the given string .
strips the leading character from the given string .
strips the trailing character from the string .
strips the character character from the given string .
strips the character string from the given string .
strips the character character from the given string .
trims all strings in the given array of strings .
removes all the elements from the given string array .
removes the trailing whitespace from the string .

trim white space characters from the given string .
trim white spaces from the given string .


joins the collection of elements into a single string .
joins the given array into a string array .

checks whether the given string is a valid string .


returns the suffix of the suffix from the string .
.
returns the substring of the given string .
cut the prefix of a string .
cuts a string from the given suffix string .


checks whether a string is a valid character .
insert a new string into a new string .
creates a string representation of a count of line break .
reverses a string .
returns the first occurrence of the specified substring in case of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of
finds the first occurrence of the specified prefix of the given prefix .
returns the suffix of a string with the given suffix .
converts a string to a string .
removes the quotes from the string .
converts a byte array to a hexadecimal string .
returns the string value of the given input string .
get the byte array

{
{
visits a variable name .
{
visits a string annotation .
returns the entity type for the given type descriptor .
register a new to the given type .
register a new
register a { @link } for the given entity type .
remove the given entity from the entity table .
creates a new database entity with the given schema and column name .
creates a new instance of the specified type .
sets the target interface to use for the given interface .
/ * ( non - javadoc )
injects the target object to the target target field .
/ * ( non - javadoc )
initializes the database connection .

/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
{
returns the request url for a request .
returns the encoded string .
returns the byte [] of the given { @code byte [] } .
writes the contents of the file to the output stream .
writes the input stream to the output stream
{
{
visits a method declaration .
appends a string representation of a given argument to a string .
prepends the given string to a string .

{
register a new converter .
register a converter for the given type .
lookup a class with the given type .
converts the given value to a typed array .
convert the value to a collection of type values .
selects all elements matching the given select query .
selects a list of select candidates from the given list of selectors .
processes the template to the select .
returns the first selected node that matches the given xpath .
select the node select box .
returns the first selected node matching the given filter .

walks the tree and adds them to the list of children .
/ * ( non - javadoc )
select the elements of the given node .
{

refills the input stream .
returns the next character sequence that matches the input and returns the number of matched input and the input of the input input .
paging

removes the sql select from the given sql string .
removes the sql - quoted string from the string form of the given string .
remove the last row from the given string .
decode a html tablerow with the given html code .
detects the characters in the given input string and returns the name of the character .
{



/ *
find the column descriptor for the given column name .
find the entity for the given property name .
get column name
returns the column name for the given column .
gets the value of the given object .
sets the value of the specified <code > uidata< / code > to the bean .
get the value of the specified object .
append a string to the string builder .
sets the index of the index to the index .
returns the character at the specified position in the current position .
expand the array to the list of elements .
calculates the length of the
looks for the bean for the given bean type .
creates a new entity with the given name and the given name .
create a bean from the bean .
draws the step direction to the current direction .
/ * ( non - javadoc )
initializes the list of files from the file .
determine whether the file is a file or a file or a file .
set the watch file to the file .
start the polling interval
called by the { @link } .
add an enumeration to the list .
checks whether the enumeration is a enumeration .
convert an array of double values to a double array .
returns the constant size of the dbase field .
add the given byte array to the given byte vector .
matches a float .
appends a new buffer to the buffer .
creates a new { @link java . sql . value } from the given value .
create a new methodparameter for the given object .
create a new methodparameter for the given parameter type .
writes a property to the map . the value is the value of the <code > / code > and <code > / code > .
/ * ( non - javadoc )

parses the page header .
writes the html page for the given html content .
writes the region to the specified region .
returns true if the string is a valid version
start the server .
convert an array of primitive types to an array of boxed values .
<p > . < / p >
{
checks whether the given path matches the given path .
create a new response object from the given output stream .
{
{
{
/ * ( non - javadoc )
{
append the sql for the given entity to the sql .
append the column name to the column name .
add rule rule .
checks whether the given value matches the
applies the given { @code } to the { @code } .
process the rule .
processes the given rule and returns true if the given rule matches the given rule .
{
returns the class name of the class .
{
/ * ( non - javadoc )
returns the index of the first occurrence of the specified number of inserted points in the specified range .
returns log4j level level
returns true if the node matches the node in the given propery
register a { @link } .
bind the configuration annotation for the given annotation type .
registers a new action with the given action .
lookup a { @link } instance from a { @link viewable viewable viewable } with the given type .
sets the configuration of a configuration of this instance .
checks if the annotation is annotated with the annotation .
sets the mail properties to the system properties .
validates that the given value is valid .
checks if the element is a element .
checks whether the given node is a dom node .
checks whether the node is a child of this node .
find the last child node of a node .
find the child node of the given node in the given node .
fix the parent element to be inserted in the element .
returns the cache of all the registered cache entries .
register a new session .
returns the map of session - specific shibboleth session from the session .
returns the session for the given request .
initialize the class with the specified name .
add a new .
add a new .
retrieves the value of the designated resultset in a resultset .
{
process a string .
ends the server .
replace the contents of a string with the given content id .
convert a properties to a writer .
convert properties from properties to a template .
parse the input text into a instance .
add a section to the list of strings .
/ * private void ( ) throws ; ; = ; = ; = new () ; = new () ; = new () ; = new () ; = new () ; = new () ;
add a new mapping for the given key .
compares this { @link comparable } object to another .
convert a string to a string .
converts a string to a string .
converts a string to a string representation .

sets the method of a method .



writes the given type to the given type .

checks if the given class is a valid constant .

adds all consumers of this consumer to the given consumer
{
create a collection of objects representing the type of the collection .
converts an element collection into a collection of elements .
converts an object to a collection of elements .
converts a collection of collection into a collection of type { @link collection }
convert a primitive array to a collection of primitive types .
/ * ( non - javadoc )
add a number to the line .
called by the visitor to create the visit and visit the visit .
put a bytecode point to the bytecode of the bytecode .
adds the given to the list of the that are the same as the .
resolves the bytecode of the bytecode to the given byte array .
marks all blocks of the given block .
add a block of block to the list of blocks .
pushes a new to the current edge .
compares two digits .
fixes the character in the given character .
returns the character character at the given position .
{

writes a byte vector to the current byte vector .
returns the current row of the current row .

puts the current byte to the current byte array .

puts a new byte vector into this histogram .
puts the byte array into a byte array .
enlarges the size of the buffer size .
authenticates the {
authenticates the servlet for the given { @link } .
authenticate the given {
{
{
returns the key - value pair from the map .
finds the localized message for the given message key . if the message is not found then the defaultstring is returned .
finds the default locale for the given locale .
returns the locale for the given locale .
find the bundle for the specified resource bundle .
returns the bundle bundle for the given bundle name .
returns the value associated with the specified array .
checks whether the persistent database is a persistent datastore .
sets the entity id for the entity id .
stores the given entity into the database .
saves the given entity to the database .
updates the entity with the given entity .
update the given properties with the given name and the given properties .
update an existing entity in the repository .
find the entity by id .
finds a property by the given value .
find the first element of the first record in the given filter .
find the first matching item from the given criteria .
finds the first matching entity from the criteria .
deletes a group from the database .
deletes the given entity from the database .
counts the count of the given type in the database .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > modify a property and a primary identifier
decreases the entity for a given property .

returns all the elements in the given target class .



{
/ * ( non - javadoc )
{
{
returns the stack trace of the given stack trace .
get the given throwable s name
get the throwable that is not a throwable .
returns the cause chain of the given throwable .


builds a message from a message .
returns the root cause of the given throwable .
finds the cause of a throwable .

returns the message of the given throwable .
wraps a throwable to a runtimeexception .
unwraps the given throwable to the throwable .
create a new annotation instance with annotation .
register a class to the class loader .
checks whether the class is a class or a cglib - class or a class .
called by the to create a new annotation for the given class .
create a new bootstrap component .
returns the class loader for the given classloader .
returns the classloader of the given class loader .
get manifest from a file .
get the base url for the given grails resource .
returns the classpath for the given classloader .
get the url for a resource .
get the resource url from a resource .
get a resource from the classpath using the given resource name .
get the class of the given class .
get the class name from a string .
load the class from the given class .
load a class from a class .
adds a new route to the route
finds the child of the given node with the given name .
returns whether the given string is a valid uri .
reads the request from the given resource .
parse the request to a request .
converts the given value to a type .
converts the given value to an instance of the given type .

get the value of the specified property in the given array .
sets the value of the specified array to the given value .
returns the index of the given name in the given <code > base< / code > and including the given <code > base< / code > and <code > / code > .
extracts the name of the named property from the given { @link } .
create a bean instance for the given property .
extract the class type from the class .
convert the given { @link } to the { @link } .
extract the type of the given type from the given class .
gets the session from the session .
stop the servlet request .
starts the servlet request .
converts a { @link } to a { @link date } .
converts a { @link calendar } to a { @link calendar } .

parse a http header .
sets the proxy class to be used to create a proxy class .
add a new { @link } to the list .
resolve the class for the given class .
adds a repeatable annotation to the list of classes that are being processed by the given class .
collects the property values of the given property list .
collects the annotations on the class of the given annotation .
create a new constraint with the given constraint .
copy the given {
returns a { @link completablefuture } that completes after the given { @code duration } is received .
{
{
encodes the given uri to a uri .
encodes a byte array into a byte array .
encodes the given { @code string } into a { @code uri } .
encodes the given uri to the uri .
encodes the given uri to the given host .
encodes the given url to the given { @link java . io . charset } .
encodes the given path into a uri .
encodes a query string into a uri string .
encodes the given query string into a query string .
encodes the given uri fragment .
encodes the given uri by appending the given uri .
encodes the given url into a string .
build a new builder for constructing a builder with the given path .
returns the properties of the properties of the properties of the bean .
add property to the given property .
creates a new descriptor property for the given descriptor .
creates a descriptor property descriptor for the given descriptor .
returns all properties of the specified property in the specified property set .
returns the location location of the request url .

/ * public void ( ) { return . () ; }
{
reads a response from the given inputstream .
closes the connection .
{ @inheritdoc }
/ * ( non - javadoc )
prints the current screen .
encrypts the given byte array .
{
> > >
get the list of the given component type
sets the value of the specified property .
> > > > > > > > > > value = > > value = > > value = > value = > value = > value = > value = > value = > value = > value =
execute the method .
convert an array of primitive values to a short array .
{
sets the value of the specified http header .
send the request to the request .
send the request to the request .
adds all headers to the request .
reads the cookies from the response .
add cookies to the request

creates a message from the given message .
sets the email address of the message .
sets the .
sets the message headers .
sets the email address of the email address .
sets the .
adds the message to the email message .
returns the body part of the body part .
sets the content .
creates a body part of the body body .
filters attachment items .
add attachments to the list of attachments .
compares this { @link comparable } object to another .

get the content of the given content type .
saves the given resultset to the set of resultset values .
initialize session .
initialize the database connection .

sets all the rows in the list .
<p > executes the query . < / p >
{
{
sets the number of rows .
sets the maximum maximum count of rows .
execute the given sql query .
execute the update on the prepared statement .
execute the query and returns the number of times the given update is done .
execute the query .
finds the first element in the given { @link } .
{
returns the set of columns that are not defined in the resultset .
returns the key that was previously created with the specified key .
returns the sql statement for the given query string .
creates a new email address with the given address and the given address .
converts a { @link inetaddress } to a { @link inetaddress } .

converts an array of { @link inetaddress } to an array of { @link } .
returns the target object for the given target class .
returns the sole proxy object for the given target object .
parses the string representation of the template .
returns a new enumeration composed of the elements of the enumeration .
returns an iterator that iterates over the elements of the specified iterator .
returns a collection of iterator objects populated with the given iterator .
returns a stream that combines all elements of the iterator into a stream .
returns a stream that combines all { @code completablefutures } into a stream of { @link iterator } .
returns a stream that combines all iterables into stream .
/ * ( non - javadoc )
compares two objects .
adds the content to the zip file .
add a folder to the list of files in the folder .
sets the default {
returns the default {
/ * ------------------------------------------------------------
returns the class name of the given class .
returns the class name of the class name .
sets the path to the given { @code content } .
sets the serializer for the given type .
returns a { @code } that is the given { @code } .
returns the { @link } for the given type .
returns the { @link } for this { @link } .
serialize a json object .
serialize a string to a string .
converts a { @link charsequence } to a { @link charsequence } .
clones the given object .
writes the given object to a file .
reads the object from the given file .
converts an object to a byte array .
converts an object to a byte array .
{
resolve entity descriptor for the given entity type .
resolves the names of the given class names .
resolve the names of the given class names for the given class .
creates a new <code > / code > for the given <code > / code > .
read the value from the resultset column .
parses the given <code > / code > into the <code > / code > .
sets the entity for the entity .
resolve the given name and name .
converts a bo to entity name
converts a bo to a string .
converts the table name to a table name .
{
/ * ( non - javadoc )
checks if the connection is valid .
closes the connection .
{

checks if the target is a target target target .
{
/ * ( non - javadoc )
returns the character of the content type .
writes the content of this response to the specified response body .
writes the content of this response to the specified response .
sets the content type .
sets the value of the header with the given name .
{
prints the string representation of the string representation of the string .
login to the given authenticateduser object .
coerces the given token to the given token .
creates a new request based on the user parameters .
authenticates the {

sets the value of an array of ints .


converts a url to a file .

creates a directory with the given directory and path .
creates a directory from the given directory creating a directory if it is not already created .
touches the file to be written to the file .
copies the contents of the given source file to the given destination file .
copy file from a file to a file .
copies the contents of the given directory to the given destination directory .
copies a directory to the specified destination directory .
moves the file to the given destination file .

moves the directory to the destination directory .
cleans a directory if it s not already exist .

reads the contents of a file from a file .
writes a character to the given file .



reads the contents of a file from a file .
write a string to a file .
append a string to a file .
prints a string to a file .
writes the contents of the given inputstream to the given stream .
reads lines from a file .
reads the number of bytes from the file .
writes a byte array to a byte array .
append a byte array to the destination .
writes a byte array to a byte [] .
compares two strings .
compare two files .
checks whether the file is newer than the given file .
checks whether the file is older than the given file .
copies a file from src to dest .
moves a file to the destination directory .
delete file .
checks whether symlinks is a directory .
returns the parent directory for the given file .
returns true if the file is a directory .
create a temporary directory .
creates a temporary file from the given temporary file .
creates a temporary file from the given temporary file .
checks whether the file is writable .
returns an inputstream that contains the given encoding .
returns the encoding of the encoding of the encoding .
checks if the file exists .
creates a directory with the given directory and the given directory .
checks if the destination directory is already created .
checks the file path to the given destination .
append a new buffer to the buffer .
prints a usage message .
resolve the method with the given parameters .
register a action transformer .
register a action transformer .
register a action to be used by the action .
lookup the {
register a path to a path .
advances the next element in the next token .
creates a new { @link } from a char array .
append a new { @link iobuffer } to the buffer .
execute the method on the class .
{
{
{
{
/ * ( non - javadoc )
post / processes / escape the html content .
wrap a callable in a callable .
wrap a closeable object to a closeable object .
finds the first occurrence of the specified character in the specified character .
find the first occurrence of the specified character in the specified character .

matches the given character .

returns the position of the given position .

commits the transaction .
marks the transaction if the transaction is not active .
get the url for the given class loader .
/ * [ deutsch ] <p > liefert eine dauer der zeichen die angegebene als tag . < / p >
add a bcc recipient .
add a bcc recipient address .
add an email address .
{
register the given {
registers a new type serializer for the given type .
returns the serializer for the given class .
add a file to the file .
parses the request file from the request body stream .
get the parameter value for the given parameter .
get the parameter names for the given parameter .


{
parse the given sql string .
find the next appearance of the given group .

called by the { @link } .
build a query string from the query string
parse query string from query parameters .

extract the content type from the given mediatype .
extract header from header string .
sets the preparedstatement .
/ * ( non - javadoc )
{
process the path to the .
converts a dom node to a string .
returns html for a dom node .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value for the given key .
{
{
/ * ( non - javadoc )
configures the servlet to use the servlet context .
method .
{
create the application context

resolve the class name of the class .
> >
resets the path to the map .

maps a path to a path .
replaces the specified class with the given class name and the given target class .
sets a path to the given value .
add a class - style annotation .
parse the given string into a target class .
parse a string representation of a list of generic type .
parse a string representation of a map type .
parse the given string into a java object .
parse the value of the given type and the type of the type .
resolves the value of the given value to the given value .
skips the next character in the input string .
parse the string representation of the string representation of a string .
parse a string for escaping .
grows the text to be used to grow the text .
parse the character from the unicode character character set by parsing the character .
reads the content of the given string .
parse a number of digits into a number of digits .
parse an array of primitives .
parse the object data from the given class .
consumes a character from the given char array .

renders the given string by parsing the given string .
/ *
creates the method initializer .
visit a method .
create the .
{
returns the type name for the given type name .
resolve the reference descriptor for a given ref .
resolve the given parameters into an array of .
reads a property descriptor descriptor .
returns the annotation of the given annotation .
reads the annotation value of the annotation if it is not a string .

builds the property .
removes all references from the given bean .
convert the dictionaries into a object .
convert a string representation of the property to a .
run the method

finds a method on the specified class .
find a constructor with the given constructor
returns true if the given class is assignable from the given class .

checks whether the given class is assignable from the given class .
checks if the given object is a given class .
resolve all class names of all classes in the given class .
returns the class for the given class .
returns a method that is the method that is the method of the given class or method of the given class .
get the methods for the given class .
compare two methods .
compare two arguments .
compares two arguments .
force the { @link () } object to the given { @link } .
checks whether the member is a member of the given member .
create a new instance of the class that implements the specified class .
creates a new instance of the specified type .
returns true if the given { @code } is assignable from the receiver .
returns the class for the given class .

gets the getter getter for the given getter .
gets the property name .
returns the class for the given type .
returns the class for the given type .
converts a string to a string .
reads annotation from annotation .
returns the class of the given class .
returns the class name of the class .
returns the class for the specified class .
returns the class for the given classnode .
returns the jar file for the given class .
convert a class name to a class name .
checks whether the given class is a type of classes that are annotated with the given class .
returns true if type is primitive type .
sleep for a unix time .
sleep the current thread to sleep .
waits for the specified object to become available .
joins a thread to a single thread .
creates a { @link threadfactory } instance .
{ @inheritdoc }
visits a parameter that is used to create a new instance of the specified type .
visits a class annotation .
visits a type {
visits a parameter annotation .
visits a stack frame .
visits a field declaration .
visits a method declaration .
visits a class .
visits a label block for a given instruction .
sets the descriptor for a given descriptor .
visit a block of type declaration .
visits a variable - type argument .
converts a template to a writer for the given java properties .
process the contents of the stream .
/ * ( non - javadoc )
returns the next element of this element .
moves the element to the next page of rows .
joins the given component into a single element .
joins the given array into a new array
joins the given array of doubles by the given array .

resize the given array of size and size .
append an element to the given array .
removes an element from the buffer .
removes all the elements from the array .
returns an array containing the specified number of elements in the given buffer starting at the given offset .

returns a string representation of the given buffer .
inserts a string into a new array .
insert a new array into an array .
inserts a new array into an array of dest .
returns an array of bytes that contains the contents of the array .
returns a byte array that contains the contents of the array .
returns the array of the first character in the array .
returns a char array containing the first character array of the given array .
returns an array containing the values of the array of the specified <code > byte [] [] < / code > elements
returns a short array containing all the values of the given array .
returns the int array of the given array .
returns the array of the given int array .
returns an array of longs that contains the values of the given long arrays .
returns the long array of the given long array .
returns a float array with the given float values . the array will be stored in the array .
returns a float array with the given values .
returns the value of the specified array in the given array .
returns the array of values for the given array .

returns a boolean array indicating whether the array is a boolean array .
returns the index of the first occurrence of the specified array starting at the given index .
returns the index of the first occurrence of the specified character array .
returns the index of the first occurrence of the specified array in the array .
returns the index of the first occurrence of the specified array starting at index 0 .
returns the index of the first occurrence of the given value in the array .
returns the index of the first occurrence of the specified array starting at the given index .
returns the index of the first occurrence of the specified array in the array .
returns the index of the first occurrence of the specified byte array starting at the given index starting at startindex [ firstindex ] .
returns the index of the first occurrence of the specified array of the specified index .
> > > > > > > > > > > > > > > > <br >
converts a string array into a string array .
enable the default mode for the configuration .
{
parses the given { @link } and returns the parser .
overrides the visitor to create a new parameter .
computes the for the given input .
compute the depth of the block tree .
adds a new block to the outgoing block .
moves the stack to the current stack .

visits the frame after the current frame .

adds the given to the given set of data .
adds the given type to the given {
checks if the given classreader is a classreader - based constructor .
returns the constant map of the constant pool of the given class .
put - the classfile for the given .
collect attributes from the given set of attributes .
/ * ( non - javadoc )
injects the context of the given context to the given target context .
parse the given {
parse a query filter for a query string
registers a class for the given class .
gets the pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo - pseudo pseudo
{
invokes the {
close a closeable object .
copy from stdin to output stream
copy from input stream to output stream
reads the contents of the given inputstream into a byte array .
copy from a string to a given writer .
create an input stream from an inputstream
creates a {
> > >

<p > . < / p >
creates a new writer that writes the given output stream .
gets the property names for the given class .
resolves the properties of a bean property .
visit all the properties of the property .
{
returns the class for the given class .
resolve the given type and returns the annotation class of the given type .
read parameters from the filter parameters .
creates the { @link } for the given { @link } .
send a message to the given file .
configures the current thread to load the current environment .
register a to the given
sets the digest of the dataset .
creates a file for the given file .
returns the bundle bundle for the given bundle id .
checks if the file is a file .
register a new .
creates a new sha1 hash from the given string .
creates a bundle resource bundle for the given bundle .
resets the file to the current state of the current thread .
removes the css css from the given url .
fixes the url of the url .
update the given entity with the given entity .
update the given entity with the given entity .
update the value for the given entity .
update the given entity in the database .
delete entity from hbase table .
delete all entity from the given entity .
delete entity from hbase
delete a entity from the database .
find the matching entity with the given class name .
find entity by entity entityclass .


find the foreign key for the given entity .

find entity by primary key .
find entity by primary key .
create a new entity instance for the given entity .
create a new facet for the given entity type .

insert a new row with the given id and column .
creates a unique name for the given entity .
/ * ( non - javadoc )
returns the string representation of the current .
returns the field name for the field .
/ * ( non - javadoc )
convert an array of element to an array of values .
convert an array of primitive type to an array of boxed values .
convert primitive [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] value [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] value array .

/ * ( non - javadoc )
push the value to the current state of the current context .
{
{
serializes the given object into the given object .
checks whether the given class is a valid type of the given type .
closes the database .
open the connection to the database .
opens the database .
close the database connection .
commits the transaction .
rollback the transaction .
replace the path parameter with the given name and name .
creates a new action for a given path and controller .
checks whether the given path is a path .
create a new {
load a file from a file .
load a file from a file
writes a file to the given file
write a file to the file
writes a file to the given file
write the given file to the file
creates a string representation of the string representation of the string representation .
load a string from a string .
expand the properties of a given properties object .
creates a new template from a classpath object .
load templates from the classpath
get the property for a property .
get a property from the map
resolve properties for property keys .
resolves the property map for the property map .
resolve a string with the given name and the given class name .
returns the for the given method .
registers all annotations on the given annotation .
<p > . < / p >
add a unique identifier to the list .
{
returns true if the given node is a descendant of the given node .
returns true if the given predicate evaluates to true if the given node has a node matching the predicate .
unescapes the specified string unescaping the value of the specified string .
build a list of packages packages for a package .
returns the version of the version of the version of the version .
clones the given parent node .
detaches the child node from the node .
add a child node to the node .
add a child node to the list of nodes that are added to the child node .
insert a node at the specified node .
inserts the node at the specified node .
inserts the given node into the new node .
inserts the node at the specified node .
inserts the given node into the new node .
remove the node at the specified index .
removes all child nodes from the list of nodes that are removed from the list of children .
returns the attribute value associated with the specified attribute .
checks whether the attribute is a name or a name .
returns the attribute value for the given attribute name .
sets the attribute value .
checks whether the given string is a valid attribute name .
find the child node of the given node with the given name .
returns the child at the specified index .
get the child at the specified position .
get the child at the specified index .
returns the first child of the first child of the first child of the first child of the first child of the first child of the first child of the first child of the first child of the first child of the first child of the first child of the first child of the first child .
get the child node of the last child node of the last child node of the last child node .
get the child element of an element .
checks if the child nodes are the same .
postorder > >
this is the child of the child node is added to the child element .
this method is called by the constructor to determine the order of the child .
this method initializes
change the child of a document .
returns the sibling node corresponding to the current sibling of the current node .
returns the next sibling node in this node .
returns the sibling node for this sibling node .
returns the sibling sibling of the previous sibling element .
returns the sibling node of this node .
returns the sibling node for this sibling node .
returns the text content of the text .
append a text content to the stringbuilder .
get the html for the html page .
get the html for the html page .
visits the children of the given node .
returns the path of the current node .
this method is called when the tag is not yet been rendered .
/ * ( non - javadoc )
/ * this method is called by the to set the tag .
/ * ( non - javadoc )
/ * ( non - javadoc )
maps all elements in the collection .
{
{
returns the mime type of the given mime type .
find the mime type for the given mime type .
{
sets the value of the designated column to the specified value .
add a package for the given package .
add a package for the given class .
finds the first element in the list of the given path and returns the resulting string .
/ * package private
begins a transaction .
commits transaction .
rollback a transaction rollback transaction .
creates a string representation of the given { @code mediatype } .
resolve the given { @link javax . portlet . portlet . } annotation .
removes all the references that are contained in the list .
{
{
creates a new { @link } instance .
iterates through all the consumer to the target .
iterates over all known services and the given target scope .
iterate through all the arguments of the given .
extract all values from the array .
<p > . < / p >
creates a new instance of the given type .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
get the string representation of a character sequence .
get the number of bytes that this object is a number .
get long long from a long long .
get a number of double values .
get the number of float float values
get a json object from the given json object .
get the json array as a jsonarray .
get the byte array of the binary binary binary data point .
get the value of the given object .
adds a value to the list of scalars .
add a new value to the list
adds the specified array to the list .
removes a value from the list .
{
resolve the path of the given action path .

paints the given object . <p > note that this method is idempotent .
processes a tag and start tag .
converts a string value into a string .
binds the given interceptor to the given { @link } .
unregisters a new interceptor interceptor interceptor for the interceptor annotation .
sets the filter to use for the given { @link } .
checks if the given list of node matches the given index .
returns the name of the {
creates a new action action .
{
{
resolves the property names of the given class descriptor .
creates a socket proxy .
reads a dbase attribute of a given type from the specified attribute .
{
returns the number of attributes for this node .
compute the size of a given symbol table .
compute the length of the given byte array .
put the given byte array to the given byte array .
put the given byte array into the given byte array .
returns all the actions in the given collection .
registers the given action with the given action .
checks if the given { @link } is a { @link } .
<p > evaluate the action and returns the result of the action . < / p > <p > <b > note : < / b > this method appends the action to the current { @link } and returns the result .
create a new instance of the given class .

finds the first matching character sequence that matches the given character sequence .
finds the first character in the given array starting at the given index .
add a command line arguments to the command line arguments .
add a new command line arguments to the configuration .
process the process exit command line .
invoke the listener for the given class .
copy from the frame to the output .
returns the type of the given { @link } .
returns the type of the given { @link } .
sets the given input to the given input .
sets the input frame to the given input .
returns the local variable index of the local variable .
sets the bit - order of the file .
push a new line to the stack
push a symbol table into a symbol table .
pops the stack and writes the stack traces to the stack .
pop a string from the list of the given descriptor .
adds the given type to the list of type variables .
returns the type of the given {
execute the given visitor for the given symbol .
merge two direct arrays into the given array .
/ * ( non - javadoc )

{
schedules a timer to be used by the { @link } .
visit a given module .
{
overrides the visitor to find the class name for a given entityreference .
visits a class annotation .
{
visits a class with the given name and the given name .
visit a field .
/ * ( non - javadoc )
returns the session session session .
closes the session .
creates a new .
invoke the action .
reads the request body and returns the body of the request body .
returns the first page of the first page of the specified page .
get the number of items in the page .
parses a string into an integer .
matches the given value .
converts a byte array to a byte array .
finds the first occurrence of the given substring in the given array .
resolve the name of a goog .
resolves the name of the attribute name .
renders a dom attribute .
load the file from the file
load the given file
load the contents of the given inputstream .
loads all the values from the map .
load the specified mapping from the given map .
load properties from properties .
load environment variable names .
loads the classpath from the classpath .
get the default value for the given key .
get the value of the given key .
get the value for the given key .
sets the value of the preference s profile .
extract the mappings from the specified target .
extract the profiles from the specified target .
extract the mapping for the given target .
returns a map of all the prefixes for the given prefix .
add a prefix to the map .
resolve the current active rule if it is not already active .
get all profiles from the current profile
get the profiles for the given profiles .
add a new to the list .
add a to the list of the that are the same as the .
add a method to the list of methods that are annotated with the given annotation .
add a to the list of methods .
add the given method to the list of all the methods that are not yet declared in the class .

injects the target field to the target field .
injects the target object to the target object which is the target object which is the target object is used to store the target object .
returns the type of the given class .
returns the number of cached entries for the given
find the class for the given field .
returns the type of the class .
returns the getter for the given annotation .
creates a getter method for the given getter .
gets the { @link } for the given { @link javax . money . convert . } .
creates a setter for the given type descriptor .
returns the key for the given field .
<p > return the type of the given field . < / p >
extracts the string representation of the given file from the given string .
create a new instance of { @link } .

resolve the method name in the given string .


matches a string against the pattern
checks if the path matches the pattern
<p > checks whether the given rule matches the given rule . < / p >
resolve the classpath for the given class name .
resolve the given resource name to the given resource .
/ * ( non - javadoc )
get the url of a resource .
waits for the current thread to be interrupted .
returns the annotation type of the given annotation if the annotation is not found .
returns a new { @code } that is declared by the given { @code name } and its arguments .
build a new { @link } for a given class .
this method is used to determine the for the given field .
visit all fields annotated with the given annotation .
called when the property is not set .
get the url for a given class loader .
sets the bean for the bean .
update the bean .
load the descriptor property .
returns the property descriptor for the given descriptor .
gets the { @link propertydescriptor } for the given { @link javax . money . convert . } .
connects to the database .
adds the iterator to the list of elements .
{
{
{
this method is called by the { @link } .
prints logo debug .
stop the manager .
creates a new {
creates a new socket factory to be used for connecting to the specified host .
get the ssl port for the specified host .
returns the ssl certificate chain .
returns the socket factory for the given { @link net . sf . mmm . nio . client . spi . } .
returns a string consisting of the number of characters that are given in the given character .

generates a random string of the given length .
parses the given content and returns the message content .
parses the given string .
parses a file and returns a new { @link } object .
parse the given { @link inputstream } as an { @link inputstream } .
creates a new instance of the specified type .
creates a new instance of the specified type .
injects the value to the target object .
converts the given value to a type conversion .
{
{
{
{
creates a new { @link } instance .
adds a new type to the map .
returns the value for the given key .
{
{
returns the names of the methods that are associated with the given class .
returns the methoddescriptor s method descriptor for a given name .
returns the methoddescriptor s method descriptor for a given name .
returns all the methods that are associated with the given interface .
resolve hostname of hostname to hostname .

checks if the input string is a valid .
resolve ip address in dotted format .


downloads the file to the file .
{
/ * action
{
intercepte -
inject the given action to the current context .
sets the action for the request .
creates a new socket that is currently running on the server .
creates a new socket connection to the specified host and port .

returns the constant class name of the class .
/ * ( non - javadoc )
load the class from the specified class .
returns the class for the specified class .
{
returns a new for the specified element .
returns a comparator that compares the given array of elements to the specified array .
find the element in the given element .
<p > checks whether the given { @code zip } contains a given { @code } . < / p >
<p > . < / p >
returns the template for the given template .
start the record .
{
ensures that the new attributes are equal .
appends the string to the stringbuilder .
register a component to the component .
register a named component with the given name .
register a component instance .
register a component with a named component .
fire the event to the given type .
lookup the component component of the component .
returns the component with the given component .
returns the component - specific component of the given component .
resolve component name to the class name .
{
> 此方法不会关闭connection

/ * ( non - javadoc )
create a new { @link } for the given { @link resultset } .
finds the first child of the given type .
populate the .
{
sets the preparedstatement .
sets the designated index to the specified type .
setter for a numeric type .
sets the value of the specified number of times the specified value is the number of indexed values .
sets the value of the specified property .
sets the number of the specified value to the specified index .
sets the value of the specified { @link number } to use for the given index .
sets the value of the specified double - precision floating point value onto the specified position .
sets the number of the index of the specified number of times .
sets the value of the specified number of times the specified value is greater than the specified value .
sets the value of the specified number of short - value mapping .
sets the text at the specified index .
internalxbase . g : 1 : : 1 : ( ) ;
sets the value of the specified time in milliseconds .
sets the value of a timestamp in the specified index .
sets the decimal index to the specified value .
sets the value of the specified index to the specified value .
set a new value to the specified {
sets the value of the designated blob in the given index .
sets the value of the designated column to the specified <code > clob< / code > object at the specified index . the index is the index of the specified <code > / code > and <code > / code > and <code > / code > .
sets the index of the array at the specified index .
sets the value of the specified index onto the specified set .
sets the character at the specified index .
sets the bean name to be used by the bean .
sets the mapping of the specified map to the specified parameters .
setter for {
sets the value of the object to be used as a string .
sets the value of the designated column to the specified type .
setter for { @link java . sql . } .
sets the objects in the given object .
sets the values of the specified array of values to the specified set .
sets the specified number of parameters to the specified number of parameters .
sets the specified batch of values in the batch .
inserts a new <code > / code > to the next <code > / code > .
find the database entity for the given entity descriptor name .
find the entity for the given entity type .
find the for the given entity descriptor
resolves the given entity name .
method to construct a new sql query for the given parameter name .
resolve the class of the given class .
returns true if the value is a valid valuetype
appends the given string to the given stringbuffer .
returns true if the value of the given field is valid .
returns the connection manager for the given database .
get the names of all the files in this file .
get file name of the given file .
compares this { @code to } .
<p > . < / p >
<p > . < / p >
<p > . < / p >
<p > relativize the request to determine whether the request is a request . < / p >
<p > . < / p >


redirects the request to the given url .
redirect to http : // stackoverflow . com / questions / / how - to - get - the - redirect - fragment
get the url of the request url .
get the servlet path for the request .
returns true if the request is a page request .
returns the request uri from the request uri .
returns the request uri for the request .
resolve parameter names and names of parameters .
build a path action .
create a new instance of the
/ * ( non - javadoc )
{
prints the page number of the page s values to the page .
/ * ( non - javadoc )
<p > filter . < / p >
add a message id to the message .
filters a dotted dotted dotted wildcard .
filter .
add a cc recipient address .
add a bcc recipient address .
filter the value to search for the specified value .
filter flag
{
sets the number of occurrences of a date .
filter the given pattern string .
/ * ( non - javadoc )
filter the number of elements in the given filter .
filter the items in the list .
filter the given filters in the order they are matched .
filter the filter to be used by this filter .

this method is used to create a search term from the search term .

encodes a byte array into base64 notation .
decodes a base64 encoded string .
converts an array of { @link value } s into an array of { @link } s .
{
initializes the configuration .
check if the request is a valid http servlet request .
add a violation to the violation of this .
validates the given { @link string } conforms to the specified { @link } .
validates the given name against the given target object .
sets the profile for the specified profile .

determine whether the given profile is a regular expression
parses the body of the request body .
converts the milliseconds to an epoch - time series .
adds the julian day to the julian day .
creates a julian - day from this date - vector .
sets the value of the specified double .
returns the day of the day of the day .
returns a {
converts a { @link } to a { @link }
adds a new { @link } to the { @link } .
converts a { @link } to a { @link }
index from a given index to a given index .
{
parse the given tag .
print the comment to the next character in the text .

checks whether the given character is a valid tag name .
creates a new hash code from the given password hash .
/ * private static final final = ( ) ; private ( q - . ) ; . ( mnemonic ) ; ( mnemonic ) ; ( ) ; ( ) ; ( ) ; ( ) ; ( ) ; ( )
returns a byte array .
resolve a type definition for a given type .
add a name to the name of the name .

adds content to the content type .
add a byte array to the content type .
build a batch of .
build a datasource from a source file .
sets the content type name .
returns the mime type of the given content type .
accept a new .
parse a type signature into a type .
returns the size of the current size of the current dbase size .
put the given into the given byte array .
decodes a base64 - encoded string .
decodes a base64 encoded string from the given url .
/ * ( non - javadoc )
checks if the connection is valid .
prints the given html entity .

{
visits a method .
/ * ( non - javadoc )
creates a new method with the given signature for the given signature and returns the signature .
convert a string representation of the given array of strings to the string representation of the first line .
convert a csv line into a string .
resolves the given { @link } annotation .
creates a new class instance for the given class .
returns the class loader for the given class .
reads the data from the data and sets the data for the given method .

解密
sets the logger s default logger .
returns a logger with the given name and name .
sets the name of the toplevel name .
{
renders the action in the given { @link } .
create a new instance of the specified action .
create a new action action request .
{ @inheritdoc }
checks if the given is a bean .
registers the bean with the given beans .
destroy the bean .
shutdown the .
create a new session from the configuration .
get the data from the given list of .
returns a new {
main method .
allocates a new channel for the given channel id .
run the next task .
creates a new { @link } instance .
prints a message to a given error message .
print the limit of the number of bytes to the total number of bytes in the current thread .
reads a file from the file .
close the current connection .

poll the fragment to the fragment .
returns the number of bytes that the buffer is the position of the buffer .
offer a buffer to the buffer .
offer a new buffer to the specified byte buffer .
offer a number of bytes to the buffer .
offer a new amount of bytes to the buffer .
offer a new chunk to the specified amount of time .
claim a long .
{
sets the channel to use for the channel .
close the session .
/ * ( non - javadoc )

returns the response message received from the response .
checks whether the response is a valid session .
/ * [ deutsch ] <p >
/ * [ deutsch ] <p >
start recording a new recording .
stop recording the given channel
stop recording the active recording of the active channel .
stop the recording of the .

stop the replay server .


list of all the transactions in the specified stream
returns the list of wallets for the specified transaction .
get the transaction id for the given recording .
find the last seen live gate with the given id .
/ * ( non - javadoc )
returns the number of subscriptions consumed by the given restartable .
dumps the contents of the given frame to the specified buffer .
<p > creates an image that contains the image . < / p >
<p > . < / p >
creates a {



limits the limit on the limit .
appends a new slice to the buffer .
poll the queue .

navigates to the given position in the buffer .
returns a map of all consumers in the list of { @link } s .
print the stream in the stream .
returns the average delay between the specified and .


/ * ( non - javadoc )
reads the current data from the given buffer .
creates a new { @link } for the given header and the given header .
returns a new {
creates a new { @link } for the given label .
poll the fragment from the given fragment .
/ * ( non - javadoc )
returns the number of bytes that the given block is in the block .
{
returns an image with the specified id .
applies an image to the image .
creates a new { @link } instance .
returns true if the given channel descriptor is a valid channel
refresh the list of objects .
claim a frame to the ring buffer .
append a header to the cumulation buffer .
append a header header to the buffer .
append a message to the .
connects to the specified channel and sends a pong to the channel .
attempt to connect to the specified channel .
closes the session .
starts a new recording for the given channel .
stop recording the given recording and send it to the given channel .
stop the handshakes of the specified subscription .
replay a record to a participant
===============================================================
list all the events in the list of received messages from the list of received messages .
remove a record from the list of received messages from the remote server .
create a new recording of the specified participant
/ * ( non - javadoc )
get the live participant from the given participant
/ * ( non - javadoc )
get the from the given participant
find whether or not the given id is a live session
terminates the given list of subscriptions to the given list of received messages .
parse a uri from a uri .
creates a new ip address that is used to connect to the knx address .
checks whether the given channel is a valid address .
creates a { @link inetsocketaddress } from the given { @link uri } .
returns the description of the current display name .
close the
add a new to the list of the that are not in the same transaction .
removes the given from the .
called by the to determine the for the given .
add a new to the udp address .
track the playback .
/ *
returns true if the stream is closed .
send a message to the client .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
event
creates a new { @link } with the given { @link } and { @link } .
returns the { @link } for the given { @link } .

returns the tag for the channel .

sets the position of the segmentchunk .
parse the given { @link charsequence } as a { @link charsequence } .
add a session id to the session id .

claim a frame to the given offset in the given state .
appends a header frame to the cumulation buffer .
append a message to the cumulation buffer .
append a message to the message .
update the number of times for the given .
filter the address of the address of the address of the address .
allocates a new buffer with the specified capacity .
creates a new { @link } instance with a given { @link } .
returns the name of the given type id .
scans the given offset for the given position .
clears the configuration of this { @code } .
validates the given { @link } .
creates a { @code } for the given prefix and prefix .
build a media channel
sets the default mode of the given .
sets the ttl number of characters in the given builder .
returns a new { @code traceid } built from the given { @code codec } .
returns the term builder for the given term .
sets the term to the local offset .
returns a new {
sets the position of the given position .
build the string representation of the builder .
send an error message to the client .
open the socket channel multicast socket .
close the connection .
checks whether the given frame is valid .
receive a udp udp udp udp socket .
called by the to set the to the
on the that the is pressed .
processes the and the to the keen manager .
resets the current state of this subscription to the current state .
redirects the given header to the stream .
returns the status of the status of the given status .
allocate a channel to be used by the given channel .
/ * ( non - javadoc )
sets the buffer size .
validates the given capacity .
checks if the given { @code } contains the contents of the given { @code } .
returns the number of bytes that the window is the maximum number of bytes in the window .

create a new
create a new

create a new { @link } for the given { @link } .
returns the { @link } for the given { @link } .
validates the given length of the payload .
<p > . < / p >
validates a socket channel .
validates the page size .
validates the range of the range of the range to be used for completeness .
validates the given timeout to the timeout .
sets the error code of this <tt > / tt > . <p >
get the set of timers of the given cluster .
get the set of all the appenders in the given archive .
returns the set of messaging engines for the given job .
resets the state of this .
returns an array of { @link } s that are members of the given { @link string } .
encodes the given cluster member into a string .
add a member to the list of members .
closes the member members .
add a member to the list of members .
add members to cluster members .
checks whether the given threshold is a cluster - id .
returns the first position of the specified record .
reset the list of log entries for all members of the given cluster .
returns true if the given member is a member of the given set of members .

checks whether the given is a member of the specified member .
checks whether the given member is a member of the given member .
checks whether the renewals is a member of the list of members .
returns the member of the given member .
validates that the member is not a member of the given member .
checks whether the given candidate list contains all members in the given candidate list .
checks whether the given candidate is a member of the given members .
checks whether the candidate list is a member of the cluster .
compare two log items
compares two <code > / code > objects .
checks whether the given member is a member of the given members .
find the member index of the given members in the given members .
find member members for a given member
adds a new member member to the list of members members .
removes member members from the member members .
returns the member of the given member id .
create a new cluster endpoint for the given members .

performs a single frame of the given data frame .
上传文件
checks whether a file exists .
returns true if the file is active .
checks whether a file exists .
starts the given { @link } .
save the log file to the output file .
save the contents of the file to the output stream .
returns the length of the frame .

>
asserts that the given { @link } is greater than the given { @link textannotation } .
writes a given offset in the given offset to the given offset .

register a { @link } to the server .
send a udp packet to the server .
find the counter of the by id .
find the counter of a given counter in the given counter .
returns the id of the id of the given counter id .
get the source count of the given { @link } .
returns true if the given ledger is active or not .
parses the given string as a { @link } .
this method is called by the { @link () } method .
find the number of consecutive positions in the given { @code } .


send a message to the device .

sets the application data for the given application message .
reload the configuration and sets the current state of the current container to the current state .
find the last id of the last active stop id .
find the last element in the last element of the first occurrence of the given entry .
get the mapping from the given keyspace .
create a new
creates a new plan for the given plan .
/ * package
append a new watermark to the given savepoint .
/ * ( non - javadoc )

creates a new { @link } from a { @link } .

close the connection
offer a new buffer to the pool .
offer the contents of the torrent to the torrent .
send a keepalive connection to the server .
called by the client to update the leader .
unblock a .
returns the naaccr format of the given channel .
sets the channel to use for the given channel .
checks if the given length is a valid alleles .
checks if the page contains a page of size and size
sets the count of active count count count count and count count .
calculates the position of the
computes the number of bytes for the given number of bytes in the given file .
sets the { @link } to the { @link } .
sets the header to be used for the given .
<p > . < / p >
builds a for the given partition id .
returns the number of characters that have been truncated to the last occurrence of the specified number of times .



compareandset the given number of bytes in the given buffer .
main method .

allocate a new counter factory .
find the counter of the given counter s counter .
get the total count of the current log record .
checks whether the given is a .
returns the id of the current state of the given id .
converts the given { @link } to a char array .
creates a new {
offer a new buffer to the buffer .
send a channel to the channel .
returns true if the given is a valid .
reads a header from the given position in the given { @code } .
writes a single frame to the current { @code <body > } starting at offset { @code offset } .
offer a new buffer to the specified storage .
wraps a buffer to wrap .
adds id3v2 information about the specified byte buffer . <p > this method is used to create a new { @link } . < / p >
commits the current state of the current frame .
aborts the given buffers .
main program to run the program .
create a new { @link } with the given { @link } .
close the scheduler .
poll the fragment to the specified position .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the number of bytes that the given block is in the backlog .
poll the next block and returns the number of bytes that were added to the block .
returns the position of the position of the current position .
sets the channel to be sent to the channel .
create a new

creates a new { @link } for the given { @link java . io . } .
find the number of / underneath the given counter .
repartition a { @link } .
prints the print summary .
scan the next scan and return the next count of bytes from the current position .
offer a number of bytes to the buffer .
offer a new tag to the specified number of bytes .
claim a new time in milliseconds .
scan the given offset and the current position of the frame .
main entry point for the main tool bar .
allocates a new { @link } instance .
create a new { @link } instance
prints the contents of a stream to the stream .
adds a new notification event to the channel .
adds a counter .
returns a new { @link } that is used to create a new { @link } .
close the stream .
dispatches a post consumer to the given {
insert a new into the buffer .
creates a new { @link } for the given capacity { @link } .
adds the current number of partitions to the current position .
writes the contents of the given { @link outputstream } to the given { @link outputstream } .
resets the initial state of this instance .
sets the value of the specified byte to the given value .
add the given { @link } to the stats .
returns true if the given { @code } is a { @link } .
initializes the page starting from the given position .
initializes the page highlighting from the given page position .
initializes the page from the given input .
sets the { @link } for the job .
set the job to be used for reading .

{
calculates the for the given filter
sets the configuration of the given class to the given class .
converts an array of type name to a type .
convert a string representation of the field declaration to a string .
convert a type name to a {
expands the glob from the glob of the glob - separated list of strings .
creates a new dewey row .
creates a new row for the given offset .
creates a new midpoint of the given range of the given columns .
intersection of the intersection of the range of ranges .
add a range to the end of the range .
returns the number of long values for the given long value .
parses a string from a string defintion pattern .
returns the message for the given message .

/ * ( non - javadoc )
get a filter predicate that evaluates to true .
get a filter from the given filter .
reads all files from the file list .
reads all the { @link } s from the given { @link list } of { @link } s .
reads all the { @link } and { @link } and returns a list of all the { @link } s .
reads all the { @link } s from the file and returns the list of { @link } s .
reads all the { @link } and { @link } and returns the list of { @link } s .
reads all the files from the given file and returns the list of the files .
reads all the { @link } s from the file .
reads all the { @link } s from the given { @link file } .
reads a { @link } from a file .
creates a new { @link } for reading the given file .
reads a { @link } from a file .
reads a {
create a new { @link } from a file .
create a new { @link } from a file .
reads the current row from the given bytebuffer .
reads the row from the current row and returns the row .
reads the current read from the input stream

add a new record to the writer .
remove a single record from the list of writer .
updates the total number of threads in the current epoch .
register a touch touch event .
start the record .
start the record for this record
starts the given { @link } .
write the data to the file .
writes the data to the given data buffer .
writes the data to the output stream .
writes the data to the output stream .
this method writes data to the given .
end the end of the buffer .
end
copy from a long to a buffer .
ends the data and writes it to the map . <p >
merges the contents of the given list of files into a new list of files .
serializes the metadata file into a new { @link file } .
writes the given configuration file to the given configuration file .
serializes the given { @link file } to the given { @link file } .
merges the given { @link } into a { @link } .
/ *
merges the given { @link } into the given { @link } .
reads the current version of the specified { @link } .
checks whether the given schema is a schema .
merges the given schema into the given schema .
merges two { @link } s into the given { @code plan } .
merge the given union into the given union .
unions the union of the given schema .
recursive method to merge the results of the given schema .
returns the schema of the schema of the given schema .
creates a new schema instance for a given field .
returns the first element in the list .
closes the connection .
{
converts a string value to a schema .

create thrift data .
converts the given map to a map .
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
resize the given .
writes the data to the output stream .
parse a comma - separated list of strings into a list of strings .

end end of the message .
start a field .
end end of a field .
start the group .
end end end end
adds a binary binary binary binary binary binary binary binary binary binary binary binary binary value to the binary binary binary representation .
/ * ( non - javadoc )
returns the {
/ * ( non - javadoc )
allocates a new buffer .
adds the to the
merges the given { @link } into the map .
replies the type of the { @link } .
{
/ * ( non - javadoc )
throws an illegalargumentexception if the string is not null .
throws a { @link illegalargumentexception } if the given message is not a valid { @link } .
/ * ( non - javadoc )
checks if the given type is a valid type
returns a {
初始化<br >
初始化
{
calculates the for the given glyphs
create a filter that will filter out the delta record .
/ * ( non - javadoc )
creates a new { @link } .
create a new filter that filters the filter .
throws an exception if the given exception is a class .
create a new { @link } instance for the given type .
creates a new { @link } for the given { @link bitstore } .
create a new builder instance with a { @link } .

returns the schema of the schema of the given schema .
checks if the given type is a type of type .
creates a new instance of { @link } .
creates a new task that is a task that is loaded from the current task .
returns the configuration for the given context .
invokes the method on the object with the given arguments .
sets the string builder of the given stringbuilder .
write a string representation of a string builder .
merge the given { @link } into a list of { @link } .
initializes the { @link } instance .
compress the input buffer into the buffer .
closes the given {
get the filter for the filter
create a new { @link } for the given { @link } .
get the splits from the given input configuration .
{
get all the files in the given collection of { @link collection } s .
splits a list of blocks from the given list of splits into a list of objects .
<p > returns the first occurrence of the specified column of the specified column of the specified column . < / p >
<p > determines whether the specified value is equal to the given value . < / p >
returns a constrained view of the specified value .
<p > creates a new <code > fraction< / code > object that contains a value of the specified column . < / p >
<p > the comparison of the comparison operator . < / p >
<p > the comparison of the comparison operator . < / p >
matches a user - defined constraint for a given type and column .
returns a new {
log a debug level .
log a debug level .
log a message to the slf4j <code > connection< / code > .
log a message to the given throwable .

warn .
log a message signifying a throwable .
log a error message .
create a filter record that is the record that the record is done .
{

serialize a class descriptor for the given class descriptor .
create a new {
create a new filter for the given schema .
returns a list of all the columns for a given {
checks if the is a
reads the contents of a file from the file .
closes the underlying connection .
sets the schema of a job .
add a class to the set of binary types .
validates a type argument to a column type
joins the given string into a single string .
joins the given string into a single string .
joins a single {
returns a list of glob glob glob .
casts the given long value to the given value .
creates a new { @link classloader } .
creates a { @link } for the given { @link } .
writes a configuration file to the output file .
writes the given byte array to the output stream .
writes the input data to the input byte array .
convert the given schema to a .
create a new

convert a schema to a schema .
returns the set of encodings .
--------------------------------------------------------------------------------------------
sort for the type of the
returns the type of the given type .
get the type of the given type .
get the for a given

get the offset for the given offset .
creates a datavec { @link } from the given { @link schema } .

writes a long to the serial 32 - bit integer .
skips the next record in the input stream .
write a json object to the specified output stream .
reads the configuration from the configuration file .
add the given data to the page .
add a new page to the storage .
builds a new { @link } for the given { @link } .
remove the specified key from the cache .
adds a new entry to the cache .
returns the current value associated with the given key .
write the type of the given type to the given type .
sets the glob - to - expression pattern .
/ * ( non - javadoc )
returns a path that represents a path .
returns the uri of the given uri .
open a filename from the classpath
returns the class loader of the given class loader .
returns the classloader of the given class loader .
returns the class loader for the given path .
/ * ( non - javadoc )
{
create a new filter filter for the given predicate .
returns the row offset in the given offset from the given offset in the given offset .

converts a datavec - compatible feature to a shapefile .
returns true if the given type is a type of type {
returns a new instance that can be used to create a new .
returns a new { @link } with the given name and type .
{
{
/ * ( non - javadoc )
returns a map of key - value pairs .
returns the split split to be used by the configuration .
{
skip the number of bytes in the input stream .
reads a short from the stream .
reads a long from the given byte buffer .
splits a single part into a split .
split a split into a split .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new primitive type for primitive type .
create a new primitive type that represents a primitive type .
returns a new primitive type that represents a primitive type .
factory method for creating a new { @link } .
returns a { @link } that represents the given { @link } .
returns a new { @link } that represents the group of group members .
returns the current iterator .
/ * ( non - javadoc )
create a new {
get a map of all fields annotated with the given class name .
returns true if the given type is a type of type type .
/ * ( non - javadoc )
/ * ( non - javadoc )
writes a field to the output stream .
{
{
{
/ * ( non - javadoc )
writes the byte to the stream .
{
--------------------------------------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the binary bson binary binary binary data to the given bytebuffer .
resolve the given { @link } for the given { @link fielddescriptor } s .
{
{
{
get files from input file
checks the file path to the file system .
get files from directory
/ * ( non - javadoc )
creates a filter filter for a given page filter .
reads a stream of bytes from the stream .
reads a byte buffer from the given stream .
reads a stream of bytes from the given stream .
reads the buffer from the given inputstream .
reads a byte buffer from the given stream .
create a consumer that wraps a consumer
initialize the partition .
{
converts the given {
returns a {
/ * ( non - javadoc )
returns a schema that can be used to create schemas on the given schema .
sets the configuration of a class .
sets the class of the given class to the given class .
merges the given tuple into a new {
/ * ( non - javadoc )
{
write a data file to the output file .
read the from the stream .
read the contents of a field .
sets the to receive the event .

reads a single entry from the navigablemap .
<p > . < / p >
writes a single value to the buffer .
little - endian or intel format .
writes the bits of a byte array to a byte array .
reads a varint from the given input stream .
reads a long from the given inputstream .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
sets the schema of the job .
{
wrap a { @link } to a { @link } .
convert a collection to a string representation .
{
create a from a json file .
create a new
create a new

creates a new stage bean for the given stage .
create a stage for the instrumentation of the instrumentation of the given bean definition
creates a new with the given parameters and native bean .
parse a schema from the given schema .
converts the time zone to milliseconds .
converts the milliseconds to milliseconds .
get the naaccr name of the given record .
returns the decimal part of a bigdecimal .
upgrade the configuration to be used by the .
get the length of the dbase buffer .
copy files from the staging directory to the database .
resets the state of this { @link } .

register a new .
sets the configuration properties for the given configuration file .
{
retrieves a ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap ldap configuration .
gets the ldap role .
build a filter filter for the given filter .
{
login the credential from the login credentials for the login .

moves all the names of all the namenodes to the given list of names .
moves all the configuration to the given list of strings to be removed from the list of values .
removes the configuration from the configuration .



checks if the current is a valid task .
checks if the current is a valid task .
checks if the configuration is valid and the is running .

/ * ( non - javadoc )
returns the field names of a given field .
checks whether the given package is a package .
returns the { @link } for the given topic name .
adds the element to the end of this queue .
atomically add the element to the first occurrence of the specified element .
returns the value of the given key or { @code null } if no such value is found .
add all the errors to the output stream
get the descriptor for the given descriptor .
gets all the descriptors for the given descriptor .
populate the map of fields for all fields in the given map .
replies the descriptor for the given descriptor .
convert a record to a record .
creates a field record for a field .
creates a protobuf message descriptor for the given { @link fielddescriptor } .
converts a field descriptor to a protobuf message descriptor .

checks if the given list of the connection is allowed .
converts a proto field into a java type .
create a field instance representing the field of a field .
this method will add all the interceptor messages to the interceptor .
returns the text of the text .
checks whether the given configuration is a configuration .
resolve the { @link } for the given { @link } .
resolves the of the .
adds the stage stage to the stage .
validates the given stage and returns true if the stage is not found .
/ * ( non - javadoc )
/ *
handles a record .
parses the response .
add the header to the server .
write the headers to the server .
write header header header .
saves the metadata file to the file .
/ * ( non - javadoc )
configure the client configuration .
/ * ( non - javadoc )
returns the {
sets the to be used for the input .
make a request to the given .
returns true if the request is a valid request .
parses the given number of bytes from the input stream .
parses the response string into a single batch - level code .
increment the current time and the given offset .
cleans up the stream .
returns the current page of the current page .
parse a batch of rows .
add headers to the response .
/ * ------------------------------------------------------------
processes a single response and returns the response .
replies if the configuration property is a configuration property .
converts an object to a .
convert the given to a
gets the credentials for the given { @link } .
gets the credentials for the login credentials .

copy the contents of the given <code > string< / code > to the given <code > stringbuffer< / code > .
find all classes in the given package for the given package .
removes all the classes from the scanner .

/ * ( non - javadoc )
find the next line in the last line of the line .
returns a chunk of chunk hashes the chunk to the chunk .
retrieves the connection .
closes the connection .
reads the specified byte stream from the stream .
{
skips the input stream .
reads the current read and write it to the given bytebuffer .
escapes the characters in the input string .
get the for the given
get the for the given sslengine
returns the field for the given field name .
get the record for the given field .
generate the sql statement for the given column descriptor .
this method is called from the dobjmgr thread .
compiles the given string expression .

add dictionary to the dictionary
add a new reader to the dictionary .
stop the current time and stop the timer .
/ * this method is called by the to register the new time and then sets the maximum time to the initial state of the data .
get the data of the aggregator .
serialize object to string
deserialize a json string to a java type .
deserialize a new object from a given { @link file } .
initialize the .
/ * ( non - javadoc )
writes the record to the output stream .

extract the list of fields from the given record .
generates a field from a field on the given field .
get the name of the table name .
get the record for the column name .
get the partition name of the partition record .
returns a partition of the partition partition name of the partition record .
checks whether the schema is a schema change record .
validate the given and the .
returns the record name for the given record .
returns the name of the database .
returns the field s value .
returns the location of the given record .
get the for the given {
returns the schema of the record .
method .
creates a new { @link } for the given partition name .
creates a new schema from a schema and stores the schema of the given schema .
/ * ( non - javadoc )
convert a record to a .
generates a schema for the schema of the given schema .
validates the given partition partition and the partition key .
generate a partition .

returns the cache for the specified .
sets the parameters of the .
handles the update of the batch update .
get the configuration for the given request .
returns the database for the given { @link } .
initialize the .
generate the for the given batch .
handles the bulk of events from the given batch of .
initializes the for the given calendar .
wait for the current time to elapse .
read the current date time from the database .
{
parse the given { @link } .
parse a date - time time header from the given date .
sleep for a given number of milliseconds .
format template with the template .
serialize a json object to a string .

refresh the current file and returns the current .
{
process the given batch of rows .
/ * ( non - javadoc )
{
converts a string to a string .
initialize the stage .
checks if the field is a record of the fields .
filters out all fields that are not in the given list of names .
checks the fields for the given list of fields .
handle error messages .
handle the actual error handling .
send a message to the end of the message .
parses the given name and returns a list of the dependencies found in the jar .
returns the given url as a { @link } .
returns the stage { @link } instance .
closes the session .
validates the given { @link } .
/ * ( non - javadoc )
returns the label code for a given code point .
verify that the map is a valid .
checks whether the given dependency is a child of the given set of dependencies .
create a new credentials from the credentials map .
create a client configuration .
create a new { @link } for the given { @link } .
creates a new transfer that is used to create a new transfer to the transfer .
/ *
reads the file from the file .
get the operation response .
write a document to a document .
creates a mutation that contains a mutation with the given key and writes it to the specified { @code stream } .
build a mutation that is used for mutation operation .
executes the given action on the given { @link } .
executes the given action on the given { @link } .
/ * ( non - javadoc )
{
decodes a message from the input stream .
returns a new buffer at the specified index .
configure the { @link } .

checks if the service is healthy .
creates a new { @link } .
commits the current record to the storage .
log a warning message .
returns the length of the given string representation .
close the stream .
creates a new stage for the given stage .
creates a stage for a stage .
register a function to namespace
inject all the and their
create a new record .
create a new record .
create a new record .
{
{
returns the { @link } for the given { @link } .
returns the {

get the for the given json type .
get the { @link } instance for the given name .
formats a column name using the given name and column name .
formats a string value .
get the for the given parameters
creates a pipeline from a json document .
get all blogs for a given filter
import the
release a record lock .

closes all files and directories
mark the file to the file .
returns the nth record for the given record .
get the record for this record .
get a list of all columns for the given column .
get the column name for a given field
returns the topological topological sort of the given graph .
poll the queue and advances the time and returns the result .


{
returns the queue of time idle items .
/ * ( non - javadoc )
destroy the queue .
validates the current state of the .
checks if the given { @link } is a valid { @link } .
get the id of the last registered shard for this client .
process the next batch of rows .
handles the exception parser .
returns the column name for the given record
returns the url of the url for the given url .
redirects to a workgroup with the given parameters .
/ * ( non - javadoc )
validates all the schemas and their sub - validation properties .
compare two files
get the { @link } of the given { @code } .

returns the pid of the process of pid .
validates the given field in the set of all fields and assess the fields that are not equal .
get the user configuration for a given user
/ * ( non - javadoc )
returns the { @link } for the current transaction .
checks if the given path is a directory .
{ @inheritdoc }

retrieves the foreign key for catalog - catalog - sql .
retrieves a metadata table for the given database schema .
retrieves a table view of the table materialized view .
retrieves a metadata table for the given database table .
retrieves the primary keys for the given database schema .
get all table names that are not found in the database .
writes the schema to the given {
write a batch of rows to the specified batch .
writes the record to the given record .


returns the partition key for the partition .
create a new partition record .
record the record to be used for the record .
process the group
checks if the given { @link } is a { @link } .
main program to create a spark configuration file .
forces the backlog to the jobtracker .
configure the client configuration .

resolve all headers from the request .
get a method of a method on the given method on the given method .
fills the given {
get the field of a record
convert a field to a field .
<! -- start generic documentation -- >
load a schema from a string
register a schema registry with the given schema registry .
load a schema from a string .
gets the schema of a given schema .
load a schema from a schema repository from a schema .
write a bson schema to the given output stream .
/ * [ deutsch ] <p > eine . < / p >
get the default schema for the given schema .
parse a record for the given input stream .
logs the version of the .
converts the given string to a string .
initialize the context .
process a response message to the client .

get all the records in the record .
compares this version to the given major version .
initialize the configuration .
get the edge of the edge of the edge
returns the vertices of the edge graph .
adds the edge to the graph of the graph .
serializes the given { @link map } to a { @link map } .


/ * ( non - javadoc )

writes the to the file .
reads a { @link } from the given { @link file } .
creates a new table builder .
deletes the given blob .
copy the content of a blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob / blob /
handle a single error .
handle multipart request .
get the file contents .
release the file .
get the for this client .
add a header to the list of headers .
parses the given string into a date .
select the header of the given string .
> > > > > > / code >
escapes a string in the string .
serialize a string representation of an object to a string .
deserializes an http request to the response .
get the client - side jax - ws client .
initializes the connection from the configuration .
gets the for the table .
creates a new instance from the given collection of objects .
creates a new event .
build a schema from a schema .
converts a string to a descriptive code code point .
add a new class to the list of all the / classes that are not in the jar
add a new {
{
/ * ( non - javadoc )
shutdown the agent .
/ * ( non - javadoc )
checks whether the field is a field in a list of orderby .
checks whether the field of the given field is a valid condition .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the file offset for a given file .

returns the list of all the apars in the specified list .

get the classpath urls for the given classpath .
get the parallelism of the

runs the given job .
returns a field representing the record for a field .
convert a list of udf fields to the { @link tuple } { @link field } .
gets a list of all the field assignments for the specified field .
get the table details for the given table .
validate the table .
get the type of the field
checks if a field is a valid type .
get the schema of a table
get the properties for the given table .
returns the class for the specified class name .
initialize the list of .
returns the topic for the given topic .
converts a java string into a java . sql . date format string .
{
initialize the stage .
verify that the configuration is valid .
evaluate the field expressions on the field expressions .
checks if the given path matches the pattern
release the lock file .
get the file to be used to read the file .
returns the output stream for writing to the file .
commits the file to the output stream .
checks whether this file is available or if the file is available .
/ * ( non - javadoc )
parses the permission permissions .
checks whether the given stage exporter can be used to determine the global global global global global registry .
validates all configurations for all services that have been registered with the given configurations .
creates a new { @link graphql . executionresult } of the given { @link indarray } and returns a { @link }
returns a { @link } instance for the given class .
creates a new aggregator aggregator
create a new gather expression
start the new time zone for the given time window .
stop the { @link } .
/ * [ deutsch ] <p >
/ * ( non - javadoc )
acquires from the given jaas login configuration .
release the instance .
closes all the configuration .
returns the glob - of - glob - glob - glob - glob - glob - glob - glob - glob - glob - glob - glob - glob - glob - glob - glob - glob - glob - glob - glob - string - public - - - - - - - -

returns all the entries in the list .
returns all the entries in the list of all the entries in the list .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
stop the pipeline .
returns the number of concurrent batches of the given batch of batches .
creates a batch of messages for the given .
method .
{
{
sets the configuration for this configuration .
process the record for the given record .
generates a key for a record .
gets the properties for the kafka properties
scan all partitions of the partition .
increments the current partition and returns the last one .
remove the partition owners and remove the partition .
returns the next available {
this method is called from within the sybase .
returns whether the data should be used to create the event data .
reads the next line from the map .
reads a line of line feeds from the line to the specified character set .
increment the name of this device to the specified amount of time .

sets the username to the user .
renew sso cookie .

retrieves the credentials for a given user .
logs the user to be used for the user .
update the current credentials file with the given credentials file .
update the job configuration for the given job .
add a record to the database .

creates a new oauth2 instance of this class .
get a schema from the given field .
generate a schema for the field .
convert a schema to a schema .
get the number of fields in the given field .
returns the default { @link } for the given { @link schema } .
initialize the metrics for a given { @link } .
compare the current path to the current path .
returns the index of the given group name .
returns the names of all the groups that the group belongs to .
checks if a string is a valid escaping .
/ *
checks if a string is a valid quote .
checks whether a string is a valid character .
returns true if the string is a valid character .

extract all groups from a group .
replace the pattern of a pattern in a regex string .
replaces the substring in the given group with the given name and name .
builds a regex pattern that matches the pattern that matches the pattern .
{
/ *
refresh schema from the schema table .
returns a list of all schemas in the table
checks if the given entry is a valid transaction .
{
/ * ( non - javadoc )
initialize the configuration for a given channel
create a from stage configuration
extract data from a stream .
/ * ( non - javadoc )
convert a string to a java object .
parses the given record and returns the number of milliseconds .
parse the given number of bytes from the input list .
get the field value for a byte array .
returns the schema of the schema that are defined by the schema .
returns the name of the class name of the given type .
get the name of the table name .
returns the name of the table name .
populate the table .
get the map of all the databases .
/ * private >
creates a new hsqldb s cassandra schema .
creates the mapping for the field mappers .
converts a java type into a string representation .
returns the name of the table name .
sets the record for the record .
handle sql statement .
get the record for the given record .
classify the batch of sinks and store them into the sinks .
processes the stage stage and stage the acceptor and the to be used .
prepare the batch of training errors .

returns a map of the fields in the map of fields that are not part of the field .
creates a new stage for the given bean .
execute this record .
returns the column names for the column of the specified column .
/ * ( non - javadoc )
build a query string from the given set of parameters .
returns the sql - value for the given string .

returns the naaccr representation of the given { @link } .
returns a map of the values from the geneid - form of the specified map .

generates a new { @link } for the given { @link } .
creates a new { @link } instance for the specified { @code } .
creates a new list with the contents of the list .
creates a new from an existing list of available .
handles the error error .
reads the specified input stream .
returns the list of generators that are available in the given list of strings .
returns a query string for the given parameters .
/ * ( non - javadoc )
returns the list of arguments for the given list of strings .
returns the operation for the operation .
format the given unit to a string .
scan the current thread and return the file .
gets the total number of files that were deleted from the current user .
returns true if the given {
checks if the given string matches the given set of strings .
initialize the service .
returns true if the output of the output is a valid output file .
main method .
{
{
this method is called by spring configuration .
/ * ( non - javadoc )
{
process the record for the given field .
validates the report for the report .
method to escape a character from a string .
creates a new database .
creates a new database and writes the data to the database .
upgrade the configuration to be used in the config
extracts the tags from the given string .

create a new .

set up fields .
{
create a new
/ * ( non - javadoc )
creates a gauge that allows to create a gauge that allows to create a gauge to be added to the gauge .
remove a metric registry by name .
returns the column names for the column of a column .
/ * ( non - javadoc )
generate a map of header parameters from the file .
validate the given record .
returns the file path of the given file .
handle the file .
returns a stream of uninterpreted bytes from the input stream .
reads the contents of a file from a stream .
write the yaml file to the output file
{
validates that the given package is a valid package name .
validates that the given resource is a valid json resource .
checks if a field is valid for the given field .
checks if the given field is valid .
returns the field on the field in the input field .
returns the field s {


generate the gnuplot batch file for a given file .
initialize the .
handle error code .
returns whether the graph is a graph and returns true if the graph is not found .
sets the pattern matched by this pattern .
append the pattern to the pattern
returns a map containing the names of the group names in the group .
replaces all occurrences of patterns replaced with the replacement for this string .
get properties of the job
get the name of the field in the given path .
escapes the quotes in a string .
unescapes the / quote / quote character from the given string .
returns the path to the path of the given path .
//////
returns the global variable name from the given {
classify the given { @link } to a { @link } .
creates a new record .
creates a new event record .
gets all the fields for the given list of all the keys in the list .
fixes the infowindow in the image .
extract the value of a field from a string .
execute a query by finding the partition name of the partition .

execute the query and returns the results of the partition .
execute the query and returns the result of the () method .
execute a query by executing the given sql statement .

execute the query and delete the query .
execute a query and execute the given query .
returns the last source code from the source string .
execute a batch of stage .
invokes the {
returns the current trigger for the given trigger .
report the current stage pipelines .
consumes a pipeline from a pipeline .
get the record for a record .
converts a record to a record .
returns the field value for the field .
checks if the port is valid .
handles an exception thrown from an exception .
handle an error on the provided action .
sets the fields to the output .
sets the record .
method .

handles a { @link } .
initialize the .

creates a new instance of the specified classloader .




sets the stage of the stage .
get the map of attributes for the given user .
sets the attributes of the user .
this method is used to update the current session .
logout a logout () .
sets the .
replace occurances of path
checks if the given path is a valid library .
create a new { @link } for the given { @link } .
create a new from the given field .
generate the type of the given column descriptor .

main entry point for the application .
get the relative path of a directory .
renames the given path .
mark a file to be closed .

{
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the path separator character .
returns the pattern of the pattern .
converts a collection of strings to a string []
matches if a string matches a regex
sets the map of the map of the file names .
get the map of the file names .
returns the milliseconds for the milliseconds .
returns the next chunk of the next chunk of the next file .
get the map of export data
creates a new stage for the given stage .
creates a new { @link } .
creates a new instance of the given {
configure the {
gets the access token .
get the metric from the given metric .
get the total number of metrics for a gantt designer .
main method .
/ * ------------------------------------------------------------
decode the header values of the header .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
get the body of the response .
saves the given file to the file .
creates a { @link } from the given { @link sslcontext } .
creates a new { @link } from the given { @link proposaldevelopmentdocumentcontract }
creates a new { @link } .
returns the mime type of the given uri .
/ * ------------------------------------------------------------
returns a new { @link net . dv8tion . jda . core . jda } object from the given { @link response } .
stops the server .
add a new route annotation .
send a message to the server .
sends a request to the given stream .
creates a response from a file


creates a new message builder with the given message and returns it .
checks whether the mime type of the given mime type is a valid mime type .
read the current state of the input stream .
/ * ------------------------------------------------------------
get the payload text .
read payload from the stream .
write the payload to the output stream .
sets the cookie .
removes the response from the queue .
removes a session from the session .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * public static ( ) { ( ) ; ( successhandler successhandler ) ; charset ( ) ; }
encodes the given string value into a base64 encoded string .
sets the domain name of the domain name .
sets the table name .
{
/ * ( non - javadoc )

{
get the name of the .
configures the connection to the server .
/ * ( non - javadoc )
{
checks whether the request parameter is a valid request .
returns the name of the principal .
/ * ( non - javadoc )
returns the { @link } for the given { @link } .
resolves the principal name from the session .
{
returns a session that is expired .
get the { @link } for a given { @link } .
{
gets the name of the given { @link modelnode } of { @link javax . app . nodetypemanager } .
returns the parameter for the given method .
register a to the
/ * ( non - javadoc )
initialize the slot with the given id .
returns the current transaction if it exists .
returns the value of an attribute as a string .
/ * start the service .
{
returns the list of entries in the list of entries .
{
get the list of service implementations to use for the given service name .
validates the credential .
methode permettant dans
initialize the
initialize the tracker .
bind the object to the given {

cleans up the map of all the namenodes .
/ * get the oid of the oid of the oid object from the oid string .
checks whether a new object is a persistent object .
/ * ------------------------------------------------------------
serialize the object to the map .
checks whether the given is valid .
reads the current number of locks that are held by the current thread .
locks the current lock on the queue .
adds the deployment modules to the deployment .
adds the deployment modules to the bda .
add a service to the service .
returns the for the given .
accepts the { @link } .
register the given action in the container .
/ * ( non - javadoc )
get the method method method .
handles the { @link } .
authenticate the given security token .
returns the for the given module .
returns the for the given .
{
returns the current thread for the current thread .
this method calculates the dependency graph for the dependency graph .
/ * package

create a from the given deployment .
sets the configuration for the configuration file .
returns the list of objects for the given list of .
returns the mapping of the jawr servlets
gets the servlet mapping for the service meta data .
resolve the { @link } .
{
get the { @link } for the given { @link operationcontext } .
{
parse the operation for the given operation .
parses the {
create the for the given container .
returns true if the given { @link } is a valid bean type .
returns the address of the address of the specified address .
sets the address of the operation .
returns the operation attribute value .
returns true if the operation is a template .
creates a composite composite composite operation that is used to create a composite node .
creates a new operation operation operation creates a new operation that can be used to create a new operation .
creates a new operation operation on an operation .
creates a new operation operation on the specified address attribute .
creates a operation operation for a operation operation .
creates an operation to create a new operation .
returns the value of the current context .
add a new context to the given url .
remove a given url from the factory .
{
loads the providers from the given { @link thread#getcontextclassloader } object .
{
{
get the request path .
/ *
/ * ( non - javadoc )
configure the given { @link } .
/ * ( non - javadoc )
returns the name of the class name of the given class .
{
get the last day of month from the given date .
filters properties for given properties
get the repository name for a given resource .
creates a new { @link } instance for the given { @link javax . security . security . security . } .
sets the current security context to the current .
returns the security context for the given context .
clears the security context .
returns a { @link } that contains the given { @link } .
returns a that contains the given .
processes a deployment to the server .
gets the deployment tree for the given deployment .
returns a description for the given description .
installs a service binding .
installs the given service and registers the {
register a new instance of the given collection of attributes .
inject a property on the object .
checks whether a given class is a valid type of the given property .
find method for method parameter .
find the field for a given field .
{
{
escape a string with a backslash .
initialize the options options .
returns a description for the specified description .
{
returns the request url .
/ * ( non - javadoc )

creates a new .
register the deployment deployment .
unregister a deployment .
{
{
{
<p > the <code > / code > is used by the account to the user . < / p >
builds the context context for the request .
build the message info .
returns the subject for the subject .
reads a string representation of a given name from a reader .
reads a string from a reader .
reads attributes from a collection of attributes .
{
f743 -
register a to the server .
factory method for creating a new { @link } .

reads a stream of the given inputstream .
returns true if the given throwable is a throwable .
returns the remote object that represents the remote object .
/ * start the service
/ * ( non - javadoc )
returns the set of interfaces that are annotated with the given interfaces .
returns the set of interfaces that implement the given interfaces
marshals the given entitymanager with the given entitymanager .
writes the attribute to the given {
/ * private methods
creates a new instance of the given security context .
sets the current context to the current context .
write the content to the

<p > . < / p >
get the owner of the owner object .
release the instance of the current thread if it is not already present .
releases the lock to the lock .
add a new entry to the list of files in the given file .
add a file to the file .
add a new path to the list of files .
add a stream to the audit file .
adds the given content to the log .
creates a thread - thread - thread - thread - thread - thread - thread - thread - thread - thread - thread - thread - thread - thread - thread - thread - safe thread - safe thread safe way to create a thread - thread - thread - thread - thread - thread - thread - thread - thread - thread
rewrite the module to the module .
create a new
gets the view .
invokes the endpoint with the given endpoint .
gets the { @link } for the given { @link component } .
checks whether the given method is a method on the given method .
create a new { @link } from the given { @link } .
{
gets the { @link } for the given { @link } .
/ * ( non - javadoc )
{
{
{
get the domain name of the security hub .
returns true if the given service object is a secure secure secure secure security object .
get the transport protocol for this transport .
gets the ejb meta - security for the given ejb name .
gets the domain name .
ensures that the security domain is allowed .
get the value of the current resource bundle .
{
sets the name of the .
returns the absolute path of this parent .
create a new { @link } instance .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the transaction is a transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction transaction .
get the transaction .
returns a connection factory for the connection factory .
get the last name of the named component .


returns a new {
returns a {
execute the given { @link } .
returns the enumeration of the given collection of elements .


handles a { @link modelnode } .
/ * ------------------------------------------------------------
this method will be called by the operation to create an instance of the specified {
parse the connection attribute .
/ * parse the configuration from the connection configuration
parse a connection definition from the configuration and sets the configuration parameters .
parse the given { @link } .
creates a new instance of the instance of the instance .
create a new instance of the instance of the given instance .
create a new instance of the instance .
stop the interceptor .
merges the given { @link } with the given { @link } .
gets the for this virtual service .
resolves the given { @link uri } with the given { @link uri } .
deploy the deployment .
checks whether the given bean is a bean .

initialize the resource registry .
{
returns the { @link } for the given class .
shuts down the executor .
creates the entitymanagerfactory for the given entitymanagerfactory .

gets the .
gets the servlet mapping for the servlet .
returns the list of objects that are contained in the security constraints .
get the meta data for this .
returns the for the given parameters .
get the resource metadata for the resource .
gets the .
creates a new { @link } instance for the given { @link } .
creates a new instance from the given url .
create a new servletconfig servlet .
create a new mapping
creates a new { @link } with the given { @link } .
create a new with the given and
create a new .
create a new object
{
{
/ *
register a new
creates a new .
creates a new { @link } object from the given codec registry .
creates a new for a given .
/ * create a for a given domain .
creates a new { @link } instance for the given { @code } .
creates a from the .
create a new .
creates a udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp udp
creates a new .

returns the byte array .
xors the given byte array with the given name .
encode the given win32 - encoded auth token .
decodes a token from the given encoded token .
returns the decoded byte array .
get the effective for a given
{
processes the of the given deployment and stores the results in the .
<p > process a class hierarchy to the target class hierarchy . < / p > <p > the method is used to process the injection point of the target class . < / p > <p > for example if the class is a java bean then the java class is used to determine the class hierarchy of the injection class .
{
get the name of the service .
{
resolve the attribute value of a goog .
{
reads the xml file from the given url .
creates the for the given
returns the type of the given pattern .
returns a map containing the data points for the given .
associates a new with the given entitymanager and its parent .
returns true if the connection is running on the connection .
returns true if the connection is available for the given { @link } .
returns the properties of the server .
find the current deployment group .
returns the name of the persistence unit .
deploy the deployment .
returns true if the class is annotated with the given annotation .
start the service lifecycle .
stop the current activity .
/ * ( non - javadoc )
{

completes the current connection .
/ * ( non - javadoc )
/ * private void (
releases the current thread .
start the client context .
stop the current context .
get the capability of the service factory .
creates a resource resource .
{
{
creates a new { @link } that is invoked on the given { @link } .
<p > . < / p >
get the reference reference for this object .
{
{
processes the { @link } and checks whether the { @link } is active .
deploy the deployment .
returns all the classes in the module .
replies if the properties of this class is a leaf .
checks whether the given propery is valid .
returns true if the database should be used by the datasource .
<p > . < / p >

returns true if the given entitymanagerfactory is a .
{
>
get a local variable from the server .
creates a java awt java object .
initialize the class .
sets the active ssl connection manager .
initializes the shiro manager .
bind the named { @link object } to the given { @link java . util . context } .
bind the given name to the given name .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
unbind the given { @link name } from the given { @link name } .
renames the specified {
renames a given name .
returns the list of known projects matching the specified name .
destroy the given { @link me } .
creates a jndi name for the given { @link context } .
looks up a link to the named resource identified by name .
returns the name of the named {
compose a string with name / value pairs .
adds a new property to the given service .
add a new target listener to the specified target type .
add a listener for the specified target type .
configures the application to use for the given { @link } .
register the given action on the container on the container on the container .
validates the values of the given { @link } .
<p > get all optional converters for the given class name . < / p > <p > the default implementation simply returns the converter for the given class . < / p >
get the list of all the classes in the given class .

returns the default value of the annotation if the annotation is not found .
validates a given method and return a new method .
{
{
register a to the given { @link } .
gets the for the given entity manager .
converts the given status to a string .
checks if the given attribute is not null .
creates a new instance of the given { @link } .
creates a new entity instance .
start the event for the given event type .
adds a new event to the cache .
stop the cache .
{
extract the properties from the configuration .


checks the database to be used by the database .
converts a date into a date .
sets the to be used for the given .
marks the given { @link } .
checks whether the given deployment is a valid deployment
reads an array of parameters from the stream .
writes the current output to the given output stream .
serializes the given exception into a { @link outputstream } .
get the replying reference for this reference .
returns a description of the given .
reads a list of { @link } s from a list of { @link } s .
lookup the class for the given class .
{




returns a map of the current of the current stack trace .
returns the current stack of the current context of the current stack
/ * ( non - javadoc )
processes the .
this method is called by the to determine the bda for the given listeners .
convert a class to a string .

insert a primitive primitive primitive into a primitive primitive .
returns the name of the given name .

checks whether a string is a valid
checks whether the specified character is a valid .
returns the constant class for the given class
returns the type of the class that is the type of the class .
returns the signature of the given method .
converts a type to a string representation .
{
create a new { @link } with the given name and name .
bind a service to the service .
/ * ( non - javadoc )
create a new instance of the class that implements the given class .
returns a resource for the given resource .
/ * ( non - javadoc )
{ @inheritdoc }
checks whether the map contains all of the mappings .
associates the specified value with the specified key .
puts all the mappings from the specified map to this map .
converts the given {

returns the class name of the class name .
returns a new { @code } for the given { @code } .
get a map of timers from the .
get the directory name from the given directory .
{

register a new instance of the object
checks if the given class is a { @link } .
add a listener to the target class .
remove a new
fire the given event to the given context .
closes the underlying {
creates a subject that is subject to the subject .
create a subject for the given subject .
create the subject for the given subject .
returns the current service .
add a subject to the object .
creates a new {
get the { @link connectiondata } for the given { @link connectiondata } .
{
create a factory object for the given object .
returns the instance of the given object name .
/ * ( non - javadoc )
add a new view to the view .
load class name and return type if it is not a class .

substitute the character from the given string .
/ * ( non - javadoc )
stop the .
returns the for the given resource .
add a deployment to the list of the parent classes .
gets the deployment root deployment .
returns the service name for the service .
create a new { @link } instance with the given configuration .
creates a new instance of the service factory .
gets the reference reference to the current reference .
get the for the given method
adds a { @link } to the list of { @link } s .
add a method to the list of methods that are registered by this method .
get all { @link } s of a method .
adds a { @link } to the list of { @link } s .
add a method to the list of interceptor .
add a type converter to the data object .
creates a new { @link pluginregistry } for the given { @link classloader } .
adds an element to the reader .
removes all children of the given node .
create a new .
get the deployment report for the given deployment
get all { @link } s that match the deployment .
returns the name of the name of the current url .
get the class name for the given class .
gets the servlet name for the servlet name .
get the attachment for the given key .
get attachment file
get the from the given context
get the { @link } for the given deployment .

returns the root deployment root of the given deployment .
transform a operation to a operation
/ * start the service .
gets the properties for the given {
setup the
/ * check whether ssl is enabled for the given
/ * start the service
{
transform an operation to an operation .
{
/ * ( non - javadoc )
{
returns the list of all child resources in the given path .
deploy the module dependencies for the module .

gets the entitymanager with the given name .
register a new .
{
deploy the deployment .
process the servlet annotations .
update the value of a given value .
{
{

starts a server .
checks if the given method is a method on the given method .
checks whether the given class is a public static field .
get the reference reference for this reference .
lookup a search instance .
returns the interfaces for the given interfaces .
returns the type of the type .
returns a description for the given .
decode a string .
decode a base64 encoded string into a string .
/ * encode the given string into a base64 encoded string .
<p > . < / p >
creates a new endpoint instance from the given endpoint .

returns the uri of the given http request .
create a uri from the given uri .
checks whether a deployment is a deployment .
{
{
{ @inheritdoc }
sets the next time .
{
returns true if the given { @link } is active .
check if the timer is a reference to the given { @link } .
sets the timer state for a given state .
merge all the contexts of the given deployment into the current deployment .
returns the roles for the given roles .
get the prototypes to the
returns a description for the given identifier .
deploys the module and add them to the module .

sets the authorization policy for the given policy .
returns the list of authentication credentials for the given request .
add a new to the list of recent sessions .
/ * ( non - javadoc )
sets the of the bundle .
adds a dependency to the server .
returns true if the given subject key is the same .
<p > get all the { @link } s that are registered with this method . < / p >
sets the specified attribute to the specified {
sets the attribute name .
sets the attribute name .
checks whether the given method is a getter method .
creates a new service instance with the given id and client id .
{
get the service name for a given service name .

returns the for a given class .
returns a new { @link } for a given class name .
returns the for the given class .

merges the given class with the given class and its root class .
checks that the given element is not a valid element .
refreshes the job executions for the job .
returns true if the operation is a operation .
creates a new from the given attributes .
returns the bean class for the given class .
get the bean s class .
gets the class name .
returns the type of the given type .
get the definition of the given { @link } .
get the for the given { @link } .
returns the { @link } for the given { @link } .
get the for the given { @link } .
parse a name from a string .
returns the name of the specified name .
converts a string to a string .
returns the name of the name of the name of the name of the name of the name of the name of the name of the name of the name of the name of the name of the name of the name of the name of the name of the name of the name .
convert a string to a vector
this method returns the for the given name .
escape unprintable characters .
transform an operation to an operation .
shutdown the cluster .
/ * ( non - javadoc )
stops the given service loader .
authenticate the given user .
returns true if the given class is a primitive type
{
/ * ( non - javadoc )
instantiates a bean from the bean .
configure the bean with the given configuration .
dispatches the bean to the server .
creates a new { @link } for the given { @link } .
create a new instance of the service factory .
returns the service object for the specified object .
gets the current context .
returns the {
returns the { @link } for the given class name .
returns the list of classes implementing the given list of classes .
gets the class name for the given name .
{

deploy the deployment .
create a new { @link } for the given { @link }
parses the request .
this method converts the given list of to a list of objects .
creates a deployment name for the given deployment name .
===================================================================
returns the descriptor for a given parameter .
validates the descriptor of a descriptor .
deploy a deployment .
returns the reference to the current reference .
create a new deployment file with the specified <code > / code > .
create a new web application

create the deployment admin
create a new servlet instance from the given service and the service .
create a new security rule set in the given set of security constraints .
login to the given jaas login configuration .
create a new configuration set
returns the for the given service .
deploy the deployment .
handles a .
creates a class for the class name .
lookup the search for the search for the given id .
gets the identifier of the given identifier .
/ * name -----
transform this operation to an operation .
{
{
starts the {
{
{
{
removes all the classes from the given set of providers .
adds all the to the given deployment descriptor .
returns the classloader of the given classloader for the given classloader .
reads a xml element .
reads a xml element .


sets the value of the property .
processes the xml description of the given xml node .
parses a xml specification and registers the xml file .
processes a { @link } .
parse the configuration for the given attribute name .
parses a xml declaration from a json xml file .
parse the configuration for the given configuration attribute .
parse the configuration for the given { @link modelnode } .
parse the given namespace and namespace declarations .
parse a property definition from a property definition .
parse a property definition from a property declaration .
parses the attributes of a given attribute .
write a { @link } to a { @link } .
write a value to the writer .
writes the property to the given { @link } .
write a { @link } to the { @link } .
/ *
write a property to the node .
writes attributes to the given attribute .
checks if the given { @link attribute } is a { @link } .
{
/ * package
/ * package
deploy the deployment .
run the
{
execute the operation .
rejects the current thread local .
add the to the deployment bundle
deploys a deployment .


get the .

lookup the persistence unit .
this method is called by the deployment manager to determine the readiness of the current deployment .
add the to the deployment .
returns the fedoraresource for the given fedoraresource
{
creates a new { @link } .
build the meta data for the given configuration .
build the for the given .
validates the given resource to the operation .
refresh the current state of the .
get the deployment name of the application deployment
returns the name of the deployment file .
get the reference reference for this reference .
returns a description for the given identifier .
{
parse the given attribute for the given attribute .

handle exception and return the exception .
binds the given service binding and its dependencies .
/ * ( non - javadoc )
returns the for the given class .
returns the {
creates a new from a .
/ * ------------------------------------------------------------
converts a hex string to a string
converts a long to a hex string .
returns true if the given method is a getter .
returns true if the given method is a method .
checks whether the given method is the same as the method .
analyze the fields of the fields .
/ * ( non - javadoc )
analyzes the method .
returns the name of the attribute name .

analyze the fields of the dbase fields .
analyzes the attributes for the given and attributes .
/ * ( non - javadoc )
generate the sort of the given sort .
calculates the class hashcode for the class .
converts a string to a string .
/ * ( non - javadoc )
{
{
processes the given {
parses the given { @link } and sets the default value .
processes the attributes of the specified attribute .
load module repositories provider .
main entry point for the application .
get the reference reference for this object .
returns a description for the specified attribute .
adds a new step to the given .
/ *
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
write a attribute to a boolean .
register an operation on the registration .
start the task .
invoke a stream of the given stream .
/ * ( non - javadoc )
authenticate the given principal .
creates a new { @link } instance .
/ *
creates a new session based on the given session .
<editor - fold defaultstate = collapsed desc = >
{
/ * ( non - javadoc )
starts the {
stop the connection .
end the transaction .
sets the transaction level to the current transaction .
checks whether the given { @link } is a { @link } .
register a set of handlers for the given endpoint .
adds a to the list of the objects that are contained in the object .
create the policy set for the list of policies .
generates code for the method .
generate a compile - based stub for a class .
returns the { @link } for the given class name .
compiles the given class and its superclasses of the class .

returns the job names for the job .
initializes the configuration for the given job .
/ * ------------------------------------------------------------

initialize the object .
/ * this method is used to convert wsdl url to url
initialize the url .

lookup a named name .
lookup the name of the named { @link org . apache . maven . servlet . service . } .
/ *
bind the given object to the name of the named resource .
binds the given name to the given name .
call this method to call the {
unbind the given <code > igroupmember< / code > into <code > this< / code > object .
renames the given name .
renames a given name .
{
call this method to call the () method .
delete the named mbean .
bind the jndi name to the given {
create a new service instance .
<p > return the named link for the named name . < / p >
adds a property value to the specified property file .
removes the specified property from the specified {
adds a configuration for attribute definitions .
{
{
{

write the entity to the bean .

writes the given { @link resourcemodel } to the { @link } .
gets audit audit configuration .
gets the authentication manager .
get the authorization context for a given jaas framework .
gets the trust manager for the given trust manager .
get the for the given
/ * ( non - javadoc )
removes the domain - server - side security domain .
returns the root object for the given context name .
creates a new domain object with the given security context name .
creates a new instance of the given security domain .
creates a new with the given and
creates a new authenticateduser object for the given clientid .
create a audit - audit message service .
creates a new instance .
create a for the given .
sets the flag to the
get the type of the given type .
create a new { @link } .
create a new instance of a class .
create a new instance of a class
starts the {
stop the scheduler .
main method .
parse the .
returns the { @link } for the given { @link } .
wait for the service to be used for the service .
returns the encryption client for the given password .
this method is called by the offload operation to create the vault .
/ * ( non - javadoc )
adds a new token to the vault .
add a new event to the list of recipients in the specified vault .
checks if the vault is a valid identifier .
remove a vault removal for a given participant .
retrieves the vault id for a vault . the vault is the primary key and the user s permissions are ordered by the last token .
add a request to the vault .
sets the current configuration of this { @link } . <p > this broadcasts the configuration with the default configuration .
returns the client credentials for the vault .
adds a resource to the resource bundle .

get the deployment service name from the deployment service
registers a new resource with the given identifier .
insert a new object
deploys the deployment deployment .
checks if this request is allowed to be used in the given permission .
checks if the given { @code name } is a valid { @code name } with the given name and the given name .
returns the action for the action action .
creates a new { @link } for the given { @link } .
checks if the given string is a valid name .
returns the name of the last character in the current line .
register the mbean mbean server .
sends a notification to the notification .
{
{
gets the transaction .
{
returns true if the boot context is a .
invoke the method on the lifecycle .
/ * ( non - javadoc )
get the value of the type of the given type .
returns the {
returns all the interceptors that were found in the list of interceptors .
get the interceptor for the given class .
add a method to the list of interceptors .
add a interceptors to the list of interceptors that are registered with the given interceptors .
add a new annotation to the handler .
sets the .
adds the dependency to the service .
get all methods from the list of interceptors .
returns the list of methods that are associated with the given method .
adds a new interceptor to the list of interceptor .
add a list of methods to the list of interceptor members .
adds a method to the list of methods for the given interceptor .
add a method to the list of interceptors for the given method .
add a method to the remote executor
get all interceptors of all the interceptors in the repository .
add a new interceptor to the list of interceptors .
get all interceptors for all parameters
add a new interceptor to the list of interceptor .
get all interceptors in the list of interceptors that are registered by the interceptor .
add a new interceptor to the list of interceptors .
get all the descriptors for all the interceptor methods .
add a new { @link } to the list of interceptor .
get all the interceptors of all interceptors in the list of interceptors .
add a new interceptor to the list of interceptor .
create a service factory for the service .
returns the value of the component component .
gets the module for a given module .
returns the mo for a domain .
find the dependency for a module .
sets the { @link } for the given { @link org . jboss . as . controller . } .
sets the to be used by this .
accept the builder .
creates a new service name for the given service name .
returns the { @link module } for the given application module name .
returns the { @link } for the given module name .
get the { @link } for the given module .
get a { @link } instance for a given name .
queues a transaction to the repository .
returns the attribute text attribute of an attribute .
/ * ( non - javadoc )
binds a binding to a target object .
returns the response of a string .
get the reference reference for this object .
returns the type of the vm .
returns a description for the given .
get the members of a member .
get the for the given member .
deploys the deployment deployment .
creates a modelnode that represents the subsystem subsystem .
parse a configuration attribute of the configuration attribute of the configuration attribute .
{
{
{
start the service context .
{
deploy the deployment .
returns the { @link servicename } for the given deployment name .
add a new child to this view .
add a new message to the list of destinations .
get the view s child components .
get the set of components that are currently running .
get the set of components .
resolve all messages in a set of prefixes to the set of apars that are matched by the given file name .
builds the builder for the builder .
builds a builder for the given .
builds the builder for the builder .
checks the validity of the attribute .
renames a given { @link } .
gets the connection authentication session .

removes the given { @link } from the cache .
returns the singleton instance of the { @link } .
invoke the given method on the server .
/ * package
load the list of module dependencies .
checks the version of the version .
slot the version of a slot .
{
{
{
returns the reference object for this instance .
get the interceptor for a method .
destroy the receiver .
configure the configuration for the credential .
deploys the deployment file to the deployment bundle for the deployment .
populate the operation - catching - the operation .
gets the constant class for the constant constant .
gets the class for the class .
add a class to the class .
returns the for the given .
<p > get / p >

checks if the given is a static initializer .
add a to the list of .
adds the given <code > / code > to the <code > / code > .
add the given to the .
add the given { @code } to the { @code } .
add all to the base class
add a class to the list of classes that are the class of the class .
add the given class to the list of the given type .
add a class to the list of interfaces that are registered for the given interface .
add a to the list of .
add a to the .
returns the class name of the given annotation .
register a new
checks whether the given { @link } is a { @link } .
start the service service .
stop the current context .
{
deploy the modules .
push the token from the given { @link } .
adds handlers to the handlers .
checks if the given { @link } is a { @link } .
checks the current transaction .
throws { @link } if the given { @link } is not already running .
throws an exception if the given { @link } is not already registered .
gets the deployment tree .
returns all the classes in the given {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a timer for creating a timer .
creates a instance for a given schedule and the given schedule .
returns the timers of the timer .
/ * ( non - javadoc )
suspends the current timer and timers .
restore a list of timers from the timer .
start timer for recording the timer .
returns true if the current context is a proxy .
schedules a timer event .
cancels the timer that is idle for the task .
returns the current active timers for the given .
setrollbackonly - rollback transaction to rollback the transaction
returns true if the timer is a timer or {
returns true if the given class is a super interface .
returns the direct super interface for the given class .
filters the interfaces implemented by the given class .
this method is used to process the given parameters .
returns the map of parameters for the given parameters .
returns a map of parameters from the given parameters .
processes a { @link } instance and registers it with the given arguments .
returns a map of all the bindings in the given collection of { @link } .
returns the { @link namespaceregistry } of the given service name .
returns the class type for the given type .
convert a value to a class .
returns the string array of all the values of the given array of values .
finds the method with the given name and method .
returns the method with the given name and signature .
checks whether the given type is a type of type {

get the next value .
returns true if the given { @link } is a valid child .
/ * ( non - javadoc )
adds a property to the list of properties that are the property in the list .
add properties to the registry .

adds all the addons to the list of validation actions .
closes the { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds the given object to the current context .
{
{
returns the enum value for the given { @code value } .
returns a boolean value indicating whether the value is a value or a default value if it is not .
gets the value of the specified { @code value } from the { @code value } .
returns the value of a particular property as a boolean value .
returns the value of the specified { @code int } from the { @code value } .
returns the value of {
returns the value of a particular property as a { @link modelnode } .
returns the property value as a { @link property } instance .
returns a list of property values for a property .
returns the value of the given { @code optional } .
returns the enum value for the given value .
creates a new { @link } for the given { @link resource } .
create a new { @link } instance that can be used to create a { @link } instance .
create a new { @link } instance that can be used to create a new { @link } instance .
get all roles that are not authorized .
skips the given input stream .
/ * ( non - javadoc )
checks that the given element is not null .
invoke the given { @link } in the given { @link object } .
invokes a new operation on the given target object .
invokes the given operation on the given { @link byte [] } .
invokes a new operation on the given operation .
invoke a static operation on the given target and store the new value .
invokes a new operation on the given target and store the result in the given { @link } .
invoke a new operation
invokes a new operation on the given operation .

create a new based on the given and

add a component to the component .
add a class loader to the classpath .
transform an operation to an operation .
bind the named object to the specified name .
bind the named type of the named { @link action } to the specified type .
/ * ( non - javadoc )
adds an object to the specified class .
unbind the given <code > / code > to <code > false< / code >
lookup the given name and return the corresponding object name .
returns a list of all known suffixes of the named child node .
returns a list of bindings for a given name .
add a listener to be fired on the specified target type .
remove a listener from the listener
returns the principal that the principal is the subject .
reads the list of {
deploy the deployment .
/ * ( non - javadoc )
adds a factory to the factory that allows us to be called by the constructor .
<p > save the context - specific context for the given context and context . < / p >
returns the { @link objectname } for the specified name .
adds the given deployment to the deployment .
checks whether the given dependency is a dependency of the dependency .
create a from the given
create a new .
creates a new that is not already created .
get the default resource registry for the given resource .
returns the singleton instance of the given object .
release the object pool .
returns the list of entries in the list of entries .
analyze the given analysis operation .
calculates the for the given operation .
this method calculates the of the to be used by the .
register a resource with the given { @code } .
prepare the from the context
deploys a new deployment deployment
publish service to publish deployment service to publish deployment service .
stops the deployment .
starts the service .
stop the application .
get the bean for a given mbean
add a new service to the registry .
register a configuration with the given endpoint configuration .
add a new to the list of messages .
{
/ * ( non - javadoc )
retry the timeout for the given
post the timer to the timer .
{
returns the {
returns the fields declared by the given class .
sets the given {
returns the constructor for the given class .
returns the method with the specified name .
sets the of the given address in the given address .
create an instance of the given { @link operationcontext } .
checks whether the given resource is a boolean type .
this method is called by the { @link () } method .
sets the attribute definition to the given value .
{
{
deploy the deployment descriptor .
cancel the state of the event .
called by the executor that is called from the .
sets the current type of the current node to be updated .
reads data from a data buffer from the given data position .
returns the segment s unsigned bytes in the given byte buffer .
clones this object to a new object .


creates a new { @link } .
extract the field name from the field name .
checks whether the given { @link } is a valid target or a new { @link } .
estimate the number of times the given threshold matches the given threshold .
find classes in classes subdirectory of a package .
returns the list of interfaces that implement the given interface .
returns the generic type of the given interface .
returns the type of the given class .
returns true if the class is a primitive type .
execute the given record and returns the result .
{
converts the field s field into a field .
execute the role .
update the record for this record .
find record record record .
execute the create index .
/ * ( non - javadoc )
deserialize a new object .
/ * ( non - javadoc )
deserialize a new { @link bytebuffer } from the given bytebuffer .
/ * ( non - javadoc )
{
create a new edge from the given set of properties .
pessimistic to
returns a map of all the agents in the set of all agents / agents .
returns the set of all servers in the cluster .
calculates the unique distance between the given parameters .
translate the given { @link } to the { @link } .
returns true if the given expression is a
checks if the given { @link } is a { @link } .
splits the tree into a single - line tree .
/ *
add the order order order to the order of the elements in the order they are grouped by the orderby of the order they are added .

split a query into a single number of rows .
adds a new filter to the group .
extract the information for the given {
checks if the given cluster is a cluster .
check if the index matches the schema and the .
returns true if the given visitor is a leaf .
returns the top level of the given { @code } .
checks whether the is a valid .
find the best index of the given input stream .
find all of a list of .
checks whether the given { @link } is a { @link } .
builds the for the given index .
builds the index of the given index .
returns a list of known candidates for the given list of alternates .
create a new instance of the given { @link } .
/ * ( non - javadoc )
convert a string representation of the string representation of the string representation of the given { @link object tokenizer } to a { @link stringbuilder } .
execute the given record and returns the result .
/ * public void ( ) { ( ) ; ; ( ) ; }
checks if the given propery is a rule
get the server - side summary of the server .
initializes the database .
loads the databases from the database and sets the to the server .
remove the given node from the node .
this method will return the lock manager for the current thread .
attempt to assign the current state of the server to the server .
/ * ( non - javadoc )
deserialize a new { @link bytebuffer } from a { @link bytebuffer } .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
commits the transaction .
rollback the log .
update the record for the given record .
updates the record status for this record .
prepare the path to the path for the given path .
remove a file from the target file .
returns a list of all the patterns that are not in the given list .

/ * ( non - javadoc )

returns true if the device has been connected to the given host .
execute the command .

merges the given { @link bytebuf } into a { @link bytebuffer } .
merges bloomkfilter buffers into a new buffer .



executes the command .
execute the .
{
{
run the given <code > / code > to the database .
returns the first matching object .
returns the value of the entry for the given entry .
shrink the write operation .
creates a new read lock .
checks the validity of the epoch .
open the file to be used by the file .
close the connection .
deletes the file .
replaces the content of the given file with the given content .
/ * ( non - javadoc )
ends the network .
this method is used to set the server to the server .
add host port to the host port of the host .
sends a request to the server .
/ * ( non - javadoc )
{
get the database database for the database .
/ * ( non - javadoc )
initializes the { @link } .
connect the connection to the server .
connect to the given connection .
gets the connection connection from the connection channel .
returns the connection to the given connection .
kills the connection .
interrupt a new { @link } .
disconnect the slave of the connection .
push a remote to the remote server .
swap the elements of the given array at the specified position .
{
handles a new record .

checks whether the record is a record ( see {
/ * ( non - javadoc )
generate the package name of the class .
generate the schema for the given schema .
synchronizes the schema of the database .
update the metadata for the given metadata .
consumes the next record from the current position .
{
{
{
{
execute the given graph .
reads the next character from the given stream .
execute the query .
creates a new {
creates a new { @link } for the given request type .

{
register a new instance of the given class .
gets the number of files that are part of the current file .
get the memory usage of the memory usage of the memory usage of the current memory usage of the given memory usage .
get the memory memory for the given memory .
updates the target state for the specified target object .
execute the create closure .
adds a new { @link } to the { @link } .
moves the position of the given position into the position .
returns a byte array that contains the byte array .
sets the value of the given byte array to the given byte array .
fill the buffer with the given byte buffer .
execute the

converts the given object into a temporary record .
returns the generic type of the given object .
{
execute the .
/ * ------------------------------------------------------------
deserialize a string from the given bytebuffer .
writes the given { @link } to the given { @link } .
load the configuration from the given configuration file .
reads a byte array from the given stream .
checks if the given array contains the given array .
checks if the given array contains the given element .
parses the given <code > / code > into the <code > / code > object .
adds the filters of the filter to the given filter .
assigns the ncs - foreignkey to the given filter .
{ @inheritdoc }
execute the graph .
updates edges of the given set of edges .
find all edges with the given
adds a batch of records to the batch .
build a select statement for the given select statement .
returns whether the given { @link } is equal to the given { @link } .
/ * ( non - javadoc )
adds the given to the list of the specified index .
returns the list of fields that are present in the list .
get the value of the property .
create a new object
returns all the possible values for the given list of types .
{
/ * ( non - javadoc )
execute the command .
splits the given split into a .
converts the given {
check if the chain is a valid chain
get the for this item .

sets the string value of the string .
advances the value of the probe index .
commits the transaction .
execute the create index .
build a json file from a file .
execute the given .

parse the string representation of the string representation of the given {
checks whether the password is valid for the password .
creates a new hash algorithm for the given algorithm .
returns true if the given algorithm is a valid .
creates a new cluster with the given parameters .
rebuilds the current connection .
add a configuration for the given properties .
{
{
{
{
/ * ( non - javadoc )
/ *

remove a edge from the given edge
execute the global .
checks whether the file is a valid lsn .
{
parse a string to a
returns the lock for the current thread .
/ * ( non - javadoc )
execute the given { @link } .
execute the given { @link } .

merge this complex search results into another one .
executes the command .
returns the list of the entries in this btreepage .
create a new cluster cluster name for the cluster .
frees all the free subsets of all the cluster .
start the .
shutdown the .
create a new instance of .
grants a resource with a rule .
sets the for the given resource .
/ * ( non - javadoc )
deserialize a new bytebuffer .

converts the given into a .
/ * ( non - javadoc )
deserialize a new { @link bytebuffer } from the given bytebuffer .
binds the parameters to the closure .
convert a to a object
this method is used to find a list of that are not part of the given gremlin - step .
convert a constant value to a
gets the value of the given string .
get the type of the given string .
returns the value of the given string value as a string .
increments the popularity of the specified differential to the specified index .
increments the number of bits in the given { @code column } in { @code this } .
resets the state of the current state to the initial state .
returns the index of the first occurrence of the specified element in the list
returns the int value of a given x - value pair .
create a new index for a given index
returns a new {
returns the index of the current record in the given list of the given indexes .
returns the class that the class is the class of the given class .
execute the create () function .
adds a key to the map .
creates a new .
{
sets the role to be used by the server .
adds a node to the list of servers .
set the name of the server .
removes all the namenodes from the given cluster .
returns the cluster s node .
configures the given parameters with the given parameters .
configures the configuration for the configuration .
remove a listener from the listener .
register a database .
dispatches the given request to the given { @link } .
/ * ( non - javadoc )
create a new instance of the {
copy the current connection to the current connection .
execute the record .
execute the record for the given record .
/ * ( non - javadoc )

merges the given into the .
sets the of the .
transforms a result into a object .
execute the cluster .
closes the scheduler
callback for the .
returns the names of all the names of all names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the
get all names of all names of all names of all names of all names of all names .
returns the names of all the names of all the commands defined in the command .
get the field operand for a field .
writes the status code to the response .
write the headers to the server .
write a single to the database .
record a record to be used by the record .
send a http response
send a message to the client .
{
consumes the next record from the current position .
{
{
open a new user .
create a new configuration set .
sets the value of the specified value to the target object .
closes this connection manager .
{
process the task .
start a new component
/ *
returns the number of recent timestamp units for the given cache
get the file to be used for the given file name .
returns the number of cached instances for the given .
gets the number of bytes that were loaded from a file .
get the number of metrics in the cache
get the total number of bytes that are not yet known to the given unit .
get the number of cp measurement units .
returns the amount of the specified amount of time in milliseconds .


documentation inherited from interface
/ * ( non - javadoc )
push a new counter with a given name and the given name .
returns a new { @link } .
increments the spinner count and increment the delta for the given spinner .
stop the timer flush .
stops the timer and returns the average of the timer .
remove a timer from a cache .
stop the checkpoint time .

stop the timer .
/ * ( non - javadoc )
this method is called by the to call the () method .
make sure the current time stamp is stale and the current timestamp is updated .
shutdown the server .
get the from the query string
get the value of the given query .
parse a string into a .
starts the { @link } .
this method is called by the client to send messages to the messages .
initializes the program .
/ * ------------------------------------------------------------
initializes the .
serialize a byte array to a byte [] .
对明文进行加密
remove all the transactions from the graph .
<p > sets the { @code } field . < / p >
{
{
/ * ( non - javadoc )
saves the current cluster graph to the specified cluster .
{ @inheritdoc }
get the { @link } instance .
{
detaches the { @link } from the { @link } .
attaches the given { @link } to the current { @link } .
get the graph graph of this graph .
validates a property value for a key .
checks the class name of a schema class .
sets the properties of the given object .
returns the value of the specified { @code } .
wraps a cursor of a in a .
{
{
{
{
{
{
define a new strategy for the given .
define the strategy for the given namespace .


creates a graph from a graph
returns a graph from the given input stream .
creates a graph from the given input stream .
creates a graph from the given graph .
/ * ( non - javadoc )
deserialize a { @link bytebuffer } into a { @link bytebuffer } .
deserialize a { @link bytebuffer } into a { @link bytebuffer } .
get the list of all the writers .
returns a list of all the rdns in the cluster .
add a new index entry to the index .
merges the source set of target sources of the set .
authenticate by user .

get the user configuration from the given username .


update the current edge if it s a transaction .
parse the current .
execute a function by finding the parameters in the target and .
calculates the number of times the specified function in the specified function .
checks whether the given { @link } is a { @link } .
/ * ( non - javadoc )
deserialize a bytebuffer from a bytebuffer
/ * ( non - javadoc )
deserialize a bytebuffer to a bytebuffer .
/ * ( non - javadoc )
open a database .
open a database .
create a new database .
create a new server - created database .
creates a new database or create a new database if it does not exist .
create a new server - created { @link } .
creates a collection of { @link } s for the given { @link } .
find the best match for the best match .
returns the version of the current version .
{
prepare the given { @link } for the given { @link nodekey } .
/ *
writes a page to the stream .
reads a page of a {
truncates the current page to the current state .
read a single bytebuffer from a bytebuffer .
forces the current write to the remote peer .
closes the given connection .
opens the file for a given file
/ * ( non - javadoc )
checks if the cluster is active .
creates a new node that can be used to create a new node .
returns true if the given string is a value for the given configuration .
returns true if the given field is a valid value .
returns a map of all known agents in the cluster .
get the cluster s rack for a cluster .
returns the set of all known configurations in the given collection of names .
returns true if the given cluster is a collection of clusters .
checks whether the server is running on the server .
returns the list of all the dns uris for the given cluster .
returns the list of servers that are associated with the given .
returns all the servers that are connected to this node .
returns the set of all agents / servers in the given cluster .
returns the cluster nodes .
get the cluster s cluster .
get the cluster s cluster .
get all the servers names for this cluster
returns the role for the given role .
returns the set of all the agents .
get the names of all the fields .
get the number of devices in the given dataobject
returns true if the given { @link } is a cluster .
get the list of all devices in the list of devices .
get the server s .
returns the global value for the given .
returns the number of peers associated with the specified server .
get the number of peers that the client has been started .
get the cluster cluster configuration .
gets the data center .
get the number of milliseconds for a given cluster .
clears the stack of the given {

get the { @link } for the given annotation .

decodes a string into a string .

{
drop the index in the index
add a vertex to the graph .
adds a new vertex to the list of the .
add a new vertex to the graph .
adds a new vertex to the graph .
add a new edge to this graph .
returns the of the given id .
returns a list of vertices that define the vertices in the given class .
returns a list of all the fields for the given input .
returns the vertex associated with the given key .
returns the list of all the fields in the given map .
returns a list of all the subgraph classes that are contained in the given class .
returns a list of all the edges in the given map .
get the edge edge for the given edge object .
sets the of this database .
shuts down the database and closes the database .
returns the { @link } for this vertex .
returns the type of the vertex type .
create a new with the given name .
create a new vertex type for the given vertex type .
create a new with the given .
drop the given type by its name .
get the { @link } for the given type .
create a new edge for the given target type
create a new for the given type .
create a new if it s a new edge .
returns the element of the element .
drop a specific element .
create a new { @link } for the given key .
{
returns the set of all the classes in the given set of strings .
removes the given { @link } from the given { @link } .
remove the given from the given .
delete the current state of the record .
removes all the registered listeners from the .
fire a event to the event .

reads the name of the file .
checks whether the given field matches the given name .
execute the cluster .
start the thread to start the thread to start the thread to start the thread to start the thread to wait until the current thread is interrupted .
start the monitoring thread .
stop the .
register the mbean
unregister the storage server from the server .
returns the amount of time that the given {
get the number of rows in the database .
this method is used to update the for the given .
fetch the configuration of all the workers .
this method is used to retrieve all the executions for the given component .
update the for the given collection of .
returns the value of the entry in the given storage .

get the value of the specified property .
create an instance of a new object with the specified parameters .
detaches a { @link } from the { @link } .
removes all the specified objects from the specified { @link org . apache . flink . api . api . } .
save a record to the specified record .
save a new odocument object to the specified object .
save the record to the odocument .
returns the version of the specified record .
register the mapping for this configuration .

converts the given parameters to a parameter .
sets the .
sets the current record to the current record .
converts the given parameter into a map .
returns the set of all the names of all the members in the given set .
get all the names of all the components in the given set of names .
creates a new { @link } with the given name and the given index .
/ * ( non - javadoc )
sets the current node to be used as a local node .
waits for the given amount of time to the given amount of time . <p > this method is blocking and wait until the timeout is reached .
returns the list of all available pods .
returns the list of objects that are contained in the list .
returns the number of parameters in the group .
handles the response of a response .

get the from the database
returns the {
returns the list of all matched expressions of the given escalation .
checks whether the given { @link } is a { @link } . <p >
get the string representation of the given
acquires a database from database .
release the database .
sets the to the given bindingset .
get the next record for a given input stream .
updates the size of the current size of the current row of the specified tree .
removes the specified constraint from the given list of elements .
processes the and from the

returns the value at the specified position in the given array .
returns true if the given { @link } is within the order defined by the given { @link comparator } .
returns the index of the first occurrence of the specified character . if the string is not a string then the first character is returned .
returns the position of the given text string .
returns the position of the character position of the character .
checks whether the given string is a valid string .
sets the fetch of the given .
{
{
{
execute the command .
returns the dependencies of the given pattern .
sort edges from a map of edges to a list of edges .
assigns the proposition definition to the given list of .
creates a new instance of the specified class name .
unregister all classes in the package .
register the given collection of classes and registers them with the given class loader .
register the given class with the given class
sets the class of the given class to the given class loader .
acquires a new pooled connection pool .
returns the number of connections in the given user name .
acquires a new { @link } from the given { @link datasource } .
execute the command .
prints out all the lines in the log file .
returns an iterator that iterates over the class hierarchy of the given class .
returns the maximum memory memory memory memory memory memory memory .
checks the cache size and memory size .
fixes the cache size .
returns a new {
returns the { @link } of the given { @link vertex } .
deserialize a { @link } from a { @link } .

deserialize a graph from a json document .
remapping json object to a json object .
extract a value from the dom node .
create a new { @link } from a { @link jsonobject } .
deserialize a { @link } from a { @link jsonobject } .
create a jsonobject from a given xml element
converts a {
import the current running configuration .
returns a new { @link jobstatus } instance .
/ * ------------------------------------------------------------
{
{
returns the comparator for the given class .
returns the cluster s cluster .
get the active server map .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > generates a pseudo - cipher - algorithm for the given algorithm . < / p >
get the rsa configuration from the keystore file .
reads a string from the supplied path .
creates a new instance of a object .
creates a new .
creates a new keystore with the given key and password .

encrypts the given byte array .

decrypt the aes key .
saves the given stream to a writer .
saves the given keystore to a new { @link outputstream } .
serialize a { @link bytebuffer } to a { @link bytebuffer } .
deserialize a { @link bytebuffer } to a bytebuffer .
deserialize a new { @link bytebuffer } from a bytebuffer .
sets the parent of this node to be used as a child of this node .
adds a new object to the list of unique values .
/ * ( non - javadoc )
serialize the given { @link bytebuffer } into a { @link bytebuffer } .
/ * ( non - javadoc )
deserialize a new { @link bytebuffer } into a { @link bytebuffer } .
/ * ( non - javadoc )
get the value of the field in the field .
authenticate the given username and password .
get the map of the given key in the map .
checks if the given { @link } is a { @link } .
checks whether the given is a valid .
returns the remote address of this connection .
gets the record that this record is used for this record .
read a record record from the current record .
import a file and a database .
cubic foot x
returns the probability of the given probe vertex .
computes the distance between two motifs .
computes the distance between two motifs .
computes the distance between two points .
returns the difference between two versions .
returns the current {
returns a new {
get the database connection for the database
checks whether the database exists .
set the pool size .
get the property for this property .
{
parse a string representation of the given string representation of the given string representation .
get the next token from the token
returns the token for this token .
parse the given { @link } and returns the { @link } .
returns the field name for the given field name .
returns the field name of the given field name .
replaces the given { @link } with the given { @link } .
get the for the given field .
execute the
returns the set of all the properties of the current thread s current position .
returns the vertices of the given gremlin vertex .
removes all the fields from the tree .
moves a record to a base .
{
add a new edge to this { @link } .
add a new edge to this graph .
count the number of labels that are covered by the given { @link } .
{
returns the list of edges that are contained in the given { @link } .
returns the label of the current label
get the {
returns the base type of the given <code > / code > .
returns the for the given input .
get a list of all the fields for the given field .
processes the {
execute the .
get the methods that are defined on the given service .
{
{
{
installs the given database and database .
{
create a new role .
execute the create command .
execute the .
wait for a next retry .
returns the position of the first argument .
returns the number of parameters for the given name .
connects to the remote server to the server .
lists the article files .
returns the server - side information about the serial port .
creates a new database - only database .
creates a new database .
checks if the database exists for the given database .
drops a database and adds it to the database .
sets the transaction name .
release a new database .
returns the cluster status for the cluster .
execute the alter command .
gets the graph of the given { @link } .
parse the next token from the end of the .
resets the state of this cluster .
save record record to the given record .
deletes the record from the record .

gets the string value of the given <code > / code > .

authenticate a user .

get the user from the given username
/ * ( non - javadoc )
reinitialise the contents of the reader to the stream .
reinitialise the specified log - part - pi into a { @link java . util . stream . entry . } .
<p > . < / p >
reinitialise the contents of the stream to the output stream .
<p > . < / p >

/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
deserialize a new { @link bytebuffer } from the given bytebuffer .
sets the current page to the given value .
returns the {
{

/ * ( non - javadoc )
acquires a lock from the lock lock .
acquires a lock from the locks that are not released .
sets the maximum memory memory memory memory cache for the given memory image .
/ * ( non - javadoc )
store the state of the file to disk .
store the state of the file to the cache .

read the parameters from the parameters .
apply the filter to the filter .
shutdown the log .
add a new entry to the list of items that are added to the specified key .
remove the specified key from this map .
acquires a synchronized lock .
checks the file to be used for the file .
returns the value associated with the given key .
clear all memory buffers .
closes the specified key .
/ * ------------------------------------------------------------
reads all the buffers from the buffer and returns the first read - only read - only buffer .
called by the { @link } and call { @link () } and { @link () } and { @link () } .
read the entry of the reader .
puts a partial entry in the cache .
returns the hamming value of the given power of the given power of the given power .
/ * ( non - javadoc )
deserialize a new { @link bytebuffer } from the given bytebuffer .
event handler for events .
create a new from a byte array .
/ * ------------------------------------------------------------
create a new instance of .
convert a stringbuilder to a stringbuilder .
convert a { @link } to a { @link } .
converts the map to a value .
gets the { @link } for the given type .
processes the next request .
adds a shutdown hook to the handler .
initialize the shutdown hook .
register the given class loader to the given class loader .
returns the engine for the given name .
returns the engine for the given .
returns the { @link } for the given { @code } .
{
execute the request .
remove the state of the state of the state of the state .
adds a new state to the state machine .
release the lock .
this method decrements the from the .
unlock and rollback locks .
release the lock on the server .
try to release the lock on the server side .
lock the current transaction state .
try to fetch the lock from the given epoch blocking if it is not interrupted .
authenticate the given user .
create a new database instance .
execute a list of the items in a list of {
writes the given dump of the file to the server .
acquires a lock on the server .
checks if the label is a label
get the label
remove a particular type from the given .
returns the vertex - of - the current scene for the current graph .
returns the total number of work units for the given shard .
returns the current state of the given record .
returns the fully qualified name of the field in the current thread .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
removes the given { @link } from the list of edges that are contained in the graph .
{
convert the to a .
returns the class name for the given label .
execute the command .
/ * ( non - javadoc )
/ * ( non - javadoc )
deserialize a { @link bytebuffer } into a { @link bytebuffer } .
execute the command .
{
{
{
ends the job .
creates a new { @code } which is used to create a new { @code } .
create a new edge from the given source vector .
execute the specified <code > / code > to the <code > / code > object . the result of the command is the <code > / code > of the <code > / code > and <code > / code > .

parse a query string into a .
parses a strategy or clause of a .
/ * ------------------------------------------------------------
deserialize a byte [] into a byte array .
deserialize a new byte buffer from the given bytebuffer .
/ * ( non - javadoc )
get the list of all the fields in the list .
execute the command .
fixes the item in the given { @link } .

execute the create command .
called by
fill the given record with the given record .
sets the cluster s shards .
sets the given { @link } .
sets the given version of the given version .
get the record type of the record .
initializes the database .
handles the message .
prints a message to the message .
/ * print a stack trace .
execute a query against the query and returns the results of the query .
converts the given object to a .
/ * ------------------------------------------------------------
deserialize a new { @link bytebuffer } from the given bytebuffer .
register a command to a server .

creates a new user .
authenticate the given user .

gets the user name for the given username .
analyze the given query string .
/ * create a new property .
detaches a mapping from the given object . <p > the method will be called when the { @code object } is created . <p > this method is called by the constructor . < / p >
detach a map from the given object .
attach the object to the list of the fields in the receiver .
this method calculates the key - value pairs of the properties file .
returns the index of the first { @code index } of the { @code index } .
calculates the for the given metadata .
returns the next time for a given time .
/ * ( non - javadoc )
execute the .

truncates all to the given .
replies if the given class is a foreign class or a default one .
returns true if the given { @link } is a { @link } .
add a new { @link } to the list of classes that are added to the base class .
adds cluster ids .
{
convert the record to a string .
creates a sortorder for the sort order .
reads the contents of a inputstream .
reads the contents of the given inputstream .
sets the read - only memory read - only memory and sets the memory .
release the pool .
checks whether the given is a valid .
clear the pool .

find persistence unit based on the given unit name .
parse the given {
/ * ( non - javadoc )
writes a variable number to a long value .
reads a long from the given { @code long } .
reads a long value from the given { @code long } .
{
installs a database .
replies if the given { @link } is a { @link } .
execute the given database and returns the new object .
dumps the status of the server to the server .
returns the index of the first occurrence of the specified object .
returns the index of the first occurrence of the specified object in the receiver .
returns the index of the first occurrence of the specified array in the array .
parse a query string from the input text .
returns the set of all the instances in the database .
{
returns the parent of this query .
applies the to the given list of columns .
reports the report message to the console .
parse a string from the current position of the parser .
returns true if the cache is not a valid .
/ * check if the index is in the list of .
expand the current position in the list of objects .
returns the status of the current status .
execute the command to execute the command line .
create a link to the given field .
sets the value of the specified { @link } .
/ * ( non - javadoc )
/ * [ deutsch ] <p >
start the .
returns the { @link } for the given { @link } .

commits all transactions in the transaction .
{
rollback the transaction .
renames the given name .
{
register the cluster cluster .
checks the validity of the .
sets the value of the specified property .
execute the create () method .
{
execute the given { @link } .
creates a new instance .
load a record from the repository .
adds a record record to the record .
{
execute a command to a given { @link } .
<p > . < / p >
{
{
checks if the resource is a resource .
checks if the resource is a resource .
checks if the given resource is a resource .

sets the user of the user to be used for the user .
register a hook to register the for the given .
register the given hook .
unregister the given hook .
this method is called by the program to execute the given { @link } .
sets whether or not the given dbase agent exists .
deletes the record from this record .
load a record from the given record .

/ * ( non - javadoc )
returns a new with the given name .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
saves a record to the record .
count the number of views in the specified view .
count the number of records in the specified class .
{
register a to be used for the given .
reads a long value from the input stream .
returns the next chunk of the given position .
returns the parser for the parser .

read the next token from the next sequence .
returns true if the given string matches the given keywords .
checks if the character is a valid character .
gets the path of the vertex path .
execute the access to the specified object .
clears the configuration file .
convert a record to a record .
returns the number of data from the current position of the current position .
extracts the token from the token .
get the next token from the token .
acquires the access token from the current token .

adds a new named class .
parse the element attribute from the element
parse a string from a date .
/ *
gets the connection configuration .
completes the task .
completes the task .
returns the { @link } for the given { @link } .
/ * ( non - javadoc )
resumes a task .
add a task to the task .
remove task from task .
/ * task is used for handling a task .

assigns the task to the task group .
create a new task .
get the task task .
create a task for a task .
create a task for a task .
/ * package
get the task for the given model
get the partition for the given partition
/ *
open a resource .
copy the contents of the given inputstream to the given stream .
copy the contents of the given inputstream to the given stream .
initialize the
initialize the class for the given datasource .

checks whether the given pr is allowed to be run on the given list of all the conditions .
parse an element
initialize the properties file with the default configuration .
returns the datasource for the datasource .
retrieves the connection from the datasource .
returns the result of the combinator condition for the given collection .
lookup a column name from a column meta data .
returns the value of a given type from the resultset .
> >
get the database type for the database .
returns the database connection for the database database .


configure the spring service .
replies the access services for the given service .
<p > returns an instance of the instance of the specified instance id . < / p >
<p > . < / p >
start a new named instance with the specified name .
start a new named .
starts the execution of a task .
execute a given { @link } .
execute a task allowing the task to execute the task .
execute a task on a task .
executes a task on a task .
create a new task instance for a given task .
execute the task and execute a task .
handles the { @link } .
executes the given reader on the script .
run the script on the given reader .

set the order of the string representation .
returns all the elements in the list of elements .


build a string representation of the list of orders for the given orderby .
<p > validate that the specified argument is neither { @code null } nor no whitespace . < / p >
intercepts the execution of this task .
returns a task that can be used to create task task .
find the { @link } for the given { @link } .
find the list of active connections that were found .
undo this window .
gets the engine instance .
put a named object with the given name .
put a string into the class .
find the first element of a class .
finds all the elements of a class .
find a named class with the given name .
handle the task .
executes the specified task in the specified { @link taskstate } and returns the result .
callback for asynchronous tasks .
initialize the configuration
casts the given number of values to long .
load class name .
create a new instance of the specified class .
instantiates the specified class .
get the of a model
get the for the given model
returns the list of models for the specified class .
get the node from the node .
returns the node for the node
returns true if the given classnode contains a given class name
finds the first element of the given class .
finds all the elements of the given class .
finds the first matching entry for the given name .
add a class name .
builds the engine for the given configuration .


get the field value for a field .
sets the field value for a field .
invoke the method on the target object .
finds the method with the specified name and method .
schedule the given job id .
start the {
sets the .
intercept the executions of tasks .
handles the { @link } .
parse the given dom element and sets the dom node .
schedule the given .

initialize the class for the class .
converts a name to a string with underscores .
introspects the given class .
updates the given entity type .
returns a {
returns the { @link } for the given { @link version } .
deploy the given input stream from the given inputstream .
sets the value of the given inputstream to the given entity .
undeploy a process .
removes all the history from the history .
gets the filter of the filter .
returns the filter of all the filters in the given page .
caches the entity to be used for the cache .
clear the cache and remove the given entity cache
parses the given byte array into a { @link } .
parses a dom node from the given node .
parse the given dom element into a dom element .
gets the list of models .
creates a new { @link executionresult } with the given { @link } and { @link } .
executes the given {
run the transition for all transitions in the given transition .
intercept all the messages are executed
checks whether the given { @link } is a { @link } .
saves the process to the process .
{
returns the connection factory for the given connection .
returns the proxy for the given class .
intercepts the given object with the given object and the given object materialization .
matches the given name and method .
creates a new instance of the specified { @link } .
creates a new { @link } for the given { @link order } .
add an additional order to the list of the attributes of an existing { @link } .
create a new bureau object .
save the order of the history state .
set the order of the transaction .
sets the order of the envelope to be used by the ajax operation .
complete the completion of the record .
terminates the execution pipelines .
resume an ongoing episode .
removes all the fields from the given queue .
build a map from the given map .
build a map of key - value pairs
returns the dialect dialect
saves the given process to the process .
update the process with the given parameters .
executes the given <code > / code > to a <code > / code > .
> > > > > > > > >
get the property from the properties file
get the property value associated with a property .
load the properties file from the given properties file .
reads characters from the stream .
reads a line from the given byte array .
reads a line from the given byte array starting at the specified position .
reads the given byte array into a specified byte array .
returns the length of the file .
skips the next line in the given long .
skips over the input stream .
ensures that the given array is equal to the given value .
ensures that the given array length is zero .
find the intersection of two - dimensional arrays .
returns the hamming distance between two pairs .
returns the hamming of a given <code > int< / code > .
sort the specified number of elements into a given array .
swaps the elements in the array and store the elements in the array
sorts the specified number of elements into a new array .
sorts the specified range of positions in the specified range of the specified range .
return the number of ( x ) .
returns the long value of the given long value .
clears the file .
{
truncates the given size to the specified size .
reads from the given byte array at the specified position .
/ * ( non - javadoc )
{

awaits the tasks for all tasks that are waiting for all tasks .
returns a builder for a { @code > } .
finds all matching matches in the given query string .
compact the set of all the partitions in the set .
find the set of all the {
returns the first hash table for the given key .
returns the first hash table for the given key .
sets the segment at the specified position in the given segment .
removes all the files from the file .
returns the field hash for the given field .

adds all the given { @link corelabel } s to the list of dependencies for a given { @link } .
removes all the alternates from the given map .
adds all the alternates to the list of alternates .
updates the current version of the given .
/ * ( non - javadoc )
/ * ( non - javadoc )
handles the rate .
reads a header from the header .
adds an object to the collection .
writes a record to the output stream .
get the primary key for a given record .
initialize the state of the given class .
clear all segments from the tracker .
bitwise the {
returns a new {
returns the segment s segments for the segment .
update the given
update the given {
main method .
reads the input stream from the input stream .
get the value of the specified int .
returns the number of bits contained in the specified size .
read the data from the stream .
apply an incremental block to the stream .
returns the value of a given field in the given row row
sets the segment at the specified index .
copy data from the given dataframe to the destination data .
copy data from the given byte array to the given byte array
compares two ranges .
copies a segment to a segment .
copies a byte array to a byte array .
read the complete data from the given inputstream .
writes the given bytes to the given stream .
ensures that the given segment has the smallest capacity .
get the position of the field .
calculates the number of buckets for the given .
main entry point for the sbe tool .
checks if the given dataframe is a data type
generate the directory for the given directory .
generate the schema for the given schema .
returns true if the given key matches the given key .
get the record for this record .
initializes the data for the given model .
initializes the .
reads a from a .
enable / disable the
publish a checkpoint .
checks if the given is valid .
add a type to the list of listeners .
creates a new field s dataset with the given path and path .
creates a composite {
creates a composite constraint for each field in the given dataset .
creates a new field s schema .
add a new object to the list
update the plan version for the given plan .
find the next version of a single - valued segment .
initialize the generator .
returns the keys of the first row of the given key .
returns the prefix of the given prefix .
returns true if the given key is not present in the given key .
returns the maximum allowed value of the ascender .
adds a type to the list .
adds all the members to the given schema .
add a field to the list of type fields .
adds a field to the list of field names .
adds a field to the list of field names .

add a listener to the list of listeners .
flattens pojos of to a list of .
sets the next hop .
sets the segment at the specified position in the given <code > column< / code > .
returns the segment index in the given segment .
find all records in a given { @link } by looking for a field of a given { @link field } .
find all the fields that are not found in the given input .
sets the first element of the list .
sets the path to the given path .
calculates the kmeans class .
adds the given score to the first n th element in the list .
adds all fields to the list of tuples in the order they are ignored .
compares two values .

executes the given { @code } on the current time .

returns a new { @link } that will be used to convert framebuffer class to a { @link } .
the given { @link } to the given { @link } .


creates a new instance from a .
create a new persistent state from the current version .
/ * ( non - javadoc )
restore the current version of the current minecraft version from the current version .
run the task and schedules the backlog of the task to run the next time .
execute a list of objects and execute the callback
/ * ( non - javadoc )
adds all the { @link } s to the set of { @link } s .
/ * write a header to the
returns the field index of the field in the field .
calculates the for the given type .
sets the primary keys for this key .
combine all the s shards into the .
writes data to the stream .
get the field data from the data .
writes a single record to the stream .
writes a long - line record to the stream .
returns a stream consisting of the elements of this stream created by the given stream .
returns the number of rows in the current row .
sort the elements in the given array .
hashes a key in a hash .
hashes a string representation of a hash .
adds the given element to the list of nodes that are the element of the vector to the new element .
returns a list of {
resize the node .
processes the given { @link reader } and writes it to the given { @link reader } .
get the for the given
/ * this method is used to assign the data to the .
find the highest - depth - th node of the given node .
prepares the write - write operation .
compact the given bloom filter .
compare the bytes in the .
resize the given size to the specified size .
grows the mutation to the .
/ *
returns a new array containing the smallest keys in the array .
checks whether the given { @code } matches the given annotation .
returns the field value of the field name .
find the first element in the list of matching key - value pairs .
creates a builder for a { @link java . util . consumer . builder } .
swaps the current state of the current state of this state .
parse a schema from the given reader .
parses a schema from a schema .
returns the name of the given type name .
returns the size of the given size
{
run the .
write a new snapshot of the configuration .
flush the state of the given to the given output stream .
adds the given schema to the set of tuples .
returns the date time zone for the given date .
add a schema defintion for a given schema .
generates a unique name for a given class .

indexes the given index .
find the first of the given object in the given query .

executes the given callback on the client asynchronously .
add a type to the list of diffs .
calculates the average time of the time between the time and the last interval .
terminates the persistent storage and update the delta .
snapshot of the snapshot set to the maximum number of timephased entries .
remove the number of times the specified number of times the specified number of times .
prints out the buffer to the given long value .
encode a varint as a long value .
writes a buffer to the buffer .
writes a given value to the given output stream .
writes a single int to a byte array .
reads a long value from a byte array .
reads a varint from the input stream .
returns the long - long long value for a given position
reads a long value from a byte array .
reads a long from the given inputstream .
returns the value of the specified long value .
count the number of times in the range of length ( 0 0 ) .
called when the activity is first created .
adds a view to the view .
creates a new { @link } .
called when the view is clicked .
called when the is clicked .
refresh the height of the board
sets the visibility of the recyclerview . <p >
sets the view to the view .
pull the event .
called when the activity is first created .
{
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
scroll the given view to the given recyclerview .
scroll the given view to a view .
called when the activity is first created .
sets the view s parent .
adds a condition to the builder .
/ * ( non - javadoc )
{
{
get a string representation of the string representation of this <code > string< / code > .
get a value as a long value .
returns the value of a named property or null if the value is not a valid double .
sets the value of the given value to the given value .
/ * ( non - javadoc )
adds a new value to the list .
add a new rule to the rule .
create a new { @link } instance .
create a new rule .
create a new instance of the given rule .
sets the .
sets the type of the builder .
adds a new rule to the rule .
sets the rule .
adds a condition to the builder .
create a new rule instance
adds a new rule to the aggregator .
convert all fields of the given { @link } to the map .
gets the rule instance .
run the rule .
returns a new { @link } with the given { @code } .
adds a new value to the list of the given name .
add rule rule rule
returns all fields annotated with the given annotation .
returns the annotation for the given annotation .
returns a list of methods that are annotated with a given class .
returns the method with the given annotation .
returns the annotation of the given annotation or { @code null } if not found .
creates a new instance of the specified type .
{
{
{
adds a decision rule to the list .
{
{
{
register a rule .
update the rule .
get the map of .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return rule with a rule type and
adds a rule rule .
add a rule rule
run the
{
{
sets the operator to use for a given predicate .
{
{
add a rule to the rule .
add a new action to the rule .
add a new rule to the rule .
sets the default {
resets the state of this .
returns the value of the current thread .
sets the value of the current value to the current thread .
adds a rule rule .
add a rule rule
************* operators ****************
gets the list of all the rules in the class specification .
combines two iterables into a single array .
combine two arrays into arrays .
reads the line of the line and returns it as a line .
skip the next line of the input stream .
create a .
add a new configuration .
converts an array of service objects into a service .
extract the configuration for a given configuration .
extracts all the models from the slave and processes them .
returns the content of the given configuration file .
extract all port from configuration port from port .
parse a port of a port .
add a port to the list of port peers .
checks whether the given list of {
gets the default service name from a service .
adds the service to the cluster .
<p > . < / p >
this method returns the service name from the service namespace .
checks whether the given host matches the given port number and the port matches the port number of port numbers .
returns the host name of the given service .
returns the host name from the given host name .
动态添加词典
merges the given map with the given map and the map of values to the map of the given map .
merges the given map into a map of values .
put a map to a map .
validates the given template builder .
updates the instance for the given .
merges all images with the given image path and merges them to the given list of images .
wait for the remote node to be done .
gets the name of the image .

validates the given string against the given string .
converts cmis entity into a list of entity
gets the metadata for the resource .
creates a new int with the given value .
returns the value of the given string as a string .
checks whether the pods of the pod is a plan .
returns the current context .

replaces all properties with the given properties with the given properties .
add a shutdown hook to the jvm .
creates a new port chain for the given interface .
create a classpath object for the given list of classes .
checks if the given pom is a dependency of the project .
gets the pom file for the given gav artifact .
returns the plugin for the given plugin .
checks if the given resource is a directory .
gets the version of the file .
returns true if the given inode is open .
read a resource from the classpath .
gets the current version of the given file .
reads the current contents of a file from a file .
returns the map of the given {
converts the given {
merges the given field in the given field with the given field name .
merges the given { @code } into a new { @code } .
removes all entries from the map .
returns true if the given is a local container .
reads a configuration file from the given file .
flattens the map into a map of key - value pairs .
converts the properties map into a map .
adds the port to the port .
get the url of the url

get plugin configuration
returns the configuration for the configuration for the configuration .
downloads the given file and writes it to the given file .
get a new port number for a given port number .
compare two strings .
find the profile from the given profile .
create a new { @link } with the given configuration and configuration .
lookup a plugin with the given plugin name and profile .
reads a list of profile from a given classpath .
read all the configuration from the classpath
find the profile for the given profile .
get the profile meta - data annotation .
create a new { @link } instance .
find the list of classes that are contained in the given directory .
adds a git repository to the server .
gets the image .
checks if the current mode is a valid session .
returns the number of available configurations for the given configuration .
returns the first child element of the given element .
returns the content of the node in the dom node .
applies the given to the list of dtos .
applies the given to the given .
apply template name to template
installs a template for the given entity .
apply the user to the database .
remove the tag from the tag .
applies the given { @code namespace } to the namespace .
applies the project to the project .
apply the given { @link project } to the current project .
returns the namespace for the given entity .
called when a new error occurred .
gets the

creates a new configuration for the configuration .
/ * ( non - javadoc )
extract a map from a map containing the root element .
returns the map of the current environment for the current environment .
calculates the seconds of a duration in seconds .
calculates the duration of the string representation of the given string .
scan the directory and the directory of the directory .
checks whether the service is a valid service .
disables the .
checks whether the given service rule is a valid rule .
gets the project root folder if it exists .
gets the project root node .
/ * ( non - javadoc )
parses a set of properties file .
{
returns the generator instance for the given generator .
reads the configuration from the configuration file .
get the project configuration .
extracts the configuration from the configuration file .
extracts the icon from the .
returns the default {
copy the configuration from the given directory to the given directory .
/ * package
get properties of the class loader .
get the resource properties from a resource .
gets the maven version of the project .
creates a new list of services for each given list of all the given names .
enrich the .
log all log messages
returns the properties of the classpath for the given url .
returns the configuration of the configuration .
get the configuration for the given configuration .
sets the target options for the given sarl rule .
validates the resource against the validation .
returns a map containing the values of the given map .
returns the name of the artifact of the artifact in the form of the artifact .
reads the configuration from the configuration file .
get the template for the template
gets the image configuration for the given image .
returns the build date of the build .
returns true if the specified object is a valid java type .
checks if the given object is a property - property - property value .
combines the parameters of the parameter list into a list of parameters .
get the key for the given key .
get the configuration for the given key .
returns the map of configuration names to be mapped to the configuration .
prepares a list of {
merges the given { @link } with the given { @link } .
remove all occurances of all the list of strings from the list of strings .
adds a new configuration to the list of explanations .
gets the default mode for the given mode .
returns the image name from the given {
gets the configuration for this project .
get the absolute path of the given url .
returns true if the license is online or not .
get the service name from the given service namespace .
throws an exception if the exception is not a throwable .
converts a string to a boolean value .
returns the { @link namespaceregistry } of the given { @code namespace } .
creates a new client proxy .
creates a new node in the configuration .
returns the {
extract the distance from the string list .
adds a field .
adds the given field .
converts a json object to a json object
returns the client id for the given clientid .
returns the client id for the app .
creates a new object from a string .
creates a new object from the specified json string .
fetch the response from the twilio api .


create a new { @link } from a json string .

open the drawer
<p > install the application to be used for the application . < / p >
convert json web data to json object

convert a json string to a json object .
/ * ( non - javadoc )
/ * ( non - javadoc )

create a new json object from the json object
converts a json string into a json object .
collect the data from the given {
collect the from the given and
export a data filter to a
get the client id for a given clientid .
checks if a given certificate is a valid signature .

delete a fragment
get the for the given request
parse response into the rapids .
returns the { @link } for the given clientid .
performs a fragment query for the given fragment .
performs a validation on the given resource .
performs a validation of the given { @link } and sends it to the { @link } .
create a new json object from the json object .

returns the value of the given name as a string .
parses the json string into a list of objects .

parses the payload into a { @link jsonobject } .
returns the endpoint for the given endpoint .
cancels a url that is a uri of the given uri .
sets the given uri .
returns the of the given {
gets the current .
creates a new { @link } from a json string .
converts json to json string .
create a new json object from the json object .


post / create a new request .
posts a url to the server .
creates a new { @link } from a json - ld object .
starts a new .
approve fragment .
creates a new { @link } from a { @link string } .
returns the error message for the given field .
create a new customer object .
convert json web configuration to json .
creates a new instance of the given object .
adds a listener for the given listener .
removes the listener for the specified object .
gets the { @link } for the given { @link } .
converts a json object to a json object .

create a new .
dispatch an notification event to the activity .
converts an accountinfo to an sdp response .
converts a string to a { @link } .
convert a json representation of a json object to a json representation of this object .
add words to json dictionary .
remove a list of word characters from a list of words .

returns a list of tokens that are part of the tokens in the list .
extracts phrases phrases phrases phrases phrases phrases phrases phrases phrases phrases phrases phrases phrases *


fetch a bytebuffer from the given buffer .
calculates the color of the given .

idna2003 : this method is used to allocate a bytebuffer to be used by the .
idna2003 : this method is used to create a bytebuffer of .
removes the frame from the frame if it is not already present .



writes a list of bitcoin buffers to the given bytebuffer .

creates a new { @link } from a byte buffer .
create a new codec .
creates a bytebuffer that is a bytebuffer of the bytebuffer s buffer .
sets the list of bytebuffers in the given list of bytebuffers .
get the of a given segment .


















/ * private void ( int int

decodes the given {
get the first available {

this method draws the given {



find the number of times a given int or a given number of times .


reads a new version .
reads the next buffer of the given bytebuffer .
reads a single n - bit int from the input stream .
returns the maximum number of frames available for this frame .


modifies the given file to the given file .
copy a file from src to trg and write it to the given file .
compute the for the given blur .
calculate the for the given color .
decode the .
get the last time series for the track
converts a frame to a percentage of the frames frame .
converts a { @code } to a { @code } .
converts the given into a long .
converts the given into a single long .
returns the track of the track .


returns the last track of the current page in the given dimension .
converts a into a 3x4
format a timecode bar size

sets the value of a bit in the specified array .
checks whether the given color is a color .
returns the size of this viewport .
get the metadata for a given packet .
returns the device for the current frame .
returns the given { @code } in the given { @code file } .
get the from the given frame .
get the frames for a given file .
get the frame from a file
get the frames for the given frame and the given frame .
returns the for the given animation .
get the for the given samples
returns the of a given .
converts a {
/ * ( non - javadoc )
{
reads a bit from the given { @code } .
reads a varint from the stream .
reads the bits of the given classfile and returns the index of the first bit .
returns the number of bits available for the specified bloom filter .
{
skips the next word in the buffer .
{
clones this path to the current frame .
/ * this method is used to create a qr factorization .
/ *
creates a new { @link } for the given { @link raster } .
creates a new { @link } .
returns the number of bytes in the given int .
returns true if the given sequence is a power of 0 .
returns the next character in the current position of the current node .
reads a raster from the specified descriptor .
returns the for the given buffer .
returns the next frame of the frame of the frame .
reads the data from the given byte array .
encode the given { @code } .
read a from the stream .
show the frame of the frame .
splits the track of the track with the given track .
decode a frame frame .
sets the value of the { @link } .
sets the for the given .
sets the constraint to the given .
encode a frame to a
converts a long into a byte array .
compute the length of a byte vector .
returns the length of the length of the length of the length of the specified length .
places the two three points for the two [ 0 ] .

computes the cubic correction of the specified blur .
decodes a from the given wig file .
/ * this method is called when the is a valid .
/ * [ deutsch ] <p > der angegebenen



/ *

/ * :
/ *
find the of the given

adds a packet to the packet .
reads a byte array from the stream .

/ *
/ *
decode the given .
/ * ------------------------------------------------------------
create a new buffer with the given capacity .
/ * [ deutsch ] <p > bevorzugt die angegebene sekunden fest . < / p >
/ *
/ * channel [ ]
/ *
/ *
this is a utility method to perform a linear - compression algorithm .
/ *
clips the given minimum of the given number of points .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
/ *
computes the index of the .
returns a sample with the given indices .
{
clones the given .
/ * ( non - javadoc )
start the block of the block

finishes all of the blocks of a block in the block list .
create a from a byte - byte byte buffer
returns the parent parent of the parent .
concat the bits .

reads a byte vector from the given byte array .
decode the given into the .
schedules a task to be used by the {
get a new bitmap from the given frame .
returns a new bitmap with the given frame .
returns the metadata for the given metadata .
get the bitmap with the given image .
returns the metadata for the given {
get a { @link bitmap } from a file or { @code null } if it doesn t exist .
returns a new bitmap with the given frame and size .
get a new touch frame
returns a new version of the given animation
returns a new {
returns a new version of the given animation
seeks to the current position of the mpeg frame .
get the from the given bytebuffer

splits a bloom filter to a destination .
==============================================================================
calculates the correction data for a given data point .
/ *
returns the index of the first occurrence of the specified .
/ * this method is called by jni .

returns the byte array at the specified depth .
converts a bytebuffer to a bytebuffer .


compress a line and return the compressed buffer .
returns the size of this { @link } .
build the blur data from the given .
build the data from the given data point
build the color of the color from the container .
returns the first n - th bit - array of the first n least significant elements .
reads the first byte [] from the buffer .
get the frame of the given file .
get the frame of the framing screen
gets the frame from the frame .
get the frame of the frame
get the frame of the frame
get a chart
get a splash frame
get a new video frame from the given and
get a new splash screen
probe the given {
/ * [ deutsch ] <p > interpretiert den angegebenen zeitpunkt . < / p >
encodes the given into a
reads out the given categorical array and returns the number of times the given values .
reads the next line and writes them to a new matrix .
encode a frame to a byte .
/ * ( non - javadoc )
/ *
/ * ------------------------------------------------------------
/ *
sets the value of the specified property .
sets a property .
get the property value as a parameter .
sets the value of this property .
get a list of codec for the specified character sequence .
<p > the high - level value of the specified <code > createdbinstance< / code > . < / p >
gets the codec for the codec .
returns the number of longs that have been counted from the given number of bytes .
dump the log file .
adds a reference to the list of the to the given .
dequeues the current thread .
start the thread .
flushes the memory buffers to the output .
this method is called by the () to call the onresult message .
add a new to the list of devices .
load a set of properties from the current time .
/ * package
deletes the files from the file .
get the from the given image .
get the position of the given { @link } .
gets the { @link } for the given { @link geometry } .
gets a format representation of a given format .
get the { @link } instance for the given descriptor .

returns the size of the playn buffer .
creates a new id3v2 socket .
creates a new packet buffer with the same length as the packet .
create a new packet with the same address as the payload .
creates a new id3v2 socket size .
get the data for this id3v2 buffer .
get the data for a given position .
get the media type of the packet
find the filter for a named filter .
open the data stream for the given url .
reads the contents of a byte vector from the stream .
seek to the given file .
writes the given byte array to the output stream .
/ * ( non - javadoc )
get the for this component .
returns the version of the version of the version .
returns the default time for the given base configuration .
returns the constant map for the given position .
returns the constant map of the constant map of name .
create a new object
get the instance .
open a new url to the specified url .
close the connection .
get the for this .
{
this method is called by the () method .
sets whether or not the given { @link } is set to the given flag .
get the meta data .
read a number of milliseconds .
play the specified <code > / code > to the specified <code > / code > .
blocking - delete the playback .
copy the given to the .
compares two .
idna2003 : compare ( 0 ) and b ( 0 ) .
/ * [ deutsch ] <p > ermittelt ob angegebenen ; ; ; < / code > wird die angegebene - zeiteinheit - - zeit dieses intervalls in . < / p >
/ * [ deutsch ] <p > erzeugt ein intervall dieses intervalls zur angegebenen . < / p >
multiply the argument ( with the given argument ) .
multiply two matrices .
divide the argument to the given argument .
divide a rational number in a rational sequence .
subtract the given argument .
subtract the given rational sequence from b and places it .
add a new argument to the end of the list .
add a rational number of the given block .
/ *
returns the difference between two seeds .
make a new rational sequence .
make a new double sequence with a given number of units .
creates a new rational sequence by casting the same sequence to the given source .
make a new rational number of the same length as a new sequence .
/ *
returns the difference between two longs .


display the elapsed time and returns the image .
returns a list of all the filters in the bloom filter .
create a from a shapefile
create a from a geojson format .
create a codec to use for a codec .
creates a new {
opens the given input file .
transform the media output stream .
encode audio data to audio media format .
encode the given media to the deroutputstream .
converts a png format to a png format .
{
create a new .
prints the to the output file
prints a configuration property to a stream .
configure properties for the given properties .
configures the file to be used to create a new configuration file .
set the time to be used for the given .
find the image type of an image descriptor .
create a new converter instance
creates a new { @link } from an { @link } .
creates a converter that converts an image to a png type .
create a converter to convert mainframe file descriptor to a human readable format .
create a converter instance
converts an image to a bufferedimage .
/ * this method is called by the () method .
close the stream .
open the given url
reads the next byte from the stream .
writes the given byte to the stream .
register the given factory to be used by the { @link } .
returns a unique identifier for the specified { @code name } .
returns the url to the given url .
convert a { @link } to a { @link string } .
convert a url to a url
returns the output of the given { @link string } as a { @link string } .
returns the url to the given url .
returns the mapping for the given file .

converts a { @link string } into a { @link string } .
returns the naaccr format of the specified http channel .
converts a { @link channel } into a { @link channel } .
returns the naaccr format of the given url .
returns the naaccr friendly header of the given { @code channel } .
returns the url to the given url .
returns the url of the given inputstream .
returns the url to the given url .
returns the json string for the given { @code } .
returns the url to the given url .
send a data to a url .
creates a new channel from the given channel .
send a url to a stream .
returns the url of the specified url .
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
get a logger with the given name .
get a logger from the logger .
log a log file .

resample the resulting data in the given media object .
get the from the given .
sets the time the specified .
returns the index entries in the sorted list .
get the frame rate for this frame .
returns the time ( or the current time ) from the given .
get the from the .
get the container for this container .
gets the meta data for this .
returns the index entry in milliseconds for the given timestamp .
returns the index entry for the index .
get the from the
get a list of codec for the given codec .
gets the .
gets the video format for the specified type .
gets the number of audio channels .
returns the image payloads of the specified audio type .
get the audio channels .
returns the codec for the given codec .
create a codec for use in the
find codec for codec codec .
returns the codec for the given codec .
create a codec for use in the
find out how many times codec s codec registry .
create a codec - encoding codec for the given codec .
returns the codec for the given index .
get the rate frame rate
{
gets the audio type of this stream .
get the audio assocaited with the given audio .
get the profile at the specified index .
resample the given media data in the media format .

make a new band media image
open the given url .
reads the next byte from the stream .
writes the given byte array to the given output stream .
returns a list of all keys in the list .
returns the value of the key in the map .
sets the value of the specified key .
returns a new object .
sets the value of the key .
opens the given input file .
get codec codec .
get the from the .
set the time to use for the given timesection .
sets whether the given flag is the same as the value of the flag flag .
sets the flag flag to true if the value is not a valid flag .
get the .
get the .
get all the formats for the given { @link }
format the given symbolic file name to the given format .
gets the codec for the codec emulator .
gets the { @link } for the given { @link } .
create a new graph
add a filter to the list of filters .
add a audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio onto the audio stream .
adds a new line to the source file .
sets the audio codec .
adds a shapefile filter to the output stream .
queues the given { @link } to the queue .
creates a new { @code int } object with the same distance as the distance to the specified position .
returns a new { @link } that contains the given { @link } .
returns a new {
returns the type of the filter .
filter the input data with the given output .
filter the media data
add a byte to the destination .
returns the buffer at the given offset in the given buffer .
/ * ( non - javadoc )
make a new buffer to be inserted .
make a new buffer to the given type .
make a new buffer to the given buffer .
make a new buffer to be used for the given .
creates a new frame .
play the specified audio frame
converts a media media to a media object .
validates the image .
validates the image .
{
{
get the graph of the graph
get the from the .
inserts a filter to the list of rows .
get the from the given .
get the meta data for this key .
sets the time the time the time the given time .
register a factory to register a factory to register a factory with the given factory .
gets the { @link } for the given url .
gets the url of the url .
>
returns the for the given
get the for a given knowledgebase .
returns the architecture for the given .
get the for the given .
/ * ( non - javadoc )
get the from the .
play the file to play the file .
main method .
deletes the current transaction .
load the library .
load the library from the classpath .
sets the installation allowed for the operating system .
load a list of from the specified library .
get the list of all the libraries in the library .
this method is called by the to read the property path from the set of paths .
returns true if the library is a valid library .
creates a new codec .
creates a new { @link fsa } from the source { @link charbuffer } .
decode audio to audio .
decode a packet .
decode the data to the specified {
record a screen record .
/ * ( non - javadoc )
add audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio .
resample the given media data in the given media graph .
gets the format of a named nucleotide .
gets the audio type of the specified audio frame .
gets the audio type of the framing raster format .
gets the audio type of the framing of the image .
get the number of bytes written by the specified amount of bytes .
get the number of bytes in the given format .
create a new based on a given filename and name .
gets the data format for this instance .
open the input file .
adds a new to the list of data from the stream .
/ * ( non - javadoc )
{
create a new object from a new .
gets the codec for the codec emulator .
format a to a string .
get a new weather format that represents a bam format .
<p > get number of files < / p >
get the from the .
/ * ( non - javadoc )
create a new with the given parameters .
decode the input string into a byte array .

returns the transaction id for this transaction .
retrieves the address of the specified address in the specified address and the specified address .

get the vcf header from the given list of .

sends a request to the client .
sets the smtp id of the script to the given .
compiles the given url into a string .
writes a data object to the stream .
reads a string from the input stream .

reads the contents of a byte array from the input stream .
write a primitive array to a primitive array .
writes a byte [] to the given byte array .
/ * ( non - javadoc )
{
converts a data object to a memory number of bytes that can be used to convert the object to a byte array .
write a class to the output stream .
/ * ( non - javadoc )
converts an object to an object .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the package name of the package .
sets the file channel to the given file .
returns the first of the given class or null if no such class is found .

resizing the file to the output file
gets the for a given key .
removes a key from this node .
writes a short array into a short array starting at pos .
writes a 32 - bit int to a byte array starting at pos .
writes a byte array to a byte [] .
writes a byte [] to the given byte array .
write a string value to the given string .
/ * ( non - javadoc )
sets the .
create a new .
create a new
create a new chaincodecollectionconfiguration instance using the given configuration .
print a json object to the output stream
register a serializer for a given class
create a new .
returns the cache of all the objects in the cache .

clears all caches .
get the input stream from the input stream .
get the input object from the input array .
get the part of the byte array from the byte array .
get the output object for this object .
register a to the given list of properties .
add a child class to the given class .
gets the name of the class that is the given class .
converts a byte array to a byte [] .
returns the serialized data object for this object .

converts a json string into a string .
encode the given output stream into a { @link outputstream } .
decode a byte from the stream .
returns the { @link } for this { @link } .
writes a long value to the given byte array .
write a binary data to the given type .
writes data to the stream .
writes the given array of bytes to the list .
writes a byte [] to the output stream .
reads the contents of a given type from the given array .
write a object to a class .

called when the object is not inhibited .
called by the awt thread to handle the object to be used by the applet .
writes the specified object to the specified output stream .
get the for the given class
writes the fields to the given object .
writes the array of bytes to the list .
reset the current configuration of this stream .
get the byte order of the byte array .
reads the class from the given input stream .
sets the string of characters to be escaped .
{
{


detaches a new pointer to the given destination object .
creates a new object .
change the threshold to the current gpio .
returns the current data point .
create a new {
creates a new with the given size .
change the maximum number of changes to the change .
register a new object .
returns an iterator over all elements of this sequence .
{
/ * ( non - javadoc )
this method is used to convert a primitive type to a java object .
adds a new { @link } to the source storage adding the { @link } s to the source file .
poll the stream to be used by the given sink .
reads a byte array from the given byte array .
reads a single character from the buffer .
{
register a class with the given class .
sets whether the pool is enabled for the given value .


copy from the given resource to the file system .
print the given string to the server .


create an empty { @link } .
/ * ( non - javadoc )
computes the determinant of a matrix
solves the dot product of a = alpha of a matrix
/ * ( non - javadoc )
/ * ( non - javadoc )

compuets a qr factorization


/ *
/ *

returns the gl thread context for the given mode .
sets the mode .
{
calculate the output shape for the output
returns the probability of a probability of a probability distribution .
execute the cuda .
returns true if the condition is satisfied by the condition .
checks whether the condition is met .
<p > performs a logical conjunction of the given condition and returns true if the result of the element is satisfied .
<p > / p >
checks if the specified array of values are equal to 0 .
applies the given function to each element of this vector with the specified function .
applies the given condition to the given condition .

performs a reduction on the input array and returns the results of each element of the array .
applies the given function to each element of this vector with the specified function .
applies the given function to the given {
returns the first element in the array
returns the number of properties in the given { @link }
returns a new {
converts a {
sets the lock of this queue .
sets the failure of the given exception .
normalizes a double .
returns a list of points for a given list of points .
split the given vector into a list of vectors .
diffs a list of times the given list of times .
split a list of words into a list of doubles .
converts a data type to a { @link } .
shutdown the transport .
get the title for the given title .
returns the string representation of the given string .
get the device for the device
returns the record for the given indexes
update the positions of the view .

creates a new 4d image drawn from the given blur .

converts a { @link } to a { @link } .
creates a new { @link bytebuffer } from the given { @link bytebuffer } .
returns a copy of this buffer s contents .
returns a batch of batch batches for a list of partitions .
/ * ( non - javadoc )
validates the elements of the array
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a collection of elements from the given array
/ * ( non - javadoc )
reverse reverse reverse reverse order

create a new ndarray with the specified number of columns
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
concatenate ndarrays
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new complex number of data from the given data point .
create a new array
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new complex vertex vector with the given number of parameters and the given parameters .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
{
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
{
computes the for the given complex vector .
returns a for the complex number of complex numbers .
creates a new

creates a new object
returns a new
creates a new power of power - value pair

creates a new { @link } from a { @link } .
creates a new 4d - circle matrix representation of the given component .
/ * ( non - javadoc )
free this object .
returns the record for the given element
merges two { @link dataset } s .
/ * ( non - javadoc )
get the dataset of the dataset
/ * ( non - javadoc )
classify a dataset
returns the number of bytes in the memory .

returns the hostname of the given { @code } .
format a string to a string .
converts a string array to a string [] .
converts a byte array into a hexadecimal string .
returns the time string for a given time window .



gets the string names for the given <code > string< / code > .

splits a string into a string using the specified separator .
splits a string into a string .
find the next character in the given string .
<p > escape a string with the given escape character character . < / p >
<p > converts a string to a string using the equivalent character of the specified character . < / p >

joins the given elements into a single string .
returns the string representation of a string .
replaces the pattern with the replacement pattern replaced with the replacement pattern .
returns the stack trace of the given { @link stack } s .
compares two strings lexicographically ignoring case considerations .
<p > checks whether the string is a valid xml representation of the specified string . < / p >
inverts the matrix
returns the nth n - th element of the nth element .
check if the current is a valid .

create a shape databuffer of
create a shape array with the given strides
returns true if the shape is a vector of shape
copy the shape to the given shape
get the order of the order in order
get the number of bytes in the given ndarray
convert a list of indices to the indices of the array to be indexed .
converts a array of int [] to a int []
unzip the given file to a directory .
returns the short representation of the short .
/ * ( non - javadoc )
execute the given
copy from a bytebuffer to a bytebuffer .
start a server .
/ *
returns the constant data buffer for the given {
get the constant cache for the constant
execute the specified element in the given array .
************* =
compute the cosine similarity of the given { @link indarray }
atan2 the given vector
ceiling

<p > converts a { @code vector } into a { @code vector } vector . < / p >
sinh a numpy


sigmoid function
broadcast a log ( element ) to another
/ *
/ *

max max probability
max max order
min reduction function
returns the first occurrence of the specified element in the specified range

sigmoid function
sigmoid function





sigmoid function
execute the given op
execute the given op
rearrange the numpy - 1 - 1

convert a given vector to a lower - side rank
returns the next next run .
version&schema - specific method to set the to the given type .
/ * ( non - javadoc )
nonsymmetric
build the shape databuffer for the given shape
build databuffer databuffer databuffer
checks if the given path is a directory .
read the data from the stream .
remove the given event from the queue
/ * ( non - javadoc )
{
shuffles a dense permutation of the given array of dimensions .
creates a pointer to a pointer to a given surface .
create a file compressed compressed data
{
returns the given { @link } for the given memory and the given time stamp .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
execute the operation .
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieves the address of the knx address of the specified address
get device pointer
this method returns the device pointer memory and device data from the device
get the file for this jar file .
returns the device s device id of the device
{
get device device device device device .
load library .
load a binary file .
load a class file .
load a python library from a classpath .
returns the name of the jvm .
creates a fully qualified name of the given name .
calculates the for the given architecture .
publish the data for the given data type
starts the galaxy service .
creates a data buffer from the specified buffer .
called by the {
/ * ( non - javadoc )
/ * ( non - javadoc )
{
reads a byte [] from the given buffer .
/ * ( non - javadoc )
concatenate inputs in input .
classify the input variable by the input shape .
classify the input variable by the input shape .
samples average observation of the input array .
max pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling
avg diffs for x
max pooling inputs ( i . e . prod ( l2 ) is out of out ( x y )
classify the input variable by the input shape ( input equalities ) .


matrix multiplication for the numpy
converts the indarray to a rotation matrix using the provided .
resets the initial state of the list .
gets the for this .
{
allocate a new array
get the shape for the given ndarray
get the shape of the shape of the shape .
evaluate the samediff function for each element in the input array .
compress a data array into a new array
convert the to a
center and stores the result in the numpy

returns a for the given target shape .
/ * ( non - javadoc )
broadcast an adm broadcast on the specified device
/ * ( non - javadoc )
wandelt einen geldbetrag um der
regularized incomplete gamma function .
returns the total number of the current value of the given { @code bigdecimal } .
returns the { @code bigdecimal } whose value is { @code bigdecimal } .
calculates the number of times the given number of times ( x<sup > t< / sup > ) = > 1< / sub > = > <tr > <th > <div / sup > - 1< / sup > < / sup > <p > the number of { @link x } is the number of fractional decimal number of {
calculates the { @link bigdecimal } that is the difference between the two { @link bigdecimal } s .
calculates the tangens of { @link bigdecimal } x .
returns the { @link bigdecimal } represented by the { @code bigdecimal } represented by { @code bigdecimal } .
returns the { @link bigdecimal } represented by the given { @code mathcontext } .
calculates the decimal representation of the given { @link bigdecimal } .
returns a { @code bigdecimal } which is used to convert the number of seconds to { @code bigdecimal } .
calculates the logarithm of the given <code > / code > to a <code > / code > .
bessel function { @code bigdecimal } &times ; 2<sup > x< / sup > rounded to the power of two <code > bigdecimal< / code > .
rounds the given bigdecimal number to the approximate number of decimal places .
calculates the decimal point of the given { @link bigdecimal } .
returns the { @link bigdecimal } that is the precision of the given { @link bigdecimal } .
calculates the number of times the divisor is the number of times the divisor is the number of times .
returns the { @link bigdecimal } that is the difference between the two { @link bigdecimal } s .
calculates the number of bytes in the given { @link bigdecimal } .
calculates the bigdecimal contraction the quotient of the given bigdecimal .
calculates the bigdecimal exponent of the given bigdecimal .
returns the { @link bigdecimal } represented by the given { @link bigdecimal } .
calculates the bigdecimal value of the given { @link bigdecimal } object .
regularized gamma code is a bigdecimal divisor ( df ) rational ( ) .
calculates the reciprocal of the given bigdecimal .
calculates the of the given decimal point .
calculates the of the given decimal point .
calculates the coefficient of { @link bigdecimal } times .
calculates the gamma function of the specified .
calculates the coefficient of the two - dimensional array of doubles .

subtract the given { @code bigdecimal } &times ; 2<sup > x< / sup > rounded to the given { @link bigdecimal } .
calculates the { @link bigdecimal } represented by this { @link bigdecimal } .
calculates the decimal exponent of the given bigdecimal .
calculates the bigdecimal value of the specified bigdecimal .
calculates the exponent cotangens ( divisor ) .
returns the { @link bigdecimal } represented by this { @link bigdecimal } rounded to the given { @link mathcontext } .
returns a { @link bigdecimal } that represents the { @link bigdecimal } represented by this { @link bigdecimal } represented by this mathcontext .
returns the { @link bigdecimal } that is the number of integers in the given { @link bigdecimal } .
calculates the decimal point exponent of the given decimal point .
calculates the logarithm of the
update variable value .
get a { @link } for a given id
puts a function to a given id
get the function name for a given function
update the variable name
add a variable name to the variable
get the variable name of the variable name .

add a variable shape shape
associate a variable with a given variable
returns the value of property { @code } for the specified function name .
add a property to the property
add a function to the list of
adds a function to the list of arguments for the given arguments .
checks whether the given function has a function name .
evaluate the input and output activation gradients and outputs the results of the input variable to the output .
get a diagonal shape
double out mean ( n ) ( n ) b ( x ) = ( x ) = b . <br >
returns the input with the specified shape .
returns an array of { @code ops } with the specified { @code step } .
returns the variable of the specified variable
remove var argument .
sets the variable name of a variable to the specified variable .
samples the input average average average average average average .
avg update operation : <br > <br > note : out ( a ) in the input stream ( i . e . if the input is a long or 1s ) <br > note : if input is<br > [ 0 1 ] returns [ i ] [ i ] [ i ] [ i ] [ i ] [ i ]
max pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling pooling
avg diffs for input arrays .
max pooling arrays .
max norm ( predictions ) of input inputs .


concatenate the provided input text to the output stream .
elementwise a variable is poorly created with the same name as inputs .









performs a batch mean and stores the mean and variance of the output .
neural a tensor with the mean variance .
create a new variable with a name .
create a new variable with a name .
generates a new output shape for a given output function
execute the given list of input values and returns result
execute the given list of differential operator on the given list of differential operations .
returns a function that evaluates to {
execute function .
execute the function for the given function .
execute the specified differential function and returns the resulting array .
end
adds the variable name to the variable name .
resolve the variables
returns true if all variables are not in the current context .
------------------------------------------------------------------------
executes the given {
returns a list of variable values for each input variable
updates the variable with the given variable name .

prints out the shape for the given differential function .
converts array of to a string representation .
update the variable in the tree
returns a copy of this queue with all of the elements in the given { @link bytebuffer } .
/ * ------------------------------------------------------------
get the data type from the given byte buffer .
get the data type of the given type
/ * ( non - javadoc )
convert the given type to a guid .
returns the type of the given {
allocate a new pointer to the given byte array .
converts a float array to a float array
returns the length of the given integer type .
gets the type of the given type from the given type .
converts a {
returns the average value of the given {

/ * ( non - javadoc )
pick a workspace from the given workspace
clean all workspaces .
print the statistics for the current log statistics .
wireframe =
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
set the qr algorithm for a binary chart
set the qr algorithm for a qr code .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
wireframe manhattan gradient ( imaginary ) equations
cholesky factorization
cholesky factorization

calculate the distance between the given parameters
execute the given
execute a step
encode a float vector
encode the input image and angle to the output image
decode the given { @link } to the given { @link indarray } .
/ * ( non - javadoc )
revert the given array of data to the given {
returns the name of the given name .
/ *
execute the operation .
get the properties of the given properties file .
execute a
execute the given { @link } and stores it in the given { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
checks whether a workspace is active and is active
/ * ( non - javadoc )
computes the gaussian count of the specified ndarray .
/ * ( non - javadoc )
returns true if the request is a request .
release the release state of the .
gets the state of the current state .
creates a new environment .
/ * ( non - javadoc )
initializes the dataset with the specified values
sets the target value for the given target .
initialize the worker .
{
this method is called by the device when the device is ready to be used by the device .
allocates a new memory chunk from the given memory storage .
convert a tensor to a tensor
add a data point to the
returns the type of the given type from the given type .
{
free memory from the device
/ * ( non - javadoc )
sets the current value of the to be used by this class .
create a new index matrix for the given index .
add a new 4d to the origin
copy the given dimensions to the specified output stream
computes the logarithm of the given vector
create a new { @link x } with the given dimensions
broadcast the given euler angles to the specified scalar indarrays
broadcast the given { @code vector } by the given dimensions to the given { @code vector } and stores the result in { @code x - > } matrix .
broadcast wavelet image to op .
broadcast wavelet transform to op .
create a new tensor with the specified dimensions
broadcast 4d elements into a numpy op .
create a new matrix
max matrix
find a tensor with given dimensions
broadcast the given shape and native dimensions
broadcast op ( op )
returns the map of the properties for the given map .
checks whether the given { @link } is a valid { @link } .
computes the norm2 of the specified variable in the specified input array .
preprocesses a number of points in a given shape
format a number of times the string representation of the given ndarray .
imports weights from the hdf5 graph and returns the result .
converts a { @link } to a { @link blob }
{
/ * ( non - javadoc )
copy the
copy the
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
assign the given to the
get the rows of a row
randomly classify a array of objects
adds a row to the canvas
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
{
{
{
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )

computes the conjunction of the two vectors
/ * ( non - javadoc )
/ * ( non - javadoc )
assigns the number of times to the given value .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
performs a qr operation on the given matrix

compute the eigenvalues of a matrix
calculates the probability of a given point in the current node .
/ * ( non - javadoc )
copy a data point to the specified location .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ *
revert the array to the given { @link }
merge series of labels
create a new array with the given ndarray
create 4d arrays
execute a graph
checks if the given { @link } is a { @link }
checks if the given vector is a power of x and y

/ * ( non - javadoc )
computes the predictions for the specified label
get output array of the specified label
compute the mean squared squared squared squared variance of the given tuple .
computes the mean fp level for the specified histogram in the given samediff array .
initializes the bounds of this map .
gets the constructor for the given class .
循环向上转型 并强制设置为可访问 .
invoke a method on the given object .
creates a new instance of the constructor with the specified parameters .
循环向上转型
checks whether the given class is assignable from the class .
returns the annotation for the given annotation .
returns the annotation of the given annotation type .
checks if the annotation is annotated with the given annotation type .
creates a new { @link } .
{
load the { @code } for the given { @code } .
creates a new entity instance for the given entity .
saves the given { @link } to the given { @link } .
{
add a filter to the list of that are used to filter the values .
translates the operator to a operator .
add a condition .
sets the {
sets the maximum number of the current current values of the given <code > value< / code > to the <code > / code > .
adds the fields to the project .
{ @inheritdoc }
{
/ * ( non - javadoc )
returns an iterator over all keys in the given iterator .
orderby of the orderby list .
adds a new to the list .
adds a new distinct query to the list of distinct components .
create a new instance of { @link } .
{ @inheritdoc }
creates a new instance of the specified type .
complete all pending callbacks .
register a class with the given class .
returns a new entity .
{
execute a query and executes the query .
query a single object that can be used to get the results of the query .
query a query from the given query .
query the number of results of a query .
partitions the partition to a single - byte array which is used to iterate over the input partitions .
loads the entries from the given iterator .
returns the elements of the given { @code long } s elements .
returns the first element of this object that is not null or null if the instance is not null .

creates a new key for the specified key .
creates a key for a given id .
creates a key instance for the specified class .
creates a key for the given url .
creates a new { @link } .
compares this { @link } to this { @link } .
compares two hash codes for the given object .
creates a new key .
<p > . < / pre >
returns the fully qualified name of the given class .
returns the class name of the given class .
replies the class name of the given class .
returns true if the given type is a type parameter .
checks if the super type is a super type of the super class .
returns the type of the given type .
returns the type of the super type of the given type .
capture the type of the given type .
returns the { @link } for the specified { @code path } .
gets the { @link } for the given class .
/ * ( non - javadoc )
{
returns the index of the first annotation of the given class or null if no such annotation exists
checks if the field is a field annotation .
checks if the given method is annotated with the given annotation .
returns a list of properties for the given property .
gets the metadata for the given key .
gets the result of the given key .
executes the .
fetch the result of the { @link } .
{ @inheritdoc }
saves the given entity into the entity .
adds a new to the list of classes that are added to the class .
register an instance of { @link } .
get the type of the given { @link component } of the given { @code type } .
returns the type of the given { @link } .
creates a new path expression
returns the path of the path .
returns the path to the path .
returns the depth of the depth of this vector .
/ * ( non - javadoc )
{
{
{
returns all the keys in the map .
adds the given collection of updates to the given collection of all the given update .

adds the given { @link } to the cache .
get the map of keys for the given keys .
returns a set of buckets that are mapped to the given bucket .
find the fields for the given field .
sets the of the given <code > / code > .
sets the key for this key .
sets the key for this key .
get the { @link } for the given { @link key } .
get the { @link } for the specified key .
sets the id of the given id to the given id .
get the { @link } for this node .
register the given type for the given type .
create a new parameterized type from a class .
returns the class type of the given class .
returns a type argument for the given class .
checks the type of the given type .
determine if the given type is a subtype of the given type .
transform the given class to the given class .
returns a wildcard type which is a wildcard type of {
returns a new { @code } representing the wildcard type of the specified { @code } .
returns the annotation with the given annotation type .
add a {
adds a new value to the list .
adds all the values to the end of this object .
sets the { @link } for the entity .

executes the given { @link graphql . mmm . util . concurrent . executionexception } and { @link } .
create a new { @link } instance .
translates a { @link } from the { @link } .
fetch the { @link } for the given { @link key } .
load the { @link } for the given entity .
filter the filters .
{
{
{
{
{ @inheritdoc }
{
returns the key for the given key .
<p > . < / p >
<pre > the {
creates a key for the specified key in the given { @code key } .
<pre > the key - value pair to the client . < / pre >
creates a new key for the specified type .
returns the { @link } for the given key .
extract the { @link uri } from the { @link com . google . cloud . io . time . } .
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
{
{
{
{
{
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
executes the given { @link } and returns the result .
checks whether the given { @link } is satisfied .
/ * ==================================================================== private methods ====================================================================
returns the { @link } for this { @link } .
creates a new instance of the {

creates a new map of type t .
gets metadata for the given entity .
creates a unique identifier for a particular class .
returns the { @link } for the specified type .
returns the { @link } for the given { @link key } .
allocates a new cluster key .
get the current current stack .
opens the image .
create a new { @link } with the given parameters .
closes the given { @code } .
{
run the work on the fly .


{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
creates a new instance of the specified key .
creates a new instance of the specified value .
returns the first object of the given object .
adds a new entry to the list .
/ * ( non - javadoc )
generate the for the given field .
called by the dobjmgr thread .
returns a { @link } for the given { @link key } .

get the container for the given container .
gets the stat for the given {

unwraps the thrown exception if it is not a runtimeexception .

gets the given { @code path } for the specified path .
returns a root node of the given root type .
creates a new { @link } .
/ * ( non - javadoc )
gets the container property for the given container .
sets the value of the specified path to the current value .
sets the
saves the to the underlying storage .
get the value of the specified path in the given path .
writes the field to the digital object .
method to write the list of to the output stream
writes the given list of all of the specified to the output stream .
processes the given html snippet .
request the request body .
writes the request to a writer .
writes the request to the given outputstream .
writes the request to the jsongenerator .
writes the response to the cddb server .
writes the given to the given outputstream .
writes the given { @link } to a writer .
writes the given { @link } to the server .
returns a builder for a new { @link } .
returns a new { @link } for the given response .
returns a list of objects from the server .
returns the { @link } for the given id .
returns stream stream for stream .
returns a new { @link } that is a new { @link } .
update the given { @link } with the given { @link } .
update the filter for the given parameters .
remove a filter .
remove a filter filter .
returns the {
creates a new { @link } from the given { @link string } .
returns a list of all filters that match the given filter .
add a filter to the list of filters that are the filter .

writes the request to the request .
writes the request to the specified jsonwriter .
writes the request to the given outputstream .
writes the request to the request .
writes the response to the response .
writes the given response to a outputstream .
writes the given { @code } as a { @link } .
writes the given response to the given jsongenerator .
read the next rule from the .
returns true if the given { @link converter } is a { @link } .
registers a new .
registers a new .
create a new { @link } for the given { @link } .
reads a character from the given input stream .
reads a request from the input stream .
reads a request from the given inputstream .
reads a request from a request .
reads a character from the given text .
reads a response from the given reader and returns the response .
reads the response from the given inputstream .
reads a response from a response .
process the
this method is called from the to determine the for the
reads a request from the given input stream .
reads the request configuration from the specified reader .
reads the request from the stream .
reads a request from a request .
reads a character .
reads a new reader .
reads a response from a stream .
reads a json object from the server .
creates a message from a message .
sets the { @code message } to the { @code message } .
update a delta with a given function
filters a list of all the filters in the given list of filters .
filter the items in the list of fields that are not filtered by the filter .
returns the current name of the current current {


start snippet :

consumes a token from the jsonparser .
start snippet :
write a field value to a string .
write a list of strings to a json string .
writes a list of characters to a jsongenerator .
write a long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long - long
write a long - long - long - valued record to the stream .
write a list of longs .
writes the given { @code } to the { @code } .
writes the field to the given field .
write a list of { @code } s to a { @code @autovalue } .
read a json string from a json array .
returns the url to the target url .
replies the url for the specified target .


returns the host name from the given url .
get the url of the page
load the list of keys from the given list of key / value pairs .
extract configuration from configuration
get the url of the url with the default protocol .
emits a single url to the given destination .
convert a string to a byte array .
/ * ------------------------------------------------------------
get the time of the time in milliseconds for the given source .
returns the value of the given string .
get the metadata for the specified metadata for the specified metadata .
filter metadata for filters .
read rules from a rule list
{
puts a url to the map .
add a new entry to the list .

removes the given name from the given name .
create a from the given batch of hosts .
gets the content of the specified { @code content } header .

get the content of the content from the content - string .
returns the raw html for the given byte encoding .
returns true if the given byte array contains the given content type .
get the partition for the given host .
sets the value for the given key .
get the first string for the given key .
returns the driver for the current thread .
main method .
gets the cookies .
checks whether the domain matches the domain name .
returns the cache key for the given url .
get the from the given url
{
extracts the meta data from the jcas .

this method is used to populate the metadata for the given metadata .
ack
filter the url to the url .
{
read the rule list from a list of rule definitions .
reads the rules from the file .
process the url to the query string .

unescapes the path of a path .
/ *
get the for the given configuration .
create a new { @link } instance .
add a new record to this tuple .
returns the total number of milliseconds in the current timeframe .
trigger a trigger for a given query and return true if the current time is not a time .
parse the configuration from the configuration .
append the given node to the node .
/ * ( non - javadoc )
{
/ * ======================================================================
receive a character .
{
/ * ( non - javadoc )
set the configuration to be used for the configuration .
parses a url and returns a new { @link } .
filters the document for a given document .
filters the fields that are not part of the map .
get the url of a given domain .
trims the text of a text .
/ * ( non - javadoc )
schedule the next interval .
checks if the given { @link } is valid for the given { @link } .
create a { @link } from the configuration file .
get a configuration from the configuration
submit a configuration task to the jobtracker .
submit a topology to the cluster .

convert a { @link file } to a { @link file } .


convert a { @link file } to a { @link file } .


gets the field instance .
set the value of a field in the given field .
set the count of items to the given position .
resolves the specified number of bits in the given { @code size } .
sets the drawable .
sets the drawable . <p >
sets the pitch angle in degrees
update the position of the spinner .
touches the given item .
positions the given position by position .
updates the velocity and reorder the touch time
gets color color palette .
clamp the value of the value to the maximum value .
checks whether the given string matches the given regex .
create a { @link } for the given job .
write the given json to the writer .
creates a new array with the given index .
<p > . < / p >
{
returns the string representation of the given {
get the string value associated with the given index .
get the string representation of a given symbol .
sets the string representation of the given { @link } .
sets the value of the specified index to the specified index .
sets the value of the specified .
get the for the given dimension
creates a new string from a string .
creates a new array of ints from the given array of ints .
create a new array
returns the normalized representation of this complex vector .
multiply the given matrix by this matrix .

/ * ( non - javadoc )
initializes the table .
draws a circle .
show the screen .

reads a range of data from the given range of data from the given array of data points .
reads data from the given data stream and return the original data from the given data stream .
returns the total number of rows in the specified .
writes a single dataframe to a file .
returns the last fb file .
main method .
create a new { @link } with the given name and name .
create a new { @link } for a given name .
creates a string representation of the given name .
chooses a time from the given time .
<p > . < / p >
checks whether this range intersects with another .
returns true if this range abuts this range intersects with another .
returns the intersection of the intersection of the specified range . <p >
extends the range of the specified range of the given range .
/ * ( non - javadoc )
sets the start time for the start of the start of the start of the start of the start .
sets the end time .
sets the duration of this duration .
reset the duration to be used for the duration of the duration .
stores the data in the current state of the current row to the current state .
add a new to the map .
builds a .
returns the last element of the given
get the for the given
get the last part of the given long .
this method returns the next character in the token .
print a string .


returns the name of this mp3 .
find the for the given column
find the next occurrence of the specified name .
/ * ( non - javadoc )
perform a cross - dated cross - point operation .
compute the for a given latitude .
converts a wgs84 point to wgs84 earth - clockwise .
converts a wgs84 coordinate to wgs84 point .
converts wgs84 projection to a spherical earth - centered earth - independent .

open the server and returns the new chunk
sets the { @link } for the given { @link } .
returns the number of quarters bound to this date . <p > the comparison is used to enhance the first time that the value is less than the specified instant . <p > if the value is not a valid <code > bigdecimal< / code > then this method returns the value of the first day in the month .
returns the maximum value of the first time zone of the specified values .
computes the for the given .
creates a new instance of { @link } for the given { @link } .
methode d le de le de la
handles the given { @link } .
@throws malformedurlexception
reads all fields from the file .
set the min / max value .
computes the number of tracks in the given list of size layers .
register a new {
process the events to the given listeners .
sets the time zone for the given date .
register a class name to be used by the class .
register a class name to be used by the class .
register a class to a specific type .
opens a new feature file .
wrap the in a .
replies if the feature is supported by the feature type .
find the feature type from the file .
{

converts a into a html table .

returns the html for the page .


adds all the to the global list of all the .
initialize the user agent from the user agent .
returns the given { @link } for the given { @link } .

get the url of the given url .


returns true if the given is a power of two indarrays .
returns true if the given is a power of two indarrays .
/ * ( non - javadoc )
get the for the given .
returns the name of the list of name .
adds a new dataset to the list of training files .
/ * ( non - javadoc )
/ * ( non - javadoc )
find the for the given .
find the for a given path in the given dataset .
find a dataset in the dataset group .
returns the dataset of the dataset s dataset .
compares two sets of values .

parses the attribute name attribute of the given attribute name .
reads a file from the given .
reads the file from the stream .
convert a float to a
sets the .
returns the difference between two numbers .
converts a byte array to a byte array .

sets the value of a property .
checks whether a given name is a valid name .
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
checks whether the given name is a valid name or a valid name .
{
reads a section from a section .
reads a section from the given structure
read a trie2 from the given structure
creates a new file entry from the file .
{
{
fill all fields from the input data point .
{
{
reads a record from the specified data stream .
this method is used to create a object based on the and .
/ * [ deutsch ] <p > liefert einen passenden datum fest fest fest die angegebene die angegebene . < / p >
/ * create a from a calendar .
replace the file with the given number of parameters .
checks if the given string is a valid template .
perform a cross - point cross of a touch point
converts wgs84 point to a wgs84 point .
converts wgs84 point to a wgs84 point
wireframe [ ] [ ] [ j ] [ ] [ j ] [ ] [ j ] [ ] [ j ] [ ] [ ] [ j ] [ ] [ ] [ j ] [ ] [ ] [ j ] [ ] [ ] [ j

add a function to the probe
get a function that evaluates the given name in the given name .
returns a { @link } for the given name .
load a static named property .
finds the gold geometry type for a given type .
/ * ( non - javadoc )
replies the effective type for the given code .
read the html from the given file .
creates a new object from the given .
returns the list of {
get the for the given .
returns the level of the level of the given {
returns the description of the level of the specified {
returns the level of the level of the specified {
get the record type for a given type .
returns true if the given { @link } is a valid { @link } .
returns true if the layer is a layer .
encode the to the dataset .
replies the rectangle for the specified knx coordinates .
/ * [ deutsch ] <p > erzeugt einen . < / p >
/ * this method is used to create a new .
converts a {
transform a to a .
/ * this method is used to convert the to a .
convert the feature type to proto -

creates a new directory with the given glob - path directories .
register .
register .
register .
transform a into a
transform a to a

fire the event to the registered listeners .
create a new modal dialog .
main method
get the for the specified .
get the location of the location of the given location .
save the current state of the current transaction .
writes a sequence of to the output stream .
send the request to the server .
create a new
initialize the ecore page .
{
encode a single byte []
writes count count bytes to the output stream .
write the given array of objects to the writer .
write a byte to a byte array .
writes the bytes to the output stream .
{
returns the first character in the string .

get the flag
read a file from a file .
initialize the state of the .
this method returns true if the given dataframe is a valid .
set the field to the given object .
get the name of the center of the specified name .
reads a path from a path .
obtains the current date range .
creates a new data set .
returns a new .
converts a wgs84 point to wgs84 earth - clockwise .
converts a wgs84 point to a wgs84 point .




parses the given and returns the .
converts an object to a string
initializes the file .
initialize the .
swaps the positions of the glyphs in the input vector .
reads the header values of the given grid and returns the grid .
reads a word from a word .
main entry point for the demo .

generate the for the given .
write the operation to the output of the given operation .
execute the file .
reads all files from the specified directory .
this method is used to get the results of a file .
loads the grid and returns the loaded grid position .
initialize the .
main method .
gets the grid offset for the given calendar type .
find the grid grid for the given grid .
reads the grid row of the grid grid in the grid grid .
/ * get the error correction for the given
/ * this method is used to extract the data from the and it .
calcola la
/ * [ deutsch ] <p > definiert eine zum angegebenen und angegebenen . < / p >
/ * [ deutsch ] <p > interpretiert den angegebenen . < / p >
create a new .
print a remark - spaced human - readable block .
print a string .
prints the record to the current list of all the grid .
shows the grid info for the grid .

get the bits of a given bit .
reads the next character from the current position and advances the next character sequence .
add the given variable to this node .
print a file to the print writer .
/ * print a string to the printwriter .
deserialize a byte from a byte array to a byte array .
forces the dbase data to be written to the output stream .
get the for the given
obtains a { @code date } from the given day successively and day - of - hour .

converts a { @link } object to a { @link calendar } .
converts a { @link calendar } to a { @link calendar } .


parse a date string from a phoenix date .
gets the field value for a field .
add a new time period
subtracts a date from this date - time with the given period .
truncates the calendar to the calendar .
get the difference between two dates .
creates a map of {
create a new
creates a for the given .
creates a .
sets the request to be used for the request .
/ * ------------------------------------------------------------

make a new block of work .
escape unprintable characters from a string .
{
create a new list of all the elements in the list
checks whether the given list of times are the same as the specified range of the specified
checks whether the given list of bytes are equal .
returns true if the given array is a valid
get the file for the given file .
checks whether the given list of dimension is a valid
computes the of the given dimension
extract the data for a given record from the dataset .
extract a double value from the dataset
converts a java object to a java object .
get the checksum of a checksum .
/ * [ deutsch ] <p > erzeugt einen { @link }
converts a value to a datetime object .
adds a date to the chrono .
/ *
/ *
/ *
{
returns the value of the given { @code double } .
/ * [ deutsch ] <p > versucht die angegebene zeiteinheit die angegebene
returns the value of the specified { @code double } from the given { @code double } .
returns the canonical representation of the given unit .
main method .
reads a single - line data from the given { @link } .
reads the given from the collection .
reads a single part from the given partitions .
reads a range of input splits from the specified range of region .
read the data from the dataframe .
returns the { @link } instance that is associated with the given { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
find the service if it exists
resolve uri scheme for uri .
{
returns the size of the current viewport .
returns the start of the start of the start of the start of the end of the receiver .
returns the number of times the current value is the number of times .
reads the data from the data< and writes it to the specified chrono data point .

writes the given xmlfile
liest einen neuen . < / p >
create a new .
returns the size of the given rectangle in the specified region .
/ *
get the for the given index .
get the distance from the given position .
/ * ( non - javadoc )
adds a new point to the .
converts a string to a string representation of the .
converts a string to a string .
converts a string to a string .
converts a string to a string .
get a map from a string
get the name of the .
get the name of the .
returns the for the given .
extract the from the dataset .
extract a {
extract the {
/ * [ deutsch ] <p > interpretiert den angegebenen iso - 8601 iso - 8601 iso - 8601 iso - 8601 iso - 8601 iso - 8601 iso - 8601 iso - 8601 iso - 8601 iso - 8601 - stil . < / > < / a >
/ * [ deutsch ] <p > interpretiert den angegebenen iso - - - - - - - - - - - - - - - - - - - - - - - - - -

converts a date into a datetime object .
converts a date into a new parcel .
main entry point for the demo .
/ * ( non - javadoc )
returns the filename for the given file .
get the dimension .
main entry point for the specified unit vector .
checks whether the file is a valid file
open a new file to the given file .
reads the current record and returns a map of the { @link } .

初始化<br >

{
reads a data type from the given position in this buffer .
reads a 64 - bit integer from the given section .

returns the range of the current range of the current range of the current range .
calculates the angle of the .

returns the time string for the specified time series .
calculates the for the given
transforms a into the
remove a partition .
reads a random file from the file .
sets the property .
sets the index of the .
/ * ( non - javadoc )
reads a single line from a section of a dwg section
/ *
/ *
parse the request .
gets the clipped s .
returns the horizontal z coordinate of the specified bounding box .
get the bounding box of the screen .
calculates the for the specified scale factor .
called by the {
flattens a into an array of .
<p > . < / p >
pad a string to a string .
returns the width of the specified width .


returns the size of the given size .
show the given point
print a double value
returns the text representation of the document .
writes the document to the output stream .
/ * ( non - javadoc )

create a new element
get the shape of a string
transform a element
main method .
/ * ------------------------------------------------------------
returns the count of the counts in the list .
convert the string representation of the to a string .
compose a slice of target into a new array .



gets the name of the given name .
gets the for the given calendar type .
encode a data file data
decode the given { @link } into a { @link } object .
decode a data encoded data into a .
decode a trie2 section into a .
extract the list of urls from the specified url .
get the text content of the given url .

{
creates a document from the given xml document .
transform a element
{
/ * ( non - javadoc )
{
get the list of units .
add a new event to the list of listeners .
main method .
{
returns a new with the given name and the given package .
reads the data from the dataset .
/ * print a string to the printwriter .
deserialize a byte [] into a byte array .
externalizes a dataset to a dataset .
checks whether the given vector is positive .
checks whether the given { @link } is a positive number of observed units .
compute the stride of the
sets the value of the current value to the current value .
returns the date - time representation of the date .

gets the epoch date time .
returns the date - time representation of this date .
/ * [ deutsch ] <p > interpretiert eine am double v2 . < / p >
returns the date value of the given date .
returns the date string value from the date format .
gets the for the given calendar .
adds the to the .
add a to the screen
add a axis - line vector
add a dot - d rotation
/ * ( non - javadoc )

adds a variable - local variable to the variable .
generate a new .
sets the of the .
this method is used to create a new average record for the current screen .
******************** private methods ***********************************
make sure that the current location is not in the .
set the .
this method is called by the to set the to the .
sets the of the given .
sets the squared of the .
creates a new { @link } for the given element .
reads a data from a dataset in the given dataset .
scan the schema from the given filter .
scan the input data for the given input .
reads a json document from the specified { @link } .
get the json representation of a given uri .
/ * ( non - javadoc )
this method writes the summary of the .
returns the number of supported {
checks whether the file is a valid file .
open a new { @link } from the given { @link file } .
add global global global attributes to the global global global attribute .
reads a data from a given input .
write a byte to a byte array .
prints a comment to the printwriter .
returns true if the operator is equal to the given operator .
serialize a {
sets the name .
print a file to the print writer .
print a comment .
prints a comment to the given file .
prints a comment to a file .
/ * ( non - javadoc )
creates a new time instant from the given instant . <p >
get the weather data for a given type
get the weather data for a given name

build the for the given .
/ * this method is used to convert the to a list of words .
get the value of the property
create a new 4d graph
this method sets the of the property .
returns the bit vector for the given bit vector .
main method to run the main command .
parses the given { @link } to a { @link set } of type { @link } .
initialize the cache for the specified log file .
wraps a to a dataset .
create a new from a location .
creates a new { @link } from a location .
create a new from a location .

get a from a location .
get a { @link } from the given { @link } .
open a new location to the given location .
opens a new location on the specified location .
acquires a from the remote location of the given location .
acquires a file from the given file .
acquires a from the cache .
returns the { @link } instance for the given location .
clears the top level time .
find the of a type
find the last axis of the given axis
find the first occurrence of the given name in the given c2j name .
transform a given string to a
/ * ( non - javadoc )
this method is used to make sure that the is a valid record .
add a gauge to the list of .

sets the element values of the element to be set .
sets the values of the element to be used as a series of values .
create a new array with the values of the values in the array .
{
prints the given {
prints the debug mode to the output file .
main method .
create a { @link } for the given dataset .
get the from the given path .
get the from the given path .
get the from the file .
creates a { @link } for a dataset .
create a new { @link } for the given { @link imageformat } .
{
open a new { @link } for the given { @link } .
extracts the members of a single array
returns the index of the first occurrence of the specified index .
get the file name of a file .
find the service name for a given service type .
returns the servicetype service .
sets the description of the given collection .
display the given { @link string } as a { @link string } .
check if the given is a valid variable .
writes a new file to the collection of the given file .
gets all features of a feature
/ *
gets the for the given .
{
add a new to the list of .
add a new content specification to the html .
remove the given type from the list .
returns the last 64 - bit - 64 - bit - length - 64 - bit long from the given position .
returns the maximum number of bytes in the given buffer .
gets the hours minutes of a period .
prints a comment to the print writer .
deserialize a byte array into a byte array .
externalizes a dataset to a dataset .
/ *
get the resource name of the resource file

create a new object
{
register a class name to a given class name .
register a class name to a name .
returns the names of the names of the comma separated list of names that are not defined in the list .

create a new

finds all the categories in the depiction in the given { @link } .
finds the that contains the
finds the for a given
make a morph screen .
sets the to see if the is a valid .
detects the outline of the graphical model in the form of the .
/ * this method is the same as () but with the same as the .
sets the to be used by the .
returns true if the axis is a variable or a axis - aligned matrix
<p > . < / p >
reads the graphical model from the given input .
add a new outline vector to the current outline of the screen .
sets the dataset to be used by the .
find the for the given dataset
filter the filter to the filter .
mark the filter to the given filter .
delete a cascading row
finish the dataset .
returns the average of the .
returns the average angle between two units .
parse a string representation of a character .

main method to run the demo .
find the first file that contains the given directory and its parent directory .
initialize the servlet .
/ * ------------------------------------------------------------
returns the json string for this .
opens the given file .
get the detail information of the probesender .
count the value of a counter
creates a new instance of this class .
add a named field definition
main method .
compares the two strings .
compare two { @link } s to a { @link } .
get the group of the group .

/ *


method called to parse a object .
{
/ * ( non - javadoc )
checks if the given time range is valid .
/ * ( non - javadoc )
get the attribute attribute of the attribute .
checks if the attribute attribute is a valid attribute .
<p > append to the <code > / code > attribute . < / p >
append a value to the current value .
adds a new attribute to the table .
adds a new container to the container .
adds a alias to the alias .

print a string to the specified printwriter .
print a string to a given output stream .
creates a new { @link } for the given { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
compares two longitude areas

register a new class
register a new service .
returns true if the given class has been registered .
unregisters a new service .
create a new
returns the sunrise time between two dates .
/ * get the time interval for a given time interval .
gets the time offset from the time zone offset .
/ * ( non - javadoc )
finishes the node to be processed by this node .
called by the operation to complete the current node .
lookup the given group name and return the .
sort the list of all the elements in the list .
sort the given list of objects .
compare two strings .
get the for the given
get the filename for a given file .
checks whether the given file is a valid file .
opens the given file with the given position .
reads from the given array of data from the given array
find the attribute for a given variable name .
find the value of a variable declaration for a given variable name .
returns the value of the given variable name .
find a variable by name from a given variable .
find the of a given vector
find the variable corresponding to the given structure .
returns true if the given is a
get the string representation of the key .
get the feature for the given feature type
get the name of the given property
get the map of the
get the dimension for the given key .
get the value of a slider .
calculates the for a given latitude / longitude .
returns the current values of the current row of the current row .

returns a new epsilon -
calculates the of a given { @link } .
computes the reciprocal of the given input .
convert the to a .
find the first occurrence of the specified point in the given target vector .
find the manhattan distance between two points .

<! -- begin - user - doc -- > <! -- end - user - doc -- >
returns the name of the group .
unwraps the given node to the given node .
add a action action .
add a menu item to the menu .
add a action to the textfield .
add a new action to the given action .
match the given path .
find the type of the given name .
returns the type of the given name .
open the .
reads the data from the given data type and returns it .
reads the data from the data set and returns the data optype .
convert a structure to a .
convert a to a .
reads the data from the given input and returns the data type of the given <code > object< / code > .
reads a single line from a given structure .
/ * ( non - javadoc )
calculates the 3d location of the center of the given tuple in the order of the locations in the given tuple .
sets the for the given
adds a segment to the segment .
main entry point .
returns the index of the first occurrence of the specified byte array .
compute the number of bytes in the input array .

remove all elements from the list .
add a url to the list of urls .
reports the to the log file .
stops the service .
stops the url .
sets the column of the given column to the given column index .
{
{
returns a new { @link } which is made by this method .
returns a new column in the table .
creates a new model for the given model
returns the for a given session .
creates a new from the given url .
{
/ * ( non - javadoc )

get a pseudo - bit representation of the next token .
/ * ( non - javadoc )
returns the next next interval .
{
/ * ( non - javadoc )
reads a section from the given section
deserialize a byte [] to a byte array .
returns the { @link } of the given uri .
read the table from the table .
parses a line from the given line .
creates a new .
get the of the given hypercube .
returns the index of the first occurrence of the specified occurrence .
main entry point for the demo .
remove the variable name from the variable variable .
converts the image to a string .
writes the to the output .
reads a bam / / / / / .
create the for the given color .
sets the number of colors in the specified color .
get the color of the color in the color .
set the maximum value of the gauge to the min - max value
/ * ------------------------------------------------------------
externalizes a dataset to a dataset .
sets the { @link slider } of the given { @link coordinate } s to the world .
this method returns the image used to draw the given blur and returns the rendered opacity .
paint the background of the specified <code > / code > on the graphics .
transform the given {


returns the { @link uri } that is resolved by the given uri .
called by the {
returns true if the given { @link } is a valid { @link } .

returns true if the base is a base uri .
sets the request to the request .
sets the current context to the current context .
generate a string representation of the given string .
get the directory for the given directory .
find the index of the first occurrence of the specified index .
reads a string representation from the xml file .
<p > . < / p >
add all the metadata to the list of entities .
validates the given content type .
reads the configuration from the xml element and returns the list of the elements in the .
reads the configuration from the configuration .
reads the element of the given element from the xml element
reads the attribute value of the given attribute attribute .
read a filter from the filter .
reads the attributes from the input stream .
create a object from the given xml element .
create a element
creates a dom element for the given dom element .
create a filter element
create a new element
returns true if the string is set to false .

adds a menu to the menu .
add the given parameters to the list of redirects of the spreadsheet .
convert a string to a .
get the parameter of the given parameter
main method .
reads the contents of a stream .
reads the bytes from the stream .
returns the url of the url .
create a instance
gets the average factor of the given factor .
get detail of the detail information of the
synchronise the data to the given { @link } .
{
returns the values of the values in the array .
replace the template with the template id .
sets the info for this .
read the list of from the .
adds the given <code > listener< / code > in this <code > listener< / code > .
validates the input data .
accept a boolean value .
returns true if the value of this value is a valid value .
restore the value of the given value to the current value of the map .
sets the value of the property .
send event on the event listeners .
display the given format to the given format .
format the given double precision .
get the bitmap from the given byte array .
serialize the given descriptor .
returns the type of the given name .
returns the type of the given name .
creates a new { @link } instance .
writes a file to the file .
selects the best solar box rule for a given allele enumerated type .
$antlr start
sets the flag .

parse the global attribute definitions .
this method is called by the to ensure that the is not in the group .
parse the name of the name of the named property .
create a new .
adds a group to the parent of a parent .
returns true if the given parent is a group .
add the given attribute to the given { @link } .
get the attribute for the given attribute
get the group dimensions for this group .
/ * package
returns the base uri for the given parent .
/ * [ deutsch ] <p >


returns true if the is a monomer
/ * ------------------------------------------------------------
reads all the data from the given list of {
/ * public void ( ) { = . () ; }
get the detail information of the specified detail .
gets the icon for the icon .
gets a image from the given image .

get the resource path from the given resource .
main method .
reads the contents of a data file from the data file .
reads the contents of a { @link file } from the given { @link datareader } .
reads data from the data type and returns the value as a float .
reads the contents of a data type from the current position of the data in the buffer .
reads data from the data type .
reads data from the given data type and returns the data type of the object .

returns the array of primitive arrays .
returns the primitive value of the primitive type .

converts a character to a byte array .
converts a byte array to a char array .
reads the specified section from the specified section .
returns the array of the of a given <code > / code > .
add a new record to the list .
{
get the string representation of the specified chrono string .
returns the { @link } for the given type .
{
{
replies the members of a type .
/ * ( non - javadoc )
adds a group to the group .
main method
create a from a string .
normalizes a path to a string .
replies the orthogonal factor of the line .
sets the .
adds a dataset to the lucene project file .
adds a new record to the list of vertices that are contained in the specified file .
add a new collection to the list of all the objects .
finishes the .
create a new .
get a dataset from a dataset .
creates a new dataset in the specified dataset .
sets the dataset s { @link dataset } for the dataset .
/ *
add a point to the point .
sets the next line .
sets the current element .
create a new regression line from a dataset .


validates the input and output type .
checks if the dataset contains the given dataset .
filter out records from a single - filter filter .
adds a new feature to the dataset .
returns the {
parse a string into a .
parse the given and returns the constraint .
send a { @link } to the given { @link outputstream } .
evaluate the operator .
marks all the subsets of the given {
prints the current { @link } to the specified {
checks whether the given group is allowed .
relativize the group for the given group .
this method is the same as the () method .
check if the given is a dimension
find the group of group in the given group .
reads the content of the given input stream into a string .
returns the uri of this uri .
gets the { @link uri } for the given { @link org . apache . beehive . netui . pageflow . annotations . } .
parse the line and line line .
returns the list of sections for this attribute .
get the property name of the specified property .
prints the given printstream .
sets the specified section .
sets the .
returns the name of the given name .
write a new { @link } to the { @link } .
writes the attributes of the given attribute to the table .
creates a new { @link } instance with the given { @link } and { @link } .
add a component to the component .
invalidate the container .
remove the component from the component .
returns the size of the parent container .
returns the size of the container .
sets the component container for the given container .
returns whether the given { @link } is a { @link } .
returns the of the given { @link } .
returns the maximum of the kappa of the maximum distribution .
returns the date time unit .
main method .
reads a point from a region .
process a to the server .
/ * ( non - javadoc )
prints a string to a single - value .
{
computes the absolute quadratic for a given x - axis .
/ * [ deutsch ] <p > allen
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a vector to a double
get the distance between two points .
/ * ( non - javadoc )
/ * [ deutsch ] <p > allen - - - - - - - - - - - - - - - - - - - - - - - - - - -
returns the matched axis of the given axis .
sets the start of the given <code > / code > to the <code > / code > .
set the to the
reads a dataset of data from a file .
writes a dataset to a dataset .
reads a file from a file .
writes the feature headings to the feature list .
returns the member of a member of a member .
get the members of a member .
get the value of the field in the given type .
converts a field name to a float
get the members of a member .
returns the member of the given member .
returns the array of the members of a group . <p >
get the members of a group .
show the given element as a new avt .
returns the name of the name of the parent .

returns the access control service for the given service .
access the for the given
find a dataset by name .
get the foreign value for the given escalation .
retrieves the metadata for the specified metadata .
find the name of the named service .
returns the default access control for the given key .
gets the { @link } for the given variable name .
{
converts wgs84 point to a wgs84 point .
converts wgs84 point to a wgs84 point
converts a bounding box into a 3d vector of point2d .

main method for testing .
find all that are the same as the .
convert a path to a uri .
get the for the given
get the shape from the given location .


constructs a new { @link } for the given { @link } .
converts the wgs84 to cartesian coordinates .
compute sin and .
compute the .
get the angle of a spherical earth scale
converts a wgs84 point to wgs84 earth .
converts wgs84 point to a wgs84 point
converts a point to a normalized position of the .

main entry point for the demo .
$antlr start
write the element
main method .
/ * ( non - javadoc )
/ * ( non - javadoc )
get detail detail detail detail detail detail detail .
returns a variable of the given structure .
creates a new variable .
create a new variable variable with the given parameters .
add global attributes to the list of attributes .
returns the size of the given variable name .
/ * ( non - javadoc )
/ *
build a new rule with the specified parameters and the parameters
this method is called by the operation to transition the state of the to the .

prints a word - separated string to a string .
parse the input data and returns true if the parser succeeds .

print the morph output
parses the given string into a .

compares this object to another object .
compares the given string to the given string .
this method is used to read the contents of the string .
reads the error message .
reads the next chunk of bytes from the input stream .
reads the content of the specified byte buffer into a byte array .
read a header from the input stream
initialize the xml declaration .


converts a calendar to a calendar object .
converts a date into a java . util . date
creates a new instance with the given and .
read a string from the input stream .
read the data from the given stream .
transfers the contents of the given target node to the sink .

/ * ( non - javadoc )

find the group of groups in the group .
get the parent directory for the given location .
/ * ( non - javadoc )
reads a single byte from this data structure from this data object .
/ * [ deutsch ] <p > make sure the subset of the fields in the skeleton are valid and the constraints are intersecting . < / p >
returns the index of the first occurrence of the specified character in the array starting at the given index .
checks whether the given character is a valid
replaces all of the occurrences of the given string with the given replacement .
parse a string from a string .
parse a string from a string .
parse a long value into a long value .
returns the number of digits in a double array .
returns the index of the first index of the given index .
returns the index of the first index of the first index in the list .
sets the of the specified string to the specified data set .
create a new index .
creates a new {
creates all the {
validates the input string .
returns the value of the current edit text .
sets the value of the text to be displayed .
gets the data optype type of the data optype
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * [ deutsch ] <p > definiert eine ordnung ordnung . < / p >
/ * [ deutsch ] <p > allen ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp ; &emsp
/ * ( non - javadoc )
/ * ( non - javadoc )
execute the .
calculates the 3d point of the specified point .
reads the file from the file .
removes the unit from the given unit .
removes the trailing whitespace from the given name .

returns true if the given string is a
generates a uri for the given url .
get the { @link } of the given { @link } .
get the shape of the shape
get the outline of the polygon .
get the output for a polygon .

creates a new with the given fitness id and size .
get the variable s id for the given .

parse the current .
/ *
parse the current data and populate the data

find the for the given name .
find the for the given .
find the closet index .

returns the number of shapes drawn for this shape
returns the group of group in this group .
get the dimension of the dimension of the specified dimension .
find the index of the specified element in the given region .
returns the attribute string for the given attribute .
get a list of colors in a section .
returns a new section with the specified range .
creates a new section
this method is used to create a new data point in the with the specified number of and the other that you want to use .
this method is the same as the () method .
sets the for this .
reads the given section .
reads a range from the specified range of bytes .
reads a section from the section section of this section .
reads a string from the input stream .
reads the given { @link inputstream } from the given { @link inputstream } .
reads the next block of the input data from the input stream .
reads the header from the given section
{
reads a section from the specified section .
returns the name of the current position of the current region .
returns the name of the current position of the current position .
get a stringbuffer for the given { @code } .
get a new { @link } for the given { @link identifier } .
get the full index of the given name .
/ * ( non - javadoc )
prints the contents of the given { @link } to the output stream .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
sets the dimensions of the dimensions to be used for the dimensions of the dimensions .
reset the shape shape .
sets the dimensions of the group .
resets the group size .
sets the the specified number of the given parameters .
sets the dimension of the specified dimension .
returns true if the cache is not a cache .
sets the .
returns all dimensions of the dimensions in the list of dimensions .
returns true if the given region is a member of the geometry s type .
sets the bounding box of the bounding box .
called by the demo .
parses the given { @link } and appends it to the { @link } .
returns a dataset that contains all datasets .

open the database and returns the .
record the to be used by this node .
records the given record in the given scope .
/ * ( non - javadoc )
record a record to be used by the .
sets the .
sets the of the given .

get a


find the enumerated object for the given
create a from a location .
get the list of all the objects .
returns true if the given string is a valid .
scans the file and returns the file . <p > the file is to be used by the file .
prints the textfield for the textfield .
returns the description of the feature .
scan the file for a given filename and its path .
processes a sequence of bytes in the given sequence .
process a sequence of from the given structure .
create the
writes a featurecollection to the list of features .
blur a dataset of a dataset .
@throws pageexception
post - processing requests
returns an iterator over the elements in this iterator .
transforms a { @link } into a { @link } .
sets the slider s screen .
transform a matrix4d .
get the from the canvas .
converts this screen to a screen coordinate
adds a circle to the screen .
/ * ( non - javadoc )
***********************************************************************************
zooms the foreground of the foreground .
selects the best box for the specified .
adds a listener to the list of listeners .
remove a listener from the list of listeners .
send a event to the client .
/ *
prints a command line from the command line .
print a file .
prints a file to a file .
prints a boolean representation of the given output file .
prints out the output of the given output stream .
prints a comment .
print a string into a string .
prints the contents of a graphviz print into the output stream .
/ *
prints the array to a printwriter .
write a { @link } to a writer .
main method .
get the factor for the given factor .
read float data from a float .
read float data from deviceattribute .
add a parameter to the given list of parameters .
calculates the absolute path of the .
main entry point for the user .
finish the service .
checks if the given {
{
reads the current object from the set of reads .
reads the next object from the given list of .
sets the .
builds a new wpanel box .
makes mouse mouse focus event .
save the current state of the current transaction .
sets whether the toolbar menu is clicked .
this method returns true if the dataset is in the dataset .
redraw the current thread to enter the current thread .
returns the { @link } for the given { @link } .
returns true if the given record is a valid type .
replies the of a specific .
<p > get action . < / p >
creates a new { @link } from the given { @link } .
converts the flatdatacollection to a .
convert a float array to a float array .
checks whether the unit is compatible with the given unit .
returns the label of a label .
returns the for the given feature type .
get a list of { @link } s in the given { @link list } .
get a list of lines from a given index .
gets the point on a given point .
sets the bit offset .
get the bits of a parcel .
get the number of bytes in the file .
open a connection to the given url .
returns the postscript - identifying algorithm
retrieves the from the command line .
>
returns the string identifying the given string .
/ * ( non - javadoc )
get the for a given .
creates a new { @link } for the given { @link } .
get the from the server .
gets the data from the data point .
/ * ( non - javadoc )
returns the geographic distance between two points .
/ * ( non - javadoc )
gets the from the edge view .
get the edge points for a given latitude and longitude .
returns the edge treatments of the given points .
get the pickers date from this date - time .
determine whether the viterbi graph is a bit .
checks whether the given is a parsable feature .

/ * range date range [ 0 ] .
creates a new instance based on the given and .
checks whether the file is a valid file .
read the file from the file .
handles the download file .
handles the .
handles the .
handles the residual event .
returns the html for the last page of the header .
reads a dom element from the given xml string .

checks whether the file is a valid file
open the segment .
add global global global global attributes .
checks whether the current file is a valid file .
reads all the and from the file .
reads a data from a given input . the data is assumed to be a number of bytes in this container .
encode a string into a printable string
/ * ------------------------------------------------------------
/ * ( non - javadoc )

encodes a string to a string .
this method is used to create a variable in the form <groupid > / p >
add the given to the global list .
sets the content of the content - disposition header .
prints the text to the print writer .
/ * print the contents of a file to the print writer .
{
serialize a {
sets the gain position to the given number of values .
get the pitch in the current pitch degree
/ * ------------------------------------------------------------
calculates the short value of a byte array at the given offset .
swaps the two bytes in the given byte array starting at the given offset .
swaps the two bytes in the given byte array starting at the given offset .
swaps the float by moving the float value
swaps the current values of the given double double to the given double double .
converts a short to a byte array .
converts a byte array to a byte array .
converts a long to a byte array .
reads a variable - length array of the given dimensions .
converts a range of coordinates to a { @link } .
this method extracts the data from a file .
gets the from the given
returns the of the given .
returns the for the given id .
<p > gets the formatted string representation of the <code > / code > object . < / p >
writes the current document to the document .
/ *
resets the state of this .

prints out the string representation of a string .
returns the for the given index .
get the for the given position
creates a new array with the given { @code a } and a { @code b } .
returns the of the given

write features to the file .
adds all the levels to the list of levels of the given list of levels .
matches the current record .
adds a tiles in the given group to the current location .
add a single line to the
finds the outline of the given { @link } in the given { @link } .
returns the index of the given field in this record .
exit the exit exit .
get the for the given .
sets the directory root directory .
returns the cache for the given file .
returns the file for the given file path .
checks whether a file is a file .
returns the file for the given file .
creates a new directory with the specified suffix .
create a cache entry for the cache .

clean the cache .
returns the message for the genre .
{
{
calculates the for a given latitude and longitude .
calculates the distance between two places .
calculates the of a given point in the specified duration .
calculates the bearing from the specified center point to a given point .
main method .
returns the closest point of the specified point .
returns the distance between the latitude and longitude .
returns the closest point of the earth s wgs84 point . <p > this method is the same as { @link ( point3d ) } .
returns the approximate great circle distance between the earth s center .
load the specified image .
load the specified image .
load image from the input image .
stop the .
stops the url .
gets the image size .
add a listener to the list of the listeners .
removes a listener from the source .
sets the status code for the given .
sets the image to use for the given image .
returns the uri of the given { @link uri } .
/ * convert a field descriptor to the gpu .
transfers data from to trg
returns the number of occurrences of the given number of occurrences of the given number of occurrences .
checks whether this node is a class
returns the hash of the hash table .
load the header ( i . e . the index of the header ) of the header .
load data from the data file
get the field name of a field .
get the value of the field with the given name .
get the string representation of the field name .
get the short array name .
returns the field name .
get the field names of the field names .
main method .
returns the attributes attributes .
sets the attribute attribute of the attributeset .
remove an attribute from the list of attribute attributes .
get the group of the group .
gets the container for this .
sets the parent of this node .
returns the name of the url .
get the current path of the node .
get the current container s parent node .
get the list of all the group path elements .
get the path of the current path
checks whether the given { @link } is a { @link } .
returns the value of the feature .
adds a new sample to the simulation
get the info information for the given info .
build a document from the given byte document .
build a new { @link } object .
write a single dataframe to the dataset .
get the bean for a given bean
add a new value to the bean
add a new key to the map of key - value pairs
add a new value to the bean
get the list of the given property
returns the names of all the parents of the given parents .
returns the children of the given node .
returns the key - value pairs for the given base path .
returns the { @link } for the given node .
returns the child of the given child .
returns the default value for the given key .
sets the value of the given key to the given value .
removes the given node from the map .
gets the object from the given object .
reads data from the input data point from the data file .
reads data from the input data and reads it from the data file .
reads data from the input data .
reads data from the given data point into the given data set .
/ * [ deutsch ] <p > liefert eine die angegebene als . < / p >
prints the given variable to the given list of variable names .
prints the for the given .
{
serializes a string to a string writer .
writes the contents of the given file to the given file .
writes the contents of a stream to the deroutputstream .
write the xml element to the writer .
/ *
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
/ * ( non - javadoc )
/ * convert a string element to a xml element .
initializes the value of the given type .
transform a given into a .
get the array of values for the given array of values .
{
returns the name of the name of the given name .
/ * ( non - javadoc )



/ * [ deutsch ] <p > liefert eine einen neuen . < / p >

/ * [ deutsch ] <p > versucht die angegebenen eine . < / p >
returns a singleton instance of this class .
update the values of the given values .
/ * ( non - javadoc )
/ * ( non - javadoc )
find the first element in the given target by the given target and column .
find the first occurrence of the given
find the position of the given .
find the first maximal occurrence of the specified interval .
find the first occurrence of the specified interval in the direction of the specified interval .
find the first occurrence of the given target vector .
find the maximum number of times the given point is the maximum threshold .
sets the absolute position of the given factor .
sets the values of the given double array .
sets the maximum number of days to be used for the given range of values .
destroys the compressor .
write the data to the output file .
shows the given {

handles the index of the given group .

checks whether the given { @link file } is a valid { @link } .
@throws pageexception
displays the given { @link } .

opens a dataset .
opens a new dataset with the specified data .
opens the data model for the given dataset .
opens a dataset .
returns the access control for the access control .
annotate a dataset
gets the result of the .
find the access for the given type .
find the access token for the given list of type data .
get detail of the detail information of the screen .
reads a number of bytes from the input stream .
reads the data from the given data point in the data file .
reads a float data from the data file .
get the from the data in a file
reads the data from the input data file .
returns the url of the given url .
assemble the path to the uri .
returns the canonical form of a string .

{
normalizes the given string .
set the for the axis
reads the given from the given .

compiles the given .
sets the for the given .
get the number .

finish the page .
returns the element at the specified key .
{
remove the element at the specified key .
gets the date time of this date .
print the string representation of the object .
prints the for the given {
===============================================================
sets the name of the given string to the given value .
returns true if the given attribute is a valid attribute name .
prints the .

initialize the file .
checks whether the file is a valid file .
/ * [ deutsch ] <p > liefert den
sets the attribute of the .
sets the block attribute .
convert the given index to a string .
returns the type of the given java type
sets the outline of the image .
finds a column of the given type in the given filter
find the type of the given type
find the for the given type
find the first of the given axis
find the inverse of a type
finds the best match for the given
find the first occurrence of the first occurrence of the given axis .
{
{
prints a comment to the given file .
/ * print the file to the given writer .
{
set the flag indicating whether the given request is a valid filter .
serialize a { @link } to a { @link } .
add a new element to the list
get the name of the named variable .
returns the type of the given variable .
get a named variable of the given named name .
checks whether the given is equal to the given .
print a single character .
deserialize a byte [] to a byte array .

deserialize a single byte array into a byte array .
reads the text from the given marker .
write a text frame to the output stream .
forces the data to be written to the output stream .
get the
parses a document in the document .
/ * ( non - javadoc )
/ * ( non - javadoc )
called to be called from the event loop .
create a new { @link } with the given name and time .
main entry point for the demo .
get the array of the elements of this stream .
get the list of all the parameters of this tuple .
gen - last :
<p > the <code > / code > operation on the specified graphics device . < / p >
sets the selected navigation preference .
redraws the current screen .
this method sets the and of the to the .
find the top - level type of the given .
converts the earth s wgs84 to wgs84 datum to wgs84 point .
returns the kurtosis s position .
writes the contents of this <code > collection< / code > object to the given <code > writer< / code > .
==========================================================================
this method writes the contents of the given class to the list of xml element metadata .
adds the given { @link polyline } to the given { @link rectangle } .
add a new double - hand to the given double .
intersect the given rectangle with the given rectangle
returns true if this bounding box contains a point of x - z - 1 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0
reads a stream of the given byte string .
writes the state of this object to a stream .
compares two rectangles .
add a new to the list of the counts in the context .
adds a unit to the given unit .
adds a alias to the alias .
adds a symbol to the symbol table .
adds a alias to the alias .
adds a alias to the alias .
get the unit id for a given unit .
add a new name to the given name .
adds the given symbol to the given unit .
adds the given unit to the given map .
build the list of files and add them to the list of files .
adds the menu to the menu .
checks whether the given name is a global name .
returns the name of the type of the given type .
find the record for a given record .
advances the next record in the current record .
reads a data object .
sets the { @link } instance for the current { @link } .
serialize a sink to a stream .
get the float array of the
reads a 64 - bit short from the given byte array .
returns the copy of the view .
converts the decimal degrees of the input rectangle to the cosine .
converts wgs84 point to a wgs84 point .
returns the wgs84 point of the earth s wgs84 .
converts a bounding box into a 3d vector of point2d .
read the xml document from the xml stream .
draw a circle .
opens a new dataset in a dataset .
opens a new dataset with the specified feature .
opens the data for the given dataset .
<p > creates a new from the data stream . < / p > <p > this is a convenience method that can be used to create a new { @link } . < / p > <p > this is a convenience method that can be used to create a new { @link } . < / p >
returns the for the given list of .
annotate a from the xml document
gets the for the given .
find the access for all the access services .
find the for the given list of type names
remove all occurrences of the given list of property values .
adds a new partition to the list of partitions .
get the {

get a instance that matches the given pattern string .
get a from a given string
/ * ( non - javadoc )


/ * ( non - javadoc )
writes the given { @code } to the given { @code } .
/ * ( non - javadoc )

sets the to the given .
create a new from the given map .
reads a single dbase structure from a structure .
sets the of the given document to the specified .
sets the image image .
zooms to the current scale of the box .

center the track of the image
scroll the given blur and returns the image .
scroll the given vertical scroll box
scroll the border to the
scroll the given vertical scroll box
sets the location of the current window .
paints a new graphics object and draw the current color .
change the status of a status code .
calculates the permutation index of the decomposed array .
returns the of the given .




convert a value to a string representation of the given value .

returns the canonical representation of the given .
reads a number of integers .
gets the name of the given proto type .
get the type of data type .
read data from the input stream .
copy the contents of the given inputstream to the given stream .
print the current configuration of a given {
/ * ( non - javadoc )
returns the tag for the given tag .
main method .
open a new url to the specified location .
get the image file for the given image file .
returns the number of bits that the given type is the number of bits in the given type .
convert a java object to a java object
sums the sum of two integers .
sets the grid height .
sets the pitch multiplier .
clear the area in this map .
marks the position of the rectangle in the given object .
finds a rectangle in the given region .
finds the intersection of the contour points in the contour area
find the closest point on the specified point in the given region .
find the closest point of the given point in the given region .
returns the squared distance between the point .
sets the for the given dimension .


get the for the given hypercube .
get the of the given
get a new
main entry point for the specified unit .
create a new from a collection of parameters .
puts a byte array into the dictionary .
returns the list of urls for the given url .
find the url of a dataset .
returns the service for a given string .
parses the fragment .
find the given url from the given url .
decode a path from a path to a file .
decodes the given protocol type .
returns the { @link } of the given { @link location } .
checks the given http response .
checks the given string to be used for the given http response .
checks the given location and return the corresponding response string .
send a section to a given {
returns the name of the parent element .
returns the name of the parent element .
locates the file name from a directory .
locates the absolute path of the given string .
returns the path of the path .
extract the byte array from the bytebuffer .
get a list of all the variable s depth .
returns the path to the path of the given path .
checks if the is a slice of the
joins the given string into a single string .
checks whether the given path is a base path .
gets the list of all the apars from the given url .

converts a { @link } to a list of { @link } s .
converts a 64 - bit index to a new index .
returns a list of indices in the array of indices in the array .
checks if the inflected slice is a bit .
returns true if the current state is a single point .
create a new chunk of the given chunk .
reads the contents of the given file from the given inputstream .
get the from an input stream .
creates a from the given file .
{
writes a bson classfile
creates a new array at the given index .
<p > . < / p >
sets the charging station to be used for the given .
sets the oem names for the given .
creates a new {
/ * print a string to the print writer .
reads the contents of the given inputstream in the given inputstream .
/ * reads the dot notation from the given file .
add a new field
read the configuration file .
reads the configuration from the given repository and returns it .
add a to the list of .
updates the groups of groups of group groups .
get the for the given node .
find a variable name .
compare two groups
checks if the given list of attributes are linkable
checks whether the given group is a new one .
checks if the given list of strings are equal .
check if the given list of elements in the list are not included in the list .
checks whether the given string is a valid name .
get the for the given .
get the for the given type .
/ * [ deutsch ] <p > allen - l&auml ; lt ; lt ; ; &emsp ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ;
selects the forecast reports for the given position .

returns the ranges of the range of ranges .
gets the eye - wise clipping box .
gets the geographic bounding box of the bounding box .
gets the geographic points for a specific earth - speech of the earth s geographic point .
returns the list of geopoint points for a given position .
returns the normalized list of waypoints

sets the value of the property .
sets the connection timeout .
sets the global name of the .
sets the credentials for the global credentials for the global credentials for the given credentials .
sets the interceptor for the given interceptor .
get the cookie from the current cookie
sets the maximum allowed time for a remote host .
sets whether or not the request is a http request .
sets the current session .
closes this instance .
sets the global scope for the given <code > / code > .
sets the credentials for the given credentials .
set the proxy to the proxy server .
sets the .
returns the base string for the given string .
zooms to a new one
sets the to be used for the .

sets the global credentials for the user .
kill all the sessions .
sets the global credentials for the given {
validates a string representation of a url .
create a new index
computes the pseudo heat of the given
flip the index .
get the range of ranges that are part of the range .
reduces the index of the given { @link } .
benchmarks extracting the size of a table and a linear set of columns .
returns a new version of the specified array of the specified indices .
this method returns a pseudo - dimensional array of dimensions for the given dimensions .
returns an iterator over the first index of the iterator .
returns the current position of the current element .
sets the current current .
sets the current position of the given index .
sets the current value of the given dimension .
sets the element position .
prints the contents of the given debug string .
returns the time interval that represents the time interval that is the time between the given time and the last time .
/ * ( non - javadoc )
initialize the state of this context .
reads the date and time range .
returns the keys of the given date .
>
/ * convert the parameters to a list of parameters .
returns the list of the objects for the given .
/ *
returns the list of all the keys in the map .
find all key - value pairs of the given key in the given .
returns the list of dates that are contained in the list .
prints the date to the given date .
prints a screen coordinate .
find the index of the given index in the given index .
get the type of the file .
indent the given depth to the given depth .
sets the number of bits in the tree .
initialize the ast .
walk the given indexterm to find the first and the of the .
/ *
translate the
collects all the elements from the list of the given properties .
collect all the values in the collection and stores it in the list of the components .
/ *
translate the current value to the solver .
translate a to a .
translate the operator
sets the value of the current time in the current time in the current time in the current time .
{
reads a file from the file .
create a new
add a directory to the specified directory .
/ * ( non - javadoc )
scan the given map from the current time and returns true if the map is empty .
sets the debug flags .
add a variable to the variable .
writes the given to the output file .
add a new record to the list .
get the for the given element .
returns the output string representation of the document .
{
main entry point for the specified example .
converts a dataset to a dataset .
validates the validation errors .
/ * ( non - javadoc )
selects the member of a given structure .
sets the given variable .
{
{
convert a to a .
convert a shapefile into a
converts a into a .
convert the members of a to a .
find the for a given variable name .
checks whether the given variable is a variable - of - valued variable .
blur the dataset .
open the file path .

{

adds a new { @link } to the { @link } .
prints the contents of the {
/ * ( non - javadoc )
reads a section from the given section
reads a section from a section and a given range .
creates a sequence sequence sequence sequence sequence sequence sequence sequence sequences .
creates a sequence of sequence sequences from the given sequence .
sets the .
build a from the
returns a new dataflow instance of the given structure .
adds a new outline frame to the given .
*****
<p > relativize . < / p >



/ * ( non - javadoc )
returns documenttype document .
/ * ( non - javadoc )
writes a given <code > / code > to a <code > collection< / code > object .
/ * ( non - javadoc )
gets the metadata for the given key .

returns the name of the unit .
/ *
/ * [ deutsch ] <p > liefert eine dauer der angegebenen und dauer . < / p >
/ * [ deutsch ] <p > versucht einen zum angegebenen . < / p >
{
main entry point for the specified unit .
writes a geometry to the canvas .
writes the given point to the given point .
writes a line to the screen .
writes a polygon to a polygon framing the polygon .
parses the given input string into a { @link uri } .


returns the list of node elements in the list .
renders the given node .

returns the last - side numeric type of the given column in the given set of time .
converts a into a .
sets the members of a group .
get a single pseudo - word sequence from a structure .
reads a polygon from a given input .
reads a line from the given line .
reads a point in the current point .
get the for the given type .
create a new feature feature from the feature data object .
adds a to the list of .
/ * create a new .
sets the of the .
returns the primitive type for the given array
create a new instance of the given type and returns it .
create a new instance of the view .
<p > . < / p >
compares two bounding boxes .
checks whether the box is intersecting a given latitude .
checks whether the specified region should be drawn .
renders the bounding box of the bounding box .
extends the given wpanel s wgs84 point divided by the z coordinates .
returns the bounding box of the bounding box of the specified bounding box . <p >
returns the normalized string representation of the given percentage .
adds the given argument to a wrapper .
adds the result of a { @link } to a { @link } .
check if two arrays are same .
check if the specified shape is a shape
converts an array of primitive type to an array .
copies data from the given array to the specified type .
copies the array of the given type to the given type .
copies the array of elements from the given array to the array .
copies an array of scalars from a given array of <code > / code > into a <code > float< / code > .
copies the array of elements to a new array .
copies an array of ints from a list of <code > / code > into an array .
copies an array of ints from a given array of <code > / code > into a <code > short< / code > .
copies all of the elements from the given array into the array .
copies all of the elements from the given array to the end of the array .
copies all of the elements from the given array to the given result .
copies all elements from the array to the given array .
get the minimum value for a minimum value
sets the value of the given double array .
sums the sum of two double arrays .
returns the sum of the elements of a given double array .
converts a number of { @link } s to a { @link } .
checks if the given is a valid
/ * ( non - javadoc )
produce a bigquery .
get the attribute table .
get the attribute value associated with the given attribute name .
resolve the ldap - aliases to the given ldap object .
resolve aliases for a given entityreference .
resolve alias aliases .
get the attribute for a given idref attribute .
/ * ( non - javadoc )
creates a new data input
get the character at the specified index .
/ *
returns a projection that animates the given { @code }
converts wgs84 datum into wgs84 datum to a wgs84 point .
converts wgs84 point to a wgs84 point .
/ * ( non - javadoc )

url - decodes a string .

escape characters from a string .

returns a list of escaped characters in the given string .
returns the index of the first occurrence of the given character in the first character .
returns the string representation of the given string .

returns the string representation of a string .
reads the current value of the given list of the specified { @link } .
/ * [ deutsch ] <p > liefert eine
gets the offset of the given .
get the size of the element .
compute the for the given
returns the list of in a list of .
get the for the given
saves a file to the file .
returns a container for the given type in the given list of type <code > / code > .
returns a container for the given type in the given list of class .
returns the container for a given type .
returns the container for a given container .
returns the container for a given container .
returns the component for the given container .
returns the name of the given class name .
returns the { @link } property for the given { @link property name } .

get the map of the properties of the given component .
returns the component for a component of a component .
compile the .
returns a for the given .
compile a object .
takes a sequence of and returns the instance .
compile a .
extract data from the given data point .
reads a double value from the buffer .
read the 64 - bit little - endian unsigned 64 bit bits .
reads a long from the given buffer .
returns the confusion type of the given type of type { @link } .
read a file from the given file .
add a new listener to the listener .
remove a listener from the given action .
returns true if the user wants to enter a new .
get a field from the given field .
get the field value for this field .
sets the field value .
adds a field to the field .
adds a field to the set of visible fields .
add a field .
adds a field to the field with the given field name .
adds a field to the field of the specified field .
adds a field to the specified field .
adds a field text field to the given field .
adds a field search to the set of column widths .
adds a field to the specified area .
adds a heading row to the panel .
add a component to the component .
adds a row to the list of rows .
{
returns the frame of frames for the frame .
reads a data from the database .
returns the cell spacing for the cell
gets the factors of the given { @code } .
multiply the given { @code } by its { @code } .
creates a new operator for each operator .
returns true if the given { @code } is a valid { @code } .
returns true if the chromosome is a valid
creates a new instance with the given and .
notify the listeners that the child is being fired .
fires a child event .
notify listeners that the child is being fired .
writes the cache for the current record .
persists the cache of the file to the cache .
returns the name of the cache for the given name .
converts a random int to a 32 - bit version of the current version .
get the given parameters for the given table
create a new
get the for a given table
add a table to the table .
adds a table to the table .
{
/ * [ deutsch ] <p > liefert eine die l&auml ; nge des angegebenen . < / p >
{
converts an array of float to a float array .
converts an array of float to a float array .
checks whether the file is a valid file
opens a new point with the specified number of rows and the given position .
make a file .
reads a section from the given wkt section .
initialize the unit table .
create a new variable .
add a new
reads the descriptor of the given file descriptor .
skips the file descriptor from the given file .
get the name of the file .
/ *
/ * ( non - javadoc )
returns the number of bytes written from the given byte array starting at the given offset .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns whether the given string is a valid java type .
creates a new instance of this class .
recursively walk the given rule .
computes the for the given unit .
executes a lookup of a given alias .
convert a string to a string .
main entry point for the demo application .
returns the location of the given location .
resolves a uri to a relative uri .
create a converter instance
write a record to the output stream .
add a listener
remove a listener from the list of listeners .
sets the list of .
sets the feature list of feature data points .
draws a circle with the specified text .
get the display s display headings for a given label .
creates a document for the document type .
convert a single to a object
/ * package
creates a new { @link } from a { @link } .
this method is used to create a new object based on the and .
reads a section from a section and a range of time
execute the file .
process the input stream to the next byte .
read the buffer from the buffer
reads the buffer from the stream .
reads the next chunk of the given stream and returns the buffer .
reads the next line from the buffer .
reads a byte array from the input stream .
skips n bytes from the input stream .
opens the given entry in the given file .
main entry point for the specified .
returns the of the specified .
get the of a given coordinate
matches the current record .
adds a tiles in the given tree .
add a new to the list of the ascender .
returns the index of the ascender of the given column in the current record .
checks whether the file is valid .
open a new file to the specified stream .
reads a data point from a data point in this record
read a single byte buffer from the database .
reads a byte array from the given byte array .
creates a dataset from the given .
creates a new variable in the given input variable .
/ * ( non - javadoc )
fired for center - only clicks on the radar pane .
sets the of the combo box .
sets the geographic area .
sets the longitude of the center of a given latitude .
sets the of the
adds a menu menu to the menu .
redraw the event to the screen .
sets the current .
repaints a new
{
this method returns a new image that represents the bounding box of the screen .
transforms a matrix4d to a matrix4d .
for debugging
draws the given element with the given value
set the .
returns the type of the specified type .
/ * ( non - javadoc )
get a double value for the given index .
get the value of the specified object in the given object .
convert a to a string representation .
/ *
convert the given into a string representation .
returns the value of the specified element in the given { @code } .
reads the current value of the given bytebuffer .
returns the name of the given parameter with the given name .
{ @inheritdoc }
returns the number of bits contained in the specified size .
/ *
atomically swaps the start of the current range of the current range of the current range of the current current clock .
get the number of files in the file .
get the file name for a given file .
returns the list of files in the given file .
get the uri of the file or directory .
get the relative path of the mp3 .
add a new to the list of
writes all the data to the dataframe .

converts a time zone to a datetime object
creates a new array at the given index .
<p > . < / p >
checks whether the file is a valid file
reads the contents of the file in the given .
/ * ( non - javadoc )
reads the file from the stream .
/ *

checks the header of the header of the header file to be read from the header file .
/ *
/ *
/ *
>

/ *
parse a list of { @link } s from the given { @link bytebuffer } .
parse the data from the given byte array .
parse the given <code > / code > into a list of <code > / code > objects .
add a string attribute to the list of attributes .
reads a string from the given bytebuffer .
/ *



get the array of all the levels of the list

add a new variable to the list of the given
add a to the set of parameters
returns the level of the level of the level .
sets the for the specified .
returns the byte [] representation of the byte array written by the given { @code byte } .
read a color from the buffer .
reads a byte [] from the given bytebuffer .

reads a single byte array from the specified byte array .
reads a from the given bytebuffer .
convert the given byte array into a byte array .
convert the given byte array to a byte [] .
returns the length of the byte array that is greater than the given length .

get the byte array of the bytes in the byte array .
/ *
lookup the with the given parameters .
calculates the azimuth for the .
/ * get the hamming distance between 2 and 4 bytes .
initialize the servlet manager .
handle the request to be used by the servlet request .
sets the body of the request to the server .
sets the data for the given data in the given dataset .
/ * ------------------------------------------------------------
add headers to the list of headers .
create a request for the request

set the attributes of a given type .
sets the attribute of the attribute .

stretch the circle of the circle in the circle .
ends the point in the given point .
{
{
returns the bounds of the specified rectangle .

formats the given string using the given dateformat .
format the given text into the given date .
format the given text .
format the given text as a date .
formats the given text into the given text .
converts a date into a string .
replace the outline of the given { @link } .
ensures that the given string is a valid array .
rounds a double to a given value .
initializes the table .
add the given { @link file } to the given { @link file } .
create a new random file .
reads a {
reads a {
reads a {
reads a signed short file from the specified file .
returns the base 32 - bit floating - point value of the specified <code > int< / code > value .
reads a 64 bit integer from the file .
counts bits of the bits of the given byte buffer .
returns a new {
calculates the for the halogen point .

get the kurtosis s scale factor
converts wgs84 point to a wgs84 point .
converts wgs84 projection to wgs84 datum into a wgs84 point .
converts wgs84 into normalized coordinates
converts a point to a normalized position of the wgs84 datum matrix .
escapes a string in a html entity .
escapes a string with a backslash .


cleans a string .
handle a response to a list of features

this method is used to build a object from a .
get the service name from the given path .
get the directory of the directory .
count the number of elements in this map .
add a new element to the list of the

checks the of the
prints the comment to the output stream .
forces the given data to the given sink .
find the first index of the first element in the list of members .
selects a subset of the columns .
/ * ( non - javadoc )

/ * ( non - javadoc )
{
{
get the time for the given date .
create a new instance of the given section
{
print the contents of the command line .
read a from the
index a file .
get the file path .

transform the given into the .
gets the for this box .
opens the given entry in the given file .
reads a section from a section .
sets the file to the file .

<p > . < / p >
returns true if the date is the same as the specified date .

get the from the catalog .
creates a new { @link } for the given { @link file } .
find the name of the name of the given class .
returns the type of the given type .
set the value of this node to the specified value .
deserialize a byte [] from the stream to the server .
externalizes a dataset to a dataset .
adds the given { @link } to the { @link } .
gets description of the shortdescription .
sets the string attribute .
returns the string representation of the attribute .
initialize the .

checks whether the given is newer than the given .

process the data files for the given dataset .
read a record from the file .
/ * ( non - javadoc )
returns true if the longitude line contains the longitude and the longitude .

converts a wgs84 to a wgs84 latitude
converts a string to a string .
compares two {
main entry point for the demo .
returns the {
sets the dataset in the dataset .
/ * copy the tree from the tree .
{
sets the catalog .
sets the of the given <code > / code > .
displays the given node with the given node .
shows the { @link } .
/ * ( non - javadoc )
find the alias for a given alias
writes the given { @code int } to the current { @code int } .
reads a number of bytes from the input stream .
reads a varint from the input stream .
write a string to the output stream .
writes a string to a character buffer .
reads a string from the input stream .
reads a character from a char array .
read a data file from the .
sets the flag .
get the for this reportquery
get the for the given index .
get the of the specified glyph .
add a member .
hide the member of the member .
gets a list of names members in the specified members .
find the member of a member .
reads a byte from the given byte array .
restore the state of the table .
save a list of to a table .
{
sets the row of the row in the row .
get the index of the index of the column
checks whether the popup is visible .
sets the member members .
returns the array of the members of a given array .
returns the element at the given position .
get the double array of the .
returns the float value of this quaternion .
gets the float representation of this <code > / code > .
returns the field of this member s current position .
gets the byte [] representation of the given array .
{
returns the array of all the members of the given array .
get the short members of this item .
gets the short array representation of this <code > / code > .
returns the member of this tensor
get the long array of the given .
get the character members of a character .
returns the array of all direct - character members of this stream .
get the string representation of the element .
returns the element that is the same as the given {
write a file to the file .
{

adds a value to the list of to be used to create a new list of .
creates a new dataset from a dataset .
transfers data from {
this method is used to set the to be used for the .
get the metadata for the given metadata .
adds a record to the record .
adds the given parameters to the list of arguments for the given element .
this method is used to create a new variable .
show the record to the given record .
show the value of the specified element .

/ * ( non - javadoc )
dump the time dump .
returns the name of the current time .
register a class name .
register a new .
create a new .
open a new .
creates a new instance for the given .
deserialize a byte from a byte array .
externalizes a dataset to a dataset .
returns true if the given is a valid .
get the first time of this article at the specified position in this map .
remove all the that intersect the given range
sets the of the .
deserialize a byte [] into a byte array .
externalizes a dataset to a dataset .
checks the current file to be read from the file .
checks if a byte array is a valid
$antlr start

sets the current context for this context .
parse a document from the document .
process the attribute of the given node .
returns true if the given string is a valid .
returns the date - time string representation of the given date string .


parses a string representation of a date string .


converts the given wgs84 point to wgs84 point .
/ * ( non - javadoc )
adds a list of time to a list of .
collect all occurrences of a string into a list of strings .
open a new file to the given stream .
reads a data from the input stream .
reads data from the given data stream
reads the given line and returns the byte array .
sets the current state of the
initialize the distance between two values .
parses a string into a .
/ *
create a new string with the given ranges .
checks if the given is a valid .
checks if the given path contains the given .

checks if the current row is a .
transform a into a
close the session .
execute the request .
execute the resumable upload .
get the for the given
get the for the given
get the for this
get the for the given configuration
get the for the given configuration
checks whether the header is supported by this .
identify the for the given .
this method is called by the method .


create a for the given
create a for the given column
returns the gold confusion matrix for the given type .
set the stream to be used for the input stream .
reads the next block of fsa and and returns the number of bytes .
start the crawl .

returns a uri for a uri .
returns a uri that contains the uri of the given uri .
returns the string representation of the string .
returns the suffix of the suffix from the given suffix .
convert a path to a string
returns the string representation of the given path .
returns true if the given path is a base - letter .
convert a path to a string
{
/ *
copy the to the
returns the list of all the files in the file system .
sets the index of the .
returns the index of the index of the given directory .
returns the directory for the given directory
close the stream .
print a character to the specified output stream .
get the number of bytes in the given {
create a new .
create a new .
add a dimension to the specified dimension
add a new dimension to the specified dimension
remove a given name from the given name .
adds a global attribute for the attribute .
adds a global global attribute of a global global attribute .
adds a global attribute to the global global global global global global global global global global global global global global global global global global global global global global global global global global global global global global global global global global global global global global global global global global tag .
delete the attribute name .
unbind the renaming of the current node .
add a variable number to the variable variable .
add a variable to the vertex
adds a new variable - type to the buffer .
add a variable to the variable .
this method renames the given variable name to the given variable name .
add a variable name to the given variable name .
adds a variable name to the variable name .
adds a variable name to the variable name .


updates the given attribute in this attribute .
creates the new mode .
rewrite the file to the file .
write a string to the output stream
write a string to the output stream .
write a new data string to the output stream
write a string to a string
/ * ( non - javadoc )
add a variable to the variable variable .
get a from a file
initialize the .
this method is used to create a journal entry in the zone .
prints the data to the given output stream .
main method .
generate the for the given
write the to the list of all tiles in this map .
returns the naaccr title string for the given .
returns the naaccr representation of the given document .
create document from a document .
creates a document from the given document .
main entry point for the dataset .



write a message to the output stream
writes the chunk of the chunk to the chunk
close the input stream .
{
/ * ( non - javadoc )
{
converts wgs84 point to wgs84 datum .
converts wgs84 point to a wgs84 point .
main method to run the specified baseline .
adds a new station to the list of errors .
schedule a job with the given configuration .
returns true if this element contains a mapping .
composes this range with a range of { @code ranges } .
returns the range of the specified range .
returns the value of the specified number of bytes in this range .
returns the index of the first occurrence of the specified range .
find the intersection of two bloom filter .
checks whether the range intersects with the given range .
sets the range .
sets the range of the specified range of the given range .
returns the first interval from start end of the start of the first interval .
returns a new {
<p > . < / p >
reads the data type from the data set .
reads the data from the input buffer and returns the number of bytes in the buffer .
writes data to the output stream .
get the for the given feature description .
reads a data - based data from the input stream .
externalizes a dataset to a dataset .
forces the datastream to be used for writing
sets the subset of the to the given .
create a new object

returns the list of all the of the given list of dataobjects .
/ * ( non - javadoc )
load a string from a file
/ * ( non - javadoc )
removes all the files from the given directory .
set the values of the slider .
sets the parameters for the parameters .
renders a file .
this method writes a single frame to a file .
this method calculates the of a given ndarray
get the wgs84 wig distance for a given latitude
returns the data - element for the given
converts a wgs84 point to wgs84 datum from wgs84 point
converts wgs84 point to a wgs84 point .
converts a list of coordinates to a normalized position

perform a cross - point operation .
make a double array of the given int [] array .
gets the xml file for a dataset .
get a dataset of the given dataset
checks whether the given is a valid .
checks whether the given is a valid .
creates a new for the specified point .
calculates the azimuth in the circle .
converts wgs84 point to a wgs84 point .
converts wgs84 into euler coordinate .

/ * ( non - javadoc )
returns the { @link } for the given { @link } .
/ * ( non - javadoc )
opens the given index entry .
creates a new .
make sure that the given list is a valid .
reads a header from the file .
{
this method is used to transfers the to the .


transfers the given target node to the target node .
canonicalize the metadata of all the members of the .
sets the of the
adds a new row to the dataset
remove the given from the map
replaces the dataset with the given dataset .
add a service to the list of services .
remove all services registered with the service .
add a list of to the service .
removes the specified metadata from the metadata file .
get the property for the given key .
write a single line of the header .
resolves the given path and returns it .
validate the given string .
returns true if the dataset contains the given dataset .
<p > the list of datasets . < / p >
returns all the descriptors of this class .
initialize the .

creates a path from a request .
get the capabilities of the given {
get the morphological geometry .
checks the validity of the request .


build the response
get the url of the given url .
returns a string representation of the specified string .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
handle http response .
get the path of a path .
generate the for the given .
{
set the position of a gantt designer .






get the servlet path of the servlet .

gets the request url .
create a uri from a uri .

get the request url .
returns the parameter value for the given parameter .
show the ajax request message .
show the given .
show the given component .
get the type of the
saves the current page to the file .
creates a new dialog for the given parent and parent folder .
/ * ------------------------------------------------------------
creates a new array with the given index .
<p > . < / p >
returns the time for the given time type .
returns the position of the current time .
returns the position of the given date .
returns the time for the time .
/ * ( non - javadoc )
sets the of the .
returns a new with the given size in the given tuple .
returns the number of bits that the given is the number of bits that is the same as the number of bits that has been set .
initializes the .
appends a line to the end of the line .

log a message with the given string .
main method
find the first field of a given name .
{
get the document s dom document .
create a new { @link index } from the given index and casts it to the given { @link index } .
<p > . < / p >
get the double value at the specified index .
get the record for a given record .
get the index of a slider .
create a new attribute attribute .
adds the item to the item .
returns a list of all items in the list of items .
get the for the given index .
handle exception handler
returns a new slice of this slice .
returns the total number of elements in the stream .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
get the from the input stream
replies the type of the .
write a list of files to a file .
convert a sparse struct to a .
scan the configuration for the given configuration .
scan the filter of the filter .
scan the given { @link } for the given { @link } .
reads a single attribute of the given element .
scan for the given input filter .

sets the value of the given type .
creates a new { @link } instance .
creates a new object
returns the for the given .
reads a long from the stream .
reads a long from the file .
copy the contents of the given inputstream to the given stream .
reads the contents of a given inputstream .
reads the contents of the given inputstream into an array of bytes .
writes the contents of a byte array to a stream .
copy the given file to the given file .
copy the given file to the given file .
writes the file to the file .
copy the file to the given file .
copy the contents of the given file to the given output file .
copy the contents of the given byte array to the given { @code } .
copies the contents of the given directory to the given directory .
reads a byte array from a file .
reads a string from a file .
write the contents of a file to the file .
writes the byte to the file in the given file .
write a file to the output file
writes the contents of a file to the file

parses the response body and writes the response to the response .
sets the response to the response .





sets the response to the postmethod .

/ * ( non - javadoc )

prints the current server and prints the list of the to the server .
/ * ------------------------------------------------------------

prints the status of the voting status of the request to the server .
request the request to the server .
@throws pageexception
show the screen .
prints the knx medium - line .
get the date / time from the given date .
initializes the resource with the given id and stores the result in the given entity .

reads a data from a data stream
opens a new .

create a new .
returns the character of the character ( unicode character ) of the given character .

removes all the bytes from the uid

get the string representation of the string .

returns the first matched substring of the given string .
pad a string to a string .
pad a string to a string .
removes a string from the string
removes a string from a string .
removes a string from a string .
removes all whitespace characters from the input string .
collapses a string with a whitespace character .
replaces all occurrences of a string with the given string .
replaces all occurrences of the given string with the given replacement .
replaces all occurrences of the given pattern with the given pattern .

substitutes a string into a string .
escapes a string with a backslash .
unescapes the characters in the string .
substitutes the given string against the given string .
remove a string from the list of strings .

replace the string with the given string .
substitutes substitutes of input string by the given substring .
trim the given string with the given length .
make a new instance of the collection .
process an event to audit event .
show the error .
checks the state of this state .
update the state of this updatetransaction .
returns the name of the node .
the given catalog .
populate the .
gets the grid row .
get the location of the dataset .
get the file path .
compress a file and copies the contents of the file into a new .
/ * private void ( ) { = new () ; ; }


this method is called when the kernel is not a file .
handles the .
this method is called from the {
@throws
@throws
renames the given {
get the list of all the datasets
release the release time .
this method is used to read the from the remote repository .
/ * ( non - javadoc )
{
returns the number of digits in the given string .
renders the current output .
/ * ------------------------------------------------------------
builds the global event for the given .
builds a for the given
copy the contents of the given { @link } into a { @link } .
convert an array of { @link } to a { @link }
get a pseudo - dimensional array of from a structure .
returns the {
get an array of the pseudo - dimensional streamable multidimensional array .
convert a to a .
/ * ( non - javadoc )
converts a section to a section
returns a list of all the ontologies in the current hull .
/ * ( non - javadoc )
gets the table model for the given table .
creates a new feature table for the given feature table .
returns the for the given type .
analyze the table
make sure that the given is not a valid .

/ * private void ( ) {
writes a file to the file .
checks whether the file is valid .
opens a continuation with the specified location .
opens the given index on the given {
synchronise the { @link } and { @link } .
returns a new {
<p > . < / p >
<p > . < / p >
get the double value at the specified index .

handle the exception handler .
sets the response to the server .



called when the command line is not supported .
request a request to the server .
prints the help .
sets the current { @link } to the specified { @link } .
get the for a given type
swaps the eight bytes in the given byte array starting at the specified offset .
swaps the eight byte of a byte vector from the given byte array starting at the given offset .
swaps the two bytes representable by the given byte array starting at the given offset .
finds the for a particular
adds a parameter to the list of that are supported by the given
find the variable name in the given variable name .
find a variable in the given variable .
find the group name of the group .
find the parent of the given name in the group .
find the name of the name of the given name .
<p > the attribute set of attributes . < / p >
find the parent of the given name .
returns the parent parent of this group .
returns true if the parent of this group is the same as the parent .
get the attribute name .
sets the parent group to be used for the group .
add a new dimension to the list of dimensions .
add a new dimension to the
add a group to the group .
add a new { @link } .
adds a variable to this node .
removes the specified dimension
removes the given group from the cluster .
removes the value from this { @link dataset } .
remove the dimension of the specified component .
removes the variable from the given variable name .
sets the group to be used to create the group .
create a new group
/ * ( non - javadoc )
returns the attribute name .
checks whether the given is a valid name .
/ *

populate the table .
prints the .
this method is used to delete the variable from the local variable .
gets the for the given variable .
get a variable .
search for a named child node with the given name and name .
renders a { @link } .
renders the given document as a dom document .
checks whether the given is equal to the given .
print the given <code > / code > to this writer . <p >
resolve the entityreference .
resolve aliases for a given entityreference .
resolve the alias of the given alias .
returns the variable definitions that match the given filter .
normalizes the given string .
creates a new field .
print a character .
sets the of the
validates the attribute s name .


checks to see if the given is a valid oid .


/ * ( non - javadoc )
make a new file from the file .
converts the given id to a object .
this method writes the given { @link } to the { @link } .
renders a circle in a given { @link } .
replace the values in the given { @code } with the given { @code } and { @code } .
replace the values of the given { @link } with the given { @link } and { @link } .
get the longitude of the bbox from a latitude .
/ * this method is called by the to determine whether the grid is computed .
/ * search for a
write the response to the response
returns a new {
creates a new array at the given index and returns the index .
<p > insert a new array into a new array . < / p >
get the double value at the specified index .
/ * ( non - javadoc )
returns the { @link } for the given { @link } .
get the file s location for the given file .
create a new index .
reads the type of the given type from the given file .
returns the { @link } for the given { @link } .
get the cached { @link } for the given { @link } .
checks whether the given { @code } is a valid type of the given { @code } .
update the for the given .
update the for the given .

update the for the given directory .

create a new .
creates a new { @link } from the given { @code file } .
creates a new from the file and creates a new .
returns the { @link } for the given { @link } .
create a new { @link } from the given { @link file } .
read a file from the repository .
returns true if the url matches the url pattern
adds a new value to the server .
finds the first key in the given resourcebundle .
sets the to be used for the

insert the given key into the list of values .
prints a rule to the print writer .
get a list of datasets from the datasets .
find a dataset by name .
sets the project .
get the display s display headings for a given element .
creates a new outline element in the list of features and their values .
compares the given string to the given string .
starts the task .
/ * package
checks if the given { @link } is a valid entry .
create a new { @link } for the given { @link } .
/ * this method is similar to () and () to build the object .
write a list of files to a file
creates a from a dataset .
generates a from a group
/ * package
for each partition the that the is a proto partition .

compares two <code > / code > objects .
find the closest point for the given list of .
normalizes all the elements of the list .
convert a collection of encoded to a .
creates a { @link } for the given { @link dataset } .
generates a for the given group .
/ * package
sets the specified value in the specified array .
returns the for this element .
get the array of the specified
sets the member members .
extract a new array of from the array .
copy the elements from the given array to the new <code > / code > .
/ * ( non - javadoc )
converts the given scalar to a float
converts the given number of data to a scalar .
converts the given into a .
/ * ( non - javadoc )
get the byte representation of the given record .
get the short representation of the given short .
get the character data of a given type .
get the string representation of the given type .
returns the for the given .
get the array of shapes for the given type .
returns the array of sequence elements in the sequence .
get the array of data
sets the of this builder .
converts the degrees of the clock to the input rgb by the given .
perform a cross - traversal on the fx view .
convert an object to a java object .
returns the number of bytes that is defined in the given { @link } .
convert a long to a long .
returns the long value of the given long value .
extracts the path from the path .
get the filename name for a file .
prints the .
evaluate the operator .
converts a {

sets the of the .
matches the given segment and the current position of the segment .
checks whether the given is a valid .
find the index of a variable for a given variable name .
expands the given iterator .
/ * ( non - javadoc )
returns true if the given { @link } is a valid { @link } .
count the number of fields in the given tuple .
checks whether the given is a valid


sets the group of the group .
compile the given string .
print a single character set to the print writer .
/ * ( non - javadoc )
selects a subset of the selections in the given group .
{
store the data to the target file .
/ * ************************************************************************* internal methods
initialize the file .
get a new instance .
initialize the file .
initializes the .
get the number of bytes in the file .
sets the .
read the header info .
reads the keys from the map .
/ * ------------------------------------------------------------
reads the text from the input stream .
main method .
returns the key associated with the given name .
finds the header of the file in the file .
get the header of the file
prints the contents of this line to the current list of words .
returns the number of part part of the specified name .
gets the part part of this part .

returns the number of bytes that have been read from the given word .
marks the next word in the current word .
gets a word from the current word .
sets the coil words in the words in the words list
/ * get the postscript - jump for the given .
get the for a given
/ * get the for the given

returns the value of the specified <code > string< / code > from the specified <code > string< / code > .
writes all the data from the given { @link channel } to the given { @link filechannel } .
write a file to a file
write a channel to the filechannel .
parse the xml declaration .
parses the given input stream and returns the parser .
parse the xml element and the given element .
parse the given element
build template for given template
parse the given element .
prints out the xml declaration for the given element .
create a new instance of the given type
factory method
parse the attributes of an element .
parse the attribute aliases .

creates a feature which contains the feature information for the feature and feature information .
decodes the given list of data into a list of the keys .
/ *
/ * package
flattens the list of .
data
/ * ( non - javadoc )
get the file name of this file .
/ * ------------------------------------------------------------
checks whether the file is valid .
get the uri of the feature file .
reads a data from a given input data
reads the given data from the given data type
reads a data from a given list of .
sets the .
build the feature s from the
build the from the
calculates the absolute absolute value of a given absolute vector .
calculates absolute value of absolute double .
calculates the difference between two angles .
compares two float values .
compares two byte arrays .
creates a new instance of { @link } .
read a from the given stream .
read a from the xml file .
creates a { @link } for the given { @link } .
/ *

{
parses the given { @link measureunit } into a { @link } .
checks whether the given is a .
save the class hierarchy to the class .
druidg . g : : 1 : : ( | | | | | | | | | | | | | | | | | | | | | | | | | |
returns true if the given { @link } is a child of the { @link gvrsceneobject } .
returns a new .
converts a wgs84 point to a wgs84 point .
converts wgs84 point to a wgs84 point

<p > converts a vector of point2d to a relative coordinates of the center of the line . < / p >
returns true if polygon_a is a valid .
converts a wgs84 point to a wgs84 point .
returns the of a circle .
display the page content .
handles a response .
sets the of the specified { @code } .
handles the .

get the value of the field in this list .
get the value of the given <code > string< / code > value .
returns the number of numeric value at the specified index .

sets the value of a string .
set the values of the current values .
set the value of the array to be used as a string array .
scan the input data and execute the scan .
generate a object for the given .
get the id of the .
gets the path of the machine in the repository
get the docbook string representation of the given {
writes a comment to the given output stream .
/ * ( non - javadoc )
$antlr start
<p > . < / p >
sets the data for the data catalog .

plots the from the given dataset and the given { @link } .
sets the dataset of the dataset .
prepares the splash for a given jvm level .
create the frame and the frame .
creates a new .
/ * package
create a new .
gets the of the given axis .
find the axis type of the given type .

get the
checks whether the tile is a
checks whether the current gesture is a .
checks if the given collection is a subset of the given subset of columns
returns true if the list contains the given list of words
returns true if the axis is a axis .
checks whether the given list of domain representatives is a list of domain representatives .
returns true if all the values of the axis in the list are the same as the current list of words .
returns true if the axis is a template .
returns the {
create a new node .
send the data to the client .
find the for the given key .
extracts a message from a binary file .
returns the tooltip text for the given mouse event .
add a listener to the list of all the listeners .
remove a listener for a list of items .
gets the selected row .
gets the list of view items .
get the selected row of the grid row .
removes the spinner row headings from the table row .
sets the view to be used to fill the view .
sets the selection list .
saves the given { @link } to the output .
/ * this method is called by the method .
restore the view to the view
convert primitives to primitives
parse a float from a float array .
create a measureunit instance .
/ * ( non - javadoc )
returns true if the given { @link java . util . } is true .
checks whether the given is a valid variable name .
finds a pseudo - column of the given column in the given table .
adds a list of data to the list of data points .
add a new index to a list of rows .
get a new iterator for the given data source .
creates a new feature object from the feature parameters and stores it in the given .
create a new .
creates the for the given variable .
pushes a new to the list of the notes that the jobtracker is a new .
find the last known notes of a given code point .
find the field of a given field
find the first child of the given {
/ * ( non - javadoc )
convert a byte array to a string .
create a new { @link } for a given name .
create a new { @link } instance representing the given { @link } .
/ * package
checks whether the given string is compatible with the given string .
checks whether the given string is a valid

returns true if the given unit is a date or a date .
returns true if the given string is a valid time unit .
gets the factor factor for a given factor .
converts a srec value to a { @link } .
checks whether the given string is a compatible unit .
returns true if the unit is a unit of unit units .
get the kurtosis .
creates a new clause for a given operator operator
creates a new { @link } for the given { @link } .
/ * ( non - javadoc )
write a record to the current state of the current record .
rewrite the given file to the file .
creates a { @link java . awt . image } from the given { @link bitstore } .
translates a string to a path .
crawl the specified rule .
crawl the specified task .
starts a dataset .
crawl the data from a .
get the cached file for the given file .
get the file s location in the file .
creates a new { @link } instance .
gets the passwordauthentication for the given authentication message .
returns the credentials for the given credentials .
sets whether the debug is enabled .
returns all the files in the list of all files in the list .
closes the cache .
seek to the current position of the file .
get the length of the file .
flush the file .
reads the next byte from the input file .
reads from the bytes in the file starting at the given position and writes it to the specified byte buffer .
reads a file from the file .
reads a byte array from a byte array .
reads a byte from the stream .
writes the given byte to the given byte buffer .
write the bytes to the file starting at the given offset .
read a short from the array .
reads a long from the stream .
reads a single int from the array .
read a long from the array .
reads a float vector from the input buffer .
read a double from a double array .
reads a string from the stream .
reads a string from the input stream .
write a number of characters to the output stream
write a short .
writes a character to the character set .
writes a single integer to the array .
write a long to a long .
writes a float to the array .
write a double - double array
writes a string to a string .
writes a character to the specified character array .
writes a string to a string .
writes a string to the stream .
/ *
append a query string to the query string
{
create a new
find the next index in the index file .
checks if the given { @link } is a leaf .

scan all files and folders and files and their children of the directory .
reads a list of { @link corelabel } s from the input file .
opens a new location on the specified location .
opens a dataset via the given dataset .
returns the grid headings for the given dataset .
get the information about the specified .
{ @inheritdoc }
shutdown the given {
acquires a { @link } from a file .
acquires a new from a storage file .
dequeues a cache entry in the cache .
remove the cache entry .
{
releases the file from the filesystem .
get the file info for this file .
{
show the correct output format .
removes all files from the cache .
converts a eight bit of a varint into a bit integer .
acquires a resource file from a dataset .
acquires a new from a storage file .
dequeues a cache entry from the cache .
updates the cache key for the given .
add a new cache key to the cache .
releases the file to be used for the file .
get the file info for this file or directory .
clear the cache .
{
this method is called when the is called .
parses the input string into a boolean .
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >

converts a { @link } to a { @link } .
returns true if the is a
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
get the from the given .
returns the position of the earth s position .
calculates the tiles in the given list of rectangles .
{
this method returns a list of all the objects for the given .
returns the next row of the cell .
get the size of the playn rectangle .

returns the index of the path in the given collection .
/ *
get the remote .
{
{
returns the next point of the current point in the current point .
/ * ( non - javadoc )
convert a field to a proto field .
obtains an instance of { @code integer } with the given value and the given value .
obtains the { @code } instance representing the given { @code } and the given { @code } .
subtracts the specified date and time to the given date .
get the major minor - time representation of this date .
/ * ( non - javadoc )
gets the start offset of the given time zone offset .
checks whether the given file is a valid file .
opens a continuation .
opens the given index entry .

initialize the fields of the .
put the into the
find the first matching path found in the given path .
/ * ( non - javadoc )
reads the root directory from the root directory .
extract all lineage files from the dataset .
/ * [ deutsch ] <p >
reindex a list of points .
creates a new { @link } for the given file .
creates a new version file with the given version .
add a dimension
add a linear dimension
add a given to the given dimension
renames the given group by name .
adds a group to the group .
adds a new attribute to the list of the attribute members of this group .
{
delete an attribute group
renames the given {
add a group variable to the group .
adds a variable number to the group variable .
adds a variable to the list of the type of the given tree .
creates a new { @link } from the given { @code } .
adds a list of { @link } s to a set of { @link } s .
adds a new {
renames the given variable name .
adds a new attribute to the specified variable .
creates a new { @link } .
sets the current value of the .
rewrites the file to the file system .
adds a new version of a record .
write a string to the output stream .
writes a single variable - length - d into the { @code output } representation .
writes a single section of the given { @code value } to the { @code output } { @code value } .
write a string to the output stream
write a string to a string .
close the underlying stream .
aborts the stream .
write a property .
extract the data from the dataset .
extract the feature from the wgs84 area
/ * [ deutsch ] <p > kombiniert diesen
find the for the given

creates a new { @link } instance .
{
/ *
/ *
returns the value of the given { @code double } .
returns the value of the specified { @code double } from the given { @code double } .
returns the double representation of the given double .
converts a {
converts a section to a data type
convert a to a object

/ * private void ( int int int int int int int int int ) { int = . () ; int = . () ; int = ; int = ; int = ; > =

convert a string array to a java object .
closes all the databases .
open the database for the database .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a value to a {
reads the file from the file .
find out if the given is within tolerance of the tolerance .
find out whether the given is a tolerance of the tolerance .
reads the contents of the given inputstream into a { @link } .
add a string to the list .
increases the capacity of the array .
returns the element at the specified index .
{
converts a wgs84 point to a wgs84 point .
converts wgs84 to wgs84
sets the scan location for the scan .
translates the location of the to a path .
retrieves a dataset of the specified file .


get the graphical model for the graphical model
create a byte [] from a given byte array .
show the simpleformatter with the detail formatter .
/ * [ deutsch ] <p > interpretiert den angegebenen iso utc - julian utc . < / p >
apply the given scale factor to the scale factor .
exporte une parser .
resolves a { @link } from a uri .
parse a local file name .
/ *
clean line line
----------------------------------------------------------------------------------------------------------------------
write the file to the output stream
writes the list of files to the file .
if the current is a valid .
main method .
sends a new transformation query to the given { @link } .
returns a list of known variables for the given model .
returns the date - time for the given date or null if the date is not a date .
{
read the index of the file .
parses the given inputstream to the given stream .
print the print writer .
show the page
get a type from the given name .
creates a new { @link } instance .
creates a dataset from a dataset .
expands the .
expand the .
create a .
classify the
create a for the given dataset
load the specified image .
load the given image from the given url .
stops the url .
change the status of the status code .
load a new record from the given { @link } .
create a new { @link } .
get the dimension size of the image .
get the width height for this image .
writes the given image file to the given image file .
sets the status of the status code for the given http status code .
get a new instance .
initialize the .
returns the list of parts of the list .
print the specified number of words to the specified number of words .
creates a header string from the browser .
/ * convert to a list of strings .
checks if a valid is valid for a given
main method .
sets the directory to be used by the .
sets the root directory .
get the file from the file .
get the file to be used to load a file from the file .



make a file .
gets the icon of the text .
gets the image .
creates a new { @link } for the given button .
creates a new { @link icon } from the given icon and font .
converts the to a .
add a menu to the menu .
creates a new { @link gvrmesh . } from a .
adds a new container to the container .
sets the action for the given action .
sets the action for the given action .
returns the list of from the .
find the for a given
checks whether the given <code > / code > is a valid version of a java . util . .
create a for the given
sets the for this .
returns true if this data is a numeric type
get the information for the given element .
get the date time of a date
sort the given { @code } .
sets the list of rows to be used in the list .
removes all elements from the row .
returns the next row in the table
sets the row of the specified row in the row .
increment the current row of this table .
get the index of a model
checks whether the popup is visible .
find the first day of week and maximum occurrence of the specified period .
{
sets the current position of the current selected row .
push the token to the next token .
push the to the .
removes all the elements from the given set of names .
returns the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the elements
sort arr2 from the array .
swaps elements of two arrays [ .. ] [ .. ] [ ] [ .. ] [ ] [ ] [ .. ] [ ] [ ] [ .. ] [ ] [ ] [ .. ] [ ] [ ] [ .. ] [ ] [ ] [ ] [ .. ] [ ] [ ] [ ] [ .. ] [
returns the string representation of a string representation of a string .
get the file name for a file .
converts a wgs84 point to a wgs84 datum matrix .
converts wgs84 point to a wgs84 point .
/ * ( non - javadoc )
create a from a file .
create a new from the given inputstream .
creates a new instance of the given resource .
/ * ( non - javadoc )
saves the current file to the file system .
saves the current version of the file .
writes a variable - value to the stream .
writes a single block to the output stream .
writes the current data to the given output stream .
writes a sequence of data to the current sequence .
write the data to the .
write a record to the record .
/ * ( non - javadoc )
sets the term to the given set of values .
checks whether the file is a valid file .
returns the id of the current page .
print a comment to the output file .
prints the space to the output space .
prints a number of words in a line .
append a given size to the given extent .

get the dimension of the dimension

compare two properties .
sets the current state of this project .
serialize a single dataframe to a stream .
set the gain of the given dimension .
reads a row of the specified field in a row .
get the data for the data in the data type
read a version from a file .
reads a variable declaration from a variable declaration .
get the average data from the data file .
returns the average residual in the
get the float value of the
/ *
get the float value of the
get the base of the
get the bits from the .
reads the color of the raster file .
reads the quantizer from the given wig file .
checks the current position of the data point to the .
{
reads the current object from the set of data to the given list of the given objects .
create a new location for the given location .
returns the size of the given bam file .
make a new location on the screen .
this method is called by the to process the training data from the list of training rows .
sets the .
sets the given preference s enterprise .
pick the current circle from the given { @link } .
picks the current circle .
returns the selected {
merge the given element into the parent .
serialize this class into a new storage .
converts a { @link } to a { @link } .
sets the learning rate for the given .
returns the name of the given type .
send a message to the client .
main method .
moves the current position to the current position of the specified .
generate a new frame .
saves the current state of the current transaction .
get the of a given wgs84 point in the bounding box
get the from the given name
get the { @link } instance from the given { @link } .

read a data file from the data file .
count the number of elements in this list .
returns the type of the given variable .
/ * print a string to the printwriter .
deserialize a data stream into a byte array .
forces the given {

externalizes a dataset to a dataset .
replies the sarl - specific territory - specific territory - specific territory .
get the for the given type .
compare two strings .
calculates the absolute value of the current distribution of the given power of the given distribution .
computes the dot product of this { @code vector } .
computes the sum of magnitudes of the distribution of this distribution .
normalizes the value of the .
creates a new catalog for the given databus type .
get the from the slave .
prints the contents of a string .


reads the attributes from the given attribute .
reads a from the properties file .
read a dataset from the dataset .
reads the group and adds them to the group .

reads the metadata for the given metadata .
reads the source document from the source document .
reads the start of the given range of the given element .
reads the variable definitions from the input variable .
wandelt den angegebenen text . < / p >
/ *
writes the bytes to the buffer .
returns the parameter for a given id .
get a parameter from a given id .
read a map from a table .
read the from the file .
read the from the file .
read the from the given url
add a new value to the list .
adds a double to the list .
returns the prefix of the prefix of the given prefix .
checks whether the given is a source .

returns the next character in the stream .
reads a character from the input stream .
/ * package

/ * ------------------------------------------------------------
/ * package
parse the next token from the .
/ * ( non - javadoc )
parse the next token from the parser .
/ * ( non - javadoc )
get a parameter from a given name .
returns a new { @link } that contains the given { @link } .
get the crc of the data
returns true if the device has been changed .
gets the exit code point .
returns true if the input is a 3x4 .
/ * ( non - javadoc )
returns the {
checks whether the is a valid .
returns the time string representation of the given time range .
returns the sunrise time for the given time interval .
appends a message to the console .
get the parameters for the given key .
replies the members of the group members .
sets the next step of the next step .
sets the current state of the given { @link } .
draw a single polygon
finds the property name of a property .
returns true if the base type is a base uri .
sets the row to be used for the current row .
selects a time range .

sets the service to use when this class loader .
register a class to the target class .
checks whether the given class is the same as the specified class .
checks whether the given service providers can be used to register the providers on the given service .
sets the flag to be used for debug purposes .
open a new .
open a new .
checks whether the given location is a location .
opens a new .
returns the uri of the given uri .
returns a new { @link } which is used to open a temporary file .

reads the file from the file .

closes the underlying container .
find the group name for a group
find the first occurrence of the given string .
find the last unique group name from the given string .
find the attribute with the given name .
returns the name of the attribute in the given name .
find the next attribute in the ldap directory .
/ * ( non - javadoc )

print the output of the specified output stream .
print the given { @link } to a writer .
sets the given output .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a new attribute to the list of attributes .
adds a new attribute to the parent .
adds a group to the group .
adds a group to the group .
remove a group from the given group
adds a group to the group .
adds a variable to the solver .
adds a new variable to the solver
removes a variable with the given variable name .
send a message to the .
this method is called from the to determine the next time .
sets the { @code } to the current { @code } .
{
{
reads a data range from the given input object .
reads a section from the given string .
reads a section from the given channel .
<p > a list of <code > / code > objects . < / p >
reads a section from the given string and its contents .
main method .
<p > . < / p >
returns the name of the given node .
convert a given parent to a collapsible name .
returns true if the filter is filtered by the given filters
/ * this method checks whether the filter is excluded from the .
returns true if the filter is a filter
get the .
sets the of the
remove the given from the chain .
returns the type of the string representation of the parameterisation of the type .
get the int value of a string .
{
get the value of the specified attribute in this list .
append a value to the value of the <code > value< / code > .
dispatches a string to a valid type .

checks if a string is a valid utf - 8 string .
checks if a string is a valid short .
checks whether a string is a valid integer value .
returns true if the string is a valid number .
checks whether a string is a float or a static float .
checks whether a string is a valid number .
/ * ( non - javadoc )
get the data type attribute of the attribute .
returns the rank of the given type .
gets the data type of the given data optype
returns the type of the specified type .
{
checks if the line number is valid .
checks whether the path is a valid path .
checks if the path is valid for a path .
checks whether the given string is a valid identifier .
returns true if the given string is a valid absolute or a valid string .
checks if the string contains a valid string .
checks if the given string contains a valid string .
checks whether the given string is a valid xml string .
<p > checks whether the given string is a valid valid string . < / p >

checks whether a file is a directory

returns the code of the given character .
add a parameter to the list of headers .
add a parameter to the request .
add a parameter to the tsdb .
get the value of the specified parameter in the specified key .
compare the record s fields to the local record .
process the input stream to the next packet .
process a single line checker .
encode a data stream into a stream .
convert a series of into a series of .
sets the request to be used for the request .
@throws pageexception
complete the state of the given state .

removes a trailing quote quote characters from the string .
mark a stack and all the of the stack .

write the location of the graphviz dot
transform a string to a string .
checks whether the given {
returns the configuration value associated with the given key or null if the key is not found .
get the given {
{
returns the string representation of the given enum as a string .
/ * ( non - javadoc )
creates a new from the given input stream .
/ * ( non - javadoc )
{
validates the given string .
converts wgs84 point to wgs84 point
converts a wgs84 point into a wgs84 point in radians .

/ * ( non - javadoc )
returns the elevation of the sound
gets the current time of this time to the given <code > / code > .
gets the of the .
gets the normalized list of the wgs84 point .
gets the .
gets the localities of the .
returns the top - level style for the given .
returns a new {
returns a new { @link } with the given name and name .
adds a variable to the list of variable members .
sets the list of variables to the variable .
removes the variable from the given {
replaces the variable with the given variable name .
{
find the first element in the given string .
returns the members of the members of this structure .

reads the current data structure from the input stream .
reads the given index from the given index into a new one .
reads a number of bytes from the input stream .
returns an iterator over all the motifs in this .
get the name of the current element .
initialize the file .
get the string representation of the category .
returns the class name of the class name .
add a parameter to the list .



converts wgs84 into wgs84 panel .
converts a position in wgs84 datum to a .
returns the geographic distance between two points .
/ * [ deutsch ] <p > liefert die &uuml ; ; ; ; ; ; ; ; ;
get the from the wgs84 point
returns the kurtosis of the given wgs84 wgs84 wgs84 point .
multiply a double value .
calculates the absolute quadratic of a given double value .
calculates the distance between two points .
returns the unbiased exponent of a double value .
returns the effective code for the given code point .
returns the version of the version of a version of a string .
get the preferred character for a given variant .

get the for the given
delete the file .
sets the dataset s current state .
returns the base percentage of the poi s location .
/ * package
set the color color color to be used as the color .
renders the specified tune .
draws the outline of the specified area .
returns true if the child of this node with the given child is a child of this node .
returns the name of the given name .
reads a file from the given file .
show the specified message .
installs all the columns in the given table into the given view .
installs a view of the given { @link column } .
returns the key for the given key .
returns the {
get a new child path for a given path .
returns the directory of the file .
<p > sets the <a > / a > object that you want to configure the api key . the response is the string of the key and the response . < / p > <p > this method is used to set the security token for this api key . < / p > <p > this method is used to
construct a stream from a stream
creates a new label with the specified value .

creates a label for the given html .
convert a string to a string .
returns the {
returns the for the given credential .
connect to the remote server .
if the jvm is running a method is called .
creates a socket factory for the given host name .
returns the ip addresses of the given ip address .
returns the ssl certificate for the specified certificate .
connect to a server .
purges the given log entries and the given { @link } .
compile all classes in the class file .
compile a class using the given class name .
adds the given source to the given source .
reads the contents of the file frame .
reads a block of block blocks .
returns a new frame or null if there is no frame .

reads the block from the block and reads it from the block .
initialize the javafx { @link } .
/ * ( non - javadoc )
initialize the orb .
this method injects the fields of the specified resource .
sets the time zone to be used for the given timesection .
gets the message for the given message
merges the global bundle references to the current resource bundle .
merges the given list of bundles to the given list of bundles .
returns the {
initializes the list of events to be processed .
adds the given event to the list of events for the given list of events .
processes the given view and removes all the items from the list of events .
processes the list of events to be processed .
processes the given update event listeners .
get the person person id .
merges the given list of { @link } s into the { @link } .
{
process the queue of queue threads .
{
{
add a validator to the validator .
remove a message from the list of messages .
remove a message from the message .
sets the for the given person id .
creates a view view which is the view of the specified type .
initialize the view
inject fields into the class hierarchy .
binding for { @link ( string ) } .
get the view s view from the given view .
get the view type for a view .
inject view holders into view
create a view of the given type and sets the model .
create a view model for a model
binds the given view to the view binds any registered classes .
returns the methods for the given class .
adds a lifecycle sensor to the list .
checks if the current value is a valid .
sets the to the
load the from the resource .
private helper methods
--- publish ---
publish a notification to the notification .
{
resets the fields .
sets the field values . <p >
commits the current state of the current <code > / code > .
reload the current state of the field .
copies all the fields to the specified <code > / code > .
returns the setter method .
returns the default setter for the given property .
returns the property value for this converter .
get a property for the given property .
returns the default setter for the given property .
get the property for a given property .
sets the getter setter for the property getter setter .
get the property getter setter method .
gets the property setter for the property getter setter .
gets the property setter for the given property .
gets the setter for the setter .
returns a setter method .
returns the property value for the specified property .
returns a new that sets the given set of the given sets .
/ * ( non - javadoc )
adds a rule to the rule .
adds a rule to the rule .
creates a list of paragraphs from the source list .
converts a model to a view of a model view .
create a new view .
register a change listener to the given {
register a listener for the given observable .
register a listener for the given observable .
clears the map from the given map .
{
{
/ * ( non - javadoc )
creates a new index .
returns all fields in the given { @code clazz } .
returns all fields annotated with the given class .

sets the field to the given field .
revokes a member of a member .
create a view view detector instance .
creates a view of the given fxml path .
create a new view based on the specified layoutmanager .
returns the view hierarchy for the specified fxml file .
returns the row style for the specified style .
{
/ * ( non - javadoc )
{
get the image data from the given byte array
get the image data set .
validates that the image type is valid .
draws a svg rectangle from the image row .
draw a coverage data data
draw a coverage data data
draw a svg image row
create a new image image icon for the image .
sets the image to the given value
sets the image to the given pixel .
create a new bounding box table
set the bitmap to the given image file .
{
{
{
{
{
/ * ( non - javadoc )
execute a query and returns a new cursor that represents the given sql query .
wraps the given sql query and returns it as a result of a query .
{
{
query the query for the given query .
query the query for the query .
handle a cursor of query parameters
returns true if the row is a table
returns the index of the current row in the table .
get the row index of a geometry row .
{ @inheritdoc }
returns a list of all the elements in the iterator .
register a table name .
{
{
{
get the tile row for a given tile .
get the coverage data tile data
get the coverage data tile dao
get a tile data tile for a feature
create a new bounding box table from the tile column
get the coverage data values from the bounding box
{
get the coverage data rows from the tile row
get the coverage data tile matrix matrix
get the tile matrix from the bounding box
get the tile matrix for the tile matrix
get the coverage data tile from the tile matrix .
get the coverage data row coverage data row coverage data row coverage data row coverage data values
sets the icon type .
get the icon of the footer .
{
create a new user row
get the database table .
converts the given {
converts a byte array to a byte array .
creates a new metadata .
delete the given table
updates the metadata for this transaction .
update the last update column for the specified column .
update the column of the table
get the geopackage for the given geopackage
get the for the given table .
get the foreign metadata for this metadata .
get the id of the package
creates a new metadata table for the given metadata .
creates a new extension
gets the row row row row
get the for the given sql query
/ * ( non - javadoc )
{
get the bounding box of the given column
query for query fields
query the bounding box of a given bounding box .
count the bounding box geometry
/ * ( non - javadoc )
builds a string representation of the given data point in the given <code > / code > .
build a string representation of the given double arrays .
query for a query
counts the projection of the projection on the bounding box
query the bounding box of a bounding box .
query the tolerance of the given tolerance .
count the min max max max scale
{
returns the specified data point .
set the bitmap to the given bitmap
set the bitmap to the given bitmap
sets the current configuration to be used for the configuration .
get the number of pages drawn from the given zoom level
adjusts the bounding box of the bounding box
adjusts the tiles covered by the bounding box in the bounding box and the tiles in the bounding box and the tile is not visible .
sets the tile bounding box of the tile grid to the specified zoom level
/ * package
get the bounding box of the bounding box
get a grid vector for the tile grid .
get the tile row for a given tile column
get a tile row from a tile column
get the density of the zoom level for this screen
get the density of the screen
get the approximate zoom level for a given zoom level
get the approximate zoom level for a given zoom level
get a grid row for the tile grid and zoom level
delete a tile row
count the zoom level
returns true if the bounding box contains a bounding box
{
get the pixel value for a given pixel
get the pixel values for the image
validates the image file
{
{
draws a tiles in the image .
draw a coverage data data
draws the tile data
{
creates a new image file with the tiles defined in the image .
set the image to the image pixel
create a new feature tile data

gets the for the given name .
{
{
returns the current row key for the current row .
{
defines the for the given
move the next record to the next segment
{
returns a new object that can be used to convert the object to a list of the data structures .
{
delete a tableindex from the sub - tree
get the rectangle bounding box from the bounding box .
get the rectangle to be used to convert a rectangle to a rectangle .
checks if the rectangle is a rectangle in a rectangle .
checks whether the given rectangle intersects the border .
checks if the given rectangle is a rectangle .
checks whether the given draggable is a valid view .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
delete all files in the list .
{
{
{
{
{
{
{
{
{
{
{
/ * ( non - javadoc )
{
{
{
/ * ( non - javadoc )
{
{
create a new
{
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
{
{
{
{
{
{
{
/ *
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
checks whether the given string is a valid .
{
renames a database .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
validates the database and validates the database and validates the database and validates the database and validates the database and validates the database and validates the database .
validates the database and validates the database and validates the database and validates the database and validates the database and validates the database .
validate the database and validate the database and validate the database and validate the database and validate the database and validate the database and validate the database .
validates the given database and validates the database and validates the database and validates the database and validates the database content .
/ *
adds the list of all the databases to the database .
add a collection of classes to the list of all the classes in the list .
imports the bdb database to a file
get the for the given .
get the for the given database
get the for the given path .
checks whether the database is a database .
create a new geometry with the given metadata .
create a new with the specified feature name and package name
create a new instance of the geometry .
populate the
deletes the specified {
delete the given table
delete the given geopackage
create the metadata for the metadata of the metadata .
update the geometry at the given column
get the metadata for the given metadata
get the from the given geopackage
get the for a given geometry
query the given table
get the bounding box of the box
get the bounding box of a box geometry
query for a column
query for a given geopackage
count the given feature in the given geopackage
query the bounding box of the bounding box
query the rtree of the given table
count the given geometry
query for a column
count the number of times the given geometry is the same as the given number of instances in the given { @link }
create a for the geometry .
/ * ( non - javadoc )
update the values in the given row and column values
insert a new row .
draw a rectangle in the bitmap
draws the image from the given tile on the tile .
draw the given image .
{
{
/ * ( non - javadoc )
{
{
{
{
{
{
{
{
checks whether the cursor is a valid cursor .
{
get the dao for the given .
get dao attributes dao
get the base base id of the given base vector .
returns the lowest relations that contains the given base study
checks if the given mapping is unique .
{
creates a row for the tile row and the tile row index
count the number of times the given count matches the current count of the given count .
register a cursor to the given geometry .
read a geopackage
get the coverage data bounding box from the bounding box
draw the tile bounding box of the tile in the given
bitmap tiles
get the coverage bounding bounding box of the bounding box
get the coverage data row from the given row row
calculates the circle radius spiral with the circle .
set the density and scale to the density
sets the paint .
set the paint to the canvas .
draw the given bitmap with the given tile and the given tile .
draw the given tile in the given tile in the given tile .
draw a tile from the tile
query the bounding box of the bounding box
query the quality count of the bounding box
query the bounding box of the polygon
query the bounding box of the bounding box
moves the bounding box in the bounding box and place it to the bounding box
selects the bounding box of a bounding box of the bounding box
draw the tile and zoom level
centers a list of points in a list of points .
returns the style style for the style .
returns the style feature style
{
get the paint paint .
{
create a svg outline


checks if the bitmap is a bitmap
{
{
sets the paint .
sets the paint paint .
add a bitmap to the canvas .
creates a new bitmap
{
{
{ @inheritdoc }
returns a list of all the contained in the given geometries .

creates a new bitmap with the given bitmap and the given bitmap .
recycle the view and sets the bitmap to the current bitmap .
get the bitmap to the specified bitmap .
get the paint from the raster layer .
create a new bitmap with the specified tiles .
returns the for the given table
get the style of this style .
get the icon icon for the icon table .
get the feature table shapes associated with the table
get the table style for this table
get the style of a style table
gets the icon for the feature table
get the icon for a feature table
get the feature row style .
{
get the feature row style .
returns the style style for the feature row style .
get the row row style .
get the style of the geometry column .
returns the default style for the given row style .
get the style of the feature table row .
get the style of the style of the style of the style file .
get the style of the style of the style of the style of the style of the style file
get the style of the style of the style of the style file .
gets the row row for the feature row .
get the icon icon for the geometry type
replies the icon row row icon for the feature row .
get the icon of the icon
gets the icon for the icon from the icon and return the icon if no icon is found
get the icon icon for the icon
gets the icon for the icon from the icon table
get the style of the style of the style of the style of the style .
returns the for the given feature id .
sets the feature table names to the postscript labels .
sets the table style for this table .
sets the style of the feature table .
set the style for the feature table
sets the icon label for the feature table
sets the icon table for the icon table .
sets the icon feature table for the icon table
sets the row style .
sets the feature table label to the postscript feature .
sets the style of the feature row style .
sets the edge feature .
sets the style of the feature row style .
sets the style of the feature feature .
sets the feature style feature for the feature style .
sets the row row style to the given row .
set the style labels for the style .
sets the style of the given style .
sets the edge type of the given row style .
sets the row style .
set the feature style for the feature table
sets the style of the feature style .
sets the row of the feature row .
sets the label for the feature table
sets the icon for the icon .
sets the icon row icon for the icon .
sets the icon for the given row .
sets the icon feature .
sets the icon for the feature table .
get the style of the style .
returns the icon of the if it is not a
insert a new object
delete a feature table
delete a feature table icon
delete the table meta data for the table
deletes the mapping for a given feature id
delete the row row
delete the feature table shapes associated with the feature table
deletes the icon from the icon and deletes the icon or the icon if the icon is not yet installed .
delete the icon from the icon table
delete the given mapping
get all the { @link } s for a given feature table
get all the icons for the given feature table
get all the { @link } s for a given feature id
get all the icons for the icon
returns the image bytes for the given image .
flush the image to the output stream
get the pixel width from the raster s coordinate system .
reads a single image from the input stream .
{
{
draw the bounding box of the bounding box
draws the bounding box
draws the arrow on the polygon
draws the polyline
draw the polygon .
adds a linestring to the screen
adds a polygon to the polygon .
draws a rectangle to the canvas
get the cached table for this table
remove row row .
clear the cache size
{
gets the current .
get the feature style feature .
get the feature style icon
get the style of the geometry column .
get the style of the style of the given column name .
get the icon icon for the icon column
get the icon icon for the icon .
sets the style of the style .
sets the icon for the icon .
sets the style of the feature style .
sets the feature style feature .
sets the style of the style .
sets the style of the style .
sets the icon and icon of the geometry .
sets the feature icon for the geometry .
{
{
get a dao
{ @inheritdoc }
sets the width of the current screen .
sets the height of this editor to the current stroke .
crops the width of the width of the image .
returns the density length of the tile in the specified tile space

moves the next position to the next position .
{
reads the database and writes the data to the database .
{
{
moves the position of the position to the position of the current position .
{
reads a table from a table .
sets the color of the color that will be used to colorize the color .
get the color of the given color .
sets the color of the color .
validates the given color and color .
creates a color from a color .
get the singleton instance of the given context package .
/ *
performs the actual finding .
sets the index of the list of features .
sets the order order order .
sets the feature flag .
returns the index of the feature list .
returns the index of the feature
returns true if the feature is the current feature type .
returns true if the column feature is in the table .
delete the collection of documents from the index .
deletes the given list of feature rows from the specified list of feature indexes .
deletes the specified index from the index .
delete the given index from the index
retains the index of the given type in the index .
retains the index of the index of the index of the specified collection .
returns true if the given type is the index of the current feature .
returns the list of {
returns the last last processed time .
query for the index of the geometry .
count the count of the count of rows .
get the bounding box of the bounding box
query for the geometry of the bounding box
returns the index of the type of the geometry type .
/ * ( non - javadoc )
{
get the file path from the file .
get the file path of the file .
returns the type of the geometry type .
sets the geometry type of the geometry .
checks whether the given url is a valid media type

checks whether the url is webrtc .
replace the given url with the given parameters
replace the tile of the given url with the given parameters .
{
{
{
get the for this type .
{
returns true if the feature is newer .
returns the index of the first in the table .
returns the index of the first row of the given index .
checks if the geometry is a geojson geometry .
update the for the given timesection .
deletes the index table .
delete the given index from the index
returns true if the spinner is a valid
returns the last indexed table .
{
{
count the count of the bounding box
{
count the number of features in this geometrycollection
query for a new bounding box
counts the bounding box of the bounding box projected by this bounding box
get the bounding box in the bounding box projected by the bounding box
get the metadata for a geometry
get the row row of geometries
get the row metadata for the geometry .
{
get the feature table tile table
get the bounding box of the bounding box
get the bounding box of the bounding box in the provided bounding box
{
{ @inheritdoc }
query for query
get all unique ids for the given user
get the unique unique unique id for this
delete the given {
delete a record from the given partition id
delete a specific {
builds a for the given sequence number
create the meta data .
delete the table
renames a given name .
renames a single column
returns all the instances of the given object .
returns all the that are contained in the given .
get a from the database .
get the metadata for a given id .
get the metadata for the given geopackage
returns whether this database is racy or not .
get the for the specified column .
get the synonyms for the given column name .
returns the names of all the columns that match the given query .
get the names of the synonyms
creates a new object .
{
{
{ @inheritdoc }
returns a list of all the ids in the given iterator .
apply a view to the view .
sets the { @link } for the given { @link } .
add a view to the view .
{
create a custom view view
{
converts the given { @link java . lang . } to the { @link } .
this method writes the contents of a json object to a writer .
/ * ( non - javadoc )
find the configuration file for the given file .
gets the resource from the resource path .
sets the configuration for this .
this method is called by the { @link () } method .
accept a new connection .
returns the address of the given address .
creates a new executor that will create a new { @link executorservice } instance .
<p > sets the specified { @link converter } to the given converter . < / p > <p > for example : { @code ( ) } { @link ( class ) } { @link ( class ) } { @link ( class ) } { @link ( class ) } { @link (
/ * ( non - javadoc )
sets the policy to be used to reset policy values .
adds a property to the map .
get the property associated with the given key .
/ * ( non - javadoc )
tag :: = [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]
tag :: escape []

<p > removes all occurrences of the given collection and appends them to the collection . < / p >

removes all occurrences of the given collection from the collection and removes them from the collection .
removes all occurrences of a pattern from a collection< / of patterns
writes a byte [] to the byte array at the given offset .
reads a byte from the byte array starting at the specified offset .
compiles the given {
returns the next node of the given node .
gets the next token from the node .
returns the next node of the given node as a string .

/ * ( non - javadoc )

/ * ( non - javadoc )
/ * ( non - javadoc )
ends the given .
initialize the context .
this method will be called from the () method .
setup the properties file and sets the default configuration .
gets the directory for the storage .
get the {
get the directory path of this directory .
sets the file name .
starts the file .
opens a file with the given filename .
get the file name for a file .
evaluate the boolean against the supplied input stream .
get the value of the property .
update the current mask from the current mask .
get the filter chain filter .
run the asynchronous loop to run the asynchronous process .
creates a new random { @link } .
/ * ( non - javadoc )
create the sslcontext .
creates the key manager factory .
create the trust store manager for the given trust store .
get the key store manager for the given key store .
returns the location of the specified property .
returns the url for the given location .
/ * ( non - javadoc )
process the request to the specified .
returns true if the given converter is a valid type of the given tuple .
stop the context .
print a status of the given log message to the specified output stream .

prints a given { @link } to the given { @link } .
appends a throwable to a string builder .
starts the host .
{
/ * ( non - javadoc )
called by the { @link } .
{
handles a line of the specified { @code } .
returns the { @link entry } for the given key .
finds the entry for the given key .
returns the { @link } associated with the given key .
end the given map of the given key .
returns the string representation of the given string representation of the given string representation .
renames the target file to be used by the file

substitute the given string representation of a variable in a variable declaration .
get the system property system property
returns the env env of the given key .
get the system property .
get the value of the property for the given property key .
extract the string representation of the given string value .

resets the state of this <code > beano< / code > .
get the {
sets the { @link map } to the { @link map } .

gets the value of the property .
{
extract a single exception from the given { @link list } of { @link throwable } s .
checks whether the list of classes are given in the list of classes .
add a new status to the list .
adds a new status listener to the list of all the registered listeners .
checks if the given is a descendant of the given .
returns the list of actions for the given action .
sets the classloader class loader of the class loader .
get the value of the property from the configuration file
get boolean boolean value .
returns the first character of the given string name .
returns a methoddescriptor that flattens the methoddescriptor to a method descriptor .
returns the property for the given class .
returns true if the port is the same as the host port
run the given { @link launcher } .
called by when we know about the websocket connection .
/ * ------------------------------------------------------------
starts the log .
close the output stream .
sets the output stream for this encoder .
/ * ( non - javadoc )
resets the component .
add a device to the console .
end the named property .
gets the value of the current context .
/ * ( non - javadoc )
returns true if the event is a valid event .
{
end a binding of a given context .
creates a new { @link } .
closes the given { @code closeable } .
closes the given { @code bytebuf } .
closes the given { @link socket } swallowing any exception .
configures the {
returns the protocols that the protocols are supported .
returns the cipher suites that the contributing and ssl cipher suites are used .
returns the first matched value of the given string as a string [] .
returns a new immutable copy of the specified capacity .
converts the scope of a string to a scope .
set the properties of a given context .
add a appender to the appender .

/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
called by the {
add a appender to the appender .
call the { @link () } method on the current thread .
/ *
creates a new child node .
/ *
/ *
logs the given log event .
returns the current thread s current context .
creates a new directory if it s not already exist .
returns the path of the given path .
converts the integer to an integer value .
converts a level level to a level of debug level .
converts the given string to a { @link java . util . logging } .
returns the level of the specified level .
converts the given { @link java . util . logging . } to a { @link java . util . logging } .
checks whether this class is a given object .
create a new keystore using the key .
create a new hash key from the given <code > key< / code > .
returns the set of urls for the given resource .
returns the classpath for a resource .
returns the class loader for the given object .
returns the classloader that is used to load the class .
returns the classloader for the given class loader .
load class from class .
{
append the event to the log level .
gets the tag name for this tag .
sets the { @link } for this { @link serverbootstrap } .
run the remote thread .
/ * ------------------------------------------------------------
returns the index of the first occurrence of the specified character .
evaluate the event on the given marker .
creates a new instance of the { @link } instance .
returns the client for the given { @link } .
check whether the given file is a file in the given directory .
starts the { @link } .
appends the specified event to the current event .
checks whether the given is satisfied .
send the message to the buffer .
run the server .

/ * ( non - javadoc )
create a converter for the given type .
creates a new { @link } for the given { @link }
checks if the file is a valid compression .
configure the url to a url .
configure the given file
configure the input stream and process it .
build the for the given .
configure the input object .
configure the {
get the property for a key .
sets the name of the name of this { @link } .
checks if the device is not inhibited .
returns the last time stamp for the last hour .
add an element to the end of this list .
returns the element at the specified position in this queue .
returns the first element of this queue .
resize the given size .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the watch configuration for this context .
/ * ( non - javadoc )
get the effective default converter .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
end
checks whether the current time is a power of the given number of times .
stop the current thread .
accept a visitor to be run on the given visitor .
creates a new collection of all of the specified members .
run the server .
adds a new client to the client .
remove the client from the client .
put a string into the map
remove a key from the map .
returns the value associated with the given key .
returns the keys of the keys in the map .
returns a copy of this map with the given context name .
convert a string to a class .
returns the method value for the given class .
get the for the given
{
add a new element to the given list of actions .
returns the first element in the list of actions .
returns the matched elements matching the given filter .
checks whether the device has been started .
initialize the configuration .

start the task .
stop the stopwatch .
/ * ------------------------------------------------------------
start the timer for the given time .
returns the number of characters that are not specified in the given string .
sets the string value of the .
check if the node visits the stack walker by the given node .
returns the file name of the file or directory .
start the file .
clears the log .
checks whether the given time is expired .
get the of the timer
/ * ( non - javadoc )
/ *
/ * this method is called by the rra code when the is called .
binds the given event to the given writer .
binds the given array of arguments to the array .
converts a string to a string .
returns the reference to the given { @link } .
merges the given { @link properties } into the map .
insert a map into the map .

insert an event to the database .
returns the first occurrence of the given prefix .
returns the effective privacy level of this article s effective level .
introspect the class for the class .
sets a property .
sets a property to the given value .
returns true if the given class is a class or a cglib - class or interface .
returns the value of the given resource .
{
gets the next token from the current token .
liest modifiers
/ * ( non - javadoc )
returns the node with the given arguments .
{ @inheritdoc }
reads the url to the url .
remove all the characters from the list of events to be used in the
get the event name of the event .
returns true if the server is ready to start the server .
stop the .
returns true if the given { @link } is a { @link } .
sets the hosts to the host host and port number .
the method to search for the request and executes the callback .
search for a generic parameter in the

adds a query filter to the current selection .
sets the select rows of the query .
sets the duration between the specified duration and milliseconds .
ensures that a global container has been started .
saves the settings for the nvd cve settings .
forces the {
forces the current time to be used for the current time .
synchronizes the current state of the .
{
<p > gets the search for the specified query . < / p > <p > this method is implemented by using { @link ( string ) } for more information on the query . < / p > <p > this method is implemented for asynchronous oauth - processing request to search for the query that you use to search for
gets a list of users for a specific search .
{
sets the queries for a subscription .
requests a query for a query .
changes the query to use for a query .
online - order : <ul > <li > the query strategy is the csv - value mapping for a given query .

returns a request for a specific query .
gets a request for a specific query .
{
gets the specified subscription .
gets the specified subscription in the specified subscription .
gets the api token for the given webhook .
retrieves a request object for the given parameters .
retrieves the information for a given subscription .
returns a collection of all the items in the given collection . <p > the returned object contains a single collection of items that are not organized by the specified collection . the returned object can be used to retrieve a { @link } that contains a single collection of items . the search will be stored in the collection and the
gets the specified { @link list } of the given { @link list } of { @link } s .
gets a list of documents which are passed to the api .
gets a list of all the available users granted to the given list of available documents .
gets a list of all the objects in the specified list of objects .
retrieves the list of all the async requests for the specified storage .
{
returns the { @link } for the given { @link query } .
returns the query string for the given facet object .
returns the given { @link } for the given { @link string }
search for a matching query
this method will find all documents in the specified collection .
adds a query result tuple to be used for the given n1ql query result .
this method returns the byte array for the given query .
creates a new query for the specified query .
audits a query query result
> > > > > > > > > > > > > > > > > >
<p > executes a query on the specified facet . < / p >
{
adds a request to the list of requests for the given object .
adds an object to the specified {
adds a request to the specified {
adds a batch of messages to a specific application .
saves a list of objects to a specific list of values
updates a document by using the specified parameters .
update a single document in the order of a document .
patch operators for updating the given n1ql request .
patch an update on the request
retrieves the specified subscription with the specified subscription and returns the result .
gets the request body
gets a list of all the async requests for the specified subscription and the given collection of objects .
gets a list of all the requests that are mapped to the specified {
waits for a given task to be sent to the given executor .
delete a complete result object with a given callback
delete a request object
executes a delete operation on the given { @link string } .
executes a request on the specified list of all the requests .
executes a query .
returns the request body for the specified request
sets the response body to use for the given request .
sets the current settings of a specific request .
executes a query on the given document .
create a complete {
clears the request asynchronously .
add an object

get a request
get a list of fields of a specific object
get a collection of all the objects from the given collection .
get a list of all the objects for a specific collection

update a single jsonarray in a batch
save a request
save a single value to a jsonobject
delete a single row from the query .
delete a query
search for a paged query .

wait for a time in milliseconds
get a list of all the options in the user defined by the settings
set a new request
removes the index mapping for the specified index

build a { @link } object from the given parameters .
parses the given query string .
sets the value of the given { @link query } to the given value .
set the location of the location to be used for the given location .
sets the radius of a radius radius to radius
sets the attribute values for the given set of attributes .
sets attributes of a list of attributes .
returns the json representation of the jsonobject .
sets the set of suggestions for the given query .
sets the geographic query .
sets the geographic graph .
set the text to be displayed by the polygon .
returns the value of the given key as a string .
sets the query type for the given { @link query } .
removes a single fragment from the given set of the specified set .
sets the skip flag .
parses a query with a query parameter .
asynchronously executes a query for finding the query parameters .
filters the given collection of all the filters in the given disjunctive filter .
returns a collection of all the objects matching the given query .
aggregates all the filters from the given disjunctive batch and returns a collection of all the objects .
search for a matching query
search for all documents that match the given query .
adds a list of requests to the query .
get a request for the given request
returns a list of all the requests for which you have received the request .
gets a task for the specified {

create a complete {
search for entities matching the given facet .
returns a facet of the given facet for the given facet name .
builds a { @link } from a { @link file } .
build a request based on the current configuration of the current request .
audits a query to execute query and executes a query .
executes a query by using the specified query .
create a jsonobject from a json object

convert a collection of objects to a list of objects .
writes a temporary file to the given file .
{
returns the index of the first one .
returns true if the given propery is not a specific link .
returns a request builder for the specified { @link } .

deletes a specific topic .
deletes a uid file
moves a request to the remote server .
remove a specific local file from the given directory
parses the given { @link } and returns the result .
deletes the files from the given directory .
writes the contents of the given file to the given file .
set a url to a specific attribute .
sets the header value for this header .
adds the user agent to the user agent .
converts a string to a string .
converts an input stream to a byte array .


consumes the next request .

set the location of the location to be used for the given location .
<p > . < / p >
get the for the given .
sets the type of the query .
returns a { @link } for the given { @link query } .
{
start the request
the search for the query and returns the result .
<p > executes a query on the specified search request . < / p >
<p > executes the search on the specified facet element or returns <code > true< / code > if the request is not yet submitted . < / p >
creates a request that contains a request that will be used to create a request for a specific request . the request will be the same as the request .
deletes a comment request .
deletes a document .
moves a request to a specific index .
moves the specified index to the index .
executes a query .
sets the queries for a given query .
executes a series of messages
executes the asynchronous batch request handling callback for asynchronous poll requests .
get a list of all indexes for the specified index
delete a single index from a list of index
remove a single index from the given index .
/ * ( non - javadoc )
returns the cached entry for the given key .
/ * ( non - javadoc )
add the current values to the current interval and the current cluster interval .
create a new thread - safe way to create a thread that will be used to create a new thread .
awaits the interruption for all threads .
compare two strings .
report the error for the given exception .
copies a directory to the specified destination directory .
initializes the walkmod configuration file .
bind the given instance to the given instance .
returns the value of the property given a property name .
gets the field value for a field named { @code fieldname } .
循环向上转型 并强制设置为可访问 .
launch a worker process
returns the pid of the pid of the pid .
sleep for a random number of random milliseconds .
format a long value for percentage of the given percentage value .
formats a number of bytes in a double .
formats a number of milliseconds to a string .
prepares for signing key
reads a byte [] from the given byte array .

writes a byte array to the output stream .
writes the number of bytes to a stream .
writes double quotes to the output stream .
read a json string .
reads a string representation of a json string .
reads the json string from the json stream .
reads a double value from a json string .
reads a json string from the input stream .
execute the request .
invoke the method with the given request id .
reads a message from the serial port / device .
enqueues a call to the given listener .
returns the given location of the given location .
updates the current display visibility of the given { @link } .
refresh the current view of the window .
returns the page view of the window .
opens a new log file with the given name .
report the ui thread .
sets the prompt to the given {
returns the buffer size of the buffer .
puts the given byte buffer into the buffer .
build the dialog .
toggles the page .
starts the server .
add a child property to this node .
get the url for this request .
checks if the child node is a child of the list .
sets the flag to true .
sets whether the child is a child of the child .
adds a new token to the repository .
get the child of the child .
get the for the current node .
get the owner of the owner element .
sets the depth of the child node to be used to determine if the depth is not a depth .
sets the element .
set the owner to the child element .
sets the maximum number of child executions that were processed by this node . <p > this is a convenience method that allows you to set the child to be used by the .
{
creates a new document that can be used to create a document .
returns true if the current node is a child of the current cluster .
adds a factor to the builder .
creates a new term .
checks whether the given condition matches the condition of the matched term .
gets the .
change the threshold of the event .
refresh the bounds of the image .
get a property from the adapter
initializes the list of all the models and the of the
returns the current project for the given {
checks if the given list of strings can be used to determine if the plan is met .

load the configuration from the input file
reads the configuration file and writes it to the file .
returns the uri of the given content .

get a child from a given parent
get a child from a given url
returns the last element of the given url .
get the last element of a url .
gets the url of the url .
gets the url of a url .
remove the url from the url .


get the menu menu .
get the length of the content .
get the content type of the content type .
get the document s body .
get the html html for the given node .
add a new body to the list of body .
creates a new { @link } with the given { @code content } and { @code content } .
get the current response .
checks whether the given resource is a grails resource
add a href - link - link to the resource .
create a new { @link } with the given name and namespace .
get the list of urls for the current repository .
insert a href - child resource to the .
remove the href of the child .
sets the { @link } for the given { @code message } .
insert a dom element into the new child
add a link to the resource .
add a new to the list of child elements
change the status of the status of the given .
get the url of the web container .
get the for this request .
gets the current { @link } for the current { @link } .
get the status of the first element .
returns true if the child is a child of the given {
sets the element of this element .
sets the status of the status of this status .
adds a new name to the list .
sets a new value to the specified string .
returns the credentials for the given password .
fire the notification event .
returns the stack frame for the given stack frame .
checks whether the given string is a valid java class .
/ * private void ( ) { = . () ; }



create a child element with the given name .
create a child element with the given name and child .
clones the dom node and returns documenttype .
creates a new element with the given element name .
sets the element namespace .
returns the {
ensures that the given object is not null .
ensures that the given object is not null .
checks if the text is a valid text node .
extract the element from the dom tree .
extract the node from the dom .
returns the child element of the child if it is a child of the given element .
get a child element of a child element .
returns the child element of the child of the given element .
returns the child text given a child element .
returns the parent element of this element .
returns the first child element of the first element of the first child element .
returns the child element of the parent element of the parent element .
returns the first child node of the given element .
get a child element of the parent element
returns the { @link } for the given element .
obtains an instance of { @link } that contains the given element namespace .
returns the sibling of the element .
returns the sibling element of the element if it is not found .
gets the element at the given element .
returns the name of the name of the given name .

returns the element name .
returns the name of the name of the given name .

returns the {
returns the sibling element matching the given element name .
returns the child text of the given element in the given parent .
get the first element of the element .
inserts a element with the given name and namespace .
checks whether the node is a node .
checks whether the given node is a dom node
create a dom node from a dom node .
resolves the given element by the given prefix .
sets the parent element name to the given parent element .
sets the child to the child element .
resets the stream .
create the
adds a new connection to the connection .
get the value of the property for this property .
removes the connection from the connection .
sets the location of the pane .
sets the value of the specified property in the current value .
sets the size of the current size of the given <code > size< / code > .
dump the given list of constraints to the given list .
sets the zoom to the .
parse the given inputstream to a map of properties .
/ * ( non - javadoc )
adds a new child entry to the list of locks that are being added to the child .
get the current lock entry for this node .
create the default for the given component .
add a new child vertex to the graph .
remove a child vertex from the child list .
{
stops the application .
returns the resource bundle for the given key .
returns the resource bundle for the resource bundle .
returns the { @link } for the given color .
sets the date pattern to the given string .
sets the date time .
returns the default { @link } for the given { @link org . apache . maven . maven . maven . maven . maven . maven . maven . maven . maven . } .
stop the bundle .
create a new error message .
logs an error .
add the editor to the preference .
sets the layout of the grid .
apply the highlighting table to the current font .
returns the number of columns in the table .
checks whether the state is valid .
/ * ( non - javadoc )
disposes the user .
gets the parent pane for the parent pane .
initializes the preference object .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
sets the visibility of the spinner .
returns true if this element contains a unique identifier .
reports an event to the given { @link } .
reports an event to the given event .
puts a value to the map .
sets the value of the specified property .
runs the wizard .
constructor .
sets the for the given .
sets the active for the current active view .
adds a new to the bar manager .


decode url .
decode a string into a file .
encodes a byte array into base64 notation .
creates a new context for the given <code > / code > .
saves the given file to the given file .
creates a new .
creates the table for the given table .
get the url to the specified url .
gets the url to the specified url .
returns the value of the given url from the given url .
returns an enumeration of all the keys in the current classpath .
sets the url to the url .
put a new value into the given url .
puts a new entry into the map .
adds a token to the list of tokens .
add a child node to the node .
sets the file to the file .
{
add a condition to the condition .
add a new time .
checks whether the condition matches the condition in the condition .
throws an exception if the given object is not null .
checks whether the given expression is a boolean expression
get the child property .
get the status of the element .
set the child property .
sets the status of the status of the specified http / 2 .
get the last line of the last line .
returns the last line of the specified line .
gets the list of all the white - space in the list
bind a string to a string .
bind a string to a string
bind a string to a string
encodes a string into a string .
encodes the url to a url
creates a new .
creates the <code > / code > for the given <code > / code > .
prints the given evidence to the given package .
creates a page online project .
returns the preference id for the given store .
{
{
returns the index of the first occurrence of the specified array in the array .
run the repository .
called by the to call the method to the given .
===========================================================================
visits the node s node .
returns the monomer of the given monomer string
remove the child from the child list .
adds a new child property .
get the list of child elements in the current list of node .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the error message .
creates a button with the given title .
create a new locator container
get the for the given .
gets the .
compare two objects .
returns true if the given term matches the given term .
create a new .
create a new header .
add a child element to the list of elements .
add a property to the parent .
get the element name of the element .
get the current child properties of this <code > set< / code > object .
creates a new .
add a text to the list of text listeners .
get the adapter for the given adapter .

post body to url
get the job status for a job .

runs the given resource with the given {
sets the for the given zoom component .
create a new document for the given label .
creates a new document for the given document and the given content spec .
get the version of the repository .
sets the child .
sets the content of the document .
execute the command .
handles the list of the results of the task .
sets the value of the specified array in the specified array .
add a new active lock on the active inode .
returns the current active session .
filter the prefix for the prefix .
reads a string from the given document position .
calculates the for the given .
documentation inherited from interface
creates a new edit text edit text .
returns the {
replies the image descriptor for the given file descriptor .
defines the descriptor for the given file descriptor .
returns the passphrase for the given request .
add a row to the tree .
gets the row of the row of this row .
gets the width of this row .
dump the contents of this <code > protocoldataunit< / code > into a <code > writer< / code > .
optimize the rows of the table .

sets the for the given wpanel .
get the for the given type .
load a list of from the given list of load / projects to the given list of load balancing .
initialize the spinner .

draw the given graph and the given .
get the breakpoint breakpoint line .
run the given { @link } .
called by the visitor to check if the node is editable .
sets the .
sets the href for the given href .

closes the given { @link } .
copy the destination to the destination destination .
copy from a property to another location .
checks the status of the response .
extract the status of the from the .
get the response content .
/ * ------------------------------------------------------------
returns the parent of the current node .
gets the properties of the given properties object .
get the property for the given { @link } .
get the property for the given property
get the from the xml tree .
get the response for a given .
lock this node from a namespace .
move the given property to the given destination .
checks the to see if it is a valid .

refreshes the current session .
remove all properties that are not satisfied by the given collection .
remove a property from the given {
sets the content type .
set the properties of this set .
sets the property of the given property .
unlock the subscription to the server .
update the version of the document .
sets the current request .
delete a from the current status .
/ * package
checks whether the given { @link } is available .
checks whether the current resource is a or a new .
replies if the given { @link property } is a { @link } object .
adds a new href to the given repository .
returns a new <code > / code > for the given <code > / code > .
/ * ------------------------------------------------------------
creates a new .
change the property change event .

/ * ( non - javadoc )


{
gets the children of this parent .
returns the parent of this parent object .
gets the children of this parent stack .
create a new document from the given document .
returns true if the child element is not a child of the list .
replies the child property .
sets the child element .
set the child property to the given property .
strips whitespace characters from a string .
get the text of the gnuplot text file .
checks whether the given method is a getter method .
returns the name of the given method name .
returns the name of the given method name .
returns true if the given string is a valid setter parameter .
returns the name of the class name .
updates the for this node .
get the length of the content .
writes the contents of the stream to the given stream .
/ * ( non - javadoc )
this method is called from the method .
marks the errors in the .
asserts that the given character matches the given character .
get the next character in the string .
returns the next character in the input stream .
skips over the next character of the first character of the first character .
find the resource for the given resource .
adds the given resource to the file .
commits the nvd cve file .
find the resource for the given resource .
collapses the first and the first and last set of all the keys and values .
get the value of the key in the map .
get the age of the age .
get the length of the content .
gets the maximum of the maximum allowed maximum gate .
get the value of the specified { @code } or { @code true } if it is not present .
returns true if this object is a valid .
returns the number of seconds or timeout in milliseconds .
returns a new {
put a string value into the map .
sets the value of the current value to the value of the specified timeout .
reads the file from the file .
parse the section of the section .
strips the text field of a text field .
gets the text string for the given text .
removes the text from the given text .
add a new node to the list of tokens .
add a node to the list .
returns the next node of the given text node .
get the children of a given node .
returns the list of all paragraphs
get the list of all the children of a page
add a child node to the list of children .
prints the tree to the output .
prints the node to the given node .
display the tabs for the given field .
parses a json text from a text string .
returns the value of the given { @code double } value .
fetch the given object from the given { @link } .
/ * ( non - javadoc )
returns the parent object of this node .
start the resource bundle
stop the application .
replies the image descriptor for the image descriptor .
adds a new http proxy to the server .
get the current { @link } for the given url .
get the server - side server url .
get the url of the given url .
invoke the request .
sets the url of this context .
set the server url to the server .
returns the response content header .
returns the output stream for writing to the file .
returns the field value for the field name .
returns the header field of the given header field .
returns the header value for the given field .
get the header value for the field .
set the proxy url to the proxy server .
sets the field value .
set the url to the url .
sets the socket factory .
create a new rule from the given rule .
create a new rule .
create a new report .
create a new rule for the given sarl rule .
{
returns the list of all the objects .
run the wizard dialog .
creates a new image .
collapses the first and the first keys and the first one .
get the value associated with the given key .
returns a new { @code entrystream } whose keys are keys . the returned map will be empty after this method returns the new object .
run the given { @link } .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
{
{
starts the server .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the configuration of the given project .
/ *
returns the html for the given html code .
gets the field name from the given {
returns the resolution of the current node .
gets the field value for this field .
run the given { @link } .
called by the wizard .
sets the session to the current session .
creates a new context for the current context .
{
query properties for a resource
add a resource to the resource .
get the resource as a string .
get the resource version for the given resource .
gets the resource from the resource
get the resource for the given resource .
create a new resource with the given resource .
create a new resource with the given resource .
/ * ( non - javadoc )
get the resource for the resource
deletes the resource from the resource .
run the action on the page .
sets the baseline state of the .
binds the given member to the given target .
binds a given { @link } to a { @link meteor } object .
get the child for the given name .
{
this method is called by the to find the vertices in the graph .
authorizes the authorization to the server .
confirm the request uri .
checks whether the request is a provisional response .
gets the map of credentials for the given url .
returns the authorization authorization authorization for the request
returns the for the given authority .
generates a md5 hash for the given string .
generates a signature for the request .
normalise the string of a string .
creates a new .
{
initialize the file name from the file .
this method is called when the file is not enabled .
validates the resource group and returns true if the file is not a valid resource .
display the dialog panel .
creates a new .
generates a tag for the given tag .
create a new document .
get the of the vertex given in the source code .
generate a random key that is used to generate a random key .

/ * [ deutsch ] <p > interpretiert den angegebenen


creates a new from a byte array .
converts the given byte array to a { @link } .


get the domain name from the domain name .
returns the domain - name of the domain object .
加密
returns the byte array of the key .
加密
decrypts the given string using the given key .
counts the statistics of this instance .
/ * ( non - javadoc )
initialize the partition id .
import bulk import bulk import .
extract a partition key from the partition key .
abort the validation .
commit the commit .

initialize the { @link } with the given { @link } .

validates the given list of validation messages .
checks whether a user is authenticated or not
returns the list of the oauth tokens on the request .
set the attribute options .
/ * ( non - javadoc )
gets the filename from the repository
add a user to a file .
verify that the verification is a verification code .
.
set the options for this application .
initialize the service with the given options .

verify that the given filename is a valid ipv6 address .
clears the current password .
fetch the request from the given list of tokens . the response is the first time of the request .
sets the url to the url .
returns the string identifying the given string .

creates a new node .
creates a new instance of the specified node .
returns the index of the given property in the given object .

clears the cache .
returns true if the given { @link } is a valid { @link } .
get the class for the given object .
get the base name of a base object
get the name of the class name .
returns the package name of the package .
returns the package name for the package name .
get the big string representation of a given number of bytes .
get the string representation of a given object .
returns the unique identifier of the specified object .
converts the given list of objects into a list of primitives .
returns the class for the given method .
returns the class for the given type .
returns the class parameter for the given class . <p > the parameter types are not supported by the constructor .
returns the permission class for the given permission .
returns the type of the argument class .
checks whether the given object is a primitive type .
checks whether the given class is a single - op or a supertype of the given class .
get the method from the given method method and the given arguments .


get the value of the named property in the target object .
set a method to the given target object .
returns the class for the given class .
get the property descriptor for a given property .
get the property value of the given property in the given array .
gets the property descriptor for a given property .
set the class to the given class .
read a method from the target class .
returns true if the current type is a numeric type of the current type .
returns the child node of the given target object .
get the child of the given target object .
print the stack trace of this <code > / code > .
print the stack trace of this <code > / code > .

reads a character from a character .
/ *
/ * [ deutsch ] <p > interpretiert eine kanonische mit mit dem angegebenen elementwert . < / p >
/ * expression
liest den eines methode . < / p >
/ *
/ *
liest den eines methode . < / p >
/ *

shift the given to the end of the
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
/ * ------------------------------------------------------------
/ *
select all the words in the given list of strings to the list of strings in the specified type .
/ * ( non - javadoc )
/ *
compares two parameters .
checks whether two objects are equal .

returns the long value of the given value converted to a long value .
returns the value of the given value .
returns the value of the primitive value converted to a long value .
returns the { @code short } value of the value of the specified { @code short } .
returns the value of a value of the specified value .
returns the type of the dbase field in the class or the constant value of the typedesc class .
convert a character to a char value .
converts a char array to a char array .
convert value to a primitive value
returns the value of the specified object .
returns unbiased exponent of a numeric type .
returns the type of the given object type .
creates a new integer value .
creates a number of primitive values for the given number of number .
casts the given throwable to a runtimeexception .

get the class for the stack .
returns the next sibling of the stack .
returns the current value of the current slider .
pushes a new value to the current value .
>
add a postfix to the given string .
returns the string representation of the given type .
get the root of the given expression .
returns true if the given expression is a boolean expression .
checks whether the method is a method name .
compile the ast .
generate the method for the given method .
generate the setter for the given method .
returns the class for the current class .
get the class loader for the given class .
removes the node from the end of the node .
dump the contents of a {
flattens the tree tree into a tree .
get a property as a float .
sets the value of a property to a target object .
add a child to the child list .
initialize the node .
find the class name for the given class name .
rehashes the given <code > size< / code > to the current capacity .
escapes the character in a character .
parse a string expression and returns a new expression .
compiles a expression tree .
creates a new context with the given context and context .
creates a new context with the given context and context .
creates a new context with the given default values .
creates a new context with the given parameters and construct the default context .
add a context context for the given context .
add a context context .
add a new context to the list of elements .
get the type converter for this type .
sets the root context root .
get the value of the ognl tree .
returns the value of the specified node in the tree .
get the value of the ognl expression .
get the value of the expression for the given expressionevaluator .
get the value of the ognl expression at the specified context .

returns the value of the specified node .
get the ognl expression for a given expression .
get the value of a given expression .
sets the value of the given value to a node .
sets the value of the given object to the given value .
sets the value of a value to a value .
setname
checks whether the given classnode contains the given constant .

get the default project id for the given job .
waits for the given synchronization to the server .
returns a new watch that watches the given file to the given file .
/ * ( non - javadoc )
reads a string from the file .
reload the current version of the current version .
reads a string from a file .
resolve the given file name into a file .
collect all files in the given directory and their names .
gets the { @link urlconnection } for the given { @link urlconnection } .
checks if the given {
returns the gav pom .
reads the contents of a file into a string .
returns the project locations for the project .
{
------------------------------------------------------------------------
create project .
adds a property to the system property .
adds a property to the system property .
initialize the jar file .
{
{
sets the list of dependencies to be added to the file .
increment the current state of the given { @link } .
get the number of bytes in the given { @link } .
returns the last bucket for the current bucket .
returns the maximum value of the given type .
returns the bucket s bucket for the given bucket .
adds the given value to the list of the given value .
returns the maximum value of this cell in this row .
setup the action bar .
creates a new instance of the given { @link } instance .
opens a dialog with the given content . <p >
change the directory to the given directory
refreshes the button and removes the editor .
create a new { @link } .
returns the current . <p >
creates a new folder .
checks whether the file is a valid file .
called when the activity is created .
returns true if the urlpattern for the domain matches the domain .
returns true if the specified string is a valid
returns true if the given string matches the given regex .
checks whether the given string is a valid .
checks whether the given { @link } is a valid { @link } .
converts a string to a string .
{
starts the given job .
starts the background .
handles the tag tag .
start the start of a given list of rtflist .
end the list of the start - end position .
starts the start tag of the current paragraph .
end the next list of tokens .
gets color color from color color .
/ * ( non - javadoc )
handles the horizontal transform and the .
moves the screen to the screen .
grows the image to find the horizontal and vertical alignment .
returns the rect of this rectangle to the view .
calculates the rectangle to be used to visualize the rectangle to the given position .
register a new listener .
get the selection state of the given selection .
sets the text to be displayed .
sets the text to be displayed . <p >
sets the text to be used for the given text .
returns the text representation of the given text .
add a new span to the last active one .
applies the given { @link } to the given value .
converts a { @link } into a { @link }
convert the given to a
{
{
{ @inheritdoc }
converts a jsoup { @link } into a { @link } .
converts the given into a
/ *
/ * perform a simple search for all the characters in the string .
creates a new temporary file from the given directory and returns the new file .
creates a file from a file .
determines the file path to the file system .
{
returns the name of the local name .
sets attribute value .
normalizes a string .
sets the attribute name .
{
{
get the name of the file .
get the font name from the given filename .
add a new buffer to the buffer .
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the input stream to the output stream .
writes the contents of the given buffer to the given output stream .
reads a inputstream from the given inputstream .
reads the input stream into a new buffer .
returns the byte [] of the byte array .
sets the font size . <p >

normalizes the given filename and returns the resulting string .
converts a path to a string .
returns the index of the extension of the extension .
get the spans of the end of the spans .
triangulates the horizontal box edge to the view .
ensures that the image is above the bottom of the viewport .
zoom to the center of the screen center .
reset the current line to the current row .
scan a reader for the scan .
validates a given string value against the input string .
determines whether the given { @link } is a { @link } .
returns true if the next token is available .
returns the next line of the next line .
sets the member of the specified member .
asserts that the element attribute is the same as the value of the attribute value .
sets the parent of this element .
get the element type
gets the entity name .
returns true if the image is a directory
returns true if the authority is valid for the authority sym .
checks whether the path is a valid path .
remove all the selected areas of the given rectangle .
gets the absolute path to the path . <p >
{
sets the selection selection selection to be selected if the selection is a valid selection .
checks if the given string is a valid email address .
checks whether the domain is a domain .
returns the index of the slider .
this method is called by the { @link () } method .
this method is called by the { @link } .
flushes the current state of the stack of the current stack .
push the given stack onto the stack stack .
replace all occurrences of the given string by replacing all occurrences of the given string .
returns the {
sets the current thread .
returns true if the given { @link launcher } is a { @link } .
decodes a new { @link file } from the given file .

get the drawers from the given assets file .
gets the assets from the assets .
get the font s contents from the walkmod directory
returns a byte array that contains the bytes in bytes .
reads a byte array from the given inputstream .
converts a byte array to a byte array .

converts a url to a byte array .




reads lines from a stream of strings .
reads lines from a stream .
returns an iterator over the lines of the given input stream .
returns an iterator over the lines in the input stream .
返回数据给客户端
返回数据给客户端
返回数据给客户端
writes the given text to the output stream .
writes the given character to the given output stream .
返回数据给客户端
返回数据给客户端
返回数据给客户端
writes a collection of lines to a stream .
writes a list of lines to a stream .
writes a collection of lines to a stream .
writes a list of lines to a writer .
copy the contents of a given input to the given input stream .

checks whether the given reader is a valid reader .
/ * ( non - javadoc )
setup the .
get the reader from the reader .
returns the url of the given url .
/ * ( non - javadoc )
/ * this method is used to expand a string of two strings .
looks up a character in the given string .
restart the element .
pop the namespace from the stack .
pop the stack trace .
returns the prefix of the name of the prefix of the given name .
/ * : schemaname : : : : : : : : : : : : : : : : : : : : : : : : : : : : :
/ * ( non - javadoc )
returns the string representation of the given string .
split a string into a string .

/ * private void ( string ) { return ( string ) ; }
called by the bundle to activate the activity .
called by the to call () .
register the editor with the editor decorations . <p >
unregisters the editor editor .
registers the {
unregister toolbar . <p >
/ * ( non - javadoc )
insert a icons to the selected image .
{
dispatch the given { @link } to the { @link } .
dispatch the link to the current user .
center the view to the bottom of the image .
gets the rotation of the specified rectangle .
get the maximum extent of the image .
checks if the given { @link } is a valid selection .
returns the list of values for the given { @link } .
clear selected selection .
get the list of all the that matches the given
/ * ( non - javadoc )
find the first one that is the first one of the given span .
url - encodes a url .
decode a url query string .
returns true if the specified string starts with a character sequence of characters are the same as the string .
find the given {
called when the activity is created .
returns a bitmap with the given path .
transform the given blur into a bitmap .
apply a new bitmap to the canvas .
called when the activity is first created .
activity
sets the output writers .
sets the uri of a uri .
receive notification of the document .
end the end of the document .
/ * ( non - javadoc )
end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end end
/ * ( non - javadoc )
/ * ( non - javadoc )
{
this method is called from the () method .
/ * ==================================================================== private methods ====================================================================
writes the character to the given jspwriter .
writes a string to a string .
writes attributes .
checks whether a given attribute is a valid attribute .
escape a string with a character in the string .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )

clean the list of all the entries in the list .
builds a client - side client - side client - side client .
ensures that a given { @link } is closed .
creates a new { @link } for the given stream .
wait for a stream to be used for the specified stream .
returns the converter for the given type .
returns a which is a list of the given class .
completes the given s3 bucket for the given path .
get the shard of the shard
waits for the next request to be updated .
get the records from the given record .
performs a retry on a given .
/ * action
builds a client nkey from the given parameters .
checks if the given bucket is a valid bucket .
retrieves the method accessor method .
load the given { @link } and returns the result of the { @link } .
returns an inputstream that contains the contents of a file .
find the first {
validates the given resource to the given uri .
this method is called by the { @link } .
replaces all occurrences of the given pattern with the given pattern .
convert a collection of strings to a string .
delete a string from a string .
/ * ( non - javadoc )
{
creates a new request handler for the request .
adds a report to the report .
initialize the script builder .
validates the given string .
build a script for the given options .
create a new .
update the configuration properties for the configuration .
get the configuration properties from the configuration .
creates a new configuration properties from the server .


{
creates a based on the and
creates a file from a file .
{
remove a string from the list of the current configuration .


creates a new executor that will be used to create a new executor .
submit a task to the task .
renders a resource in the given resource .
compiles a string into a string .
{
replace image url and image content .
checks whether the given uri is a valid uri .
{
create a configuration for the given property .
{
processes the resource and writes it to a writer .
encodes the resource type from a resource group .
sets the new value of the cache .
sets the new value of the change .
/ * ( non - javadoc )
creates a new { @link } .
{ @inheritdoc }
/ * ( non - javadoc )
get the response from the remote endpoint .
returns the servlet path for the current servlet .
sets the processors for the given collection of processors .
sets the post processors for the given collection of processors .
add an action to the processor .
initialize the script .
creates an instance of class type s class .
collect all providers from the providers .
looks up an element for the given class .
{
resolves the file path to the file .
returns the current context .
create a new { @link transformer } for a string .
returns a suffix of all the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the elements in the given name .
/ * ( non - javadoc )
get the filename for the given filename .
get the charset for a file .
returns the first valid uri of the given uri .
{
returns a map of usernames - based names for the given parameters .
callback method to handle the error message .
/ * ( non - javadoc )
transform the given group model into a model .
processes the given resource .

creates a new resource group .
{
returns the uri of the given uri .
initialize the builder .
compile a string .
create a configuration object for the configuration .
create the factory factory .
register the mbean mbean mbean mbean .
register a new property change listeners .
process the request to the request .
called by the { @link } and { @link } and { @link } .
sets the configuration for the configuration .
destroy the servlet .
checks the names of all members of the group .
merges the given { @code } into the { @link } .
{
locates the uri of the given uri .
reads the xml content from a reader and writes the content to the given writer .
applies the given to the given resource .
decorate the processor for the given processor
<p > dofilter . < / p >

process the file to the client .
called by the {
splits the given string into a string .
initialize the builder .
initialize the script builder .
load properties from the given inputstream .
parse properties from the properties file .
creates the {
create a new { @link } instance .
creates a new instance of the given factory instance .
creates a new { @link } for the given { @link } .
called by the mojo to load the given .
populate the list of all group names to the given group .
checks whether the given group is a group .
adds the classpath to the classpath .
/ * ( non - javadoc )
gets the resource as a stream .
creates a new { @link uri } for the given uri .
cleans a uri .
returns the next url from the given uri .
processes the given resource and writes it to the specified writer .
creates a new instance of the configuration for the given configuration .
creates a new { @link } for the given properties .
initialize the script builder .
sets the transformers for the model .
{
compile the content of the specified { @link } .
/ * ( non - javadoc )
checks if the url is a valid uri .
processes the given list of resources from the slave .
merges the given list of resources from the given list of resources .
run the callables
this method is called by the to load the resource .
decorates a processor for the given processor .
/ * ( non - javadoc )
persist the file to the file .
injects the object to the specified object .
process the injection injection bean to the given field .
get all fields of the given object .
returns true if the given field has a valid type .
rewrite the given image and returns the image .
returns the uri of the given css uri .

adds a key to the map .
/ * ( non - javadoc )
called by the to update the cache .
change the current time .
add a model to the model .
this method is used to load the response from the server .

extracts the variables from the configuration map .
reads the specified text and writes the given reader to the writer .
parses the css template and returns the html .
replace the variables in the given string variables .
process the reader .
returns true if the resource is a resource .
renames a given inputstream to a file .
{ @inheritdoc }
executes the given processor and returns it as a processor .
checks whether the given { @link } is valid and the default is satisfied .
called when a resource is received from the resource .
<p > . < / p >
process the script to the given writer .
/ * ( non - javadoc )
factory method for creating the { @link } .

returns the file that contains the given uri .
destroy the current thread .
replace the declaration with the given properties .
{
handles the response of the response .
returns the { @link } instance that matches the given { @link } .
/ * this method is called by to determine if the given processor is a wildcard .
process the resource to a resource .
creates a new instance of { @link } .

processes a javascript script import .

get the string for the given inputstream .
create a report report to a report
filters the list of items in the collection .
returns the name of the group path .
returns the resource type of the resource type .
encodes a resource type from a resource group .
checks whether the request is a valid request .
processes the given resource and writes it to the given writer .
/ * ( non - javadoc )
writes the given reader to a writer .
finds all imports in a given resource and returns the list of imports .
creates a new resource with the given name and name .
compute the relative path of a resource .
checks whether the request is a valid session .
creates a proxy for the given resource id .
creates a string representation of a string .
gets the alias .
create a script that captures the context of the given { @link } .
add a { @link } to the { @link () } .

evaluate a string by appending the given inputstream to the current position .
sets the javascript name for the script that is used to create a javascript script that is not a javascript script .
evaluate the input string against the source file .
evaluate a script from the script and returns the result as a script .
processes the .
encodes the resource type from a resource .
converts a resource to a string .
destroy the cache .
destroy the .
returns a map of cache keys to the cache .
checks whether the request should be used for the request .
creates a request path from the request .
renames the given inputstream to the group .
/ *
process the given { @link } .
wraps a { @link } to a { @link } .
{
returns the { @link } for the given { @link } .
checks if the given uri has a role family .
{
{ @inheritdoc }
initialize the script builder .
{
find the next element in the repository .
initialize the builder .
validates the given string .
create a pool for the pool .
creates a new { @link } for the given { @link } .
process the reader to be used by the writer .
process the reader .
process the reader .
gson invokes this call - back method during serialization when it encounters a field of the specified type .
returns the stream for the given file name .
opens a jar file with the given file .
find the jar from the given jar file .
extract the path of the path .
creates a request that represents the specified resource type .
checks whether the given request is a .
writes the report - report report to the output stream .
creates a new .
<p > create a new { @link org . . event . processor } annotation for the given { @link org . jboss . as . controller . processor . } annotation for the given { @link org . jboss . as . controller . } annotation then the registered { @link } will be used .
decorate the { @link } with the given { @link } .
process the reader to a writer .
adds the given { @code } to the { @code } .

get the checksum for a given inputstream .
log all messages in the screen .
called when the resource is a resource .
{
returns the lock for a given key .
callback method to handle errors when errors occurred .
creates a process from the given file .
{
/ * ( non - javadoc )
{ @inheritdoc }
create a map of model model model model .
parse a property .
get the task for this task .
returns the string representation of the task .
returns the script command line arguments for the given command line .
sets the response headers .
converts the given { @link configuration } to a { @link } .
parse the header header and the header header
add headers to the cache .
sets the response headers .
{
{
creates a message string representation of the given message .
converts a string into a string .
get the location of the location of the location of the location of the location of the location from the location of the location .
convert package name to package name .
checks whether the given string starts with the given prefix .
get the url of the location of the given location .
checks whether the request is a valid http header or http servlet request

checks whether the given request matches the given path .
creates a new resource processor with the given resource and writes it to a specified resource .

reads a reader for reading and writing it from a reader .
creates a new file from the given file .
joins the supplied string to the given string .
cleans image image into image .
get the relative path of a file .
normalizes a string .
create a new instance of the given filter .
returns the attribute name for the attribute .
sets the attribute to the given attribute .
clear all the mbeans
reads the contents of a file from a given inputstream .
write the mime - type header .
creates a new formatter based on the given parameters .
creates a report from the given { @link } and registers it .
{
creates a new element that is a template file .
create a new element that contains the element attributes .

sets the context to the given { @link }
sets the flag to true if the current security flags are released .
decorate a callable to decorate the callable to decorate the given callable .
decorates a { @link } with the given { @link } .
returns the content of the given content .
checks if the current thread is a cache or not .
checks whether the given { @link } is weakly .
called by the { @link } .
checks whether the resource is a resource .
checks whether the given resource is a resource .
update group for a given group .
returns true if the resource type is a resource type .
replaces the given resource with the given resource .
adds a new resource to the resource .
sets the resources that were loaded .
copies all the source entries from the source map to the target map .
creates the process to use for the given process .
gets the command line arguments .
initialize the builder for the builder .
encodes the given byte array into a byte array .

process the group elements .
parse the given group element into a new group element .
create a new {
parse the resource type from the resource list .
creates a resource element .
returns the {
returns a map containing the hash map of the given hash map .
/ * ( non - javadoc )
{
returns a { @code collector } produced by the specified { @code collector } .


wait until the given future completes successfully completed or if the given future completes successfully completed future fails .
> > >

creates a new concurrent executor executor with the specified executor .
log a formatted message .
stop a timer .
returns a timer instance that can be used to create a timer instance .
returns a timer for the given name .
returns a timer instance with the given name and time .
prints the statistics gathered by the statistics .
wake up the and wait until the queue is stopped .
updates the current state of the .
updates the .
checks if the given counter is a value of the given value .
add a link to the rule .
remove a rule from the given rule .
checks whether the given rule is a grails - rule .

returns the set of for the given { @link } .
gets the set of { @link } s for the given { @link } .
get the value of the property .
populate the property s value for all the property values .
searches for all properties that are the same as the given .
/ * --- private methods ---
restores the state of the from the current stage .
returns true if the current cluster is a .
restore the current sensor rule to the database .
get the for the given .
get the for the given .
load the from the .
get the instance for the given .
get the for the given .
get the property .
get the property lineage properties of the given property from the given properties object .
returns true if the given is a .
query the for the query .
analyze expressions and returns the result of the expression .
returns the set of wrappers for the given ast node .
returns the set of wrappers of the given ontology class .
this method is used to find the set of instances for the given .
checks if the given collection is a collection of .
checks if the given is a .
returns the first set of the specified .
removes all the from the given list of all the and the .
returns the { @link } for the given { @link } .
register all of the axioms in the pipeline tree .
checks the scores for a given query and returns the result .
/ * ( non - javadoc )
/ * ( non - javadoc )
invalidate the current thread .
removes all the models from the given {
{
removes all of the given and sets the current position of the .
returns the set of all the that are contained in the list .
removes all the mappings from the list of objects .
removes all items from the list of all the items in the collection .
{
get the for this .
converts the given { @link } to a { @link java . util . logging } .
disposes the .
returns the capacity of the given capacity .
remove the element from the list of elements from the end of the list .
removes the specified position from the list .
get the element that the element is the first element .
checks whether the given object is a valid element .
adds the specified element to the end of the array .
checks if the given is not a number of digits .
converts a to a
add a timer to the current time .
{
add a new rule to the bus .
{
creates a new .
get the link link for the given link .
adds a rule to the index .
remove a rule from the index .
puts the specified key into the specified key .
remove the entry from the map .
enlarges the values of the receiver of this buffer .
shrink the values of this set of values to the given list of values .
saves the configuration file to the given file .
advances the next position in the queue .
prints the .
prints out the for the given java class .
returns the { @link } for the given { @link collection } .
returns the { @link } for the given { @link node }
returns a new { @link } for the given node .
returns the { @link } for the specified key .
finds the first element of the first element of the first element of the specified entry in the given entry .
adds the specified entry to the list of elements that are added to the element .
removes the element from the map .
resize the specified amount of resizing this method with the specified capacity .
removes the specified <code > / code > from this <code > / code > .
{
get the for a given .
get the hash code for the given object .
returns the hash of the given hash .
returns a hash of the given { @code } .
returns a hash of the given coll .

aggregates a list of { @link list } of { @link list } s into a { @link list } .
aggregates a hash from the given iterator into memory .
copy from input stream to output stream
get the list of all jar files in the jar file .
get the link for the given .
processes the next process of the given process .
returns the monitor for this monitor .
/ * ( non - javadoc )
/ * ( non - javadoc )
removes all the mappings from the list .
this method is called after the rule is done .
sets whether the mode is a valid .
adds the given { @link rule } s to the { @link } .
removes the given {
returns the chain of the chain chain in the chain chain .
returns the { @link } instance .
checks if the method is a class
dumps the given { @link } to the file .
prints a series of the given { @link } .
prints a shapefile to the given file .
prints a series of values for a given writer .
returns the for the given
process a single element .

block
hashes a { @link } for a given { @link } .
applies the given to the given property .
submit a redis request to the cluster .
append the given ffdc to the appendable .
clear the .
prints a property .
enlarges the size of this slice .
shrink the left and right capacity .
returns a map of properties from the properties file .
run a task task .
run a task task .
run a task on a given task .
get the link link for the given bus .
{
converts a { @link } to a class .
returns a new rule for the given visitor .
create a new rule for the given rule .
process the active .
mark the given query and the query .
mark the given and the .
register a to the

get the ast node of the given class .
returns the set of direct - classes that are declared in the given set of classes .
get the base class for the given .
returns the set of direct - style children of the given .
{
returns the subset of the vertexes that the aggregator is the first of the given set of weights .
hashes the given { @code } into a { @code } .
{
{
checks if the given is a valid expression
concatenates the iterable iterable into a list of iterables .
splits a list of elements into a list of objects .
splits a collection into a list of elements .
filters a set of elements into a given filter .
dumps the first element of a list of values to a string .
dumps all characters of the given collection to a writer .
returns a set of {
get the character at the given position in the given byte [] .
changes the bits of a given position .
enlarges the elements of this vector and the specified values .
shrink the capacity of this <tt > bitvector< / tt > .
adds a new element to the list of the specified elements .
removes the specified object from the list of integers .
clear the contents of this set .
converts a into a .
add the given counter to the counter .
log a log operation .
log a log operation on the given log name .
log a log error .
log a status of a given { @link } .
log a log .
set the configuration .
shutdown the server .
get the for the given node
returns a new instance of the given instance .
gets the for the given node .
gets the property property from the node .
get the ast node for the given classnode .
get the ast node of the given ast .
gets the set of wrappers for the given node .
get the set of wrappers for the given .
gets the set of wrappers for the given node .
get the set of wrappers for the given class .
get the properties of the given node .
gets the properties of the given node .
get the set of wrappers for the given node .
gets the set of wrappers for the given node .
returns the set of direct dependencies for the given node .

prints the header header header .
add a character to the character array .
print the value of the { @code value } to the { @code value } .
get a string representation of a character .
compare two equivalence .
main entry point for the specified task .
converts the { @link } to a { @link } .
removes all the mappings from the list of .
removes all the mappings from the list of all the members of the given set .
add the given rule s rule counts to the end of the chain .
process the current thread .
gets the request body .
writes the given object to the list of resources written by the given <code > map< / code > .
/ * ( non - javadoc )
replies the property path for the given property path .
returns the map of parameters in the map of parameters .
checks if the given class is a primitive type .

adds a link to the table .
sets the media type .
adds a new link to the list of links to the given string .
sets the title of the panel .
sets the title of the title .
sets the media header .
add a new page to the wire
sets the anchor link to the anchor .
add a link to the given list of strings .
returns the header of the given request . <p >
{


returns the list of all the public link specifiers .
get the list of all the items in the list .
returns true if the given parameters are the {
creates a new { @link } from the given { @code } .
returns the value of the given type .
/ * ( non - javadoc )
/ * ( non - javadoc )
checks whether the given property key is present in the list of property names .
checks if the given input is a valid property .
{
checks whether the request is a request .
returns the default value for this request .
get the value of the array of values .
/ * ( non - javadoc )
sets the properties of the .
returns the name of the given property in the given string .
write the metadata to a jsongenerator .
gets the value of the property property .
gets the property name for the given property name .
convert the given object to a .
creates a new link type from the given element .
convert a link to a .

returns the action parameter for the given parameter .
get the value of the field property .
returns the mixin type of a bean .
get the terms of the terms of the component .
find events for a given event type
returns the query string for the query .
add a { @link } to the { @link } .
enters text with the given value .

appends the given input to the given input .
converts a { @link } to a { @link } object .
converts a { @link java . io . } to a { @link } .
build a new { @link } instance .
adds a new { @link } to the given { @link } .
add a new { @link } to the given builder . <p > this method is equivalent to calling { @link ( ) } but allows you to specify the generic type of the given { @code } .
adds a new value to the rel . <p >
add a link to the builder .
returns the http request header .
returns the request servlet request .
create a new instance of this builder with the given { @link } .
create a template template scheme .
returns a template that can be used to create a template .
creates a new template from the template map . <p > the map is replaced by the template . the template must be a template with the same key as the key . <p > the template builder is created by this method . <p > example : < / p > <pre > { @code ( . (
returns the template for the given uri .
returns the { @link } for the given { @link } .
get the first node of the given name .
returns the node underneath the given node .
{
returns a that contains the elements of the specified { @link } .
returns a new { @code } that contains all elements of the given iterable .
returns an empty { @link } .
returns an empty { @link } that is the same as { @link () } .
returns a new multiset - based {
returns a new entry that contains the entries of the entries in the given map .
creates a new {

returns a map containing the entries of this treemap to be created .
returns a new { @link } that contains the specified entries .
returns a new { @link } instance .
returns a new {
{
returns the first element of this map that contains the specified key .
/ * ( non - javadoc )
returns the comparator for this treemap .
{
/ * ( non - javadoc )
{
returns the last element of this tree .
{
adds a node to the heap .

returns a new { @link } that is the given { @link iterable } of the given { @code iterable } .

{
returns a new instance that is used to create a new { @link } .
/ * ( non - javadoc )
{
{
returns a new { @link } that contains the given { @link } .
returns a new { @link } for the given { @link comparator } .
returns a new {
/ * ( non - javadoc )
returns the elements of this iterator .
/ * ( non - javadoc )
{
{
{
matches a sequence of elements .
<p > . < / p >
creates a new { @link } .
returns the element at the specified position in this list .
returns a new btree with the given size .

matches the given { @link } and returns the result .
returns a new { @code } with the specified number of elements .
/ * ( non - javadoc )
returns the number of primitive types in this unicodeset .
{
{
register the given class to the given class .
static factory method for wrapping a value of type <code > a< / code > in a { @code b } into a { @code b } .
returns an immutable { @link } that contains all elements of the given { @code } .
returns a new {
returns the node of the specified node in the given node .
returns the node represented by this node .
{
{
{
/ * ( non - javadoc )
/ *
static factory method for wrapping a value of type <code > a< / code > in a { @link choice8 } .
returns a map containing the mappings for the specified map .
returns a map containing all entries in the map .
returns the { @link } that is the last element of the given { @code } .
returns a new {
<p > creates a new { @link } from the given { @link mathcontext } < / p >
returns the { @link } that is the union of the given items .
sets the value of the specified { @code } to the given { @code } .
returns a sorted sorted map containing all of the mappings that are sorted by the specified comparator . the sort order is the smallest key and the first element of the iterable will be sorted by the specified comparator . the ordering of the keys are sorted by the specified comparator . the order of the keys are sorted by the specified comparator
returns a that sets the given elements in the given sortedset .
returns a sorted list of items that are equal to the specified elements .
returns a new { @link list } of items from the given { @code } .
<p > creates a new { @link iterable } from a { @link } . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java .
returns a that contains the character sequences .

returns an array containing all of the items in the array .
returns the string array of the items in the array .
create a new .
apply a new { @code > } to the { @code } .
returns an array of boxed elements of the specified element .
inserts a new item into an array .
copies an array of ints from a collection of items .
converts an array of { @link } s into a { @link } .
replace the elements of the array with the given number of elements .
split a single n - th element into a split .
splits a given array into a new array with a given number of separators .
parse the given input stream and stores it as a .
suspends the transaction .
/ * ( non - javadoc )
commits the transaction .
{
{
enlist the resource with the given resource manager .
{
returns the for the given state .
builds the service - local service .
get the list of files in the given directory
validate the given directory and its subdirectories .
create a for the given interface
create a new { @link } for the given class .
add a method method to the method list .

converts the given string to a string representation .
copy all the methods from the given source to the given destination .
copy method from the given method to the given method .
get the active transaction for the current transaction .
parse the class
creates a new from the given plan .
creates a new from the given domain .
sets the milliseconds for the specified amount of time to the specified time .
sets the to use for the specified time period .
cancels the transaction .
get the activity of the given activity
checks whether the notification clicked enabled level is enabled .
parse the given input stream into a list of objects .
/ *
{
{
install all wallets
register the given component to the repository .
get the pool of the pool .
this method is used to install the transaction .

remove the current entity from the current entity .
install the given service and update the current transaction .
uninstall the .
get the for the given deployment .
get the list of all the devices on the device .
get the instance for this .
get the event for this event .
get the property .
get the repository from the repository
/ * ( non - javadoc )
get the instance from the
get the associated with this component .
get the instance .
get all the beans for the given .
get the for the given descriptor .
returns the descriptors of the given component descriptors .
returns true if the given is available .
returns true if the given is a valid .
returns the number of times the given is the first of the current .
returns the number of executions for the given executor .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the time of the event milliseconds .
get the long data for the given .
get the total number of events for the given executor .
returns the total number of tasks that were found .
returns the total number of executors for the given number of milliseconds .
returns the total number of time for the given number of time statistics .
get the total number of concurrent threads .
returns the total number of sectors .
returns the total number of cpu cores for the given number of milliseconds .
get the total number of tasks that are used for the given number of milliseconds .
returns the number of milliseconds in the serial time .
/ * ( non - javadoc )
get the status of the given parameter
returns the state of the given { @link } .
get the service from the service registry .
get the repository names of all the components in the repository .
activate a rule instance .
activates the given and stores them in a .
deactivate the service .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the service name from the jndi name
installs the .
uninstall the service .
/ * ( non - javadoc )
{
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
get the long time of the event .
/ * ( non - javadoc )
returns the level of the given level of the given level of severity .
/ *
returns true if the given is valid .
get the for this device .
creates a new { @link } instance .

called when the event is clicked .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new instance .
create a new instance .
create a new instance from the given parameters .
removes a parameter from the given list of parameters .
get the parameters for this .
/ * ( non - javadoc )
get the name of the named parameter object .
/ * ( non - javadoc )
reset all the parameters to the .
replies the for the given name .
/ * ( non - javadoc )
validates the given method .
/ * ( non - javadoc )
/ * ( non - javadoc )
validates the given {
create a new event context
creates a new event context for the given event .
get the collection of all the
<! -- begin - user - doc -- > <! -- end - user - doc -- >
returns a new {
returns a new instance of the current state of the given { @link } .
gets the connection manager for the given messaging engine .
creates a new instance of .
serialize the
reads the object from the stream .
get all profiles from the given jaas repository .
get the profile for the given profile .
get the attribute for the given attribute .
parse the given input stream into a list of objects .
display the display text that is the result of the current textfield .
returns the html for the given array of values .
compares this <code > / code > to this <code > collection< / code > object .
indicates whether the notification has been started .
clears stale caches .
checks whether the notification is enabled or not .
/ * ( non - javadoc )
generate the class for the class .
binds the given name to the given name .
removes the named child object from the given <code > base< / code > object .
lookup the name of the given name .
gets the child of the given node .
register the mbean
returns the next event for the given event .
converts the given trace level to a {
<p > . < / p >
returns true if the given is valid .
install the object .
uninstall the profile .
get the profile profile from the given profile .
/ * ( non - javadoc )
returns the number of instances that the given { @link } is a { @link } .
validate the transaction .
checks whether the given object is a transaction .
remove transaction
sets the transaction level to the given byte priority .
build the for the given component .
extract the zip file from the given jar file .
extract the jar file from the jar file .
pipe the stream of bytes to be written to the outputstream .
{
attach a { @link } to the { @link } .
detaches the given node from the given node .
returns whether the given dom is a dom node .
get the of the given .
attach a new child node to the node .
detaches a node from the given node .
returns true if the current node is a breakpoint .
get the current set of focus points for a given usb node .
sets the name of the given map with the given name .
returns true if the given name is a child of the given name .
checks whether the given map contains the given {
returns the set of {
sets the attribute value for the given attribute .
get attribute value from given attribute name .
returns the attributes of the given map .
appends the given message to the message .
/ * ( non - javadoc )
get the activity definition for the given activity .
creates a new notification event notification event .
send a notification to the server .
creates a new notification handler for the given notification type .
get the for the given .
/ * ( non - javadoc )
install a new .
sets the directory to the repository .


reads the file from the file and returns the file .
update all the components of the given ldap queue .
/ *

process all the beans .
/ *

terminates the given { @link } .
returns true if the logrecord is a log record .
returns the logger for the given logger .
gets the { @link } instance for the given component .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an { @link } that contains the given { @link } .
returns a {
gets the set of entities for the given node .
get the activities of the activity
returns true if the transaction is active or rollback .
get the transaction s transactionid .
/ * ( non - javadoc )
sets the transaction isolation level to the transaction .
get the { @link } instance for the given { @link } .
/ * ( non - javadoc )
write serialization .
/ * ------------------------------------------------------------
parse the given input stream into a list of objects .
gets the permissions for the specified { @link org . acra . () } .
load the policy from the policy .
reads the uri of the file .
/ * public void ( ) { = new () ; . () ; }
returns the current value of the property .

this method is called by the () method .
create a new instance of the specified profile .
find the profile for a given profile .
find all the portlets with the given jaas registry
remove the specified profile from the list .
find a specific attribute of the given attribute .
find a collection of attributes associated with the given attribute .
get a collection of attributes for a given ldap attribute .
returns the profile entity for the given attribute .
get the attribute value for the given attribute name .
checks if the profile is a profile
renames the given profile .
remove the given profile from the registry .
get the for the given .
/ * ( non - javadoc )
attach a new to the client .
detaches a from the .
/ * ( non - javadoc )
add a new to the list .
get the .
remove the given
update the configuration for this connector .
update the current state of the current transaction .
/ * ( non - javadoc )
activates the status of the voting and the current activation state .
deactivates the mdb .
schedules a resume task to be triggered by the .
returns true if the activity is activity or not
remove the current state of the event from the pool .
/ * ( non - javadoc )
mark the active service .
handle the and handle the error .
/ * ( non - javadoc )
activates the given and registers the given service .
activates the given .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
verify that the configuration is valid .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
build profile from the current profile .
replies the .
resume
sets the .
returns the { @link } for the given { @link } .
/ * ( non - javadoc )
{
make a new object reference to the profile .
parse the given input stream into a list of .
create a new object from the given profile .
/ * ( non - javadoc )
creates a new object .
remove the specified {
create a new .
get the name of the named parameter .
removes the specified parameter from the given set .
replies the default parameter for the given name .
parse the given resource descriptor from the given resource descriptor .
checks whether the class is a class for the given class .
creates a new cemi
get the usage of a given parameter
get the usage of all the and
remove the usage of the set of messages .
set the usage of a usage message .
get the child for a given complex type .
fires an event to the given event .
fires an event to the given object
get the profile message for the given profile
gets the value of the given parameter type .
create a new { @link } instance .
/ * ( non - javadoc )
compute the for the given .


returns the type of the given java type .
get the conversion type of the given type .
returns a map of methods that are declared in the class hierarchy .
returns the class for the given class .
returns the set of methods that are declared in the class hierarchy .
returns the base class for the given interface .
returns the {
create a new instance of the transaction manager
remove a transaction from the transaction .
remove the profile from the pool .
register the bean with the mbean registration .
handles a event .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method performs a patch - on operation and returns the list of { @link } .
indicates whether the notification usage of a notification has been assigned to a notification .
converts a { @link } to a { @link } .
converts a string representation of a string into a java object representation .
removes the alarm and fires it to be removed .
clear the notification event .
get the list of all the alarms in this .
gets the signal event for the given notification event subscription .
get the associated with this bus .
returns the of all the instances in the specified collection .
checks whether the notification event is fired .
returns the notification of the alarm for the given notification event .
get the usage object for a given parameter
{
{
replies the of the .
called by ds to activate this component .
sets the of the given event .
/ * ( non - javadoc )
initialize the url .
start the
stop the
get the error for the current status of the current page .
adds a list of goog . exit .



/ * ( non - javadoc )
{
synchronously persists a transaction .
/ * ( non - javadoc )
commits the transaction state to the transaction .
/ * ( non - javadoc )
rollback the transaction
sets the transaction state to the transaction isolation level .
/ * ( non - javadoc )
returns the current transaction context
executes the checkout on the given branch .
executes the checkout on the given .
executes the actions .
executes the checkout .
executes the checkout on the given queue .
returns the names of all the names of the given names .
returns the names of all the names of the given names .
create a new tracer for the given name .
bind a new transaction to the given activity .
unbind the given managed connection with the given name .
lookup the transaction with the given name and return the result .
sets the for the given profile .
/ * ( non - javadoc )
get the failover - aware data provider for the given failover type .
{
get the members of this member .
returns the local address of the local local address in the specified address .
removes the failover from the session .
register the property .
process the current configuration of the current component .
compare the given { @link } to the given { @link } .
rotates the given int by the given exponent .
get the pool of the pool .
create a new .
remove a pool from the pool .
get the activity of the activity
/ * ( non - javadoc )
start the activity s activity .
start the activity
start an activity
start the activity s activity
starts the activity and then calls the call to the method .
checks the current context and the current context and the current context .
handles a transaction activity
end the activity and receive the result of the transaction .
fire an event to the given event .
fires an event on the event .
fire an event to the subscriber .
/ * ( non - javadoc )
{
convert the constant pool of the constant pool of the reflector
generate the method name for the given interface .
make the getter method that is the field of the field s name .
converts a string to a string .
returns the cached set of local cache entries for the specified node .
puts the specified key into the cache .
returns the value associated with the given key .
returns true if the cache contains the specified key .
removes the specified key from this map .
checks whether the notification level enabled or not .
sets the profile name .
converts a { @link } to a { @link }
executes the given event on the event .
remove all events from the list of events .
/ * ( non - javadoc )
converts a { @link } to a { @link } .
converts a string to a { @link jsonserializer } .
extracts the message from the string result .
checks whether the notification is enabled for the notification
clears stale caches .
/ * ( non - javadoc )
install the component .
uninstall the current instance of .

returns true if the given object is a valid .
clear all the timers and remove all registered managers .
remove an object from the list of the specified object .
returns true if the given collection is a collection of objects .
removes all the elements in this collection .
retains the elements of this collection in the specified collection .
returns an array of objects containing all of the elements in this list .
validates that the given name is a valid child name .
/ * ( non - javadoc )
returns the reason for the given reason .

{
sets the value of the attributeset to the value of the attributeset .
sets the value of the property .
sets the value of the property .
sets the value of the slider .
sets the value of the property .
sets the value of the attributeset to the given value .
sets the value of the attribute .
sets the value of the attribute .
sets the value of the attributeset to the specified address .
sets the maximum number of milliseconds to be used to the scheduler .
returns true if the given {
reads the configuration and returns the first element .
parse the configuration and populate the xml schema .
parse the given input stream into a list of objects .

/ * ( non - javadoc )
fire the event to the specified event .
get the from the repository
{
{
/ * ( non - javadoc )
add a new to the server .
get the profile data for a given profile .

validates the validity of the given rule .
checks whether the given profile is a valid interface .
checks whether the given class is a valid class .
validates the descriptor for the given field .
validates a query string expression .
sets the value of the specified text to be used to visualize the text to the given text .
execute a task on the given task .
execute a task .

create a new from the given resource .
create a new class name for the given class name .
generate the methods for the given method .
convert an attribute to a list of attributes .
gets the path to the path .
compares this <code > / code > to this <code > collection< / code > object .
get the .
returns the configuration property for the configuration .
returns the effective visibility of the given activity .
sets the attribute value for the given attribute key .
add a binding to the service registry .
remove all bindings from the activity .
remove a named attribute from the osgi service registry .
attach a timer to a
removes the timer from the cache .
remove the from the
attach a new to the entity .
detaches the entity from the trace of the given entity .
returns the set of objects that are contained in the given set of .
update the last time of the current time .
fire an event to the given event .
ends the event .
add a new to the list .
returns the dependencies for this dependency .
checks whether the dependencies are allowed .
checks whether the deployment is contained in the deployment .
gets the actions for the given .
returns the list of passive actions for the given collection of plugins .
checks if the current context is a valid .
this method is called by the mojo to process the jar file .
close the given profile .
get the name of the given profile name .
writes the current profile data to the current profile .
close the connection
/ * ( non - javadoc )

called by the method .
get the instance for the given field .
called by the method .
/ * ( non - javadoc )
called by the method .
called by the {
/ * ( non - javadoc )
event handler for event
called when the is clicked .
/ *

{
creates a service - formatted topic name .
/ * ( non - javadoc )
get all instances from the given set of
delete a directory
get the { @link } instance for the given { @link } .
/ * ( non - javadoc )
{
{
create a new constructor
set the to the given .
set the to the given .
sets the number of seconds to use when the first time period is used .
generate the for the given .
generate the class for the method .
create a new constructor object for the given class .
create a new .
create the default default usage of the given java class .
creates a javassist entity bean for the given entity .

creates a new event descriptor for toggling of the given event .
creates a child of the child class implementing the given collection .

create a for the given class .
add a new expression to the end of the chain .
checks whether the given expression is a expression .
binds the specified key to the specified { @link object } .
unbinds a <code > / code > object .
unbinds a named property name .
adds the specified target to the specified target object .
creates a jndi name from the given context name .
sets the log level of the given log string .
fetch the logging information for the given parameters .
sets the string to be used for the given virtual host .
returns the level of the given component .
create a new trace for a given trace id .
url - url - url
{
/ * ( non - javadoc )
ends the transaction .
checks whether the given expression is a logical operator .
/ * ( non - javadoc )
invoke a method on the given class .
create a new
sets the time the time the time the value is the time .
ends the activity and the activity of the activity .
/ * ( non - javadoc )
get the error message for the given activity .
returns the class name of the given activity .
gets the name of the field .
set the field name .
get the field with the given name .
fire an event to the specified event .
creates a new object .
gets the connection manager .
sets the current context to the profile .
initialize the profile .
sets the current context to the current thread if the current context is not a valid .
get the profile object from the profile .
fire the event to the current state of the current session .
get the profile profile .
{
{
get the from the given descriptor .
creates a class from a class name .
create a new { @link } for the given interface .
create a new
adds a class to the list of static fields that are declared in the class .
adds a class to the list .
adds a static static constructor .
generates a getter method for a given method .
generates a setter method .
generate a setter for a field
add a new annotation annotation .
add a annotation to the list of members of the given member .
get the for the given activity .
get the class loader of the class file .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
initialize the service .
start the .
creates a service component .
/ * ( non - javadoc )
returns the collator for this collator .

replaces the first occurrence of the given string with the given replacement string .
<! -- start generic documentation -- > describes the given <code > pattern< / code > and returns <code > true< / code > if the given <code > t< / code > is compatible with the given <code > / code > .
checks if class is a class or interface class .
returns all interfaces implemented interfaces implemented by classes annotated with {
get a method from the map .
resolve the content of the given entity into an entity .
sets the level of this <code > / code > to the <code > / code > .
returns the level of the given component .
==========================================================================
get the for this bus s source name .
retrieves the notification source code points to the source file .
retrieves the source of the given source and a given source .
sets the notification event .
checks if the given is a valid identifier .
register a new .
checks if the given { @link } is a { @link } .
creates a new tracer with the specified name and the given source name .

build a new { @link } from the given { @link file } .
this method is called by the method to perform the actual work of the vuecomponent and then sets the to the .
checks whether the given is a .
creates a file for the galaxy installation .
add an event to the event .
creates a new { @link } for the given event .
removes the event from the event .
run the service and return the object .
handles the event .
/ * ( non - javadoc )
/ * ( non - javadoc )
generate the package name for the given class .
generate the class for the given class .
/ * ( non - javadoc )
find the first matching attribute in the fogbugz api on the given profile
find the profile for the given profile
get all the parameters of a given entity
get all the parameters of a given entity .
persist a new profile to the specified profile .
retrieve the profile for a profile
renames a given profile
installs the given {
uninstall the transaction .
gets the transaction manager
starts the request .
shutdown the device .
add listener for notification listener
validates the given { @link } .
/ * ( non - javadoc )
create a new classloader for the given classloader .
creates a new proxy object that is used to create a proxy object that is being used as a method .
checks whether this { @link } is a valid { @link } .
{
checks if the transaction is a transaction .
process a new managed connection .
processes a { @link } from the { @link } .

checks whether the given profile is a profile .
get the instance for the given transaction .
gets the list of all the names of all available log files .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a log to the server .
adds a log handler to the server .
remove a given class from the given class .
add a log message to the log .
show the popup .
converts a {
returns the for the given string representation .
parse the given input stream into a list of .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the event .
/ * ( non - javadoc )
returns the priority priority of this priority .
sets the priority of the current instance of the current instance of the given priority priority .
remove the current activity
/ * ( non - javadoc )
<p > . < / p >
get the for the given .
invoke the event handler for the given event .
this method is called by the () method to call this method to perform the actual call .
get the pool object for this service .
get the child for the given child relation .
get the for this .
/ * ( non - javadoc )
returns the next index in the current index .
/ * ( non - javadoc )



/ * ------------------------------------------------------------




log a message .
log a message and throwable to the given message .
notification that the notification is not in the message .
notification that a message is received from the logger .
log a message .
log a message .
log a notification message .
notification that a notification has been received .
log a message with the given message level .
log a warning message .
log a warning message .
sends a notification to the server .
checks if a given token is a valid name .
write the serialized object .
reads the object from the stream .
adds a new to the list of dependencies .
returns all the dependencies of this .
find the class for the given name .
find the resource for the given name .
find the resource for a given name
create a new instance of the object
get the profile information for the given profile .
create a new profile table
get the profile profile for the given profile
get the profile name from the given profile name .
get the profile for the given profile
get the requested profile object for the given profile
/ * ( non - javadoc )
get the profile message for the given id
get all profiles from the given jaas repository
get the profiles for the given jaas name .
get all the tenants for the given entity
get all parameters for a given query
removes the specified profile from the specified table .
remove the profile from the current profile table .
<p > . < / p >
creates a new { @link } instance .
/ * ( non - javadoc )
resume the transaction
returns a new instance of the class that implements the given classloader . <p > this method is equivalent to calling { @link () } but allows you to specify a class loader .
replies the for the given .
returns the set of all that were created by this .
/ *
register a resource with the given resource .
dump the current state of the current time frame to the current state .
sets the state of the application to be executed on the ui thread .
terminates the device
validates the state of the state back back into the state of the state machine .
sets the class name .
get the profile object for the given profile .
get the profile name from the profile .
get the profile for a profile
get the profile name from the profile .
get the transaction isolation level .
get the for the given .
get the { @link } instance for the given { @link } .
{
<p > . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
generate the for the given class .
generate the class for the given class
get the activity of the activity

execute a list of { @link } s for a given query
查询
query a child by setting the query .
insert a new query into the database
updates the specified query .
sets the field name .
specify a query argument to be used by the query .
specify a query string to be used by this class .
build a new { @link } instance
adds a new mapping for the given class to the given class .
add a query parameter to the query .
adds an argument to the query string .
adds a field value to the field .
run the given operation on the given { @link } .

{ @inheritdoc }
creates a request representing a request from a string representation .
gets the bounding box of a box .
resolve image border for image border and image width and height .
url encodes the given string .
returns the image url for the specified region .
returns the type of the current type of the current type of the given type .
returns the { @link } for the given { @link class } .
sets the .
add a { @link } object to the given { @link } .
sets the .
adds a content to the list of all resources .
merges the profiles from the profiles .
merges the specified { @link } into this { @link } .
creates a request that converts a string to a string .
convert a string representation of a string to a typed string
add a member of the list of members to the list of members .
adds a range of members to the list of members .
returns the first value of the first character of the given locale .
creates a request that represents a string representation of a request .
returns the image url for a given absolute image .
resolve the image size
resolves the image .
/ * ( non - javadoc )
initialize the
checks whether the given class is a supertype of the given class .
/ * ( non - javadoc )
get the contents of the file
removes the command line and sets the flag .
push a to the file
remove the command line from the command .
get the file name for the command .
executes the given command .

replaces all occurrences of the pattern in the pattern replacing the @key .
replaces all occurrences of the given regex with the given regex
replaces all occurrences of patterns replaced by replacement .

creates a new jcellbutton .
returns the list of tags for the given tag .

tag :: html - text - text - text - text - text
retrieves the connection for the specified connection .
get the for the given transaction .
restores a from a transaction .
handles a connection to the database .
sets the name of the name .
add an exception to the class .
returns the exception for the given exception .
returns a new { @link } that is the result of { @link () } and { @link () } .
closes the cache .
returns the connection pool .
{
returns the cached statement object for the given method .
----------------------------------------------------------------------------------------------------------------------
{
evaluate the proxy with the given method .
invoke the given method on the given method .
sets the default values of the given configuration object .

retrieves the first <code > / code > for the first <code > / code > .
get the pool name for a pool .
process the queue of queue threads .
find the parent type of the given parent .
find the class for the given class .
write a new to the class .
generate the style for the given type .
removes the first character from the given string .
writes the specified { @link } to the specified { @link bitstore } .
append a string to the list of bits of a long .
convert a prefix to a
read data from the input stream .
converts a string to a json object .
returns a new {
gets the json object from the given json object .
returns the list of the given path and the given path .
get all the cookies in the list
gets the from the walkmod configuration .
gets the list of all the currencies in the list
returns all the that match the given list of filters
get all the from the given list of parameters
sets the to use for the .
add a string to the screen
sets the value of the property .
gets the event for the given event .
converts a list of collection into a single field list .
add a new value to the list .
sets the element at the specified position in the vector .
/ * ( non - javadoc )
returns the element at the specified position in the given element .
sets the element at the specified position in the specified absolute vector .
/ * ( non - javadoc )
collect all of the elements in the given list of elements from the given list of elements .
collect all of the elements in the given list of rows .
select a list of select items from a select select box .
select a list of rows from a select select list .
select the select select items
selects the last matched element for a given property name .
select a template select from a template
flush the current record to the queue .
flush the queue to flush queue .
extract all annotations annotations in the given annotation list .
returns all annotations of the given annotation if it is a property annotation .
finds all the methods in the given class with the given property name and the property for the given property .
returns the propertydescriptor of the given property of the given class .
converts the given { @link } to a { @link java . util . map } .
lookup the expression against a string
sets the to be used for the given request .
creates a new instance of the specified class .
creates a new { @link } from a set of views and values .
create a new instance of { @link } from a list of { @link } .
maps multidimensional map to a map .
create a new mapping from a map of key - value pairs
converts a map to a { @link }
creates a new instance of { @link } .
converts an object to a map .
converts a object to a map .
converts a list of properties to a list of properties .
converts a collection of map to a list of map .
returns the annotation for the given annotation .
creates a validator that validates the given list of validation options .
initializes the validation validation meta data for the given list of validation annotations .
validates the given { @link } .
apply a validation of the properties to the given .
removes the property from the properties of this property
returns the classpath for the given resource .
returns a list of jar files from the classpath .
{
returns the size of the cache size .
hash the hash of a hash .
returns the options that will be used to create the options .
checks whether the given file is a valid .
{
{
searches the specified search .
{
{
{
calculates the index of the first occurrence of the given index .
<p > evaluate the number of elements in the specified object to the specified array . < / p >
/ * documented
returns the minimum value at the given position in the array .
calculates the mean value of the given double array .
calculates the index of the given index in the given index .
returns the maximum value of the specified long array at maximum position in the specified array .
returns the minimum value at the specified position in the array .
returns the long values of the specified values .
variance of the variance of the input array and stores the values in the array in the array .
returns the value of the specified double long from the given values .
returns the median of the median of the specified array .
main method .
initialize the last interval .
invoke the given object and invoke the method on the object .
<p > evaluate the values of all the elements in the specified array to the specified <code > ( - > t< / code > ) . < / p >
sums the sum of two values for each element in the array
returns the maximum value of the specified float array .
returns the float with the given length
converts a timestamp into a time timestamp string .
checks if the given object is a valid filter .

returns a new comparer that is equal to the specified long value .
creates a new { @link predicate } for the given operator .
creates a { @link predicate } from a list of field values .
crates new { @link predicate } with the given criteria and returns the list of values .
creates a { @link filter } from a json string .

adds a double to the value .
add the value of the given values to the list of values .
adds the value of the value to the last element of the array .
{
/ * ( non - javadoc )
search for items in the list
search for items in the list of items in the list .
<p > returns the maximum element in the array . < / p >
returns the first sublist of the first first first matching the given list of values .

returns the first last of the last added sort order .

<p > returns the maximum element in the given array . < / p >
returns a list of all the elements in the list
returns the minimum value of the given min max value .
<p > . < / p >
<p > finds the minimum element by given <code > comparator< / code > . < / p >
{
processes the map and stores the fields in the map .
handles a mapping of a field .
matches a list of parameters for a given list of parameters .
handles the mapping of a field .
processes the field and the field mappers for the field .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
returns the { @link value } associated with the key .
returns the label for a field .
creates a label for a field name .
creates a new { @link } for the given { @link } .
generates a human readable label for a field .
adds a new character to the specified character .
handles a single command line .
sets the value of a key in the source stream to the destination value .
searches for the specified search key in the specified sorted set .
adds a new key to the specified key .
removes all keys from the map .
process the request to the server .
process the batch of requests .
starts the thread thread .



add a string to a string .
add a new object to a list of objects .

split a string into a string .
splits a string into a string .
<p > splits the given string into a string . < / p >
converts a string into a string array .
converts a string to a string .

<p > . < / p >


returns the number of digits in the specified number of times .

sort the list of fields in the specified order .
sort the list of fields in the list .
sort the given collection of fields and returns the corresponding class .
returns a list of {
sort the array .
returns the comparator for this field .
returns a list of the fields in the specified order .
remove last entry from the collection .
returns a new {
returns a new mapping for the given map .



returns the sum of the elements of the specified array .
returns the maximum value of the specified array in descending order .
returns the minimum value at specified minimum minimum minimum value .
returns the total number of elements in the given collection .
returns the median of the specified collection .
converts a number of digits to a power of short
gets the message bundle message .
sort the list by using the given sort order .
sort the list of objects .
handles the response .
{
sets field value for field .
/ * ( non - javadoc )
regex pattern regex
{
add a table to the server .
deep copy of a list of { @link } s .
calculates the index of the given list of indexes in the list .
checks if the given field is a valid field .
checks if the class is a class name .
checks if the class is a class .
gets the field name from the given class .
get the field name from the given field name .
returns the field name from the given class name .
get the field of the specified field .
compares this to another .
compares the given time to the given value .
sort the list of list of words .
sort the list of values according to the given sort order .
sort a collection of objects by the given comparator .
sorts the given { @link map } by mapping the map to sort the values of the map of values for the given { @link comparator } .
sorts the given { @link map } by mapping a map of values for the given { @link map } .
sorts the given map by finding the values of the specified map . <p > the map is assumed to be a collection of values . <p > the map is assumed to be a collection of values . <p > if the map is not a mapping then it will be returned .
sorts the given { @link iterable } by the given { @link iterable } .
sort the given array by descending order .
returns the comparator that is equal to the given field .
returns the comparator that is equal to the given comparator .
compares two objects for comparison .
returns the { @link caffeine } instance for the given key .
returns the { @link caffeine } instance for the given key .
removes the key from the cache .
adds a new entry to the cache .
returns the number of bits in the current row .
evicts the given { @link } and the { @link } instance .
validates that the value of the field is valid for the given message .
initialize the message .

returns an array of class type that implements the given array .


allocate a new bytebuffer .
determines whether the given is a valid .
/ * package
flush the current state of the journal entry .
reads the next record in the given file .
starts the timer loop for the given monitor .
start the timer .
returns the object associated with the given key .
validates the given message and validate the validation message .
creates a new query result from the given criteria .
filter the group .
apply the given operator to the set of groups in the given set of criteria .
returns a set of { @code hashset } objects .
converts a map of type names to a list of map .
documentation inherited

clean up the output stream
write the buffer to the buffer .
writes the given byte buffer to the given output stream .
this method initializes the stream of the stream .

adds a new key to the specified key .
adds all of the mappings to the map .
checks to see if a time zone is a valid time zone .

returns the key for the given key .
adds a new entry to the cache .
removes all keys from the given list of keys .
reads a meta data data for a given class .
load properties from the file
extracts the data from the given and returns the list of known custom data .
returns the list of for the given meta data .
extracts all the annotations of a given topic and validates it .
extract all the annotations of a {
convert the annotation to a .
compiles the regex .
splits a string into a string .
splits the given string into a string .
splits a string into a string .
remove a string from a string .
returns the first matched substring of the given string .
parse float from float string .
parse a string into a double string .
parse a string into a byte buffer .
parses a long from a string into a long value .

adds the specified long value to the specified range .
add a number of times to the list of values .
sets the element at the specified position in the specified position .

adds the value to the number of integers .
add a new value to the list .
{
sets the element at the specified index .
/ * ( non - javadoc )
handles a response message .
adds a field field to the field .
-----------------------------------------------------
returns a value to the field .
/ * ( non - javadoc )
get the property value for a given property
get fields from the object .
returns a map of fields from the map of fields .
get the class for the property .
get the property value of a property .
get the property value of a property .
injects the object to the given object .

gets the value of the field in the given field in the given object path .
get the property value as a string .
get the property value as a java object .
get the property value for a given object .

get the property for the given property .
get the field property .
get the field property for a property .
returns the context context context .
get the map of fields declared by the given field .
returns the map of fields declared by the given map .
initialize the message .
creates a message with the specified key and arguments .
creates a message from a message .
returns the value of the key in the list of values .
gets the subject .
parses the text into a string .
send a request to the server .
sets the name of a repository .
open a new namespace uri .
compacts a new post request .
get the total number of records in the given record .
register the jax - rs client to the client .
converts a json object into a json object .
returns the list of resources in the classpath .
creates a new { @link } for the given { @link jsondocument } .
create a json object
returns an inputstream for the query .
execute a list of dataobjects .
performs a query to execute .
query for a single value of a given class .
execute a page query .

sets the keys of this list .
synchronizes the documents in the database and returns the documents .
synchronizes all the documents in the specified { @link } .
gets a {
gets all the set of all the { @link } s in the given { @link net . dv8tion . jda . core . jda . } .
gets the { @link } for the given { @link } .
saves the user to the database .
find the document for the document .
finds all documents in the replicator document .
remove the document .
finds the { @link } identified by the given id .
finds a document by its id .
finds a document by its id .

checks whether the given { @link } contains the given id .
post a response to the server .
{
remove a uri .

saves the given attachment to the document .
saves the given attachment to the document .
invoke the update handler for a given { @link jsondocument } .
execute the request .
get the http request
returns the stream with the given {
get the instance of the given class .
put an object into a json document .
put content - type header .
post a json response to a uri .

validates the given request and response code .
sets the http entity request
initializes the {
adds attachment declaration to the attachment .
changes the current position of the repository .
returns the { @link } for the given { @link } .
reads a row from a record .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :
sets the parameters of the preference s parameters .
>
returns a string representation of the fractional decimal places .
{
converts a long to a long value
shuts down the executor to shutdown the shutdown hook .
create a new instance of .
writes a single byte to the specified stream .
{
verify that the given is valid .
returns the namespace uri for this namespace .
checks whether the request is a request .
send the request to the server .
returns the url of the .
generate the json for the given resource .
handles the request to the server .
handles a connection to the server .
initialize the session configuration .
returns a new executionresult that executes the given job and returns the execution executions .
returns observable for invoking the
splits a series of buckets from the given bucket and returns a new list with the given values .
submits a job to the job .
pattern for regular expression match .
sets the to be used for the cluster .
ends the given and sets the status code .
parse a string representation of a {
/ * [ deutsch ] <p > ermittelt die aktuelle . < / p >
applies the to the given observable .
retries the given observable that can be used to retry the minimum of the retries .
returns a new dewey interval with the given number of arguments .
creates a new dewey point from a given step .
send a message to the client .
send a message to the sender .
send a message to the client .
scans the current { @link scanresult } and returns the results of the scanner .
matches a pattern against a pattern
detect the of a given revision .
detect the .
sets the value of the specified property .
add a file to the file .
replace the file with the given file .
build a zip file .
generates a new .
generates a instance
generates a new instance of the specified {
generates a new .
{
{
creates a new zip file and adds it to the zip file .
generate a new { @link } for the given file .

<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the <code > / code
prepare the model .
register a class to the given type .
registers the given type with the given type and registers the renderer .
prepare a template with the given attribute .
add the given { @link } to the server .
sets the value of a property .
add a child to the list of child child elements .
converts a date into a string representation .
convert a date to a datetime string .
returns a new {
creates a { @link } for a given { @link } .
creates a { @link } for the given { @link } .
create a { @link } for composing the given { @link } .
create a { @link } for a given { @link } .
creates a { @link } for a given { @link } .
creates a { @link } for a given { @link } .
creates a { @link } for the given { @link } .
creates a { @link } for the given { @link } .
create a new { @link } with the specified { @link } and { @link } .
create a { @link } for the given { @link } .
create a { @link } for a given { @link } .
create a { @link } for a given { @link } .
create a { @link } for a given { @link } .
copy the contents of the given input stream to the given output stream .
create a new { @link documentbuilderfactory } with the given { @link documentbuilderfactory } .
parse a file from a file .
parse a document from a reader .
returns a new element node that contains the given element .
returns a new node that contains the given element node .
returns the first child element of the first element of the first element of the first element of the first element of the first element .
returns a new element that contains all elements of the given element .
validates the xml schema against the given xml schema .
create a new { @link xmppconnection } from the given { @link xmppconnection } .
create a new { @link xmppconnection } for the given application .
creates a { @code } from the given yaml string .
returns a new { @link } instance from the given { @link fileinputformat } .
main method .
create a new content - type header from the given content text .
create a { @link java . io . } from the content specification .
executes the given entry in the given zip file .

generates a secured authorization key for the given request
generates a cryptographically request key from the secret key and the given secret key .
generates a signature for the given signature
generates a authorization key from the given key .
generate a signature for the given signature
checks the request to be used for the request .
sets the signature of the specified time .
encodes a byte array into base64 notation .
decodes the given encoded string into a byte array .
removes all whitespace from the given character .
add a file to the file .
/ * ------------------------------------------------------------
writes a file to the file .
sign the request signature
sets the data object to be used for the upload .
completes the upload file .
上传文件
{
/ * get the current set of portlet editors .
sets the favorite permissions .
returns a comparator that is used to choose a single value to a single value .
add a request to the user .
handles a new request for the given user
prepare a request for a given entry .
checks whether the current time is a valid time .
checks if the given { @link notification } contains the given { @link notification } .
/ * ( non - javadoc )
fetch the configuration for a given entity type .
adds a list of notification events to the notification .
list all notifications for a list of acls
add a notification to the server
gets the notification configuration for the notification .
gets the for a given id
add a request to the response
gets the
gets the events for a specific
get a single event
handles a notification event
gets the url to use for the request .
/ * ( non - javadoc )
handles a .
/ * ( non - javadoc )
parses the request parameters .
initialize this class .
sets the to be used to create the .
/ * ( non - javadoc )
create a url for a url
gets the authentication token .
find notification for a notification .
*************
signals that the notification errors are received from the server .
filter the notification messages filtered by { @link } .
get the size of the current log file .
adds a list of to the category .
sets the notification status .
{
handles a request .
notification that the notification eventing is clicked .
handles a response body .
publish a notification to the repository .
attach a request to the list of actions for the given action .
method to link the given link to the link .
gets the notification for the notification .
gets the notification for the notification .
evaluate the request uri .
{
returns the set of request ids .
{
fetch the list of locations from the given list of locations .
reads the notification from the given file .
handles the request to a response .
/ * ( non - javadoc )
get the user id for the request .
extracts the user id from the given repository id .
/ * ( non - javadoc )
{
/ * duration of the given event to the value of the current request .
checks whether the given { @link } is a valid session .
hides the user action .
get the map of attributes for all the attributes of the map
normalizes the given rgb coordinates .
checks if the point is within the bounds of the point in the sphere .
<p > performs the following operation : <br > <br > a = a - b - b : b > a<sub > i< / sub > = a<sub > i< / sub > - b<sub > 3< / a > . < / p >
returns the closest point of points in a linear equation xy ( x ) to the nearest neighbor of the given point .
computes the dot product of the given point2d .
sets the current point .
set the x - coordinate of the given <code > x - y - z / code > .
sets the x - axis of a pair of the given type .
transforms a { @link planar } into the given { @link planar } .
computes the chessboard points for a given point .
transforms a 2d normalized normalized vector to this transformation .
returns a new 2d normalized transformation for a 2d 2d planar matrix .
converts a {
converts a { @link planar } into a { @link } .
converts a single input image into a { @link } .
converts a {
performs a linear transformation on the given rectangle .
performs a polygon on the polygon .
center center point to center center and center center and center center and center center and center center and center center and center center and center center and center center and center center and center center and center center and center center and center center and center center and center center and center center and center center and center center and center center
returns true if polygon_a contains the given input .
<p > . < / p >
<p > checks whether the diagonal elements are positive in the specified plane . < / p >
checks to see if the polygon contains the given double .
flip the border of the face in the image .
shift the border of the face to the face of a single pseudo - element .
shift the smallest of the face to the smallest .
the points in the polygon .
remove a polygon from the contour
removes all vertices &le ; if the edge is not contained in the polygon then the polygon is removed from the contour .
checks if the edge is disjoint from the polygon .
returns the squared distance between the given points .
converts a matrix into a 3x4 matrix .
<p > converts matrix into matrix and store the result in a 3x3 matrix . < / p >
computes the border of the polygon .
returns the percentage of the largest eigen pairs of spaced values .
gets the closest point of the point .
checks if the image is a polygon in the polygon
checks if the image is a polygon of double
checks if the given point contains a linear equation .
checks if a point is inside a polygon .
computes the intersection of two lines .
calculate the line intersections of intersection between two lines .
computes the intersection between two points .
returns the intersection of two lines .
computes the intersection of two lines .
calculates intersection between two lines .
computes the intersection between two lines .
checks whether the given vector is a rectangle .
checks if two quads points are equal .
checks whether the specified gps point is a rectangle in the given region .
checks if two angles are within the bounds of two vectors .
returns intersection of two rectangles
replies the ordinate between two points .
computes the chessboard distance between two lines .
<p > converts matrix into a 3x4 matrix . < / p >
<p > converts matrix to matrix matrix } . < / p >
converts the given into a matrix .
<p > trifocal tensor with standard camera - camera - p - t< / sup >
converts a { @link } to a { @link grayf32 } .
converts a 2d 2d array into normalized image points .
converts a matrix to a double matrix array<br matrix
returns the element at the specified index .
<p > trifocal tensor ( a<sup > t< / sup > ) < / i > < / p >
converts a 3x4 matrix into a 3x4 matrix
rotates the around a rotation .
sets the absolute angle to the specified absolute value .
<p > rotates the specified <code > fromdir< / code > radians about the specified absolute coordinate and the given amount . < / p >
<p > rotates the specified <code > fromdir< / code > axis followed by the specified absolute rotation . <p > the resulting matrix is the same as the specified <code > ( px ty x + z ) < / code > axis . <p > the resulting matrix can be multiplied against the specified amount of rotation . <p > the
set the rotation angle in radians .
<p > converts matrix into matrix by finding the rotation matrix . < / p >
rotates the rotation axis and angle
<p > rotates matrices . < / p >
sets the 4x4 rotation matrix to the specified quaternion .
sets the angle angle to the angle of the angle of the angle of the angle of the angle of the angle of the angle of the angle of the angle of the angle .
gets the closest point of points in the given point .
<p > the horizontal matrix for the border of the motion matrix . < / p >
<p > the percentage of projective camera matrices . < / p >
<p > . < / p >

sets the chessboard distance to the specified center .
/ * ( non - javadoc )
sets the edge of the two - fold - fold - > j .
computes the 3d - aligned of the 3d memory in the specified polygon .
detects the first line of the specified list of features in the given list of points .
returns true if polygon_a is planar .
solve a point on a plane
gets the distance between the specified index .
checks whether the homography is a concern in a polygon .
gets the line of the specified line .
converts a list of observations to a list of points .
sets the list of observations to the contour
converts a { @link planar } to a dst matrix .
converts a { @link planar } into a { @link planar } .
converts a { @link planar } into a { @link grayf32 } .
converts a planar to a 3x4 matrix .
converts a { @link planar } into a { @link } .
converts a { @link planar } into a { @link } .
converts a {
<p > creates a matrix that rotates the specified reflector . < / p >
<p > computes the solution of two matrices . t<sub > ij< / sub > = > < / sup > < / p >
cross product of the given vector .
cross cross product of a dot
adds a point to the list of coefficients of the specified <code > a< / code > .
adds the given to the given vector .
adds a matrix to the first row of the first row .
subtract two dimensional vector from two vectors .
rotates the transformation using the specified declination .
rotates a vector of the specified distance .
<p > performs a <i > t< / i > in the same order as a <i > j< / i > divided by the given dmatrixrmaj . <p >
<p > calculate the <i > th< / i > matrix . < / p >
<p > performs the dot plane equation <a href = http : // . < / p >
<p > computes the solution of a matrix . < / p >
<p > computes the polynomial conjugate of the equation <code > ( v0x v0y v0z ) < / code > and <code > ( x cy ) < / code > and <code > ( v1x v1y v1z ) < / code > and <code > ( v2x v2y v2z ) < / code > and <code > b< / code > values
<p > computes the absolute vector of two matrices . < / p > <p > x<sup > t< / sup > a<sub > i< / sub > <sup > t< / sup > <sup > t< / sup > where beta is a vector x y z and b is a vector of <code > x< / code > and <code >
<p > trifocal case if the two matrices are equal to the largest element in the vector . < / p > <p > the epipoles are normalized by qr decomposition of the <code > a< / code > matrix to the specified <code > a< / code > and store the result in <code > result< / code > . < /
<p > computes the gradient for the specified cross - matrix . < / p >
<p > a vector perpendicular to the vector x = x<sup > t< / sup > < / p >
scale the given point by the given factor .
divide the given point in the given coordinates .
changes the x and y coordinates .
<p > converts matrix into matrix by finding the vector x y coordinate to be normalized by the x - coordinate . < / p >
converts a point to a 3x4 camera .
set the x - axis rotation of this vector .
converts a angle to a angle
returns the approximate of the given { @link } of the specified { @link } .
returns the x - z - coordinate of the specified <code > / code > in the given <code > ( x y ) < / code > value in the specified region .
returns the angle theta from the given angle in the given angle
returns the angle of the specified angle in the given angle ( the radius of the angle of the given angle ) .
returns the normalized double from the given normalized normalized .
returns the normalized {
/ * ( non - javadoc )
/ * ( non - javadoc )
subtract the given double - precision normalized by this circle .
subtract the given element from the given vector .
compute sin and
returns the value of the given double value .
checks if the line intersections intersect points .
checks if the line intersections intersect points to a line intersection point .
checks if intersection is within the plane .
returns the difference of the intersection of the given {
determine the dominant distance between two points .
returns the difference of the intersection of the given {
<p > calculate the 3d coordinate of the line and the line segment of the given plane . < / p >
checks if the given point is inside the kernel .
checks if the point is within the circle .
returns true if pt_a contains the given point .
checks to see if the given line intersects the line .
interpolates the input and computes the average derivative of the two matrices .
extracts the rotation of the given complex vector from the specified quaternion .
processes the given input and returns the results .
returns the normalized cross product of the given rectangle .
sets the jacobian
sets the motion of the rigid motion .
returns a new which rotates the given .
<p > converts a 3x4 matrix into a 3x4 matrix . < / p > <p > note : this method is designed for calibration problems for a calibration matrix . < / p > <p > note : the is a point in the paper . < / p > <p > note : this method is designed for calibration problems
converts a planar circle into a 3x4 camera matrix .
converts a 3x4 matrix into a 3x4 matrix .
returns a [ ] [ google . cloud . . . . . .
returns the squared 3d point of the specified angle in 3d coordinates .
computes the 3d angle between the two points .
checks if the planar tolerance is a 3x4 solution
returns true if polygon_a is symmetric .
calculates the distance between two points .
calculates the distance between two points .

evaluate the point on the given point .
appends the specified horizontal box to the specified screen .
calculates the angle between two points .
compute the squared distance of the given point in the qr circle .
replies if the line line is x .
replies the squared point for a given point .
returns the squared distance point of a line .
returns the closest point of points inside the plane .
returns the closest point of point within a point .
returns the closest point of intersection point of a given point .
replies the squared distance between two points .
replies the closest point point .
returns the closest point of the given point in a triangle .
returns the closest point point with the given point .
transforms two observations to a result in place .
computes the derivative of two points .
transforms the specified rectangle into a new quadrilateral matrix .
transforms a cartesian product of a 2d array into a rectangle .
transforms the epipolar line of two points .
computes the jacobian of the given { @code planar } in polar notation .
computes the ncc - euclidean euclidean distance between two points .
computes the squares of the squares of the squares of the triangulation of the polygon
converts a list of { @link associatedpair } s into a list of { @link jtsfeature } .
sets the list of points in the list
checks whether the jacobian between two aligned subunits
calculates the angle between two lines in the given texture .
calculates the squared distance between two points .
convert a line to a point2d .
converts a line to a docx line .
convert a line to a production
convert a line to a polyline .
converts a {
converts a line of points to a multilinestring .
convert a line of line points into a linestring .
convert a multilinestring to a point2d
converts a {
convert a line to a polyline .
convert a given input vector to a 3x4 camera calibration matrix .
convert a given input to a 3x4 camera
convert the given { @link } to the given { @link } .
convert a normalized to a geomajas coordinate .

evaluate the plane on the plane .
evaluate the plane on the plane .
select the angle of the box s angle in degrees
sets the jacobian <code > a< / code > to the plane equation <code > ( v0x v0y v0z ) < / code > and <code > ( v2x v2y v2z ) < / code > axis . <p >
sets the gradient for a given point in the image
returns a 3d point of horizontal matrix for the given plane
checks whether the given element is a double
{
/ * [ deutsch ] <p > allen - <i > i< / sub > t< / sup > t<sup > 1< / sub > < / p >
converts a line of line line and returns the result .
compute the angle of a line of the line .
checks whether this is a
checks whether the complementary point is a quadrilateral of eigen weights
converts a list of points to a 3d point .
returns the area of the area .
returns a new which represents the center of the given 2d region .
calculate the angle between two lines .
pack a list of points from a list of points .
computes the homography induced from a given image and converts it to a 3x4 image .
checks if the specified is a circle of the given x and y directions .
randomly shuffles a random point in a given position .
converts a point into a .
transforms a series of cartesian notation to a .
computes the nearest neighbors of two outcomes . the result is normalized by the given { @code } .
calculates the jensen - shannon divergence between two pairs .
computes the derivative of the given input by using the given input and output shape .
<p > perform a simple check where the given percentage is the number of times the specified point is divided by the specified percentage . < / p >
sets the image to be used for the given image .
subtract two components from the specified point .
computes the dot product of two vectors .
ycbcr the given input matrix .
converts a wgs84 into planar eigen value
evaluate the curve for a given point .
evaluate quadratic curve .
computes the chessboard angle
compute the angle between two points and
computes the sky slope algorithm
calculates the rectifying homography to a given point by line and line corner .
the quadrilateral between two lines .
computes the homography from the trifocal tensor and the given
initialize the homography from the contour .
selects the closest line in the given region if it s a corner .
sets the edge to the current state of the automaton .
returns the closest point of points to the specified distance .
computes the svd of a decomposition .
computes the corner of a corner of a corner .
distance algorithm to determine the slope of the point
calculates the distance between two points .
calculates the distance between two points .
returns the distance between points .
returns the distance between two points .
returns the distance between two points .
returns the distance between a point .
sets the curve for the specified point .
gets the point of the line .
returns the distance between the points specified by the law of points .
calculates the distance between two points .
returns the squared distance between two points .
returns the distance between two points .
calculates the distance between two points .
returns the distance between two points .
returns the distance between the given distance .
returns the squared distance squared of the given distance squared .
returns the distance between two points .
returns the distance between the specified point .
returns the distance between two points .
returns the squared distance between two points .
returns the distance between two points .
returns the squared distance of the earth s law of cosines .
calculates the distance between the line and the distance between the points .
returns the distance between two points .
calculates the angle between two latlongs in slope - normal .
add a new transform to the list .
returns the closest point of the specified line .
returns the closest point of the line of line points .
returns the distance between the points in the line .
returns the distance between the given points .
returns the closest point of the specified point in the specified line .
returns the closest chessboard image closest to the given point .
computes the polynomial derivative of the given dimensionality .
/ *
creates a random random number drawn from a uniform distribution .
computes the dot product of a given 3d vector and returns the result .
checks if the specified transposed matrix has a general matrix and then return false .
normalizes = red green <p > <p > x<sup > t< / sup >
<p > computes the homography matrix from the plane equation <code > ( x y ) < / code > and <code > d< / code > in the matrix< / i > in each equation <i > n< / i > . the <code > a< / code > matrix is <code > ( v0x v0y ) < / code > on
converts a 3x4 matrix into a 3x4 vector
calculates the pearson distance between two points .
/ * [ deutsch ] <p > allen : <br >
creates a new instance of <code > this< / code > and the result in <code > dest< / code > . <p >
creates a new instance of this matrix with the given scalar <code > factor< / code > and store the result in <code > dest< / code > .
checks if intersection touches two elements .
computes whether the intersection of two lines intersect .
checks if the polygon is planar
checks if the image is a part of a polygon
checks if the given rectangle lies within the rectangle
checks if the given rectangle is inside a triangle .
creates a new instance of <code > this< / code > object .
returns the distance between the specified point .
set the ellipse on the roads .
computes the ellipse s circle .
normalizes the given vector .
/ *
returns the normalized 3d point of the specified pixel in a 3d - dimensional matrix that represents the given point .
calculates the angle of the triangle formed by the given quadratic function .
converts a polygon to a 3d coordinate system .
computes the mean of two motifs .
computes the mean of two histograms .
computes the mean of the two aligned matrices .
finds the intersection of the image in the image vertically .
computes the corner of the bounding box .
computes the median of points in a list of points .
computes the mean squared of the given point .
returns a random sample of the given { @code count } and the observed sample of the given { @code count } .
sets the values of this vector to be drawn .
normalizes the given .
subtract the specified rectangle from the specified position .
performs a horizontal 1d left corner of the given point
performs a reduction on the left side of the given rectangle .
<p > determines whether the polygon contains a list of points . < / p >
flips the image to the given vector .
checks if a point is orthogonal to the contour
checks if a given point is positive .
checks if the given { @code } is a positive number of positive values .
checks if the planar sequence is positive .
computes the mean of the given image
/ * [ deutsch ] <p > allen : <br > <br >
/ * ( non - javadoc )
returns the absolute absolute absolute value of the absolute absolute value of the absolute value of the absolute value of the specified vector .
computes whether two lines are colinear in the middle of a matrix .
computes the qr decomposition of a given data point .
decode a double - planar to a
fits the given data point into the specified dataset .
returns the distance between two points .
returns the squared euclidean distance between two points .
returns a random list of points that are intersecting a given point
returns a random sample of the given { @code random } .
returns a random sample of the given point <code > ( x y ) < / code > and <code > ( a + 1 ) < / code > .
computes the mean slope given the points of the given input .
computes the mean of the given points in the given image .

invalidate all authenticationproviders and the that are not in the cache .
invalidates all the registered {
returns a set of strings that are used to combine them .
get all the corpora that are not defined in the server .
get the set of files in the given repository directory .
get the set of all documents in the given esa list .
parses the file in the given { @link file } .
parse the given node in the given xml element and returns the list of the names of the elements in the given xml element .
download the file from the given esa to the given set of files .
downloads the given file and returns the
returns whether the given parameters are the given parameters
gets the set of all the installed sres for the given set of files .
checks whether the list is allowed
checks whether the given collection is a collection of strings .
install the licenses .
returns the base artifact for the given descriptor .
returns the version of the given version .
extract the manifest from a temporary file .
get the installation installation directory from the given directory
checks whether the given file is a directory
extracts the name of the file from the file .
compare two strings .

returns the shell file for the given artifact .
checks whether the given { @link } is a valid { @link } .
returns a map of properties from the map of properties .
gets the property property .
{
returns the text message asserting the text box .
show a toast on the screen .
parse a file from a file .
documentation inherited from interface
draws a background color .
draws the background circle .
returns true if the given is a valid .

moves a pitch to the .
moves a factor to the .
checks whether two objects are equal .
display the text to be printed .
load a string from a string .
returns the maximum number of random elements in the given range .
create a .
checks whether the given is a valid
accept a file or directory if it is not a directory
create the color palette from the given color .
draws the glyphs in the circle .
verify that the provided { @link } is valid .
gets the distance between the two points .
sets the maximum of the specified bottom - index - 1 - step - 1 .
returns the distance between the two points .
sets the sound sound sound .
play the playback .
printf the specified argument to the output stream .
printf the { @link java . util . locale } to the given locale .
main method to run the main program .
converts a gif png pdf into a color .



draws the circle in a circle .
draws the ellipse .
print the latitude / coordinates from the given arc to the given coordinates .
computes the absolute quadratic between two points .
sets the absolute corner point to the specified rectangle .



prints the text of the given text in the given string .
print the given text to the given coordinates .
saves the given file to the file .

sets the color .
sets the color of the color .
draws the accelerated line of the ascender
draws the gradient of the geometry .
draw the line interior and octave the circle .
draws the frame of the

add a new { @link } to the { @link } .
create a new color palette .
adjust the width of the font
draws the contour .
sets the current opera port .
moves the position of the given number of times .
sets the maximum number of bits in the .
paint the background of the image .
returns the average of the specified double from the specified region .
draws a bullet to a .
returns the number of random integers .
returns the value of a given value in the given range .
calculates the number of nonzero distance to the given point .
returns the number of parameters in the given lambda function .
computes the sum of two polynomials .
main program to create a random string .
sets the asset to use for this asset .
creates a new connection from the encoded data .


create a new .
update the user credentials for the user .
merge a given to the given list of members

query all criteria for a given search query
查询
find all the elements in the given search list .
find all search searches for a given search request .
finds all the entities in the specified type .
find the next element in the current entity .
fixes the path of the path path .
{
create and initialize the .
update a new .
resume the current user
joins the join criteria

{
extracts the authorization token from the given cookie .
register a javafx injector to the injector .
/ * ( non - javadoc )
delete the user from the current user .
get the user data for a given
change the status of a user .
/ * ( non - javadoc )
returns all roles for all groups that are not found in the given set .
get the from the given
get the from the
get the of a given job .
schedule the given trigger and the trigger for the job .

resume the current user
dispatches the {
adds a projection to the projection list .
gets the for the given
create a new menu .
get the statusdetail for a job
<p > . < / p >
sets the of the .
sets the trigger .

/ * ( non - javadoc )
/ * ( non - javadoc )
/ * private void ( ) { = new () ; ( ) ; ( ) ; ( ) ; ( ) ; ( ) ;
returns the fields that are annotated with the given class .
returns the map of field names in the given class .
{
run the { @link } and registers it from the { @link } .
gets the permissions of the given user
create a new role .
create a new service credentials
refresh the service configuration for this .
converts a { @link } to a { @link response } .
configures the {
generates the hash code for the given {
generate a string representation of the token .
send a message to the recipients .
/ * ( non - javadoc )
verifies the given password with the given password .
generates a password from a password .
change password .
get the user s user account
hashes a password using the given password and password .
verifies the given { @link } for the given { @link net . dv8tion . jda . core . entities . permission parameters } .
verifies that the given password is valid .
sets the asset to be used for the given path .

load the packaged resource file from the file .
load the resource from the classpath .
fills the session cache .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates the packages that are defined by the given configuration .
finds the { @link } that matches the given { @link java . util . list } .
execute the given {
execute the given {
store the current session .
configure the session session .


finish the session .
start the start of the queue .
get the menu for a menu
gets all the { @link } s for the given { @link } .
create a new .
<p > . < / p >
checks whether the given path is a template .
/ * ( non - javadoc )
checks the given { @link } .
create a new .

parses the given object and returns the parsed date .
returns the response of the response
<p > update a named tax element with the given name . < / p >
create a new instance of a given variable name .
<p > returns a new { @link } with the given name and amount of time . < / p > <p > this method is called by { @link ( object ) } . < / p > <p > example : <br > <br > name = [ 0 ] <br > <br > <br > a<sub > i<
create a new instance of the given property with the given name .
creates a new instance of a { @code int } with a name and name .
create a new instance of a given value using the given name .
<p > generates a function to create a new instance of the given name and value . < / p >
create a new instance of a given value using the given name .
create a new namespace uri with href namespace uri .
returns a new content - type representation of the content of this content specification .
returns a new { @link } that stores the content of the given { @code } .
returns a link that is used to create a link - relation uri .
create a new link resource with the given href and link path .
create a new template with the specified path .
creates a hal resource with the given links .
returns a new { @link links } that links all the links to the given { @link links } s .
sets the value of the specified { @link } .
creates a hal resource with the given content and href .
returns a new immutable copy of the given map .
gets the root cause of the given throwable .
returns a list of all the chain of chain of causes that the cause chain of the given chain of cause .
get the stack trace of the given throwable .
returns the stack trace of the given stack trace .
propagates the given throwable to a runtimeexception .
encode the given object as a byte array .
decodes a byte array into a byte array .
returns true if the string is a valid encoding .
decodes a byte array into a byte array .
encodes the given string into a byte array .
encodes the given string into a byte array .
encode a number of bytes into a byte array .
encode a long - byte array to a byte [] .
decodes a byte from the byte array into a byte array .
decodes a byte from the byte array .
copy the contents of the given inputstream to the given output stream .
copy the contents of the given inputstream to the given writer .
copy the contents of the given input stream to the given output stream .
copy the contents of the given input stream to the given output stream .
returns true if the given reader is equal to the current value of the contents of the reader .
reads a string from the given reader .
reads the contents of a given input stream into a string .
reads the given inputstream from the given inputstream .
reads lines lines from a reader .
reads lines from a stream .
reads lines from a stream .
creates a new { @link } that is used to convert the specified number of milliseconds to a { @link point } .
creates a new { @link } instance that can be used to create a new { @link } instance that can be used to create a new { @link } that is used to calculate the initial { @link } for the specified { @link } .
creates a from the given byte array .
creates a new dewey number from a specified number of seconds .




remove all files that are not yet available .
touches the file .


compare two file .
get the base name of the file name .
creates a new fileoutputstream of the given options .
reads the contents of the file into a byte array .
parses the input string into a { @link mediatype } for the given input string .
creates a mediatype type from the given mediatype .

returns a new { @link } with the given parameters .
create a new {
returns a new { @link mediatype } with the given parameters .
returns the media type that is the media type .
returns true if the given media type is a requirement for the given media type .
concatenate a iterables to the iterable .
creates a new { @link iterable } that has the specified iterable .
creates a new instance of { @link iterable } that contains elements that satisfy the given elements in the given array .
returns true if two iterables are equal .
returns a new iterable that can be used to convert items to the given iterable .
returns a view of the first element of the specified iterable .
returns a list of elements from the given iterable .
converts a {
returns a new { @code collector } that wraps an iterable of iterable s { @code iterable } .
add a padding to the end of the buffer .
returns a copy of this multiset s list of immutable elements .
returns a copy of the elements in a list .
returns a list that contains the elements of this queue .
copies all elements from the given array into a list of values
returns a list of all the elements of this tuple .






creates a buffered writer for the given file .
creates a buffered writer for the given file writing the given options .
reads the contents of a file from a file .
reads lines from a file and returns a list of lines .
creates a new { @link } .
find the resource with the given name .
finds a resource with the given name .
copy the contents of this request to the given outputstream .
copy the contents of the given encoding to the given writer .
reads the contents of the stream .
reads the content of the given charset from the stream .
reads lines from the stream .
checks if the given date is a valid time .
checks whether two { @link java . util . date } is a { @link java . util . date } .
checks if the given calendar is equal to the given time .
checks if two { @link } is a day of the given { @link date } .
checks whether the given calendar is a valid day
checks whether two dates are equal .
checks the given calendar and returns true if the given calendar is not a parsable date
checks whether two { @link date } is a valid { @link date } .
checks whether the given calendar is a valid date .
checks whether two { @link date } is a valid { @link date } .
checks the validity of the given calendar .
parse a date - string from the given date format .
parses the given string into a date using the specified format .
format a date into a date .
converts a date into a calendar object .
returns an iterator over all elements of the given iterators .
returns an iterator over all elements of this iterator .
creates an iterator over the elements of the specified iterator .
creates an iterator over the elements of the specified array .
returns true if the two iterables are equal .
returns an iterator over all elements in the iterator .
skips the given number of elements .
converts an iterator to a set of elements .
returns a view of the specified iterator .

<p > abbreviates a string into a string . < / p >
concatenates the given strings .
returns the distance between the two strings .


shuffles a random string of a string into a random string .
strips the trailing character from a string .
strips the character characters from the given string .
strips the substring from a string .
trim the given string with the given string .
trim the given string with the given string .
pad a string with a character .
pad a string with a character in a string .
quotes the string to be used as a string .

count the number of occurrences of the given substring in the given string .
create a new url from the given url .
converts a url to a string .
resolve the given url to a url .
returns the name of the class name .
returns the short name of the given class .
returns the package name for the package .
returns the set of interfaces that are declared in the class hierarchy .
returns all the subclasses of the given class or the given class or the first one .
verifies the given plaintext password .
reads the contents of the specified string using the given charset .
append the contents of this buffer to the specified byte buffer .
appends a byte [] to this buffer .
returns a copy of this queue with the specified length .
concats two arrays .
concatenates the given array into a single array .
copies the specified array into a new array .
copies the elements from the specified array into the specified array .

reverse reverse order .
reverses the elements of the array .
rotates the given array by the given position .
rotates the given functor with the specified pivot .
shuffles a random shuffling of a given array .
sorts the elements of the given array into a new array .
sort the elements in the given array using the supplied comparator .
converts a long into a long array
converts an array of ints into an array of primitive types .
converts an array of primitive shorts to primitives .
converts an array of strings to primitives .
converts a byte array into a byte array
convert primitive [] to boolean .
converts an array of primitive float to float .
convert the given array to a double array
converts an array of longs to a long array .
converts an array of ints to primitives .
converts an array of primitive arrays to primitives .
converts an array of strings to a string .
converts a byte array into a new byte array .
converts an array of primitive arrays to a boolean [] .
converts a float array to a float array .
converts a double to a double array .
decodes the given byte array into a string .
checks whether the given string is a valid identifier .
checks whether the string contains the digits .


encodes a byte array into a string .
decode the given string into a byte array .
decode a string into a byte array .
creates a new instance of a fraction from the value of a fraction
parse a fraction from a string .
returns a copy of this monetary value with the specified amount .
subtract a fraction from this matrix .
<p > converts a fraction into a fraction by casting the fraction to the value of the money . < / p >
returns a fraction of the delegate that this function is used to calculate the maximum value of a fraction divided by the value of the specified fraction .
returns a new comparer that reverses the values of the specified number of integers .
returns the fraction of the rule set by this ava .
returns a copy of this matrix with the specified style .
returns a copy of the elements in the given collection . <p > example : < / p > <pre > { @code immutableset . ( new hashset () ) . () . foldmap () ; < / pre >
returns a copy of the elements in the given iterable .
returns a set containing all elements in the given list .
creates a new immutable copy of the given multiset .
returns a new comparer that contains all sets of values of the specified element .
parses a duration string .
creates a duration instance from a duration .
creates a duration of duration of duration of duration .
/ * [ deutsch ] <p > erzeugt ein intervall zwischen zwei <code > / code > expression . < / p >
returns the maximum value of the maximum value .
returns the minimum value for the specified number of values .
returns the mean value of the two values of the given values .
returns the mean value of the first item in the given long .
returns the absolute value of the specified long .
returns the absolute value of a given integer .
subtracts the specified long value from the given { @code b } . <br > <br > a<sub > ij< / sub > = 0 . 0 . 0 . 0 . 0 . 0 . 1 .
multiply the value of a long b .
safely multiply the value of a dividend .
divides the specified divisor and returns the result of the difference between two numbers .
divides the specified division of two integers .
returns the number of long values for the given long value .
returns the difference between two longs .
returns the number of occurrences of a given number of doubles .
returns the number of long numbers in the given long .
converts a long to a long integer .
checks if the given { @code args } is a valid { @code } .
checks if the given condition is met .
checks if the given type is a primitive type .
checks if the given type is a primitive type .



create a new splitter with the given separator .
creates a new splitter by appending a pattern to a single pattern .
returns a new splitter that contains the limit of the current limit .
returns a splitter that covers all the suffixes .
returns a splitter that covers all whitespaces of the specified suffix .

replace a trailing sequences in a string with the given string .
split a string into a list of strings .
compose a comparator to a comparator .
compose a comparator that can be used to convert a comparator to a comparator .
returns a comparator that imposes the specified comparator to be returned .
returns the comparator that is equal to the specified order .
returns a comparator that imposes the comparator to be compared to the given comparator .
trim a new joiner to a new one
returns a joiner that contains all of the elements in this builder .
returns a new {
replaces a new {
replaces a new string with a new string with the given prefix .
adds a new prefix to the list of prefix for a given prefix
joins the given iterable into a single string .
creates a new algorithm that is the algorithm used to generate the algorithm .
returns a { @link secretkey } for the specified { @link } .
returns a copy of this multiset instance .
returns a shallow copy of the elements in a collection .
returns a copy of this immutable copy of this list .
returns a copy of this immutable copy of this multiset .
returns a new comparer that contains the elements of this tuple .
returns the link for the given link .
handle an error .
gets json body json body .
{
gets the client metadata for the client .
unmarshalls the token into a list of values .
unmarshalls the token from the map to the map .
get the resource matching the given resource .
get the resource for the given resource .
invoke a request with the given parameters .
get the value associated with the given key .
get the json object for the given token .
{
unmarshalls the current token into a list of {
/ * ( non - javadoc )
{
{
returns the type of the given type .
converts the given type to a java type .
{
{
selects the best solar box for the specified location .
fetch the buy points for a given document .
fetch the given and returns the result of the request .
finds all positions in the hull and return the list of points .
find the best match for a given date .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link featurepropertytype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of {
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
fetch the query results of the query .
create a new uncolored - based list of months .
create a new uncolored tiling term
create a new point object from the specified region coordinates .
fetch the content of the service .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
creates a new { @link } for the given { @link } .
find the highest level of the given unit .
creates a uri for a uri .
checks whether the given { @link } is a valid date .
gets a pseudo - date offset for the given layoutmanager .
gets the for a given outline .
calculates the days offset for the given time series .
selects the latitude text at the given latitude and longitude
/ * [ deutsch ] <p > erstellt eine ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; < / p
get the file contents of the given class file .
converts a class name into a file name .

evaluates the given { @link inputstream } .
invoke a static method .
acquires a new instance of the given datasource object .
get the from a class
returns the {
{ @inheritdoc }
call the remote call to the remote server .
returns the configuration object for the configuration .
gets the configuration of the given class .
returns the configuration for the given configuration .
returns true if the configuration is enabled for the given bootstrap configuration .
create a new class for the given class .
{
returns the service for the given interface .
returns the {
returns the service instance for the given service .
returns a list of all the modules that have been defined by the specified interface .
gets a module from the module
acquires a data source from the given input stream .
returns the size of the given size .
create a new from a data source
returns the index of the first occurrence of the specified index .
returns the name of the named { @code prefix } .
returns true if the type is a valid type .
execute the specified string .
find the next occurrence of the given
checks whether the given is a valid .
/ *
collapses the given indices and adds them to the list of .
returns true if the given geometry is a .
/ *
checks if the given array is not a valid .

/ * [ ]
/ * package
/ * [ deutsch ] <p > allen - / p >
/ * [ deutsch ] <p > interpretiert eine kanonische



sets the .

creates a new version of the specified {
parse a number of tokens .

/ *
the given .
/ *

the given word in the given list of the word .

/ * [ deutsch ] <p > allen

/ * this method is called from the

/ * get the string representation of the string that is the string of the first token .
/ * this method is called by the operator .

liest die aus den .

compiles the pattern against a pattern .
compiles the pattern .
sets the given {
returns the value of a given character in a { @link java . util . map } .
get the alpha color
calculates the multiplicative of the given range of the specified range of the specified range

create a new {

add a color to the cumulation .

/ *

computes the paint
print the

/ * ( non - javadoc )
sets the of the given character .
/ * ( non - javadoc )


/ *
gets the short value of a given native code .
initialize the state of the set .
set the and of the to the
returns the number of characters in the given string .
returns the last - age of the last set .
returns the unicode character set for the given character set .
returns the set of the specified character set .
sets the { @link } to the given { @link parcel } .

/ * ( non - javadoc )
resets the state of this .
returns the state of the given {
adds a new state to the state of the given state .
downgrade a new state to the given state .
adds a new state to the state of the given state .
adds a new state to the state of the current state .
/ * ------------------------------------------------------------

/ * package
sets the to start


sets the of the current connection to the current connection .
print the details of the jshell interface .


get the of a given amount of bytes .
/ *
/ * ( non - javadoc )
analyze the input {
/ *
pull the next hole
/ *
push a new token onto the current position .
/ * ( non - javadoc )
cleans up the .



returns true if the given subject is a valid .
gets the parameters of the parameters .
get the map of plugins .
get the report - report plugin for the given plugin
replies the rule selected by the given rule .
main method .
run the command line interface .
returns the error message for the given error message .
creates a new { @link task } instance .
options
returns a new task instance that can be used to poll tasks .
returns the names of the names of the names of the names of the given names .
/ * ( non - javadoc )
returns the command line arguments for the command line arguments .
execute task .
reads a properties file from the configuration file .
prints the usage help message to the specified options .
returns the home directory .
create a new classloader .
parse the given list of file names and values from the map .
serializes the given geometry to the given geometry .
create a polygon
get the minimal distance between two lines .
get the maximal intersection between the given locations .
returns true if polygon_a is a point in the given point .
execute the given uri and returns the result .
returns the uri of the specified method .


add a route pattern to the given target path pattern .
remove the path pattern from the list of paths to be removed .
remove all the target elements from the specified target .
returns the number of bits available for the specified <code > size< / code > .
add a route pattern to the route pattern .
add a route to the route
add a route pattern to the route
removes the given path pattern from the path pattern .
removes the target from the target target .

{
returns the first property of the specified property in the specified property .
get the name of the file .
gets the file store .
get the bookmark on the remote user .
returns the children of this node sorted by this list .
returns the first child of the list of all entries .
compare the entries in the given sort order .
/ * ( non - javadoc )
get the for the given portlet .
returns the list of all the elements in the list .
get the description of the window .
set the last modified time of the servlet .
load the class .
>
<p > . < / p >
/ * ------------------------------------------------------------
parses a tree from a given root node .
add all files to the list of templates that are found in the list .
start snippet : start
receive a character buffer .
endelement method .
report the given comment .
$antlr start
lexicalhandler to set the dtd name of the dtd document .
start a new path expression
{
parse an action node from an xml node .
parse a tag attribute .
add an element to the list of the given parameters .
checks the given body to be used for the given body .
processes a node in the given directory .
checks whether the namespace prefixes are valid .
checks whether the given uri is a prefix .
creates a saxparser that can be used to create a saxparser in the document .
load a class from a class .
find the class for the specified class .
load the class file .
wrap callable in a callable .
wrap a callable in a concurrent thread - safe way to execute a callable .

returns a new instance of the class .
>

resolve a method named prefix or a method name .
sets the character set .
sets the value of the <code > uidata< / code > to set the values of all <code > / code > .
returns the list of { @link } s of the specified { @link } .
resolve a variable name .
parse a string from a string .
parse a dom tree from the given url .
parse a tag .
parses the given url and returns the result .
/ * ( non - javadoc )
gets the encoding name for the given encoding .
/ * ==================================================================== private methods ====================================================================
returns the html code for the given .
gets the encoding of the given encoding .
resolve name of the given name to the file name .
/ * package
create the .
{
{
increment the index of the first frame .
compiles the given {
load the class .
reads a byte from the input stream .
reads a character from the given input stream .
returns the last - time - time series .
find the list of classes that are available on the classpath .
checks whether the classloader is a class loader .
start the given service .
reads the stream from the stream .
reads the bytes from the input stream .
returns the number of bytes available for the given file .
close the input stream .
partitions a list of objects that contains the data for the specified number of items .
reads the file from the file starting at the specified absolute byte array starting at the specified absolute byte array starting at the specified absolute byte array starting at the specified absolute byte array starting at the specified absolute byte array starting at the specified absolute byte array starting at the specified absolute byte array starting at the specified absolute byte array starting
returns a new object with the given string .
fill the dependency .
build the dbase file .
get the for a given tag
get the tag for this tag .
parse the class hierarchy for the given context and the .
get the checksum of the given file .
get the size of this file .
validates a name and name of the
skips the given number of bytes from the input stream .
returns the number of data in a usage .
get the usage of the usage of the usage of the usage of the usage of the usage of the usage .
reads the next byte from the stream .
returns the number of bytes available for the given file .
seek to the current position .
seeks to the given record .
seek to the next block .
locates the index of the block of the file in the given position .
find the block of the block of the block of the block .
initialize the memory usage of the block .
/ * ( non - javadoc )
generate the .
returns the list of maven gav dependencies in the specified list of maven repository .
checks whether the given artifact is a valid artifact .
convert the current .
update the current state of the current .
/ *
returns the number of words in a range of

reads the bytes from the input stream .
returns the number of bytes available for the given compression type .
{
{
reads a character from a byte array .
reads a character from the given character stream .
throws an exception if the given byte array is not a byte .
throws an exception if the given position is not already in the buffer .
get the location of the archive .
scan the given and of the given .
processes the web - inf / . xml and the are the same as the .
scan the jar file for the given jar file .
processes all of the specified files and their dependencies .
scans the given resource for the given resource .
scan the jar files from the jar file .
add a list of manifest classes to the list of manifest classes .
add a servlet to the end of the servlet .
returns the classloader of this class .
sets the name of the .
returns the last time of a given name .
saves the given class name to the file name .
checks whether the current module is a .
initialize the class path .
initialize the file system from the file system .
start the thread .
stop the thread .
run the main loop .
find the qualifier for a given qualifier
find a new instance of the given name .
find the channel by the given {
update the group .
{
{
copy the contents of the given inputstream to the given stream .
copy - out from a readable string to a readable string .
parses a tag from a file .
parses the { @link } attributes .
parses the given attributes in the given context .
parse attribute name / value pairs .
parse the name of the given name and returns it as a string .
parse the given string .
/ * parse the string to be used for parsing .
processes a template .
parses the page .
parses the given {
adds the given list of files to the list of templates .
parse an element from an element .
parse the given and .
/ * ( non - javadoc )
parse the tag .
parse the attribute definition of the given attribute .
parse the variable definitions from the node .
parse the comment to the end of the comment .
parse the declaration of the ast node .

parses the given { @link } and adds it to the given { @link } .

parse the given to the end of the .
parses the given {
parses the given into a list of node names .
parse the tree .
parse the property .
parse the property .
parses the body of the given string .
parse the bean from the bean .
parse a string from the body of the body .
parses a tag body declaration .
parse the given node from the given node .
/ * ( non - javadoc )
parses a plugin from the given .
parses the tags from the given tags .
parses the given node from the xml content .
parse the tag .
parses the text messageml text .

parse the given element .
parse the tree .
parse the text .
checks whether the given tag is a valid tag .
/ * ( non - javadoc )
parse the body of the body node and sets the body of the body .
parses the body of the body content .
parse attributes of an attribute .
get the attribute body attribute of the attributeset .
returns the attribute value attribute of the attribute name .
returns the attribute value for the given name .
returns the node s namespace .
adds the parent node to the parent node .
returns all the { @link } s that match the given { @link org . jboss . as . controller . } annotation .
add a new attribute to the list .
add a child node to the tree
returns the attribute name .
{
find a child node with the given name .
{
{
convert this to a .
find the alias for a variable name .
sets the current thread to be used for the current thread .

find the stream for the given stream .
writes the given field as a json string .
write a string to the writer .
add a element to the list .
<p > the parent element of the parent element . < / p >
returns the child element of the given element .
writes the character stream to the specified character stream .
writes the characters to the given character .
writes a string to a stream .
closes the underlying writer .
writes the contents of the stream to the output stream .
sets the writer .


returns the current parent of the current state of the current state of the current state .
register a new storage model for the given key .
stream the given { @link inputstream } to a { @link } .
------------------------------------------------------------------------
/ * ------------------------------------------------------------
authenticate the given request by invoking the { @link } method .
checks whether the given request is a withdrawal
reads a character from a given input stream .
{
creates a new { @link } from the given { @link string } .
returns the number of steps in the given node .

get the metadata for a given key .
get the value of the specified key in the specified key .

writes the file to the file system .
gets the servlet exception if it is not a request .
sets the value of a property in a property .
create a typed array with the typed parameters .
get a property object from the given object .
handles the bean for a given bean
get the relative path of the context .
<p > . < / p >

releases the given { @code parcel } from the current thread .
checks if the given { @link } is valid .
{
finishes writing the current state of the stream .
returns the {
evaluate the expression and evaluate it .
creates a new port for the given properties .

parse a tag
load a class from the given tag .
load the list of files from the given file .
remove the given class from the file .
main method to run the specified string .
sets the uri of a file .
sets the string to be used for the given html file .

merges the with the given configuration and writes it to the given directory .
scan the file and the files that are not found in the directory .
returns the next argument .
initialize the class loader for the class file .
locates the root of the given file .
initializes the class loader for the classpath .
removes all the errors from the list of errors that were added to the end of the list .
moves the position of the current position to the next position in the cumulation .
parse a expression into a literal expression .
sets the distance between the distance between the distance between the distance between the distance between the distance between the distance between the distance between the distance .
returns true if the given string is a valid string .
returns true if the given string is a valid rule .
skips the next character in the string .
skips the next character in the string .
/ *
parse a token string from the token .
/ *
adds the file to the file .
removes the given file from the file .
push a file onto a file .
removes the current file if it exists .
make a new version of the specified region .
adds a method to the list of parameters for the given method .
get the string representation of the file .
returns the for the given { @link } .
sets the preset of the to the preset .
sets the size of the .
set the amount of the specified coil to the specified amount of clock places the specified coil .
sets the value of the designated parameter to the given value .
sets the mode mode .
sets the maximum length of the text to be used for the given decimal size .
sets the number of characters that are equal to the given .
get the memory usage of the usage of the usage of the usage of the usage .
documentation inherited from interface
/ * ( non - javadoc )
/ *
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ------------------------------------------------------------
throws an exception if the file is not found .

dispatch an error to the list of errors .

returns a list of all the predicates satisfying the given predicate .
returns the list of submissions that have been mapped to the given list of submissions .
sets the name of the resource to the given schema .
sets the prefixes of the given prefix to the given prefix .
returns the url of the given token in the form of the specified token .

/ * ( non - javadoc )
converts this node into a child node .
get the schema of the schema .
gets the schema for the given schema .
create a new instance of the given map .
merges the given result into a new .
add a binder to the list of arguments .
initialize the class of the given binder .
returns a map of all the wallets for the given parameters .
generate the .

invoke a static method that will be called from the () .
get the heap for the given cache .
put a cache entry to the heap cache .
returns the byte array size of the given byte array .
returns the array size of the specified size .

prepare a dependency graph from the given directory
processes the given git repository .
converts a collection of into a list of .
get the resource as a stream
get the for the given tag .
renders the url of the given url in the form of the web - form .
returns the uri of the uri for the uri .
create a new tree node for a given tag .

push a record to the stream .
mark the last opened state of the stream .
get the jar - file for a given input stream .
create the next character in the stream .
returns the encoding of the given byte array .


scan the character from the input buffer .
report a error message .
fills the meta data for the given { @link } .
fills the meta data for the given file .
fills the given { @link } with the given name and descriptor .
get the path of a resource .
returns the url of the specified path .
returns the resource as a stream .
get paths for a path
log a message with the given message .
add a servlet to the servlet .
add a filter to the given filter .
update the filters for the given filters .
update the filters in the given filters .
writes the bytes in the given byte array to the buffer .
end block .
flush the output to the output stream .
finishes writing the current state of the stream .
close the stream .
returns the size of the given size .
returns the number of bytes contained in the specified memory usage .

set the for the given color .
moves the position of the window to the end of the buffer .
reads the size of the given byte buffer from the given byte array starting at the given position .
processes pending buffers to be read from the input stream .
returns the length of the next character in the given range .
returns the number of characters that match the given position .
checks if the given string matches the given number of characters .
move the current position of the current state to the current position .
recycle the {
flush the buffer to the buffer .
clears the message .
flush the current response .
close the stream .
writes the string to the output stream
write the given character to the output stream .
writes the given character to the output stream .
writes a string to a stream .
allocates a new buffer .
locks a lock .
receive an error message at the given level .

report a warning error .
resets the state of this object .
returns the message for the given message .
gets the message to be used to get the message of the specified message .
returns the message of the specified message .
get the message from the given message .
returns a list of all the fields in the map .
>
generate the .
compile the { @link } and compile it .
returns true if the current configuration is a valid
remove the file .

checks whether the given jar file is a jar file .
reads the bytes from the stream .
returns the available available available available available available available available available .
quotes escaped quotes and quotes escaped .
generate the for the given node .
this method will create a tree node for a given tag .
generate the tag for the given tag .
method to add the handler to the list of
generate the package name .
generate the import table for the import table .
generate the json object .
generate the class name of the given class .
generate the .
generate the package name for the given .
generate the xml declaration .
generate a new constructor for the given class .
generate the .
generate the xml node .
generate a .
generate the for the given tag handler .
/ * this method is called by the ajax method to generate the attribute .
generates the for the given .
generates the {
generates the html for the given .
converts a string getter to a string .
converts a string to a java type name .
reads the properties from the configuration .
export the given channel to the given output stream
<p > . < / p >
validates the current page and prints the validation errors .
get the current handler for the given class .

releases all the resources that were released .
parses a { @link } expression and returns the resulting expression .
parses the given and returns the .
returns the next character in the string .
parses the given character sequence .
select the for the given property .
finds the first matching uri of the given uri .
returns whether the given uri is a uri .
print a comment .
print a string .
print a string .
prints the contents of a string .

gets the string value of the first xpath expression .
checks if a scope is a scope .
checks the validity of the given attribute .


convert a class to a class .

validates the given expression and expressions .
returns the name of the class of the given path .
package private for testing
split the path into a list of paths .
> > > > > > > > > > = > = = = = = = = = = = = = = = =
> >
checks whether the given key matches the given key .
> >
returns the canonical name of the given class .
expand the jar file .
create a new token for a given token .
add a property to the map .
write all the elements of the given list of xml elements to the xml element .
write the xml representation of the given xml document to the given {
gets a new job for the given job id .
returns the modifier of the given modifier .
returns a set of all the keys that are contained in the given map .
initialize the servlet .
compile a .
this method is called by the jsp jsp page .
increment the message of the given {
{
returns true if the key is a valid
returns the name of the given name .
reads the bytes from the stream .
returns the number of bytes available for the given file .
close the input stream .
/ * ( non - javadoc )
get the for this .
gets the cached {
put a bo to a given value .
load the metadata for a given path .
builds a collection of objects .
returns number number number
serialize a string to a byte []
write the object to the output stream .
{
{
get the { @link } for the given { @link } .
converts a { @link } to a { @link list } of { @link row } s .
create the for the given .
/ * ( non - javadoc )
returns the given {
/ * ( non - javadoc )

update the given time and add the given time watermark to the given time series .
gets the number of bytes that are not known to the given {
puts a double to the output stream .
returns all properties of the properties of this object .
creates a container for the container .
/ * ( non - javadoc )
{
updates the record for the specified time omission .
schedules a new task to be used for each period of time .
returns the next expirable for the given slot .

clear the slot from the slot manager .
{
{
/ * ( non - javadoc )
insert a batch of triples into a batch of .
called when the event is fired .
apply a new { @link } to the { @link } .
=======================================================================
returns a new { @code } that is subscribed to the specified event queue .
returns all listeners that the given event has been added to the queue .
returns the name of the remote host .
append the given { @link } to the buffer .
parse a timestamp string from the file .
start the server .
get the epoch - time zone for a given type .
/ *
put - in - to the cache .
compute the median of a { @link } .
compute the median of the input data .

returns a {
compute the number of files in the specified region and returns the number of known values .
format the given http headers .
format the given output file .
register the given { @link } .
returns true if the time interval is a wait time .
prefetch the lock on the connection .
waits for the task to be used to wait until the task is completed .
parses a string into a { @link } .
returns the list of known build accounts .
returns the keys of this proposition as a new list .
returns a new { @link } that is used to create a { @link } for the given { @link } .
sets the name of the { @link () } .
/ * ( non - javadoc )
add a new metric to the list of metric names .
returns the set of all the names of the given { @link } s .
get the for the given
get a list of {
{
get a new {
get all the items for a given bucket
add the given batch of batch batch statements to the batch .
fetch all the locators from the given list of { @link } s for a given { @link } .
returns a list of all the { @link } s for a given { @link } .
returns a new {
returns a new dewey reference to the given range of the specified range .
converts a timestamp into a granularity .
converts a timestamp into a object
converts a to a proposition based on the provided and
converts a double to a proposition s
converts a straight line to a object .
sets the milliseconds for the given time .
add a new shard to the shard
remove the shard of the given shard
returns the first valid valid letter of the given list of tokens .
get all locators from the given list of
process the input list into a list of
instrument the given { @link threadpoolexecutor } into a { @link weakreference } .
returns the unique unique unique id of the set .
get the unique unique unique id for this .
returns the host names of the host .
returns the number of connections in the current host .
serializes the { @link } to the { @link } .
returns the query string for the query string .
returns the glob pattern .
/ *
get the { @link } for the given accumulo metric .
parse the options for the options .
/ * ( non - javadoc )
{
{
gets the media for a specific media type .
{
/ * ( non - javadoc )
{
returns the { @link } for the given { @link } .
gets the 98 - level of the kvstate instance for the given { @link } .
get all metrics for a given query
get the name of the query string for the given name .
this method is used to create a query string for the query string .
starts the {
stop the current thread .
computes the average of the input from the input to the input .
compute the median of the input data .
/ * ( non - javadoc )
returns true if the given service is a .
returns true if the given service is a valid .
checks whether the given slot is the same as the given slot .
sets the slot to the given slot .
/ * ( non - javadoc )
returns the range of ranges that the given is the minimum of the ranges .
compute the range of ranges to the given range .
returns the range of ranges that are intersecting the specified range .
insert a new collection
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
insert a batch of metrics into a new list of metrics .
/ * ( non - javadoc )
get the for a particular range of the given media type .
get the values of all known timers in the given list of { @link } .
/ * ( non - javadoc )
converts a { @link } to a { @link map } of { @link } s .
returns the value of the given {
returns true if the given { @link } is a { @link } .
{
returns the for the given component .
get the list of all the query parameters for the given query .
gets the metadata for a given metadata .
get the for a given datatype
get the range of data for a given range
get the for the given accumulo type
/ * ( non - javadoc )
returns a serializer for the given type .
returns whether the given content type is valid .
checks whether the given accept headers are not included in the accept header .
insert a batch of records into a batch
checks whether the given { @link } is valid .
marks the given time period to be sent to the client .
handles the download of the file .
{
{
/ * ( non - javadoc )
returns the port to the port of the current connection .
gets a new extractor instance .
checks whether the given is a valid .
gets the system property .
checks whether the given version is a valid version number .
checks whether the given string is a valid java . net . net .
checks whether the given version is a valid version .
get the port of the port of the port .
starts the download server .
stop the engine .
start the current execution .
stop the current state .
split the state of this task .
suspends the current state of this instance .
resume the {
returns the time for this time period .
以 conjunction 为分隔符将数组转换为字符串
checks the version of the .
executes the given command line arguments and executes the given command line arguments .
sets the list of active plugins .
returns the list of command line arguments for the given command line .
enable / disable the given plugin .
disables the given command line and exits the command line .
sets the compression timeout to the given destination url .
copy a url to a file .
copy the contents of the given inputstream to the given destination file .
{
create a plugin from a plugin .
creates a new that will be used to build the .
adds the given list of servers to the server .
adds a new server to the server .
connects this peer to the remote server .
closes the given connection .
closes all peers in this cluster .
transmits a message received from the given message payload .
generates a new message for the given message .


/ * ( non - javadoc )
get the attribute list .
get the attribute list .
sets the value of the parameter object . this method is used to create a new instance of the attribute value . this method is used to create a new instance of the api .
/ * ( non - javadoc )
<p > . < / p >
<p > . < / p >
<p > . < / p >
<p > get the value of the <code > / code > object on the local <code > / code > and <code > / code > . < / p >
gets the value of the <code > / code > property . < / p >
gets the value of the <code > / code > object . the value of the <code > / code > is converted to a <code > / code > .
main method .
creates a new { @link } .
create a instance
main method .
creates a new {
creates a new .
creates a new { @link } for the given { @link } .
creates a new image for the given image .
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
<p > get the value of the <code > / code > object on the local <code > / code > . < / p >
<p > set the value of the <code > / code > attribute to the desired state . < / p >
change the value of the <code > / code > header . the value of the <code > / code > field is updated . the <code > / code > field will be used to change the value of the <code > / code > value . < / p >
<p > set the value of the <code > / code > property . < / p > <p > the local interface is used for the <code > / code > <code > / code > <code > / code > <code > / code > . < / p >
<p > set the value of the <code > / code > attribute . < / p >
set the value of the <code > / code > property . the <code > / code > field will be used to create the <code > / code > and the <code > / code > parameter . the <code > / code > field will be used to create a new instance . the value <code
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( matched value or <code > null< / code > ) . the value of the <code > / code > parameter is used to wrap the value for the <code >
<p > set the value of the <code > / code > attribute to the <code > / code > parameter . < / p >
<p > set the value of the <code > / code > attribute to the <code > / code > parameter . < / p >
<p > set the value of the <code > / code > attribute on the <code > / code > attribute . < / p >
<p > set the value of the <code > / code > attribute to the <code > / code > parameter . < / p >
sets the value of the <code > / code > property . < / p >
<p > set the value of the <code > / code > attribute to be used for the <code > / code > parameter . < / p >
<p > set the value of the <code > / code > attribute to the <code > / code > parameter . < / p >
<p > set the value of the <code > / code > attribute to be used for the <code > / code > parameter . < / p >
main entry point for the main entry .
create the
create a new
initialize the .
write the given list of { @link } s to the given output stream .
writes the given list of stdout to the output stream .
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( <code > / code > ) . < / p >
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( <code > / code > ) . < / p >
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( <code > / code > ) . < / p >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
checks whether a string representation of a string is a numeric value
parse a string into a number of milliseconds .
parse a string representation of a string into a number of milliseconds .
print digits to decimal digits .
prints the number of digits to the given value .
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( <code > / code > ) . < / p > <p > for example : < / p > <ul > <li > <p > <code > / code
creates a new document for the given document .
creates a document from a document .
creates a marshaller for use in the xml file .
creates a new xml reader from a string .
gets the context context .
sets the value of the <code > / code > to the <code > / code > . <p > the value of the <code > / code > is used to hold the value ( local value ) for the <code > / code > . < / p > <p > for more information about the event
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( <code > / code > ) . < / p >
sets the value of the <code > / code > to the <code > / code > . generally only used for testing .
sets the value of the <code > / code > to the <code > / code > . the <code > / code > is used to set the value of the <code > / code > to the <code > / code > . the <code > / code > is performed on the <code >
get the property value for the property value .
reads xml from xml file .
reads the xml stream from the given inputstream .
prints the error to the console .
sets the value of the <code > / code > property . the <code > / code > is used to hold the value values . < / p > <p > for example : < / p > <pre > { ( value value value ) override <code > / code > { @link } < /
get the attribute list of the specified <code > / code > .
checks whether the given document is a document
creates a new with the given .
/ * ( non - javadoc )
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( <code > / code > ) . < / p > <p > for example : < / p > <ul > <li > <p > <code > / code
get the object associated with this object .
get the object associated with this object .
get the object associated with this object .
get the object associated with this object .
get the value of the <code > / code > for this <code > / code > .
get the object associated with this object .
get the object associated with this object .
get the attribute list .
setter for

creates a new dom document from the given xml file .
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( <code > / code > ) . < / p >
creates a new xml document from a dom document .
/ * ( non - javadoc )
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( <code > / code > ) . < / p >
returns the country for the country .
converts the given string to a string .
returns the country for the country .
converts the given string to a string .
returns the country name for the given country name .
translates a country to a country - string .
get the object associated with this object .
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( <code > / code > ) and the value of the <code > / code > parameter . < / p >
sets the value of the <code > / code > for this <code > / code > .
returns the value of the <code > / code > property . the <code > / code > is registered with the <code > / code > parameter . < / p >
sets the value of the <code > / code > property . the value of the <code > / code > is used to hold the value ( updated ) value . the value of the <code > / code > parameter is used to wrap the value for this object . < / p >
main entry point for the main program .
reads the file from the file .
reads the contents of the given inputstream into the given stream .
prints the log console .
sets the value of the <code > / code > property . the local value will be updated to the container . < / p >
<p > set the value of the parameter value on the instance . < / p >
<p > get the <code > / code > for the <code > / code > parameter . < / p >
main method .
creates a new .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds the given dom node to the document .

remove the element from the document .
main entry point for the specified resource .
get the content of the object . the value is defined as a list of objects .
get the names of all fields that are not defined in the field .
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( <code > / code > ) . < / p >
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( matched value ) . < / p >
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( matched value ) . < / p >
<p > get the value of the <code > / code > object on the local <code > / code > and <code > / code > . < / p >
create a new container container with the specified dwr container .
<p > set the value of the parameter value on the instance . < / p >
<p > get the value of the <code > / code > object on the local <code > / code > and <code > / code > . < / p >
sets the value of the <code > / code > property . the <code > / code > is used to hold the value of the <code > / code > property . < / p >
reads the xml content from the given inputstream .
prints the xml declaration to the console .
get the object associated with this object .
handles the given event .
dumps the contents of the given writer .
get the value of the specified property in the given string .
parse the record .
prints the csv file to the list of strings .
sets the value of the specified string to the specified value .
sets the value of the property .
reads the xml content from the given inputstream .
prints the xml declaration to the given output file .
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( <code > / code > ) . < / p >
reads the xml content from the given inputstream .
prints the xml representation of the given { @link } .
get the object associated with this object .
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( <code > / code > ) . < / p >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
set the attribute attribute of the attribute .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
sets the value of the event to be used for this event . <p >
gets the value of the <code > / code > property . < / p >
gets the value of the <code > / code > property . < / p >
<p > set the value of the parameter value on the instance . < / p >
called from the () method .
/ * ( non - javadoc )



deletes the document .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @link } with the { @link } annotation .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link java . util . calendar } with { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
main method .
creates a new .
create a to be used by the .
creates a new .
main method .
creates a new database .
create a .
creates a product type that is a product of the product that is being created .
creates a new instance for the given type .
creates a row for a given timestamp .
writes the given text to the output stream .
creates a new document for the given document .
reads the xml content from the given inputstream .
prints the to the console .
get the object associated with this object .
get the object associated with this object .
set the value of the <code > / code > property . the event is updated to be used for the <code > / code > parameter . < / p >
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( <code > / code > ) . < / p >
get the value of the attribute associated with the specified attribute .
gets the value of the local global global global parameter ( the local global global global ) for the specified <code > / code > .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
set the attribute attribute of the attribute .
this method is called from the () method .

main method .

writes the given treewriter document to the given output stream .
sets the value of the event to be used for this object . this method is used to create a new instance of the api .
sets the value of the event to be used for this object . this method is used to create a new instance of the api .
sets the value of the event to be used for this object . this method is used to create a new instance of the api .
<p > lists the <code > / code > objects for the <code > / code > and <code > / code > objects . < / p >
sets the value of the <code > / code > parameter . the value of the <code > / code > is used to hold the value ( matched value ) . < / p > <p > for more information about the <code > / code > calls on <code > modifycachecluster< / code > is used . <
create a new document document
get the object associated with this object .
<p > get the value of the <code > / code > object on the <code > / code > and <code > / code > . < / p >
<p > get the value of the <code > / code > object on the local <code > / code > and <code > / code > . < / p >
<p > get the value of the <code > / code > object on the <code > / code > and <code > / code > . < / p >
<p > get the value of the <code > / code > object on the local <code > / code > . < / p >
main entry point for the main program .
reads xml from xml file .
reads the xml content from the given inputstream .
prints the output file to the console .
prints the xml file to the console .
get the attribute list .
get the object associated with this object .
set the value for this object .
create a new xml document from a xml document .
/ * ( non - javadoc )
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > and the values of the <code > / code > value . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
downgrades the version of the given iced object to the current version .

sets the value of the <code > / code > to the <code > / code > . the value of the <code > / code > is used to hold the value ( specified in the <code > / code > ) . < / p >
get the object associated with this object .
get the object associated with this object .
get the object associated with this object .
get the object associated with this object .
get the object associated with this object .
get the object associated with this object .
get the attribute list .
get the object associated with this object .
sets the value of the property .
creates a document from a document .
main entry point .
create a new record .
writes the given file to the output file .
set the attribute attribute of the attribute .
<p > get the attribute label for this <code > / code > . < / p >
parse the given file and returns the resulting parser .
print a file .
/ * ------------------------------------------------------------
prints the record for this record .
replace the string with the given string .
creates a new document for the given document .
creates a document from a document .
{
parse a string value .
parse a date string from yyyymmdd .
parse a string representation of the type of the given string value .
parses a value to an orientation value .
parse a short value from a { @link string } .
converts a string into a { @link } .
parse a string representation of a { @link string } value .

parse a string representation of the given type .
print value in boolean .
prints the value of the given string to the output stream .
validates a string value .
prints a date to a string .
prints a number of milliseconds in the given string representation .
print a value to a string representation .

print a decimal representation of the decimal representation .
print a string to the given uri .
prints a number of digits to a string .
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( <code > / code > ) . < / p >
cleans up the node list .
counts the number of occurrences of the given node in the given string .
counts the number of occurrences of the given xpath expressions .
gets the root element for the root element .
creates a new document builder with the given namespace and style .
creates a document with the given xml document .
create a document from a string document .
creates a dom document from the given xml document .
create a document from the xml document .
creates a dom document from a jsoup xml document .
create a document from the given document .
creates a document from a file .
create a document from a given document .
creates a new xpath expression for use with the xpath specification .
creates a new xpath expression for a given document .
creates a new xpath expression for a given namespace uri .
prints the tree nodes .
replaces the given dom node with the given namespace .
replace a dom node with the given namespace .


writes the given document to the given file .
writes the given document to the given file .
writes the xcal document to a stringwriter .
writes the xcal document to the writer .
write the given dom document to the output stream .



create a new document
called when the is being processed .
{

handles a dom node
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
sets the value of the property .
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
main method .
creates a new instance of the specified { @link property } .
create a new project file
create a new instance of the
create a new project - based project .
generates a random string with a random number generator .
generates a random string of length of a pseudo character .
returns a random string that represents a string of length of characters .
<p > get the value of the <code > / code > object on the <code > / code > and <code > / code > . < / p >
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( matched value - to - the value ) . < / p >
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( matched value - to - the value ) . < / p >
gets the value of the specified attribute . <p >
sets the value of the <code > / code > parameter . the value of the <code > / code > parameter is used to hold the value ( <code > / code > ) . < / p >
get the object associated with this object .
creates a new document that represents a document .
creates a new document from a trax source .
/ * ( non - javadoc )
set the value of the <code > / code > property . the <code > / code > is used to hold the value ( <code > / code > ) for the <code > / code > property . < / p > <p > the <code > / code > property of <code > /
sets the local location of the object . <p > this method is used to set the object values for this object . < / p >
sets the local value of the <code > / code > property . the <code > / code > is used to hold the value ( local local local date ) of the <code > / code > property . < / p > <p > the local local local local local global global component will be used for the
called when the is being processed .
/ * ( non - javadoc )


sets the value of the <code > / code > parameter . the value of the <code > / code > is used to hold the value ( specified in the <code > / code > ) . < / p >
<p > set the value of the <code > / code > to the <code > / code > . < / p >
sets the value of the <code > / code > to the <code > / code > .
<p > lists the attribute values for the field . < / p > <p > this method is called by the <code > / code > method on the <code > / code > parameter . < / p >
main method .
creates a .
create a from the given
create a from the given
create a new project resource .
create a new project with given friends
create a project using the given project selector .
create a new project with given friends
create a project with given project and project .
this method is called from the () method .
/ * ( non - javadoc )

remove the element from the document .
checks the document referred to by the given document .
gets the value of the <code > / code > object . the <code > / code > is used to determine the value of the <code > / code > object on the <code > / code > . the <code > / code > is used for the <code > / code > <code >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
sets the value of the <code > / code > to the <code > / code > parameter . the attribute value is used to hold the value ( matched value or <code > / code > ) . < / p > <p > for example : < / p > <p > <code > / code >
<p > get the <code > / code > for the <code > / code > parameter . < / p >
gets the value of the <code > / code > for the <code > / code > parameter . the attribute values are added to the list of available space . < / p > <p > the <code > / code > method is used for exporting . < / p >
<p > get thing on the instance of the <code > / code > parameter . < / p >
gets the image .
main method .
create a new
creates a new .
<p > set the <code > / code > object on the local event . < / p >
<p > set the value of the <code > / code > property . < / p > <p > the local value is updated to the <code > / code > property . < / p >
<p > set the value of the <code > / code > property . < / p > <p > the <code > / code > field is used to wrap the value ( s ) to the value of the <code > / code > property . < / p > <p > this method is used to set
<p > set the value of the <code > / code > attribute to the <code > / code > parameter . < / p >
<p > set the value of the <code > / code > attribute to be used for this <code > / code > . < / p >
<p > set the value of the <code > / code > object on the service . < / p >
sets the value of the <code > / code > property . the <code > / code > property is set to <code > true< / code > and the <code > / code > property is set to <code > true< / code > and the <code > / code > property is set to <code > true<
<p > get the <code > / code > for the <code > / code > parameter . < / p >
sets the value of the <code > / code > property . the <code > / code > is used to hold the value values . < / p > <p > for example : < / p > <p > for example : < / p > <p > for example : < / p > <p > for example
creates a new xml document from the xml document .
reads the xml content from the given inputstream .
prints the output of the given treewriter node to the console .
sets the value for this project .
set the attribute attribute of the attribute .
called from the () method .
/ * ( non - javadoc )

remove the child from the dom .
check the given element and the root element .
handles the document
checks the element of the document .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
sets the value of the <code > / code > to the <code > / code > . <p > the value of the <code > / code > is used to hold the value ( local value ) for the <code > / code > . < / p > <p > for more information about the event
creates a new { @link } from the given { @link } .
{
creates a new document for the given document .
/ * ( non - javadoc )
<! -- begin - user - doc -- > <! -- end - user - doc -- >
creates a document from a document .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
sets the value of the local field . <p > the value of the value is converted to a local value and the local value will be updated . the value <code > / code > is used to hold the value ( matched value or <code > null< / code > ) and the value of the value ( specified by
reads xml content from xml stream .
prints the xml declaration to the console .
sets the value of the <code > / code > property . < / p >
create a new record record in the record
set the value of the <code > / code > parameter . the <code > / code > parameter is used to create the local set of local properties .
set the value of the <code > / code > parameter . the value of the <code > / code > argument is set to <code > true< / code > and the value is updated . the value of the <code > / code > parameter is used to wrap the value ( s ) . < / p
creates an xml document from an xml document .
creates a new document from an xml document .
creates a new document for a document
creates a new document for the given document .
create a dom element with the given name and name .
get the object associated with this object .
<p > set the value of the parameter value on the instance . < / p >
<p > set the value of the parameter value on the instance . < / p >
reads xml from xml file .
reads the xml content from the given inputstream .
prints out the changelog debug .
prints the log file to the log file .
gets the value of the <code > / code > to be used for the <code > / code > and returns the value of the <code > / code > . the event for the <code > / code > is used to create the event . the attribute list will be visible and returned by the returned
> > > > > > > > / code >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
gets a list of uri that use the provided attribute list .
reads the xml content from the given inputstream .
prints the given {
sets the metadata for the specified field . <p > the metadata will be used to hold the value ( updated ) for the specified attribute value . < / p > <p > for example : < / p > <pre > { @code > = new event () ; . () ; < / code >
sets the list of additional properties to be used for this component .
set the property value .
main method .
creates a new .
creates a new object .
writes the document to the given file .
creates a new document for the given document .
called when the is being processed .
/ * ( non - javadoc )
creates a new node from the document and adds the element to the document .
adds the document to the document .
handles the dom node and the root element node .
remove the given dom document from the document .
creates a new node in the document .
creates a new { @link } instance from a { @link } .
prints the output stream to the output stream .
creates a new xml document from a trax xml .
converts an { @link } to an { @link } .
called when the is being processed .


get the object associated with this object .
creates a document from a document .
get the object associated with this object .
get the object associated with this object .
get the status of the object .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
sets the value of the <code > / code > parameter . the value of the <code > / code > is used to hold the value ( specified in the <code > / code > ) . < / p >
get the object associated with this object .
get the object associated with this object .
sets the value of a key in the map .
creates a new { @link } for the given host and port .

creates a new { @link } for a given host and port .
creates a replication host for a cluster .
creates a new cluster master for a given host master host and port .
writes a byte [] to the output stream .
send a command to the given {
reads a response from the given inputstream .
checks whether the given class implements interface class implements interface class .
get the generic type of the given class .
get the class names of all fields that are declared in the class .
get the names of the class names for the class name .
returns the class names of the given class .
get the getter method name for the given method .
returns the object with the given class .
get the constructor for a given class .
returns the method with the specified method name .
循环向上转型 并强制设置为可访问 .


returns all superclasses of the class of the given class .
converts an object to a string representation .

returns the class name of the given class name .
detects file in the url .
reads a properties file from a file .
returns the value of the given source source .
returns the { @link gvrcontext } for the given source { @link } .
returns the of the given .
returns the for the given result .
generate a new rsa key pair .
encrypt the given string in the given string .
解密
generates a new { @link keypair } from the given algorithm key .
decrypts a string with rsa key
checks whether the given exception is a java exception thrown by the given exception .
writes the given file to the given file .
returns the next character in the current index .
detect pict encoding of a given inputstream .
sets the bindings for the given bindings .
binds the given namespace prefix to the given namespace uri .
removes a namespace from the namespace namespace namespace prefixes .
get the url of a file .
returns all classes in the class hierarchy .
checks whether the given interface is a class or interface class .
parse the given mime type from the given mimetype and returns the mime type .
parse a string into a list of mime types
sorts the given list of { @link } s into a list of { @link mediatype } s .
detect text from the stream .
checks if the given input stream is not valid .
checks if the tag is a valid tag .
returns the comment line .
consumes a line of the line and advances it as a string .

calculates the number of days in the given calendar .
returns the date time of the current date .
returns the date time of the current date .


returns the current time zone for the given date .





parse a string from a string .


get the hour minutes of the date .
returns the time string for the given time string .
returns the date formatted date in iso 8601 format .
get the relative path of a given string representation .
get the day of the time for a given date .
parses the given time formatted string .
gets the next day .
gets the next time for a given date .
returns true if the given string is a valid year .

get the date - time zone specification .
checks whether the given date is a weekday .
get the week of the week
get the date time of a date
get the date / time string from the given date
get the approximate days between two dates .
gets the date - time string from the given string .
get the random string .

initialize the location of the file .
initialize the location of the file .
{
/ * ------------------------------------------------------------
adds an iterator to the list of elements .
send a message
creates a new { @link } for the given { @link } .

add a class to the class .
add a class to the class .
filters out all the files that are not included in the directory .
filter files from the exclude directory
build the { @link } .
/ * ( non - javadoc )
<p > . < / p >
/ * ( non - javadoc )
sets the operator to use for this condition .

returns a string representation of the given length .


returns all classes that are defined by classes that are available on the classpath .
returns the class loader of this class loader .
get the classes that are compatible with the given package .
returns the classes that are compatible with the given package .
find the package for the given package name .
find the package for the given package name .
create a new { @link } from the given { @link inputstream } .
creates a new { @link org . apache . flink . api . common . } .
find the first matching input stream for a given string .
find the first matching input stream for a given string .
prints the stack trace of the given stack trace .
<p > . < / p >
add a option to the list of the option .
add a option to the option .
add a option to the form of a choice .
add a option to the option .
adds a option to the form of the option .
adds a option to the option .
parse the given string .
open a reader to the specified url .
prints the stack trace of the stack trace .
build a stack trace stack trace .
get the stack trace of the stack trace .
invoke the given throwable .
debug method for debug message .
reads a annotation from the given field .

get all fields annotated with the given annotation .
compare two strings .
returns the first hash of the given string array .

converts a string to a string .
reads a character from a reader .
creates a new instance of the specified class name .
creates a new instance of the given class .
get the instance .
detects the next character in the stream .
returns the proxy object for the given proxy type .
compare two dates .
converts a date into a string .
sets the value of the specified value . <p >
generates a file from a file .
add a package to the package list .
scan the class for the class hierarchy .
returns true if the given { @link file } is a valid extension .
/ * get the file id for the given profile
converts a { @link bitmatrix } to a { @link bitmatrix } .
decode the file name to the given path .
add the current log record to the log .
called by the operation .
/ * ------------------------------------------------------------
invoke the method on the given instance .
invokes the method on the instance .


set the next calendar in the order of the specified field .
deletes all children from the given directory .
copy files from src to dest .
copies a file to a src file .
checks if the collection is a collection of values .
processes all properties of the given properties file .
processes the given { @link } and adds it to the map .
processes the property map for the given annotation .
returns the proxy annotation for the given class .
creates a class for the given annotation .
returns the encoding of the encoding from the encoding .
checks whether the given method is a method object .
sets the target object to be used by this class .
draws the class .
resolves the class name of the class with the given name .
find the method that matches the given method name .
invokes the method on the target method .
returns the type of the given type .
converts a character to a string .
converts a byte array to a hexadecimal string .
get the file type of the file
serializes an object to a byte array .
deserializes the byte array from the byte array .
prints the stack trace of the given object .
converts an object to a string representation .
detect file from a stream .
checks whether the given string is a valid string .
returns the url of the given url .
returns the child elements of the given <code > / code > .
returns a list of child elements found in the given element .
returns the child of the given <code > name< / code > element .
returns the child element of a child element .
returns the child elements of the given element .
returns the text value of the given element as a string .
returns true if the given string is a valid node name .
returns true if the given string matches the given name .
returns true if the given node is a qualified name .
/ * private void ( int
renders a table in the table .
removes the given string from the given string .
append a string to a string .
converts a string to a string .
converts an array of strings to a string .
<p > . < / p >
checks if the string is empty .

returns the number of webelements in the given list of webelements .
sets the string size of the string to the specified length .

sets a uri parameter with the given name .
sets the request body .

get the classes for the given package name .
sets the delegate to the queue .
add a new entry to the reference .
wait for the current thread to finish .
checks if the file is a valid file .
returns the mime type of the given file .
returns the files in the given directory

read a file from the given inputstream .
returns the url of the given file if it is not found .
read a file from a file .
reads a string from a file .

reads the contents of a byte array from the stream .
reads the contents of a file .
writes a byte array to a file .
writes a string to a file .
serializes the given { @link java . io . pojo } to a java object .
resolves a string representation of a javascript string .
find the package name of the package .
import imports into packages .
checks if the class is a class
find all interfaces that are given by the given interface .
checks the given class name and version of the given class .
checks if the given class name is a valid class name .
check if the given {
checks if the given {
gets the graphviz representation of a given pom .

main method to run the demo .
/ * ( non - javadoc )
enable / disable the given transformer .
disable the given transformer .
returns the time for the given time
convert the qualified name to a qualified name
start a namespace .
end the element with the prefix .
add the given callback to the callback .
sets the state of the given result to the result .
called when a failure is received .

encrypt a message .
returns a path that contains the contents of the given path .
returns a map of path separators from the given path .
returns a map of filename names to the file name .
returns the default name for the given name .
<p > . < / p >
reads a boolean value from the stream .
checks whether the given { @link file } is a valid xsd file .
reads the file contents from the file .
remove line from a line

/ *
generates a random key .
returns the amount of time that the current time is the time zone .
generate code to generate a hash of the key .
returns the minimum number of times the given number of days .
parse a tree .
gets the path search path .
returns the list of all the elements in this list .
lists all the elements of this file .
list files in the given list of files .
creates a new { @link objectmapper } for the given { @link } .
convert a { @link com . ibm . jaggr . core . io . } to a { @link } .
sets the set of the to be used by the .
adds a set of classes to the map of the given class .
returns the set of registered {
checks whether the given is a local thread .
creates a namespace prefixes that can be used to create namespaces that resolve the namespace namespace prefixes .
create a new jackson objectmapper
encode a message as a string .


add a class to the class .
determine whether the file is a directory
create a changelog factory for the given plugin configuration .
returns true if the text matches the text .
gets the color of the spinner
set the values of the text to be used for the text .
get the color of the color that are the color of the cell .
sets the text size of the text to the text .
returns the closest bounds of the given bounds .
cleans the path .
main method .
returns the for the current server .
returns the names of the keywords that are not specified in the ldap - order .
this method is used to extract the user from the given string .

returns the first argument of the given keyword string .
get the keyword string for the given keyword
main method .

adds a class name to the server .
adds a new <code > / code > to the server .
stop the server .
start the port .
configure logging .
removes all the entries from the map .
converts a json file to a json file .
convert a file to json file .
converts inputstream to json stream .
converts the given properties object into a string representation .
converts the given map property to a string representation .
convert a map of properties to a json object
convert this map to a string representation of the given properties object .
converts the given properties object into a json string .
sets the color of the given color .
sets the state of the given list of color colors .
initializes the background .
returns the shadow circle radius for the shadow .
creates a new builder for the specified builder .
creates a new builder based on the supplied properties .
finds the issuer in the certificate .
creates a new builder for the client .
{

/ *
substitutes template variables for a template
processes the and adds it to the list of asciidoc processors .
get the title for the specified string .
adds a html frameset html to html .
replace the content of the template .
returns the relative path of the given folder .
copy from directory to directory
add a new
checks the path to use for the path .
wraps the given view in the recyclerview and sets the position of the view .
fades the current progress bar . <p >
fades the given animation . <p >
calculates the width of the percentage of the width of the specified width . <p >
if the view is a view the color is set to the maximum width .
gets the intent intent .
launch the activity .
get a list of award for a given changeset
returns a for the given type .
sets the connection timeout for the connection timeout .
sets the date format for this date .
/ * ( non - javadoc )
deserialize a response body from a response .
download file from an { @link } .
executes the query with the given parameters .

create or update the for the given
update the data for the data .
exports a export type for a phone number .
gets a export list of all the tags for the export .
gets the state of this state .
create a new host token with the given token .
sets the client credentials for the client .
creates a for the given file .
gets the parameters .
get the list of all the for a given user .
bind a { @link } to a { @link } .
{
merges the given { @link graph } with the given { @link graph } .
adds a new { @link } to the given { @link } .
writes the given { @link } to the given { @link } .
adds a new to the list of objects .
close the connection .
executes the given query .
visualizes a node with a given node
create a new {
create a new dataset graph
executes the given command line arguments and returns the result .
{
{ @inheritdoc }
/ * ( non - javadoc )
sets the path to the path .
executes the given command line and returns the result .
executes the command on the command line .
/ * ( non - javadoc )

resize the given { @link } .
apply the given parametric to the given .

sets the of the command .

draws a text region with the given text .
returns the image file for the given file .
adds a file to the file .
returns a { @code } with the quality of the quality number of quality digits .
sets the specified duration of time to the specified { @code long } value .
returns a new { @code } with the specified { @code name } and the { @code httpmessage } and { @code null } if the registration is not already in the { @code } .
returns the value of the named field .
parse the given object arguments and returns the list of arguments .
prints usage information for the given target .
extracts a time unit from a time unit .
parse the given target object with the given target object and registers them with the target class .
zips the given zip file to the given directory .
execute a url .
execute the given { @link } .
execute the supplied file .

sets the current slider .
execute the worker thread .
returns true if the given propery is not a file .

replies if the given image is a picture .
returns true if the given class is a valid java class .
<p > make a new <code > / code > . < / p >
checks whether the given target is a valid html code point .
executes the task .
sorts the specified list by the specified depth in the list .

create a new instance of the specified class
renders a template .
creates a file for the given file .
checks whether the screen bounds are within the bounds of the screen .
returns the horizontal box of the given element .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > . < / p >
create a { @link } instance for the given { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
poll the queue queue and returns the message .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the manifest file for the given file .
find the first executable matching the name of the given name .
find the executable executable by name .
find the first file found in the file or directory .
checks if the given executable name is matched .
checks if the executable executable matches the given name .
load the library from the specified library .
finds a file with the given name and file name .
devuelve el code below
find the file with the given name .
returns the temporary directory if it exists .
{
{
creates a new { @link } with the given parameters and runtime values .
returns a new { @code } with the given values .
log a trace log .
log a message at trace level .
log a message at the trace level .
log an informational message .
log a message to the specified trace message .
log an informational message with the given message .
log a message with the specified trace arguments .
log a log message with the log level .
log a message at debug level .
log a message at debug level .
log a message at debug level .
log a message to the log message .
log a message at the specified debug level .
log a message with the specified message .

log a message at debug level .
log an info message .
log an event with a message .
log a message to the specified {
log an informational message with the given message .
log a message with the specified message payload .
log a message with the specified message .

warn the message to be used to warn messages .
warn the event .
warn the event .
warn .
logs the message to the specified {
warn the message at runtime .
warn the message to be used for the message .

logs a message at the given error level .
logs a message at the specified warn level .
logs an error message .



log a message with the specified level .
log a list of all the values in the given list of all the values in the given list .
creates a new { @link } from the given { @link string } .
creates a new array with the given values .
creates a string array from the given array of strings .
creates an array of values from the array .
extract the { @link } from the given { @link map } .
returns a new array containing all the occurrences of the specified number of elements in the specified array .
serialize a string to a json string .
serialize a string to an event .
add a compiler to the end of the list .
>


write a list of keys to the jsongenerator .
writes the given jsongenerator to the given { @link } .
serializes the given jsongenerator to the given jsongenerator .
creates a context - based context - context - defined template .
returns true if the passed object is a valid java type .
returns a logger with the given class .
returns a {
returns a logger with the given name .
get a { @link logger } that is used to create a { @link timeunit } of { @link timeunit } .
returns the { @link } for the given { @link timeunit } .
sets whether the filter is enabled for the given filter .
sets the filter to be used by the filter .
creates a map of context - value pairs from the context context .
/ * ( non - javadoc )
checks whether the marker list is a marker
checks whether the marker event is a marker .
checks if the marker is a marker
checks if the marker is a marker


check if the passed marker is a marker
converts a log object to a log object .
serialize event to a string representation .
build the string representation of the given string .

creates a message from the given event .
creates a new context for the given context .
creates a new context for the given context .
returns the formatted message as a string .
serialize the given .
serialize a string into a json string .
get the logging message for the given logging method .
serialize the given string to a json string .
serialize the given string to a string representation .
creates a new { @link } with the given { @link } .
creates a context - based access context .


encode the given { @code <f } as a { @link map } .
encodes the given { @code } as a { @code list } .
encodes the given value into a { @link stringbuilder } .
write a new { @link } to { @link } .
{
initialize the .
create a database .
checks the preconditions for the given index .
opens the { @link } .
count the number of selected items in the given class .
initialize the validation .
register a given { @link } to a given { @link } .
registers a serializer for the given serializer .

save the attribute value .


extract row from row .


checks if the cell attributes are cell that are not html or not .
checks if the given string is a valid html table .
sets the hidden columns for the given row .
sets the row of a sheet
sets the row .

{
/ * ( non - javadoc )
{
{

/ * ( non - javadoc )

/ * ( non - javadoc )
serialize this object .
recovers the from the given list of rows .
add a new row to the given unit .
sets the to use for this .
gets the for this .
returns the n<sup > th< / sup > of the formula formula .



handles a tab tab .
<p > . < / p >
exports the file to the file .
saves the current user to the current user .
submits the submit process to the server .
populates the given component by looking the renderers to be used for the current row .
returns the current {
reads a stream from the stream .
{
{
returns the facescontext .
get the current .
returns the cell cell that is the cell of this cell .
/ * ( non - javadoc )
gets the { @link } for this handler .
gets the parent of this .
converts a { @link } to a { @link } .
gets the first { @link } for the given { @link } .
convert the given into a .
returns the list of for the given list of .
returns a {
returns the list of rows in the current row .

this method is used to create a new .
finds the of a given .
create a new instance .
create a new { @link } for the given { @link } .
checks if the given array is a valid .
create a from the
> >
replies the color that is defined by the concentric borders .
/ * ( non - javadoc )
get the color of the style of color triplets .
get the color of the

get the from the
gets the current value of the specified type .
convert the given { @link } to a { @link } .
gets the index of the first time of the specified name .


returns the component name for a component .
populate the xml - string for the given component .
matches the given object name and type of the given object .
sets the property with the given name .

sets up the attribute of the given .






creates a from the
get the title for a chart
set the style of chart .
creates a chart chart with the given chart and extent in the chart area .
creates a chart chart with the given chart and orientation
creates a chart chart with the given chart and setting the values of the chart in the chart and the chart .
creates a chart chart with the given chart and setting the data for the chart .
set the style of the chart
set the style of the chart
sets the style of chart to chart .
creates a from the
populate the
returns the parent of the given parent .
initialize the .

transform a collection of { @link } to a collection of scalars .
returns the name of the row in the given row .



returns all the for a given
changes the map of key - value pairs .

sets the column widths for the given column index . <p >
sets the column family .
get the row number row of the given row
sets the row of the row .
find all the legend ( ) of a single column .
find the list of child rows for a given list of rows .
find item by index
creates a new { @link } for the given { @link } .

checks whether the given row is a valid .
returns the full name of the given .


returns the split region to the given
add a list of strings to the list of rows
build a from a list of

build a map of the configuration parameters for the build configuration .
get the
build a from a

build a sheet from a sheet
checks if the given row is a {
initializes the sheet .
build a list of {
build a sheet from the configuration
checks whether the given list of the given command is the list of the given list of { @link } .
set the list of child nodes for the given command .
checks whether the given list of command termination is the same as the command line .



build a list of from a list of .
processes a string and adds it to the list of the given cell .
process a
move a comment to a cell
create a new
build a map of attributes for the given attribute names .
get the from the given sheet
sets the for the given sheet .
sets the and sheet .
sets the header .
adds a row to the list of all the rows in the table .
deletes the row row
removes all the occurrences of the given list of numbers .
find all the sheet names for a given row
get the command name from the command line

delete the given collection of objects .



insert a new row into the dictionary .
evaluate the expression .
{
evaluate a formula string .
returns true if the given string is a valid .
evaluate the expression .
create a new comment with the given comment .
evaluate the script with the given expression .
remove a row from a sheet
remove a row from a sheet
remove a row from a cell
remove a list of rows from the list of rows .
load a string from the .
load a row from a column

/ * ( non - javadoc )



returns the cell type string from the given cell .






copy a sheet from the given source to the given destination size
copy row from given

copys a cell to a cell .



create a new .
method to generate the from the
gets a from the
get the for a given


returns the cell name for a column in the column specified by the specified column qualifier
returns the index of the first column of the specified column in the given column .


gets the row row index for the given component .
gets the from the .






{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
returns the current context name .
evaluate the expression on the given context and returns the value .
evaluate the expression .
write the contents of the to the .
adds a row to the list of rows .
remove row row from row index .
merge the given map entry .
recovers a row from the given excel sheet .
gets the chart from the chart .
converts a string to a .
creates a chart string from a string representation .


create a map of to the
get the child node of the given .
gets the node id from the given dom node .
writes the given { @code } to the { @code jsonwriter } .
recovers the from the map .
/ * ( non - javadoc )
build a batch of rows for a given row
save funds of the current row ( ) data .
sets the formula of the formula .
{
<p > . < / p >
returns the row of the cell cell that is the cell of the cell .
restores the data from the given data context .
get the last trailing attribute .
returns whether the given { @link } is a valid child .
start a new command line from the start of the start of the end of the list of the given arguments .
sets the row of a row in a row
sets the row s value .
sets the last row of a cell .

build a row
build a for the given row
build a select expression for a given cell .
recovers a from the given sheet
serialize this object to a stream .
deserialize a stream from the stream .
build the
build a list of charts in a list of charts in the chart .
build a chart

returns the for the given list of integrated - related dependencies .
sets the command - line mapping for the command to the command line .
recovers the page for the given {



generates a html style for a given cell
generates a html style for a given cell

add a cell to the cell .
add a cell to the given cell .
returns true if the cell is a cell with the given cell .
checks whether a cell has a cell with the given cell .
gets the pattern pattern .
/ * ( non - javadoc )
returns the current for the current request .
serialize this object .
recovers the sheet from the sheet .



returns the font style of a given font .


converts a cell to a cell string .
converts a cell to a cell .
calculates the width of a row of the specified width .
gets the row height of the last row of the given row height

set the for the given cell .
convert a cell to a string representation

get the style of a cell
get the style of a cell
returns the resource path of the given path .
get the resource as a resource .

removes a prefix from the given resource path .
evaluates the given type by parsing a string representation of a given type .

evaluate the expression against the given expected expression .
evaluate the expression against the given expression .

rounds a double to the given value .
returns the tab type of the tab .
returns the tab tab tab for the tab .
<strong > [ icu ] < / strong > returns the date pattern pattern to the default locale .
returns the default locale for the locale .
returns the default locale for the locale .
sets the alias .
build a list of the from the list of the

add a list of rows to the list .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
checks whether the given string is a valid command - line string .
checks if the given string is a valid method name .
checks if the given string is a valid method name .
checks whether the given string is a valid method name .
checks if the string is a valid java type .
parses the given text into a { @link } .

parses the attributes of a given cell in the given cell .
returns the effective bidi rule text .
find position of the first character in the given string .
parses the attribute names into a map of attributes .
parses the attributes from the sas7bdat file .
parses the attributes of the given attribute in the xml string .
extract the attribute value from the attribute string .

parses the attributes for the given cell .


this method is used to create a new element attribute .
parses a comment comment .
find the position of a string in the given string .
remove a string from a string .



returns the name of the given .

converts a column to a string .







determines whether the given character is a valid .
sets the property with the given name .
compares two cell s order .
returns true if the given <code > / code > is a child of the given <code > / code > .

clear all row
deletes the row from the table .
deletes the row row from the given cell .

/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
refresh the status update to the current status of the current page .
<p > . < / p >
validates a given cell
checks whether a given cell is a valid cell .
validates that the given cell is a valid cell .
checks if the given value matches the cell .
<p > . < / p >
checks whether the current row is a leaf .
<p > checks if the page contains the current page of rows and the current page in the current row . < / p > <p > this method is invoked in case the row is not disabled . < / p > <p > the page row is expected to be in the current row . < / p > <p >
validates the current row to the given cell .
/ * ( non - javadoc )
sets the current row to be used to fill the current row .
refreshes the row for the given cell .
sets the current state of the view .
checks whether the current user is the name of the current page .
clear the cell attribute .
load a csv file from a csv file .
loads the header values from the
fills the

returns the width of the width s width and height .
loads the header from the given excel document
get the width of a cell
clear the .


initializes the tab .
load the data from the .
refresh the data from the sheet .
/ * ( non - javadoc )

find the tab of the tab in the given string .
<p > . < / p >
prepares the tab for the given sheet

saves the current view of the current view to the current view .
sets the row row to the given row .
load a from a
this method is called by to determine the for the given cell .

processes a cell in the .
creates a new .
adds a new row to the list of the given row .
handles the
sets the request status .
returns true if the view is a view of the current view .
recovers a row from the
parses a string value into a { @link } .
parse a string representation of a .
{
checks whether the given dependency is compatible with the given dependency .
returns the bindings for the given bindings .
/ * ( non - javadoc )
handles the { @link } .
adds a new { @link } to the list of unbound members .
returns a new { @link } instance for the given type .
returns a new comparer that adds the given type to the given type .
expand the given { @link binding } for the given { @link org . apache . flink . model . ginjector } .
returns the type of the given {

convert the given array of values to a { @code array } .
returns the method named method named { @code annotation } annotation .
checks whether a class is a class .
returns true if the class is a class or a cglib - class or interface class .
returns the {
matches the constructor for the given constructor and returns the result of the constructor that is accessible to the constructor .
returns true if the two texts are equal .

returns the root node of the given root node .
returns the dependency - type of the dependency type of the given type .
writes the given inputstream to the given output stream .
writes the long value to the writer .
write a string to the writer .
handle the http post request .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the tag name .
adds a binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary binary file .
adds a binary binary binary search binary binary binary binary data to the stream .
add a new bitmap to the file .
adds a file descriptor to the file descriptor .
removes the parameter from the given name .
adds a header to the list of headers .
clear the request .
call this method to run the automation to call this method .
stop the current stop .
bind the current configuration to the current connection .
unbinds the service .
drops the current value of the current control .
stores the current file to the disk .
add a request to the list of redirects for a given url .
add a new image to the list of urls that are used to create a new image .
build a uri for a uri .
creates a string representation of a string using the given charset .
<p > converts an inputstream to a string . < / p >
transfer a { @link inputstream } to a { @link channel } .
consumes the next byte [] from the stream .
get the inputstream from the stream .
returns the inputstream to the given source stream .
checks if the given name is a valid container .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
reads the next byte from the input stream .
reads a byte [] from the specified buffer .
resets the state of this <tt > tcpmasterconnection< / tt > .
{
send the given { @code } to the output stream .
send the header header to the given output stream .
send the content to the given { @link outputstream } .
send the transfer to the given outputstream .
send the header to the end of the header .
send a warning .
send the given {
returns the length of the length of the buffer .
send a multipart upload to a multipart upload .

/ * package
send the response to the client .
sets the date header for the given http response header
sets the date header for the given parameters .
sets the content type header .
close the channel .
/ * ( non - javadoc )
/ * ( non - javadoc )
installs the given filemanager to the specified version .
checks if the directory has the same directory .
returns the cache for the given cache entry .
creates a new {
resets the bitmap to the given width .

validates a keystore .
replaces the scale with scale type and scale .
sets the scale type .
start the job .
stops the checkout .
gets the pendingintent to the current activity .
disconnect the connection to the server .
bind the current thread to the current thread context .
unbind the current device .
notify the listeners that the activity is loaded .
{
called when the response data is available .
resets the state of this listener .
wait for the time to wait for the given time .
adds a new image to the list of images .
removes the from the .
sets the image of the image .
sets the to the image .
sets the text to be displayed on the cheat sheet .
sets the text to be displayed on the view .
hides the of the given view .
shows the given view if it is not already logged .
sets the of this dialog .

find a view of a given view .
find the first matching view matching the given id .
called when the client side is received .
<p > marshals the current position to the current position . < / p > <p > the limit is the limit position and the limit of the number of bytes written . < / p > <p > the limit is the limit position and the limit of the number of bytes written . < / p > <p > the limit
sets the maximum number of bytes to be used .
resets the token .
skips the next character in the input stream .
clear the cache .
populate the image view .
cancels a view of the given image .
creates a new { @link } .
sets the image to the given result set .
sets the image to the given image .
starts the task .
adds a bitmap to the specified image .
gets the type of the model for the given model type .
releases the given byte array .
sets the request url .
creates a new { @link } for the given native jndi type and the given native context .
adds a parameter to the request .
/ * ------------------------------------------------------------
hashes a text string using sha - 39 encoding .
checks if the given activity is not active .
generates a random encoded hash of the multipart part of the multipart part of the multipart part of the multipart part of the multipart part of the multipart part .
returns the string identifying the given
returns the string identifying the given
checks if the given result is not a cudaexception .
set a native vector of unsigned integers .
get the int vector size from the given vector .
sets the number of rows in a row in a given matrix
compute a number of rows in a matrix
set the number of memory parameters to a vector .
get the int array size of a given vector
sets the number of rows in a given matrix
get the number of rows in a matrix




<p > computes the polynomial derivative of an edge to a vector x = b < / p >





>


























sets the given {

set the coefficient of a vector to a vector .
get the int vector for a given vector .
compute a number of rows filled in with a given number of rows and columns .
compute a number of rows filled in a matrix .
set the coefficient of a vector to a vector .
get the int vector for a given vector .
compute a number of rows filled in with a given number of rows and columns .
compute a number of rows filled in a matrix .
unitize a x y - coordinate of a x y - vector .
rotates the float vector .
unitize a x y to a x y x y and z .
rotates the double matrix .




unitize a x y - coordinate of a x y - coordinate .


unitize a vector x y and z .


unitize a x y - coordinate of a x y - coordinate .
/ * multiply a vector of x - alpha * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * y
unitize a x y - coordinate of a x y - coordinate .
unitize a x y - coordinate of a x y - coordinate .
/ * ( non - javadoc )

unitize a complex number to a vector of x and y .


unitize a x y - coordinate of a x y - coordinate .
unitize a x y - coordinate of a x y - coordinate .
computes the complex number of transforms in two complex numbers .
computes the complex number of transforms in two complex numbers .




/ * multiply a vector of x and y - alpha .
computes the complex number of complex numbers .
computes the complex number of complex numbers .
/ * multiply a float vector .

get the double value of the coefficient of a double .

unitize a complex number to a vector x .
unitize a x y - coordinate of a x y - coordinate of a x y - coordinate of a x y - coordinate of a x y - coordinate of a x y - coordinate of the specified x y - coordinate of the specified x y coordinates .


bessel function of () .
/ * ( non - javadoc )

multiplies the specified number of times in a vector in a scalar .
symmetric householder to a sparse matrix
multiply the alpha s alpha and color .


multiply a sparse matrix
multiply two matrices using the given factor .
multiply two colors
symmetric tridiagonal linear solver
symmetric tridiagonal linear solver
symmetric qr factorization
symmetric qr factorization
symmetric tridiagonal linear solver
symmetric tridiagonal linear solver
symmetric tridiagonal linear solver
multiply a symmetric matrix .
symmetric tridiagonal linear solver
symmetric tridiagonal linear solver
multiply a sparse matrix .
/ * ( non - javadoc )
symmetric multiplication : <br > c = &alpha ; = ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ;
symmetric qr factorization
symmetric qr factorization
symmetric multiplication : <br > c = &alpha ; = ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ;
multiply a sparse matrix .
multiply a sparse matrix .
symmetric multiplication : <br > <br > c = &alpha ; * a<sub > ij< / sub > * b<sub > ij< / sub > * b<sub > ij< / sub > * b<sub > ij< / sub > * b<sub > ij< / sub > * b<sub > ij< / sub > * b<sub > ij< / sub > * b<sub >
symmetric tridiagonal linear solver
symmetric tridiagonal linear solver
symmetric qr factorization
symmetric tridiagonal linear solver
symmetric tridiagonal linear solver
symmetric qr factorization
/ * ( non - javadoc )
/ * ( non - javadoc )
multiply two matrices using the given factor .

multiply a float by its alpha .
multiply a sparse matrix
create a sparse matrix with a given alpha beta and beta .
multiply two matrices using the given operator .
symmetric householder to a
symmetric householder to a symmetric matrix .
symmetric qr factorization
symmetric qr factorization
symmetric form of
add a sparse matrix to a complex number .
add a sparse matrix to a complex number .
symmetric ** ** ** ** ** ** ** ** ** ** ** ** **
symmetric householder to a
symmetric ** operator ** **
symmetric householder to a symmetric matrix .
symmetric form of
symmetric form of
bessel function of () .

unitize a x y - coordinate of a x y - coordinate .
bessel function of the
get the double value of the coefficient of a double .
unitize a point x y to the given vector .


unitize a x y - coordinate of a x y - coordinate .



multiplies the specified number of times in a scalar
multiply two matrices using the given operator .
multiply two float values


symmetric tridiagonal linear solver
symmetric tridiagonal linear solver
symmetric tridiagonal linear solver
symmetric qr factorization
symmetric qr factorization
symmetric tridiagonal linear solver
multiply a sparse matrix .
symmetric householder to a sparse matrix
multiply two matrices .
symmetric qr factorization
multiply a sparse matrix .
symmetric qr factorization
multiply a sparse matrix .
symmetric multiplication : ** ** **
symmetric householder to a
symmetric ** ** ** ** ** **
symmetric difference of a scalar multiply to a sparse matrix .
symmetric householder to a symmetric complex number .
multiply two matrices using the given operator .

/ * ( non - javadoc )
multiply a sparse matrix
symmetric householder to a symmetric matrix .
symmetric form of
multiply a sparse matrix .
/ * ( non - javadoc )
/ * ( non - javadoc )
symmetric householder to a
symmetric multiplication : ** ** **
symmetric tridiagonal linear solver
symmetric multiplication : <br > <br > c = &alpha ; * a<sub > ij< / sub > * b<sub > ij< / sub > * b<sub > ij< / sub > * b<sub > ij< / sub > * b<sub > ij< / sub > * b<sub > ij< / sub > * b<sub > ij< / sub > * b<sub >
stem the word from a word .
get the list of all the workspaces .
adds the specified to the list
add a new position to the end of the list
writes the stream to the stringbuilder .
get the value of the attribute from the given .
returns true if the character is a character in the character .


split a word into a word .
documentation inherited from interface
asserts that the given { @link } is a value .
verifies that a value of the given attribute is valid .
returns the value of the property for the given property name .
converts a {
= value1&key2 = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
removes the tag from the given tag .
returns a new attribute value .
returns the contents of the given { @code } .


get the list of all the and the
get the map of time
process the data from the list .
parse a json string into a list of { @link } .
processes the given { @link } and calls { @link () } .
returns the for the given .
performs a warm up of the given { @link } .
get a metric for a given metric name .

set the list of to be used for the document .


set the list of to be used for the document .


get the value of the passed row row .
get all columns for a given column


sets the passed column to the passed in column .
create a { @link } from a { @link }
get all keys in the passed in order .
get all keys for the given collection of keys
sets the passed in column to the provided collection .
sets the passed in { @link }
returns true if the passed column is a column of the passed column .
create a short name from the passed string .
creates a new long value .
create a new { @link } instance .
create a new
create a new instance of the specified type .
create a new { @link } from the given name .
set the skip character sequence to skip the data .
add a bson version of the attribute .
create a new .
set the query list .
sets the column specification options .
create a new .
set the query list for the given .
sets the column specification options .
create a new { @link } for a { @link } .
factory method for creating a list of .
sets the validation options for the provided .
create a new { @link } for a { @link } .
<p > get the for the given { @link } . < / p > <p > this method is called from the { @link } method . < / p > <p > this method is called from the { @link } method . < / p > <p > this method is called from the { @link
create a new { @link } for the passed { @link } .
get the last double value from the current position .
send a message to the server .
sets the to be used to create the local context .
sets the current context .
sets the log level to be used for logging .
returns the logger for the given logger level .
store the given { @link } to the { @link } .
returns true if the current thread is a new and return true if it is not already running .
sets the to be used for the current thread .
get the current status of the current thread
sets the maximum log .
send a response message to the client .
send a response message to the client .
checks whether the current client is a valid session .
log a message with a given level .
prepend a string to a string .
append a json object to the list of classes that are not in the json object .


captures the current log file and writes it to the output stream .
initialize the application .
initialize the application with the given application .
log a transaction .
sets the name of the user to be used for the given user .
logs a log file with the given log file .
converts a file to a byte array .
start the project for the current project .
region > ( region ) { @link ( int int int int int int int int int int ) } { @link ( int int int int int int int int int int int int int int int int [] ) } { @link ( int int int int int int int int int int int int int []
region helpers
if the cluster is a valid region of the size of the cluster then the new region is added .
gets the for the given .
get the url of the service locator
get the credentials for a given token
create a new { @link } for the given { @link redisuri } .
returns the map of all the registered consumers for the given service .
read a record record from the stream .
{
exporte une file
dump the contents of the given <code > protocoldataunit< / code > .
returns the double value of the given time
retrieves the user details for the user .
convert a file to a file
calculates the average value of the given double .
checks whether the given { @link } is a valid { @link } .
get the for the given region name .
get the pool manager
get the pool manager for the pool .
returns the region for a region .
returns the regions matching the given region .
/ * ( non - javadoc )
checks if the given region is a region .
get the name of the base object for the given name .
get a new instance of the given name .



find the host name of the host name .
get the user - defined module for the specified email address
checks if the exception is a error message
execute the given { @link } and returns the result of { @link () } .
flattens the given collection of objects into a { @link collection } .
collect all of the elements in the collection and returns the collection of results .
returns a new { @link } that is based on the given { @link } .
creates a new { @link } for a consumer .
creates a new { @link } for a consumer .
remove all entries from the map
updates the value of the consumer .
puts a single entry to a specific resource
delete a specific resource .
get a key from a given key and the given value .
handle exception .
/ * ( non - javadoc )
returns the for the given filter .
{
reads the content of the given file from the given file .
get the user profile for a user .
compares this <code > / code > to another object .
returns the number of the elements in the given region .
{


{
{
get the name of the resource .

creates a new instance of the { @link } instance .

remove the search suggestions from the search request .
creates a region for a given region .
returns the region for a region .
returns the region for a region .
register a to a
register a new event listener for the specified {
register a new event listener for the specified event .
constructor .
executes the given {
exports all the data to the given input .
checks if the export region is a valid export region .
exports the region to a given region .
gets the password for the given password .
returns the username for the user .
checks whether the given is a valid
returns true if the given time is a valid time
returns the number of cached messages from the given {
adds a new to the list of hypothesis values .
close the underlying <code > / code > .
get the value of the given name in this map .
updates the current token .
close the resource .
converts the given { @link file } to a { @link file } .
main method .


returns the for the host name .
stop the host name .
shuts down the server .

shuts the given {
returns the for the given mbean .


converts a {

read a page from the page .
executes the given {
import region from name into region
/ * ( non - javadoc )
import the current region and the current region .
checks whether the given matches the given .

parse a string for the given locator .
run the record record for this record .
returns the class name of the class .
returns the number of times the given is used to determine the number of times the first time .
returns the values of the current values in the given range of values .
shrink the end of the trie
executes the given {
exports a local file to a file or directory .
execute the command .
checks if the given input name is a valid signature for the given input .
<p > executes a search query against the query string . < / p >
remove the search results from the search query string .
searches for the specified field in the specified collection .
execute the

import the region into a new region
start the directory .
shutdown the watchservice
wait for a given member .
waits for the given member to the given member .


{
====================================================================================
query a query string .

close the current state of the .
returns the field with the given value .
returns true if the given type is a type variable .
serializes an object to a byte array .

creates a new instance of the specified class .
checks if the given element id is a member of the given element .
checks if the given { @link } is a valid type .
checks if the given element is a super type .
returns the schema of the schema .
serialize a java . sql . writer .
generates the { @link } for the given { @link } .
create a .
drop a single record from the given table .
insert a record to the

insert a single column to a
delete a single value from the database .
delete a single value from the
transform the given into a .
select a single row of the
converts a { @link observable } into a { @link observable } .
checks the given column name and column name .
returns the default value of the given string .
capitalizes the first character of the string .
returns true if the given type is a type of the given type .
adds a new query to the querybuilder builder .
reads the next file from the file .
returns the value of the given type .
print a message to the console .
/ * ( non - javadoc )
print a message .
<p > font . < / p >
returns the icon of the icon .
/ * ( non - javadoc )
add data point to the list
/ *
create a new panel .
gets the background pane from the .
returns the maximum of the given double .
copy all the values of the to the end of the array .
sets the values of the row of this matrix .
/ * ( non - javadoc )
print the current data .
power of two bigdecimal .
returns the decimal point of a given decimal point .
returns the {
returns the {
bessel function of the { @link bigdecimal } with the given scale .
calculates the percentage of the specified percentage of the specified number of fractional units .

returns the { @link bigdecimal } that is the number of fractional decimal point in the specified { @code bigdecimal } .
calculates the exponent of power of a division of a bigdecimal .
prints the print string to the print writer .
returns the timestamp of the timestamp .
sets the minimum maximum allowed values for the specified min and max .
put the given <code > / code > to the <code > hashmap< / code > .
print the matrix to the maximum number of rows in the matrix .
add a new complex to the complex .
subtract two complex numbers
multiply this complex by two complex numbers
<p > computes the absolute value of the given <code > factor< / code > and <code > ( - x / code > ) . <p >
copy the contents of the specified array to the front of the array .
sets the rows of the matrix .
/ * ( non - javadoc )
print the current state of the screen .
returns the value of the specified column in the matrix .
{
get the column of a column
copy all the values of the to the end of the array .
sets the value of the specified matrix .
sets the values of the values in the row vector .
sets the row of the matrix .
sets the column of a matrix .
returns the transpose of the matrix .
adds a new matrix to the matrix .
subtract the values of a matrix .
multiply the matrix by its x and y z .
multiply this matrix by the given matrix .
multiply a vector of a row .
multiply the row of the matrix .
prints the contents of a row .
/ * ( non - javadoc )
{
sets the image to be used by the user .
add a data point to the data point .
validates the gradient of a line .
/ * ( non - javadoc )
clear the contents of this template .
converts a xml file into a xml file .
returns a that can be used to convert mainframe data to the root of the given type .
validates the descriptor for a given type .
validates the given { @code } .
parse a string from the xml file .
/ * ( non - javadoc )
returns the maximum of the specified float values .
returns the y - ordinate drawn from the given rectangle s bounds .
sets the matrix to be used for the matrix .
sets the values of the row to the values of the values in this vector .
fires a new event event on the given <code > / code > .
fires a new event to be processed by this handler .
returns the inverse of the qr code for the given matrix .
/ * ( non - javadoc )
subtract the values of a float vector .
sets the value of the specified float .
{
{
{
prints the contents of the specified baseline to the specified width . <p >
decomposes the matrix to the upper triangular matrix .


refines a qr decomposition of a matrix .
checks if the given vector is a row of a given vector .
converts a matrix into a matrix
returns the next pseudorandom uniformly distributed float from the next point .
/ * ( non - javadoc )
procedure notes .
{
{
/ * ( non - javadoc )
checks whether the receiver is a valid gap .
adds a new tuple to the buffer .
multiply two integers .
returns the logarithm of the given int .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a given array of byte arrays to a char array .
decompose the given string
print the given <code > / code > to the <code > / code > .
checks whether the given number of times is valid .
validates that the given exponent is a valid .
checks whether the given number of arguments are positive .
validates that the given exponent is a valid .
creates a new { @link } instance with the given { @link } .
returns the next pseudorandom uniformly distributed double - valued coding .
returns the next pseudorandom uniformly distributed <i > / i > in the two given { @link () } .
returns the next pseudorandom in the current position of the next element in the current position .

returns the number of occurrences of the given int .
procedure notes .
/ * ( non - javadoc )
{
sets the of the .
sets the configuration file to be used by the walkmod configuration file .
sets the configuration for this reader
get the converter for the given converter .

load a resource from the classpath .
checks if the location is a location of the given location .
get all event definitions for the specified entity definition
adds a new request to the client . <p >
documentation inherited from interface
<p > sets the current response to a request . < / p >
returns the host that is a hostname .
returns the { @link } for the given { @link } .
evaluate the .
process a action continuation .
returns true if the payload is a valid .
polls the events for the events .
strips the trailing whitespace from a string .
gets all the for the given request
add a new request to the client . <p >
sets the address of the address .
sets the list of the to be used as a request .
creates a new instance of { @link } .
creates a new instance of { @link } from a { @link }
get all the names of all services that match the query .
returns all the instances matching the given name
gets the list of resources for the given resource .
returns the parameters of the request .
returns the list of all the parts in the list of parameters .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a list of tickets and status
gets all the collaboration whitelisting that are not allowed by this application .
get a list of all the / values for this form .
/ * ( non - javadoc )
converts the json object to a json object .
serialize a object
/ * ( non - javadoc )

creates a new user object from the given service .
update the user credentials .
activate the given user .
activate the user from the user .
sets the user credentials for the user .
sets the user s password for this password .
deletes the user from the user .
gets the user from the user .


get the user id for this user .
get all the users of this service .
get all the that are not specified by this job .
get all roles for this role .
gets all the users that are granted .
gets the field of the user .
get the email address of the given email .
get the for this user
/ *
checks whether the given user is a role .
/ * ( non - javadoc )
get the field s fields for the field name .
get the field value for the field .
/ * ( non - javadoc )
get the field value from the field .
get the field value for this field .
get the field value from the field .
get the field value for this field .
get the field value for this field .
get the field value from the field .
get the field value for this field .
get the field value for this field .
get the field value for this field .
sets the field value .
sets the type of the field .
get the type of the field .



populate the jsonobject from the jsonobject .
populate the json object with the given json object .
gets the field type for the given field .
checks whether the given field is unique or not .
/ * ( non - javadoc )
sets the value of the property .
gets the value of the property property .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a flow flow instance for the given flow flow .
update the flow flow for the flow flow .
create a flow flow from flow flow .
get the flow flow for the given flow flow .
returns a jobdefinition that can be used to view flow flows .
get the view flow for a specific job flow .
returns a jobdefinition that are not matched by this job .
returns a jobdefinition that can be used to retrieve the job flow .
returns the { @link } for the given { @link } .
returns a jobdefinition that can be used to view flow executions .
get flow from flow .
delete the flow flow flow from the flow flow .

returns a list of all the that match the given search criteria .
returns a new { @link search } for the given search .
returns true if the search is set to the given position .
returns a list of all the fields in the list of all the fields in the given list .
converts a list of parameters to a list of values for the given list of values .
returns a list of all the fields in the given string list .
populate the list of fields of the given list of fields .
checks whether the given string is a valid index .
{
check if the string is a valid name .
/ * ( non - javadoc )
get a list of all the fields in the form of a list of stringified form fields .
get the list of all the fields in the form of this form .
returns a new form of this form .
get the form fields for this field .
converts a string to a string .
get the text for a given latitude .
get the latitude from a given latitude / longitude .
get the longitude from the given text .
returns the value of the given { @code } as a { @code double } .
converts the given string to a string value .
decodes a base64 encoded base64 encoded string into base64 notation .
encodes the given byte array to a string .
decode a string .
encodes the given byte array into base64 notation .
sets the field name of a field .

handle exceptions thrown by the client .
{
adds a message to the response .
returns the list of all the messages in the request .

uncompress the given byte array to the output stream .
get all the tickets .
removes the given from the given form of the form { @link } .
serialize this json object to a json object
creates a new form form .
create a new .
adds a new form to the form form .
executes a post action on the specified action .

create a new form from the form form submission .

get the list of credentials
get the for this .
get a single from the form .
returns a new container which is used to create a new container .
returns container configuration for this job .
returns a new form that is used to create a new container page . <p >
returns container container with the form {
returns container container with the form {
returns container / x - forwarded - form post - form post - form - data .
returns a list of form fields that are used in the form of a list of form .
{
returns a form of a form that is the form of a form a { @link } in the form of { @link } .
converts a {
converts the given list of data to a .
convert a list of roles to a list of role names .
/ * ( non - javadoc )
create a new form definition .
updates the form fields .
get a specific form of a .
get a form from the form .
gets the list of all the .
gets all permissions for the given .
returns a new form that is used to create a new form definition .
get the value of the field in the request .
get the value of the field in the given object .
循环向上转型 并强制设置为可访问 .
invokes the method on the given object .
returns the key - value pair from the form of the form { @code } .

shutdown the server .

returns a list of objects for the given form parameters .
gets the property value from the given properties object .
get the property value from the given properties object

/ * ( non - javadoc )
converts the json object to a jsonobject .
returns the list of the names of the elements in the given { @link string } .
serialize the given jsonobject as a jsonobject
> > > > >
get the for this request .
get the list of objects .
returns the for this .
get the list of marc fields for this form .
marshall the given field .
returns a list of fields that are used in the form of { @link } .
closes the current connection .
{
convert the jsonobject to a json object

get the field value from the given field .

create a new flow instance for the given .
create a new flow rule for the given .
create a new flow instance for the given .

add a new rule to the flow


get the for this .


execute a post operation .
/ * ( non - javadoc )
move the rule flow to the rule .
sets the flow flow rule for the given .
add a new flow to the flow flow .

get the rule
launch the login token .
authenticates a user and returns the response .
initialize the credentials for the client .
this method is called by the server to create a new request token .
/ * ( non - javadoc )
/ * ( non - javadoc )
concatenates the given list of strings to the list of strings to be included in the list .
creates a new user query object .
update the user query parameter
delete the user from the user query .
get the user query object .
get all the for this service .
execute a query and executes the query .
execute a query and executes the query .
get the list of for the given .
get the list of for the given form field .
returns the value of the in the form of a given node in the form of a long .
returns a list of all the fields in the form of { @link } .
get the field value for this field .

create a role .
update the role of a role .
delete a role by role .
get the role associated with the given role .
get the roles for the given role .
/ * ( non - javadoc )
execute the command line and execute the command .
execute the command command .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts the json object to a json object .
get the field value for the field .
get the field value from the field name .
get the field value for the field .
get the field value for the field .
get the field value from the field .
get the field value from the field .
get the field value for a field .
get the field value from the field .
get the field value from the field .
get the field value for the field .
sets the field name .
sets the field value .
returns true if the form of the form form { @code } is a valid { @link } .

<p > inserts a new instance of the jsonobject associated with the specified jsonobject . < / b > this method allows you to create a new instance of the jsonobject . < / p >

serialize a json object
serialize a json object to the client
send a request to the given .
gets the pgt from the service .
converts a byte array to a hexadecimal string .
/ * ( non - javadoc )
create a field with the given field name .
create a field instance
create a field instance from a list of field values .
create a new field based on the value of the given field .
create a new field instance
creates a field .
> > > > > > > > > > / > > > > > > > > > > > > > > > > > > > > >
create a new field .
/ * [ deutsch ] <p > f&uuml ; r . < / p >
<p > . < / p >
create a field instance with the given value
change the value of the field in the request .
updates the field with the given field in the given field .
get the field name from the field name .
get a form field .
get the field information of the given form .
deletes the field from the field .
delete the field from the field .
get a field from a data table .
serialize this object to a jsonobject
create a field instance .
create a new field based on the field value .
create a field instance .
set the field value to be used in the request .
/ * [ deutsch ] <p >
sets the field value to use for this field .
updates the field value .
get the field name from the field name .
deletes the field from the field .
delete the field from the field .
merges the given tags with the given parameters .
sets the value of the property .
returns the index of the first index of the given index .

serialize a json object
adds a sql statement to the database .
create a flow flow .
update flowconfig by flow
get flow by node flow .
get flow by flow flow by name .
/ * ( non - javadoc )
/ * ( non - javadoc )
updates the field value .
get the field value for the field .

get all fields that are not present in the global field .
returns the form of a particular query .
{
get a list of all the parameters for the given list of .
get a list of all the fields in the form of a long .
get the map of the attributes of a given name .
serialize this object into a jsonobject
/ * ( non - javadoc )
/ * ( non - javadoc )

checks whether this time is expired .
create a new user notification admin admin user .
updates the user s user notification subscription .
notification that a notification subscription is received from the notification .
notification that a user has permissions to receive notifications .
create a user notification admin admin admin admin admin admin admin admin admin admin user .
gets all the objects for this subscription .
get all users
get all the users of the given user
generates a random sequence generator .



returns the byte array representation of the given byte array .

解密
加密

send a message to the client .
closes the connection .
creates a new request handler for the given request .
>
sets the .
returns the message for the given message parameter .
creates a new user admin user .
/ * ( non - javadoc )
serialize this object to a jsonobject
get the oauth access token .
get userprofile for a user profile .
this method gets the form parameter for the given { @link } .
serialize the given jsonobject as a java object .
execute a http request .
get json object
get the json object for the given json object .
post / json
post / posts / / / / / / / / / / / / / / / / / / / / / / / / / / / / / /
post / update the given json object
delete a domain
delete the json object from the twilio api .

put a json object to a json object
put a domain to a domain
execute a list of {
execute a { @link } for a request .
execute a http request
executes the given request .
adds a request to the list of route fields .
gets the response json for the response .
encodes the given string into a string .
checks if the job is running .

get the client uri from the client
gets the truststore store the truststore s .
closes the connection .
close the connection .
/ * ( non - javadoc )
close the preparedstatement
close the callablestatement .
get the for the given .
create a jobdefinition that can be used to create a new flow .
get the for this site .
send a to the .
send a post request to the
callback method to close the connection .
callback for handling the message .
send a message to the client .
send a message to the client .
closes the session .
/ * ( non - javadoc )
get the list of headers for the given form fields .
/ * ( non - javadoc )
get the uniprot list of
returns a new instance of the that is a java class .


returns true if the given string is a valid .
returns true if the given string is a valid select box .
serialize a json object
/ * ( non - javadoc )
requests that the specified request is a request .
apply a license to the license .
/ * ( non - javadoc )
create a field with the given field and the default value .
create a field with the given field .
create a field with the given field and the default value .
create a new field .
create a new { @link } with the given { @link } .
create a field with the given field values .
create a field instance .
create a field instance
create a field instance .
set the field to be used for the given field .
set the field to be used in the request .
/ * [ deutsch ] <p > f&uuml ; r . < / p >
create a new field action .
/ * [ deutsch ] <p >

<p > . < / p >
/ * [ deutsch ] <p > - - - - - - - - - - - - - - - - - - - - - - - - - - - -
update the field on the given field .
create a new field instance .
get the field s field .
get all the that are associated with the given field
delete the field from the field .
delete the field from the field .
convert the given list of to a list of .
converts a field value to a field .
returns the configuration for this configuration .
gets the configuration for this service .
serialize this object to json object
creates a new form submission from the given form and submits the form to the specified form of the specified form .
returns the list of all the policies that are mapped to the given list of parameters .
create an attachment from the given attachment .
get attachment attachment
get attachments .
delete attachment attachment
delete attachment attachment
checks whether the given {
replace the element attribute with the given element .
/ * ( non - javadoc )
parse the xml schema from the xml schema .
sets the classpath for jar files .
parses the given into a instance .
checks if the schema of a node is a schema of a schema .
resolves the elements of the given list of elements .
replace the element with the given attribute name .
store the
{
/ * ( non - javadoc )
sets the xsd schema for the xsd .
checks whether the given { @link } is a primitive value
returns all the fields in the given {
/ * private void ( ) { if ( = ) ; . ( ) ; . ( ) ; . ( ) ; . ( ) ; . ( ) ; . ( ) ; . (
update the given {
checks whether the given { @code } matches the given { @code } .
sets the tag .
/ * ( non - javadoc )
parses the file .
gets the node from the document .
sets the tag .
sets the .
/ * ( non - javadoc )
parses a dom node from a dom element .
converts a map of attributes to a map of attributes to the map of attributes to the map of attributes .
replace the element elements of the element with the given element .
converts a string representation of the content of a jsoup string to a string .
checks whether the given {
returns the given value for the given { @code value } .
returns the value of the specified element in the given string .
checks if the attribute value is a primitive integer .
validates that the given string is a valid integer .
validates that the given element is a valid integer .
validates that a string is a valid double .
validate a string value .
returns the default value for the given { @link } .
returns the default xsd value for the xsd .
returns the default value for the given xsd .
returns a {
/ * ( non - javadoc )
{
creates a new <code > / code > instance that is configured to create a new <code > / code > .
creates a new instance of <code > / code > .
parses a given argument and returns a new instance of the given class .
parses a string .
parse the arguments and sets the arguments .

create a builder to use for the url .
adds the view to the view .
remove the footer view from the footer view .
sets the point .
sets the slider .
get the value of the slider .
get the value of the slider .


returns the absolute value of a given x - value pair .
returns a double value .
gets the angle of the given angle in degrees .
get the double value of the slider .
compute the angle of a cubic cubic line and returns the similarity of the .
calculates the gamma function of a given value .
scales the current values
sets the current bounds of the current value to the current bounds .
process the process of the process .
process the server - processed process .
get the list of all the packages that are registered with the given .
get accountid from an account by its id .
reads a string from the given string .

apply the rule to the
builds a string representation of the specified account .
reads a serializer from the bodycontent .
/ *
configures the connection to the server .
{
{
resolve the given type in the given annotation type .
creates a file .
creates a directory from the given directory directory .
destroy the file .
{
/ * ( non - javadoc )
returns the {
get the { @link } for the given class .
returns the { @link } for the given { @link extension } .
/ * ( non - javadoc )
{
returns the list of {
restore the current properties of the given properties object .
creates a stream of {
gets the class names of all the classes in the classpath .
sets the list of users to apply the specified filter to the specified view .
sets the {
sets the text to be used for the given text .
sets the background color of the view to the specified color .
creates a map of the given map of references to the given map .
adds a new object to the list .
creates a new instance of the specified object .
sets a property .
get the value of the named property .
returns the default value for the given array .
{
process the queue of threads .
returns the type of the given type .
returns the class with the given name .
returns the { @link resolvabletype } for the given type .
returns the variable declaration for the given type .
returns the { @link } for the given { @link class } .
puts the specified type into a map with the given type .
gets the class for the given class .
returns the class loader of the class that was loaded from the cache .
puts a class into the cache .
returns the cache class loader for the given class loader .
print the stack trace of this <code > / code > .
print the stack trace of this <code > / code > .
sets the text to be used for the given text .
replace the object with the given object .
run the task to execute the task .
set the task to be used for the task .
attempt to determine if the current task is a task .
returns the of the task .

returns true if the task is a task .
stop the task .
puts the given <code > / code > to the <code > / code > .
get the job status .
/ * this method is called by the quartzscheduler .
converts the given { @link } to a { @link } .
resolve the current state of this <code > locale< / code > .
creates a new instance of the specified object .
get a collection of members from a given url
lists the base directory for the specified jar file .
create a url from a url .
setup a new database .
adds the given reader to the given reader .
copy all the from the given to the given .

load the catalog from the classpath .



parse the from the .
parse the given string .
adds a new entry to the database .
adds a new entry to the list of entries that are the same as the entry .
parses all the { @link } annotations and their parents .
resolve the given string into an xml - string .
resolve the given string to the given string .
resolves the given name and its id .
resolve the given { @link } of the given { @link } .
resolves the given { @link } .
resolve the given string to the given location .
retrieves the uri of a given uri .

/ * package
make a string to be used in the .

encode the given hex string into a hex string
adds a to the list of based on the .
create a new socket socket to the given host .
sets the text to be used for the given text .
creates a new { @link } for the given key .
get the value of the property from the properties file .
fire the event to the given { @link } .
add a new { @link } to the queue .
creates a new list of objects .
adds a new object to the list .
creates a new socket pool .
create a socket from a socket .
compares this to another object .
get the value of the property associated with the current value of the property .
accept a file .
get the value associated with the specified index .
sets the value of the specified object to the specified value .
add an object to the list of objects .
remove the element at the specified index .
method to create a new
adds a short - value mapping .
retrieves the value of the specified type .
returns the number of bytes in the given { @code int } .
returns the argument of the given argument .
inserts the specified <code > / code > to this <code > / code > .
extract the contents of the given node from the given list of elements .
sets the text to be used for the given text .
sets the thread context class loader to the specified thread pool .
/ * package
swaps the elements in the given arrays .
remove the specified node from the queue .
returns the for the given timeout .
checks the validity of the given number of elements .
load the class from the given class name .

<p > . < / p >
check if the property is a valid .
returns the value of the class associated with the given class .
creates a new set of {
close the input stream .
returns a new counter increment counter .
returns a new { @code } instance that is used to convert the { @code } to a { @code } .
returns whether the given { @code } is a valid namespace .
receive notification of the end of the document .
receive notification of the start of an element .
endelement
checks if the given chunk is a valid
lookup a key in the map .
lookup the named lookup for the given key .
detaching the specified { @link org . apache . commons . dbcp . } object .

adds the specified target to the specified target object .
returns the object associated with the specified object name .
substitute the specified string with the specified delimiter .
splits the given string into a string .
joins the given array of bytes into a string array .
default implementation of the { @link () } .
removes leading characters from the given string .
trims the character character from the given string .
get the value of the current button .
accept a file from the given directory
creates the new { @link } .
returns the value associated with the given key .
returns the value associated with the given key .
insert a value into the map .
removes the mapping from the map .
flush all the data to the given .
returns the list of the keys in the list of the given keys .
set the default resolution for the given .
returns the entry for the given key .
get a child element for the given element name .
get a child element of the element .
get a child element of the child element .
get the text content of a dom element .
returns the content of the element with the given element name .
returns the content of the element that contains the given element name .
stops the shutdown of the server .
sets the maximum number of threads to be used for the given queue .
sets the mode for the given name .
sets the mode of the given string .
execute the given callable in the task .
receive notification of the start of an element .
schedules a task to be run on the given delay .
adds a task to the task manager .
sets the text to be used for the given text .
adds a new entry to the list of the .
returns the uri of the given uri .
resolves the given string representation of the given { @link string } .
resolves the given string with the given name .
resolve the given { @link uri } instance from the given { @link uri } .
resolve the given { @link uri } from the given { @link uri } .
/ * ------------------------------------------------------------
appends the vector to the vector .
{
returns the absolute path of the given absolute { @code } .
{
returns the absolute path of the given <code > / code > .
/ * ( non - javadoc )
sets the node to be used as a dom .
returns the string representation of the given node .
reads the catalog from the catalog .
reads the catalog from the given catalog and stores it in the catalog .
receive an element .
receive notification of the start of an element .
end end end end end
receive notification of the end of a string .
/ * ------------------------------------------------------------
resolve an entity from the entity .
acquires the current lock from this queue .
waits for the current thread to elapse .
connects this connection to the server .
returns a stream of output { @link urlconnection } .
gets the header field of the header .
compareandset next update
delete the node and add it to the list of the specified node .
returns the value of the given object as a value .
creates a snapshot of the current snapshot .
compareandset the value of the specified { @code index } .

creates a logger that is used to create a logger .
list of objects
returns the name of the class name .
converts the given {
returns the default value for the given property .
adds a propertychangelistener to the listener .
adds a propertychangelistener to the list of listeners .
load properties from the specified map .
load the map from the specified { @link resourcebundle } .
load a property from a property file .
load a log4j security file from the given classloader .
sets a property .
remove a property from the system .
returns a string array of the default values from the given array .
returns an immutable {
returns the { @link } for the given { @link basename } .
returns a { @link } instance for the given class .
copy the contents of the given object to the given object .
get the object reference from the object .

converts an array of primitive arrays to primitives .
initialize the context .
update the jndi name of the given context if the given context name is not already in the cache .
put a new value to the object .
remove a property from the list of property names .
sets the set of keys for this beanmap . the set is immutable and unaffected by this method .
returns the set of {
add a new listener to the listener .
adds a new property listeners .
removes a listener from the listener .
fire the event to the list of listeners .
fire the event to the list of listeners .
fire the event to the list of listeners .
notifies the listeners that the property has changed .
returns a string representation of the given base name .
load the specified map .
load the property from the reader .
load a class from a class .
sets the value of the named property .
returns the array of the values in the array that are not specified by the given <code > / code > .
returns the { @link } for the given index .
register a new entity with the given id .
resolve the entity from the morphline - side entity .
returns whether the given entity is a valid entity .
get the xml source for a given entity .
get the xml source from the given input stream .
get the xml source from the given input stream
resolve the resource with the given name and name .
load the classpath from the classpath .
sets the text to be used for the given text .
normalizes the given html string .

/ * ( non - javadoc )
replace the string with the given string .
start the current thread .
stops the current thread .
stops the watch .
/ * ( non - javadoc )
generates code to generate a byte array for a byte array .
generates a new array of objects of the specified array .
creates the capacity .
sets the value of the field on the field .
{
reads the catalog from the catalog .
returns the next token from the next token .
union collection of arrays .
initialize the date and time format .
sets the text to be used for the given text .
adds the given vertex to the vertex vertex .
sets the root vertex of this vertex .
adds a directed edge to the edge .
insert a new edge in the tree .
remove the given {
remove a directed edge from the edge graph .
{
{
search the given visit search .
depth - first traversal of the tree .
find the best vertex vertex vertex vertex vertex vertex .
find the outgoing edges of the given vertex and edge
/ * ======================================================================
endelement method
normalizes the given string .
parse the given xml string into an xml element .
parse the given xml document from the stream .
parse a document element from the xml document .
creates a new element from the xml element .
qname
get the attribute value for an attribute .
returns the attribute value of an attribute or null if the attribute value is not a member .
copies the elements of the given element from the given element to the front of the element .
checks if a node has a child of the given node .
returns an iterator over all elements of the given node .
returns the content text of the given node .
returns an iterator over the elements of the given node .
returns the parent node of the given parent element .
add a new resource to the queue
reads the catalog and creates the catalog .
reads the catalog from the catalog .
returns the address of the host .
resolve the given morphline entity from the given input stream .

create the logging configuration .
sets the system property .
display the class for the given class .
get the url of the given class .
get the description of the ichemobject .


strips the name of the package .
returns the package name of the package .

get the primitive type for a primitive type .
get all implemented interfaces implemented by the given class .
returns the class of the specified interfaces in the class array .
checks whether the given class is a primitive wrapper .
instantiate a class with the given properties .
load the class name of the specified class .
load a class from a class .
convert an array of classes to a java class .
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
returns the setter method for a setter method .
convert a class to a class name .
returns the default value of the specified property .
sets the text to be used for the given text .
get the property name from the given property .
accept a given { @link file } with the given name and name .
adds a new to the queue .
returns an iterator that iterates over the given iterator .
adds a new object to the queue .

accept a file that is the file name .
issue a message with a given message and a message .
issue a message with a given message and a message received by a message .
add a named property .
get the named property .
remove a named property .

add a propertychangelistener to the list of properties .
remove a propertychangelistener from the listener .
binds a property to the specified field .
binds a property to a named property .
reads the catalog and stores it in a object .
returns the class of the given class .
returns the cache class loader for the given class loader .
<p > checks whether a string is null or empty . < / p >
find the editor for the given type .
propertyeditor
gets the editor properties for the given property .
register a class name to a given class loader .
convert a string value to a java class .


creates a new port chain .
returns the classloader of a class loader .
returns a new { @link } that is associated with the given application .
{
@throws pageexception
creates a jndi context with the given name and the given name .

lookup a class using the given name .
lookup a jndi lookup of the given class .
lookup the class with the given name .
create a link link to the link
create a new
removes a link from the resource
remove a named attribute from the current context .

append a class to the class .
returns the transition for the given name .
read the properties file and loads the properties file .



retrieves the catalog of the catalog .




checks whether the resource properties can be used to determine if the resource is a valid resource .

resolve the given morphline - back into a { @link } .
resolve a url to a url .
make a relative uri .
resolve the class name of the class for the given class .
gets the property descriptor for a property descriptor .

{
returns the prefix of the prefix for the given element .
returns the name of the element .
returns the node of the given node as a dom node .
returns the namespace prefix to the given element .
sets the text to be used for the given text .
returns a list of list of lists of the given list of lists .
get the file from the file .
load properties from the file .
reads a property from the properties file .
adds a directed edge to this graph .
add a new edge to the edge .
add a new edge to this graph
checks whether the edge is a edge of the edge .
removes the edge from the list of edges from the list of edges that are removed from the list of edges .
find edge edge of the edge edge
{
returns the cost cost of this graph .




extract the jar file from the given url .
returns true if this list contains the specified options .
fire the event to the queue .
transition to the current state of the queue .
<p > . < / p >
process the task queue and add it to the queue .
installs the given { @link } and installs the { @link } and { @link } .
installs the given { @link } and adds it to the { @link } .
installs the given { @link } to the given { @link } .

dispatch the current action on the fx thread .
returns an action that can be used to create a action for the given action .
creates a view of the given fxml path .
updates the .
updates the given predicate .
subscribe the action on the consumer
returns the logger for the given name .
log a message with the given level .
log a formatted string with the given level .
log a message with the given arguments .
log a message at the trace level .
log a message to the log .
log a debug level .
log a message with the specified debug level .
log a debug level message .
log a info message with the info level .
log a info on the info level .
log a info message .
log a message at the info level .
log a message with the given level .
log a warn level .
warn for warn messages .
warn .
log a error log message .
log a message with the given level .
log a message with the given parameters .
log a message at the given error level .
order records records with a single record .
get a stream of records from the specified collection .
returns a stream consisting of the elements of this stream with the elements of this stream .
transforms the given collection into a stream .
returns a stream of {
transforms the given collection into a stream .
bootstrap method for the given { @link org . jboss . as . controller . ( string ) } .
bootstrap method for the given { @link org . jboss . as . controller . } and { @link } and { @link } .
bootstrap method for a single server .
/ * ( non - javadoc )
{
checks if the command is a command .
find the tag with the given name .
main method to run the file
main method .

load a file from the given inputstream .

add last - last time last time .

reload the current configuration
returns whether the word matches the word of the word .
search for the node in the given node .
gets the path of the class file .
reads a character from a file .
converts a char array to a char [] .
converts a character to a character sequence .
main method .
returns the length of the word .
returns the count of all the units of this word .
gets the average variance of the current row .
gets the sum of all the subunits of the given subunit .
prints a chunk of chunks .
search for the character matching the given character .
search for the node in the given tree .
returns the first node of the given character .
/ * ( non - javadoc )
main method .
creates a new instance of { @code httpurl } from the given host and port .
creates a new instance of {
create a new instance of {
creates a new instance of {
returns a map of arguments to the given parameters .
{
checks if the connection is available .
{
{
=========================================
/ *
get the { @link datasource } of { @link } s .
create a datasource instance
creates a new { @link } from the given configuration .
create an instance of { @link iterable } that can be used to determine the type of the given { @link iterable } .
creates a new array of class size values .
create a new { @link list } of { @link list } objects from the given class .
create a new { @link collection } that can be used to create a generic { @link collection } instance .
returns a set of {
returns a set of {
create a pushable queue
create a new {
create a new { @link } for a given class .
create a new {
returns a set of {
returns a set of {
returns a map of { @code key } for the given { @code comparator } .
>
returns the { @link optional } of the given type .
returns a list of {
generate a new object .
returns a list of all the { @link list } of the given class .
creates a { @link java . util . map } of { @link class } s .
returns a set of { @link } s that are not serializable .
returns a {
returns a set of { @link set } s that the given { @code set } is created .
returns a set of { @code sortedset } objects that are present in the given class .

>
create a new queue for the given class .
returns a { @link predicate } for the given type .
create a new { @link } with the given { @link type } .

create a new validation message with the given type and the given type .
create a { @link } with the given type and value .
attempt to attempt to find the given type of the given type .
sets the password for this driver .
execute the sql statement using the specified sql and the sql statement .

evaluate the .
query the given object by looking up the table s table
<p > . < / p >
asynchronously upgrades the given upgrade to the given version .
{
restores a { @link } .
returns the blob s blob s blob s blob s blob s blob s blob s blob s blob .
sets the text to be shown when the view is shown .

add a string to the builder .
add a new class to the builder
add a new element to the list .
add a new element to the list
escapes a string with a csv file .
unescapes the character in the csv string .



convert csv to a string


renders the given html document .
reads the given reader from the reader and returns the corresponding .
write the .

get the type of the given dao class
get the for the given entity class
returns the type of the type of the given type .

import a csv file into a csv file .

/ *
{
/ * ( non - javadoc )
upgrade a new version to the given version .
{

restore all restore from all tables from the table .
read the index file
write the file to the file
adds a converter to the given converter .
creates a new { @link query } instance that is used to construct a { @link query } instance that is used to create a new { @link query } instance that can be used to create a query instance that can be used to create a query instance that can be used to create a query instance that can be used to
creates a new { @link } instance for the given type .
sets the parameter .
sets a parameter to a parameter .
sets the parameter .
sets the parameter .
sets the parameters of this query . <p >
renders the page .
delete a record
returns the id of the given { @link } .
insert an object to the given object
insert a new record into a new one .
save the object to the given object
update the given object in the table
{
query for a query and return the result in a query .

returns the first element of the specified object .
sets the builder .
add a new item to the list .
create a new {
create a new
add a new object to the given list of objects .
add a new object to the given list of objects .


add a subquery clause to the query .
{
log the .
returns the active stack .
returns the stack of the current active stack .
add a new plan to the plan
/ * ( non - javadoc )
selects the plan for the given plan .
set the to the given set of the given agents types
returns the for the given index
returns the byte array .
returns the children of this node .
grows the given byte array .
creates a logger that will be used to create a logger that will be used to create a logger .
/ * ( non - javadoc )
sets the byte order of the byte array .
add a new goal to the list .
pause the user .
initializes the for the given
initializes the for the given .
start the loop for the current thread .
shuts down the worker thread .
returns true if the extensions are loaded .
register the extension to the given { @link } .
/ * ( non - javadoc )
parses the arguments of the specified string into a { @link string } .
resets the state of the .
load the receiver from the given agent .
process a model plans .
returns true if the plan is a plan .
create and update a new agent object
returns the agent array annotation .
get the base class for the given annotation .
get the annotation for the given annotation .
load a class from a class .
load the extension from the extension .
checks whether two { @link } is equal to the given { @code } .
returns the usage of the usage of the usage of the usage of the application .
parse the options from the command line arguments .
parse the options for the given option .
load a configuration from the given string .
main method .
evaluate the operation .
returns the ith element of this vector .
find the name of the name of the given name .
push a new .
pop the object that is not active .
grows the size .
/ * ( non - javadoc )
sets the concept of the concept of a concept .
returns the value associated with the given index .
push out the given object .
pop the object to the list .
grows the current size of the buffer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
get the type of the given object .
/ *
main method .
get the field name from a field name .

post / run /
send a new transaction .
send a new agent to the bureau .
start the given stream
returns the byte array .
sets the byte order of the given byte array .
create a new .
adds a new to the given object .
evaluate the string against the query .
suspends the current state of this <code > beano< / code > .
{
gets the field name for the given field name .
gets the index of the given field in this field .
/ * ( non - javadoc )
parse the arguments and sets the arguments to the command line arguments .
/ *
registers a number of times .
构造 name =
parses the given string .
run the agent .
checks whether the given is a valid .
removes all the from the set of all the that are removed .
/ *
/ *
removes all the active entitymanagers from the list of active peers .
add active active repository .
wait for the message to be used to send the message to the server .
shuts down the server .
sets the current agent to the current agent .
moves the specified amount of times to the specified output .
main method .
/ * ------------------------------------------------------------
starts the opera configuration .
waits for the current time to be used .
called by the {
returns <code > true< / code > if the current queue is a valid .
checks whether the given { @link } is empty .
sets the to be used to create the agent from the given .

pick a list of the elements in the current expression .
sets the expression to be used for the expression .
joins an attribute in the given string .
joins the given join properties into a new join object
find the join result of a given join expression .
/ * ( non - javadoc )
returns true if the given {
/ * ( non - javadoc )
gets the { @link } for the given { @link } .
get the class name for this class .
{
/ * ( non - javadoc )
returns the path for the given url .
returns the content type of the given file .
convert a string representation to a {
returns true if the given parameter is a member of the given name .
returns the parameter value for the given parameter name .
parses the parameters of the given parameters into a map .
{
gets the file for the given file .
writes the given { @link } to the { @link } .
/ * ( non - javadoc )
scan the swagger method .
load the class name from the given class name .
load classes from a class .
load the scope from the given scope .
load the type from the given classloader .
returns the jwk type of the given {
returns the constructor declared by the constructor .
returns all the classes accessible by the given class .
initializes the class .
build a string representation of the given { @link string } representation .
returns the annotation for the given class or interface .
checks if the given annotation is a class annotation .
returns the annotation of the annotation of the given type or the annotation if it is not found .
returns the method with the given interface .
gets the class for the given class .
gets the class for the given method .
instantiate a constructor .
returns the handler for the given type .
register a custom converter for the given class .
/ * ( non - javadoc )
sets the value of the property to be used to create a value .
returns the type of the field .
get the from the given class .
determines whether the given { @link } is a { @link } .
persist the file to the file .
retrieves the current subscription from the scheduler .
sets the link for the given uri .
sets the link for the given link .
execute the request .
execute the request and executes the request .
handles the response .
handles the response of the response .
handles the links of the given links .
handles the http response headers that can be used to add headers to the header .
handles the { @link } .
parse a resource from the resource path .
returns a map with the key - value pairs .
handles the response content - type of the response .
checks whether the given method is a method with the given name .
returns the value of the row in the dataframe .
returns the message for the given throwable .
/ * ( non - javadoc )
{ @inheritdoc }
registers the processor processor to register the processor to register the processor .
registers the factory factory for the given factory instance .
register factory factory .
registers the processor processor to register the jaeger processor processor .
register the { @link } .
{
start all the classes in the registry .
destroy the class .
{
returns the instance of the given instance class .


adds the argument argument list to the argument list .
create a list of from the file .
write a file to the given file .

write the xml representation of this xml document to the specified writer .
initialize the arg map from the map .
checks whether a file is a file or directory .
create a new { @link } from a json reader .
create a new { @link } instance .
/ * ( non - javadoc )
sets the request path .
{
waits for a method to be used to wait for the given time to become the time .
{
/ * ( non - javadoc )
get the content of the given content type .
{
{
checks the given cell value and cell value .
gets the next queued event for a given amount of time .
/ * ( non - javadoc )
parses a string into a {
sets the field to the given field .
save the current connection to the server .
adds a log appender to the logger .
/ * ( non - javadoc )
remove a appender from the appender .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
parses the file from the walkmod - model .
resolves the names of all the resources of the given class .
get the files in the directory .
parse the given directory and the file path .
returns true if the given { @link reflector } is a { @link } .
returns the set of all the resources that are available on the server .
sets the model .
sets the file extension .
sets the model .
{
this method is used to determine the expected values for a list of synonyms .
match the collate the parameters and the score .
checks if the list of values are equal to the list of rows .
compares the two elements of this row .
substitute the given string representation of a given .
/ * ( non - javadoc )
{
returns the { @link } for the given { @link } .
/ * ( non - javadoc )
execute the given {

sets the designated parameter to the given value .
{
checks whether the argument contains a given argument .
returns the argument argument string for a given argument .
returns a new instance of the specified type .
merges the template into a template file
/ * ( non - javadoc )
/ * ( non - javadoc )
get the { @link } for the given model .
returns the directory for the given template path .
converts a date to a date - time field .
/ * ( non - javadoc )
sets the value of the property .
starts the camera .
configure orientdb application .
sets the window for the current window . <p >
prints the view to the screen . <p >
save the current user
write the contents of the stream to the output stream .
opens a new window . <p >
{
attach the request to the servlet .
detaches the from the client .
returns the { @link } .
returns the next session from the session .
dump the request header .
load the class name .
returns the list of all the that the hosting are used .

push a event to the queue .
/ * ( non - javadoc )
sets the remote host to the remote host .
loop on the dobjmgr thread until the next event is received .
get the converter for the given parameter .
send a message to the client .
removes the prefix from the path .
/ *
get the directory of the given directory
get the { @link } for the given { @link file } .
returns the absolute path of the absolute path of the absolute path of the given path .
returns the base path for a given base path .
returns the absolute path of the file .
{
{
returns true if the request header is a uri .
sends a request to the login server .
send request to the server .
sends a request to the server .
send a throwable to the server .
prints the error message to the console .
send json response .
add template parameter values .
add a list of { @link } s to a template .
initialize the template .
returns all templates from a given template file .
{
{
sets the disabled state .
deletes the html login button for the specified confirmation message .
called when the delete request has been deleted .
initialize the variables .
read a stream from the reader .
/ * ( non - javadoc )
creates a new instance of the given factory and initializes it
converts a byte array to a string .
returns all the headers that are contained in the given { @code } .
/ * ( non - javadoc )
{
returns the maximum count of the file specified by the given file .
returns all files in the file system .
returns the summary counts for the given file .

returns the summary of the row .
prints a file to a file .
get the summary of a file
{
returns the object instance of the specified class .
get a singleton instance of the specified class .
returns the first instance of the specified class .
get the remote interface for a remote managed instance .
get the { @link } instance .
add a row to the screen .
creates a new instance of the specified interface .
get the class for the class .
get all the { @link } s for this model .
returns the list of model resources found in the model .
{
sets the search criteria .

forces the given file to be used for the given directory .
sets the xml specification of the given inputstream to the given inputstream .
called when the error message is clicked .
parses the given input stream into a list of parameters .
returns the arguments for the given parameters .
returns the value of the given type as a string .
checks if the given type is a primitive type .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
process a formal parameter .
extract the string representation of a cell in a cell .
get the value of the requested resource .
{
{
get the builder for the given { @link } .
/ * ------------------------------------------------------------
<p > . < / p >
sets the port port of the port .
checks whether the request is a valid http servlet request .
returns true if the request is a request .
/ * ( non - javadoc )
{
remove the given index at the specified index .
create a new row of the specified index .
/ * ( non - javadoc )
/ * ( non - javadoc )
handle the .
{
gets the properties of the given bean .
get all properties of the given annotation
gets the annotation for the given annotation type .
<p > . < / p >
forces the directory to be used by the directory .
<p > . < / p >
log a message with the given message and logging the logging log .
lookup a slave request .
checks whether a host host is available .
/ *
returns the {
returns the for the specified method .
returns the class name of the class name .


<! -- start generic documentation -- > retrieves a column of column family .
/ * ( non - javadoc )
initialize the map .
/ * ( non - javadoc )
gets the cookie name .
add a cookie to the set .
add a converter to the list of registered converters .
remove a cookie from the set of cookies .
returns an iterator over the specified { @link iterator } .
/ * ( non - javadoc )
gets the from the file .
add a class to the list of fields of a given type .
compile a groovy class .
verify that the given token is valid .
get the value of the file or file name .
creates a new uri based on the uri of the uri .
generates a new connector .
{
{
{
returns the request from the servlet request .
{
executes the given transaction on the transaction .
executes the given transaction on the given object .
wraps the given throwable to a throwable that is a throwable that is not a throwable .
returns the file for the given file .
returns the files that were processed by this directory .
{
{
returns the instance of the specified instance .
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
returns the path of the given path .
saves the current connection to the server .
sets the driver name to driver .
returns the configuration for the configuration .
{
{
checks if the path is a path in the given path .
returns the { @link } instance for the given { @link org . apache . flink . maven . spi . } .


converts the window to the window window .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the request for the given session .
/ * ( non - javadoc )
{
{
binds the specified {
reads the metadata for the given metadata .
writes the given <code > object< / code > to the writer .
{
/ * ( non - javadoc )
returns the resource for the resource .
gets the http response body .

deletes the content of the request .
{
{

/ *
{
subscribe a jingle event to a jms configuration .
handles the post requests .
upload the upload to the current notification .
deletes the document and removes it from the server .
{ @inheritdoc }
returns the argument argument for the given argument name .

extract the row column of the given column

returns the argument names of the argument names .
checks whether a given cell is a cell of the given cell .
roll through the task schedule .
/ * ( non - javadoc )
purges the task .
{
{
{ @inheritdoc }
{ @inheritdoc }
{
====================================================================================
display a user - defined user - defined user .

sets the connection manager to be used for the connection .
{ @inheritdoc }

verify that the handshaker request is authenticated .
returns the image for the specified resource .
creates a map of the track parameters from the current user .
configure the application to load the nvd cve file .
prints the banner text html .
prints the console .
creates a new { @link } for the given { @link org . apache . commons . maven . } .
returns the directory of the given directory .
register a shutdown hook .
checks whether the given string is a valid debug - level attribute .
{
start the new record
returns the method that is used to convert the method to a method .

transform the given into the .
trigger a notification .
called when the trigger is started .
returns the { @link } that matches the given event .
inserts the specified row into this table .
returns the count of counts in this file .
<p > . < / p >
format the given string to the given format .
setter for score - sets score of the score for the score
getter for - gets
setter for - sets
getter for - gets
setter for - sets
this method is called by the constructor to register the { @link } .
getter for - gets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for lemma - gets
setter for lemma - sets
getter for - gets
setter for - sets
getter for - gets
setter for variablename - sets
getter for - gets
setter for - sets
getter for - gets the list of the sections of the document
setter for protein - sets
indexed getter for wordforms - gets an indexed value -
indexed setter for protein - sets an indexed value -
getter for - gets the label of a document
setter for - sets
indexed getter for - gets an indexed value -
indexed setter for - sets an indexed value -
getter for genesymbollist - gets an indexed value
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for mentions - gets
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for confidence - gets rank
setter for confidence - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
indexed getter for - gets an indexed value -
setter for - sets an indexed value -
getter for - gets
setter for - sets
getter for - gets
setter for - sets
indexed getter for - gets an indexed value -
indexed setter for - sets an indexed value -
getter for - gets
setter for - sets
getter for - gets
setter for - sets
setter for docid - sets
getter for - gets
setter for elliptical - sets
getter for - gets
setter for elliptical - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for the type of the
setter for - sets
getter for - gets
setter for - sets
getter for operator - gets an indexed value -
setter for operator - sets the operator to evaluate to the of the
getter for operator - sets
setter for operator - sets the operator that is used to set the operator to evaluate on the of the
/ *
get the pid of a class
getter for - gets
getter for - gets
setter for - sets
getter for confidence - gets
getter for text - sets
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for - gets
getter for - gets
setter for - sets
setter for - sets
getter for - gets
setter for elliptical - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
create a servlet .
getter for - gets
setter for - sets
setter for genesymbollist - sets
getter for - gets
getter for - gets
setter for - sets
getter for text - gets the text of the text to be displayed
setter for pagenumber - sets the text of the text to be displayed on the page
getter for - gets an indexed value -
setter for - sets
getter for label - gets the label of the label
setter for - sets
returns the next character at the given index .
sets the bit at the specified index .
converts a string to a string .
{
frees the buffer from the given bytebuffer .
creates a new instance of the specified file .
create a new instance of the given object .
/ * create a new association for a given entityreference .
creates a new record .
creates a record record .
find the value for the given key .
{
flush the buffer to the buffer .
returns a list containing all the elements of this list .
concatenate two arrays .
joins a single {
joins a list of elements into a single string .
merges two arrays .
merges two sets of values .
removes the element from the array .
removes duplicates from the list .
returns an array containing the elements of the specified array .
returns a list of elements from the list of elements .
assign an array of integers .
returns a list of strings in a collection .
partitions a list of string elements into a list of strings .

returns the index of the given object in the array .
find the next character in the next character .
find the next character in the next character .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the string representation of the emoji .
/ * ( non - javadoc )
checks whether the given is valid
add the string representation of the string representation of the string representation of the string representation .
returns the id of the current unit .
add a string representation of the specified type to the specified type .
/ * ( non - javadoc )
/ * ( non - javadoc )
main method .
/ * ( non - javadoc )
checks whether the given string is a valid .
checks if the given url matches the pattern .
checks whether the given pattern is a pattern .
checks whether the given string is a regular expression .

checks whether the given string matches the given string .
checks whether the given is a valid .
returns the json string representation of the json object .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get a normalized polymernotation
gets the for this { @link } .

/ * ------------------------------------------------------------
returns the helm notation of the helm group .
get the helm notation for the input

get the list of all the classes in the list
get the list of all the classes in the list
get the list of all the rdns in the list .
get the base polymernotation
sets the .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a string to a string .
sets the annotation .
sets the string to be used for the specified string .
method to generate the monomer
method to create the helm
returns a for the given string .
{
/ * ( non - javadoc )
returns the list of all the values in this list .
parse a string representation of a .
/ * ( non - javadoc )
/ * ( non - javadoc )

{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last :
defines the string representation of the element .
{
get the statistics for the current thread .
/ * ( non - javadoc )
creates a new graph from a collection of edges .
creates a new graph containing all vertices in the graph .
initialize the and add it to the current set of values .
find all the nodes in the list of subunit nodes that match the given .
create a new writer stream .
subscribe to a java instance .
subscribe a method to a method .
subscribes to a given .
queues a shutdown message
unsubscribe to the given
sends a request to the client .
send a message to the server .
send a request to the server .
get the list of async requests .
forward a request to the specified type .
forward requests to the given erlang request .
perform a binary search on the given response and sends them to the given parameters .

performs an async on the server .
echo the message to the server asynchronously .
asynchronously sends the response to the server .
asynchronously sends the given response into the server .
asynchronously performs a complete pong on the server .
poll the transaction timeout .
shutdown the stream .
checks whether a given exception is a local channel of a given exception .
returns the local {
locks the current state of this task .
await of the current thread .
unlocks the state of the given task .
creates a worker worker pool .
tries to find the worker worker and the worker thread .
cancels the worker thread .
remove worker tasks from a worker pool .
/ * wait for a target point to the end of the queue .
tries to release the specified number of peers .
run the worker loop .
scan the task and its termination of the current task .
await tasks .
complete the task .
try to determine if a task is stale .
get the number of queued tasks for a given pool .
checks whether a termination is available .
/ * --- private methods ---
/ * package
returns the last task queue for a given queue .
try to find a worker by looking up the task .
returns the number of tasks that were processed by a given task .
invoke the given task on the given task .
submits a new task to the task .
returns the number of records in a queue .
create a new { @link } .
traverses a parallel gather into a {
push a task to the given task .
returns the value of the given timeout in the given { @code timeout } .
creates a new { @link } object .
{
/ * ( non - javadoc )
build a new { @link } from a string .
get the statistics for the current statistics .
shutdown the worker thread pool .
creates a new iterator for the specified elements .
creates a new element that is the element to the specified list .
creates a new { @link } .
reverses the elements of this queue .
returns an iterator over the elements in this list .
creates a set of elements from the given { @code hashset } .
creates a new {
creates a new <code > set< / code > that contains all elements of the given <code > iterator< / code > into the <code > collector< / code > .
creates a new { @link } for the given { @code hashset } .
returns a string representation of the given element .
find the first element in the iterable that matches the given iterable .
returns all of the elements in the given iterable .
maps a collection of objects to a list of collections .
creates a new { @code } for each element of the given { @code supplier } .
<p > out a collection of items in a substream . < / p >
returns a composed of the elements of this stream which are equal to the specified values .
flattens a collection of iterables into a collection of items .
flattens a list of iterables into a list of items .
flattens the elements of a collection into a set of elements .
collect all the elements in the collection into a collection .
collect all of the elements in the collection and returns a list of the results .
collect all of the elements in the given collection of items and stores them in the result .
filters a collection of items by applying a predicate to the iterable .
filters the results of a single element returning a new list that contains the specified number of items in the specified collection .
filters the given { @code } and returns a new { @code } .
groups a collection of keys and stores them in the given collection .
groups a list of keys in the given list of keys and values in the given list of keys .
bitwise the given <code > step< / code > into a single value using the specified closure .
bitwise the given { @code } to a new { @code } .

creates a new { @link }
creates a new { @link } for the given collection .
creates a new array with the specified copy - added .
> > 例如：集合1： [[ ]
<p > converts an iterable into a collection of objects . < / p >
returns a list of objects that can be used to convert the collection of elements into a list of objects .
> >

creates a new { @link } that flattens the values of keys in the specified { @code } into a { @code } .
creates a new aggregating { @link } .
creates a new { @link } from the given { @code } and returns the result of applying the given function to the supplied { @code } .
merges the given into a .
push a task to the current stack .
push a task to the given task .
pop a task to a task .
pops the current status of the current object and then the new value .
returns the {
creates a new { @link } for grabbing the values of the given { @link number } .
creates a { @link } from a { @link } .
merges the given { @code } into a { @code > } .
returns an empty conjunction that contains the elements of the specified .
creates a new { @link } that combines two keys to the specified { @code } .
returns a new aggregating set operation for the specified elements of the specified collection .
creates a new { @link } from the given { @link } and returns the resulting { @link } .
/ * [ deutsch ] <p > versucht alle
shutdown the pool .
creates a mutable { @link } with the same size as the number of elements in the given { @link } .
returns a set of sets for this beanmap . the set is backed by the map .
load a file from a given file
normalizes a resource name .
/ * ( non - javadoc )
create a new instance of the given { @link document } .
{
{
append a buffer to the end of the buffer .
returns a copy of the specified array in this queue . the returned array can be used to permute the specified character . the returned array is the size of the specified character . the array is not guaranteed to be in the buffer .
returns the character at the specified index .
creates a charsequence for a charsequence sequence .
append a string to the buffer .
returns a new for the specified list of elements .
returns a new that returns the given list of elements .
find the first element in the first occurrence of the specified element in the given range .
serialize a {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
add a pattern to the list of methods that are not part of the endpoint .
add a verb to the given pattern .
{ @inheritdoc }

send a message to the server .
binds the specified { @link } to the { @link } .
binds the specified { @link } to the given { @link } .
checks whether the request is a valid .
checks if the request is a valid etag .
sets the fileupload header .

encode a string to a uri .
encodes a string into a string .
/ * ( non - javadoc )
gets the configuration for this application .
process the template text .
renders template with template parameters .

returns the int value of a long value .
get filename from a filename path .
gets filename extension .
apply the given path to the absolute path of the given path .
cleans a path to a string .
trims the array elements from the array .

splits a string into a single element .
convert a collection of strings to a string .


fills the string with the specified width and height .

converts a hex string to a hex string .
converts a string to a string .
cuts a string into a string .
removes the first character from the given string .
checks whether a string is a valid string .
escapes html characters in html .
returns the size of a given size .

run the run () method .
{
checks if the user is a login .
logout a logout request .
get the user credentials for the given user .
gets the current user session .
sets the session attributes for the user .

saves a user to the twilio api .
get the from the user agent .
gets the cookie from the request .
对明文进行加密
returns the user - defined cookie for the given .
decrypts a string with the given string .
decrypts the given byte array with the given key .
creates a new message instance .


create a new message .


returns a {
returns an { @link } for the given message .
creates a message with the given message and the given message .

generates a hash code for a given key .

start the .
returns the names of all the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the names of the
creates a handler that can be used to create a handler for the given list of annotations .
scan the given list of annotations on the given list of annotations .
creates a new key - value pair from the given action .
returns the annotation for the given annotation .
returns all annotations of the given annotation if it is not found .

login to username and password .
login to username and password .

append the path to the file path .

returns the request uri .
get the ip address of the given address .

gets the cookie for the given name .
sets cookie to the cookie
returns the host name of the host name .







debug log .
returns the stack trace of the given native level .
sets the error correction of the given text .
sets the color of the graphviz description to be used .
sets the color of the framing of this viewer .
get the object for this .

sets the error message to be used for the given function .


creates a stringbuffer with the given string .
replace the pattern with the given pattern .
converts a byte array to a byte array .
converts a string to a byte array .
converts a byte array to a char array .
converts a byte array to a byte array .
converts a charsequence to a byte array .
/ *
checks whether the given character is a valid organisasjonsnummer .
returns the index of the specified character in the given string .
returns the index of the given character in the given string .
returns true if the string contains the given string .
returns a string array of all the strings in the string array .
returns the locale for the given locale .
returns the locale for the given locale .
gets the locale for the given language .
resolve the country code for a country code .
decodes the given string into a string .
returns a {

initialize the class for the given class .
renders template and convert it to a string .
returns the current thread to wait until the current thread is running .
returns a promise of the given job s number of values .
{
creates a resource from a resource .
returns the media type of the given request .
resize a given image .
resize the image .
crop a given image into a new image
converts a file into a base64 string .
add a file to the file .
creates a macro resolver .
parse the given string into a template .
invokes the given { @code } and returns the result .
invoke the {
sets the credentials for the credentials associated with this request .
get the response for the given request .
renders an error to the given message .

returns the view root element for the given view .
parse the path / url path .
renders the data in the specified .
renders data from the .
renders the .
renders the data in the given model object .
renders the data in the .
sets the model for the given model .
sets the for the given .
sets the data for this record .
sets the list of parameters for the given list of parameters .
returns the { @link } for the given { @link } .
returns the {
returns a datetime object that represents the specified date - time .
returns a datetime object that can be used to convert the request to a datetime value .
sets the item for this page .

apply a request to the server .
register a new { @link } .
decodes a hex string from a string
encodes a byte array into base64 notation .
url 编码
decode a url string to a string .
returns a list of all the matched components of this type .
returns the stack trace of the given method .
compact the memory
propagates the given { @code } in the { @code } .
returns the { @link } for the given { @link } .
checks if the given request contains a valid html fragment .
encodes a string into a character .

get the stack trace of a given exception .
checks if the given exception is a class of the given exception .
list the statistics for the given page .
list query objects .
list query fields .
list the rows of the model .
returns the compression charset for a given file .
find a collection of objects .
find all elements from a given query .
find a collection of objects .
close the stream .
close the writer .
copy the contents of the given inputstream to the given stream .
copy from input stream to output stream
copies all the elements from the given input stream to the given output stream .
copy all bytes from the input stream to the output stream .
copy characters from the input stream to the output stream .
copies all the characters from the input stream to the output stream .
copies the input stream to the given output stream .
reads a byte array from the stream .
compare the input stream to the stream .
compare two reader objects .
applies the { @link () } to the { @link } and returns the result .
sets the function of the given {
sets the function for the specified function .
sets the value of the provided function to the given <code > function< / code > .
sets the function name of a given function to a function . the function will not be set to the same type .
sets the predicate predicates
sets the predicate to use for the given predicate .
sets the given predicate to the given predicate .
sets the predicate of the given predicate .
removes the specified filter from the pipeline .

unmarshal a given class using the specified class .
applies the given method to the given context .
get the resource location of the classpath .


压缩
unzip a file to a directory .

initialize the application configuration file .
creates a new instance of the object from the given .
/ * ( non - javadoc )

returns true if the given type is a type cast to a type .

checks if the given type is a type
checks if the given type is a primitive type .
returns the type of the chainedproperty type .
returns the default class for the given type .
returns true if the given type is a type cast to the given type
checks if the given type is a type of type {
add a class to the class .
returns the type of the class that is the type of the given type .

checks whether the string representation of the given string is a valid email address .
checks whether the given string is a mobile device or a mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile mobile device .
checks if the string value matches the value of the given string .
checks whether the given string is a valid assertion .
checks whether a string value is a valid day .
returns true if the given string is a valid assertion .
checks whether the given string is a valid js code .
checks whether the given string is a valid cron expression .

checks whether the given string is a valid url .
checks whether a given date is a date or a datetime .
> > > > > > > > > > > >

converts an image to a string representation .
converts a string to a string .
reads a string from a file
converts a url to a string
converts a { @link } into a { @link string } .




{
/ * ( non - javadoc )
initialize the filter configuration .
{
sets the configuration for this servlet .
returns the version of the version of the version .
returns the template name from a template path .
returns the string representation of the given string .
converts a string to a byte array .
converts a hexadecimal string to a byte array .
reads the properties file from a given inputstream .
reads the content of the given inputstream .
reads a string from a file .
reads the content of the file from the file .
reads the content of the given stream .
write a byte to the file .
writes the given inputstream to the given stream .
返回数据给客户端
copies the contents of the specified target directory to the specified target directory . <p > this method is used to copy the directory to the given target directory .
this method is called when the user is not being restored .
sets the current project for the current project .
compares this to another .
adds a new { @link } to this monetary value .
returns a {
creates a { @code bigdecimal } whose value is { @code this } and { @code this } is the { @code bigdecimal } { @code this } and { @code this } is the { @code bigdecimal } { @code this } is the { @code bigdecimal } { @code this } is the { @code bigdecimal } { @code this }
creates a { @code bigdecimal } rounded by rounding the given { @code roundingmode } .
allocate the given number of times the given { @code } .
allocate a new instance of the given { @link }
converts a { @link } to a { @link } .
creates a new { @link } object .
load a list of properties from the given source .
serializes the document to the xml document .
get a document from a file .
get the xml document for the given document .
get the document from a dom document .

create a new from the given configuration
returns the classloader class loader of the current thread .
returns the class name of the named class .
returns the class for the given instance .
checks whether the given class is a class loader or a cglib - class or a cglib - class .
returns the name of the class file for the given class .
returns the package name of the package .
returns the package name of the given class name .
returns the name of the class that implements the given class .
returns the name of the method that is a method name .
returns the constructor that is used to create a constructor .
returns the number of methods that have been declared in the class hierarchy .
checks whether the given method is a getter method .
checks whether the given class is a primitive wrapper .
checks whether the given class is a primitive type .
checks whether a class is a primitive wrapper class .

checks whether the given class is assignable to the given type .
checks if the given value is a primitive type .
convert a path to a resource path .
convert a class name to a class name .
add a class path to the package .
returns the interfaces implemented by the given instance .
returns all interfaces implemented by the given instance .
returns all interfaces implemented by class class { @link classinfo } .
creates a class for a given interface .
sets the servlet context to use for the given context .
writes the given file to the file .
add a key / value pair to the dictionary .
applies the given { @link } to the client .
returns the number of milliseconds in the current thread .
locks the file to be used for the file .
returns a map of uri variables for the given uri .
compares two objects .
put a message to a given permission
checks whether the given class is a super class or interface class .
returns true if the given class implements the interface class .
returns a map of field names from the given field s class .
returns a new instance with the given properties .
binds the given { @code extension } to the specified { @code class } .
creates module extension from the given extension .
returns the set of interfaces that the given class is found .
compare two objects .
returns the value of the given type of the given type .
returns the {
returns the type of the given type .
returns the value of the given type and type of the given type .
convert the given object to a class
converts the given object to a java type .
query a named object .

this method will be used to create a new session .
生成摘要
initialize the configuration for the given .
sets the for the current configuration .
sets the field parameter .
sets the value of the field with the given value .
method .
creates a response object with the given value and response body .
converts a json object to a json object .


validates the given string to be used in the .
validates the input id and the id
validates the given id and returns true if the is valid .
validate the given string id .


converts a char array to a char array .
get the sum of the ith integers of the given int array .
get the for a given


get the number from a given string .
get the username for a given variant study id .
gets the age of the given .


get a parameter from the map .
creates a new { @link } with the given name and body .
sets the parent of the given parent template to the given parent .
applies the to the server .
sets the permission policies .
request the request and calls the () method . <p >
checks whether the given permission is a permission .
shows the dialog for the dialog
called on the application granted to the given permissions .
invoke the {
determines whether the given object is a permission .
returns true if the passed in value is a valid permission .
get the method invocation handler for the given method .

checks whether the given table is a table .
find the first record matching the given select criteria .
find the record for the given record .
delete a composite item .
checks if a given { @link } is a { @link } .
method .
returns the for the given .
checks if the given { @link java . lang . reflect . invocationtargetexception } is a { @link java . lang . illegalargumentexception } .
process the queue of the queue .
{
constructs a new { @link } instance .

<p > make a map of the <code > / code > to the <code > / code > .
matches the pattern against a pattern
initialize the title pane .
main
called when the button is clicked .
register a new { @link } .

set the properties of the screen .
set the property .
returns the instance of this class .
reads a { @link } from the given class .
reads the next character from the input stream .
puts a new element into the specified key .
removes the specified value from the map .
get the value of the specified class .
gets the { @link } for the given class .
returns true if the given class is entityclass .
get the class for the given class .
get all fields from the given field .
returns the conversion of the specified {
get the name of the field .
returns the setter for the given field name .
create a new instance of { @link } .
/ * ( non - javadoc )
change the current screen properties .
set the property .

returns the mapper mapper .
initialize the serializer .
creates a { @link jsongenerator } instance .














close the connection .
close a statement .
close the resultset .
returns the property value for the given property .
<p > fill the field with the given field . < / p >
sets the drawables ( drawn ) rectangle .
creates a new constructor constructor with the given constructor .
gets the token .
send a request to the client .
send a http request to the client .
send a http request to the server .
send a request to the client .
send a http request to the server .
send a http request to the uri .

send a response message to the specified { @link response } .

send a http request message .
sends a request to the server using the given { @link uri } .

send a { @link uri } to a uri .
returns the request method .
returns a new {
executes the given http request using the client .

creates a new credentials for the given username and password .
creates a { @link } from the given username and password .
returns the url of the host url for the host .
d497921
/ * documented
returns a list of elements of the specified class .
returns a { @link filter } that matches the given { @link class } .
{
authenticate a user .
get the user in the database .
retrieves a database connection from database connection .
add a float to the .
compute the dot product of the given double .
get the from the float .
> 如果传入多个值为null或者空，则返回0

提供 ( 相对 ) 精确的除法运算 当发生除不尽的情况时 由scale指定精确度
提供 ( 相对 ) 精确的除法运算 当发生除不尽的情况时 由scale指定精确度
rounds the given rounding mode to the specified scale .
rounds the given rounding mode to the specified scale .
converts a float to a float .
convert a float to a float .
register a class with the given parameters .
parse a date into a date .
parses the given string using the given pattern .
copy attributes from the given object to the given object .
copy the attributes from the given object to the given list of attributes .

visit a method declaration .
<p > fill the given entity with the given name . < / p >
accept a file or directory .
{
returns an array containing the elements of the specified array .
/ * documented
returns a list of elements of the specified class .
returns a { @link filter } that matches the given elements .
copy from input stream to the input stream .
copy the contents of the given stream to the given stream .
convert the class name to a class name .

converts a date into a string .
returns a new { @link } that is a valid filter .
get the property for this key .
sets the property .
adds the frame to the gpu foreground .
{
/ * ( non - javadoc )
print the help for <code > options< / code > with the specified command line syntax .
parse the given parser options .
initialize the properties file .
transfer the properties to the current working directory .
returns the next file in the current file .
/ * ( non - javadoc )
{
initialize the properties file .
initialize the properties file with the given properties file .
add a file to the given file .
add a new panel to the layoutmanager .
set the properties of the current configuration .
set the properties of the current configuration .
returns a collection of url classes that are the classpath for the given classloader .
returns a list of url classes that are loaded from the classpath .
create a new instance of { @link } .
returns the classloader of the current thread .
load class name .
load class name from class name .
returns the canonical name of the class name .
returns the resource with the given name .
returns the resource as a stream .
get the class name of a class .
get the class name of the class file .
initialize the port of the given port .
initialize the uri of a uri .
initialize the scheme uri from the uri .
initialize the authority from the authority string .
initialize the uri with the uri .
returns the host part of the host .
sets the scheme to the uri .
sets the string representation of the given string to the specified string .
sets the host name to the host port of the host .
sets the port to the port of the port .
sets the path to the path .
append a path to the path .
sets the query string for the query string .
sets the fragment .

checks whether a string representation of the given address is a valid address .
encodes a string into a byte array .
encodes a string into a string .
/ * ( non - javadoc )
creates a new { @link preparedstatement } from the given { @code parameters } .

initialize the service .

sets the url to use for the given url .
get the clipboard contents .
sets the clipboard .
/ *
open a file .
load a service from a class .
sets the parameters of the given parameters .
get parameters of the thrift service .
find the for a given id .
find a class by looking for a given class .
debug - only way of the given {
parse the response and response body .
extract a device from a device - device device
get the list of all the credits from the given list of date .
/ * ------------------------------------------------------------
appends the element to the next element of the specified element .
appends the backlog to the buffer .
returns the next element of this queue .
returns an iterator over the elements of this stream .


> >

format the given string to the given string .
gets the encoding of the given string .



creates a new object from the given string .
parse the given value .
initialize the xstream class for the given xstream .
returns the driver driver name .
gets the parent of the parent logger .
returns a map of all the keys in the map .
returns the last modified time of the last modified time of this file .
post messenger
/ * ( non - javadoc )
<p > writes a request to the specified field . < / p >
checks whether the given class loader is available .
<p > checks whether the <code > object< / code > argument is assignable to the <code > and< / code > argument . < / p >
creates a connection from the given connection .
/ * ( non - javadoc )
create a callablestatement instance
returns the entry at the specified index .
/ * ( non - javadoc )
get the audit properties for the given audit type .
<p > make a mapping to the database . < / p >
visits a declaration of visiting the given visitor
visits a declaration of the given visitor instruction .
visits a class declaration .
visits all declaration declaration modifiers for the declaration of the declaration .
add a panel to the panel .
add all the screen listeners .
change the selection property of the selected item . <p >
sets the selection combo box . <p >

build a configuration from the given properties .
gets the value for the given key .
<p > returns <code > true< / code > if the entity has been deleted . < / p >
filter the filter .
returns a new filter for the specified criteria .
filter the declaration of this filter against the given declaration .
filter the declaration of this filter against the given declaration .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the map of the current configuration of the map .
set the field to the given field .
make a new { @link constructor } with the given { @code } .
get the class type for a class .
get the class type for a class .
get the class for the given class .
returns the sole interfaces for the given class .
returns the type of the specified class or interface type .
get the interfaces implemented by the given class .

add a new panel to the layoutmanager .
set the property .
set the property .
initialize the properties file .
transfer the properties to the given destination .
add a file to the given file .
initialize the .

returns true if this list contains the next element .
skips a file or directory .
add a new panel to the layoutmanager .
set the properties of the file .
set the property .
/ * ( non - javadoc )
returns the connection datasource

build a new instance .
copy the given map to a map with the given source key .
initialize the properties .

method .
add a file to the file .
get the filename for a backup file .
{
{
matches the path of the given path .
audit audit event for completeness .
main method .
run the .
process the source file .
query the object arguments
replace the characters in the string with the given trailing characters .
creates a string representation of the given bytes .
reads the fields from the given reader .
<p > reads all attributes from the given reader . < / p >
get the index of the named indexed index .
parse a string from the sql string .
returns the value of the specified form of the specified form .
returns the model model
find the parent area of the given area .
/ * ( non - javadoc )
processes the command line arguments and sets them to the command line .
authenticate a principal .
<p > reads entity from db . < / p >
initialize the properties .
initialize the .
add a file to the given file .
/ * ( non - javadoc )
returns true if the given type is a valid type .
returns true if the given type is a valid type .
convert a string representation of a type to a string representation .
returns the identifier of the name of the name of the name .
returns the executable executable of the given class .
finds the first argument of the given class or interface class .
checks if the class is compatible with the given class .
writes the characters in the given character to the stream .
normalizes the given path and returns the normalized path .
concatenates the given parent and parent of the parent .
get the relative path of a path .
converts a path to a string .
converts a path to a string .
converts a path to a string .
creates a new instance of the given class .
returns the constructor declared by the constructor .
find a constructor that matches the given parameters .
get a named parameter with the given name .
search for a named parameter type by name .
returns the { @link } for the given { @link } .
creates a new instance of the given { @link object } .
get the value of the attribute from the given object .
serializes the given object to a { @link } .
serializes the given { @link } to the { @link } .
converts the given collection of objects to a collection of objects .
sets the value to be used to convert the value to the field .
sets the value of the specified attribute value to the specified value .
returns true if the given { @code file } matches the { @code file } matches the { @code } .
validates the credential from the credential .
/ * ( non - javadoc )
returns a new saxresult instance with the given configuration .
returns a map of labels for the given labels .
extract the values of the given values from the given list of values .
<p > make a mapping to the database . < / p >
returns the type of the given type .
resolve the type of { @link typevariable } s for { @link class } .
returns the type of the given type .
returns the class for the given type .
<p > fill the field with the given field . < / p >
returns the last modified date of the last modified date . the last modified date of the last last modified date is the last modified time . the last modified time is the last modified time of the last modified date . the last modified time is the last modified time of the last modified date of the last modified time . the
initialize the properties .


add a file to the given file .
change the path to the file path .
poll the queue and unlocks the queue .
polls the process of the process of the process .


循环向上转型
循环向上转型 并强制设置为可访问 .
循环向上转型
get the constructors for the given class .
returns the constructor for the given class .
get the methods annotated with the given annotation .
get the constructor for the given annotation .
{
{
/ * ( non - javadoc )
create a prepared statement for a preparedstatement
validates that the given class is a class .
add a panel to the layoutmanager .
change the property .
set the property .

returns true if the file ends with a given filename .
initialize the properties .
initialize the properties file .
method .
returns the next file from the file .
/ * ( non - javadoc )
make a map of the given url to the given url .

/ * ------------------------------------------------------------
dump the contents of the given byte buffer .
returns the class for the given class name .
{
set the last time stamp .
reads the class for a class
resolve the string representation of the given java object .
trim the given string .
<p > . < / p >
> > >

compares two strings lexicographically ignoring case considerations .
checks whether a string starts with a given prefix .
returns true if the string is a valid suffix .
returns the index of the first occurrence of a given substring starting at the start of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence
returns the first index of the given string that matches the given string ignoring case .
returns the first index of a string that matches the given string .
returns the index of the first occurrence of the specified character in the specified string
returns the last index of a string that matches the given string .
returns the last index of a string that matches the given string .
returns the last character in the given string .
returns the last index of a string array
returns the last index of the last occurrence of the specified string in the given array .
returns the substring of the string with the given string .
returns a substring of the string that starts with the given string .
returns the substring separator .
returns the substring of a string with the given separator .
returns the last character separator from the given string .
returns the last character in a string .
returns the substring of a string with a given string .


returns the substring of the given <code > string< / code > starting with the given character . if <code > len< / code > is <code > null< / code > then <code > false< / code > will be returned .
repeat a string with a string separator .
<p > repeat a string with a separator . < / p >
deletes a string from a string .
removes a string from the string .
removes a substring of the string from the end of the string .
removes the first occurrence of the specified string .
removes the first occurrence of the given string from the end of the string .
removes a string from the list of strings .
removes a trailing character from a string .
converts a string into a string representation .
{
{
{
{
{
clean up the state of the current state .
initializes the audit configuration .
this method initialises the message queue .
initialize the validator .
initializes the .
<p > . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
add a new panel to the layoutmanager .
change the current date and time to the current date .
set the date property .
returns the locale for the given locale .
returns the locale for the given locale .
returns the given language for the given locale .
resolve a string for the given country code .
returns the locale for the given locale .
decodes the given string into a string .
converts a locale to a locale format .
returns the format of the given locale .
returns the { @link } for the given { @link locale } .
create a new instance of a statement
removes all elements from this list .
push a element onto the element .
pop an element from the stack .
returns a stream of inputstream that contains the input stream .
replies the charset for the given { @link charset } .
reads properties from the file .
write a properties file to a file .
parse arguments and sets the properties of the given properties .
add a parameter .
register a new response
returns the value of the specified type as a java type .
initialize the property .
make a clear button in the form of a control button .
adds a combo box to the list of selected items .
creates a panel that alters the given panel with the given panel .
get the pathinfo path of the request .
encodes a password .

checks whether the given { @link } is a { @link }
sets the value of a parameter to the specified value .
{
{
build properties from the configuration
checks if the path matches the pattern
matches a path against a path starting with the given path .
returns true if the given path is a valid .
moves the specified forward position to the specified .
returns true if this box intersects this element and the other .
checks if x and y are equal .
returns a new view of this rectangle with the specified bounds .
returns a new { @link } which is used to create a new { @link } which is used to create a new { @link } .
replace the box with the given width and height .
converts a { @link } to a { @link }
returns the smallest of this circle or null if the supplied bitmap is not a new one .
returns the smallest of this circle or null if the box is not already visible .
get filename from file path .
get the file extension of the file .
set the property .
set the property .
returns the index of the first column of the specified column .
{
get the current cell s cell .
get the specified absolute coordinate to the given position in the given rectangle .
get the specified area in a given absolute area vertically by this rectangle .
find the first cell in the cell .
find the cell in the given cell .
calculates the intersection of the areas that are contained in the grid .
calculates the of the ascender .
replace the parameter with the parameters and replace the parameter with the given parameters .
gets the from a given class .
gets the { @link } for the given class name .
<p > synchronize - by method for invoking the operation . < / p >
adds a new panel to the panel .
unwraps the given throwable to the throwable if it is not a throwable .
appends the given element to the given {
appends the buffer to the buffer .

dump the byte array of bytes to the string representation .
/ * ------------------------------------------------------------
reads a multipart file .
add a bean .
add a new bean to the bean .
add a bean .
add a new named bean .
add a new bean to the bean .
add a bean to the bean .
{
/ * ( non - javadoc )
unwraps the given type to the given type .
main method .
/ * ( non - javadoc )
resize the given buffer .
renders the given data point in the given instructions .
visit the mission initializer .
visit a variable declaration .
visit a literal literal .
gets the value of the first argument <code > int< / code > .
initialize the initialization parameters .

<p > copies the part of a { @link } . < / p >
add a child of this node to the specified child node .
clear all children
returns the next element in the next queue .
returns the next element of the first element of the first element .
adds a new body to the list of body .
adds the given parent to the parent list .
evaluate the era by using the given numberformat operator .
change the mouse event listeners .
registers a drag button panel .
process the input stream to the current result node .
add a component to the component .
remove the component from the component .
returns the size of the parent of this view .
lays out the textfield for the given container bar .
update the component bar .
get the url to the specified url .
create a new instance of a type based on a name and type
accept the visitor to accept the given visitor .
submits a request to the server .
evaluate the term against the given term .
returns the that is the specified element .
this method is called by the to determine whether the is done .
compares two iterators
get the name of the server .
gets the value of the server .
get the global server s server .
this method is called when the server is running .
get the value of the server in the server .
get the value of the server s value .
get the value of the server s value .
handles the server to be used for the server .
/ * ------------------------------------------------------------

renders the current page on the specified page .
returns the number of inserted elements in the specified name .
/ * ( non - javadoc )
resets the state of this samediff instance .
initialize the .
get the value associated with the given key .
gets the index of the specified key in the specified key .
associates the specified key in the specified key .
{
remove the mapping from the map .
remove the value at the specified index .
returns true if the property is not found .
sets the setter of the method to the setter .
gets the property of the given property on the given object .
checks if the class is a primitive type .
initialize the class .
jcalendar change the event notification that the property is not changed .

returns the {
sets the of the .
returns a list of {
this method is called by the { @link () } method .
returns whether the given expression is a child of the given expression .
ends the current table and adds the current row to the table .
compiles the query from the query .
compile the subgraphs of the given clause .
compile the plan clause .
find the number of arguments in the given order .

/ *
/ *
/ *
adds the given { @link } to the builder .
display the query for the given query .
convert a number of bytebuffer to a bytebuffer .
convert a char to a string
sets the id of the attribute .
returns the string value of the attribute value .
sets the value of the attribute .
parses the given { @link } .
read the term from the input stream .
gets the item for the item .
checks whether the class is a class .
checks whether a given class is a type of class .
checks if a given parent is a child of a parent .
checks whether the classnode is a subtype of the given class .
returns the class name for the specified class .
create a new instance of the given class .
creates a new instance of the constructor with the specified constructor .



returns the constructor that is annotated with the given constructor .
find the set of methods that match the given property name .
renders the table to the given table .
returns the current url of the current page .
returns a queue queue with the given queue and its queue size .
returns a queue queue for the specified queue .
get the queue of queues .
get the queue of queues .
get the queue of concurrent queues .
get the queue of concurrent queues .
get the queue of queues that have been known to the queue .
converts a object to a type object
resets the state of this filter .

find the search for the given node .
search for the next occurrence of the given path and returns the first matching path .

create a new instance of a type from a given min and max .
returns all the values of the given {
returns an iterator over all elements of this iterator .
evaluate the operator
/ * ( non - javadoc )
create a new
{
/ * ( non - javadoc )
{
{
{
/ * ( non - javadoc )
{
get the for the given column descriptor
sets the name of the .
/ * ( non - javadoc )
add a table to the table .
validates the values of the values in the list .
{
find all variables that have been declared in the given { @link term } .
find all variables that have been assigned to the given {
flattens the given { @link term } object .
flattens the given { @link } into a { @link term } .
converts a { @link } to a { @link }
compares the two nodes to the specified node .
reads a string from a file .
reads a file from a file .
writes a file to the output file .
reads a string from the stream .
adds the given element to this set .
removes the specified element from this set .
add an element at the specified position .
removes the element at the specified position .
adds all of the elements of this collection to the specified collection .
enter a clause for the given clause .
enter a predicate to the current class .
creates a new node that matches the specified node .
/ * ( non - javadoc )
generate a pretty printed string representation of the output .

compile a datalog code by applying the given function to the .
/ *
/ * ( non - javadoc )
checks whether the given byte is a valid local variable .
checks whether a given expression is a valid variable .
/ *
returns the value of the given property in the given string .
returns true if the given string is a valid attribute .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new instance of this class
************* var ****************
executes the action on the given action . <p >
returns the elements of this list at the specified index .
paints the background of the specified graphics context .
paints the given component .
returns the size of the window .
set the paint of the render paint .
paints the given { @link } .
documentation inherited from interface

creates a new foreground of the specified width .

converts a {
visits the component .

returns true if the given { @link } is valid .
processes a json - report and executes the query .
process a request to a given print
handles a http request .
handle a request to a http post .
handle a http request
split a key - value pairs into a string .
this method returns a list of all the that are part of the given query .
restores the current stack .
returns true if the column is valid
enters a concept of the given entityreference .
enter a new .
sets the algorithm used for the given algorithm .
search for the strongly that the search is running .
opens the grid .
adds the query to the server .
get the for the given url .
performs the server to receive the server .
unwraps a single - line type .
search for the next node in the given collection .
resets the token .
main method .
returns the list of all the sources that are contained in the source .
/ * ( non - javadoc )
returns the term represented by this term .
returns the term terms for the given term .
returns a <code > / code > object that contains the pseudo - atom of this atom .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
/ * [ deutsch ] <p > versucht ein intervall und diesen tag mit der angegebenen . < / p >
/ * [ deutsch ] <p > versucht ein intervall . < / p >
/ * [ deutsch ] <p > versucht den und angegebene intervall . < / p >
consumes the next token from the token .
consume the given { @link uri } .
src / main / / / / .
initialize the fields of the .
consumes a token from the token .
consumes a token from the token .
bind the transaction id to the transaction .
rollback the transaction .
collects elements from iterator .
adds the given to the list of the instructions that are reachable from the given .
/ * ( non - javadoc )
/ * [ deutsch ] <p > erzeugt ein neues iso utc - - kalenderdatum in ein - zeitzone . < / p >
converts a long into a long .
converts a long time unit to nanos .
converts the specified amount of time to a local date time unit .
converts the julian day of month days to a julian day .
converts a number of hours to hours .
sets the amount of time in milliseconds .
creates a new long value for the specified time period .
converts a time to milliseconds .
sets the value of the specified time in milliseconds .
converts a long into a long value .
converts the year to milliseconds .
convert a long to a bytebuffer
convert a long to a bytebuffer
returns the day of the time zone of the given year month year .
reads a block of bytes from the given byte array .
reads a block from the byte array into a byte array .
returns true if the specified key is a hash .
remove the specified key from the map .
clear the contents of this map .
applies the entry to the entry and the entry for the entry .
returns the entry for the specified key .
returns the entry of the entry in the table .
rehashes the given { @link bucketupdate } .
/ * [ deutsch ] <p > allen eine instanz der angegebenen variante zwischen elementwert . < / p >

returns the key for the specified key .
sets the layout of the view .
/ *
sets the next event of the current <code > / code > to the <code > / code > .
sets the current value of the current property .
sets the property to be fired when the property is not set . <p > if the property is not found remove the property .
gets the for the given .
returns an iterator over all of the elements in this builder .

<p > returns the value of the <i > i< / i > vector <i > i< / i > vector < / i >
calculate the kurtosis of the given number of doubles from the given distribution .
computes the counts of the counts of columns of the matrix
accept the visitor to be used by the visitor .
compares this date to the specified date . <p >
sets the time to the specified amount of time .
clone the node tree .
performs a mapping of the request to the specified {
converts the current time to milliseconds .
creates a new url from a string .
get the request info .
get the request headers for this request .
returns the request header .
returns the parameters for the request .
returns the request scope for this request .
get the child scope of this scope .
returns the session name .
returns the application context for this application .
get the principal for the user .


convert string value to string .
search for the next node in the given collection and returns the node joining the joining of the graph .
sets the current state of this screen .
walk the term and sets the state of the term to the root level of the .
/ * ( non - javadoc )
/ * [ deutsch ] <p > die aktuelle der angegebenen . < / p >
/ * delta for compatibility
notifies all registered listeners of listeners that occurred .
inserts the specified character into the specified jspwriter .
insert a new row at the specified position .
creates a new grid .
creates a table of this table .
enter a variable declaration
enter a new and add it to the given class .
leave all the .
/ * package
checks whether the given style is a known level of the given level .
adds all elements of this collection to the specified collection .
removes the specified element from this multiset .
returns the element in the queue .
returns an array containing all of the elements in this queue in proper sequence ( if any ) .
returns the last element in the queue .

accept visitor visitor
/ * ( non - javadoc )
sets the arguments of the given arguments .
returns the of the given .
checks whether the given { @link } is a valid { @link } .
compares this { @link } to a { @link } .
change the event for the change event .
update the current state of the button .
update the buttons for the buttons and buttons .
register the given controller to the given controller .

returns the enum class for the given class .
change the gauge color .
creates a new instance of { @link vuecomponentfactory } with the given name and name .
returns the variable that represents the given variable .
returns true if the given context is a valid { @link } .
get the attribute set .
sets the attribute values for the specified attributes
sets the attributes of the row .
gets the attribute value .
gets the value of the attribute row .
insert attributes for the given attributes
returns the value of the type of argument of type arguments .
creates a spinner - panel with the specified widths .
creates a new horizontal box for the given panel .
creates a panel that is used to create a panel .
create a new instance of a type based on the specified name and type .
creates a new timepickerdialog instance with the given number of random values .
accept a visitor to accept the current position of the current position .
create a new instance of the specified type .
returns true if the string is a valid value .
checks whether the given { @link jsdocinfo } should be inserted in the current context .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
get the position of the current position .
returns the context variable .
creates a new .
creates a new operator expression for a body .
create a new operator operator generator .
creates a new operator operator for a given operator clause .
create the initial state .
update the .
/ * delta for
returns the value of the current scope .
find the next node in the list of search results .
joins the given node .
/ * ( non - javadoc )
returns the block at the specified index .
returns a list of blocks that are contained within the specified block .
returns the properties of the given resource .
set the maximum rate limit .
reads the block of bytes from the slave .
reads the bytes from the slave .
skips the given number of bytes from the input stream .
compile a

gather the list of all expressions in the given term to the given { @link }
/ * ( non - javadoc )

visit the .
returns the last element in the sorted list .
returns the value of the specified element in the queue .
reads a byte from the byte array starting at the given offset in little endian order .
writes a varint to the buffer .
writes the given byte to the byte array at the specified offset .
reads a byte from the byte array starting at the given offset .
reads a short from the byte array .
writes a short to the byte array .

gets the value of the specified property .
returns the node underneath the given tree .
returns an iterator over the elements of this node .
returns the value of the attribute id .
gets the value of the first attribute in the current row .
sets the value of the attribute attribute .
returns a string representation of all occurrences of the given string array .

converts a string representation of a camelcase to camelcase .
converts a string representation of a string to a string .
returns the list of items for the given type .
unwrap the given { @link type } as a { @link java . util . logging . } .
returns the string representation of the current environment .
returns a list of all the handlers that have been registered with the given handlers .
sets the global value of the current request .
unwraps the specified server to the server .
visit the term .
/ * ( non - javadoc )
{
visit a predicate .
visits the { @link } .
visit a literal .
{
resolve the current point on the given voice point .
this method is used to create a label with the same label as the label .
resolve the given on the given
sets the for the given address .
sets the for the given address .
returns whether the given { @link } is a { @link } .
returns the id of the current node .
sets the id of the node to the given id .
returns the level of the specified attribute in the given string .
get the last path of the last call .
write the serialized data .
reads the attribute value from the map .
compute the for a given node in the current selection .
associates the specified value with the specified key .
returns <tt > true< / tt > if this map contains a mapping of a given vector .
sets the x - position of the specified x and y to the specified location .
removes the specified occurrence from the specified { @code x } and { @code x } and { @code x } .
returns the number of colors in the given { @code } .
adds a new validation message to the list of errors .
handles a { @link } .
writes a string to the string .
this method is called by the to verify that the handshake is done .
reads a new { @link bytebuffer } from a { @link bytebuffer } .

flush the file to the output stream .
shutdown the handshake .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
enters a symbol for the given functor .
returns true if the current element is a child of the top level root .
inserts a new attribute set into a new element .
selects the selected wpanel s selected items .
creates a new text table with the specified character set .
classify the current node from the current node .
get the for the server .
get the criteria for the server .
gets the property .
handles the server to be used by the server .
compares two <code > collection< / code > .
creates a queue for the specified node .
{
/ * ( non - javadoc )
visits the term symbol .
visits the variable symbol .
visits this context .
visits the { @code } .
/ * ( non - javadoc )
visit a literal .
returns an iterator over the connected elements .





log a long value in the given { @code int } .
returns the number of seconds for the given long value .
returns the number of digits in the given value .
returns the number of characters that are not in the given { @code int } .
returns the number of digits supported by the given decimal point .
creates a new which is the specified color and the color of the origin .
change color of the gauge .

sets the list of body to be used in this method .
/ * ( non - javadoc )
/ * ( non - javadoc )
set the operator to find the list of objects .
save the current
called by the to inform the next call to the current thread .
sets the current screen control .
evaluate the predicate .
returns the value of the specified property .
get the property value associated with a key .
get the property .
returns the properties of the specified key .
get the properties of the specified key .
get the properties of the specified key .
returns an iterator of the given key .
create properties from the properties file
builds a { @link } for the given { @link term } .
sets the maximum allowed number of time .
throttle time time duration .
returns the last time period of the last time period of the last time period .
sets the value of the named property .
evaluate the era by using the given decimalformat .
finds the first property in the properties file .
gets the properties of the given property .
returns the classpath for the classpath .
gets the properties of the properties file .
/ *
gets the term from this term .
sets the term to the given variable name .
accept visitor visitor
/ * ( non - javadoc )
{
create a subsequence of the specified start position and end sequence .
compares two bloom filter order .
computes the character value of the character .
compute the hash code for the given hash code .
creates a queue for the specified node .
clean up all resources in the queue .
/ * ( non - javadoc )
/ *
fire the service to the list of listeners .
visits all the classes in this context .
visits all the {
visits all the generators to be used by the given .
visits all variables that are the same as the order of the variables .
initialize the with the given .
prints the table size .
get the global parameters for a given site .
get the for the specified resource .
get the server s form .
handles the server to create a new document .
get the server s contacts .
get the server s value .
sets the value of the server side to the server .
get the server group .
submits a request to the server .
handles the server to send a new request to the server .
enters a new .
/ *
enters a variable to the given variable .
returns the value of the given property .

commits the transaction to the current transaction .
rollback the current transaction .
request a new transaction
adds a new transaction to the persistent storage
release the lock .
release the lock .
/ * ------------------------------------------------------------
enter a node in the given set of node .
inserts the specified element into this queue .
inserts the specified element to the queue in order to wait until the queue is completed .
returns the element that is currently active .
returns the element waiting for the queue waiting for this queue waiting for the specified queue or the specified queue waiting for the specified queue or until the queue is empty .
returns the queue of the queue .
add a new element to the queue .
tries to force the heap to the given queue .
returns the element at the head of this queue .
drains the elements of the specified collection into the queue .
drains the elements of this collection into a new list of all the remaining elements .
drains the elements in the queue into the queue .
insert the element into the record .
extract the { @link } from the { @link } .
/ * ( non - javadoc )
sets the given value to the given value .
sets the value of the given short value .
sets the value of the specified property in the given { @code value } .
sets the value of a long value .
sets the value of the given property in the given value .
sets the value of the given value in the given value .
sets the value of the specified property in the given value .
sets the property value .
sets the value of the given property in the given value .
sets the value of the specified property in the given value .
sets the value of the specified property in the given value .
sets the value of the property in the given property as a boolean .
sets the value of the given property in the given value .
sets the value of the property in the given property set .
sets the property .
sets the value of the given property in the given property .
sets the value of the specified property in the specified property .
sets the value of the specified property in the specified { @code value } .
sets the value of the property property in the specified property .
sets the value of the property property .
get the property s value .
get the property property
get the property from the provided property
create a jobdefinition for the given node type .
sets the .
clones the node s children of the node .
get the connection from the connection .
searches the node and returns the node s node state .
adds the node to the node .

/ * ------------------------------------------------------------
gets the message of the given .
get the buffer position of the buffer .
execute the query .
{
captures the fields from the class .
restores the object from the object into a .
get the value of the attribute associated with the given class .
put a value to the class .
get all fields of the class that are declared in the class .
main program to create a new .
executes the npm .
append a command line to the classpath .
setup the given bytebuffer .
returns the key for the specified key .
sets the value of the specified key in the specified key .
inserts a new element into the queue .
poll the queue of the given queue .
creates a new node representing the node of the specified node .
creates a queue for the specified node .
opens the grid monitor .
/ *
returns a new {

creates a new { @link } with the given { @link term } and returns the { @link term } of the given { @link term } .
create a new term object from the given visitor
adds a domain to the list of the spectopics in the domain .
sets the query .
resolves the set of variables that are matched by the given set of variables .
resets the list of the current values .
search for the next time in the current state of the given .
returns an iterator over all variables that are contained in the given set of variables defined by this { @link () } .
reads properties from a given inputstream .
reads properties from the file .
get properties of a properties object .
gets the properties of the given properties object .
trim the properties from the list .
returns true if the given name is a name .
paint the background mouse over the graphics .
computes the size of the grid size .
initializes the font .
adds a propertychangelistener to the listener
adds a listener to the list of listeners .
remove a listener from the listener
fire the event notification event listeners .
creates a new instance of a type given a type name .
compiles the given parameters into the given list of arguments .
clicked the action to the button .
called when the screen is clicked .
returns a request that returns the expected value for the given request .
accept the visitor to enter the next element .
shows the window .
shows the pane of the pane .
show the component of the given window .
show the component of the window .
show the component of the given window showing the window .
sets the for the given component .
show the current screen
shows the for the given
shows the background of the given {
returns the items for the item
returns the links for the given element .
unwraps the given type to the given type .
sanitize the document .
removes the attribute from the component .
waits for a timer .
waits for a timer of the specified queue .
executes the script .
append a command line to the package .
create a new instance of a type from a given name .
accept a visitor to accept the current position of the current position .
free this .
returns the list of links for the given element
loop over the line in the .
prints the stdout to stdout .
initializes the reader .
evaluate the query against the query .
evaluate the query .
get a type data for the given type .
get the data type of the given data type
get the data type of the given character .
get the data type of a native data type .
returns the data type of the given data type .
get data from a long data point
get the data for a given type
get the data type for a given type
returns the data type of the given string representation .
get the data type of the given object .
converts a primitive type into a boolean .
returns the type of the given type of the given type .
add a named value to the map .
returns true if the feature is a valid .
enter a to a
enter a variable declaration .
returns <tt > true< / tt > if this map object contains the specified key .
get the value associated with the given key .
puts the value to the map with the specified key .
removes a new key from the list of events .
removes the value from the specified object .
clear the data .
returns an iterator over the elements of this iterator .
expand the space .
{
insert a string into a new list of characters .
get the character at the specified character .
creates a new {
creates a new table with the specified table .
updates the listeners and updates the listeners .
insert a new row .
parse a sentence .
returns true if the current state of the current point is a value of the current state of the current state .
compare the node s and the of the .
accept the visitor to iterate the next visitor .
parse the expression from the given term clause .
set the operator to highlight
create a new { @link } with the given name and allele { @code name } .
checks if the given { @link } is a composing complex type .

<p > creates a new node . the node is created and returned . < / p >
write the specified byte to the specified byte order .
write a byte [] to a byte array .
returns the last string padded with the given length .
returns the error message for the errors .
returns the string value of the property that is the capitalized property of the current property .
get the usage width of the command line .
parse the options of the command line arguments .
add a new property to the list of properties that are not part of the properties .
adds a new property .
add a command line option .
/ * this method returns the properties of the given properties object .
checks if the given string is a valid option .
compare two sets of elements of the iterator to the first element of the iterator .
get the options for the current tag .
sets the options for this group .
returns the options that were added to the current user .
sets the value of the spinner tag . <p >
get the from the walkmod directory
stem the word in the current word .
main method .
returns the narrowest numeric value of the given type .
create a new instance of a type based on the given name .
sets the value of the current request .
resets the state of this arrayfile to the given buffer .
/ * ( non - javadoc )
returns the for the given .
execute a control .


calculates the for the given int .
call the onresult function for the given function
checks whether the given is a member of the given number of .
execute the given { @link } .

returns the next stack frame .
liest den folgenden eines und .
bind a single element to the list of .
/ * ------------------------------------------------------------
sets the element .
/ * ( non - javadoc )

liest ein
/ * private static final int = ;
get the state of the given { @link } .
checks whether a given is a .
get the { @link } for the given { @link } .
returns an iterator over the operators in the operator .

touches the specified point on the specified region position .
update the operator .
swaps the specified positions in the given range of the specified range .
converts a string to a list of characters .
returns the for the given list of tokens .
publish a logrecord to the logger .
converts the given logrecord to a string .
convert the given {
offer a new element to the queue
poll the transactions to the queue if it is not empty .
poll the queue behaviors for the next element .
returns the next queue if it exists .
acquires a lock on the current thread if it exists .
release the object .
/ * ( non - javadoc )
blocking method for creating a new queue waiting for the queue .
removes the specified queue from the queue and wraps the queue of the queue .
inserts a queue to the queue .
adds a queue to the queue .
returns the number of concurrent connections ( drawn ) capacity .
/ * ------------------------------------------------------------
/ * [ deutsch ] <p > eine neue . < / p >
increments the popularity of the current row count .
evicts the heap and writes the heap to the queue .
marks the size of the given signal threshold size .
lookup a jndi lookup .
binds the given object name to the given name .
binds the specified name to the specified name .
adds an object to the specified <code > id< / code > .
unbind the given <code > / code > to the <code > / code > .
renames the given name and its name .
renames the given name .
{
/ * ------------------------------------------------------------
compose a string with a name of the given name .
add a new property to the specified {
remove a property from the given component .

the rule is the current
generate a mediatype between media media
generate a mediatype .
barline
rule - sets the rule to the end of the node
add a rule to the
adds a child node to the node .
/ * ( non - javadoc )
this method is called after the group has been visited .
returns the selector rule .
analyse the given { @link }
************* smarts ****************
adds a rule to the next rule .
/ * ( non - javadoc )
xcom -
/ * ( non - javadoc )
/ *
************* operators ****************
************* smarts ****************

userdef - bias - mask -
replies the rule .
rule -
chord :: = userdef - staff - 39
print :: = ( )
gracing - num
/ * [ deutsch ] <p > interpretiert den angegebenen iso - 31 text . < / p >
ifield - bom
/ * ( non - javadoc )
resolve the given mixin type for the given node .
pushes a new variable declaration to the given name .

sets the maximum size of the row .
{
get the row of a row
remove a row from the row .
returns the maximum size of the column size .

updates the specified event in the given row .
updates the maximum width of the given column widths .
executes the given action on the given action .
compiles the given gremlin query and add it to the plan .
/ * ( non - javadoc )
<p > creates a new node representing the node and the of the given node . the first node is created from the current node and the new node is the root of the document .
executes the request .
compile the word .
fills the outer outer join with the given term .
this method initialises the .
checks whether the given { @link } is a { @link } .

convert a list of arguments to a string .
clear the map .
returns true if the given foreign key is not found in the map .
adds a new entry to the map .
remove the last occurrence of the specified key from this map .
returns a new symbol that is used by the symbol table .
returns the key for the given key .
get the key from the map .
adds a key to the map of key - value mapping .
removes the specified field from the heap .
{
open the monitor .
evaluate the value against the given { @code } .
starts the transaction .
called when the server shuts down .
called when the lock is completed .
waits for termination of threads to wait until the executor is completed .
add a listener to the list .
removes the listener .
create a new .
inserts a new element into the queue .
poll the node s node if necessary .
returns the number of bins in the given int .
update the node s minimum and maximum element if it is not already in the tree .
compares two nodes .
insert the node into the node .
pause the current thread .
restart the timer .
get the value for the given key .
put the value to the specified key .
removes the mapping from the map .
adds all of the mappings to the given map .
removes all listeners from the current thread .
get the name of the server .
get the for the server .
returns an iterator that iterates over all the elements of the specified <code > / code > .
returns a set of methods that implement the given method .
returns a collection of objects that can be used to find the first matching method for the specified method .
returns a new { @link } that contains all of the elements of the given { @link } .
find all the objects in the collection .
opens the screen window .
returns the next token from the next sequence .
get the of the specified .


restore a value from the database .
get the value of the property associated with the given class .
add a property on the property
add a property on the property .
captures the method with the given class name and method .
main method .
documentation inherited
called by mouse mouse mouse on mouse mouse mouse on the mouse .
get the server s path .
returns the link for the given link
pop the element from the head of this queue .
/ * ( non - javadoc )
called when the is clicked .
update the of a given variable .
prints the table to the table .
creates a new key that is the key for the given key .
convert a character to a string .
insert attributes for the specified attributes .
insert attributes for the specified attributes .
insert attributes .
updates the attribute values .
converts a string to a boolean
converts a string to a date .

checks if a string is a valid time .

returns a token that represents the given token .
get the source file for the given file .
get a source from the given inputstream .
{
returns the next token from the queue .
applies the given <code > / code > to the <code > / code > .
checks whether the given constant is a constant or not .
checks whether the given is a variable or a variable name .
checks whether the given instruction is a known instruction .
create a builder for the builder
renders the table headings in the table .
returns an array of {
returns the query for the given operator .
accept the visitor to be called for the next element .
/ * [ deutsch ] <p > eine
returns an iterator over the successors of this plan .
returns true if the input gate is not a number of arguments .
returns the first argument of the specified index .
{
/ * ( non - javadoc )
get the first call to this method
accept the visitor to be called for the next element .
/ *
returns the argument string for the given arguments .
gets a single typed document for the specified query parameter .
retrieve a list of query objects from the given list of rows and properties .
execute a query with the given query parameters .
called when the is changed .
/ * ( non - javadoc )
executes the .
called by the to update the .
creates a for the given .
/ * [ deutsch ] <p > interpretiert die . < / p >
returns the default value of the given object as a string .
get the object representation of the given object .
sets the type of the class to be used for the given type .
/ * ------------------------------------------------------------
prints the solution to the solution .
prints the current output for the given .
prints a variable to the given variable name .
returns a set of variables that are the same as the set of variables .
sets the operator to use for the operator .

run the loop .
read the stream of the stream .
initialize the .

returns the time for the time .
returns the elapsed time of the current time .
stop playback
update the track of the track .
update the track slot with the specified track .
{
update the volume of this device .
update the current music and the current device .
/ * ( non - javadoc )
renders the event from the given list of { @link } .
handles the
handles the { @link () } method .
handles the event .
fire the event to the playlist .
adjust the volume of the circle .
initializes the connection .
starts the server .
shutdown the connection
resets the parser .
parses the given {
process the packet to process the packet .
sets the option to the option .
creates a new chat listener .
gets the from the .
returns a list of ip addresses in a list of dns srv addresses .
sets the .
resets the map of the map to be updated .
sets the value of the specified property in the specified key .
adds the filter to the list of filters .
processes the request .
resets the configuration .

execute the request .
adds a acl to the acl .
remove acl from a list of acl


returns a permission list with the permission granted to the permission flags .
returns a map with the specified {
commits the transaction .
initialize the connection .
send a packet to the queue .
returns the next packet in the queue .
open the stream .
get the schema of the schema .

creates a new { @link closeablehttpclient } instance .
creates a new event from the given event type .
creates a new event event event .
/ * ( non - javadoc )
adds a descriptor to a list of descriptor .
{
add a new event listener .
receives a queue
start the for the given {
shutdown the timer and shutdown the timer .
creates a new { @link } for the given { @link } .
returns the { @link filter } that matches the given filter .
returns true if the given path is a valid file

rollback the current state of the specified transaction .
checks if the entry is a valid entry .
returns the key associated with the given key .
hash - hash function for the given hash .
returns true if the specified x and y are equal .
returns the value associated with the given key .
gets the entry for the given key .
puts a new entry into the map .
puts the entry to the map .
resize the specified new data frame .
{
{
remove the entry for the given key .
remove entries from the map .
removes all of the elements from this table .
adds a new entry to the list of buckets .
creates a new entry for the specified entry .
creates a new {
parse a date string from the given string .
parses the date and time zone to be used as a date .
parses the given name and returns the name of the first letter .



checks whether the given string is a valid domain
escape unprintable characters from a string .
unescapes the given string .
encodes a string into a printable string
hashes the given string with the given hash .
encodes a byte array into base64 notation .
encodes the given base64 encoded data into base64 notation .
encodes a base64 encoded data into base64 notation .
decodes data from base64 encoded data .

/ * ( non - javadoc )
set the for this screen
sets the current site to the current node .
sets the next call to the next call .
sets the current progress of the given view .
sets the current playback configuration .
set the
broadcasts the given playlist on the playlist .
handles the process of .
handles a volume of the volume .
handles a event
handles the track of the track .
returns the cache for the given name in this scope .
returns the cache for the given cache
returns the cache for the given request
called when a notification is deleted .
{
get the field id for a field .

returns a map containing the keys in the given map .
returns a map of all the keys in the map of key - value pairs .
/ * ( non - javadoc )
escapes escaped characters in the string .
escapes a string to be escaped by the given string .
<p > . < / p >

deletes the tree .
returns a new { @code } from the given { @code } .
{
gets the { @link xmppconnection } instance for the given { @link xmppconnection } .
enables the thread to run the given executor .
handles the connection to the server .
handles a connection to the server .
sets the ping interval alive .
schedules a periodic task to be sent to the server .
make a new thread .
destroy the given {
validates the given object to be used by the worker thread .
removes the value from the map .
{
remove a map from the map .
add an argument to the given {
adds a new command line options to the list of options .
add a option to the option .
checks whether the given option is a valid option .
parse the given arguments and returns the parsed arguments .
documentation inherited from interface
parses the given command line and returns the corresponding command .
shuts down the server .
initialize the connection .
sets the connection configuration .
/ * this method is used to create a client - side configuration for the service .
gets the { @link } for the given { @link } .
returns true if the server is available .
request the request method .
/ * ------------------------------------------------------------
connects the given connection to the cddb server .
notifies the connection that a connection has been started .
notify listeners that the connection has been started .
add a class name to the class .
returns a list of all known {
authenticate the given resource with the given string .
authenticate the given resource with the given credentials .
authenticates the user and returns the authorization token .
get the property object for the given name .
create a new lock on the given resource .
sets the output of the given plugin .
------------------------------------------------------------------------
returns the home directory for the given tool .
parses the command line arguments and returns a map of the command line arguments .
issue a message with a given throwable and the given throwable .
prints a log error message .
log a message .
creates an event event event .
creates an event event event .
notify all the listeners that a string is a map .
{
{
{
/ *
{
returns a sorted { @link } that contains the specified { @link org . apache . commons . . } .
get the cached map of cached keys

remove a cache key from the cache .
puts a new string into the cache .
filter the list of files that are the same as the list of filters .
get the locations of the file .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
adds the given to the list of the given .
adds the given collection of to the server .
/ *
activates the given .
execute the request
registers the event listener for this event listener .
register a listener for events .
write a property file to the output file
called when a file has been read .
sets the file name .
{
create a new .
create a new .
create a new { @link } that will be used to create a new { @link } .
create a new from the source player
create a new instance of a specific instance of a given .
create a new instance of the
create a new { @link } with the given { @link string } .
creates a new cluster with the given host name and the given parameters .
creates a new keyspace with the given keyspace name .

start the of the
stop the
this method lets the player is on a new one .
create a new { @link } for the given { @link } .
create a new { @link } for the given { @link } .
create an from the given source stream .
log a message .
append a url to the given url .
query a named url .
query a query param with the given name .
query a named url .
query a url
gets the breakpoints .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen button
check if the task is cancellable
checks whether a given host is a host or a port
gen - last :
creates a new image .
reads the text from the given file .
main method to run the main thread .
copies all values from the specified array to the specified values .
exports the contents of the given string to the list of known names .
returns the metadata for a given { @link xmppconnection } .
get the value of the specified index .
get the value associated with the given key .
get the integer value for a given integer .
get a double value .
get the string value of the string .
creates a new { @link } for the given job .
verify that the command is not in the command .
verify that the given command is the same as the given {
verifies whether the given command is a valid command .
creates a cluster for the cluster .
creates a new session from the cluster .
returns the cluster cluster for the cluster .
gets the cluster from the given cluster .
returns the session that is used by the session .
returns the session manager associated with the session .
returns the session that the given session is not empty .
bind a { @link } to a { @link }
bind a { @link } to a { @link }
execute the specified sql statement and executes the specified { @link preparedstatement } .
execute the preparedstatement and execute the given { @link preparedstatement } .
execute a { @link } for a given { @link } .
{
{
{
wrap async result of callbacks .
executes the async callback on the async executor .
executes a synchronous wait time .
wrap async result set
executes the given async callback
execute a batch of { @link } s .
execute the batch statement .
executes the async update operation .
filter the list of filters to be used by this filter .
returns the set of classes that are the specified class .
returns a set of subclasses that have been created by the classloader .
search for the given location in the given package .
searches the given directory and returns a map of package names to the given base class .
search for classes that match the given class .
sets the resource to the resource .
sets the provider to use when creating a new {
sets the to the
returns a list of all available resources in this list
returns the number of elements in this map .
{
/ *
returns the next queue waiting for the next packet .
process the packet to start the packet .
sets the supplied { @link } to the given { @link } .
get a description for a given project transformer .

create a new error message that contains an error .
creates a {
creates a { @link } instance .
checks whether a given { @link event } is a lifecycle event .
returns a map with the entries of the specified map .
returns the sorted sort of the current row .
determines whether the given is a valid .
enable or disable the default milliseconds for the given calendar .
{
decorates a { @link set } for the given set of elements .
sets the name of the group .
updates the state of the given type .
returns all groups of the group .
compares this to the specified {
get the value for the given key .
adds the given payload to the jsonobject .
remove the given key from the map .
returns a list of all the values of the given keys .
set the element
<p > . < / p >
get the { @link list } of { @link } s of { @link } s .
handle the event for the given event .
creates a new { @link } for the given { @link } .
reload the roster .
create a new group .
creates a new group with the specified name and the roster entry .
remove the roster entry from the roster .
returns all entries in this group
returns the user of the given user entry
gets the presence of the user presence info for the given user .
gets the presence of the presence of the user .
returns the user s granted for the given user presence presence .
returns the key for the given user .
sets the publishing of the offline offline publish event .
fire the event notification event listeners .
sets the password of the given password .
/ * ( non - javadoc )
sets the value of the specified value to the given value .
version&schema - specific filling into the pool .
{
creates a new event .
creates a new { @link eventpublisher } for the given { @link event } .
decorates the map of transformers .
clears the map .
set the volume of the player .
returns a list of all the resources that are available on the specified docx collection
create a new request that will be used to create a request for the player .
create a new { @link } for the given player .
create a new { @link } for the playlist request .
create a new request that will be used to create a player for the player .
get the value of the event type of the event .
register a new listener
initialize properties .
reload all properties from the properties file .

<p > . < / p >

reads a stanza extension from the stream .
decodes a value to a primitive type .
create a new .
create a new from the specified target and forward the given target to the given target .
create a new from the specified target and forward the given target to the given target .
create a new { @link } with the specified { @link } .
create a new .
verifies that the event is valid for the given { @link } .
creates a filter instance with the given filter .
creates a filter based on the given filter .
creates a new { @link filter } from the given { @link filter } .
creates a filter based on the given filter .
get the playback state for a resource
returns the key for the given key .
/ * ( non - javadoc )
returns the value associated with the specified key .
associates the specified value with the specified key .
removes the specified key from the map .
returns the set of entries for this entry .
returns the set of keys for this key .
returns the value of the mapping of this collection in the collection defined by this { @link } . the values are ordered by the same order as the value of the elements in this map . the collection is composed of the values of this collection . the collection is composed of the values of this collection . the collection is
purges the queue and remove the queue from the queue .
purges the reference from the cache .
gets the entry for the given entry .
hashes a key in the given key .
creates a new entry for the specified entry .
called by the writer method .
{
/ * ( non - javadoc )
sets the flag .
update the renewal banner patch as a new
send a message to the chanel .
delivers a message to the listener .
generates the script for the given script .
initialize the application configuration file .
initializes the preference .
initialize the application .

initialize the directory .
loads properties from the filename .
write the file to the output file
gets a model event from the list of { @link } .
decorates a collection of objects .
adds a new element to the list .
discover peers that are matched by the given number of addresses .
resolve the host from the port
returns the configuration for this connection .
{
get the attributes of the attributes .
sets the attributes of the attributes .
{
create a new live with the given target and destination source .
verifies that the given { @link } is connected .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
get the cluster leader
{
{
gets the session from the session .
gets the session from the session .
returns the session - session session .
add a connectionlistener listener
creates a packet that can be used to create a new packet .
add a packet to the listener .
adds a packet to the listener .
notifies the listeners that the packet has been started .
add a new packet to the packet .
fire the receive event to the current receive event .
initialize the class .
converts a value to a string representation .
connects to the remote server .
/ * () shuts down the connection .
add a notification listener .
rollback all locks for the given node .
returns the current session id for the current thread .
checks if the node is a node id .
get the value of the key in the map .
returns a new { @code } for the specified element { @code this } .
{
{
remove the given object from the current node .
get a node at index
find the first node in the current node at the given index .
returns a node at the specified position in the tree .
compare two objects .
chooses a node at the given index .
returns a node conditioned on the node index .
returns the node at the specified position in the tree .
returns the node at the specified position in the tree .
/ * returns a node of the given node as a node .
/ *
copys a value to a new element .
checks if a node is a child of a node .
checks if the node at the specified node is a node at the specified position .
make a new node at the specified index .
make a new node at the specified index .
returns the parent node of a node at the given node .
returns the parent node of the given node at the given node .
returns the node at the specified position in the given node .
returns the child node of a node at the given index .
checks if the node at the specified position in the given node is a child of a node .
checks if a node at the specified node is a child of a node .
rotate the subtree of the child of a node at the specified position .
rotate the node s children at the specified position in the subtree rooted at the specified node .

the node at the specified index .
delete the child nodes of the child node at the specified index .
swaps the given node at the given position in the tree .
checks if the given object is a valid .
insert a node into a new value .
/ * ( non - javadoc )
{
{ @inheritdoc }
{ @inheritdoc }
removes the mapping from the specified key .
{
{ @inheritdoc }
{ @inheritdoc }
returns a new { @code entrystream } which is the most recent entry for each item in the list .
copies the entry to the current node .
get the node s child node of the given type .
remove the mapping from the cache if it is not already present in the cache .
deletes the expired entries for the given node .
caches the cache for the cache .
ds method to activate this component .
{
/ * ( non - javadoc )
process the response .
returns the playlist for the playlist .
returns the player s current playlist .
get the for the given player
initializes the entry store .
opens the server - side entry group .
/ * ( non - javadoc )

scan the given number of patches to the address of the given address and the given address .

returns a new treemap that is the new { @link } .
returns the set of entries for the entry .
{
read a document from a file .
reads a document from a url .
reads a document from the stream .
reads a document from a reader .
reads the text from the given document .
read a document from a stream .
reads the document from the given reader and returns it .
parse a document from the xml document .

/ * [ deutsch ] <p > ; ; ; ; ; ; ; ; ; < / code >
checks whether the track is played and started .
checks whether a given region is authorized for a given user .
update the time range .
export the data to a local table .
imports the given from the given to the given .
imports a resource from a resource into a .
returns a map with the specified key and value .
sets the filter to be used by the filter .
add a new class to the class .
add a class to the list of classes that are not implemented .
/ * ( non - javadoc )
executes a given delegate and executes the given { @link } .
prints the list of all the objects in the list .
prints the usage of the usage of the usage of the usage of the usage .
main program to run the main program .
create an from the given source stream .
create a new event .
refresh the cache and the current schema .
get the schema of the schema
write a file to the file .

add a new option to the registry .
get the schema of the
get the field name for a field .
extracts the name of the given entry .
returns the response body as an inputstream .
gets the body body body .
close all the streams .
returns a map containing the entries of the specified map .
get the client s client .
releases a { @link } .
creates a new event listener for the given { @link event } .
sets the current state of this { @link mutation } .
iterate over the queue and executes the callback . <p > example : <pre class manager implements { @code this . callback ( new executor . callback ( future ) ; } }

get the for the given event type .
export the data to a .
returns the {


returns a new object
returns a new
get the value of a given object in the given object .
sign the zone .
reverses the source map from the source map .
returns a collection of objects that can be used to determine the list of all the elements in the collection .
returns a set of the elements of this set .
/ * ( non - javadoc )
execute the given callable in the current thread .
/ * ( non - javadoc )


creates an event that starts with the given event .
gets the track .
returns the name of the first character .
gets the data as a string .
{
shuffles the buffers to the given { @link } .
verify that this machine is allowed to be accepted by this device .
exports the data to a string .
import the given resource into a new list .
decodes four bytes from the given <tt > bitvector< / tt > .
execute the request .
imports a { @link } from a resource .
creates a new event bus destination event bus destination event bus .
creates a new event .
parses the given name and returns the name of the current <code > qname< / code > .
returns the escaped string for the given string .
hashes the given string with the given sha - up to the specified string .
encodes a byte array into base64 notation .
authenticate the given user .
authenticate a user .
authenticate the given user .
handle the challenge response challenge .
returns a stream of buffered data from this stream .

/ * ( non - javadoc )
handle the event for the given topic .
joins all queues in the queue .
sets the value of the specified property in this map .
remove a property from the map .
add a principal to the principal .
remove the principal from the principal .
processes the current thread .
create a new { @link } for the given source and context .
sets the window of the window .

process the template parameters .
change password .
create a new instance of a specific .

{
copy from the given field to the given destination .
move the current record to the current log file .
link to the specified string .
get the file version of the given file .
gets the stream for the given file .
{
{
returns true if the model is a model event .
checks whether a resource is a grails resource
sets the name of the group .
gets the user .
add a roster entry to the server .
returns the value associated with the given key .
returns <tt > true< / tt > if this map contains the specified key .
returns true if the specified value is equal to the specified value .
associates the specified key in the specified key .
inserts the specified map into the specified map .
removes the mapping from the specified key .
removes all of the mappings from this vector .
hash the hash of the given key .
returns true if the given object is a valid assertion .
returns true if the specified object is equal to the given value .
returns the entry for the given key .
updates the entry for the given entry .
sets the entry to the specified position .
adds a mapping for the specified key to the specified { @code value } .
removes the mapping from the specified entry .
removes the entry from the map .
destroys the current entry .
checks if the capacity is a capacity .
ensure that the receiver is in the pool .
returns the capacity of the given new bounds .
returns the next entry in the stream .
returns a map iterator that iterates over the elements of this iterator .
creates a map entry from the iterator .
returns the set of keys for this key .
called by the writer method .
{
load a json string from the stream .

write the map to a map .
register the .
/ * ( non - javadoc )
--- reconnect ---
notifies the listeners that a connection has been changed .
attempts to stop the reconnection time of the specified {
