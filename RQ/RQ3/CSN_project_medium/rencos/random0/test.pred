/ * ( non - javadoc )
returns a flowable that mirrors the source publisher that emits the items emitted by the source observable . <p > <img width = 640 height = 385 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that mirrors the source publisher that is subscribed to this one . <p > <img width = 640 height = 385 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure : < / b
concatenates the iterable sequence of { @link publisher } s into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
concatenate the source iterators until one completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
concatenate the source items into a single observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b > < /
concatenate the source items into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
concatenates a sequence of { @link singlesource } instances into a single { @link flowable } sequence . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
concatenates a sequence of { @link publisher } into a single observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
concatenates a sequence of { @link publisher } s into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
concatenates the iterable sequence of { @link observable } s into a sequence of { @link observable } s . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
maps the values emitted by the source publisher into a single publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
concatenates a sequence of { @link publisher } s into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
concatenates a sequence of { @link publisher } s into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a new observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a completable that subscribes to the given { @link throwable } object . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
converts an array of items into a flowable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
converts an { @link observable } into an { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a single that emits the items emitted by the source publisher in a single { @link publisher } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
returns a cold synchronous and stateful generator of values . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / generate . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a cold synchronous and stateful generator of values . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / generate . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a flowable that emits the items emitted by the source publisher with a specified amount of time . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . <unk> . png alt = > <dl > <dt > <b
returns a new { @link observable } that mirrors the specified { @link duration } and { @link timeunit } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the items emitted by the source publisher with the specified duration . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . <unk> . png alt = > <dl > <dt > <b > scheduler
returns an { @link observable } that subscribes to a specified amount of time range . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source publisher starting at the specified time . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the items emitted by the source maybe in a single single item . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the concatenation of all items emitted by the source publisher until one of the specified sources completes normally . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl >
returns a flowable that emits the concatenation of all items emitted by the source observable sequence . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a new observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b >
concatenates the iterable sequence of { @link publisher } s into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
combines four four items from one source to another one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . concat . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a new observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items from the source sequence starting at the specified time . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / range . s . png alt = > <dl > <dt > <b >
returns a flowable that emits the items in the range specified by the given predicate . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt > <b >
combines four four items from one source to another one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . concat . png alt = > <dl > <dt > <b > scheduler : < / b > <
combines four four items from one source to another one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . concat . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a new { @link observable } that concatenates items emitted by the source observable into a single observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
returns a new flowable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b >
concatenate the source iterators until one completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
calls the given { @link <unk> } and returns the result of { @link <unk> () } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that calls the { @link <unk> ( function ) } method of the source { @link java . lang . iterable } of { @link java . lang . <unk> ( function ) } and { @link <unk> ( java . lang . function ) } if possible . <p > <img width = 640 height = <unk> src = https
returns a flowable that calls the { @link <unk> ( function ) } method of a { @link function } with a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png
wraps a singlesource instance into a single { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b > < /
runs a zipper using { @link <unk> ( iterable ) } with { @link <unk> ( iterable ) } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
runs a zipper using { @link <unk> ( iterable function ) } with { @link singlesource } s . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler
waits until all singlesource sources are available . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a maybe that mirrors this flowable and all its elements in this maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
mirrors the other singlesource subscribed to this one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
returns a maybe that mirrors this flowable and all its elements in this maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
subscribes to this completable and returns the result of calling { @link <unk> () } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
perform a foreach operation on the elements of this stream using the provided { @link consumer } as a series of elements . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = >
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
subscribes to this completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
returns an observable that calls the { @link <unk> () } method for each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / cache . png alt = > <dl > <dt > <b
/ * ( non - javadoc )
returns a single that emits the single item emitted by the scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a completable instance that subscribes to this completable instance and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : <
calls the { @link <unk> onerror } function with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
subscribes to this completable subscribes to the specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
subscribes to the specified {
subscribes to the specified observer . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a copy of this observablesource with the specified initial capacity . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / cache . png alt = > <dl > <dt > <b > scheduler : < / b >
returns an observable that emits the items emitted by the source observable via { @link <unk> ( int ) } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / cache . png alt = > <dl > <dt > <b
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the items emitted by the source { @link java . lang . iterable } of { @link java . lang . iterable } of { @link u } and { @link java . lang . <unk> ( java . lang . function ) } . <p > <img width = 640 height = <unk> src = https : //
returns a flowable that emits the items emitted by the source publisher until a window duration is emitted . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits each item emitted by the source publisher with a specified amount of items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / windows . png alt = > <dl > <dt > <b > backpressure
returns a single that emits a single value that subscribes to this completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source publisher for a specified amount of items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / windows . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits windows of items emitted by a specified amount of items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / windows . png alt = > <dl > <dt > <b > backpressure : < /
returns a new observable that emits the concatenation of all the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a single that emits a single sequence of { @link singlesource } s using the { @link <unk> } function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt >
returns a new observable that emits the concatenation of all the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a new { @link observable } that maps each item emitted by the source observable into { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / cache . png alt = > <dl > <dt >
returns a new { @link single } which is emitted by the { @link singlesource } sequence . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler :
returns a new observable that emits the items emitted by the source observable whenever an observer subscribes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns an observable that calls { @link <unk> ( int ) } with the given initial capacity . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / cache . <unk> . png alt = > <dl > <dt > <b >
collects items emitted by the finite source publisher into a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / collect . png alt = > <dl > <dt > <b > scheduler : < / b > <
collects the items emitted by the source publisher into a single value that subscribes to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / collect . png alt = > <dl > <dt > <b > scheduler :
returns a { @link observable } that emits each item emitted by the source observable via a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a { @link observable } that maps each item emitted by the source maybe into a single observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
maps the upstream items into the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a { @link flowable } that maps each item emitted by the source observable into a single publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
returns a { @link flowable } that maps each item emitted by the source publisher into a single publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
maps the values emitted by the source publisher into a sequence of { @link <unk> } instances . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
maps the values emitted by the source publisher into a publisher that emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a completable that completes when the provided function returns a new completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
maps the upstream items into this completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a new { @link completable } that completes when the provided function returns . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : <
maps the upstream items into the upstream items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure :
flattens an iterable into an observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler :
maps the upstream items into upstream items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a { @link flowable } that maps each item emitted by the source publisher into a single { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . flatmap . png alt = > <dl
maps the upstream items into { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a { @link flowable } that maps each item emitted by the source publisher into a single { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt
maps the upstream items into upstream items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a { @link single } that emits the results of applying a function to each item emitted by the source maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt
maps the upstream items into upstream items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure :
maps the upstream items into the result sequence . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
maps the upstream items into the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
returns a flowable that emits the items emitted by the source observable that are emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
delays the given { @link <unk> } into a single one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a new flowable that emits the same items and emits the result of this one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that merges items from the source to this flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
instructs a single to emit an error rather than a single value rather than a single one . <p > <img width = 640 height = 451 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
delays the given { @link <unk> } into a single { @link nosuchelementexception } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a single that emits a single value that subscribes to this completable instance to the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits only the first item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the source publisher if the source publisher is empty . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / defaultifempty . png alt = > <dl > <dt > <b >
returns a flowable that delays the items emitted by the source publisher until a new item is emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt
returns a new { @link observable } that delays emitted items emitted by the scheduler until the specified time elapses . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . s . png alt = > <dl > <dt
returns a flowable that delays each item emitted by the source publisher until the specified delay completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . s . png alt = > <dl > <dt > <b >
returns a new flowable that emits the items emitted by the source publisher and emits the resulting { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . s . png alt = > <dl >
calls the { @link <unk> () } method on the { @link <unk> } and emits a new { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
converts a { @link future } into a { @link completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns an observable that calls { @link <unk> ( observable ) } on success . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a { @link observable } that emits each item emitted by the source observable via { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a completable instance that completes when this completable terminates . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a single - valued { @link java . lang . map } that emits the items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt
returns a { @link single } that emits the results of applying a { @code function } to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = >
returns a completable instance that completes when all of the items emitted by the source are complete . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a new maybe that emits a maybe that emits the items emitted by the finite source publisher and emits the resulting value using the provided predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt
returns an { @link observable } that contains items emitted by the source observable via { @link <unk> () } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt
calls the specified { @link <unk> } and returns the { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @link maybe } that calls { @link <unk> ( java . lang . throwable ) } after it completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl
returns a maybe that mirrors this maybe and invokes { @link <unk> onerror } if necessary . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler
calls the { @link <unk> ( <unk> ) } function on each item emitted by the { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
calls the { @link <unk> onerror } function on every item emitted by the maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
subscribes to the specified {
calls the { @link <unk> onerror } function on each item emitted by the scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
subscribes to the specified observer . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
calls the { @link <unk> onerror } function with the specified { @link <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
calls the { @link <unk> onerror } function with the specified { @link <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
calls the { @link <unk> onerror } function on each item emitted by the { @link <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler
calls the { @link <unk> onerror } function with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @link maybe } that calls { @link <unk> ( java . lang . <unk> ) } with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png
returns a single that emits the items emitted by the source publisher at a specified index . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : <
returns a single that emits the items emitted by the source publisher at a specified index . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : <
returns a single that emits the items emitted by the source publisher at the specified index . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : <
returns a maybe that mirrors this maybe with the specified predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a single that emits the items emitted by the source publisher with the specified index . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that maps each item emitted by a source maybe into a single maybe in a flat sequence of items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <p
returns a flowable that maps each item emitted by the source publisher into a single publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a { @link maybe } that maps each item emitted by this { @link maybe } into a maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a new { @link completable } that completes when the provided function returns . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a { @link flowable } that maps each item emitted by the source maybe into a { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt >
returns a { @link maybe } that maps each item emitted by a { @link maybe } into a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = >
returns a { @link single } that maps each item emitted by the source maybe into a single value using the provided mapper . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl >
returns a { @link single } that maps each item emitted by the source publisher into a single { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt
subscribes to the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a single observable that emits the items emitted by the finite source publisher which are emitted by the finite source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt
groups the items emitted by the finite source publisher into a single map . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt > <b >
returns a flowable that applies { @code <unk> } to each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt > <b > scheduler :
returns an observable that calls { @link <unk> ( observable ) } for each item emitted by this { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns a { @link completable } that completes when all of the items emitted by the subscriber are complete . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt >
returns a completable that emits the result of this completable and emits the result of this completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the same sequence of elements of this source sequence which are emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / groups . png alt = > <dl > <dt >
calls the { @link <unk> () } method on the { @link <unk> } and returns it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the last item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single that emits the single item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @link flowable } that maps each item emitted by the source maybe into a single { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt
returns an observable that calls { @link <unk> ( observable ) } for each item emitted by this { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source observable that are emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
delays the given { @link <unk> } into a single one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a new flowable that emits the same items of this flowable and the other singlesource subscribed to this one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that merges items from the source to this flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a maybe that emits rxjava { <dl > <dt > { @code onerror } < / dt > < / dt > <dd > { @code onerror } < / dt > <dd > { @code onerror } emitting { @code maybe } < / dd > <dt > <b > scheduler : < / b > < / dt > <dd >
returns a flowable that emits the items emitted by the source publisher emitting items emitted by the source publisher and emits the resulting item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon .
instructs a single { @link throwable } to emit an { @link throwable } rather than throwing an { @link nosuchelementexception } . <p > <img width = 640 height = 451 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl
instructs a publisher to emit an error rather than invoking { @link subscriber#onerror onerror } if it encounters an error . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
instructs a publisher to emit an { @link flowable } of { @link java . lang . throwable } and { @link java . lang . throwable } before emission . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk>
instructs a publisher to pass an { @link <unk> } to a publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns an observable that calls { @link <unk> ( predicate ) } for each item emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source observable via a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that calls the { @link <unk> () } method of the { @code function } that subscribes to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns a { @link single } that emits the items emitted by the source publisher and emits the results of applying a given mapping function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a { @link maybe } that maps each item emitted by the source maybe into a single maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
returns a copy of this maybe with the specified initial value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / cache . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that calls the specified predicate for each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b >
returns a flowable that emits the repeats until a publisher emits more items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . s . png alt = > <dl > <dt > <b >
returns a flowable that emits a flowable that emits the items emitted by the source publisher and emits the resulting { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . <unk> . png alt =
returns a flowable that emits the items emitted by the source observable via a { @link <unk> } function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source observable via { @link <unk> ( long ) } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source observable via a { @link <unk> } function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher until a window completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a maybe that mirrors this maybe and emits the result of this completable with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source publisher with a specified amount of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher via { @link <unk> onerror } <p > <dl > <dt > <b > backpressure : < / b > < / dt > <dd > {
returns a maybe that emits emitted items emitted by the scheduler when the maybe subscribes to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
returns an { @link observable } that calls the { @link <unk> ( function ) } function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / cache . retry . png alt = > <dl > <dt > <b >
returns a flowable that calls {
returns a new { @link observable } that calls { @link <unk> ( predicate ) } with the given initial capacity . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / cache . retry . png alt = > <dl >
returns a flowable that calls the specified predicate for each item that satisfies the given predicate . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b >
returns a flowable that calls the provided predicate for each item emitted by a given predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b >
returns a flowable that calls { @code <unk> } which retries when { @code <unk> } is called . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b
returns a new { @link transformer } that will wait for the specified { @link subscription } to the specified duration . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = >
returns a flowable that delays each item emitted by the source publisher until a window completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / samples . png alt = > <dl > <dt > <b > backpressure : <
returns a new observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that calls { @code identity } for each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits items emitted by the source observable via a given function . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns a flowable that emits items emitted by the source publisher until a value emitted by the source publisher subscribes to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns an observable that calls { @link <unk> ( observable ) } for each item emitted by this { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns an { @link maybe } that calls { @link <unk> ( observable ) } for each item emitted by this { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a single that emits the single item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single that emits the items emitted by the source observable via onsuccess <p > <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns an observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a single that emits a single value that subscribes to this completable instance to the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler
returns a flowable that skips the last item emitted by the scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > scheduler : < / b
returns a single that emits the items emitted by the source publisher at a specified index . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that calls the {
returns a flowable that skips the last item emitted by the source publisher in the specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b >
returns a flowable that skips items emitted by the source publisher until the last item emitted by the source publisher is reached . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl
calls the { @link <unk> () } method on the { @link <unk> } and emits a new { @link single } and delays the { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> .
returns an observable that calls the { @link predicate } for each item emitted by the source maybe until the given predicate returns true . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl
returns a new { @link single } s backed by this flowable . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a new { @link single } s backed by this flowable . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher with the specified publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / startwith . png alt = > <dl > <dt > <b >
converts an array of items into a flowable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
calls the { @link <unk> onerror } function with the specified { @link <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler :
calls the { @link <unk> onerror } function with the specified { @link <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler :
subscribes to the specified {
subscribes to the specified { @link scheduler } and emits the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . subscribeon . png alt = > <dl > <dt > <b > scheduler
calls the { @link <unk> () } method on the { @link <unk> } and emits a new { @link observable } that subscribes to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt =
returns a flowable that maps each item emitted by the source publisher into a single publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a new { @link completable } that completes when the given function returns . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a new { @link completable } that completes when the given function returns . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : <
maps the upstream items into { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt
maps the upstream items into { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher and emits the results of applying a given mapping function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single
returns a { @link flowable } that emits a single item emitted by the source publisher that subscribes to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b
returns a { @link flowable } that maps each item emitted by the source maybe into a single publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
returns a flowable that calls the { @link <unk> ( predicate predicate ) } method for each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl >
returns a copy of this observable that emits the last item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / cache . s . png alt = > <dl > <dt > <b > scheduler
returns a copy of this observable that emits the last item emitted by the scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > scheduler :
returns a copy of this observable that emits the items emitted by the source observable . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that calls the {
calls the { @link <unk> () } method on the { @link <unk> } and emits a new { @link single } and delays the { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> .
returns a copy of this observable that emits the first item emitted by this function until the specified predicate returns true . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a flowable that mirrors the source publisher and emits the result of this completable window . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits only the first item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > backpressure : <
returns a single { @link flowable } that waits for the specified { @link publisher } to become available . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b >
converts a { @link future } to a { @link scheduler } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > scheduler : < / b
returns a new { @link observable } that mirrors the { @link singlesource } instance with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
converts a { @link future } to a { @link scheduler } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > scheduler : < / b
returns an { @link observable } that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits only the first item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . s . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that mirrors the source publisher and emits the result of applying the provided function on each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = >
returns a flowable that mirrors the source publisher and emits the result of applying the provided function on each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . <unk> . png alt
returns a flowable that mirrors the source publisher and emits the resulting value from the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the specified { @link publisher } and emits the specified { @link publisher } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b >
returns a flowable that mirrors the specified duration of this publisher and emits the result of this completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt > <b
returns a flowable that mirrors the source publisher and emits the specified duration if it encounters a duration of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . <unk> . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher and emits the resulting { @link java . time . timestamp } within the specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . s
returns a flowable that emits the items emitted by the source publisher and emits the resulting { @link java . time . timestamp } within the specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . s
buffers the items emitted by the source maybe into a single . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b > < /
converts a { @link iterable } of { @link iterable } s into a single { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
returns a { @link single } which is backed by the source publisher and emits the resulting { @code map } of values . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl >
instructs a publisher to emit items emitted by the source publisher until a publisher completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < /
returns a new { @link single } s backed by this flowable . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a maybe that emits emitted events emitted by the source maybe and emits the resulting maybe when subscribed to . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns an observable that emits the items emitted by the source observable via { @link <unk> ( long ) } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / cache . png alt = > <dl > <dt > <b
returns a flowable that emits each item emitted by the source publisher with a specified amount of items . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source publisher with the specified timeout and size . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits windows of items emitted by a specified amount of time . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / windows . png alt = > <dl > <dt > <b > backpressure : < /
returns a new { @link observable } that emits the window duration specified by the specified duration . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / windows . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the items emitted by the source publisher with a specified amount of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / windows . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits windows of items emitted by a specified amount of items . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / windows . png alt = > <dl > <dt > <b > backpressure : < /
returns an observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the items emitted by the source observable via { @link <unk> () } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler
returns a flowable that maps each item emitted by the source publisher into a new one . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the source publisher until a window terminates . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / windows . png alt = > <dl > <dt > <b > backpressure :
returns a new observable that emits a single value of this maybe and emits the next item from it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b >
returns a flowable that emits a single value of this maybe and emits the result of this one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b >
subscribes to the specified observer . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a flowable that emits the items emitted by the source observable via { @link <unk> () } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
returns a reference to the { @link <unk> } of the specified { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
converts a { @link future } to a { @link scheduler } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <p > <b > scheduler : < / b > <
returns a flowable that emits the specified number of items emitted by the source publisher with a specified amount of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl >
converts an { @link <unk> } to an { @link <unk> } .
validates the given array of subscribers .
converts a { @link publisher } into a { @link flowable } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a { @code <unk> } from { @code source } .
returns a flowable that emits the items emitted by the source publisher which are emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt > <b >
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt > <b >
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt > <b >
filters the maybe with the given predicate . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a flowable that calls the { @link <unk> ( predicate ) } method on the { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a { @link flowable } of { @link flowable } objects backed by this flowable . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a { @link flowable } which collects items emitted by the source publisher via { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt >
returns a { @code flowable } that implements the { @link <unk> } interface . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt > <b >
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher via the specified selector function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher returned by { @link <unk> () } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher via a { @code <unk> } function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a { @code flowable } that is sorted according to the given comparator .
returns a new { @link data } initialized with the given { @code comparator } .
returns a { @code flowable } that is backed by the { @code <unk> } operator . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
calls the { @link <unk> onerror } function with the specified { @link <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @link maybe } that subscribes to this { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @link maybe } that calls { @link <unk> ( consumer ) } on the returned maybe . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt >
calls the { @link <unk> onerror } function on the { @link <unk> } and returns a maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
calls the { @link <unk> onerror } function on all windows . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a { @link maybe } that calls { @link <unk> ( java . lang . <unk> ) } with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png
calls the { @link <unk> onerror } function with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @link maybe } that calls { @link <unk> ( java . lang . <unk> ) } with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png
returns a { @link maybe } that calls { @link <unk> ( <unk> ) } with the { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl >
returns a flowable that collects all items emitted by the source publisher into a parallel { @code <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / collect . png alt = > <dl > <dt > <b >
creates a { @link flowable } from { @link <unk> } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
converts the given { @code function } into a { @code list } of type { @code t } .
returns a new { @code flowable } that skips the given { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < /
returns a { @link flowable } that maps each item emitted by the source publisher into a single { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = >
returns a flowable that maps each item emitted by the source publisher into a publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that applies the specified mapping function to each publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
maps the upstream items into upstream items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure :
maps the upstream items emitted by the source publisher until one completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure :
maps the values emitted by the source publisher into a publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a { @link <unk> } that implements the { @link <unk> } interface . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
<p > apply the subscribeon / observeon transformation of { @link <unk> } to a { @link <unk> } . < / p >
creates an { @link <unk> } from an { @link observable } . <p / > the { @link observable } is created using { @link <unk> () } and { @link <unk> ( source ) } .
creates a new replay relay based on the source observable size .
creates a {
creates a new replay relay . <p > this is a convenience method that can be used to create a replay relay . <p / > <p > this is a convenience method that can be used to create a replay relay . <p / > <b > note : < / b > this method does not wait for the original
creates a <unk> from a source { @link flowable } as a { @link <unk> } . <p > this is a blocking version of { @link <unk> ( flowable ) } . <p > this is a blocking version of { @link <unk> ( java . util . collection ) } .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new replay relay for the given size .
creates a { @link <unk> } with { @link <unk> } and { @link <unk> } .
returns a flowable that emits the items emitted by the given { @link scheduler } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a { @code true } if a { @link publisher } is { @code null } a { @link publisher } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a stream that applies { @code <unk> } to each element of { @code stream } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
create a disposable object from the given run .
converts an { @link <unk> } into a maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
converts a { @link future } into a { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <p > the { @link <unk> }
converts a { @link future } into a { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <p / > <p > <img width = 640 height =
create a single subscription from a subscription factory .
performs a blocking call and waits for the request to complete .
returns a flowable that emits the specified {
returns a { @link flowable } of { @link flowable } s that subscribes to the { @link scheduler } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b >
returns a flowable that emits the specified {
returns a flowable that emits the single item emitted by the scheduler . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a flowable that calls the specified { @link scheduler } on the specified scheduler . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = >
/ * ( non - javadoc )
subscribes to the specified { @link scheduler } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a flowable that calls the { @link <unk> ( <unk> ) } method . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = >
executes the given { @link runnable } on the given { @link runnable } .
returns a flowable that emits the specified scheduler . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
disable the plugins .
/ * ( non - javadoc )
set the { @link <unk> } to be used when the { @link scheduler } is completed . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
<p > sets the { @link <unk> } of the { @link scheduler } s { @link scheduler } . < / p >
set the init handler for the given {
sets the init method of the given {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a { @link completable } that is provided by the { @link <unk> () } function . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
throws an { @link illegalstateexception } if the given { @link bifunction } is not a { @link completable } .
converts a { @link flowable } of { @link flowable } objects into an { @link flowable } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < /
returns a { @link maybe } that emits the results of { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
set <unk> to <unk>
converts the given { @link bifunction } to a { @link flowable } of { @link <unk> } s . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
throws an { @link <unk> } if the given { @link bifunction } is { @link <unk> } .
converts an { @link observable } into a { @link <unk> } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
set <unk> to <unk>
adds the given { @link <unk> } to the given { @link <unk> } .
instructs the { @link <unk> ( throwable ) } method to perform an { @link <unk> } for a single element . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b
sets the { @link exceptionhandler } to the given { @link exceptionhandler } .
transforms a { @link flowable } into a cold observable { @link subscriber } .
adds the given { @link observable } to the given { @link observable } .
creates a single observer that subscribes to a single observer . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
creates a observer that subscribes to the given observer .
adds a { @link livedata } to the { @link maybe } .
flattens a maybe into a single maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
converts a { @link publisher } into a { @link flowable } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a <unk> handle from the given { @code <unk> } .
converts an { @link observable } into an { @link observable } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
create a <unk> from an observable .
wraps the given { @link single } and returns a single { @link single } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @link completable } that is disposed when the given { @link completablefuture } is completed .
/ * ( non - javadoc )
wrap a parallel flowable .
returns whether or not the main thread is valid .
create an instance of {
returns a { @code function } that applies the given { @code function } to the result of { @code function } .
wrap a {
transfer the given { @link callable } to the given { @link scheduler } .
instructs the { @link scheduler } to apply an { @link scheduler } to the scheduler . <p > <img width = 640 src = https : // raw . github . io / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
concatenate the source iterators to a single one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . concat . png alt = > <dl > <dt > <b > backpressure :
concatenate the source items into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
concatenate the source iterators until one completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . concat . png alt = > <dl > <dt > <b > backpressure :
concatenate the source items into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
concatenates a sequence of { @link maybesource } into a single { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure :
concatenates a sequence of { @link maybesource } into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : < / b > <
calls the { @link <unk> ( <unk> ) } method with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
returns a { @link observable } that maps { @link <unk> } into a single maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler
returns a completable instance that completes when all of the items emitted by the subscriber are complete . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns an observable that emits the items emitted by the given { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / error . png alt = > <dl > <dt > <b > scheduler : < /
converts a { @link callable } to an observablesource . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromcallable . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
converts a { @link flowable } into a completable that subscribes to it and returns a flowable that emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl >
returns a { @link single } that emits the single element emitted by the source maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : <
converts a { @link callable } to an observablesource . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromcallable . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
converts a { @link future } into an { @link flowable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
converts a { @link future } into an { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
converts an { @link <unk> } into a maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a single that emits the items emitted by the source maybe in a single maybe . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : <
concatenates a publisher sequence into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a flowable that emits the concatenation of all the items emitted by the source publisher until one completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
concatenates the iterable sequence of { @link maybesource } instances into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure : <
flattens a maybe into a single maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a flowable that merges items from another source into another one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that merges items from another source into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > backpressure : < /
returns a single value that mirrors this completable and emits the result of this completable window . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the source publisher until a specified amount of time occurs . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . <unk> . png alt = > <dl > <dt >
returns a single { @link maybe } that subscribes to this maybe into a single maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that calls the { @link <unk> ( function ) } method of a { @link <unk> } using a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png
returns a flowable that calls the { @link <unk> ( function ) } method of the { @link <unk> } of the { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png
flattens a maybe into a single maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
runs a zipper using { @link <unk> ( iterable function ) } with the specified iterable of source sources for success . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt >
waits until all singlesource sources are available . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b >
mirrors this one by one that signals a single that signals the other singlesource termination . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < /
subscribes to this completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
subscribes to the specified { @link scheduler } and returns the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a completable instance that completes when this completable terminates . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a { @link maybe } that calls { @link <unk> ( predicate ) } with the specified predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that maps each item emitted by the source maybe into a single maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the source publisher that are emitted by the source publisher . <p > <img width = 640 height = 385 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b >
returns a single that emits the items emitted by the source maybe in a single maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : <
returns an { @link observable } that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a maybe that mirrors this maybe and the specified timeout and emits the resulting value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt > <b > scheduler
returns a flowable that delays each item emitted by the source publisher until the specified delay completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . s . png alt = > <dl > <dt > <b >
returns a flowable that delays each item emitted by the source publisher until a subscription completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that mirrors the specified { @link scheduler } and emits the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . <unk> . png alt = > <dl > <dt >
calls the { @link <unk> onerror } function on every item emitted by the { @link <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler
calls the { @link <unk> onerror } with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b
calls the specified { @link <unk> } on each item emitted by the { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a { @link maybe } that maps each item emitted by the source publisher into a single { @link iterable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <p
flattens an iterable into an observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a maybe instance that emits the items emitted by the source maybe into a maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a { @link completable } that completes when the { @link completable } completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a completable that completes when all of the items emitted by the source publisher are empty . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns an observable that emits the { @link observable } of the items emitted by the given { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a { @link maybe } that maps each item emitted by this { @link maybe } to a { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl >
returns a flowable that emits the items emitted by the given { @link java . lang . operator } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a { @link maybe } that maps the { @link maybe } to a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns an { @link observable } that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
converts this maybe into a single . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a completable instance that completes when an error completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
instructs a maybe to emit an error rather than a downstream publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
instructs a single { @link maybe } to emit an { @link <unk> } rather than invoking { @link subscriber#onerror onerror } if it encounters an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt
instructs a publisher to emit an { @link flowable } of { @link java . lang . throwable } and { @link java . lang . throwable } before emission . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk>
calls the specified { @link <unk> } and returns the { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the repeats until a publisher emits more items . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . s . png alt = > <dl > <dt > <b >
returns a flowable that emits a flowable that emits the items emitted by the source publisher in a single publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . <unk> . png alt = > <dl > <dt
returns a flowable that applies the specified predicate for each item emitted by a given predicate . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt > <b >
returns a maybe that mirrors this maybe with the specified { @code <unk> } value . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that calls the provided predicate for each item emitted by a given predicate . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b >
returns a flowable that mirrors the source publisher when a subscriber subscribes to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure : <
calls the { @link <unk> onerror } function with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
subscribes to this completable instance and returns a disposable object . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a maybe that emits the items emitted by the source maybe until one of the items emitted by the source publisher emits an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
delays the given { @link <unk> } into a single one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a new maybe that emits the same item and emits the first item emitted by the source maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a maybe that mirrors this maybe and the specified timeout and emits the resulting value if it is available . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b
returns a maybe that mirrors this maybe with the specified timeout and emits the resulting value if it is available . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . <unk>
returns a new { @code <unk> } that emits the { @code <unk> } items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . s . png alt = > <dl > <dt
takes a { @link publisher } and emits the resulting { @code maybe } if the { @link publisher } is { @code null } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a maybe that emits emitted events emitted by the source maybe when subscribed to it is subscribed to . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a { @link <unk> } that caches the given { @link flowable } as { @link flowable } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
wrap a observer .
ensures that the given object is neither { @code null } nor a non - null reference .
sneaky throws a { @link <unk> } .
this method is called when the { @link subscriber } is invoked .
returns true if the subscriber is complete .
returns true if the subscriber is an error or onerror or onerror or onerror if the exception is null .
calls the { @link <unk> onerror } method of the given { @link subscriber } .
<p > <unk> . < / p >
convert a value to a lazy callable .
<p > memoize . < / p >
creates a { @link <unk> } from the given { @code function } .
get the stack trace of the stack trace of the stack trace .
returns the root cause of the given exception .
creates a new { @link <unk> } with the given default value .
buffers the { @link <unk> } into a { @link transformer } .
returns a { @link transformer } that wraps the given { @code <unk> } with the given { @code <unk> } .
creates a new { @code <unk> } with { @code <unk> } and { @code <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the qr - region defining the given parameters .
/ * ( non - javadoc )
{ @inheritdoc }
execute the { @link executable } and wait for it to finish .
creates a replay relay . <p > this is a convenience method that creates a { @link replay } . <p > this is a convenience method .
creates a new replay relay .
creates a { @code <unk> } from the { @code <unk> } .
creates a replay relay . <p > this creates a replay relay . the returned stream is backed by the window so that it can be used as a result of { @link <unk> () } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the qr - region .
creates a new { @link <unk> } .
get the value of the given notification .
returns an array containing all of the elements in this list in proper sequence ; the runtime type of the returned array is that of the specified array . if the array fits in the specified array it is returned therein . otherwise a new array is allocated with the runtime type of the specified array and
returns an array containing all of the values in the array . if the array is null or empty no values are returned .
returns <tt > true< / tt > if this map contains a mapping for the specified notification .
<p > <unk> . < / p >
creates a new blocking queue backed by the given capacity .
requests the specified {
starts a successful request .
{ @link <unk> ( object subscriber ) } must be called from { @link <unk> ( object ) } .
called by {
creates a {
creates a new replay relay .
creates a { @code <unk> } from the { @code <unk> } .
nonsymmetric reduction to hessenberg form .
returns an array of values .
returns an array containing all of the values in the given array . if the given array is null an empty array is returned .
/ * ( non - javadoc )
get the error with the given notification id .
creates a single that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @link observable } that emits the error emitted by the given { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / error . png alt = > <dl > <dt > <b > scheduler
atomically sets the value of the next upstream atomicreference from the upstream atomicreference to the next upstream atomicreference from the upstream atomicreference .
atomically sets the value of the next upstream atomicreference from the upstream atomicreference to the next upstream atomicreference from the upstream atomicreference .
atomically sets the { @code atomicreference } to { @code next } to { @code next } .
atomically sets the { @code atomicreference } to { @code next } to { @code next } after { @code null } .
adds a { @link <unk> } to the cache .
remove a dense subscription from the cache .
/ * ( non - javadoc )
add a number of cap to a long .
returns the product of {
atomically adds the given <code > <unk> / code > to the current value of the given <code > <unk> / code > .
atomically adds the given number of requests to the tail of the current value and adds it to the set . if the requested amount is larger than the current value it will be added to the new value .
atomically adds the given { @code long } to { @code requested } and appends it to the { @code long } value . if { @code requested } is { @code null } or { @code long } or { @code long } then { @link <unk> ( int ) } will return { @code false } .
subscribes to observer .
subscribes to the given { @link observable } with the specified { @link observable } .
subscribes to the specified {
returns a completable that mirrors the given source completable all of these items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a completable that subscribes to all completables in the given iterable of completables . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a completable instance that concatenates all items emitted by the source publisher into a single completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
concatenate the source iterators until one completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
returns a completable instance that subscribes to this completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a completable that subscribes to the specified {
converts an { @link <unk> } into a maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a completable instance that subscribes to this completable instance into a completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
converts a { @link future } into an { @link flowable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > scheduler : < / b
converts a { @link <unk> } into a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
converts an { @link <unk> } into a maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
converts a single { @link observable } into a single single completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a completable that mirrors the given source completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a completable that subscribes to all completables in the source iterable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a completable that subscribes to the specified publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a completable instance that subscribes to all of the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a completable that subscribes to the specified publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a completable instance that subscribes to all of the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a completable instance that completes when all of the items emitted by the subscriber are complete . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a new { @link transformer } that will wait for the specified { @link subscription } to the specified duration . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt >
converts the given { @link throwable } to a { @link nullpointerexception } object .
returns a completable instance that calls the { @link <unk> ( callable ) acquired ( resource - supplier ) } method of the { @link callable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> .
wraps a singlesource instance into a single . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
concatenates this completable with another completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a new { @link single } that emits the { @link <unk> onerror } if the { @link observable } completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns a flowable that emits the specified {
instructs a single { @link maybe } to emit an { @link single } and completes { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt
instructs a { @link maybe } to emit an { @link <unk> } as an { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a maybe that subscribes to this completable and emits the result of this completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt > <b >
subscribes to this completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
returns a completable that subscribes to this completable and returns the result of this completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a completable that subscribes to this completable instance with another completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a new completable instance with the specified delay and duration . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that delays each item emitted by the source { @link scheduler } until a new { @link scheduler } completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = >
returns a single that emits a single value that subscribes to this completable instance with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler
returns a completable instance that calls { @link <unk> ( long timeunit ) } on the specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b
calls the { @link <unk> onerror } function on every item emitted by the { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
calls the { @link <unk> ( <unk> ) } function with the { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler
calls the { @link <unk> onerror } function with the specified { @link <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
subscribes to the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
calls the { @link <unk> onerror } function with the specified { @link <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a { @link maybe } that calls { @link <unk> ( java . lang . <unk> ) } with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png
returns a { @link maybe } that calls { @link <unk> ( java . lang . throwable ) } with the specified signal . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a completable instance that disposes the given { @link scheduler } and emits a new { @link completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt
returns a maybe that invokes the { @link <unk> onerror } on this maybe with the given predicate . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler
returns a new { @link completable } that completes when the provided function returns . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a completable that subscribes to this completable and returns a completable that completes when this completable terminates . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b
returns a flowable that mirrors this completable and emits the result of this completable and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the specified { @link publisher } and emits the resulting { @code <unk> } events emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . <unk> . png alt
returns a flowable that calls the specified predicate for each item emitted by a given predicate . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt > <b >
returns a completable that subscribes to this completable and returns the result of executing this operation . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . retry . png alt = > <dl > <dt > <b > scheduler
returns a flowable that calls the provided predicate for each item emitted by a given predicate . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b >
returns a flowable that mirrors the source publisher when a subscriber subscribes to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source observable via { @link <unk> () } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler
subscribes to this completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
subscribes to this completable instance and returns a completable that subscribes to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a completable instance that disposes the given { @link scheduler } and { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that mirrors this completable and all its elements in this completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a single that emits a single value that subscribes to this completable instance to the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler
returns a single that emits the result of applying the specified timeout until the result completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b
returns a completable instance that subscribes to this completable instance into a completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a completable instance that subscribes to this completable instance into a completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : <
flattens an iterable into an observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler :
converts an { @link flowable } of { @link publisher } into a publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
converts an { @link flowable } of { @link completable } s into a maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
{ @link <unk> ( object consumer ) } for { @link java . util . concurrent . <unk> () } .
try to convert a { @link publisher } to a { @link publisher } .
adds a new element to the tail of the queue .
/ * ( non - javadoc )
creates a new { @link <unk> } .
<p > run . < / p >
loops through all of the elements in the queue .
returns a { @link <unk> } that subscribes to the given { @link observer } .
if the given throwable is a {
wraps the given { @link throwable } as a { @link runtimeexception } .
returns a list of throwable exceptions that are reachable from the given statement .
wraps the given { @link throwable } as a { @link throwable } .
adds a { @link <unk> } to the cache .
remove a dense vector from the cache .
/ * ( non - javadoc )
/ * package
overloaded version of { @link map#put ( disposable ) } that takes a { @link disposable } .
performs null checks and disposes of assets .
/ * ( non - javadoc )
overloaded version of { @link map#put ( disposable ) } that takes a { @link disposable } .
/ * ( non - javadoc )
returns the number of elements in this priority set . the size of the returned set is the same as the number of elements in the map .
create a { @link <unk> } from { @link publisher } and { @link subscriber } .
subscribes to the provided { @link publisher } with the specified { @link publisher } .
subscribes to the specified {
subscribes to the specified {
adds a { @link disposable } to the list of resources . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / st . s . png alt = >
maps an observer to an observer . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
flattens an iterable into an observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
wrap a observer .
creates a new instance of { @link <unk> } .
starts the proxy .
adds the specified value to the end of the list .
returns a list of all elements of the given {
zip array <unk>
returns a boolean array of the specified observer .
iterate over the elements of the given series until all of the given elements are found .
returns a flowable that mirrors the source publisher one by one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a flowable that emits the items emitted by the source observable into a single observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the source publisher which are emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . concat . png alt = > <dl > <dt >
returns an observable that executes the specified { @link <unk> } and returns a new { @link observable } that subscribes to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = >
returns a completable that subscribes to the specified {
converts a { @link callable } to an { @link observable } that subscribes to it using the specified { @link callable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromcallable . s . png alt = >
converts a { @link future } into an { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b > <
converts a { @link future } into a single { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b >
converts a { @link future } to a { @link scheduler } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <p / > <p > <img width = 640 height =
flattens a maybe into a single maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a flowable that emits the items emitted by the source publisher which are emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . concat . png alt = > <dl > <dt >
returns a single that emits the single item emitted by the source maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source publisher with the specified delay and scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . <unk> . png alt = > <dl > <dt > <b
wraps a single { @link singlesource } instance into a single { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a single that emits a single - running { @link singlesource } instance using the { @link <unk> ( function ) } function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt > <b >
returns a completable instance that completes when the items emitted by the source publisher are empty . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler
returns a { @link single } that emits the results of applying a zipper function to each item emitted by the source iterable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl >
returns a single completable instance that subscribes to this completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source publisher that are emitted by the source publisher . <p > <img width = 640 height = 385 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b >
returns a { @link transformer } that mirrors the specified { @link singlesource } instance with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the scheduler after the specified time elapses . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . s . png alt = > <dl > <dt > <b > scheduler
returns a flowable that calls the specified { @link scheduler } and { @link scheduler } methods until the { @link scheduler } is satisfied . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt
returns a new flowable that emits the same observable and emits the result of { @link <unk> () } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a new { @link transformer } that will wait for the specified { @link subscription } to { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = >
converts a { @link future } into a single { @link flowable } like { @link <unk> } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b
returns a { @link maybe } that emits the items emitted by the source maybe in a { @code maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl >
calls the specified { @link <unk> } and returns the { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @link maybe } that calls { @link <unk> ( throwable ) } with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl
returns a maybe that mirrors this maybe and invokes { @link <unk> onerror } if necessary . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler
calls the { @link <unk> onerror } function with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < /
calls the { @link <unk> ( <unk> ) } method with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
calls the specified { @link <unk> } on each item emitted by the { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
calls the { @link <unk> onerror } with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b
calls the { @link <unk> ( <unk> ) } function on the { @link <unk> } and disposes the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt
returns a { @link single } that maps each item emitted by the source maybe into a single value using the provided mapping function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl
returns a { @link flowable } that maps each item emitted by the source maybe into a { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher and emits the resulting { @code maybe } values emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt =
returns an observable that emits the { @link observable } of the items emitted by the given { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a { @link single } that maps each item emitted by the source maybe into a single value using the provided mapping function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl
returns a single observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single that emits true if the specified value is contained in the list . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the items emitted by the source publisher that are emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b >
returns a maybe that emits rxjava { <dl > <dt > { @code onerror } < / dt > <dd > { @link <unk> ( <unk> ) } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
instructs a single to emit an error rather than a single one . <p > <img width = 640 height = 451 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a single completable instance that completes when the items emitted by the source publisher are empty . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher which are emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a completable that subscribes to this completable and emits the result of this completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that calls the specified { @code predicate } until a predicate returns { @code true } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry - control -
returns a flowable that calls the specified predicate for each item emitted by a given predicate . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b >
returns a flowable that calls the provided { @code <unk> } function on each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt
subscribes to this completable instance and returns a disposable object . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
subscribes to this completable instance and returns a disposable object . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a completable instance that subscribes to this completable instance and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
subscribes to the specified { @link scheduler } and emits the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . subscribeon . png alt = > <dl > <dt > <b > scheduler
returns a single that emits the result of applying the provided { @code other } source to this one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
returns a single that emits a single value that subscribes to this completable instance to the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler
returns a single that emits the result of applying the specified time until the specified scheduler completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt > <b
returns a { @link completable } that completes when all of the items emitted by this completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a completable instance that subscribes to this completable instance and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a maybe that emits only the onerror or onerror signal that emits emitted events emitted by the scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt >
returns a flowable that emits a single value of this maybe and emits the result of this one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b >
creates a { @link <unk> } from the { @link <unk> } .
returns a {
starts the {
starts a {
inserts the specified element into this queue if it is already in the queue . if the queue is full this method will return { @code false } . if the queue is full the queue will be garbage collected . if the queue is already full this method will return { @code false } .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
returns true if the atomicreference should be disposed .
creates a <unk> from an observable . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
$antlr start <unk>
/ * ( non - javadoc )
$antlr start <unk>
concatenates the iterable sequence of { @link publisher } into a single { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . concat . png alt = > <dl > <dt > <b > backpressure
returns a flowable that mirrors the source publisher that is subscribed to this one . <p > <img width = 640 height = 385 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure : < / b
concatenate the source items into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
concatenates a sequence of { @link publisher } into a single { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure :
concatenates a publisher sequence into a single sequence by subscribing to each publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
maps a sequence of { @link publisher } into a single { @link flowable } sequence . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure
converts a { @link publisher } into a { @link flowable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
converts an { @link flowable } of { @link flowable } objects into a flowable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that uses a publisher for each subscriber until a subscriber subscribes to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
converts a { @link future } into a { @link flowable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a cold synchronous and stateful generator of values . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / generate . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a flowable that emits the items emitted by the source publisher in a given period of time . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . <unk> . png alt = > <dl > <dt > <b
returns a flowable that mirrors the source publisher and emits the resulting result in milliseconds . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher in a given period of time . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . <unk> . png alt = > <dl > <dt > <b
returns a flowable that mirrors the source publisher and emits the resulting result in milliseconds . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher until a specified amount of time . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher with a single item . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the concatenation of all the items emitted by the source publisher and emits a sequential ordered { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a flowable that merges items from another source into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . <unk> . png alt = > <dl > <dt > <b > backpressure :
concatenates the iterable sequence of { @link publisher } s into a single { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . concat . png alt = > <dl > <dt > <b >
converts a publisher into a flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd > {
returns a flowable that emits items emitted by the source publisher starting at the specified time . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / range . png alt = > <dl > <dt > <b >
returns a flowable that emits items emitted by the source publisher starting at the specified time . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that merges items from another source into another one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that merges items from another source into another one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that merges items from another source into another one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . <unk> . png alt = > <dl > <dt > <b > backpressure :
concatenates the iterable sequence of { @link publisher } s into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
concatenates a publisher sequence into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
returns a flowable that emits the items emitted by the source publisher until a specified amount of time . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . <unk> . png alt = > <dl > <dt > <b
converts an { @link flowable } of { @link publisher } into a publisher that emits the items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl >
returns a flowable that calls the { @link <unk> ( function ) } method of a { @link <unk> } using a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png
runs a zipper using { @link <unk> ( iterable function ) } with the specified iterable of source sources for success . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt >
runs a zipper using { @link <unk> ( iterable function ) } with { @link singlesource } s . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source publisher which are emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher in a sequence of { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source sequence which are emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits items emitted by the source publisher that are emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher in a sequence of { @link <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a single iterable that emits the items emitted by the source publisher in a given item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a single iterable that emits the next item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a completable instance that emits the items emitted by the source publisher until a single item emitted . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b
returns a single that emits the single item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b >
converts a publisher into a completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
returns a flowable that emits the items emitted by the finite source publisher subscribes to the items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
subscribes to this publisher subscribes to the specified source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
subscribes to a subscriber subscribes to this subscriber . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a flowable that emits windows of items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits items emitted by the source publisher and emits the resulting { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that delays each item emitted by the source publisher into a single item . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher which are emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b >
returns a flowable that emits each item emitted by the source publisher in a specified window . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / windows . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher for a specified amount of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits each item emitted by the source publisher for a specified amount of items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / windows . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits windows of items emitted by a specified amount of items . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / windows . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that collects the items emitted by the source publisher until one item in the source publisher completes or an empty stream is returned . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / groups . png alt =
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher that can be emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher and returns a flowable that emits each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a flowable that emits each item emitted by the source publisher that is returned by { @link <unk> () } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher and emits the items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / defaultifempty . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher that subscribes to the specified publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure
collects the items emitted by the source publisher into a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / collect . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt > <b >
maps the upstream items into this completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure :
maps the upstream items emitted by the source publisher into a new completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure :
maps the upstream items into the upstream items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits each item emitted by the source publisher where each item emitted by the source publisher returns a publisher that emits each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
maps the values emitted by the source publisher into a publisher that emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
maps the upstream items into { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
maps the upstream items into upstream items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure :
maps the upstream items into the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
returns a flowable that emits the items of this flowable except that they are emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that merges items from the source to the other one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that merges items from the source to this flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher that are emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the last item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that delays each item emitted by the source publisher until a subscription completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits only the first item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher until a specified delay completes normally . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b >
returns a flowable that delays each item emitted by the source publisher until the specified delay completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . s . png alt = > <dl > <dt > <b >
returns a flowable that delays each item emitted by the source publisher until a publisher completes . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . s . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits a flowable that emits the items emitted by the source publisher that subscribes to it . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher which are emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt > <b >
returns a flowable that emits the concatenation of all items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the results of applying a { @code function } to each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher that satisfy the specified predicate . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher returned by the specified function . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the results of applying a specified function on each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt > <b
returns a flowable that emits items emitted by the source publisher that are contained by a specified function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
calls the specified action on this maybe if it encounters an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
calls the { @link <unk> onerror } function on each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
calls the { @link <unk> ( <unk> ) } function on the { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler
instructs the publisher to emit items emitted by the source publisher via { @link <unk> onerror } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
calls the { @link <unk> onerror } function on each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
calls the { @link <unk> onerror } function on each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
calls the { @link <unk> onerror } function on each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher that subscribes to it . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
calls the { @link <unk> onerror } function on each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
calls the { @link <unk> onerror } function on each item emitted by the { @link <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler
calls the { @link <unk> onerror } function on each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
instructs the publisher to emit items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
calls the { @link <unk> onerror } function on each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a single that emits the items emitted by the source publisher at a specified index . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : <
returns a single that emits the items emitted by the source publisher at a specified index . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that calls the specified predicate for each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : <
instructs a publisher to emit items emitted by the source publisher until a non - zero element is available . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the last item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
instructs a publisher to emit items emitted by the source publisher until a non - zero value is available . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that maps each item emitted by the source publisher into a single publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a { @link maybe } that maps each item emitted by a { @link maybe } to a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = >
returns a flowable that maps each item emitted by the source publisher into a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b
returns a new { @link completable } that completes when the provided function returns . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
maps the upstream items into { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
maps the upstream items into { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure :
maps the upstream items into { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
returns a { @link disposable } for each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler :
calls the { @link <unk> onerror } function on each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a { @link disposable } that subscribes to each item emitted by the source publisher into a publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt >
subscribes to the specified {
returns a flowable that emits the results of applying a specified function on each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt > <b
returns a single that emits the items emitted by the finite source publisher which are emitted by the finite source publisher in a specified { @code keyselector } function . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map .
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher which are emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
converts a publisher into a completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
returns a single that emits the items emitted by the finite source publisher which are emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a single that emits the last item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a single that emits the last item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source publisher that satisfy a predicate . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the repeats of items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source publisher that are emitted by the source publisher . <p > <img width = 640 height = 385 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b >
returns a flowable that merges items from the source to this flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that merges items from the source to this flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher emitting items emitted by the source publisher emitting items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon .
instructs a publisher that instructs a publisher to emit items emitted by the source publisher until all items have been emitted . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
instructs a publisher to emit items emitted by the source publisher until all items have been emitted . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher where the source publisher emits a single item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a flowable that emits only the items emitted by the source publisher in a single source item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b
instructs a publisher to pass an { @link <unk> } to a publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that merges items emitted by the source publisher into this flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that mirrors the source publisher in a termination fashion . <p > <img width = 640 height = 385 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher and emits the resulting { @code completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher that are emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher via the specified selector function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits items emitted by the source publisher that are emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher that subscribes to the specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher until a delay completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns a flowable that emits items emitted by the source publisher and emits the resulting { @code flowable } items eagerly . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt >
returns a flowable that applies the specified mapping function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher and emits the resulting values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that calls the specified predicate for each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b >
returns a flowable that emits only the items emitted by the source publisher . <p > <img width = 640 height = 385 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items emitted by the source publisher via the specified selector function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher via the specified selector function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits items emitted by the source publisher that are emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that mirrors the source publisher and emits the resulting result before a specified amount of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b >
returns a flowable that emits items emitted by the source publisher until a window completes . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the items emitted by the source publisher emitting items emitted by the source publisher emitting items emitted by the source publisher via { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that calls { @code <unk> } with the specified { @code <unk> } function . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b >
returns a flowable that calls the {
returns a flowable that calls the provided predicate for each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt > <b >
subscribes to the specified observer . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that mirrors the source publisher and emits the resulting result before emission . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits only the first item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . s . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that skips items emitted by the source publisher until a subscription completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / skip . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits items emitted by the source publisher which are emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns a flowable that emits a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher that subscribes to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a single that emits the single item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a single that emits the single item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source publisher that satisfy a predicate . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that skips items emitted by the source publisher until the specified time elapses . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that skips items emitted by the source publisher until the specified time elapses . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b >
returns a flowable that calls the { @link <unk> onerror } function on each item emitted by the source publisher and emits the resulting { @code true } if none . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk>
returns a flowable that emits the last item emitted by the source publisher until the specified time elapses . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b >
returns a flowable that skips the last item emitted by the source publisher in the specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b >
returns a flowable that calls the specified predicate for each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the finite source publisher in a sorted order . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the finite source publisher which are emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher that are emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
converts an array of items into a flowable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a flowable that subscribes to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items emitted by the source publisher that subscribes to the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl >
returns a flowable that emits the result of {
converts a { @link future } into a publisher that subscribes to the specified subscriber . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the specified { @link observable } that subscribes to this publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher until the first publisher emits an item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
maps the upstream items into this flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits each item emitted by the source publisher by applying a function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl
returns a flowable that emits the items of the source publisher that satisfy the given predicate . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher until the specified time elapses . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher until the specified time elapses . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . s . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher that satisfy the specified predicate . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the last item emitted by the source publisher until the specified time elapses . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b >
returns a flowable that skips items emitted by the source publisher until the last item emitted by the source publisher is reached . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl
returns a flowable that emits the last item emitted by the source publisher until the specified time elapses . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b
returns a flowable that emits the first item emitted by this function until a predicate returns true . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that skips the first item emitted by the source publisher until it encounters a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / skip . png alt = > <dl > <dt
returns a single { @link flowable } which applies { @code predicate } to each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a flowable that emits the first item emitted by the source publisher until the specified timeout duration is reached . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b
returns a flowable that emits only the last item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits only the first item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b >
returns a flowable that emits only the first item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher and emits the resulting { @code <unk> } objects emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . s . png
returns a flowable that emits the items emitted by the source publisher which are emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . s . png alt = > <dl > <dt
returns a flowable that mirrors the source publisher until a publisher completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that mirrors the source publisher until a specified timeout occurs . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that mirrors the source publisher which is emitted by the source publisher and emits the specified duration . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . <unk> . png alt = > <dl > <dt
returns a flowable that mirrors the source publisher which is emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . <unk> . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher which are emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . s . png alt = > <dl >
returns a flowable that emits the results of applying a { @link <unk> } to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns a single that emits the last item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits items emitted by the source publisher which are emitting items faster than the source { @code bufferoverflowexception } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl >
returns a new { @code single } which consists of all items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a single that emits the items emitted by the finite source publisher which are emitted by the finite source publisher in a single - item fashion . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt
converts a publisher into a completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
returns a new { @link single } s backed by this flowable . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits only the first item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits windows of items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits windows of items emitted by the source publisher for a specified amount of items . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / windows . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher until a window completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher for a specified amount of items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits windows of items emitted by a specified amount of time . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / windows . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits each item emitted by the source publisher that is returned by the specified function . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that maps each item emitted by the source publisher into a single publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher until a window terminates . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / windows . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher until a window completes . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / windows . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source maybe until one of the supplied values completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b >
returns a maybe that emits a single value of this maybe and emits the result of each emitted item and emits a single one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / zip . png alt = > <dl
/ * ( non - javadoc )
/ * ( non - javadoc )
schedules a task for execution .
<unk> > <unk>
executes the task with the given value .
converts this maybe into a single { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
/ * ( non - javadoc )
returns a { @link <unk> } that subscribes to the given { @link observer } .
verifies that the current thread is not blocking .
returns a flowable that merges items emitted by the source publisher into a new flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher and emits the resulting values from the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl >
returns a flowable that mirrors the source publisher and emits the specified timeout for each emitted item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher with the specified delay and size . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt >
returns a flowable that delays each item emitted by the source publisher until a window completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
calls { @link <unk> () } on the { @link <unk> } and { @link <unk> onerror } instances . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
/ * ( non - javadoc )
atomically sets the value of the next upstream atomicreference from the upstream asset to the upstream atomicreference .
atomically sets the value of the next upstream atomicreference from the upstream asset to the upstream atomicreference .
waits for the request to complete .
adds a { @link disposable } to the { @link <unk> } .
removes the specified {
returns a { @link flowable } that implements the { @link <unk> ( function ) } of { @link <unk> } and { @link <unk> ( bifunction ) } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt =
returns a flowable that emits the items emitted by the source publisher via { @link <unk> onerror } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt
creates a <unk> <unk> from a given { @link flowable } .
creates a { @code <unk> } from the given { @code source } source .
creates a { @code replay } view of the given { @link scheduler } .
returns a replay relay that creates a replay relay of the items emitted by the scheduler . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
converts a { @link flowable } of { @link flowable } objects into a { @link flowable } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
create an instance of { @link <unk> } .
creates a new { @link rx . scheduler . scheduler . <unk> } with the specified scheduler .
creates a serializer for the given serializer .
get the generic supertype of the given type .
returns a new {
creates a new instance of { @link <unk> } with the given { @link class } and { @link class } . the method { @link <unk> () } must be called before calling this method .
<p > <unk> . < / p >
returns the { @link converter } registered for the given { @code type } .
/ * ( non - javadoc )
returns the { @link converter } registered for the given { @code type } .
<p > readentity . < / p >
returns the { @link converter } registered for the given { @code type } .
returns the { @link converter } registered for the given { @code type } .
creates a { @link jndiconfigurationsource } .
registers the {
creates a new { @link rx . scheduler . scheduler } instance with the given { @link sundial } and { @link scheduler }
create a @ { @link <unk> } instance .
/ * package
creates a new instance of { @link <unk> } .
sets the default { @link <unk> } .
/ * ( non - javadoc )
returns the response factory .
/ * ( non - javadoc )
retrieve a response from cache .
creates a new { @link <unk> } with the given { @link object body } and { @link response body } .
creates a { @link response } with the given code and body .
creates a new { @link <unk> } with the given { @link response body } .
<p > <unk> . < / p >
tries to determine whether the specified character is a cjk character .
converts a string to a string .
this method creates a list of default zones .
analyze an expression .
reset the input stream to the beginning of the input .
process <unk> of <unk> format .
returns { @link <unk> } .
parses a { @link <unk> } .
parses a { @link <unk> } .
/ * ( non - javadoc )
reads the next byte from the input stream .
/ * <unk>
add a class path entry .
returns true if the vertex is in the result map .
reads the next character .
called by {
reset <unk> format
parse an { @link <unk> } .
parses a { @link <unk> } .
add a { @link <unk> } .
removes the empty node .
parses a { @link <unk> } .
process an <unk> check .
gets the int .
[ start <unk> ]
adds a collection of words to a collection of words .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
returns a boolean indicating whether a substring of the pattern matches at least one of the specified characters .
matches the search at the specified index .
/ * ( non - javadoc )
reads the main dict .
search for ext extension .
inits the json reader .
returns a list of the remote characters from a given location .
load the <unk>
load quantifier dict .
/ * ( non - javadoc )
this method parses the last modified state of the connection .
adds a { @link <unk> } .
moves to the first { @link #getvalues () } method .
returns <code > null< / code > if the queue is empty .
/ * ( non - javadoc )
/ * <unk>
$antlr start <unk>
output a { @link <unk> } .
<unk> . <unk>
/ * ( non - javadoc )
<unk> <unk> .
gets the map of children of the <unk> .
remove segments for a segment .
compares this { @code other } { @code other } { @code <unk> } .
gets the string representation of a type .
/ * ( non - javadoc )
sets the status converter .
sets the status converter .
override handlerequest in order to perform processing for authentication .
sets the { @code <unk> } parameter to be used by { @code <unk> } .
<p > <unk> . < / p >
sets the map of cross domain mappings to use for cross - domains .
<p > startup . < / p >
creates a new { @link secretkey } with the given algorithm .
/ * ( non - javadoc )
returns the { @link date } represented by the given { @link string } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
encrypt the given password with the given salt .
/ * ( non - javadoc )
creates a runner for the given class .
add a { @link <unk> } to { @link <unk> } .
loads the version properties from the classpath .
returns a { @link mono } of { @link <unk> } s .
/ * ( non - javadoc )
returns a { @link <unk> } for the given { @link userdetails } .
/ * ( non - javadoc )
runs the build .
<p > <unk> . < / p >
creates a session map from the given request .
logs a <code > <unk> / code > .
adds a { @link <unk> } to the { @link <unk> } .
/ * ( non - javadoc )
creates a { @link <unk> } from the { @link <unk> } .
returns the details of the authentication user details .
initializes the default login page generator .
configure endpoint access by form authorization .
/ * ( non - javadoc )
create the launcher data from configurer .
create the launcher data from configurer .
/ * ( non - javadoc )
add a filter after the filter
add a filter before
adds a filter to the push filter .
add a filter filter to the filter
returns a new instance of { @link <unk> } .
{ @inheritdoc }
checks if the given { @code method } matches the given { @code method } .
/ * ( non - javadoc )
/ * ( non - javadoc )
search for multiple attribute values .
search for multiple attribute values .
init string values
perform a { @link <unk> } search for { @link <unk> } s .
/ * ( non - javadoc )
prints the { @link searchcontrols } object to display the { @link searchcontrols } object .
<p > <unk> . < / p >
updates the primary keys associated with the given list of entities .
creates a list of acls from the specified object id .
<p > creates a list of { @link <unk> } objects from the specified object identity . < / p >
update acl .
create a sid to execute fetch .
get the list of portlet roles associated with the portlet .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
create the embedded server .
/ * ( non - javadoc )
/ * ( non - javadoc )
gen - last : <unk>
extract intercept urls for bean definition .
/ * ( non - javadoc )
select the imports of the <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the role associated with the given role .
creates a new { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
validate the filter parameters .
register a filter with web . xml
returns the {
<p > <unk> . < / p >
{ @inheritdoc }
<unk> <unk> <unk>
/ * ( non - javadoc )
<p > <unk> . < / p >
gets the authorities for a given attribute .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the { @link <unk> } for the { @link <unk> } .
sets the policy creation policy .
{ @inheritdoc }
gets the effective session creation policy .
checks if the given message is available .
gets the session authentication strategy .
{ @inheritdoc }
/ * ( non - javadoc )
called by the { @link <unk> } implementation .
checks if authentication is successful .
initializes the { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
factory method for creating a new { @link secretkey } from the given parameters .
生成 { @link secretkey } <unk>
factory method for creating a new { @link cipher } from the specified mode .
returns the parameter specification for the given parameter specification .
factory method for creating a new instance of { @link <unk> } .
creates a new cipher with the given salt and iteration count .
initializes the cipher with the specified mode .
encrypt data using aes - 256 .
/ * ( non - javadoc )
/ * ( non - javadoc )
authenticate a request .
/ * ( non - javadoc )
called by the { @link <unk> } implementation .
sets the authentication context to the given response .
/ * ( non - javadoc )
/ * check the content of the content - length header .
/ * [ deutsch ] <p > erzeugt eine <unk> zu <unk> . < / p >
/ * ( non - javadoc )
<unk> > <unk>
converts authorities to simple authorities .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the failure url .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link authorized } with the given { @link <unk> } and { @link authorized } .
adds the request attributes to the request .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
transform a set of authorities to a role .
sets the ldap template .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the annotation for the given method or <code > null< / code > if not found .
/ * ( non - javadoc )
creates a <code > <unk> / code > with the specified validator .
/ * ( non - javadoc )
/ * ( non - javadoc )
find remember - me - in cookie .
/ * ( non - javadoc )
decodes the given cookie value into an array of <code > string< / code > s .
encodes the given query string into a url query string .
/ * ( non - javadoc )
update the requested cookie attributes .
adds a cookie to the response .
adds a cookie to the response .
/ * ( non - javadoc )
<p > <unk> . < / p >
try to retrieve the rsa public key from the provided { @link inputstream } .
/ * ( non - javadoc )
this method will load users from the aql query .
loads the {
loads the { @link <unk> } from the { @link <unk> } .
returns a {
saves csrf token .
this method implements the logic for the <unk> .
/ * ------------------------------------------------------------
sets the error page name .
/ * ( non - javadoc )
validate security context
----- private methods -----
/ * package
gets the port .
authenticate and return principal .
/ * ( non - javadoc )
authenticate event .
interceptor method for getting the displayer interceptor .
/ * ( non - javadoc )
<p > <unk> . < / p >
processes the <unk> .
{ @inheritdoc }
gets the {
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
set the default converter .
replaces the {
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> 参考文档：<a href = http : // www . w3 . org / protocols / rfc2616 / rfc2616 - sec14 . html > http : // www . w3 . org / protocols / rfc2616 / rfc2616 - sec14 . html > http : // www . w3 . org / tr / <unk> - <unk> > <unk> / a >
adds a filter after the filter .
builds the <unk> .
{ @link <unk> ( httpservletrequest httpservletresponse ) }
/ * ( non - javadoc )
this method is used to read truststore and <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
creates a new { @link runnable } .
returns all the methods
builds a list of authorities as a list of { @link <unk> } objects .
creates a { @link consumer } for bearer token value .
<unk> <unk> <unk>
/ * ( non - javadoc )
set environment environment properties .
partition the limit by parameter .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the value of the claim that will be used by the {
sets the { @link converter } that will be used for the given { @link converter } .
/ * ( non - javadoc )
gets the {
/ * ( non - javadoc )
create filter chain chain
/ * <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link node } with the given user builder .
/ * ( non - javadoc )
/ * package
/ * ------------------------------------------------------------
generates a digest based on the specified digest challenge .
parse a comma - separated list of values and returns it .
splits the given string using { @link <unk> ( string ) } .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link <unk> } from the given { @link <unk> } .
/ * ( non - javadoc )
/ * private methods
/ * ( non - javadoc )
/ * ( non - javadoc )
called by the { @link <unk> } implementation .
checks if the ticket requires authentication .
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the current user is authenticated .
/ * ( non - javadoc )
returns true if the proxy object is configured for the given identity .
performs a mapping of users to an user by username .
returns the <unk> instance
find the platform from the servletcontext .
creates a new { @link <unk> } instance .
creates a list of { @link <unk> } for the given invocation .
filters the given target object using the given filter .
return a { @link mono } of { @link <unk> } .
returns the jdk jdk { @link java . lang . string } or { @code null } if the name does not exist .
redirects the given url to the specified url .
performs authentication .
creates a new { @link authenticationexception } for the given { @link userdetails } and { @link <unk> } .
attempt to process the object in the given object .
/ * ( non - javadoc )
handles an authentication request .
/ * ------------------------------------------------------------
apply the configured username to a previously configured provider
encodes the given string into a url - encoded string .
returns the user object associated with the given resource .
returns whether the current user is authenticated or not .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
create a <unk> object .
create a new {
create a { @link <unk> } instance .
creates a new { @link <unk> } from the given { @link <unk> } .
configure password .
sets the { @link converter } to use for the request .
handle the logout success .
/ * ( non - javadoc )
sets the { @link converter } for the token .
sets the value of the { @link <unk> } .
<p > <unk> . < / p >
gets the instance .
{ @inheritdoc }
/ * ( non - javadoc )
build user details by assertion .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link authorized } with the given { @link <unk> } and { @link authorized } .
/ * private methods
gets the principal associated with the given request .
loads user details by username .
loads the user details from the user .
creates a { @link map } of { @link <unk> } s .
/ * ( non - javadoc )
returns a { @link consumer } of { @link <unk> } .
returns a {
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the resource has permission to access the resource .
/ * ( non - javadoc )
computes the signature for the given username and password .
combine two byte arrays into one .
returns a copy of the given array of characters .
get a list of all authorities of the given collection of attributes .
gets the esjp s license histogram .
returns a collection of { @link <unk> } s of the given type .
<p > <unk> . < / p >
/ * ------------------------------------------------------------
/ * ( non - javadoc )
apply a { @link <unk> } to the configurer .
creates a new { @link <unk> } instance with the given { @link <unk> } .
/ * ( non - javadoc )
returns the shared object for the given class .
create a { @link <unk> } instance .
get a new instance of { @link <unk> } .
get a new instance of { @link <unk> } .
removes a registered { @link <unk> } instance for the given class .
execute a post processor .
calculate the bloom filter .
factory method to create a new instance of { @link <unk> } .
/ * ( non - javadoc )
redirects the given url to the login page .
builds the https redirect url for the given request .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the given role is available .
/ * ( non - javadoc )
sets the user name of the user .
/ * ( non - javadoc )
attempts to retrieve the auto - generated cookie from the request .
sets the successful response headers .
/ * ( non - javadoc )
attempt to authenticate a user .
returns the logged - in user .
/ * ( non - javadoc )
checks if the current user has the given role .
sets the { @link <unk> } of the { @link <unk> } .
sets the { @link <unk> } of the { @link <unk> } .
sets the { @link <unk> } of the { @link <unk> } .
/ * implementation
display a list of contacts for this portlet .
strip the content from the path .
replaces the { @link <unk> } with the { @link <unk> }
executes the {
sets the { @link <unk> } annotation for the given { @link <unk> } .
create a { @link <unk> } from a { @link map } .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is used to check if the given class is supported by this <unk> .
return the { @link <unk> } for the given token .
sets authorized access token .
{ @link <unk> ( <unk> ) } <unk>
/ * ( non - javadoc )
check if the current request is authorized .
gets the {
/ * ( non - javadoc )
/ * ( non - javadoc )
configures remember the remember - me .
create remember - me required for remember - me services .
create user by username .
create user by username .
returns a { @link <unk> } for the given { @link <unk> } .
sets the { @link java . util . function . <unk> } of the { @link java . util . function . <unk> } .
create a new {
creates and returns a new {
configures the authentication provider .
/ * ( non - javadoc )
create a {
/ * ( non - javadoc )
adds a { @link <unk> } to the { @link <unk> } .
applies default options .
creates a list of header filter .
returns a list of { @link <unk> } s .
add filter after
add filter support
add filter before
returns the { @link annotation } object for the given class or { @code null } if no such annotation exists .
{ @link <unk> }
get oauth scopes .
get the parent authentication manager .
loads the user by username .
create a { @link <unk> } instance .
/ * ( non - javadoc )
saves the csrf token in the request .
display search page .
display a search error .
issue 139 : https : // bitbucket . org / telestax / telscale - restcomm / issue / <unk>
deletes the permission for a permission
returns the security properties associated with the backend .
/ * ( non - javadoc )
create a new instance of { @link <unk> } with the given error code .
returns the error code for the given error code .
matches the {
creates a {
creates a { @link <unk> } from a { @link <unk> } .
creates a { @link <unk> } from a list of { @link <unk> } .
/ * ( non - javadoc )
creates a default access trust manager .
returns the {
/ * ( non - javadoc )
creates { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } and { @link <unk> } .
creates a { @link <unk> } from the given { @link user } .
creates a { @link <unk> } from a string .
creates a { @link <unk> } from a { @link pattern } .
creates a { @link <unk> } from a pattern .
returns the mappings for the given element . <p >
/ * ( non - javadoc )
/ * ( non - javadoc )
encode a string into a byte array .
decodes a byte array into a string .
gets ticket .
finds the { @link method } from the given { @link set } of { @link method } s .
returns a list of parameter names for the given method .
returns the name of the parameter with the given annotation .
获取 token form
/ * ------------------------------------------------------------
sets the value of this { @link <unk> } .
/ * ( non - javadoc )
check that the given report is a valid uri scheme .
/ * ( non - javadoc )
{ @inheritdoc }
adds a new interceptor to the list of interceptor methods .
adds a new { @link <unk> } to the list of { @link <unk> } s .
adds the attributes of the given ldap entry to the ldap server .
/ * ( non - javadoc )
/ * public void <unk> ( string methodname ) { return <unk> . <unk> () ; }
returns the {
removes a scoped token from the request .
loads a csrf token from the session .
gets <unk> configuration .
/ * ( non - javadoc )
create a {
create a { @link <unk> } from the provided { @link list } of { @link <unk> } s .
create a {
/ * ( non - javadoc )
registers the given request command with the given configurer .
set the ant tags to the provided output patterns .
/ * ( non - javadoc )
sets the regular expression for the given http method .
creates a new instance of the {
/ * ( non - javadoc )
utility method to create a login context .
/ * ( non - javadoc )
sends a { @link throwable } to a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
sets the regular expression for the remaining options .
registers a new { @link <unk> } .
creates a set of request attributes .
/ * ( non - javadoc )
publish jax - ws endpoint authentication .
determine if the specified authorization object should be authorized .
/ * ( non - javadoc )
initialize servlet .
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> <unk> <unk>
/ * ------------------------------------------------------------
executes the method .
/ * ( non - javadoc )
updates the <code > <unk> / code > with the <code > <unk> / code > .
post a { @link java . lang . object } to a { @link java . util . map } .
/ * ( non - javadoc )
clears the authentication attributes .
returns the field named { @code clazz } .
returns the value of the field with the given name .
/ * ( non - javadoc )
factory method for creating a new { @link <unk> } .
creates a redirect url to redirect the request to the given service url .
set the roles .
get the roles that are reachable from the authorities .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the authorities granted to this role .
encrypt the given byte array .
adds a logout handler .
sets saml logout handler .
puts a {
get the { @link <unk> } that will be used by the { @link <unk> } .
create a logout filter .
process the given { @link <unk> } and { @link <unk> } .
combine two byte arrays into a single byte array .
encodes the given password and returns the password .
returns true if the password matches the given password .
extracts the prefix from the given string .
authenticate the request .
login form .
request the logout .
get worker state
called when the user is authenticated .
this method is called by the {
returns true if the path is a normalized path .
checks if a filter is published .
/ * ( non - javadoc )
loads the given { @link throwable } into a { @link <unk> } .
returns the registered {
gets the cause chain .
extracts the cause of the given throwable .
returns true if the given exception is an instance of the given type .
verifies that the given { @link throwable } type is a { @link class } .
returns an array of all the methods of the given class .
/ * ( non - javadoc )
set the fragment directives for this builder .
sets the { @link converter } to use for the request .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
converts authorities to groups .
returns true if the two arrays are equal .
/ * ( non - javadoc )
build form parameters
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
clears the authentication attributes .
sets the default failure url .
{ @inheritdoc }
sets the hidden inputs to the hidden input variables .
{ @inheritdoc }
loads a { @link userdetails } from a { @link <unk> } .
<p > <unk> . < / p >
/ * ( non - javadoc )
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
build full request url
get the full url for the given request .
builds the url for the given request .
/ * ------------------------------------------------------------
returns true if the given url is absolute .
see { @link <unk> ( string list ) }
/ * ( non - javadoc )
returns a { @link net . dv8tion . jda . core . entities . guild guild } with the specified { @link net . dv8tion . jda . core . entities . guild guild } .
flushes a row .
convert a serializable identifier to long .
creates a new { @link <unk> } with the specified { @link <unk> } and { @link password } .
gets idp service registration .
this method creates a vote object from the given resource .
/ * ( non - javadoc )
creates a {
returns a {
creates a default { @link <unk> } for the given authentication entry .
gets the { @link <unk> } for the given { @link httprequest } .
<p > <unk> . < / p >
gets the user cache .
submit the role hierarchy .
creates a new acl for the specified identity object identity .
create a new { @link <unk> } .
create user object identity object
/ * ( non - javadoc )
try to create or retrieve a new sid sid .
/ * ( non - javadoc )
retrieve the primary key for the given object identity .
creates a new acl object with the given identity .
creates a new { @link acl } from the specified { @link <unk> } .
/ * ( non - javadoc )
creates a new { @link future } that uses the given { @link callable } to run the given { @link callable } .
sets the { @link io . netty . bootstrap . serverbootstrap }
creates a new {
matches any {
creates a standard <code > <unk> / code > using aes - 256 .
creates a standard <code > <unk> / code > using aes - 256 .
factory method to create an encryptor instance of { @link <unk> } .
factory method to create an encryptor instance of { @link <unk> } .
factory method to create an encryptor instance of { @link <unk> } .
method allow to filter policies by predicate .
create a new { @link <unk> } instance .
this method implements the logic for the <unk> .
create a { @link <unk> } .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
obtain a subject from the security context .
configures the { @link net . dv8tion . jda . webhook . csrf csrf } csrf from the specified { @link net . dv8tion . jda . webhook . csrf csrf } .
configures the given { @link net . dv8tion . jda . core . hooks . csrf csrf } with the given { @link net . dv8tion . jda . core . requests . csrf csrf } .
returns a {
returns a { @link net . dv8tion . jda . core . requests . requests . <unk> } using the given { @link matcher } .
returns a {
gets the default access exception handler for the given exception .
returns invalid session strategy .
creates a { @link <unk> } for the given { @link httprequest } .
/ * ------------------------------------------------------------
process unhandled action .
write the target url to the target url .
sets the default target url .
/ * ( non - javadoc )
gets the { @link <unk> } .
/ * ( non - javadoc )
f743 - <unk>
create a new distinguished name from the supplied distinguished name .
create a builder from an authorization token .
introspect the {
create a new {
{ @inheritdoc }
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
sets the { @link <unk> } for the given { @link authentication } .
creates a spel evaluation context for the given authentication request .
check service services .
/ * ------------------------------------------------------------
resolve the ip address .
/ * ( non - javadoc )
prepare connection .
returns a { @link mono } of { @link mono } .
<p > <unk> . < / p >
destroy all assets .
tokenize the given header string .
sets the { @link javax . inject . convert . <unk> } service to use for the { @link javax . inject . spi . <unk> } .
formats the given date using the given datetimeformat .
gets the current date .
parses the given text as a text .
parses the given value as a java . util . date object .
{ @inheritdoc }
<p > <unk> . < / p >
creates a { @link method } for the given class and method name .
creates a { @link method } for the given class and method name .
handles an authentication request .
sets the details of the {
maps a { @link list } of { @link <unk> } instances to a { @link list } of { @link <unk> } instances .
maps a list of { @link <unk> } instances into a { @link <unk> } .
/ * ( non - javadoc )
creates an array of { @link <unk> } instances .
/ * ( non - javadoc )
create a new { @link <unk> } instance .
creates the success authentication token .
set the realm .
sets the data source for the given datasource .
access the user with the given username .
sets the keystore to the given file .
{ @inheritdoc }
sets the password .
commits the user .
/ * ( non - javadoc )
create a auditor from the current thread .
method to abort the user .
creates { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } and { @link <unk> } .
creates a { @link <unk> } from the given { @link resource } .
creates a list of { @link <unk> } objects based on the given string .
{ @inheritdoc }
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
this method will find all the parent groups for a given security name .
method <unk> .
/ * ( non - javadoc )
sets the group attribute name .
returns a list of the children of the given sql identity .
determine if the given object should be authorized to match the given object .
on authentication .
send a list of sessions to the session manager .
remove a {
{ @inheritdoc }
build form parameters
/ * ------------------------------------------------------------
create the authentication token for the given authentication token .
/ * ( non - javadoc )
called when a session is changed .
/ * ( non - javadoc )
returns a list of { @link <unk> } s that matches the given request .
returns a list of filters for the specified url .
checks if the current user has the given permission .
returns the spring application context for the given servletcontext .
create the authentication token for authentication .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
add a distinguished name to a distinguished name .
get the named distinguished name from the distinguished name .
sets the <unk> .
/ * ( non - javadoc )
sets the session attributes .
sets the session attributes attribute .
/ * ( non - javadoc )
returns a new form of { @link <unk> } with the given field name .
returns a new form of the form { @link <unk> ( string string string ) } with the given parameters .
creates a new { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
creates a new { @link <unk> } .
get the basic authentication scheme object for basic authentication .
<p > <unk> . < / p >
applies the filter to the filter base .
<p > <unk> . < / p >
<p > <unk> . < / p >
transforms a { @code objectmapper } .
returns an unmodifiable list of all arguments .
returns the resource at the given key .
perform a get request .
gets the response .
<unk> > <unk>
gets the resource .
/ * delete
<unk> > <unk>
create a head request for the given x and path parameters .
head get response .
patches the response .
create a response from a url .
gets the response options .
performs an http get on the given url .
create a new { @link httprequest } .
create a new { @link httprequest } .
create a new request configured with the given http method and url .
creates a new request with the given url and url .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a { @link <unk> } from the given username and password .
/ * ( non - javadoc )
get the {
generate a typical auth descriptor for cram - md5 authentication .
{ @inheritdoc }
<p > build a <b > crest< / b > instance to authenticate a previously constructed <code > <unk> / code > and <code > <unk> / code > . < / p >
/ * ( non - javadoc )
helper method to get the { @link <unk> } .
reset the authentication filters .
sets the ssl config .
/ * ( non - javadoc )
deletes the given alias from the given path .
configure trust store
trust store connection .
adds the given { @link file } to the given { @link file } .
configure trust store
sets the proxy uri .
adds a proxy to the server .
<p > <unk> . < / p >
print the response .
redirect to <unk> encoder
populates a { @link encoder } from the given { @link map } of { @link string } s .
parse the given { @link httpmessage } into a { @link charset } for the given content type .
parse the given { @link charset } for the given { @link charset } .
reads the content - type from the given { @link charset } .
create a { @link <unk> } instance with the given { @link charset } .
appends a default { @link <unk> } to the { @link <unk> } .
send a { @link restresponse } object to a { @link restresponse } object .
wraps the given { @link <unk> } as a { @link <unk> } .
wraps a { @link <unk> } in a { @link <unk> } .
wraps the given { @link <unk> } on the given { @link <unk> } .
wraps the given { @link <unk> } on the given { @link <unk> } .
wraps a { @link <unk> } on a { @link <unk> } .
creates a {
creates and returns a new instance of { @link <unk> } with the given configuration config .
<p > <unk> . < / p >
creates and returns a new instance of { @link <unk> } with the given configuration config .
creates and returns a new instance of { @link <unk> } with the given configuration .
creates a new instance of { @link net . <unk> . <unk> . <unk> } configuration .
creates and returns a new instance of { @link <unk> } with the given configuration config .
creates a new { @link <unk> } for the given configuration .
creates a new instance of { @link net . <unk> . <unk> . <unk> } .
creates a new { @link <unk> } for the given { @link <unk> } .
creates a new {
creates a {
<p > <unk> . < / p >
/ * <unk>
returns a handler that can be used to authenticate against the certificate chain .
creates a { @link <unk> } that will allow all of the { @link certificate } s to be built .
creates a new {
creates a new instance of { @link document } according to the specified { @link reader } .
creates a new instance of { @link <unk> } .
create a new instance of { @link document } with the given properties .
creates a new { @link xpath } instance with the given property name and value .
configures the loading of all features loading from the given { @link <unk> } .
<p > <unk> / p >
declares the namespace uri
executes the api action <unk> for the given parameters .
perform a http get request and returns the result .
gets the object .
perform a post request .
perform a patch request .
performs a patch request .
/ * ( non - javadoc )
send a request to the client .
{ @link java . util . map }
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> > <unk>
set a proxy to use in the request .
sets the name of the tag .
set headers .
/ * ( non - javadoc )
creates a new instance of { @link object } with the given charset .
sets the charset to use for the response .
changes the serializer maps .
sets the { @link <unk> } for the given { @link <unk> } .
convenience method for adding a uri to a uri .
/ * ( non - javadoc )
dispatch a request to user .
creates a new {
adds a new certificate to the sslsocket .
<p > <unk> . < / p >
updates the access token with the given access token .
finds the mime type of the response .
creates a new { @link httpheaders } object from the given array of additional headers .
creates and returns a {
/ * resets the state of this instance to its initial state .
get a resource by path .
get a response from the given path .
create a new instance of { @link <unk> } with the given parameters .
create a post request .
creates a new instance of { @link <unk> } .
delete a resource .
creates a new instance of { @link path } with the given path parameters .
create a resource with the given path params and path params .
create a head request for the given base url and path .
patches the resource with the given path params .
creates a new { @code <unk> } with the given parameters .
创建或者更新索引文档 for elasticsearch 7 and 7 +
put http response options .
/ * [ deutsch ] <p > erzeugt ein neues <unk> . < / p >
creates a new instance of { @link httprequest } .
create a new instance of { @link <unk> } .
creates a new request with the given parameters and url .
create the authentication scheme .
create and return authentication scheme principal .
create a authentication scheme for authentication .
create a { @link <unk> } from a { @link object } .
create an authentication scheme .
enable / disable the logging sdk
creates a { @link predicate } of { @link org . parboiled . mock . <unk> } .
creates a { @link list } of { @link mock } s matching the given path .
creates a new { @link <unk> } with the given path .
creates a { @link <unk> } that matches the given strings .
sets the { @code content - type } header of the { @code content - type } .
set the content - type of the photo .
adds a header to the console .
/ * ( non - javadoc )
returns a matcher that matches any of the given {
returns a matcher that can be used to match a single comment .
returns a new {
returns a matcher that matches the given domain matcher .
returns a matcher that matches the path of the given path .
creates a new { @link <unk> } for the given { @link throwable } and { @link <unk> } .
returns a new {
returns a new {
returns a new {
adds a condition to the rule builder .
expect a retry condition .
adds a condition to the rule builder .
adds a cookie matcher to the response .
adds a cookie to the response .
sets the {
adds a root path to the {
appends a path to the default cache path .
adds a parameter to the rule builder .
adds a parameter to the rule builder .
adds a {
creates a new { @link <unk> } from the given { @link classloader } .
/ * ( non - javadoc )
creates a {
loads a json schema from a json schema file .
/ * ( non - javadoc )
creates a list of { @link org . eclipse . codegen . model . <unk> } instances .
sends a { @link <unk> } to a { @link response } with a { @link <unk> } .
creates a new { @link <unk> } with the given matchers .
<p > <unk> . < / p >
gets the sub entity .
gets the name of the entity with the given name .
gets a list of entities .
returns an unmodifiable view of the values contained in this list .
opens a new { @link <unk> } with the given parameters .
creates a new { @link <unk> } with the specified username and password .
<p > sets the proxy authentication specification . < / p >
<p > connects . < / p >
returns a new instance of { @link <unk> } .
returns the deserializer for the given type .
returns a { @link <unk> } for the default { @link <unk> } .
creates a new instance of { @link <unk> } .
returns a new {
returns a new {
returns true if the given location is a valid uri .
returns a {
/ * -------------------------------------------------------------------
creates a { @link <unk> } from a list of { @link list } s .
/ * package
creates a new instance of { @link <unk> } .
overwrites the existing parameters with the given name .
creates a new { @link com . hazelcast . queue . <unk> } .
creates a new { @link <unk> } .
creates a new instance of this class .
creates a default { @link com . <unk> . <unk> . multi . queue . <unk> } .
returns a { @link part } backed by the { @link <unk> } .
returns a { @link multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . multi . <unk> java . util . charset java . io .
sets the { @link <unk> } to use when using { @link <unk> } .
sets the body of the builder .
add a header to the request .
set attribute value .
add a header to the request .
add a {
/ * ( non - javadoc )
add a form to the request body .
add a multi - part body to the builder .
sets the session id for the session .
navigates to an {
adds the specified result handlers to the validator under construction .
sets the log configuration parameter .
process parameter .
returns a new instance of {
returns a new {
returns a new {
returns a {
<p > <unk> . < / p >
returns the value of the path as a double .
applies the given value to the given value .
returns the value mapped by {
returns the value of the path as a double .
returns the value mapped by {
returns the value at the given index or <code > long . max_value< / code > if the path is not a <code > long< / code > .
/ * ( non - javadoc )
returns a { @link map } containing the value of the specified { @code map } .
method to convert an object to an object of the given type .
returns the value for the given type .
adds a key / value pair to the map .
/ * ( non - javadoc )
create a new instance of this { @link document } instance with the given { @link reader } .
parse properties from properties .
creates a new instance of { @link <unk> } .
creates a new { @link config } instance with the given property name and value .
parse a map of namespace declarations from a map .
executes the api action <unk> for the given parameters .
configures the loading of all features loading from the configuration .
create a new config instance with the given parameters .
parse a { @link reader } into a { @link <unk> } .
parse the given { @link reader } to a { @link <unk> } .
returns a default {
returns the default { @link <unk> } for the given { @link charset } .
returns the default { @link <unk> } for the given { @link contenttype } .
returns the default { @link <unk> } for the given charset .
returns the default { @link charsetdecoder } for the passed { @link charset } .
returns a {
sets the value of the specified key in the map .
gets the field as list .
returns a deep copy of the specified map .
/ * ( non - javadoc )
returns the value mapped by { @code name } if it exists and is a { @link integer } .
gets the boolean value of the system property .
convert a path to a string
convert a path to a string .
get an optional string associated with a key .
returns the value of the property as a double .
returns the value of the property as a double .
returns the value mapped by { @code name } if it exists and is a { @code long } .
convert this object to a string .
return the uuid for the given object .
create a new path from the given key and value .
/ * ( non - javadoc )
/ * ( non - javadoc )
convert an object to a map .
set the body of the request .
adds a cookie name - value pair to the request .
添加命名的参数 : propertyname - > 命名的参数
添加命名的参数 : propertyname - > 命名的参数
添加命名的参数 : propertyname - > 命名的参数
adds a parameter to the list .
添加命名的参数 : propertyname - > 命名的参数
adds a parameter to the request .
add a parameter to the list .
add path headers to the request .
sets the key store .
sets the { @link <unk> } to be used to sign the publications file .
sets a header value .
write a multi - part header to the request .
adds a multi - part request to the request .
gets the url of the session encoded by session id .
add a {
performs basic logging .
set default proxy .
returns a { @link <unk> } for the given update strategy .
creates a new { @link <unk> } with the given { @link <unk> } .
creates a { @link response } from a { @link path } ending with a { @link path } ending with a path .
create a new { @link <unk> } with a { @link <unk> } .
creates a new { @link <unk> } with the given { @link <unk> } .
creates a new map from the given matcher .
creates an {
creates an {
creates an { @link sslconfig } .
returns the ssl context .
creates a new { @link sslconfig } .
get cookie by name .
adds a header to the response .
converts the given cookies into a set of cookies
factory method to create a new { @link provider } using the given { @link class } .
loads the keys from the given { @link set } .
adds a list of bindings to the injector .
returns the binding key for the given key .
binds the given { @link <unk> } to the given { @link <unk> } .
/ * ( non - javadoc )
returns true if the given key is a member of the given key .
returns a { @link key } for the given { @link <unk> } .
returns a binding key for the given key .
creates a {
/ * package
returns the dependencies for the given binding .
creates a { @link binding } based on the given key .
binds the {
creates a {
creates a new {
/ * ( non - javadoc )
returns the key binding for the given key .
returns a { @link <unk> } for the given parameters .
create a context .
<p > invoke . < / p >
returns the label for the given node .
returns a new instance of { @link <unk> } with the specified type and type .
create a new instance of <unk> with the given parameters .
see <unk> / p > <p > see : <a href = http : // stackoverflow . com / a / <unk> / <unk> / a >
see https : // github . com / google / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> . html
see <unk> . <unk> . google . io . <unk> / <unk>
binds the injector instance to the specified injector .
binds the specified { @link injector } to the members provider .
returns a dependency object for the given key .
returns a {
returns a {
creates a { @link <unk> } for { @link java . lang . reflect . constructor } .
static factory method for creating a new { @link java . lang . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect . reflect
creates a set of { @link <unk> } instances for the given { @link type } .
returns a set of { @link <unk> } instances for the given { @link type } .
/ * ( non - javadoc )
returns the {
returns true if the given method is eligible for injection .
returns true if the given method is an artefact of the given type .
initializes the delegate { @link <unk> } with the given { @link <unk> } .
get the members of the members of the given members .
returns an {
create a new {
invokes the given { @code <unk> } on the given { @code <unk> } .
invokes the given { @link throwable } s { @link throwable } s { @link throwable } s { @link throwable } s { @link throwable } s { @link throwable } s { @link throwable } s { @link <unk> } .
get the generic type parameter for the given subclass subclass .
returns a {
returns a {
returns a list of {
returns the { @link supertype } for the given { @link class } .
returns a {
returns a list of { @link method } s of the given type .
create a new methodparameter for the given method or constructor .
returns a {
returns a key for the given { @link method } .
returns a {
returns true if the given type is a type variables .
returns the raw type of the given type .
resolve the type variable of the given type variable .
initialize the servlets .
prepares the {
returns the {
creates a new instance of { @link <unk> } .
creates a new { @link <unk> } instance for the given member .
returns true if the given class has the same version as the given class .
<p > returns true if the specified method is public or not . < / p >
/ * ( non - javadoc )
gets the value of the { @link injector } in the given injector .
returns the { @link key } for the given { @link field } .
returns a qualifier for the given annotations .
/ * ( non - javadoc )
validates that the typemap is valid .
injects the { @link <unk> } and { @link <unk> } instances .
<p > newinstance . < / p >
collect all { @link <unk> } definitions for the given { @link injector } .
/ * ------------------------------------------------------------
resolve alias aliases .
checks if the given stage is fade out or not .
creates a new { @link provider } from the provided { @link <unk> } .
returns true if the binding is a scope .
/ * ( non - javadoc )
decodes a percent encoded string .
returns whether a binding is a duplicate of the given binding .
returns the annotation for the given annotation type .
returns true if the given type is equal to the given members .
generates a hash code for a setter method .
converts an annotation to a string .
returns true if the specified annotation is marked as retained at runtime .
finds the first scope annotation found in the given { @code <unk> } .
finds the first annotation of the given annotations .
checks if the given binding is a subtype of { @link <unk> } .
returns a { @link key } for the given { @link method } .
find the first {
returns the name of the { @code annotation } annotation if the given { @code annotation } is { @code null } otherwise .
returns the { @link class } represented by the given { @link class } if the given { @link class } is named { @link <unk> } .
returns the name of the generated {
called by { @link <unk> ( supplier ) } .
returns a { @link provider } for the given { @link <unk> } .
returns the member type for the given member .
returns a new {
returns a new {
returns a new {
binds the jersey type to the given type .
get the constructor for a constructor .
returns true if the given annotation is an annotation of the given class .
returns a new {
returns a { @link key } for the specified { @link type } .
binds the given { @link key } to a { @link provider } .
returns a new {
returns a { @link <unk> } that is backed by the { @link <unk> } .
factory method to create a new { @link method } from a { @link method } .
creates and returns a new dependency into the given dependency .
add the given stylesheet to the configured list of prefixes .
creates a { @link <unk> } from the given { @link <unk> } .
creates and returns a new instance of the given { @link <unk> } .
checks if the given annotation is annotated with the given annotation type .
returns a binding for the given annotation .
/ * ( non - javadoc )
creates a new instance of the {
{ @inheritdoc }
/ * ( non - javadoc )
find the injection point for a constructor .
returns true if the constructor has no parameters .
/ * utility methods
returns a { @code set } of { @code <unk> } s of the specified { @code dependencies } .
returns true if the given {
returns true if the given dependency is found for the given type .
{ @link org . apache . storm . <unk> . <unk> }
gets the binding from the injector .
{ @inheritdoc }
returns true if the given exception type can be checked .
throws a nullpointerexception if the specified object is { @code null } .
throws an { @link illegalargumentexception } if the condition is not met .
creates a new {
create a { @link <unk> } for the given key .
formats the given { @link string message } formatted with the given { @link string message } formatted with the given { @link object [] arguments } .
binds the given object to the given source object .
creates a new instance of { @link <unk> } instances .
get the {
finds the next filter matching the given filter .
returns { @code true } if the given { @code member } has at least one { @link inject } annotation .
returns an instance of the internal { @link <unk> } .
returns a { @link set } of { @link dependency } s of the given { @link <unk> } .
/ * ( non - javadoc )
returns a { @link set } of { @link dependency } s of the dependencies .
returns a { @link set } of { @link <unk> } instances .
returns the enum value of the given switch option .
get the value of the <code > name< / code > property as a system property or <code > null< / code > if the key does not exist .
/ * ( non - javadoc )
create a parameterized type with type arguments .
create a parameterized type with type arguments .
<p > <unk> . < / p >
create a new { @link parameterizedtype } from a { @link class } .
creates a new { @link karyonserver } which combines lifecycle of the given { @link module } with the given { @link <unk> } .
gets the annotation for the given method .
sends a set of parameters to the binder .
binds the dictionary properties to the given properties .
create an injector based on the given stage .
create an injector based on the given stage .
returns a list of {
crop the stack trace with the given java . lang . stack trace .
returns the line number for the given member .
initialize the class cache .
returns a scoped object from the scope map .
returns a composed function that first applies the callable to the thread pool .
returns a scoped object from the given { @code callable } .
gets the value of the specified key in the given object .
returns an { @link <unk> } for the given { @link <unk> } .
create and return a new {
create a list of { @link <unk> } instances .
sets the {
returns the key wrapper for the given type .
gets the provider provider .
<p > <unk> . < / p >
creates a new annotation instance .
<p > <unk> . < / p >
returns a key for the given { @code type } .
returns a {
binds the given { @code type } to the given { @code type } .
creates a converter for the given type literal .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the {
returns the { @link annotation } annotation for the given { @link class } .
returns a { @link list } of { @link entity } s from the given { @link <unk> } .
returns a list of { @link element } s in the given { @code elements } .
create a list of {
sanitize the stack trace of the given throwable .
creates a set of { @link groovy . lang . <unk> } instances .
creates a new { @link collection } of { @link <unk> } s .
/ * ( non - javadoc )
gets the list of resources for the given role .
returns the raw members of the members of the members .
merges the {
<p > <unk> . < / p >
formats a collection of { @link error } s into a { @link string } .
formats the given { @link string message } with the given { @link object arguments } .
constructs and initializes a new { @link ioexception } with the given { @link throwable cause } and { @link string message } formatted with the given { @link object [] arguments } .
constructs and initializes a new { @link messageformat } with the given { @link throwable cause } and { @link string message } formatted with the given { @link object [] arguments } .
converts a { @link object } to a { @link runtimeexception } .
returns the cause of the given collection of messages .
get the names of the modules from the current module .
crop the stack trace of the given stack trace .
creates a new instance of the given { @link <unk> } .
returns true if the class should be skipped .
returns the classes as a list of strings .
get the { @link stacktraceelement } for the given method .
returns a list of module names to be skipped .
register the given { @link injector } to the platform mbean specified by the { @link injector } . the package must be annotated with { @link <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string ) } .
/ * ------------------------------------------------------------
main method .
converts an array of { @link stacktraceelement } s to a { @link stacktraceelement } .
converts a stacktraceelement [] to an array of { @link stacktraceelement } .
--- dependency ---
/ * ( non - javadoc )
delete the dependency list .
<p > creates a new instance of { @link <unk> } . < / p >
/ * ------------------------------------------------------------
creates and returns a new instance of the specified { @link provider } that matches the given { @link provider } .
on event .
registers a processor listener .
returns the list of tasks that are visible to the given task .
unchecked version of { @link <unk> ( throwable ) } with { @link runtimeexception } or { @link runtimeexception } .
<unk> { @link <unk> }
<p > <unk> . < / p >
/ * ( non - javadoc )
removes the mapping for the specified url .
decode protocol buffer to protocol buffer .
unregisters all stats from the database .
/ * ( non - javadoc )
starts the {
{ @inheritdoc }
method <unk> .
adds a connection pool to the remote account .
remove a task from the pool .
<unk> need no need for <unk>
method <unk> .
initializes a new { @link executorservice } .
shuts down the connection manager .
method to deal with one way
method to deal with one way
method to deal with one way
calls <unk> on a remote server
calls <unk> on a remote server
schedules a sync request to the remote server .
invoke <unk> ( <unk> )
calls <unk> on a remote server
calls <unk> on a remote server
<unk> > <unk>
remoting - <unk>
remoting invokes <unk>
remoting - <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a connection to the remote server .
opens a connection to the remote server .
check if a connection can be ping .
close connection .
<p > enables the <code > <unk> / code > method of the <code > <unk> / code > . < / p >
get the validation datas .
<p > disables the given <code > <unk> / code > . < / p >
disables the specified {
create a new connection to the channel .
/ * ( non - javadoc )
close the channel
/ * ( non - javadoc )
/ * ( non - javadoc )
call the decode () method .
register all registered { @link <unk> } s .
register a { @link <unk> } with a { @link <unk> } .
pre - serialize response if necessary
/ * ( non - javadoc )
/ * ( non - javadoc )
sends notification response headers .
configure the given channel as https : // <unk> . <unk> . <unk> . <unk> .
/ * ( non - javadoc )
{ @inheritdoc }
executes a remote procedure call .
<unk> a connection
executes a remote connection request .
creates a new { @link protocol } instance from the given { @link integer } value .
creates a new protocol based on an array of ints .
convert a bitset to a byte .
returns a new { @code bitset } initialized with the given { @code int } value .
<unk> { @code connection } <unk>
opens a new reconnect task .
stops the task immediately .
method to deal with one way
method <unk> .
{ @link <unk> } <unk>
remoting - <unk>
remoting invokes <unk>
remoting invokes <unk>
remoting invokes <unk>
/ * ( non - javadoc )
adds a collection of connections to the connection pool .
/ * ( non - javadoc )
close the connection .
--- event methods ---
/ * ( non - javadoc )
returns the value of the property with the specified key in this property list . if the key is not found in this property list the default property list and its defaults recursively are then checked . the method returns <code > defaultvalue< / code > if the property is not found .
see { @link <unk> ( long ) }
gets the custom serializer .
sets the connection event listener .
log a message at the info level .
/ * ( non - javadoc )
returns a { @link map } of { @link <unk> } s for the specified class .
return a random connection from the pool .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the value associated with the given key .
returns the value for the given key .
<unk> <unk> .
<unk> > <unk>
gets the response object .
/ * ( non - javadoc )
build a { @link <unk> } from the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link eventloopgroup } .
enable the {
start pipe connection event
returns the remote address for the given channel .
returns the remote address of the given channel .
returns the remote address of the given channel .
returns the remote address of the given channel .
{ @inheritdoc }
returns the remote port of the given channel .
returns the local port of the given channel .
returns the string representation of the given socket address .
returns the host name for the given socket address or <code > null< / code > if it is not <code > null< / code > .
return true if the address is a valid uri .
add a connection to the pool .
remove a connection from the pool and close it .
{ @inheritdoc }
<p > <unk> . < / p >
returns the custom serializer for the given class name .
<p > registers a custom serializer for the given class . < / p >
gets the custom response serializer .
starts the migration thread .
/ * ( non - javadoc )
method to deal with one way
method to deal with one way
method to deal with one way
invoke <unk> ( <unk> )
invoke <unk> ( <unk> )
invokes <unk> ( <unk> )
invoke <unk> ( <unk> )
invokes <unk> ( <unk> )
remoting invokes <unk>
returns true if the remote address is connected to the remote server .
<unk> > <unk>
attempt to flush the high water mark and high water mark .
/ * ( non - javadoc )
gets the <unk> for the given opcode .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> <unk> <unk>
/ * ( non - javadoc )
translate a single frame into a byte buffer .
this method is called when a single frame is created .
translate a single frame check packet .
generates a md5 digest of the given string .
store a frame on the messagestore .
process a websocket frame .
close the websocket .
process a websocket frame .
/ * ( non - javadoc )
/ * ( non - javadoc )
disconnect the websocket
checks if the buffer size limit is exceeded .
reads the payload from the bytebuffer .
serializes the { @link bytebuffer } into a { @link <unk> } .
perform any handshaking processing .
this method clears the buffer and ensures that the given buffer is allocated to hold the given number of elements .
/ * ( non - javadoc )
process the saml http token .
validate the http response .
/ * ( non - javadoc )
attempts to decode the opening handshake packet .
/ * ( non - javadoc )
/ * ( non - javadoc )
generates a {
disconnect the websocket
/ * ( non - javadoc )
updates the frame associated with the specified bytebuffer .
writes an array of bytes to this buffer .
disconnect the websocket .
connects to the server .
waits for the specified amount of time to complete .
checks if the given uri is a valid port .
connects to the back - end protocol .
websocket websocket open
/ * ( non - javadoc )
sets the { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link
--- stop subscriptions ---
start a new connection lost timer .
restart the connection lost connections .
execute a connection lost response .
cancels the connection callbacks .
/ * ( non - javadoc )
/ * ( non - javadoc )
sends a ping frame to the client .
creates a new { @link <unk> } from the given parameters .
meant to be meant to be consumed
this method is meant to be called by <unk> ()
this method is used to perform the actual handshake .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the port of the server .
handles the selected keys .
decode buffer .
/ * <unk>
select a checkpoint from the buffer
/ * ( non - javadoc )
starts the server socket .
loads a single class from the pool .
/ * <unk>
remove a connection from the list of connections associated with this websocket connection .
/ * ( non - javadoc )
updates the meta data with the specified list of bytes .
sets the specified broadcast variable to the given root broadcast .
sends a set of { @link <unk> } to the client .
returns a list of stack frames for the message .
transfers data from the source buffer to the destination buffer .
creates a <unk> based on a file .
configures the persistence unit .
gets the entity manager .
sets the {
same as { @link #callintransaction ( callable function ) } except that it allows the caller to specify a callable to be executed in a transaction .
refreshes the global lock of the entity .
adds a transaction to the database .
define a new transactional database with the given supplier .
refresh the tree with the given transaction .
create a read - only position of type t .
creates a scala { @link tuple } instance .
returns a list if the argument is non - null .
get the internationalized message for the specified key .
factory method for creating a new instance of { @link com . google . common . <unk> . <unk> } .
<code > map&lt ; string int64&gt ; usedbytesontiers = 9 ; < / code >
creates a messages from the given set of messages .
<! -- start generic documentation -- >
<p > set the language of the <code > <unk> / code > property . < / p >
configures the { @link validator } with the given configuration .
creates a new deployment entry .
{ @inheritdoc }
create a new injector instance with the given modules .
create a new instance of the { @link com . google . inject . guice . <unk> } instance .
returns a {
create a new { @link io . micronaut . guice . core . module . <unk> } instance .
create a new { @link io . micronaut . guice . core . <unk> } with the given { @link io . <unk> . core . module . <unk> } .
returns a {
disable a scala version of a module .
returns the {
generates a program for the program .
/ * ( non - javadoc )
gets the { @link <unk> } for the given { @link class } .
static factory method for wrapping a value of type <code > a< / code > in a <code > b< / code > .
static factory method for wrapping a value of type <code > b< / code > in a { @link choice5 } .
converts an executioncontext to an executor .
decodes a set of cookie names into a cookie object .
returns a copy of this provider s {
returns the classes as a list of strings .
returns the stack trace of the given stack trace .
creates a new instance of { @link unit } .
returns a comparator that uses a persistence unit persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence . persistence .
creates a map from a map of key - value pairs .
<p > <unk> . < / p >
returns the json representation of the given { @link jsonnode } .
creates a new { @link <unk> } instance for the given { @link string } .
create a new { @link <unk> } instance for the given class .
log a message at the error level .
<p > trace . < / p >
log a message at the error level .
log a message at the error level .
log a message at debug level .
log a message at the error level .
log a message at the info level .
log a message at the info level .
log a message at the info level .
log a warning message .
log a warning message .
log a message at the warn level .
log a message at the error level .
log a message at the error level .
log a message at the error level .
{ @inheritdoc }
loads an algorithm object from the given configuration .
show the client with the given id .
<unk> video video
<p > <unk> . < / p >
returns an accessible {
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
log a request error .
converts the given throwable to a { @link <unk> } .
<p > <unk> . < / p >
<p > <unk> . < / p >
creates a new { @link <unk> } from the given { @link file } s of the given { @link file } .
creates a new { @link <unk> } from the given { @link file } .
creates a new { @link <unk> } from the given { @link file directory } and the given { @link <unk> } .
creates a new { @link <unk> } from the given { @link file } and { @link <unk> } .
creates a { @link <unk> } from a jar file .
request handler for marker marker .
executes an asynchronous request .
<p > consume . < / p >
creates an { @link <unk> } from the given { @link string } .
creates a new instance of { @link payload } with the given { @link string content type } .
creates a new {
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
creates a new result from a collection of bytes .
creates a new result with the status { @literal 200 - ok } with the given status .
sends a json response to an object .
creates a new { @link <unk> } with the given array of bytes .
send a response status to the response .
creates a new result with the status { @literal 200 - ok } with the given content .
creates a new result with the given status .
sends a { @link <unk> } to a { @link <unk> } .
creates a new result with the status { @literal 200 - ok } with the given content .
creates a new result with the status { @literal 200 - ok } with the given content .
creates a new result with the given status .
creates a new result with the given content and charset .
creates a new result with the status { @literal 200 - ok } with the given json encoding .
creates a new result with the contents of a file .
<p > ok . < / p >
creates a new result with the status { @literal 200 - ok } with the given content .
creates a new result with the contents of a file .
<p > ok . < / p >
creates a new { @link <unk> } .
creates a new result with the status { @link <unk> } and { @link <unk> } .
creates a new { @link <unk> } object with the given content .
creates a new { @link <unk> } object with the given content .
creates a new { @link <unk> } instance with the given content .
creates a new result with the given content and content .
creates a new result with the given content .
send a bad request to the response .
<p > sends a 400 request to a response . < / p >
<p > sends a 400 request to a response . < / p >
<p > creates a 400 bad request with the given content . < / p >
creates a new { @link <unk> } instance with the given { @link string } .
<p > creates a 400 bad request with the given content . < / p >
<p > creates a 400 bad request with the given content - type . < / p >
creates a new result with the status { @literal 401 - unauthorized } .
creates a new result with the status { @literal 401 - unauthorized } .
creates a new result with the status { @literal 401 - unauthorized } .
creates a new result with the status { @literal 401 - unauthorized } .
creates a new result with the status { @literal 401 - unauthorized } .
creates a new result with the status { @literal 401 - unauthorized } .
creates a new result with the status { @literal 401 - unauthorized } .
encode the given json string using { @link <unk> ( string ) } .
validate the response content with the given encoding .
creates a { @link <unk> } object for the given file .
creates a new { @link <unk> } object with the given { @link file } .
creates a new { @link <unk> } object from the given file .
creates a new { @link <unk> } object with the given content .
creates a new { @link <unk> } .
<p > forbidden . < / p >
validate the result .
<p > forbidden . < / p >
creates a new result with the status { @literal 403 - forbidden } .
returns a forbidden result .
<p > forbidden . < / p >
<p > forbidden . < / p >
creates a new result with the status { @literal 404 - not found } .
creates a new result with the status { @literal 404 - not found } .
creates a new result with the status { @literal 404 - not found } .
creates a { @link <unk> } object from a file .
creates a new result with the status { @literal 404 - not found } .
creates a { @link <unk> } object from a file .
creates a new result with the status { @literal 404 - not found } .
creates a new result with the status { @literal 404 - not found } .
creates a new result with the status { @literal 404 - not } .
creates a new result with the status { @literal 404 - not found } .
creates a new result with the status { @literal 404 - not } .
create a { @link <unk> } from a file .
creates a new result with the status { @literal 404 - not } .
creates a new result with the status { @literal 404 - not } .
creates a new instance of { @link contenttype } with the given mime type .
validate the response content with the given encoding .
sets the content - type header for the given { @link file } .
<p > <unk> . < / p >
sets the content - type header for the given file .
<p > <unk> . < / p >
sets the content - type header for the given file .
<p > validate . < / p >
<p > <unk> . < / p >
parse the required file and return the result as a result .
<p > performs a required copy of the given file as { @link xdom } . < / p >
creates a new result from the given file .
parse a required file and return the result as a { @link <unk> } .
creates a new result from the given file .
returns the number of requests that can be served by the specified content .
returns the number of requests that can be served by the specified error code .
creates a new result of a { @link <unk> } .
<unk> <unk> too many requests
returns the number of requests that a file is in .
creates a { @link <unk> } that tries to inline the given content .
write requests to hadoop .
set the content header fields too .
<unk> <unk> <unk> <unk> <unk> <unk>
returns the xdom file header fields .
returns a request header fields too .
returns the { @link <unk> } representing the header fields too .
returns the { @link <unk> } representing the header fields too .
write out the request header fields .
sends a { @link <unk> } to a { @link <unk> } .
sends a { @link <unk> } to a { @link <unk> } .
sends a { @link <unk> } to a { @link <unk> } .
sends a { @link <unk> } to a { @link <unk> } .
sends a { @link <unk> } to a { @link <unk> } .
sends a { @link <unk> } to a { @link <unk> } .
sends a { @link <unk> } to a { @link <unk> } .
<p > <unk> . < / p >
deserialises the given { @link jsonnode } to a { @link <unk> } .
sets the content - type header as a { @link <unk> } .
creates a new { @link <unk> } with the given { @link <unk> } .
sets the content of the content - type header .
creates a new { @link <unk> } with the given parameters .
write the given content to the given file .
<p > <unk> . < / p >
<p > redirect to { @link <unk> ( string ) } . < / p >
<p > <unk> . < / p >
<p > redirect . < / p >
<p > redirect to { @link <unk> } . < / p >
<p > redirect to the specified url . < / p >
<p > <unk> . < / p >
redirect to the given url .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
returns the user with the given id .
gets the language preferred tuple .
create a new call to generate a unique token .
create a call to the specified fragment .
returns the full url for the given request .
creates a post request .
disposes a connection .
returns a new { @link connection } for the given { @link connection } .
/ * ( non - javadoc )
returns a {
returns a {
creates a new {
tag :: <unk> []
converts the given { @link object } to a { @link jsonnode } .
creates a new instance of the given { @link jsonnode } with the given class .
parses the given string as a json object .
parse the given string as a jsonnode .
<p > signs . < / p >
this method will create a { @link <unk> } with the given parameters .
this method is deprecated . please use { @link <unk> ( string ) } instead .
creates a new controller with the given routes .
<p > <unk> . < / p >
gets the { @link <unk> } annotation for the given { @link <unk> } .
returns the relative path of the specified path .
replies the canonical form of the given url .
tag :: hello - form []
translate a list of { @link <unk> } s to a { @link list } of { @link <unk> } s .
translate a set of constraint objects to a list of { @link <unk> } s .
create a { @link constraint } for the given constraint .
this method executes the given { @link <unk> () } on the given { @link <unk> } .
executes the {
obtains an instance of { @code duration } from the specified { @code stage } . <p > the { @code temporalamount } is created using the specified { @code <unk> } and { @code <unk> } and { @code <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
return a {
<p > checks if an array of classes can be assigned to another array of classes . < / p >
validates a cron expression
create a cronschedulebuilder with the given cron expression .
create a variant of <unk> .
------------------------------------------------------ crud methods
/ * ( non - javadoc )
overrides the default overrides
see http : // www . w3 . org / protocols / rfc2616 / rfc2616 - <unk> . html
@deprecated use { @link <unk> ( string ) } instead .
adds the specified key and value to the current flash .
returns an { @link <unk> } object for the given request .
returns a matcher that matches the given instance of the given { @code instance } .
creates a new { @link <unk> } instance with the given { @link class } .
gets the binding for the given class .
returns a binding for the given class .
returns a new { @code <unk> } with the given { @code instance } .
register a binding with the given key .
returns a { @link collection } of { @link collection } s of the specified type .
creates a new { @link caffeine } instance with the given configuration .
#func <unk> > #desc <unk>
/ * [ deutsch ] <p > liefert den <unk> ; <unk> . < / p >
displays the given application application .
create a new { @link <unk> } from a class loader .
create a { @link <unk> } from a class loader .
factory method to create an <unk> from a map of <unk> .
initialise the positions .
<p > <unk> . < / p >
apply the specified {
<p > cleanup . < / p >
creates a new { @link <unk> } with the given { @link <unk> } .
creates a new { @link <unk> } with the given { @link <unk> } .
create a new instance of { @link <unk> } .
create a new instance of { @link <unk> } .
create a new instance of { @link <unk> } .
returns a new { @link <unk> } for the given { @link <unk> } .
return a new instance of { @link <unk> } .
encodes the given cookie into a base64 encoded string .
encodes the given cookies into a base64 encoded string .
encodes the given cookies into a base64 encoded string .
/ * ( non - javadoc )
check to see if the { @link <unk> } is { @link <unk> }
creates a new { @link entitymanager } using the { @link <unk> } .
creates a biopolymer from json .
tag :: hello - json []
tag :: hello - json []
/ * documented <unk>
creates a flow with the given flow .
creates a new { @link <unk> } from the given { @link <unk> } .
/ * package
binds the given request to the given request .
@deprecated please use { @link <unk> ( string object ... ) } instead .
@see <unk> ( string map )
@deprecated use { @link <unk> ( java . lang . object java . util . list ) } instead
@see <unk> ()
validates a constraint violation .
binds the given { @link map } to the given { @link map } .
binds the given { @link java . util . map } to a { @link java . form . www . form . www . form . www . form . form } object .
@see <unk> ()
adapts a list of { @link <unk> } objects to a list of { @link <unk> } objects .
creates a form of the form <code > <unk> / code > with the given <code > value< / code > .
returns a list of all validation errors .
<p > <unk> . < / p >
returns the value of the property with the given name .
create a new instance of { @link field } .
factory method for setting an instance of <code > <unk> / code > .
returns the value of the given field in the given language .
returns the value for the given key .
serialize a list of multipart / form - data
gets the value for the given key .
fills the {
/ * ( non - javadoc )
parses the given string text and returns it as an object of the given class .
gets the value of the given field from the given field .
converts an object to a string .
prints a field .
converts a { @link descriptor } to a { @link cache } .
replies the accent type of the converter .
/ * ( non - javadoc )
register a { @link converter } registered for the given type .
encodes the given cookie into a base64 encoded string .
encode cookies into a list of cookies .
encode cookies into a list of cookies .
encode cookies into a list of cookies .
decodes a set of cookie names into a set of cookie objects .
create a new result from the input stream .
creates a new attachment from the given { @link inputstream } .
add the requested path to the request .
creates a new result with the content of the given file .
creates a new resource with the given path .
returns a {
creates a file from a resource with the given name .
sets the content - type header for the specified file .
sets the content - type header for the http response .
create a new part of a part of the given file length .
create a new { @link payload } from the given { @link string } content and the given { @link inputstream } .
<p > <unk> . < / p >
<p > <unk> . < / p >
converts an array of t to a list .
returns a new { @code arraylist } instance containing the given values .
create a new <unk> for the library .
creates a { @link <unk> } for the given { @link <unk> } .
tells whether or not the given method is accessible .
tells whether or not the given { @link accessibleobject } is accessible .
<p > <unk> . < / p >
/ * package private
compare this method to find the right cost of the given executable .
returns the difference between the source class and the destination class .
gets the total transformation cost .
returns the number of steps defined in the source class .
used to create a { @link <unk> } .
returns the localized message for the given message key . <p >
returns the localized message string for the given key .
creates a database from the given parameters .
creates a new instance of this class with the given parameters .
<p > <unk> . < / p >
returns a string representation of the specified database attribute .
generates a database pipe from the given parameters .
returns a config object from the given values .
factory method for creating a database property source .
returns an { @code <unk> } with the given string value .
returns an immutable map of values .
create a new utf - 8 map instance .
returns an unmodifiable view of the map .
create a new utf - 8 <unk> instance .
sorts the specified range using the specified comparator .
merges the specified range into this one .
/ * private methods
/ * private void <unk> () { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { return
creates a new { @link <unk> } instance .
creates a new { @link <unk> } instance .
creates a new { @link <unk> } .
creates a { @link map } of { @link route } s .
<unk> <unk> <unk>
adds a method to the classpath .
/ * ( non - javadoc )
/ * ( non - javadoc )
cast a primitive type to boolean .
writes an argument at the given index .
load type arguments .
emit a field literal .
create a return type on the exit stack .
<p > <unk> . < / p >
create an object array with an array of arguments .
f743 - <unk>
coerce this expression to a boolean value .
process an array of { @link <unk> } s .
check if the given item is not equal to the given value
coerce this object to a boolean value .
<p > <unk> . < / p >
returns a new { @link map } containing all the { @link <unk> } s .
creates a new { @link <unk> } for the given { @link class superclass } .
set the callbacks .
<p > set the type of the callback types . < / p >
creates a new instance of this class .
/ * public static void <unk> ( map<string object > object [] args ) throws ioexception { super . class . <unk> () ; }
filter constructors .
returns true if the given type is an interface or not .
<p > newinstance . < / p >
<p > <unk> . < / p >
creates a new { @link org . apache . ojb . broker . spi . <unk> } instance .
creates a new { @link org . apache . ojb . broker . spi . <unk> } bean .
returns the superclass of the given class .
get the field .
adds a method to the object .
checks if the given class exists .
/ * ( non - javadoc )
sets the naming policy .
sets the strategy used to decide how to set the compression strategy .
{ @inheritdoc }
returns an array of the methods that match the given method name .
<p > resolve . < / p >
parse a {
removes the given host from the request .
set the { @link <unk> } for this { @link httprequest } .
create a new http request .
create a new { @link httprequest } .
create a new { @link httprequest } .
create a new http request
create a new http request .
create a new http request with the given parameters .
create a new http request
create a new { @link httprequest } .
create a new { @link httprequest } .
creates a new { @link <unk> } instance .
/ * ( non - javadoc )
converts cookies into a set of cookies
adds a query parameter to the request .
文件表单项<br > 一旦有文件加入，表单变为multipart / form - data
transform map .
adds a query string parameter to the query string .
<p > <unk> . < / p >
returns a string representation of this url .
returns a string representation of this url as a string .
sets the http basic authentication header .
sets the original host header .
<unk> > <unk>
configures the http client .
keep alive .
send a redirect to the http response .
/ * ( non - javadoc )
adds and receive a response .
returns the session .
/ * ( non - javadoc )
sets the value of the named header .
adds an error to the list of errors .
removes the specified label from the specified label .
returns the length of the longest chain of entries in the table .
puts a { @link <unk> } to the given { @link <unk> } .
sort action interceptors .
returns a list of filters to be returned by the specified type .
to collection .
collects decorators for actions .
resolves the nested control properties for a bean .
/ * ( non - javadoc )
<p > <unk> . < / p >
returns true if the given bean is an index property .
get the property resolved by the given bean property .
set the index property .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
gets the property type .
{ @inheritdoc }
/ * ( non - javadoc )
release any acquired resources .
add a new object reference .
/ * ( non - javadoc )
get the value associated with a key .
returns the { @link <unk> } for the given { @link <unk> } .
gets the exported application by the given key .
gets the table .
register a table reference .
<p > <unk> . < / p >
get the entity name for the given entity name .
returns the { @link <unk> } for the given { @link table } .
<p > <unk> . < / p >
adds a hint to the list .
{ @inheritdoc }
/ * ( non - javadoc )
injects the attributes of the request .
<p > <unk> . < / p >
inject the uploaded files into the request .
/ * ( non - javadoc )
returns the column name for the given property name .
convert column name to upper case .
returns the name of the column with the given name .
<unk> > <unk>
sets the value of the designated column to the given value .
prepares a { @link <unk> } for the given key .
returns the set of values contained in this collection .
create a wrapper around the given wrapper class .
returns an array containing all of the classes in the given array .
<p > expand . < / p >
<p > <unk> . < / p >
gets the relative path from a base path .
converts the given path separators to a { @code unix } .
returns the index of the extension of the given path .
gets the full path from a filename .
splits the given filename into an array of strings .
returns the absolute path of the windows home directory .
returns the path relative to the base path .
/ * ( non - javadoc )
adds a new { @link <unk> } annotation to this saga .
adds a new { @link <unk> } to this { @link <unk> } .
creates a new { @link <unk> } instance .
creates a unique { @link component } for the given { @link component } .
starts the web app .
configures the default { @link <unk> } with the given { @link <unk> } .
registers the {
exclude all jars from the given exclude regular expression .
include all jars in the classpath .
include the inclusion attributes of the global attributes .
exclude all of the excluded entries
<unk> > <unk>
<unk> > <unk>
scan class path .
/ * ------------------------------------------------------------
reads the specified entry from the classpath .
returns type information for the given descriptor .
scan the given urls .
scan the given paths .
<unk> > <unk>
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the default scope for the given scope .
{ @inheritdoc }
returns the scope for the given scope .
this method parses the message from the { @link <unk> } .
gets the file info .
extract parts from a multipart / form - message
adds a { @link <unk> } to the { @link <unk> } .
helper method for parsing the content of a multipart content .
parses the given { @link part } into a { @link <unk> } .
add an attachment to the { @link <unk> } .
creates an { @link mimemessage } from a byte array .
creates a new { @link <unk> } from the given { @link part } .
encodes a byte array into base64 notation .
encode a byte array .
encodes a byte array into base64 notation .
encodes a string into a string .
generate a csrf token from the session .
create a new { @link <unk> } based on this { @link <unk> } .
checks if the given request is a valid token .
checks if the given token is a csrf session token .
<unk> <p > <unk> / p >
<unk> <p > function : <unk> / p > <p > description : < / p >
this method is called when the { @link <unk> () } method is called .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a scope for the given type .
creates a new instance of the given class .
register a scope with the given type .
creates a bean definition for the given bean name .
lookup the bean definition for the given bean references .
lookup a property definition .
create bean definition for registration .
<p > <unk> . < / p >
registers a bean method for the specified type .
register a { @link <unk> } with a specific type .
register a bean definition bean .
register alternative alternative names .
<p > <unk> . < / p >
creates a new instance of { @link <unk> } .
<p > <unk> . < / p >
registers a constructor with the specified bean name and references .
registers a property injection point .
convert a bean definition to a bean .
/ * ( non - javadoc )
<p > <unk> . < / p >
f743 - <unk>
register a class provider .
<p > registers a { @link <unk> } for a static method . < / p >
post - process the bean definition into the bean definition .
if the bean type is not null then the bean is not null .
merges the given properties into this one .
define a map of properties to a hierarchical map
returns the value of the current environment .
sets the value of the { @link <unk> } .
{ inheritdoc } .
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
prints the actions before the action .
/ * ( non - javadoc )
resolves a java version of the jvm .
visits an int instruction .
validates that the argument is a valid argument index .
gets the method name for a field .
<p > <unk> . < / p >
validates the method argument for the given method .
load the arguments of a method on the given method visitor .
load method arguments .
load the members of the virtual method .
load the set of load instructions .
create the load method for the given method descriptor .
returns true if the given opcode is a known number of instructions .
convert primitive type to boolean .
prepares the return value for the return type of the method .
generates a method signatures to generate a method signature .
generates a ldc instruction .
create an array <p > stack : ... value = &gt ; ...
/ * ( non - javadoc )
check if the named method is a <unk> method .
<unk> > <unk>
gets decorator string .
extract the mime type from the given content type .
extract the character encoding from the given content type .
determine the encoding for the given request .
get the file name from the given message .
returns { @code true } if { @code flags } is { @code null } .
<unk> > <unk>
checks if the request is a multipart request .
returns the credentials for the given header .
get the subscription from the request .
handles the authorization header . <p >
---------------------------------------------------------- getters and setters end
/ * ( non - javadoc )
find all cookies in the request .
reads the post data from the request .
reads the request body from the request .
gets the context path .
gets the context path .
stores the given resource path with the given parameters .
returns the object name for the jawr configuration manager mbean
gets the attribute value .
returns the value of the named parameter from the page context .
get event from request .
sets the value of the given scope to the given value .
removes a { @link <unk> } from { @link <unk> } .
returns true if the given url is an absolute url .
strips out the session id from the given url .
gets the request parameter value .
creates a map from the supplied name / value pairs .
<p > <unk> . < / p >
checks if the given request is a multipart request .
<unk> method .
<p > <unk> . < / p >
render the body of the body .
render a string to a string .
sets the value of the <code > <unk> / code > attribute of the <code > <unk> / code > jsp tag . <p >
<p > <unk> . < / p >
invokes the init method of the given { @code <unk> } .
/ * ( non - javadoc )
creates a new instance of { @link <unk> } .
<unk> <p > <unk> / p >
rewrite the http request .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the keys contained in the given { @link properties } .
read profile property .
returns the { @link <unk> } associated with the specified profile .
read the profile value from the active profiles .
resolves the macros in the given string value .
replies the accent properties for the active profiles .
converts a byte array to a word .
<unk> a password .
generate a hashed password .
sets the header for the request .
/ * ( non - javadoc )
/ * ( non - javadoc )
初始化<br > <unk>
初始化<br > <unk>
resolves the binding annotation for the given annotation .
/ * ( non - javadoc )
returns a list of { @link <unk> } objects for the given { @link <unk> } .
<p > <unk> . < / p >
/ * ( non - javadoc )
初始化<br > <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the http method with the given name .
creates a runtime action .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
cast a object to an integer . if the value is null then the default value is returned .
cast a object to an integer using the default value .
/ * ( non - javadoc )
converts value into long value or returns default value if conversion is not possible .
converts value into long value or returns default value if conversion is not possible .
gets attribute value as <code > float< / code > .
<p > convert an <code > string< / code > to a <code > float< / code > returning a default value if the conversion fails . < / p >
cast a object to a float value
/ * ( non - javadoc )
converts value into double or returns default value if conversion is not possible .
converts value into double or returns default value if conversion is not possible .
<p > <unk> . < / p >
<p > convert an <code > string< / code > to a <code > short< / code > . < / p >
cast a object to a short value
<p > <unk> . < / p >
cast a object to a character object ( reference type )
cast a object to a character value using the default character set .
/ * ( non - javadoc )
<p > converts an object to a byte . < / p >
cast a object to a byte .
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
register a { @link biginteger } as a { @link biginteger } .
<unk> > 如果给定的值为空，或者转换失败，返回默认值<br > 转换失败不会报错
gets attribute value .
<unk> > 如果给定的值为空，或者转换失败，返回默认值<br > 转换失败不会报错
/ * ( non - javadoc )
main method .
adds a { @link rule } to the { @link <unk> } .
<p > <unk> . < / p >
populates target object with fields annotated with { @link <unk> } .
visit an annotation .
----- private methods -----
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get all superclasses of the given class .
/ * ( non - javadoc )
resolves the real name for a given type .
returns a list of <unk> for the specified annotations .
checks to see if the file extension is valid .
/ * ( non - javadoc )
read bootstrap methods
get the major version from the constant pool .
puts the constant pool constant .
put bootstrap methods .
sets the entry count for the entry .
adds an entry to the table .
add field to field .
add a method entry to the method .
add a type reference .
adds a constant reference to the given index .
add a type to the symbol table .
add an integer to the list
add a type to the symbol table .
add a long value to the list
add a type to the symbol table .
add a name and type .
add a type to the symbol table .
add a long value to the list .
add a type to the constant pool entry .
add a type handle constant .
add a dynamic method .
add a dynamic constant .
add a type to the constant pool .
add a reference to a constant .
add a type to the symbol table .
add a constant value to the dictionary
add a bootstrap method constant .
resolve a bootstrap method .
add a type to the type
adds a new type to the list .
convert the given { @link object } to a { @link float } .
encodes a string into a well - formed string .
returns true if the given string encoding is equal to the given string .
removes all of the elements from this list .
<unk> > <unk>
associates the specified value with the specified name .
returns the value associated with the given key .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is returned .
returns an iterator over the entries in this map .
returns a { @link list } of all the elements in this list in the specified order .
increases the capacity of this <tt > <unk> / tt > instance if necessary .
/ * ( non - javadoc )
append a char to the buffer
/ * ( non - javadoc )
visitor methods :
/ * [ deutsch ] <p > implementierungsmethode des interface { @link externalizable } . < / p >
get the start of the first chain .
create the method that will be used for the first call to {
/ * ( non - javadoc )
/ * ( non - javadoc )
append a field to the end of the request .
/ * ( non - javadoc )
/ * public static <unk> <unk> () { return <unk> ; }
/ * ( non - javadoc )
retrieves the designated parameter to the given <code > <unk> / code > .
retrieves the boolean value designated by this sqlxml instance .
retrieves the designated parameter to the given <code > <unk> / code > .
retrieves the value of the attribute at the given index .
retrieves an attribute from the pool .
retrieves the designated parameter type declaration .
{ @inheritdoc }
/ * ( non - javadoc )
returns a map of parameters for the given parameters .
returns an array of all the fields defined in this descriptor .
{ inheritdoc } .
sets the blob at the given index .
test the scalability of a bean definition for registration .
converts the transaction mode to the transaction mode .
{ @inheritdoc }
{ @inheritdoc }
clone property .
<p > <unk> . < / p >
gets the type of a property .
returns the length of an object in the given object .
composes the <code > runtimeenvironmentbuilder< / code > as a <code > <unk> / code > .
decrypt service document .
appends a buffer to the buffer
rehashes the contents of this map into a backing map .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
/ * ( non - javadoc )
removes all of the mappings from this map .
append a buffer to the buffer
returns an array containing all of the elements in this buffer in the same order as { @code char } starting at the specified { @code beginindex } .
/ * ------------------------------------------------------------
append to the buffer .
add a buffer to the composite buffer .
write an object to a writer .
write the contents of the given { @link inputstream } to the given { @link outputstream } .
write progress listener
<unk> > <unk>
returns the value associated with the given key as a string .
returns the value of the <code > name< / code > property as an <code > int< / code > . if <code > name< / code > is <code > integer . int< / code > then <code > null< / code > is returned .
gets the long value .
retrieves the value of the <code > name< / code > property as a <code > double< / code > . if this number does not contain <code > null< / code > then <code > null< / code > is returned .
returns the value of the <code > name< / code > property as a <code > double< / code > . if the key is not found <code > null< / code > is returned .
returns the value associated with the given key as a { @code jsonobject } .
returns the value as an array .
decodes a base64 encoded string .
retrieves the value associated with the given body .
returns the value of the property with the specified key in this property list . if the property is not found in this property list the default property list and its defaults recursively are then checked . the method returns <code > null< / code > if the property is not found .
returns the integer value associated with the given key as an integer .
gets the prefixed key and parse it to a long .
gets the prefixed key and parse it to a double .
gets the prefixed key and parse it to a float .
returns the value associated with the given key as a boolean .
returns the integer value associated with the given key or <code > null< / code > if not found .
gets the prefixed key and parse it to an array .
gets the prefixed key and parse it to an array of strings .
returns the value associated with the given key as a { @code t } . if the key does not exist it will return the given default value .
associates the specified { @code key } with the specified { @code key } .
associates the specified { @code key } with the specified { @code key } .
adds a header to the request .
gets the value for the given key .
encodes the given byte array and returns the response as a string .
/ * ( non - javadoc )
creates a folder .
creates a folder from the remote bundle .
convenience method to receive an array of { @link <unk> } s from the given filter .
convenience method for receiving an email and marks it as an array of { @link <unk> } s .
convenience method to receive messages and delete .
receive notification .
/ * ( non - javadoc )
close the inbox
gets the parameter with the given name .
gets the batch size .
/ * package
returns the alias for the given target string .
gets the target class name .
validate violations .
add a new violation to the list of violations .
<p > checks if the specified tag name is a valid tag . < / p >
/ * ( non - javadoc )
gets the mime type of a file .
set the target class .
f743 - <unk>
{ @inheritdoc }
returns the class name for the class name .
scan the class .
deserializes the query .
define the class .
<p > <unk> . < / p >
dump rserve .
creates a new instance of this class with the given name and personal name .
converts an address to an address .
converts a { @link string } of type { @link string } to a { @link string } .
sets the reply to address .
<p > reply . < / p >
sets the reply to address .
add a cc recipient address to the specified address .
add an email address .
set the value of a transaction
<p > <unk> . < / p >
returns the mime type for the given filename .
send email .
sends a mime message .
设置一个header<br > <unk>
sets the response headers .
sets the request headers to the given request .
<p > <unk> . < / p >
/ * ( non - javadoc )
add an attachment to the database .
creates a new { @link <unk> } object from the given { @link <unk> } .
sets the embedded attachment .
parse an array of { @link emailaddress } s .
get the value of the <code > name< / code > property as a <code > string< / code > . if <code > key< / code > is <code > null< / code > then <code > null< / code > is returned .
returns the system property value or <code > true< / code > if the key is not found .
returns the int value associated with the given key or the default value if no such property exists .
returns the long value associated with the given name or <code > null< / code > if the key does not exist .
parse the given xml content into a dom object .
get the footer from the given string .
appends the given element to the end of the buffer .
/ * ( non - javadoc )
append a buffer to the buffer
returns true if the given type is a valid bytecode type .
/ * ( non - javadoc )
serialize a json object into a json object .
returns the alias for the given alias .
resolve alias .
resolve the path against the given path .
/ * ( non - javadoc )
returns the index of the default { @link java . net . port } of the given { @link string } .
returns the index of the last index in the given { @code string } .
returns the root index of the given { @code string } .
returns true if the last character of the given string is a reserved word .
<p > <unk> . < / p >
/ * ( non - javadoc )
decode a token
gets the table name .
returns the name of the given { @link <unk> } for the given { @code type } .
returns true if the given element is annotated with { @link <unk> } .
resolve column descriptors .
resolves the { @link map } of { @link class analysis } annotations on the given { @link class } .
returns the string representation of the specified quote character if it is present .
computes the medoid of <code > <unk> / code >
set the value stored in <code > this< / code > to be stored in <code > <unk> / code > .
<editor - fold defaultstate = collapsed desc = edit >
<p > <unk> . < / p >
weighted edit distance .
******************** private methods ***********************************
initialize the cipher with the given url .
/ * ( non - javadoc )
convert a byte array to a 64 - bit long .
convert a hex digit into a byte value .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts an email address into a {
parse the given { @link string } representation .
parses the given { @link string } to { @link emailaddress } .
builds the document patterns .
construct a <unk> from a string
find the first occurrence of a pattern .
<p > unwraps any character in the given string . < / p >
/ * ( non - javadoc )
returns the name of this path .
compresses the given file into a zip file .
compress a file .
extract data from a file .
<p > zip . < / p >
checks if a zip file is a zip file .
explode source zip file to a target directory
adds the given file to the zip output stream .
adds the given file to the zip output stream .
get the fielddescriptor for the specified field .
/ * ( non - javadoc )
returns the propertydescriptor for the specified property name .
/ * ( non - javadoc )
creates a new { @link <unk> } for the given constructor arguments .
sets the request bundle name for the request .
sets the locale to use for the session .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a ------------------------------------------------------------------------
compute the size of the method .
puts annotations on the given byte vector .
compute the size of the parameter ==========================================================================
puts the given { @link <unk> } s to the given { @link <unk> } .
add a collection of profiles to the binding profiles .
little - endian or intel format .
hashes a byte array using murmurhash3 .
sets the designated parameter to the given <code > inputstream< / code > .
/ * ( non - javadoc )
{ @inheritdoc }
reads the module from the class .
{ @inheritdoc }
reads the bytecode of a module .
read the code .
read label .
creates a label for the given offset and label
creates a debug label for the given offset .
parses the type annotations .
returns the bytecode instruction annotation for the given type .
read type annotation .
reads parameter annotations .
reads the annotation values for the given annotation .
reads an annotation value .
visit the implicit first frame
read stack frames .
read verification type info .
returns the offset of the first attribute in the bit list .
{ @inheritdoc }
read attribute .
read an int from the given byte array starting at the given offset .
reads a long as a long value ( i . e . deserialize it ) .
returns the string constant pool for the given index .
read a utf - 8 encoded string from the constant pool .
reads a utf - 8 encoded string from a utf - 8 encoded string .
read a dynamic constant pool entry .
reads the constant pool of the constant pool from the constant pool .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
{ inheritdoc } .
{ @inheritdoc }
get the constructor constructors .
returns the matching constructor .
get a { @link map } of { @link <unk> } for the specified request .
/ * ( non - javadoc )
gets the current request .
convert the given { @link object } to a { @link string } .
convert the given array to an array of primitive types .
convert a primitive array to an array of primitive types .
{ @inheritdoc }
/ * ( non - javadoc )
search for entries in the search path .
gets the canonical path of a file .
creates a search directory for the given search path .
check if the given uri matches the pattern .
check if the given uri matches the pattern .
{ @inheritdoc }
/ * ( non - javadoc )
add a path to the list of files .
resets the path to the original file .
returns the next file in the directory .
finds all the files in the given directory .
returns the list of files in the given path list .
/ * ( non - javadoc )
{ inheritdoc } .
sets the designated parameter to a <code > java . sql . reader< / code > value .
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
creates a type signature for the given class name .
get the method descriptor for the given return type .
gets the argument types for the given method descriptor .
returns the return type for the given method descriptor .
returns the class name for the given descriptor .
gets the class name .
returns the descriptor corresponding to the given constructor .
returns the descriptor corresponding to the given type .
<p > <unk> . < / p >
/ * ( non - javadoc )
returns the instruction count for this type .
returns the argument types for the given method descriptor .
get the instruction of a java type .
sets the status of the transaction marked as rollback only .
/ * ( non - javadoc )
commits all the resources in the <code > <unk> / code > .
rollback all resources .
/ * ( non - javadoc )
/ * ( non - javadoc )
push a comma separated list of comma .
pop a list from the top of the stack .
gets the last package name .
write a string to a json string .
/ * <unk>
<p > <unk> . < / p >
sets the { @link <unk> } parameter .
trim all characters in a string .
adds a tag to this tag .
<p > start a new region . < / p >
checks if the specified tag is inside the other tag region .
return true if the given uri is a valid uri .
adds a pseudo function to the given state .
returns a pseudo function for a pseudo function .
{ @inheritdoc }
todo : implement <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
generates the default constructor for the class .
generates the default constructor for the class .
get method param names .
apply the given { @link <unk> } to the given { @link <unk> } .
match { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk>
returns the index of the first occurrence of the specified element in the array .
returns the index of the lowest element in the array .
returns the index of the last slot found in the array .
escapes a sequence of html entities .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a byte array representing the given class file with the asm specific instructions .
returns a byte array representation of this field .
visits a method instruction .
programmatic call .
programmatic call .
create a new field instruction .
visits a method instruction .
returns the common super class for the common super types .
register default converters .
register a { @link <unk> } for the given job type .
looks up a descriptor for the given class .
<unk> > <unk>
gets the http proxy .
sets the proxy server .
creates a proxy for the proxy server .
get the total number of threads .
get the total number of threads in the transaction group .
<p > <unk> . < / p >
erzeugt eine <unk> <unk> .
gets the median of the <unk> .
erzeugt eine einzelne <unk> .
factory method to create a new { @link <unk> } .
start a transaction .
f743 - <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link <unk> } .
/ * ( non - javadoc )
abort a transaction .
creates a new { @link <unk> } for the specified { @link <unk> } .
abort a transaction .
gets the resource manager for the given filename . <p >
<p > <unk> . < / p >
close the resource manager .
creates a new instance of the { @link <unk> } using the given { @link <unk> } .
<p > append to the <code > <unk> / code > method . < / p >
/ * ( non - javadoc )
encodes the given bytes into a base64 encoded string .
<p > <unk> . < / p >
formats the bytes in bytes to human readable format .
<p > <unk> . < / p >
escape the given { @code string } as a string .
converts a string to camelcase .
<p > <unk> . < / p >
converts tabs to spaces .
escape the given string as a json string .
<p > <unk> . < / p >
returns a {
traverses a bean definition .
returns the component of the given type .
gets the bean .
gets the bean from the bean .
<p > <unk> . < / p >
register bean init .
<p > <unk> . < / p >
liberty change for cxf begin
initialize bean .
li3294 - 25
adds a bean to the bean .
gets the bean property .
<p > <unk> . < / p >
clears all static resources .
creates a {
/ * ( non - javadoc )
{ @inheritdoc }
returns the logging level for the given level .
{ @inheritdoc }
{ @inheritdoc }
resolves the given method or throws an { @link exception } if the method fails .
/ * ( non - javadoc )
add a profiles to the validation profiles .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a list of {
{ @inheritdoc }
remove the last child node from the current node .
find the matching parent node .
fixes the leaf tags up to the parent of this tag .
adds the given element to the end of the list .
{ @inheritdoc }
send a picture to the socket .
/ * ( non - javadoc )
returns an { @link <unk> } for the given method .
generate argument for the given method .
swap the method at the given index
generate a delegate method .
generate a delegate method .
clones the given method .
<unk> target .
generate a method object for the given method signature .
checkstyle : off
<p > <unk> . < / p >
returns a string representation of the query string .
/ * <unk>
<p > <unk> . < / p >
transfers the specified number of bytes from the given { @code from } { @code from } { @code to } to { @code <unk> } .
iterate over all elements in the body set .
method called to iterate over the attributes of the list
<unk> ( <unk> )
replaces all occurrences of a substring of the given string with the specified substring .
<p > removes all occurrences of the specified character from this string . < / p >
<p > checks if the given string contains all characters in a string . < / p >
replaces all occurrences of a substring of the given string with the specified substring .
<p > replaces the first substring of the source string with the given character . < / p >
replaces all occurrences of a substring of the given string with the specified substring .
<p > replaces each substring of the string with the given character . < / p >
replaces all occurrences of a substring of the given string with the specified sub - string .
returns the index of the first character in the given string .
checks if the string is empty or not .
checks if the string is empty or not .
returns true if the given string contains only whitespaces .
{ @link <unk> ( charsequence ) }
<p > <unk> . < / p >
<p > swaps the first character of the given string changing the first character in the given string . < / p >
<p > <unk> . < / p >
returns the sub - path of a path .
returns <code > true< / code > if the given <code > str< / code > matches the given <code > <unk> / code > .
splits a string into an array of strings .
<p > split . < / p >
this method is used to normalize a string .
returns the index of the first occurrence of the specified character starting at the specified index .
returns the index of the first occurrence of the specified { @code <unk> } ignoring case .
get the last index of csearch within stext ignoring case .
<p > case in - sensitive find of the last index within a string . < / p >
get the last index of csearch within stext ignoring case .
returns the index of the last occurrence of the specified character starting at the specified index . the substring begins at position <code > start< / code > .
returns the index of the last occurrence of the specified character starting at the specified index .
returns true if the given substring starts with the given index .
returns true if the passed character sequence ends with the specified character .
count the number of columns in the string .
returns the index within the last index of the given string ignoring case
delete the needle in haystack ignoring case .
replace all occurrences of a substring of the given string with the given string .
replace all occurrences of a substring of the given string with the given string .
returns the index of the first occurrence of the specified source string in the given target array . if the source string is null this method returns - 1 .
search for case where the target string is case insensitive .
returns the index of the first occurrence of the specified substring starting with the specified one .
search for case ignore case ignore case
<p > <unk> . < / p >
<p > <unk> . < / p >
returns the index of the first character in the given string .
removes the end of a string with a specified character .
remove the trailing char from the given string .
<p > remove the starting character from the specified string . < / p >
<p > strips any characters from the beginning of the string . < / p >
remove the trailing char from the given string .
trims an array of strings from a string array .
trims an array of strings from the given array of strings .
checks if the string is null or empty .
creates a rational number of strings .
trims leading and trailing whitespace from the given string .
remove all whitespace characters from the beginning of the string .
this method returns an array of { @link string } s of { @link <unk> } s .
create an instance of { @link <unk> } .
<p > <unk> . < / p >
<p > joins the elements of { @code array } into a single string . < / p >
<unk> > <unk>
<p > checks if the given { @code string } is { @code null } . < / p >
surround the given string with the given prefix .
returns true if the given string starts with the given prefix .
removes the suffix from the suffix string .
returns the substring of the given string .
returns the substring of the given string .
gets the suffix from a string .
removes the suffix from the suffix string .
<p > unwraps all of the given prefix characters . < / p >
<p > unwraps a string between two strings . < / p >
get <code > true< / code > if the given <code > <unk> / code > is <code > null< / code > or less than or equal to <code > <unk> / code > .
<p > insert . < / p >
returns a string containing the left - padded representation of the given text .
convert a string to a string .
returns the longest prefix of two strings .
implements { @link <unk> ( string ) }
replaces all occurrences of a substring of the given string with the specified suffix .
strips all illegal characters from a string .
removes any leading and trailing quotes from the given string .
converts a byte array to a hexadecimal string .
if the input string is not null return true .
convert a string to a byte array .
unescapes the quotes in a string .
/ * ( non - javadoc )
appends a buffer to the buffer
makes the given visitor visit this annotation .
visit an annotation .
visit an annotation .
lookup the type of the given type .
register a kryo instance with the specified type .
updates the metadata for the given type .
<p > <unk> . < / p >
from interface <unk>
/ * ( non - javadoc )
creates a new dto instance .
sets the target interface .
/ * ( non - javadoc )
inject target into wrapper object .
returns an array of { @link <unk> } objects that are annotated with { @link <unk> } .
/ * ( non - javadoc )
determine the type of the database .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
convenience method for encoding the text .
/ * ( non - javadoc )
<unk> > <unk>
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a string representation of the argument string .
helper method to create an { @link list } of { @link string } s .
returns the type of the return type .
implement { @link <unk> ( string ) }
registers default converters .
registers a converter for the given type .
returns a converter for the given type .
<unk> > <unk>
<p > <unk> . < / p >
returns a list of neighbors for the given query .
helper method to visit a list of { @link list } of { @link node } s .
find all nodes in the supplied list of nodes .
returns the first node matching the given id .
/ * ( non - javadoc )
perform a depth - first search on the given node .
traverses the tree .
walk through a list of { @link node } s .
walks the current context and creates a new one .
add descendant elements to result .
helper method to filter out a list of nodes .
convert a string to a quoted string array .
refills the input buffer .
resumes scanning until the next regular expression is matched the end of input is encountered or an i / o - error occurs .
<unk> > <unk>
/ * ( non - javadoc )
count the number of rows in the given sql statement .
returns a list of { @link <unk> } s from { @link <unk> } .
remove the last order by sql property .
decode the given html .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
populate columns and properties .
/ * ( non - javadoc )
returns the column descriptor for the given property name .
gets the property name .
gets the column name .
gets the value of the specified property in the given object .
sets the value of the specified property in the given object .
create a new { @link <unk> } for the given { @link <unk> } .
hyphenate string .
sets the index to the given index .
returns the character at the given position in this buffer .
/ * ------------------------------------------------------------
returns the number of colors in the table .
<p > <unk> . < / p >
/ * ( non - javadoc )
create a scoped proxy bean for a bean .
partition step .
performs the body of the body of the body .
deletes the file .
checks if the given file is a process file .
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
add an { @link enumeration } to the given { @link enumeration } .
/ * ( non - javadoc )
convert the given { @link object } to a { @link string } .
compute the size of the field .
puts the field information into the given bytevector .
parses a string .
convert a buffer to a byte buffer .
creates a new { @link <unk> } instance .
create a new { @code target } object with the given parameters .
create a new { @code target } object with the given parameters .
writes the value of the given component to the target object .
/ * ( non - javadoc )
parse the specified <unk> content .
rewrite the given xmlfile
writes a { @link <unk> } to the given { @link writer } .
writes the given { @link <unk> } to the given { @link writer } .
<p > <unk> . < / p >
start the server .
convert the given value to an array of { @link java . util . arraylist } .
runs the command .
map for map .
handles the case of the path .
/ * ( non - javadoc )
{ @inheritdoc }
{ inheritdoc } .
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
<p > <unk> . < / p >
append column name .
adds a rule to the list of rules .
returns { @code true } if { @code path } is { @code false } .
adds the given value to the list of identities to exclude from the given { @link <unk> } .
{ @link <unk> }
a helper method to parse a chain of { @link rule } s into a { @link predicate } .
{ @inheritdoc }
returns the name of the component .
/ * ( non - javadoc )
appends all of the elements in the specified collection to the end of this list in the order that they are returned by the specified collection s iterator .
/ * [ deutsch ] <p > ermittelt das <unk> ; < / pre >
translate a severity level to a tinylog 2 severity level .
returns the value of the given node as a string .
binds the given { @link class } to the { @link <unk> } .
binds the given { @link <unk> } to the given { @link <unk> } .
/ * ( non - javadoc )
invoke { @link <unk> ( class ) } with the given { @code <unk> } .
executes an asynchronous options request on the configured uri ( asynchronous alias to options ) with additional configuration provided by the configuration function . the result will be cast to the specified type .
/ * ( non - javadoc )
set system mail properties
invokes the validation listeners with the given value .
returns true if the element is of the correct type .
returns true if the given node is a table element or not .
returns true if the node with the given parent node is one of the <unk> elements .
parses the given node and returns the { @link astnode } based on the given node .
returns whether the given node is a child of this node .
insert a itemized list into this element .
returns the total number of entries that have been removed from the cache .
registers the session scope .
gets the session map .
gets the current request .
/ * ( non - javadoc )
adds a javascript method parameter .
adds the bean init method .
{ @inheritdoc }
sets the designated column to the given <code > java . sql . statement . <unk> / code > value .
processes the given bundle and returns the parent .
ends the bundle
answers a new array with the concatenation of the given bundle id .
write the xcal document to a writer .
write the properties to the writer .
parse a string .
----- protected methods -----
extracts a list of profiles from the given key and pair .
return a comma separated list of resource profiles .
compares this level to the specified level .
convert a string descriptor to a type name .
checks if the given string is a valid method name .
checks the signature of a type descriptor .
returns the type descriptor for the given class .
generates an instruction instruction .
<unk> long .
converts the value of the given visitor visitor to a float instruction .
print double value instruction .
<unk> byte value .
<unk> the value of the given method visitor .
<unk> - <unk>
makes a primitive type instruction operand .
adds all items in the given collection to the list .
{ @inheritdoc }
convert a collection to a collection type .
<unk> > <unk>
<unk> > <unk>
convert a collection to a collection .
----- private methods -----
/ * ( non - javadoc )
adds a line number to the end of the line .
returns the size of the bytecode of this method .
puts a {
adds a reference to the stack .
resolves a given byte to a given position .
inline a subroutine given a subroutine .
accept a subroutine starting from a given subroutine .
/ * ( non - javadoc )
this method is adapted from <unk> . <unk> ()
check if the character is a quote character .
this method is used to get a chunk of a string that can be passed to { @link <unk> ( string int ) } .
puts an utf8 string into the byte array .
puts an utf8 string into the byte array .
puts an utf8 string into the byte array .
puts an utf8 string into the byte array .
puts an utf8 string into the byte array .
puts an utf8 string into the byte array .
puts an utf8 string into the byte array .
puts an utf8 string into the byte array .
convert a byte array to a byte array .
/ * ( non - javadoc )
implementation of { @link <unk> ( <unk> ) } .
handles an authentication token .
attempts to authenticate the given request .
{ inheritdoc } .
{ @inheritdoc }
calculates the index of the field list .
finds a list of paths for a given bundle .
returns the default message for the given locale and key .
returns the localized resource string for the given key .
<p > <unk> . < / p >
returns a { @link resourcebundle } for the specified locale .
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > newinstance . < / p >
generate the id .
on database .
/ * ( non - javadoc )
from interface <unk>
from interface <unk>
/ * ( non - javadoc )
{ @link <unk> ( string string object ) }
<unk> . <unk>
warning : the default implementation uses { @link <unk> ( java . lang . object java . util . list ) } instead .
{ @inheritdoc }
deletes all registered meta data by id .
demonstrates how to delete an entity by id .
{ @inheritdoc }
collects the values of the given property .
/ * decrease the value of a property .
returns a copy of the given source object .
returns a list of edges .
add a soft close parent tag to the given node .
add a soft close parent tag to the given parent node .
creates a { @link <unk> } for the given node name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the stack trace of the current stack trace to the debug of the current stack trace .
get a list of stack trace elements from the given stack trace .
366845 . 11 . 1
get the root cause of a throwable .
convert an exception to a string .
convert an exception to a string .
constructs a message with the given message and stack trace .
returns the root cause of the given throwable .
find the cause of the given exception that is closest to the given exception type .
converts a collection of { @link sqlexception } s into a { @link <unk> } .
unwraps the given throwable .
wrap a throwable as a runtimeexception .
unwraps the wrapped { @link throwable } instance of the wrapped { @link throwable } returning a { @link throwable } wrapping it in a { @link throwable } or a { @link throwable } .
returns a new {
registers the given { @link <unk> } .
returns true if the given class is an interface .
/ * ( non - javadoc )
<p > <unk> . < / p >
returns the default class loader for the current thread .
returns the class loader for the specified class .
{ @inheritdoc }
gets the prefix for the classpath item .
gets the default classpath for the given class .
creates a reader for the given resource .
get the resource with the given name .
get an input stream from a resource .
load properties from the classpath .
loads a resource from the classpath using the given classloader .
loads a class from the given classloader .
load a class from a class name .
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
construct a list of multipart upload files .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
invoke the setter on the given bean property .
inserts the specified element at the specified index .
<p > <unk> . < / p >
returns the index of the first occurrence of the given dot .
extracts the index of the given bean .
create a bean property .
<p > <unk> . < / p >
convert the given object to a map .
extract the type of the given bean .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
converts a { @code localdate } to a { @code date } .
converts a { @link localdatetime } to a { @link datetime } .
converts the given time into a string .
checks if the given time string is a valid http timestamp .
creates a new { @link <unk> } .
add an embedded resource .
creates a validation context for the given target class .
adds a list of { @link propertydescriptor } to the specified target object .
collects all of the { @link <unk> } annotations and adds them to the { @link <unk> } .
populates the {
creates a new instance of the given class .
validates the given annotation .
creates a new completablefuture that is after a given amount of time .
returns the value of the designated column in the current row of this <code > resultset< / code > object .
{ @inheritdoc }
convert a byte array to a byte array .
url - encode the given text .
encodes the given string into a base64 encoded string .
encodes the given uri scheme with the given encoding .
encodes the given uri host with the given encoding .
encodes the given uri with the given encoding .
encodes the given uri path with the given encoding .
encodes the given uri query using the given encoding .
encodes the given query parameter with the given encoding .
encodes the given uri fragment with the given encoding .
encodes a uri uri using { @link <unk> ( string ) } . <p > <strong > note : < / strong > the uri is encoded as escaped using { @link <unk> ( string ) } . <p > <strong > note : < / strong > this method is deprecated .
encodes the given http url and url - encoded string using { @link <unk> ( string string ) } .
encodes the given uri path with the given encoding .
inspects the given class and returns a map with the names of all declared properties .
add property .
create a new { @link propertydescriptor } .
create a new { @link propertydescriptor } .
get the property descriptor for the given key .
{ @inheritdoc }
returns a list of cookies for a given cookie .
/ * public <unk> <unk> () { return <unk> . <unk> () ;
/ * ( non - javadoc )
loads the parameters from the given { @link inputstream } .
/ * ( non - javadoc )
checks whether scope annotation is present in scope or not .
/ * ( non - javadoc )
prints the routes map .
converts a byte array to an array of bytes .
create a new instance of { @link <unk> } .
creates a bean from a map .
process a list of objects .
sets the value of the property to the given value .
creates a deep copy of a pdef map .
/ * ( non - javadoc )
convert the given { @link object } to a { @link string } .
/ * ( non - javadoc )
sets a header .
sends a request to the server .
/ * ------------------------------------------------------------
adds the httprequest to the request .
sets the cookies .
add cookies to the cookies
sends a { @link message } to a { @link <unk> } .
creates a new { @link mimemessage } from the given { @link <unk> } .
fills the { @link email } with the given { @link <unk> } .
populate the given { @link <unk> } with the given message .
<unk> > <unk>
sets the { @link <unk> recipients } to the given message .
sets the email address .
adds a mime message to the email .
creates a new instance of { @link <unk> } with the contents of the given { @link multipart } instance .
set the content of the email .
add attachment body to attachment
creates a list of { @link <unk> } objects from the given { @link <unk> } .
adds the attachments to the multipart upload .
compares this level to the specified level .
extract data field value from data header .
<unk> > <unk>
<p > <unk> . < / p >
initializes the session with the given id .
method <unk> .
this method is used to close the resultset .
retrieves all the attribute sets .
attempts to close the resultset .
closes the database .
this method closes the { @link <unk> } .
executes the given fetch size adjusting the number of rows to be fetched .
sets the maximum number of rows .
execute <unk> .
executes <unk> .
this method is used to <unk> <unk> .
read the result set .
to object .
this method -------------------------------------------------------------
retrieves the auto - generated keys from the database .
/ * ( non - javadoc )
get the query string
creates an email address .
converts an { @link internetaddress } to an { @link internetaddress }
converts an array of { @link emailaddress } to an array of { @link emailaddress } objects .
converts an array of { @link internetaddress } to an array of { @link internetaddress } objects .
<p > creates a proxy object for the specified aspect . < / p >
creates a proxy object for the given aspect
processes the given template and returns the resulting string .
/ * [ deutsch ] <p > erzeugt eine { @code java . util . linkedhashset ; } < / p >
<p > creates an <code > iterator< / code > over the elements contained in this <code > iterator< / code > . < / p >
iterates over the elements of an iterator and returns a list containing the elements of the given iterator .
create a stream from an iterator .
create a stream from an iterator .
returns a sequential ordered { @code stream } from the given { @code iterator } .
gets the database session .
/ * ( non - javadoc )
reads the content of the file into a string .
adds a folder to the zip archive .
sets the { @link <unk> } to be used by this { @link <unk> } .
disable the wire mode .
/ * ( non - javadoc )
returns the caller s class name .
gets the short class name .
adds a serializer to this serializer .
returns a serializer for the given type .
finds whether the given file should be excluded .
returns the tags for the given type .
remove all map types from the given types .
builds a { @link jsonobject } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a deep copy of the given object .
/ * ( non - javadoc )
deserialize session attributes .
serialize an object to a byte array .
deserializes a byte array to a java object .
warning : this method is called by the test program
resolve the parent entity descriptors for the given types .
<unk> > <unk>
returns the parameter types of the given types .
get the column names for the given types .
{ @inheritdoc }
{ @inheritdoc }
gets the entity .
returns an array of { @link provider } s for the given name .
convert entity name to table name .
converts table name to camel case .
applies the given table name to the table name .
initialize the connection pool .
/ * ( non - javadoc )
this method will return true if the connection exists in the database .
region autocloseable implementation
/ * ( non - javadoc )
locate the target view for the given path .
determines if the targeted action exists .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the content of the buffer as a string .
/ * ( non - javadoc )
copies the content of the given input stream to the output stream .
/ * ( non - javadoc )
<p > sets the value of the <code > <unk> / code > property . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
login to the api .
<p > <unk> . < / p >
checks if the request is valid for the given request .
checks if the given request is valid for the given request .
/ * ( non - javadoc )
convert an array to a set .
<unk> > <unk>
returns the {
convert the given url to a file .
converts the given url string to a { @link file } .
creates a temporary directory .
<unk> > 此方法不对file对象类型做判断，如果file不存在，无法判断其类型
changes the last modified time of the file .
copies the given source file to the destination file .
internal copy file .
copies the given source file to the destination directory .
copies the given source directory to the destination directory .
moves the given file from one location to another .
copies the given source file to the destination directory .
moves the given file to the destination directory . if the destination directory does not exist it will be created .
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
write data to a character buffer .
writes chars to a file .
reads the contents of a file into a string .
reads the contents of a file into a string .
reads the contents of a file into a string .
<p > write . < / p >
<p > write . < / p >
writes a string to a file .
copy the close stream to the output stream .
reads the contents of a file .
reads all bytes from a file into a byte array .
writes the given byte array to the given byte array starting at the given offset .
writes the given byte array to the given file .
<unk> > <unk>
returns true if the two strings are ordered .
checks if two files are equal to one of the two supplied files .
returns <code > true< / code > if file is newer than reference .
returns <code > true< / code > if the given reference file is newer than the given reference .
<unk> > <unk>
<unk> > <unk>
compresses the given file .
determines whether the given file is an ancestor of another file .
<unk> > <unk>
returns true if the file is an ancestor of another file .
creates a temporary directory .
creates a temporary directory .
<unk> > <unk> [ <unk> ] <unk>
returns true if the file is a binary header .
returns an input stream for the specified file .
loads the encoding of the input stream .
checks that the given file exists and throws an { @link illegalargumentexception } if it is .
creates a temporary directory .
copies the given source directory to the destination directory .
copies the given source file to the destination file . if the destination file is not a directory this method will throw an ioexception .
/ * ( non - javadoc )
/ * ( non - javadoc )
builds a method descriptor for the given controller class and method name .
初始化<br > <unk>
初始化<br > <unk>
{ @inheritdoc }
<p > <unk> . < / p >
adds a cache configuration to the list of aliases .
returns the double value of the next step .
create a new { @link <unk> } from the given { @link char } array .
appends a buffer to the buffer
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
reads the utf - 8 marker from the given content .
wrap the given callable in a file .
creates a { @link <unk> response } from the given { @link callable } .
returns the index of the first occurrence of the specified <tt > <unk> / tt > .
returns the index of the first occurrence of the specified <tt > value< / tt > .
returns true if at least one of the given objects is empty .
tokenize the upper - case upper case and upper case .
returns a copy of the given character sequence <code > from< / code > and <code > to< / code > .
/ * ------------------------------------------------------------
cancels a transaction in the transaction . if the transaction is already aborted this method returns <code > null< / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
scans the class for <unk>
package - private for testing
add a bcc recipient address to the email address .
add a bcc recipient address .
add a bcc recipient address .
/ * ( non - javadoc )
register default converters .
registers a serializer for the given type .
returns the { @link <unk> } for the given { @link class type } .
puts uploads of uploads .
returns a request object or null if the object cannot be serialized .
<unk> > <unk>
returns the value of the given parameter as an array of {
gets the uploaded file with the given name .
returns an array with all the files in the uploaded file .
/ * ------------------------------------------------------------
{ @inheritdoc }
splits the given string into a list of tokens .
<p > count . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the name of the first column in the column name .
extract the media type from the given content type .
extracts the header value from the given header .
sets the value of the designated preparedstatement to the given value .
initializes the configuration .
/ * ( non - javadoc )
/ * ( non - javadoc )
write the content of this node to the given { @link appendable } .
converts a dom node to a styles .
/ * ( non - javadoc )
/ * ( non - javadoc )
removes the key from the cache if it is expired .
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieves a snapshot of the specified key / value pair .
/ * ( non - javadoc )
prepare the web application context .
/ * ( non - javadoc )
publish web application .
load the given file into a properties file .
returns a new instance of the <unk> class using the specified class name .
loads a class from a byte array .
init this driver .
<p > <unk> . < / p >
reads a mapping from the specified path .
add a modification
creates a new { @link <unk> } instance for the given value .
extract a list of class annotations from a class pattern .
<p > parse . < / p >
parses the given json string and returns the object as a list of objects .
dynamically parses a { @link map } as a { @link map } .
<p > parse . < / p >
checkstyle : off
returns the default value for the given type .
/ * ( non - javadoc )
reads a quoted string and returns it as a string .
un - escape a string literal .
increases the capacity of this <tt > arraylist< / tt > instance if necessary .
decodes a byte array from base64 format .
returns an { @link list } of { @link string } s of the given { @link string } .
--- number parser ---
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
returns true if the given { @code target } array contains the given delimiter .
this method will split the given { @link string } into an array of { @link string } s .
todo : implement <unk>
generates the default constructor mapper for the given class .
{ @inheritdoc }
creates the map support for properties .
/ * ( non - javadoc )
returns the java type name for the given type .
resolve a reference from a property constant .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * <unk>
gets the value of an annotation .
/ * <unk>
get a reference to the default converter .
removes all duplicates and duplicates from the domain .
converts a list of references to filenames .
converts a proposition to a list of { @link <unk> } objects .
----- private methods -----
starts the transaction scope .
gets the method .
<unk> > <unk>
<p > <unk> . < / p >
returns an array containing the types of the objects in the array .
<p > checks if the target class is assignable to the target class . < / p >
<p > <unk> . < / p >
get all interfaces of the given class .
replies the methods that are annotated with the given annotation .
<p > <unk> . < / p >
returns a list of all methods that are annotated with the given class .
compare two method arguments .
returns true if the given method is equal to the given method .
compare two arrays .
<p > <unk> . < / p >
returns true if the passed { @link member } is public and not public . private static boolean <unk> = false ;
<unk> > <unk>
<p > newinstance . < / p >
checks if the given { @link class } is { @link <unk> } .
get the superclasses of the given class .
checks if the given method is a getter method .
<p > <unk> . < / p >
<p > <unk> . < / p >
returns the component type of the given method .
<p > <unk> . < / p >
returns a string representation of the given type .
<p > <unk> . < / p >
returns the stack trace of the specified method .
returns the { @link java . util . collection } of the { @link class caller } of the current thread .
finds the first non - null interface .
returns the sub - class of the given parent .
returns a string summary of the given class .
converts a class name to a file name .
returns true if the specified class is annotated with {
determines if the given type is a numeric type .
causes the current thread to sleep for the given number of milliseconds .
causes the current thread to wait until the current thread is interrupted .
wait for the object to become available .
causes the current thread to sleep for the given number of milliseconds .
create a daemon thread factory .
returns the value obtained by calling { @link <unk> () } .
visits a ldc parameter .
visits an annotation .
visits an annotation .
visit an annotation .
visits a frame at the top of the stack .
visits a method instruction .
visits a method instruction .
visits a ldc instruction .
visits a instruction instruction .
sets the number of dimensions to be selected .
<p > catch . < / p >
visits a local variable annotation .
writes the given properties to the given writer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
returns an array containing all of the elements in the specified array .
returns an array containing all of the elements in the specified array .
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
creates and returns a new array containing all of the elements of the given array . the array elements will be in the same order as the input array .
removes the element at the specified position in the specified array .
answers a new array with the given length .
concatenate the given arrays into an array .
<p > copies the contents of the given array to a new array . < / p >
copies the contents of the given array into a new array .
reverses an array
inserts the specified array into the destination array at the given offset .
returns the byte array of the given byte array .
casts a byte array to a byte array .
<unk> > <unk>
returns a new array containing all of the elements of the given array .
returns an array containing all of the values in the array 包装类数组转为原始类型数组
casts <code > short [] < / code > to <code > <unk> / code > .
returns an array containing all of the values in the given array .
casts <code > int< / code > into an array of <code > int< / code > s .
returns an array containing all of the elements in the given array .
returns an array containing all of the elements in the given array .
returns an array containing all of the elements in the array .
returns an array containing all of the elements in the given array .
returns the double array 包装类数组转为原始类型数组
converts an array of double values to a double array .
returns an array containing all of the elements in the array 包装类数组转为原始类型数组
returns an array of booleans .
returns the index of the first occurrence of the specified character starting at the specified position in the array .
returns the index of the first occurrence of the specified character in the given array . if the value is within the list of <tt > - 1< / tt > the returned value will be <code > - 1< / code > .
returns the index of the first occurrence of the specified element in the given array .
returns the index of the first occurrence of the specified character starting at the specified value .
<p > returns the index of the first occurrence of the specified value in the given array . < / p >
returns the index of the first occurrence of the specified character starting at the specified value .
returns the index of the first occurrence of the specified value in the given array . if the array is null then - 1 is returned .
returns the index of the first occurrence of the specified byte array starting at the specified index .
reads the next index from the stream .
<p > converts an array of object booleans to string . < / p >
returns a string array containing all of the elements in the array as an array of strings .
enables read mode .
{ @inheritdoc }
{ @inheritdoc }
visit a parameter .
implements the <unk> method .
this method computes the maximum number of blocks that are reachable from the given subroutine .
adds a successor to the current basic basic block .
ends the current basic block .
/ * package
/ * package
put a frame to the stack frame .
sets the abstract types for the abstract types .
put a frame to the stack .
returns whether or not the attributes of the given method can be copied .
computes the size of the method .
puts the method information into the given bytevector .
collect instances prototypes .
/ * ( non - javadoc )
<p > <unk> . < / p >
parse next token .
parse the given query string into a list of { @link list } of { @link list } s .
register pseudo class .
returns the pseudo class for the given pseudo class .
{ @inheritdoc }
invokes the { @code <unk> } method of the { @code <unk> } .
closes the given { @link closeable } ignoring any { @link ioexception } thrown by the { @link ioexception } .
copy the contents of the input stream to the output stream .
copy all of the bytes from the input stream to the output stream .
read a number of bytes from an input stream .
this method deserializes the given { @link reader } to the specified { @link file } .
copy the given input stream to a byte array .
copy the contents of the given { @link inputstream } to the given { @link <unk> } .
copy the given input stream into a byte array .
copy the contents of the given { @link reader } to the given { @link writer } .
get an input stream from an input stream .
creates a writer for the given { @link outputstream } using the given encoding .
<p > <unk> . < / p >
<p > <unk> . < / p >
wires parameters from the given source object to the storable type .
{ @inheritdoc }
returns the { @link classdescriptor } for the given class .
<unk> / <unk>
adds config parameters to the filter .
/ * ------------------------------------------------------------
loads the bundle file .
main method .
/ * ( non - javadoc )
sets the number of random characters .
returns the path to the given folder .
looks up a bundle file .
looks up a gzip bundle file .
register bundle .
returns the sha1 hash of the input string .
creates a bundle output file .
resets the dns files .
fixes a css relative path to a css path .
returns the relative path to the given base url .
updates the table with the given id .
update the table with the given id .
updates the render value for the specified cell .
updates the column .
delete an entity .
delete by clause .
delete by id .
delete by id .
checks if the table exists .
checks if the table exists .
<unk> <unk> <unk>
gets a value by column .
<p > <unk> . < / p >
checks if the table exists .
checks if a table entity exists .
{ @inheritdoc }
{ @inheritdoc }
count all the rows from the database .
count all the rows in the table .
increase a column .
<p > <unk> . < / p >
/ * ( non - javadoc )
creates a new version of this class .
returns the value of the field with the given name .
/ * ( non - javadoc )
converts the given value to a single element array .
<unk> > <unk>
<p > <unk> . < / p >
/ * ( non - javadoc )
clones the given object .
add a value to the bag
/ * ( non - javadoc )
{ @inheritdoc }
serialize the given object .
returns true if the property is a property of the given property type .
get exception from exception .
this method is called by the {
{ @inheritdoc }
commits the transaction .
/ * ( non - javadoc )
commits the current transaction .
-------------------------- other methods --------------------------
creates an action definition .
<unk> > <unk> > <unk> / code > <unk> > <unk> / code > <p > <unk> / p > <p > description : < / p >
creates a properties object from a file .
loads a file .
load properties from a properties file .
write a byte array to a file .
write a byte array to a file .
copies the fromfile to the given file .
stores the properties of the given properties object to the given properties object .
loads properties from a string .
loads the properties from the given { @code string } .
returns a subset of the properties subset of the given properties .
creates a properties object from a string .
<p > <unk> . < / p >
get a property from a file .
returns the value associated with the specified key or { @code defaultvalue } if this map contains no mapping for the key .
store all properties in the given properties object .
get the value of the property with the specified key in the property list . if the property is not found in this property list the default value is returned .
resolves a handler for a given method name .
gets the transaction mode .
sorts the annotations of the given array of service references .
/ * package
replaces the id selector with the given id .
/ * ( non - javadoc )
returns true if the given node matches the supplied node .
/ * [ deutsch ] <p > liefert eine { @code allen - <unk> } . < / p >
strip the dot suffix from the given string .
build the compile packages .
calculates the next java version number .
clone the given node .
get the previous sibling node .
adds a new child node to this node .
add a child node to this node .
/ * ( non - javadoc )
inserts the specified child before the given child .
unimplemented . see <unk>
inserts a new child before the given child .
get the child elements of a child node .
removes the soap node at the given index .
removes all nodes from the list of children of this node .
get the attribute value .
removes the attribute with the given name .
gets the attribute value .
set the attribute value .
get the value of the attribute with the given name .
returns the node with the given name .
returns the node at the given index .
returns the node at the given index .
returns the child element at the given index .
get the first child of a node .
get the previous sibling node .
returns the first child element with the given name .
returns true if this node is a child of this node .
returns the text of the children of this node .
<p > <unk> . < / p >
adds the sibling names to the sibling names .
initialize the child nodes .
changes the content of the <unk>
get the next sibling node .
returns the index of the next sibling of this node .
get the first child of this node .
get the next sibling node .
get the position of the child node .
get the previous sibling node .
/ * ( non - javadoc )
get the text content of the node .
returns the html code for the given html fragment .
gets the inner html document .
visits all children of the given element .
returns the css reason for the given node .
on <unk> tag .
reads the initial start start tag .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ------------------------------------------------------------
maps a string to a map .
{ inheritdoc } .
{ @inheritdoc }
/ * ( non - javadoc )
initializes the mime types for the given mime type .
{ inheritdoc } .
{ inheritdoc } .
adds the given root package to the list of package names .
初始化<br > <unk>
find the mapping for the given action .
find the package path for the action package .
begins a transaction .
seals the current transaction .
<p > <unk> . < / p >
loads a class from a list of violations .
resolve validation message from request .
return the duplicate names of this <unk> .
synchronized method for setting parameters
main method .
create a hierarchical { @link properties } instance .
consume all entries in the target map .
getting all benchmarkable objects from the target scope .
iterate over the target scope and append the results to the stringbuffer .
get the values of all the arguments
/ * ( non - javadoc )
creates a { @link jsii . <unk> } instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
appends a subsequence of the specified character sequence to this sequence at the specified position .
returns the value of the <code > name< / code > property as an <code > int< / code > .
gets the long value .
returns the value of the <code > name< / code > property as a <code > double< / code > . if no such property exists returns <code > null< / code > .
returns the value of the <code > name< / code > property as a <code > double< / code > . if the value is not a number <code > null< / code > is returned .
returns the value associated with the specified position in this map .
returns the value as an array .
returns the value of the specified key as a byte array .
get the value associated with the given position in the map .
adds the given { @link jsonarray } to the list .
sets the value of the specified { @link object } .
adds all the elements in the given array to the end of the list .
add a list item to the list
/ * ( non - javadoc )
resolves the type of the action .
/ * ( non - javadoc )
/ * ( non - javadoc )
process the start tag .
add a value to a string .
sets the interceptor for the interceptor .
<p > <unk> . < / p >
<p > <unk> . < / p >
render the result of applying the expression to the expression .
returns the name of the component .
create a string that can be used to create a record from the class name .
{ inheritdoc } .
{ @inheritdoc }
resolves a { @link set } of { @link property } s .
create a socks4 socket .
read attribute .
writes the given byte array to the given byte array .
returns the number of attributes .
compute the size of the attributes of the symbol table .
computes the size of the bytecode of this method .
puts the given { @link <unk> } into the { @link <unk> } .
puts the contents of this attribute into the given byte vector .
eliminate duplicate bindings .
<p > <unk> . < / p >
checks if the action result class is missing .
sends the given action to the result object .
<p > <unk> . < / p >
<p > checks if a charsequence equals another character . < / p >
<p > <unk> . < / p >
answers the first index of the first occurrence of the specified character starting at the specified position in the array .
<p > <unk> . < / p >
sets the property .
run the process .
invokes { @link <unk> ( java . lang . reflect . class java . lang . object ) } with { @link <unk> ( object ) } .
merge the input onto the stack .
returns the abstract type of the given symbol table .
returns the abstract type descriptor for the given class descriptor .
initializes the input frame of the input stack .
set the input frame from api formats .
generate permutations of local variables .
merge the local variables into the local variable table .
pushes the specified type onto the stack .
push a symbol onto the symbol table .
pushes the specified type onto the stack .
pop a method declaration .
this method must be called from the set constructor .
merges the input stack with the given type .
/ * ( non - javadoc )
merge the given source symbol into the destination table .
/ * ( non - javadoc )
put abstract type .
returns the total number of entries in the cache .
start auto - completion .
visit a module .
visits a {
visits an outer class with the given name and descriptor .
visit an annotation .
visits a {
visit an inner class .
visit a field .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
closes the session .
returns an array of {
invoke the action method .
<p > <unk> . < / p >
calculates the last page of a page .
creates a new { @link <unk> } with the given parameters .
check if the given string is an integer value .
returns <code > true< / code > if this <code > <unk> / code > is in the range <code > 0< / code > .
converts a charsequence to a byte array .
returns the index of the first occurrence of the specified substring in the source array or - 1 if the source string is null .
returns the name of the node in the given node .
adds the given attribute to the given attribute writer .
render string value .
loads properties from file .
read from file .
load properties from an input stream .
<unk> map .
returns a { @link java . util . properties } object from the given map .
returns a { @link properties } object containing all properties of the specified prefix .
returns a read - only { @link map } of { @link <unk> } s .
load properties from the classpath .
returns the value associated with the given key or the default value if no value is found .
gets the prefixed key and parse it to an int .
<p > <unk> . < / p >
/ * ( non - javadoc )
extract properties from the given target map .
extract a set of properties from a { @link java . util . map } .
extract sub props .
query the inner class names .
/ * ( non - javadoc )
initialize the active profiles .
set the supported service profiles .
returns a list of profiles for the specified profile .
adds the given { @code properties } to this { @code properties } .
extract set injection point from the set of sets .
<unk> override methods
<p > <unk> . < / p >
<p > <unk> . < / p >
{ @inheritdoc }
<p > <unk> . < / p >
inject target into wrapper object .
<p > <unk> . < / p >
<unk> > <unk>
returns the field descriptor for the given field name .
returns the type of the field .
<p > getter for the field <code > <unk> / code > . < / p >
returns the getter for the given object .
returns the setter s { @link <unk> } .
returns the setter for the given name .
resolves the { @link <unk> } for the given { @link type } .
resolves a { @link fielddescriptor } for a { @link field } .
/ * ( non - javadoc )
send a { @link object } to a { @link jsonnode } .
creates a new instance of { @link <unk> } .
returns the http method name for the given method name .
<p > checks if the given string matches the given regular expression . < / p >
reads a string from the given string .
matches the given string pattern with the given pattern .
returns true if path matches pattern .
returns true if the given name matches the given regular expression .
returns the loading of the child class loading of the given node .
returns the loading resource loading strategy .
/ * ( non - javadoc )
find the resource with the given name .
kills the current thread and waits for it to finish .
returns the { @link <unk> } for the given annotations .
<p > <unk> . < / p >
build an injection point for an annotation value .
inspects the specified class and returns the scope information .
clones the properties of the given object .
/ * ( non - javadoc )
adds the class loader to the classpath .
gets the bean property .
<unk> > <unk>
loads the property descriptor for the property .
<p > getter for the field <code > <unk> / code > . < / p >
<p > getter for the field <code > <unk> / code > . < / p >
connect to a database .
adds an iterator to the end of the iteration .
returns <tt > true< / tt > if the iterator has more elements .
/ * ( non - javadoc )
{ @inheritdoc }
<p > start . < / p >
display the logo .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new socket .
creates a { @link sslsocketfactory } that trusts all { @link urlconnection } s .
gets the socket factory .
answers a random string of the specified number of characters .
returns a random string of the specified number of characters .
<strong > [ icu ] < / strong > returns a string representation of the given number of random ranges .
delegates to {
delegates to {
delegates to {
parses the { @link inputstream } into a { @link <unk> } .
convert a collection to an array of the target type .
<p > newinstance . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
visit a registered exported provider .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
creates a new { @link cache } instance .
<p > put . < / p >
returns the value of the specified key or { @code null } if this value doesn t exist .
{ inheritdoc } .
/ * ( non - javadoc )
returns a hashmap containing all {
{ @inheritdoc }
<p > <unk> . < / p >
returns an array containing all methods of the given class .
returns the ip address of the given host .
/ * ( non - javadoc )
check if the given string is a valid ipv4 address .
returns the ip address of the given host .
downloads the given url into a byte array .
reads a string from the given url .
zip stream to a zip file .
/ * ( non - javadoc )
gets the embedded action path .
/ * ( non - javadoc )
/ * ( non - javadoc )
initialize the scope .
returns html for the given action .
/ * ( non - javadoc )
/ * ( non - javadoc )
prepare an array class name .
gets the package name from a fully qualified class name .
{ @inheritdoc }
loads a class from the class name .
loads the class from the given class descriptor .
/ * ( non - javadoc )
returns a { @link <unk> } that iterates over the elements of the given array .
returns a { @link list } containing the elements of the specified array .
returns the index of the first occurrence of the specified element in the array .
set the list of rules to exclude from the excluded list .
<p > set the specified include patterns . < / p >
include the given class as a list of strings .
/ * ( non - javadoc )
<p > returns <code > true< / code > if the specified { @link charsequence } matches the case - insensitive . < / p >
/ * ( non - javadoc )
<unk> > <unk> > <unk>
registers a component with the specified type .
register a component .
registers a { @link component } with the { @link component } instance .
register { @link <unk> } with { @link <unk> } .
/ * ( non - javadoc )
returns the ancestor component of the given type .
creates a new { @link component } for the given { @link component } .
creates a new { @link component } for the given { @link component } .
finds the base component of the given component class .
/ * ( non - javadoc )
check if the column exists .
attempt to compute the sql for the given sql string .
returns the rows of the row .
constructs a {
replies the list of generated classes .
populate the <unk>
creates a { @link <unk> } for a renderer class .
dtd utility methods
set null .
this method will throw an exception if the index is not null .
<p > sets the value at the given index . < / p >
set a boolean value .
set the value at the given index .
set a byte value .
set a double value .
set the value at the given index to the given value .
set the value at the given index .
set a short value .
this method will throw an exception if the index is null .
set date .
this method will throw an exception if the attribute is not null .
this method will throw an exception if the attribute is not null .
set a bigdecimal value .
sets the value at the given index .
use this method to throw an exception .
add an attribute declaration .
sets the value of the attribute at the given index .
this method will throw an exception if the index is null .
this method will throw an exception if the attribute does not exist .
----- private methods -----
set a bean parameter .
{ @inheritdoc }
sets the object at the given index .
executes the given { @link java . sql . statement } .
package - private for testing
{ @inheritdoc }
sets the objects for the given objects .
set the attribute value .
set a batch of parameters .
set a batch statement .
inserts a new chunk after the current one .
get the entity name for the given entity name .
gets the entity table .
verify that the given column reference is a column reference .
create a table alias .
<p > <unk> . < / p >
returns the class of the given object .
converts an object to a boolean value .
appends spaces to the given string builder .
<p > <unk> . < / p >
returns a connection to the database .
/ * ( non - javadoc )
returns an array with all the files in the uploaded file .
compares this mutable to another .
this method is used to determine if a page should be included in the response .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
includes the absolute path to the page .
forward forward to the servlet .
sends a redirect to the servlet .
/ * ------------------------------------------------------------
redirects the given url to the specified url .
redirects the given url to the specified url .
/ * ------------------------------------------------------------
gets the url of the request .
checks if the request is included in the request .
returns the relative path of the request .
returns the relative path of the request .
/ * ( non - javadoc )
builds the action path for the given action path .
create a new evaluatormanager macro .
/ * ( non - javadoc )
/ * ( non - javadoc )
print all available beans .
/ * ( non - javadoc )
sets the subject for the given subject .
create a new { @link <unk> } for the given message id .
specify a term to be <unk>
converts the given address to a { @link <unk> } .
adds a cc recipient address to the email address .
add a bcc recipient address to the email address .
returns a new { @link <unk> } for the given flags .
adds a flag to the given flag .
specify a date to be received by { @link <unk> () } .
specify a maximum number of seconds
creates a new { @link <unk> } based on the specified pattern string .
creates a new { @link <unk> } for the given header name and pattern .
convert a comparison of { @code <unk> } to a { @code <unk> } .
returns a new { @link collection } of { @link <unk> } s that match the given criteria .
set the { @link <unk> } or { @link <unk> }
negates the given filter .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
base32 - encode the given byte array into a byte array .
decodes a base - 32 encoded string into a byte array .
converts a value to a byte array .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ------------------------------------------------------------
add a new violation to the list of violations .
validates the given target object .
validates the given target resources .
set the supported service profiles .
set the supported service profiles .
helper method to check if a set of profiles match the given profiles .
<p > parse . < / p >
returns the number of milliseconds expressed in milliseconds .
add this date - time to the end of this object .
/ * ( non - javadoc )
set the fraction of the fraction to be updated .
returns the number of days between this date and another date .
start a standard deviation .
/ * ( non - javadoc )
method <unk> .
method sorts a color .
returns the sub - range of the given index .
/ * ( non - javadoc )
parse the given { @link <unk> } .
encodes a comment .
add an error edge to metrics .
answers the name of the first occurrence of the specified {
generates a salted pbkdf2 hash of the password .
computes the pbkdf2 hash of a password .
converts a hex string to a byte array .
/ * ( non - javadoc )
sets the name of the deployment .
sets the { @link datasource } instance to the given { @link datasource } .
write part of the { @link <unk> } to the given { @link inputstream } .
create a new { @link attachment } object with the given { @link attachment } .
create a new { @link <unk> } .
build a { @link cache } from a file .
<p > <unk> . < / p >
returns the mime type of the given file .
accept the type of the given visitor .
parses the given type and returns the index of the corresponding type visited .
compute the size of the field .
fill attributes .
<unk> > <unk>
<unk> > <unk>
/ * ( non - javadoc )
this method is used to process a connection provider .
list undocumented entities .
visit a method .
checkstyle : off
{ @inheritdoc }
/ * ( non - javadoc )
get method signature .
create a string representation of the given string .
<p > <unk> . < / p >
/ * ******************************************************************** / * internal methods ********************************************************************
sets the description of the agent .
initializes the class reader .
get method param .
decode a string .
/ * ( non - javadoc )
set the logger provider for the given logger .
get a logger with the given name .
<p > validate . < / p >
/ * <unk>
invoke the given action with the given action .
初始化<br > <unk>
create a action request .
/ * ( non - javadoc )
/ * ( non - javadoc )
assemble beans .
removes the bean from the bean .
shuts down the bean .
creates a { @link properties } object from the properties file .
retrieves an array of all of the received messages from the given folder .
create a copy of this buffer .
the main method .
allocates a new { @link <unk> } for the given { @link <unk> } and { @link <unk> } .
/ * ( non - javadoc )
creates a new { @link <unk> } .
prints a message to stdout .
prints the results to stdout .
map a given file to a file mapping mode .
close the cluster .
this method blocks until {
return a reusable {
return the current position of the buffer .
this method wrap the given { @link <unk> } into an { @link <unk> } .
offers a message to the buffer .
add a { @link <unk> } to the { @link <unk> } .
{ @inheritdoc }
creates a { @link <unk> } for the first { @link <unk> } list .
attempt to claim a { @link tablebucket } .
attempts to append a { @link <unk> } to this { @link <unk> } .
join a channel .
close the connection
create a new <unk>
create a new { @link <unk> } instance .
polling the polling response polling response .
{ @inheritdoc }
publish a ndarray message
add an exclusive oauth message to the stream
start recording of stream recording .
stops an ndarray message .
stops the recording ndarray
stops the recording .
start the replay process .
finalize the replay transaction .
waits for a quorum of messages to a given quorum .
lists all of the values in the specified recording .
list all messages of a given partition .
returns a list of { @link <unk> } for the specified recording .
returns the recording position of the specified recording .
find the last segment matching the given correlation id .
truncate the recording s recording .
list recording subscriptions
this method is used to dump the binary version of the specified buffer .
prints an available image to stdout .
prints an available image to stdout .
prints a string message to a {
returns a { @link <unk> } instance for the given { @link io . counter . counter . <unk> } .
authorizes the channel status reader to authorizes the given channel status to the given channel .
/ * ( non - javadoc )
sets the maximum number of elements in this buffer .
appends { @code length } bytes to this { @code buffer } .
/ * ( non - javadoc )
creates a new { @code <unk> } with the given parameters .
this method is called when a message is received .
creates a { @link <unk> } for the given { @link <unk> } .
clean up all streams .
generates a random gamma delay .
<unk> method .
/ * ( non - javadoc )
resets the iterator .
reads a { @link <unk> } from the { @link <unk> } .
allocate a default header for a given stream .
allocate a message for key - value pairs .
allocate a label for the given label id .
decode a fragment of fragments .
picks up the specified { @link collection } of { @link <unk> } s from the specified { @link <unk> } .
get a block from ufs .
get the raw poll block from the ufs .
finds an image by id .
iterate over images .
starts the media driver context .
unwraps a channel that was marked as encoded .
refresh the catalog .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
connects a response to a specific correlation id .
tries to connect the given response with the given id .
closes the session .
starts a recording on the given stream .
stops the recording of the specified stream .
stops the recording of the specified correlation id .
replay the packet .
stop the session event .
list all existing saml session attributes .
list all existing records for the specified correlation id .
publish a recording event .
extends the recording event for the specified stream .
publish a recording event .
truncates the recording with the given session id .
publish a stop event
/ * ( non - javadoc )
/ * ( non - javadoc )
parses a { @link io . netty . channel . channel } to a { @link channel } .
create a string representation of a remote address .
connect to the remote peer .
returns the { @link <unk> } for the given { @link uri } .
returns a string representation of this product .
close the data .
add a subscriber to the subscriber .
/ * ( non - javadoc )
call this method to load the htod property file .
/ * ( non - javadoc )
/ * package
see { @link <unk> ( int ) }
/ * ( non - javadoc )
selects a list of pending subnetworks .
resolves a taxonomy term .
this method is called when the trigger is processed .
sets the <unk> of the <unk> .
/ * ( non - javadoc )
create a { @link <unk> } for the given file .
iterate over the meta data .
put a key / value pair into the parameters map .
<strong > [ icu ] < / strong > returns the <strong > <unk> / strong > tag .
<strong > [ icu ] < / strong > returns the <strong > [ icu ] < / strong > tag .
returns a new { @link list } of { @code <unk> } s at position { @code position } and { @code <unk> } .
create a { @link list } of { @link forwarded } s from the given { @link string } .
adds a session id to the cache .
gets the tag value .
claim a message from the buffer .
{ @inheritdoc }
appends a { @link <unk> } to the given { @link <unk> } .
this method appends the number of <unk> bytes to the given byte array .
generates a new <unk> from the <unk> .
{ @inheritdoc }
allocates a new direct { @link bytebuffer } . <p > the direct alignment of the returned buffer is { @link <unk> } . < / p >
create a new buffer position .
compute the { @link <unk> } for the given { @link <unk> } .
scans the given buffer size and returns a list of { @link <unk> } s .
resets the internal state of this instance .
validates the {
sets the allowed origins .
creates a new { @link net . dv8tion . jda . core . entities . uri } .
initialize the control mode for the control mode .
set the time to live ( ttl ) .
sets the <unk> for the new voicechannel
<p > <unk> . < / p >
sets the position of the builder .
/ * [ deutsch ] <p > <unk> einen { @code <unk> } < / p >
returns a new { @link net . dv8tion . jda . core . <unk> <unk> } from the given { @code position } and { @code <unk> } .
/ * ( non - javadoc )
sends an error message to the given destination .
--- datagram channel ---
stop playback .
check if a frame is valid .
this method receives a <code > <unk> / code > from a <code > buffer< / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
resets the internal state of the component .
this method is called when a message is received from the fragment .
returns the status of the given { @link <unk> } .
allocates a new { @link <unk> } .
/ * ( non - javadoc )
wrap the given buffer with the given length .
returns a copy of the given { @code index } .
validates a given vector of writables .
returns the length of the buffer .
<p > <unk> . < / p >
creates a new { @link <unk> } from the given { @link <unk> } .
creates a new instance of { @link <unk> } .
<p > <unk> . < / p >
creates an instance of the {
creates an instance of the <unk> indicated by the test class .
validates the given <unk> .
returns a new instance of the {
this is a static method that can be used to connect to a socket connection .
validates that the page size is valid .
validates that the given value is within the range of the given value .
unblock timeout .
convert a error code to a grpc error code .
create a { @link set } of { @link <unk> } s .
fire { @link <unk> }
gets the enabled { @link set } of { @link <unk> } s .
<editor - fold defaultstate = collapsed desc = reset methods
parses the given { @code string } into an array of { @code members } .
encodes the given array of strings into a string array .
adds member status publications to given member list .
close member data .
add a member status message to a member .
adds the given { @link <unk> } to the { @link <unk> } .
checks if a quorum of members has active members .
returns the intersection position of the given arrays .
reset log positions .
check if the given <unk> is <em > <unk> / em > <unk> .
inform the { @code <unk> } of a candidate { @code member } .
checks a candidate candidate .
checks whether the given candidate candidate candidate candidate candidate exists .
checks whether the given candidate candidate candidate candidate class is accepted by the given member .
returns true if member is a member of the member .
checks that the provided { @link net . dv8tion . jda . core . entities . member member } can be represented by a { @link net . dv8tion . jda . core . entities . member member } .
returns true if the two { @link net . dv8tion . jda . core . entities . member } s are equal .
returns true if the given candidate is a member of the given member .
returns true if the given candidate candidate is a candidate for a cycle .
sort log files .
compare two { @link clusters } s .
returns true if the given members are not duplicate of the given endpoint .
returns the index of the column with the given name .
returns the member with the given id .
adds a new { @link <unk> } to the list of members .
delete member .
returns the high - scoring member id .
convert a list of { @link string } s to a { @link string } .
/ * ( non - javadoc )
unblock a buffer .
use this method to map the list of normalizer objects in a file .
downloads a file in the classpath .
merge the driver from the current thread .
dials the driver to the driver .
swap the contents of a file
<unk> > <unk>
/ * ( non - javadoc )
write a volatile frame into the buffer .
writes the length of the length of the given buffer to the given buffer length .
writes a single { @link java . nio . buffer . <unk> } to the buffer at the given offset .
writes a big - endian flag to the buffer
writes a buffer to the buffer .
writes a term to the buffer .
registers the given ndarray message
send a datagram to the client .
allocate a counter for a given recording .
allocate a counter by session id .
returns the { @link <unk> } for the given { @link <unk> } .
allocate a new source and return it as a string .
checks if the given counter is active .
parse the given { @link charsequence } into a { @link java . net . socketaddress } .
substring a message to the receiver .
returns a { @link java . lang . number } of the specified { @link <unk> } .
creates a new instance of { @link <unk> } .
sbob_sl64 the receiver id
this method is the same as { @link <unk> ( long long ) } but takes a long id .
write a packet .
deserializes the application specific feedback from the given byte array .
reloads the buffer .
returns the number of free entries in the map .
returns the last element in the map with the specified key or null if there is no such entry .
retrieves the entry with the given instance .
/ * ( non - javadoc )
creates a recovery plan .
appends a term to the leadership log .
appends a snapshot of the given cluster to the given instance .
commits the given log entry .
creates a tombstone .
create a new {
connect to the given context
closes this ndarray
wrap the given buffer with the given offset .
generate the bias for this buffer
sends a keepalive message to the channel .
/ * ( non - javadoc )
unblock a buffer .
returns a string representation of this buffer .
join a channel to the given channel .
discrete wavelet transform .
check page size .
cas active term count .
validate position .
computes and returns the number of bytes that are available for the given file length .
store the default message header for the given buffer .
<p > applies a { @link <unk> } to the buffer . < / p >
<p > <unk> . < / p >
transmit a {
sets the hi value into the tail of the array .
transmit the given buffer into the buffer at the tail of the buffer .
helper method to sort the tail of the buffer .
returns a {
ensures that the { @link <unk> } is full to { @link <unk> } and { @link <unk> } .
the main method .
this method is used to create a new instance of { @link <unk> } .
<p > allocate a new counter for a given given type . < / p >
allocate a counter for a given counters .
allocate a new log entry .
allocate a replay counter for a given counter .
allocate a snapshot of the given type .
<p > converts a byte array into a hexadecimal string . < / p >
reads a { @link <unk> } from the { @link <unk> } .
creates a new { @link <unk> } for the given { @link <unk> } and { @link <unk> } .
join a channel .
tries to fill the buffer with the given buffer .
reads a message from the buffer .
writes a buffer to the buffer .
get the schema id for the given buffer .
this method wrap the given { @link <unk> } into an { @link <unk> } .
append a buffer to the buffer .
this method commits the transaction .
this method is called by the {
the main method .
launch a {
close the dolphin transport .
notifies the { @link <unk> } s of the given fragment .
polls the current thread and returns how many of them is available .
returns the lock at the specified position .
/ * ( non - javadoc )
writes a byte buffer to the buffer .
returns the differences between the two bytes .
join a channel .
creates a new { @link <unk> } .
creates a new { @link <unk> } .
allocates a new { @link <unk> } object .
allocate a counter for a given counter .
snapshots the app registration id .
configures the crash report .
scans the buffer .
/ * ( non - javadoc )
creates a new { @link <unk> } from the given { @link <unk> } .
attempt to claim a given number of messages .
scans the buffer and returns the index of the next frame .
the main entry point .
allocates a new { @link <unk> } for the given { @link <unk> label } and { @link <unk> } .
start a subscriber
prints the counters to the stream .
adds a subscription to the aeron subscription .
creates a new { @link <unk> } with the specified id and length .
creates a new { @link context } instance .
/ * ( non - javadoc )
dispatch a {
copy the buffer to the buffer .
creates a new { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
adds a new slab to the pool .
removes all of the <unk> from the pool .
<p > resets the <unk> to the specified slab . < / p >
<unk> from <unk>
adds the statistics to the statistics .
returns true if the given password is consistent .
/ * ------------------------------------------------------------
writes the required bytes to the given byte array starting at the given offset .
initializes this <code > <unk> / code > instance from the given <code > <unk> / code > .
set the requested {
set the compression schema for the given job .
set the avro { @link com . <unk> . <unk> . <unk> . <unk> } of the given job .
/ * ( non - javadoc )
given a {
sets the thrift class .
convert a list of {
convert a struct type to a java type
convert a map of {
returns a list of glob patterns that match the given glob .
/ * package
creates a list of { @link keyrange } s from the given { @link <unk> } .
return the union of two intervals .
<strong > [ icu ] < / strong > returns the index of the intersection of the given range .
adds a range to the list of ranges .
safely convert a long to a positive integer .
parse a glob pattern .
returns a string representation of the given length .
end - <unk>
adapt a {
creates a new { @link <unk> } .
initialize a @ { @link squigglypropertyfilter } with a specific property filter .
@return a list of { @link <unk> } s that contains all of the <unk> files in parallel .
reads a list of <unk> from a list of <unk>
gets a list of { @link <unk> } s from the given { @link list } .
reads all files in a { @link org . apache . hadoop . streaming . api . <unk> . <unk> } .
reads a list of { @link <unk> } s into a { @link list } of { @link footer } s .
reads a list of filestatus objects from the given { @link configuration } .
read a list of files from a list of files .
reads avro summary file .
creates avro schema from parquet file .
read avro schema from parquet file .
read avro schema from parquet file .
creates a { @link <unk> } from the given { @link <unk> } .
creates a { @link <unk> } from the parquet file .
creates a { @link <unk> } from the given { @link inputstream } .
reads the next row from the <unk> .
read the next record from a block .
get the next dictionary reader .
reads the dictionary from the given { @link <unk> } .
writes the given object to the given writer .
remove a writer from the cache .
this method is used to update the difference between this and <unk>
registers a new { @link <unk> } with the given { @code <unk> } .
/ * ------------------------------------------------------------
starts reading a record .
{ @inheritdoc }
write the dictionary to the dictionary .
/ * ( non - javadoc )
write the data to the dictionary .
write the data to a stream .
<p > write a chunk of { @link <unk> } . < / p >
/ * ( non - javadoc )
ends a block .
instrument the specified range of bytes .
write the columnar data to the given file .
creates a new { @link <unk> } from the given { @link vec } .
writes a list of { @link path } s to the given { @link <unk> } .
writes the given { @link <unk> } to the given { @link <unk> } .
writes the given { @link <unk> } to the given { @link <unk> } .
merges the {
merges the {
merges two {
reads the run
returns true if the field is an optional type .
merges the provided deque into a single list of values . each pair of values is combined into a single one .
merges two { @link schema } s into a new { @link schema } instance .
creates a new { @link schema } from two schemas .
creates a union of two schemas .
creates a new { @link schema } based on the given { @link schema } .
returns a {
creates a new instance of { @link field } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package private
<unk> > <unk>
converts thrift class into thrift class .
creates a composite value for the extra meta data .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package - private
this method is called to write a page of data to a page .
set the comma delimited list of globs to use .
checks if the exception is thrown
<p > <unk> . < / p >
add a field to the data
adds a field to the end of the field stack .
/ * ( non - javadoc )
ends a {
adds a binary value to the list .
/ * ( non - javadoc )
<p > <unk> . < / p >
{ @inheritdoc }
try to allocate a bucket buffer .
reads the next block from the stream .
adds a map of parameters to the model .
returns the {
create a new { @link <unk> } for the given expressions
{ @inheritdoc }
throws an { @link illegalargumentexception } if the message is not valid .
throws an { @link illegalstateexception } with the given message if the condition is valid .
reads and returns a list of { @link action } s from the stream .
validates the given <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
calculates the bit widths for the given data block .
this is a helper method that creates a { @link <unk> } . this is like { @link <unk> ( <unk> ) } .
/ * ( non - javadoc )
creates a {
<p > adapt . < / p >
throws an exception if the throwable is an instance of the given type .
{ @link <unk> } { @link <unk> }
creates a { @code statistics } from a { @code type } .
returns a builder for the given primitive type .
merges statistics according to {
returns the union schema of the given schema .
returns whether the given type is a valid element type .
creates a new { @link <unk> } instance .
returns a new { @link <unk> } instance using the given { @link <unk> } .
convenience method to get the value of the given { @link java . lang . object } .
<p > invoke . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
merges the {
creates a { @link counter } from a { @link configuration } .
<p > write . < / p >
safely closes the given { @link closeable } .
get a pathfilter instance of the given { @link <unk> } .
{ @inheritdoc }
returns a list of { @link path } s that matches the given { @link inputformat } .
{ @inheritdoc }
get a list of all the files in parallel .
generates a list of <unk> for the given list of blocks .
returns a { @link comparable } instance that compares { @link comparable } and { @link comparable } .
methode d ajout de la restriction <unk>
creates a <code > &lt ; column < / code > with the given value .
add a less than or equal to column .
gets the relationaloperator performing greater than equal to and less than equal to the given column .
/ * ( non - javadoc )
factory method for creating a new instance of { @link <unk> } .
create a new aggregating map expression using a backing treemap
/ * ( non - javadoc )
log a message at the debug level .
/ * ( non - javadoc )
log a message with the <code > info< / code > level of this <code > info< / code > object .
/ * ( non - javadoc )
log a message at the warn level .
/ * ( non - javadoc )
log an error at the error level .
this is a helper method that creates a { @link <unk> } from the provided { @link <unk> } . this is called by the { @link <unk> ( <unk> ) } .
/ * ( non - javadoc )
validates the given {
serialize a protobuf message .
allocates a new { @link <unk> } .
creates a { @link org . apache . schema . schema . schema . schema . schema . schema . schema . schema . schema . schema . schema . schema . schema . schema . schema . schema }
returns a list of {
<unk> the thrift set .
read the metadata from the given { @link inputstream } .
/ * ( non - javadoc )
initializes the given { @link org . apache . hadoop . mapred . <unk> } with the given { @link org . apache . hadoop . mapred . <unk> . <unk> } .
load all of the classes from the given class or interface .
/ * ( non - javadoc )
joins the given collection of strings with the given delimiter .
joins a collection of strings into a single string .
join an array of strings with a separator .
expand a glob pattern to a glob pattern .
requires that the given { @code int } is a valid unsigned value .
loads a { @link <unk> } from the given { @link classloader } .
creates a {
write the metadata file .
writes the given byte array at the given offset .
/ * ------------------------------------------------------------
create a { @link <unk> } from a arrow row .
maps a { @link <unk> } to a { @link schema } .
creates a joint schema between two schemas .
<p > <unk> . < / p >
converts the contents of { @link <unk> } into a { @link set } of { @link <unk> } s .
package private for testing
----- private methods -----
returns the primitive class for the given type .
get the logical type annotation
this method is called internally by the jsf engine .
decodes a { @link org . apache . hadoop . hbase . metadata . metadata } to a { @link org . apache . hadoop . hbase . query . <unk> } .
/ * package
returns a list of { @link node } s from the xml schema .
recovers the data page from the parquet file .
writes a long to the output stream .
<p > <unk> . < / p >
serializes an object into a base64 - encoded string .
utility method to read an object from a byte array .
adds a list of rows to the table .
adds a { @code <unk> } to this { @code <unk> } .
builds a new { @link <unk> } from the given { @link <unk> } .
removes the mapping for the specified key from this map if it is present .
add a new value to the cache .
{ @inheritdoc }
writes a {
/ * ( non - javadoc )
/ * ( non - javadoc )
create a { @link path } for the given filename .
/ * ( non - javadoc )
move the given path to trash .
returns a new {
get the class loader for the given jars .
create a new { @link classloader } for the given paths .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
reads the index from the given { @link <unk> } .
generates a {
converts a {
checks to see if any of the fields in {
create a new {
get a list of { @link <unk> } s of the given type .
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the specified tuple to the given record .
returns a map of key - value pairs keyed by the keys of the keys contained in the multimap .
opens a {
/ * ( non - javadoc )
skips the specified number of bytes in the stream .
reads a 4 bytes from this stream in little endian order low byte first .
read a start code from the stream .
creates a { @link <unk> } from a list of { @link splits } .
creates a { @link <unk> } from the given { @link org . apache . hadoop . mapred . <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a primitive type to a primitive type .
creates a new primitive type .
convert a primitive type to a primitive type .
returns a new {
create a new { @link <unk> } .
returns a new {
returns an instance of the {
determines whether the given {
factory method to create a saxparser configured to validate according to a particular schema language .
process the fields .
returns true if the given type is a valid map type .
/ * ( non - javadoc )
struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct . struct ( struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct struct
/ * ( non - javadoc )
write map topology
/ * ---------------------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
writes a 32 - bit integer to the buffer .
write a redirect to the server .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the schema for the given schema .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the list of files for the given job .
checks that the given files are missing .
get a list of all input files from the input path .
initializes this <tt > <unk> / tt > array with the specified number of bytes .
{ @inheritdoc }
read bytes from the stream .
reads the contents of the given { @link bytebuffer } to the given { @link outputstream } .
writes the contents of a { @link bytebuffer } to a { @link dataoutput } .
copies the contents of a { @link bytebuffer } into a { @link <unk> } .
reads all bytes from the input stream and writes them to the specified buffer .
parse the specified { @link java . util . list } of { @link list } of the specified { @link iterator } s .
initializes the {
publish a { @link <unk> } to a hadoop { @link <unk> } .
returns a lucene {
filter avro schema filter .
filter a subset of { @link <unk> } s .
creates a new {
set the { @link <unk> } of the given { @link converter } .
set the filter class to use .
/ * write a tuple to a <unk>
/ * <unk>
{ @inheritdoc }
recovers the data from the parquet file .
read a struct
reads a { @link <unk> } from the specified { @link <unk> } .
set the content of a set of objects .
reads a map of key - value pairs from the given map .
read map entry
exposes a list of <code > <unk> / code > as a list of <code > <unk> / code > .
read a single integer from the input stream .
little - endian or intel format .
little - endian or intel format .
read a { @link <unk> } from the given { @link inputstream } .
read the { @link <unk> } from the input stream .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
sets the {
----- interface <unk> -----
wraps an {
convert a collection to a raw string .
/ * ( non - javadoc )
writes the input stream to a file or directory .
get a { @link <unk> } from a json string .
creates a list of {
<p > <unk> . < / p >
checkstyle : off
adapts a list of { @link <unk> } s to a list of { @link <unk> } s .
create a new { @link <unk> } instance .
parse a schema from a schema file .
converts the given number of days to a number of milliseconds . <p > this is equivalent to calling { @link <unk> ( int ) } .
returns the current number of time in milliseconds .
get avro schema from a header .
converts a <code > java . math . bigdecimal< / code > to a <code > bigdecimal< / code > .
registers a { @link list } of { @link config } s .
/ * ( non - javadoc )
create a new xml blob
resets the table to its initial state .
/ * package
registers a task with the specified thread name .
create project store file .
returns the { @link <unk> } for the given { @link username } .
get the ldap entry from the users users .
get the roles for a given username .
returns a fetch filter for the given search filter .
authenticate user .
returns true if the user is authenticated .
binding for the { @link java . util . logging . <unk> } .
creates a map from the given arguments .
{ @inheritdoc }
/ * ( non - javadoc )
re - initializes the login context .
upgrade the { @link resource } to { @link <unk> } .
upgrade the stage to a list of issues
create a new { @link stage } for the given { @link stage } in the given { @link list } .
upgrades the given { @link stage } to a { @link <unk> } .
initialize the service configuration if it is needed .
{ @inheritdoc }
{ @inheritdoc }
converts the given { @code <unk> } to { @code null } .
returns true if the given name is a system class path .
changes for a specific topic
/ * ( non - javadoc )
inserts the specified element at the tail of this queue . if the queue does not contain the specified element it is removed from the queue .
returns the value associated with the given key or { @code defaultvalue } if the map is empty .
processes video output output output .
gets the descriptor .
gets all file descriptors .
returns a map of {
gets the descriptor for the given descriptor .
returns the fields of the given {
/ * ( non - javadoc )
convert a { @link <unk> } to a { @link <unk> } .
convert mmcif record to protobuf message
initializes the launch configuration .
/ * ( non - javadoc )
converts the <unk> .
gets the field value .
adapts a list of { @link <unk> } s to a list of { @link endpoint } s .
read a string from the buffer .
returns true if the given configuration depends on the given configuration .
adds the given stage to the stage . <p >
analyzes the { @link stage } of the given { @link stage } .
initialize the missing configurations .
validates stage .
{ @inheritdoc }
/ * ( non - javadoc )
process a response .
parses the response .
add the response headers to the response .
write the request cookies to the post request
gets the header value of the response header .
saves a metadata file to the cluster .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
checkstyle : off
determines if the {
try to parse the response .
package - private for testing
increment the offset of the source .
cleans up the response body .
gets the current record .
method to parse a list of { @link <unk> } s .
adds the authorization header to the response .
initialize the serde
/ * ( non - javadoc )
returns true if the property is defined .
read a <unk> object .
create a { @link <unk> } from the given { @link <unk> } .
returns the credentials provider for the given stage .
entry point .
delete an attachment from the alert .
adjusts the size of line .
scans the classpath for urlclassloader
removes duplicates from the given packages .
<p > <unk> . < / p >
/ * ( non - javadoc )
find the next entry in the <unk>
/ * ( non - javadoc )
starts a new database connection .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
reads up to <code > <unk> / code > bytes from <code > src< / code > into <code > bytebuffer< / code > .
creates a string representation of the given string .
builds the {
gets the channel provider .
generates a {
generate hive table from hive metastore .
generate hive table definition for hive table .
puts a { @link throwable } into a { @link <unk> } .
compiles the given expression .
/ * package
creates a jsonreader for the given input stream .
/ * ( non - javadoc )
{ @inheritdoc }
check the current iteration .
registers the given { @link aggregator } for this { @link aggregator } . < / p >
serialize an object into a json string .
converts the given string to an object of the given type .
converts a {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> <unk> <unk>
load a {
generates a {
<p > <unk> . < / p >
converts a {
returns a {
records the partition name of the partition .
returns the { @link <unk> } for the given { @link <unk> } .
validate the given table name using the given format .
returns the table index of the table
<p > hive . < / p >
queries the given {
returns the location of a {
returns the location of a custom record .
returns the avro schema for the avro table .
returns a {
iterate through the partition and populate the metadata .
create a new {
helper method to evaluate a scale expression .
this method forms a { @link linkedhashmap } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> { @link <unk> } {
creates a data stream from a collection of type { @link <unk> } .
validates the partition information .
returns the solr partition path .
publish a metadata file .
attempts to create an instance of the cache .
adds a query parameter to the query .
/ * <unk>
gets the request logs for a request .
creates a { @link <unk> } from the given { @link <unk> } .
******************** initialization ************************************
returns the {
{ @inheritdoc }
/ * ( non - javadoc )
wait for rate limit .
gets the table read context .
{ @inheritdoc }
parses a <unk> object into a java object .
parses the string representation of a date / time string .
causes the current thread to sleep for the given number of milliseconds .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
refreshes the {
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
converts a resource id into an {
create a new {
checks if the given record matches the solr field .
returns a list of all arguments for the given class .
validate the given fields .
handles a validation error .
/ * ( non - javadoc )
/ * ( non - javadoc )
tries to parse the specified jar file name from the given jar file .
parses a { @link <unk> } into a { @link dependency } .
/ * ( non - javadoc )
/ * ( non - javadoc )
validates the configuration .
enqueue a batch of records .
gets the label from a string .
/ * ( non - javadoc )
{ @inheritdoc }
fetches the credentials for the specified credentials .
build client configuration .
<p > gets the amazon s3 amazon s3 object . < / p >
creates a <code > <unk> / code > object from the given <code > <unk> / code > .
inetaddress we use to communicate to this node .
reads a secret from the vault .
this method is called to get the handler for the given operation .
write document .
/ * package
/ * utility method to build a list of mutations to a mutation .
execute the given action as a privileged action .
perform a subject action as a privileged action .
/ * ( non - javadoc )
builds a string representation of the preparedstatement
create a frame out of the { @link bytebuf } and return it .
extracts the frame from the buffer starting at the specified index .
signal that the ssl configuration is enabled .
prepare the login context .
connects to the server .
take a {
commits the next committed partition .
<p > cancel . < / p >
returns the difference between two strings
/ * ( non - javadoc )
create a detached completionstage that is detached from the pipeline .
create a {
register a function with the given function .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get a new record for this record .
clone this record .
returns a field named {
attempts to retrieve the { @link <unk> } instance associated with the specified { @link <unk> } .
puts a value into the cache .
list all recipients for a given identifier .
/ * ( non - javadoc )
checks if the needle is contained in the value .
replaces the value of the <code > value< / code > of the <code > value< / code > in the given <code > value< / code > .
delete alert resources
delete draft alert fragment .
returns the list of pipelines in a pipeline .
delete alert resources
/ * ( non - javadoc )
returns the relative path to the given base directory .
closes all {
issues a {
/ * ( non - javadoc )
return the operation code from the record .
returns a map of key / value pairs for the given record .
get the columns as specified by column name .
sorts the graph in ascending order .
{ @inheritdoc }
get the xmx value of the jvm .
unzip a zip file .
/ * ( non - javadoc )
returns the value associated with the specified key or <code > null< / code > if the queue is empty .
adds a runner to the queue .
/ * ( non - javadoc )
@param <unk> @param <unk>
/ * ( non - javadoc )
returns the last shard id for the kinesis video stream .
process a query parameter .
handle errors .
calculates the checksum of a column .
gets the login url for the request .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
generate verification string .
/ * ( non - javadoc )
creates a list of strings from a directory .
<p > <unk> . < / p >
validate that the given {
/ * ( non - javadoc )
checks if the current segment is empty .
publish project information .
ensure that the given path is under the correct path .
runs a {
returns a string containing the concatenation of the exception objects as a string .
retrieve the catalog from the database .
retrieves a description of the index specified by the given table name and table name .
retrieves a description of the table associated with the given table and table .
retrieves a description of the table associated with the given table and table .
invokes { @link <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang .
retrieve all index names
send a { @link <unk> } to a { @link <unk> } .
add a batch of metrics to the batch .
/ * ( non - javadoc )
<p > <unk> . < / p >
detect partition info
returns a list of all the partition values from the given { @link <unk> } .
generates a list of partition objects for a given table .
adds a new record to hdfs .
records the given metric value .
returns true if the passed {
the main method .
stop the current thread .
configures this {
replace the header value with the given request headers .
parse the given { @link httpservletrequest } into a { @link map } .
<unk> > <unk>
initializes the {
get the value of a field .
create a new { @link <unk> } instance from the given script object .
formats the given { @link java . lang . string } to a { @link field } .
loads a schema from the registry .
register a schema with a schema .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
write a string to the output stream .
reads a range of bytes .
<unk> > <unk>
process all records in the given message .
logs the module id map .
find the field name for a field .
/ * ( non - javadoc )
send a response to the server .
helper method to find the field offset for a field .
returns a list of all the records in the <unk> .
compares two versions of this version .
/ * ( non - javadoc )
get a list of all the edges of the graph as a list of directed edge vertices .
returns a collection of all the edges in the graph .
this method returns the similarity of two vertices in the graph .
serialize a map to a json string .
returns a map of key - value pairs from the input string .
handle a response .
listen to bucket notifications .
registers a file in the cache .
write offsets to the given file spec .
read the offset of the whitelist file .
create a new { @link <unk> } .
[ variable my_blob_name ]
[ variable <unk> ]
handles error handling .
allocate a file in gcs storage
opens a { @link <unk> } with the given { @link <unk> } .
/ * ( non - javadoc )
gets the counter for the given identity .
add a header to the set of headers .
parses the given string as a date .
returns the accept - accept header of the given array of strings .
<p > <unk> . < / p >
encodes the given string into a url - encoded string .
serialize an object to a json string .
deserialize the response .
get the client configuration .
create a new { @link <unk> } from the given { @link <unk> } .
helper method to get the table name from the given catalog .
create a {
<p > <unk> . < / p >
creates a schema from the given configuration map .
/ * <unk>
add the given map of jars to the job .
add the given jars to the given job .
{ @inheritdoc }
process the records in the { @link <unk> } .
shut down the {
execute the http process .
append field order by list field .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
produces a { @link <unk> } for the given { @link <unk> } .
get the offset of the file at the given offset
gets the instrumentation of the instrumentation .
builds the white list of white list .
<p > <unk> . < / p >
traverses the classpath .
gets the number of <unk> .
validate stage annotations
starts a batch query .
<pre > {
~ methods **************************************************************************************************************************************
[ variable <unk> ]
get the description of the task field descriptions .
check if the table is empty or not .
create a { @link class } instance from a { @link jsonobject } .
check if the field is nullable .
get the table schema .
get the column properties for the table
returns the class for the given type . <p >
install a list of seed nodes
try to get topic .
parses the string .
format a command .
/ * ( non - javadoc )
creates a new <unk> from the config .
creates a list of { @link string } s for the given field expression .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an input stream for reading the contents of the given input stream .
returns a { @link <unk> } that can be used to read the { @link <unk> () } and { @link <unk> () } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
create a { @link <unk> } from a { @link string } .
determine the required dependencies of the given stage .
removes all services that are available .
create a new { @link aggregator } for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
registers a {
/ * ( non - javadoc )
stops the aggregator instance .
stops the current aggregator instance .
/ * private void <unk> ( string field string value ) throws <unk> { if ( <unk> == null ) { if ( <unk> == null ) { throw new <unk> ( type ) ; }
<p > <unk> . < / p >
releases the connection .
close all pools .
translate a glob pattern to a {
binds the given { @link <unk> } to the given { @link <unk> } .
returns a list of <code > <unk> / code > objects that match the given <code > <unk> / code > .
returns a list of {
/ * ( non - javadoc )
returns the username for the given user id .
<unk> <unk> <unk>
stop a snapshot .
runs a {
creates a {
this method compresses the given list of { @link record } s into a bound { @link list } .
{ @inheritdoc }
/ * ( non - javadoc )
add a map of attributes to the map .
/ * ( non - javadoc )
get the lookup key .
create a { @link <unk> } instance .
this is a helper method that can be used to provide a way to do the work of generating a way to do the work off .
used by <unk>
waits for idle queue item to be idle .
<unk> > <unk>
queue data from table .
/ * ( non - javadoc )
try to read the { @link <unk> } from the given { @link map } .
/ * ( non - javadoc )
/ * [ deutsch ] <p > ermittelt die <unk> <unk> . < / p >
calls { @link <unk> ( <unk> <unk> ) }
push a docker image to the organization .
<p > <unk> . < / p >
returns the base url for the given url .
retrieve the status of the user .
logout user .
reads the token file .
create and update a properties file .
{ @inheritdoc }
handles a <unk> event .
/ * ( non - javadoc )
creates a { @link schema } for a schema field .
helper method to get the schema for a field .
create a schema for a schema .
gets the long value for the given field .
helper method to get the default schema for the avro schema .
initializes the { @link org . apache . gobblin . metrics . <unk> } with the given { @link org . apache . gobblin . metrics . <unk> } .
compares two batches of loaded paths .
returns the index of the group with the given name .
returns an unmodifiable view of the group names .
checks if the given string is a digit .
/ * package
check if the given string is already escaped .
/ * ------------------------------------------------- [ misc ] ---------------------------------------------------
/ * ------------------------------------------------- [ <unk> ] ---------------------------------------------------
/ * package private
returns a list of named group names .
replaces the tokens in the text with the replacement string .
splits the given text into an array of strings .
build a regex pattern
/ * ( non - javadoc )
/ * ( non - javadoc )
executes the <unk> .
get the list of schemas of the schemas contained in the given list of schemas .
remove expired entries from the map .
/ * ( non - javadoc )
fill the buffer with the next buffer .
try to ping the { @link <unk> } .
provides a list of { @link <unk> } s .
parses the given { @link inputstream } into a { @link <unk> } .
/ * ( non - javadoc )
converts the given string to an object type .
parses a part of a part of the form .
returns the index of the fields in the buffer .
returns the field represented by the specified byte array .
fetches the schema from the iterators of the given schema .
{ @inheritdoc }
gets the index table name .
/ * ( non - javadoc )
<p > <unk> . < / p >
return a list of table associated with the given <unk>
/ * ( non - javadoc )
retrieve all index mappings from the database .
create a custom field mappings for the mapping class .
/ * package
gets the table name .
sets the primary key for the given record .
/ * ( non - javadoc )
/ * ( non - javadoc )
load super records .
<p > <unk> . < / p >
/ * ( non - javadoc )
gets a batch of batch context .
returns a map with all the fields of the given type .
<p > <unk> . < / p >
/ * ( non - javadoc )
get a list of { @link alias } s for the hive table .
/ * ( non - javadoc )
this method builds the {
get condition expression for partition column
returns a map of column names to the given offset .
gets the offset format from the given model .
{ @link <unk> ( string map ) }
validates that the given { @link collection } is stored in the { @link <unk> } annotation .
/ * ( non - javadoc )
generates a new { @link <unk> } from the given { @link <unk> } .
upload a war bundle to the classpath .
uploads the bundle to upload .
loads the leader election .
read the bytes from the given { @link inputstream } and return the number of bytes read .
returns a list of { @link <unk> } s for the given generators .
parses a query string into a map of key - value pairs .
/ * ( non - javadoc )
<p > <unk> . < / p >
gets the operation .
/ * [ deutsch ] <p > konvertiert die angegebene dauer . < / p >
/ * ( non - javadoc )
{ @inheritdoc }
check if any of the attributes of a specific whitelist are whitelisted .
returns whether the given versions match the given versions .
/ * ( non - javadoc )
run job output output .
the main method .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the runtime configuration from the configuration .
/ * ( non - javadoc )
shuts down the executor service .
process a record .
validates the given list of errors .
/ * --- private methods ---
create a { @link <unk> } .
create a { @link <unk> } .
upgrade the { @link <unk> } bean .
returns a map of named { @link dependency } s from the given { @code charsequence } .
/ * ( non - javadoc )
{ @inheritdoc }
entry point of <unk> network .
creates a { @link map } of { @link field } s in a { @link record } .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
create a list of metrics .
removes the workspace from the <unk> .
get a list of { @link <unk> } s for the given { @link <unk> } .
/ * ( non - javadoc )
generates the list of attributes for the given file .
/ * ( non - javadoc )
/ * this method will throw an exception if the file already exists .
checks if the given file exists .
<p > <unk> . < / p >
convert a genericrecord to a data file .
write avro data to a file .
--- disconnect ---
validates a class .
validate a resource .
gets the field type .
asserts that the given { @link field } is a { @link field } .
gets the type of the field .
returns the type of the { @link field } field of the given { @link field repeated } .
calls { @link <unk> ( string string map ) } with the given parameters .
parses the result of a set of { @link field } s into a list of { @link field } s .
<unk> . <unk>
******************** initialization ************************************
/ * ( non - javadoc )
returns true if there are no cycles .
sets the pattern used to match the pattern .
append a string that matches the given replacement string .
/ * ( non - javadoc )
replaces all the occurrences of variables in the given string with the given replacement string .
returns a properties object that can be used to set up a topic .
gets the last field name from a path .
/ * <unk>
externalizes a { @link <unk> } and back { @link <unk> } .
standardize and double quotes .
ensure that the avro schema exists for the given name .
retrieve an asset ref from the database .
converts a { @link <unk> } to a { @link <unk> } .
creates a new { @link map } of { @link <unk> } s .
creates a new { @link <unk> } .
/ * ( non - javadoc )
format the offset of the object at the given offset .
gets the value of the given field as a java object .
execute a {
execute the alter table properties query .
execute a {
execute a resultset .
/ * ( non - javadoc )
return a pair of <unk> from a given table .
executes hive query .
executes a query .
produces a { @link <unk> } from the given { @link <unk> } .
execute a demo
for logging .
gets the {
/ * ( non - javadoc )
runs the given consumer on the specified {
/ * updating features
populates a map of fields from the given map .
gets value from field .
check if the port is valid .
handles an error .
handles an error .
/ * ( non - javadoc )
adds the document to the record .
process a single record .
attempts to reconcile the given operation .
get the data format for the whole file .
******************** initialization ************************************
<unk> ( <unk> )
returns an instance of { @link <unk> } for the given { @code classname } .
returns a new instance of { @link <unk> } with the given class loader .
returns a { @link java . util . resourcebundle } object for the given { @code <unk> } .
runs the given {
creates a new { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
adds a { @link <unk> } to this { @link <unk> } .
returns a list of key - value pairs .
convert principal attributes to person attributes .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds the input exceptions to the stage .
replaces the variables in the path .
ensures that the given path is a proper url .
generates the field for the metadata record for the given class .
converts a { @link <unk> } to a { @link <unk> } .
register a column type definition for the given column name .
start the <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new instance of a class reader .
issues a {
/ * ( non - javadoc )
commit the new part of the file .
determine if the record should be decoded .
produces a {
<strong > [ icu ] < / strong > sets the path separator string .
returns a { @link <unk> } for the given pattern . if the pattern is cached or if the pattern is cached or if the given pattern is not cached it is cached and cached .
convert a collection of strings to a string array .
returns true if the pattern matches the pattern .
commit the offsets of the specified file .
returns a list of all offsets for this file .
/ * ( non - javadoc )
reads logs from a file .
get the offsets of offsets in the offsets map .
liberty change for cxf begin
/ * ( non - javadoc )
/ * ( non - javadoc )
configures the http client .
/ * ( non - javadoc )
get topology metrics
determine the time based on the given metrics .
the main method .
serves a resource from the http response .
parses a header .
this method is to be called from <unk> and <unk> .
decode a map of parameters .
reads the next line from the buffer .
read boundary positions .
/ * ( non - javadoc )
save temp file to temp file
create an { @link sslsocketfactory } from the given { @link trustmanager } .
creates an { @link <unk> } from the given { @link inputstream } .
/ * ( non - javadoc )
returns the mime type of the given file .
/ * ------------------------------------------------------------
override this to customize the server .
/ * ( non - javadoc )
<p > <unk> . < / p >
sends the given { @link properties } object to the global { @link outputstream } .
send a file server to the output stream and sends it to the output stream
uploads an attachment .
creates a response for fixed length response .
creates a new fixed length response from the given uri .
creates a new { @link response } with the given message content .
/ * ( non - javadoc )
reads the websocket connection .
encodes a byte array into base64 format .
get the length of the solver .
read the payload from the stream .
write header .
adds a cookie to the request .
<unk> method .
remove session .
/ * ( non - javadoc )
/ * ( non - javadoc )
decodes a base64 encoded string into a string .
encodes the given string into a base64 encoded string .
set the name of the domain to use .
sets the table name .
/ * ( non - javadoc )
returns a new {
returns a new {
/ * ( non - javadoc )
gets the value of the requested property
/ * <unk>
store the ajax request
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
resolves the principal associated with the given session .
/ * ( non - javadoc )
returns the { @link map } of { @link session } s for the given { @link <unk> } .
/ * @override public void <unk> ( string <unk> ) { if ( <unk> == null ) { return <unk> ; }
/ * ( non - javadoc )
returns the jndi name of the { @link org . jboss . as . controller . name } of the supplied { @link org . jboss . as . controller . <unk> } .
returns an array of the given parameter types .
/ * ( non - javadoc )
/ * ( non - javadoc )
encode a portable object .
this method is used to clear the current lock on the current thread .
returns the raw value of an attribute as string . if the attribute is empty this method returns null .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an array containing all the elements in this group .
/ * ( non - javadoc )
{ @inheritdoc }
validates the credential .
checks if all of the following are the following : <ol > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> /
initialize the <unk> .
/ * ( non - javadoc )
this method is called by the <unk> () method before it is invoked by the <unk> () method .
return a new <code > <unk> / code > for a <code > <unk> / code > .
check if the orb objects should be cleaned up .
/ * ----------------------------------------------------------------------
checks if a freed object is dead
deserialize an object .
/ * ------------------------------------------------------------
/ * callbackhandler method
/ * package
increments the count of the read locks .
add a set of bdas to the deployment .
add a collection of bdas to the deployment
add a service to this bundle
{ @link <unk> ( string java . lang . string java . lang . string java . lang . string java . lang . string ) }
stop the <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
authenticate a directory .
instantiates a new { @link <unk> } .
------------------------------------------------------------------------------------- || :
/ * ( non - javadoc )
returns the { @link timer } for the given operation . <p >
sets the archives for all bean deployment archives .
create a bda and add it to the deployment
{ @inheritdoc }
/ * package
write the config file
create a list of { @link <unk> } s .
{ @inheritdoc }
sort class annotations by method name .
gets the configuration for the configuration .
{ @inheritdoc }
{ @link <unk> ( operationcontext org . jboss . dmr . modelnode org . jboss . dmr . modelnode ) } .
/ * ( non - javadoc )
/ * package private
/ * managamentxmldelegate methods
/ * ( non - javadoc )
returns true if the hibernate type is supported .
returns the address of the given { @link modelnode } .
sets the address of the operation .
creates a { @link modelnode } for the given operation .
returns true if the given operation is marked as removed .
creates a composite operation from the given list of entities .
creates a { @link modelnode } that can be used to add a { @link <unk> } to a { @link <unk> } .
creates an operation that can be used to read operations on the given address .
create a read - attribute operation .
creates a write - attribute operation .
creates an undefine - attribute operation .
{ @inheritdoc }
add a componenthandler with the specified componenttype and renderertype aliased by the tag name .
returns a { @link map } of { @link object } s of the given type .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
gets the canonical uri for the given request .
gets a list of messages from the deployment .
<p > modifies the { @link org . <unk> . <unk> . <unk> } for the specified { @link org . <unk> . <unk> } . < / p >
configure the endpoint config
push the context root to the root of the deployment
get the class name from deployment .
{ @inheritdoc }
/ * [ deutsch ] <p > ermittelt das <unk> <unk> . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
process security context setup security context .
sets the security context as identity .
returns the current { @link securitycontext } .
clear security context .
converts the given run as an { @link <unk> } to a { @link <unk> } .
converts the given run as an { @link <unk> } to a { @link <unk> } .
/ * ( non - javadoc )
returns the path to the given deployment unit .
encode a certificate chain .
installs a ticket service .
installs a new { @link service } to the given { @link <unk> } .
register an add operation .
sets the value of the specified property on the specified object .
prints the string representation of the java type to the given java object .
find a method with the given name and type .
find a field by its class name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------- [ misc ] ---------------------------------------------------
parse command - line options .
encode a certificate chain .
/ * ( non - javadoc )
/ * package
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
register a { @link <unk> }
verifies that the resource adapter is registered .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the current request is a <unk> .
build the request info .
invoked by { @link <unk> ( subject subject ) } { @link <unk> ( subject subject ) } { @link <unk> ( subject subject ) } { @link <unk> ( subject subject ) } { @link <unk> ( subject subject ) } { @link <unk> ( subject subject ) } { @link <unk> ( subject subject ) } { @link <unk> ( subject subject
reads the name attribute of an element .
reads the value of an attribute from an element .
read the required attributes from the given { @link <unk> } .
--- dependency analysis ---
f743 - <unk>
eap 7 . 0
creates a { @link <unk> } with the given parameters .
write parameters to the given output stream .
read an exception from an input stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
minioclient . <unk> () example .
initializes the server .
returns a list of potential methods for the given bean interface .
<strong > [ icu ] < / strong > returns a set of packages that are annotated with {
<p > puts the given { @link <unk> } into the queue . < / p >
write filter .
identify the order of modifications in the given order .
create a security context from the given domain .
clears the security context .
/ * ( non - javadoc )
sets the value of a header .
appends the given parts to the current line .
gets the owner of the current transaction .
release the instance .
releases a lock on the registry .
/ * ( non - javadoc )
write the contents of an inputstream to a virtual file .
starts the scheduler .
/ * ( non - javadoc )
sign a string .
constructs a { @link thread } from the given { @code runnable } .
adds dependencies to the module .
detect an existing { @link org . apache . beehive . netui . library . metadata . metadata } an { @link org . apache . beehive . netui . pageflow . annotations . deployment } an { @link org . apache . beehive . netui . pageflow . annotations . <unk> }
this method is used to build a { @link <unk> } instance for the given { @link component } .
invokes the endpoint method .
returns the { @link <unk> } for the specified { @link <unk> } .
checks if the given method is equal to the specified method .
returns the resource bundle resource .
/ * ( non - javadoc )
gets the { @link <unk> } value for the given { @link <unk> } .
this method is used to register a work work unit represented by xid .
{ @inheritdoc }
this method must be called from { @link <unk> ( work ) }
cancel a work work branch .
{ @inheritdoc }
checks if this endpoint is secure .
/ * ( non - javadoc )
/ * ( non - javadoc )
shamelessly copied from <unk>
create a new security domain context .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the omg idl exception name . <p >
returns the absolute name of the path .
----- private methods -----
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
check if the transaction is in a transaction
get the transaction synchronization registry for the current transaction .
sets the connection factory .
get alt name seq .
returns true if the given name is a valid filename name .
removes the exception name from the given name .
get an instance of { @link namingexception } under the given { @link throwable cause } .
get an instance of { @link namingexception } under the given { @link throwable cause } .
thrown when an exception is thrown .
return an enumeration of all elements in the collection .
unbinds the <code > name< / code > from the <code > <unk> / code > .
unbinds the <code > name< / code > from the <code > <unk> / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
if the given operation is an instance of the given { @link org . jboss . as . controller . operationcontext . stage#model } .
this method parses the connection attributes of a connection definition .
parse connection definitions
parse the connection controller attributes .
parse a xa pool
creates a new instance of this class .
construct an instance of a { @link <unk> } .
creates a new { @link <unk> } instance for the given { @link <unk> } .
region autocloseable implementation
merges the {
this method will be called by the caller to determine if a resource is wrapped in a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
verify that the given { @link <unk> } is a { @link <unk> } .
creates a new {
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the primitive type of the given primitive type .
/ * ( non - javadoc )
/ * ( non - javadoc )
evaluates the given sentence pattern and returns a list of { @link string } s .
get the servlets .
gets the servlet mappings for the specified servlet .
gets the list of security constraints from the given list of security constraints .
gets the login config for the application .
process the context parameters and add them to the list of attachment parameters .
gets the { @link <unk> } for the given { @link <unk> } .
convert the servlet init param to a list of <unk> .
factory method for creating a new { @link <unk> } .
factory method for creating a new web resource collection .
create a new { @link <unk> } instance with the given { @code name } and { @code <unk> } .
remove a servlet mapping .
factory method to create a new { @link list } of { @link <unk> } objects .
factory method for creating the ssl data constraint .
factory method for creating a new { @link httprequest } .
serialize a parameter value .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * method called to parse the value of an { @link <unk> } attribute .
register a {
/ * get the contents of the apimessageid field from the message header .
gets the tagged <unk> token associated with the given stage .
/ * ( non - javadoc )
this method creates a <unk> object for the given { @link <unk> } .
src / <unk> / <unk> / <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a transport address from the specified host and port .
lidb2617 . 11
$antlr start <unk>
encode a subject public credential .
/ * double
this method encodes the given { @link token } into a byte array using the { @link <unk> } method .
decodes an initial basic context token .
decode a byte array .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
process target targets .
initialize the extension .
gets the jndi name .
/ * ( non - javadoc )
/ * package private
/ * ( non - javadoc )
creates a new { @link <unk> } from the given { @link <unk> } .
/ * ( non - javadoc )
returns the type of the given url pattern .
helper method .
add a transaction to the transaction manager .
{ @link <unk> ( string string ) }
returns whether the resource adapter has been created .
extract the properties from the properties file .
load persistence unit .
load persistence unit name .
/ * ( non - javadoc )
returns true if the given { @code annotation } contains the given { @code annotation } .
starts the controller .
stops the service .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
called when the { @link <unk> } is suspended .
same as { @link <unk> ( object ) } .
adds the given { @link <unk> } to the { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
activate the manifest .
<p > gets the service name for a given capability . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
f743 - <unk>
detaches the {
returns the reference to this orb
/ * ( non - javadoc )
/ * ( non - javadoc )
f743 - <unk>
/ * ( non - javadoc )
{ @inheritdoc }
reads the class file transformer .
this method parses the given persistence unit persistence .
returns true if the persistence unit should be used for this persistence unit .
<p > creates a new entity from the specified properties object . < / p >
check if the target entity manager has been created .
lookup the entitymanagerfactory .
/ * package
performs remote directory lookup .
create the orb instance .
bindview annotated fields and methods for the specified { @link <unk> } .
create a virtualmachine wrapper .
obtain the current { @link <unk> } from the current { @link <unk> } .
runs the jndi {
binds an object to the naming service .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
internal bound method .
internal rename method .
/ * ( non - javadoc )
convenience method to lookup a list of { @link <unk> } objects .
modify the jndi path .
create an instance of { @link inputstream } with the given name .
/ * ( non - javadoc )
creates a new ldapname instance from the supplied { @link name } .
compose a string value .
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * helper methods
turns the list of { @link <unk> } s into a { @link map } .
/ * <unk>
/ * ( non - javadoc )
lookup the default value for the given annotation .
<unk> <em > <unk> / em > <em > <unk> / em > <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates an array of { @link provisionoption } instances .
get the status as a string .
check that the attribute is not empty .
send a { @link <unk> } to all registered { @link <unk> } instances .
executes the given { @link <unk> } on the given { @link <unk> } .
starts the given { @link <unk> } with the given properties .
adds the listener dependencies to the list of dependencies .
publish the given { @link eventlistener } to the given { @link <unk> } .
/ * ( non - javadoc )
extracts the set of properties from the database .
initializes the adapter .
retrieves the file name of the database . <p >
checks for database existence .
converts a string to a date .
/ * ( non - javadoc )
mark the {
checks if the given deployment is part of a process deployment application .
read parameters .
/ * ( non - javadoc )
writes an exception to the output stream .
this method is used by the default <unk>
provides a description of the description .
read the {
returns the index of the given xpath method .
/ * ( non - javadoc )
delete the child nodes with the generic level .
end <unk> creation
returns a { @link map } of { @link map } of { @link <unk> } s .
rehydrate an entity to an entity manager .
removes the specified keys from the stack .
extracts the current size of the specified object .
--- dependency analysis ---
process xml xml file .
update phase listeners .
returns the {
d413752 . 1 d413752 . 2
appends the given primitive type to the writer .
parse a digit from a string .
returns a string representation of the given class .
returns true if the string is a valid java keyword or not .
returns true if the given character is a brute force method .
returns the hashcode of a class .
<p > <unk> . < / p >
get method desc .
returns the wrapper for a class node .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link <unk> } for the given { @link <unk> } .
<p > <unk> . < / p >
starts the transaction manager manager .
/ * ( non - javadoc )
/ * ( non - javadoc )
replaces the value associated with the specified key in this map with the specified key .
copies all of the mappings from the specified map to this map .
converts a { @link modelnode } to a { @link <unk> } .
called by {
returns the class name for the given class .
create a new { @link timer } for the given { @link <unk> } .
returns the set of timers associated with the given <unk> .
returns the working directory for the given <unk> .
/ * ( non - javadoc )
<p > pattern . < / p >
/ * ( non - javadoc )
{ @link <unk> }
add a probe listener .
fire a probe event .
/ * package
creates a new { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
loads the current { @link <unk> } from the given { @link <unk> } .
adds the given subject to the subject .
create a { @link <unk> } for the given { @link modelnode } .
returns the { @link <unk> } for the given { @link operationcontext . <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
assigns the given { @link <unk> } to the given view .
returns the class for the given name .
substitute sub - elements in a string
substitute sub - strings from a string .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
creates a prefix prefix for a cross module .
get top deployment unit .
returns the postcard .
creates a new { @link <unk> } for the given { @link component } .
create an instance of { @link <unk> } .
method to return the reference to this orb instance .
returns a { @link list } of { @link <unk> } instances for the given container method . <p >
creates a view interceptor for the given {
adds a chained interceptor to the list of chained methods .
returns a lazy initialized list of { @link <unk> } instances . <p >
add a { @link <unk> } to the { @link <unk> } .
returns a new { @link <unk> } for the given { @link <unk> } .
puts the private key into the cache .
creates a new list of { @link classloader } s that combines all classes in the given { @link list } of { @link classloader } s .
get an exception reporting an unexpected xml element .
cleans up all resources of the given resource .
define a connection factory
<unk> { @link <unk> } <unk>
<em > <unk> / em > <em > <unk> / em > <em > <unk> / em > <em > <unk> / em > .
gets the endpoint name .
gets the endpoint id .
returns true if the current authentication mechanism is present in the web . xml .
returns the required attachment for the specified {
get an attachment from a deployment tree .
merges the { @link org . apache . gobblin . meta . <unk> } meta data to the specified { @link deploymentunit } .
/ * ( non - javadoc )
{ @inheritdoc }
returns the context root path of the deployment .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
setup the inactive initializers .
<p > this method creates an ssl credentials for the given properties . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
executes the given operation on the remote server .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of all resources that match the given path .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the properties of the persistence unit .
get the { @link <unk> } instance for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
process the annotations to extract annotations .
internal method to update the server config based on the server configuration .
/ * ( non - javadoc )
namespace { @link <unk> }
/ * ( non - javadoc )
start a new queue .
d413752 . 1 d413752 . 2
returns true if the <unk> is <unk>
returns the reference to the <unk> .
looks up the resource with the given name .
returns the base interfaces of this <unk> .
returns the type code of the given type .
method to generate a description for a free list .
decode string .
decode a percent - encoded string .
reads a string from the given byte array using the utf - 8 encoding .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a new {
/ * ( non - javadoc )
{ @inheritdoc }
returns whether the deployment is a valid deployment deployment unit .
<p > start . < / p >
get the handle for the timer . <p >
get the next timeout . <p >
resets the next time interval .
/ * [ deutsch ] <p > liefert die <unk> <unk> <unk> . < / p >
<p > <unk> . < / p >
throws an exception if the timer has expired .
sets the timer to the given { @link <unk> } .
merge a list of <unk> to a list of <unk> instances .
<p > <unk> . < / p >
get the reference to the orb for this user .
encode a certificate chain .
--- add module ---
adds the security handlers to the deployment .
/ * private void <unk> ( string <unk> ) { if ( <unk> == null ) { return <unk> . <unk> () ; }
returns a list of {
adds a new remote transaction to the root view .
add a { @link <unk> } to the { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
初始化<br > <unk> > <unk>
f743 - <unk>
f743 - <unk>
pick a random method from the specified class and method parameters .
determine whether or not the given method is a method level .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> () } { @link <unk> () } { @link <unk> () } { @link <unk> () } { @link <unk> () } { @link <unk> () } { @link
src / main / <unk> / <unk> / <unk> / org / <unk> . <unk>
parses a string .
/ * ( non - javadoc )
verify parameters .
performs a benchmark for a parameter type .
{ @inheritdoc }
this method determines if the given { @link element elements } is equal to the given { @code elements } .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new {
factory method for creating a { @link <unk> } from a { @link <unk> } .
<p > <unk> . < / p >
returns the class for the given class name .
returns the {
get or create a <unk> .
get the <unk> service .
get the <unk>
get the <unk> for the <unk>
documentation inherited from interface
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
escapes a string so that it can be inserted into a component .
returns the index of the first character in the given string .
executes the given operation on the remote server .
/ * ( non - javadoc )
/ * ( non - javadoc )
initialize the log configuration .
authenticate a user .
get the value of the type
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
dispatch lifecycle <unk>
/ * ( non - javadoc )
create a new service reference .
/ * ( non - javadoc )
gets the current selector .
create a { @link <unk> } from a { @link <unk> } .
create a { @link <unk> } from a { @link class } .
returns a list of instances of the specified instances .
get a class by name .
/ * ( non - javadoc )
asserts that the given session bean class is enabled .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
normalize persistence unit .
gets the client name .
/ * --- private methods ---
parse the given method descriptor .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link <unk> } with the given { @code <unk> } and { @code <unk> } .
creates an { @link <unk> } for the given { @link org . apache . wicket . web . spi . <unk> } .
/ * ( non - javadoc )
create the servlets .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * helper methods
returns the <unk> for the specified deployment .
/ * ( non - javadoc )
initializes the query handler .
returns a stub class for the given class .
<p > return the value of the <code > <unk> / code > property . < / p >
gets the id of an anonymous object .
converts a string to a comma separated string .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
shuts down the application .
add the deployment specific classloader
returns the class loader for the given class .
/ * ( non - javadoc )
/ * managamentxmldelegate methods
this method parses the <unk> for a given <unk> .
/ * ( non - javadoc )
this method obtains the xml schema from the given <code > reader< / code > .
this method reads the xml files from the given directory .
this method parses the { @link <unk> } and adds it to the { @link <unk> } .
/ * this method parses the <unk> attribute from the provided <code > reader< / code > . <p / > <p / > <p / > <p / > <p / > <p / > <p / > <p / > <p / > <p / > <p / > <p / > <p / > <p / > <p / > <p
this method parses the configuration of the given { @link org . jboss . as . schema . <unk> } attribute .
this method parses the <unk> from the given reader .
this method parses the security configuration for a property .
parses the security configuration for a security configuration .
parse users authentication configuration .
this method parses the generic property element for the given <code > reader< / code > .
this method parses the generic property from the given <code > reader< / code > .
this method parses the attributes from the given { @link org . jboss . as . model . <unk> } attribute .
{ @link <unk> }
/ * ( non - javadoc )
/ * ( non - javadoc )
write the configuration to the <unk> .
persist decorator configuration .
/ * ( non - javadoc )
write attributes .
returns { @code true } if { @code node } is writable .
/ * ( non - javadoc )
gets the persistence unit .
gets a list of persistence context references for deployment .
--- add module ---
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the current { @link <unk> } as a { @link <unk> } .
adds the persistence units to the deployment unit .
deploys an persistence unit .
deploys an {
sets the { @link <unk> } to the { @link <unk> } .
internal method to create a persistence provider based on a persistence unit .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a management console to management console .
----- private methods -----
/ * ( non - javadoc )
get the meta - data
gets the configuration meta data .
create enterprise bean metadata
/ * ( non - javadoc )
/ * package
returns the name of an existing {
returns the name of the given deployment unit .
returns the reference to this orb .
encode a certificate chain .
/ * ( non - javadoc )
parse an xml element binding .
/ * ( non - javadoc )
150727 - rewrote entire method .
bind a service to a service .
/ * ( non - javadoc )
get the class analysis for the specified class .
/ * ( non - javadoc )
creates a new instance of { @link <unk> } .
returns the package name for the given type .
converts an integer to a hexadecimal string .
converts a long to a hexadecimal string .
/ * ( non - javadoc )
gets the setter name .
returns true if the given method has non - null exceptions .
returns a list of all fields declared in the given class .
this method iterates over the interfaces implemented by this class .
returns the list of methods that are annotated with {
returns the base name for the given name .
/ * ------------------------------------------------------------
analyze constants .
/ * mbean methods
this function is used to fixup a set of overloaded methods .
creates the case where the case is holds .
calculates the hashcode of the class .
returns a string representation of the given string .
gets the repository id .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * method to get the attributes of the given remote domain element .
this method parses the attributes of the given {
/ * ( non - javadoc )
load a { @link <unk> } from the given module name .
the main method .
gets the reference to the <unk> .
encode a description of this attribute .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
this method is called by the ejb 2 . 1 method .
authenticate a request .
<p > creates a new instance of { @link <unk> } . < / p >
f743 - <unk>
creates a new jca session and returns it .
/ * ( non - javadoc )
/ * ( non - javadoc )
undeploys the deployment context .
{ @inheritdoc }
{ @inheritdoc }
prepare the transaction .
called by {
returns true if rollback is enabled for the given metric .
/ * ( non - javadoc )
eap 7 . 0
/ * ( non - javadoc )
generate the code handler for the given method .
generates the code for the given interface analysis .
find the code for the given interface .
construct a handler for the given interface .
{ @link org . jboss . as . controller . <unk> ( org . jboss . as . controller . deployment . <unk> ) }
returns an unmodifiable collection of all the names of the given surname .
return a new { @link <unk> } for the given { @link classloader } .
/ * ------------------------------------------------------------
create a directory context .
re - initialize the orb object .
get the orb object from the <unk> url .
initializes the url using the specified datasource .
visit a java object .
/ * ( non - javadoc )
gets an indy object for the given name .
<p > <unk> . < / p >
binds the specified java object to the specified name .
/ * ( non - javadoc )
call unbind unbind from the given name
unbinds the { @link <unk> } from this instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a { @link javax . naming . <unk> } instance based on the name of the { @link java . lang . object } .
call the destroy method on the given class .
removes the mapping of the given name from this instance .
modify a single context .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
eap 7 . 0
parse the security
parse security credential
/ * ( non - javadoc )
this method is used to write the {
write entity interfaces .
write cluster metadata .
write the {
get the audit manager
/ * ( non - javadoc )
get an authorization token
get the subject for the given security domain .
get the subject for the given security domain
get the subject version
remove the security domain for the specified security domain .
updates the commit context for the given context name .
/ * ( non - javadoc )
get a {
create a { @link <unk> } for the given security manager .
<p > <unk> . < / p >
create a new audit manager
<p > <unk> . < / p >
create a new mapping manager
used only with java 7 do not set
<unk> - <unk>
creates a new { @link <unk> } .
creates a new { @link class } with the given class name .
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
main entry point .
method to parse the <unk> from a <unk> .
gen - end : <unk>
wait for the given { @link <unk> } for the given { @link controller } .
creates a {
initializes the security vault .
starts the load operation .
/ * ( non - javadoc )
adds an attribute to the ==========================================================================
check the named attribute of the vault .
remove a named attribute from the vault .
get the attribute properties for a device .
/ * ( non - javadoc )
display the logo .
generate a string representation of the supplied policy .
/ * ( non - javadoc )
ensures that the given { @code value } is not { @code null } .
gets the deployment service name
register resource adapter identifier .
inserts the given element into the ring buffer .
/ * ( non - javadoc )
<p > checks if the argument permission is implied by this permission . < / p >
<p > checks to see if the given string is a stream of bytes . < / p >
/ * ( non - javadoc )
spawns a new { @link net . dv8tion . jda . core . entities . <unk> instance } with the specified { @link net . dv8tion . jda . core . entities . action . <unk> } .
--- this loop ---
/ * ------------------------------------------------------------
/ * ( non - javadoc )
sends a notification to the notification .
/ * ( non - javadoc )
/ * ( non - javadoc )
starts the { @link <unk> } with the given { @link transactionmanager } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the generic type of the given { @code type } .
gets the application service name .
returns all { @link <unk> } instances for the specified interceptors .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds the interceptors to the method .
register an interceptor for the given interceptor class .
set the naming mode .
add a { @link service } to this { @link <unk> } .
returns a list of { @link <unk> } instances for the given { @link method } .
/ * ( non - javadoc )
/ * ( non - javadoc )
liberty change end
creates a new { @link <unk> } for the given { @link <unk> } .
adds a { @link <unk> } to the list of { @link <unk> } instances .
creates a new { @link <unk> } for the given { @link <unk> } .
creates a list of { @link <unk> } interceptors .
/ * ( non - javadoc )
creates a list of { @link <unk> } instances .
add a { @link <unk> } to the { @link <unk> } .
creates a list of { @link <unk> } instances .
add a pre - destroy interceptor for the given { @link <unk> } .
<p > <unk> . < / p >
add the given { @link <unk> } to the list of { @link interceptor } s .
creates a list of { @link <unk> } instances for the given { @link <unk> } .
creates a new { @link <unk> } for the given { @link <unk> } .
<p > <unk> . < / p >
/ * ( non - javadoc )
get the effective typequalifierannotation on given annotatedobject .
get the protection domain instance .
finds the exported resources .
adds a list of entries to the context .
sets the transaction synchronization registry to use in the transaction .
set the { @link <unk> } of this { @link <unk> } .
returns the service name for the given application deployment module .
returns the service name for the given module .
binds the {
<unk> <unk> <unk>
defines a binding .
returns the { @link entitymanager } for the given { @link <unk> } .
returns the value of an attribute as a string . if the attribute is empty this method returns null .
/ * ( non - javadoc )
binds a { @link <unk> } to a { @link service } .
gets the current { @link concurrentmap } of { @link concurrentmap } s .
returns the reference to this orb
returns the type of the routes of the current vm .
{ @link <unk> ( <unk> ) }
returns the members of a group .
returns the members of the given type .
/ * ( non - javadoc )
creates a {
parses the attributes of a controller on the remote domain controller .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
start the server .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a { @link <unk> } for the given { @link <unk> } .
adds a new { @link description } to the given { @link <unk> } .
/ * ( non - javadoc )
create a { @link set } of { @link object } s for the given { @link <unk> } .
/ * ( non - javadoc )
gets the {
/ * ( non - javadoc )
eap 7 . 0
eap 7 . 0
eap 7 . 0
eap 7 . 0
eap 7 . 1
/ * ( non - javadoc )
{ @link <unk> }
sets the security context .
creates a new <unk> .
/ * ( non - javadoc )
/ * this method attempts to obtain a { @link <unk> } for the specified { @link <unk> } and { @link <unk> } .
creates an instance of the module .
check the version integrity for this version
<p > converts a <code > <unk> / code > to a <code > <unk> / code > . < / p >
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
returns the instance of the managed object .
/ * ( non - javadoc )
/ * ( non - javadoc )
configure credentials .
/ * ( non - javadoc )
/ * package
/ * ( non - javadoc )
get the type code for a class .
adds the type code for the given class .
create a java object for a java object
read a java orb instance .
internalxbasewithannotations . g : <unk> : 1 : <unk> returns [ eobject current = null ] : <unk> = <unk> eof ;
/ * ( non - javadoc )
generates a {
persistencedelegate . add ()
add <unk> operations
/ * ( non - javadoc )
returns an array of all the atoms in the tree .
/ * public void <unk> ( class obj ) { return <unk> ; }
returns the omg idl method name .
add an interface definition .
/ * add value to <unk>
add an exception to the <unk> .
returns the class level for the given annotation .
register a config mapping .
check whether the given { @link <unk> } is below the given { @link <unk> } .
/ * ( non - javadoc )
helper method to close the { @link <unk> } .
/ * ( non - javadoc )
--- add module ---
configure the token providers .
adds a { @link handler } to the list of handlers .
checks if the given { @code type } is assignable from the given { @code type } .
checkstyle : off
creates a new { @link <unk> } for the given { @link <unk> } .
<p > creates a new { @link <unk> } . < / p >
/ * ( non - javadoc )
gets all component classes from the given { @link <unk> } .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
create a timer for the given interval . <p >
/ * ( non - javadoc )
create a timer for the given interval . <p >
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the set of timers associated with the specified timers .
/ * ( non - javadoc )
create a timer for the given interval . <p >
f743 - 506
get the handle for the specified timer .
/ * ( non - javadoc )
suspends the timers and timers associated with the timer .
/ * ( non - javadoc )
create a non - persistent timer task .
/ * ( non - javadoc )
/ * ( non - javadoc )
cancels the timer .
returns a map of timers associated with the tx .
sets the transaction rollback only .
start the timer .
wraps the given { @link class } s { @link class } s { @link class } s { @link class } s { @link class } s { @link class } s { @link <unk> } and { @link <unk> () } .
returns all interfaces implemented by the given class .
filters the { @link javax . ws . rs . interfaces . <unk> } interfaces .
process the resource .
adds extra parameters to the endpoint configuration .
create a list of parameters for a given constraint .
process connectors .
{ @link <unk> ( operationcontext org . jboss . dmr . modelnode org . jboss . dmr . modelnode ) } .
returns a service name for the deployment .
returns the first argument for the given type .
convert a value to an object .
returns the argument types for the argument array .
searches for a method on the given class and returns it .
<p > find a method by name and parameter types . < / p >
check if the given type is a simple type .
/ * ( non - javadoc )
creates a new <code > object< / code > with the given <code > <unk> / code > .
/ * ( non - javadoc )
<p > <unk> . < / p >
adds the given properties to the properties file .
adds the given properties to the system properties .
associate the {
runs the registered { @link <unk> } and registers the { @link <unk> } with the given { @link <unk> } .
clear the health check instances .
gets a reference to the <unk> .
export a reference to the orb
register a new ldap context .
start the server .
/ * ( non - javadoc )
returns the value of the { @link node } represented by this { @link node } as a { @link enum } .
returns the value of the specified { @code value } .
returns an { @code optionaldouble } describing the value of { @code tostring } . if the node is { @code null } an empty { @code optionaldouble } is returned . if the node is { @code null } an empty { @code optionaldouble } is returned .
returns the value of the specified { @code value } in the specified { @code string } value .
returns the value of the given { @code node } as an { @code int } .
returns the value associated with the given { @link org . apache . dmr . modelnode } .
returns the value of the specified { @code value } .
returns the value of the specified { @code value } in the specified { @code string } value .
returns the optional property value for the specified { @code value } .
returns the value of the specified { @code value } .
returns the value of the { @link node } represented by this { @link node } as a { @link enum } .
creates a { @link resource } for the given { @link virtualfile } .
create an instance of { @link <unk> } .
create a new { @link <unk> } instance .
creates a set of { @link principal } s for the security identity .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
this method checks if the elements of the given {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
invokes a method on the managed object .
/ * ( non - javadoc )
/ * ( non - javadoc )
invokes a method on the managed object .
/ * ( non - javadoc )
/ * ( non - javadoc )
create the settings .
<p > <unk> . < / p >
/ * ( non - javadoc )
add a list of classloaders to the classloader
{ @link <unk> ( string pathaddress ) }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a { @link <unk> } to the { @link <unk> } .
this method removes the { @link <unk> } from the { @link <unk> } .
/ * ( non - javadoc )
reads a server element xml document .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
capture a context .
/ * ( non - javadoc )
add a collection of bdas to the deployment
initializes the module .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
acquires a resource from the pool .
add the given object to the pool .
returns the indices of all the elements in this table .
analyzes the parameters for this method and adds them to the list .
/ * ( non - javadoc )
refines patterns by clustering .
converts a { @link resource } to a { @link <unk> } .
initialize the extension .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
start the extension .
initialize the extension .
returns the bean deployment archives .
add a new weld injector .
returns a new { @link uri } for the given endpoint configuration .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an array of all classes that are declared in the given class .
returns an array of all classes declared in the given class .
/ * package
returns the constructor of the given class .
utility method to get a field from a class .
gets the steps for the operation .
/ * ( non - javadoc )
checks if the given parameter is allowed in the given resource type .
xs : attribute
returns the value of the given attribute as a node .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
cancel a set of mandatory elements .
sets the maximum number of concurrent requests to be cancelled .
change the type of the type .
copy data from a byte array to a buffer .
write a log sequence number to a { @link <unk> } .
clone a list .
<p > <unk> . < / p >
/ * ( non - javadoc )
creates an instance of { @link <unk> } .
extract field name from field definition .
generates a lambda expression for the operator .
implements the {
finds all classes that match the given package and package .
registers a list of classes that implement the interface .
returns the generic type argument for the given class .
returns the generic type argument for the given field .
<p > <unk> . < / p >
execute a function .
/ * ( non - javadoc )
returns the type for the field .
execute the command .
updates the current record .
returns the record for the given id . if there is no record in the cache it will return the record id .
execute the command .
/ * ( non - javadoc )
creates a { @link <unk> } from the given { @link bytebuffer } .
/ * ( non - javadoc )
creates a { @link <unk> } from the given { @link bytebuffer } .
write an object in the buffer .
begin snippet : <unk>
saves the edge .
calculate sharding strategy .
searches for all set of nodes in the given update query file .
gets all the servers that have all of the given resources .
calculates the target clusters .
translates a { @link projection } into a { @link dataset } .
replies if the given term is expected to be distinct .
determine if the given <unk> is a minimal query
update the visualizer menus .
converts a list of { @link <unk> } s into a { @link list } of { @link <unk> } s .
find the order by clause .
calculate the order by clause .
find the services that can be split for a given <unk>
add the criteria to the <unk>
adds sub - queries to sub - queries .
returns true if the link is in the given set of clusters .
/ * find the index of the index of the first column in the table .
add a new { @link <unk> } to the list of { @link <unk> } s .
get the order .
returns true if the {
find the best index for the given index .
returns a list of all elements matching the given predicate .
returns true if the given index starts with the given index .
/ * ( non - javadoc )
find the field search descriptor for the fulltext field .
disconnects the given {
change the type of the type .
/ * ( non - javadoc )
serialize the class name size + class name + class name + content + class + class + class + class + class + class + class + class + class + class + class + class + class + class + class + class + class + class + class + class +
execute a function .
checks if the user has permissions to access the requested resource .
check if the requested resource is defined .
get the compact server .
initializes the system database .
load the local databases .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the transaction isolation level .
sets the transaction isolation level .
re - create the object if possible .
called by cluster iterator .
creates a file
atomically move the given source object to the destination directory . if the source object is not a directory it is moved to the target file . if the source object is not a directory it is moved to the target location .
returns a list of all patterns that are disjoint .
execute locally only .
/ * ( non - javadoc )
convert a string to a date .
/ * ( non - javadoc )
execute the command .
read number of short items from the input stream .
merges items from the input buffer .
merges the contents of the given buffer into the given buffer .
writes medium integer values to the given buffer .
reads a number of bytes from the given buffer .
reads a long from the buffer at the given offset .
execute the create property .
execute the command .
{ @inheritdoc }
/ * ( non - javadoc )
execute the query .
returns the first element in the list .
gets the entry at the given index .
/ * ( non - javadoc )
creates a new file from the disk .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
rename a bundle .
execute a command .
/ * ( non - javadoc )
create a directory context .
--- host ---
connects to a remote server .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a database from the database .
create ddl string ddl string .
<p > init . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
gets a connection .
gets the connection .
{ @inheritdoc }
interrupt the connection .
/ * ( non - javadoc )
push a <unk> instance to a <unk> instance .
swaps the n elements at the specified index .
execute the lock .
evaluate javascript source .
deletes the vertex edge pointer .
apply the projection to the record .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
synchronized method .
update the metadata .
move the cursor to the previous record .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
execute the command .
returns the next character from the input stream .
execute the create property .
creates a request instance .
creates a <unk> instance .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the memory limit on the project .
get the physical memory size of the given directory .
this method returns the id of the index of the given operator .
execute the command and return the odocument object created .
writes a type id to the byte buffer at the given position .
/ * ( non - javadoc )
read the items in the buffer .
set the record as a boundary .
fill the title with the screen .
returns the value of the last step on the heap
/ * ( non - javadoc )
serialize the link .
returns the generic type of the given object .
/ * ( non - javadoc )
execute the command .
/ * ( non - javadoc )
{ @inheritdoc }
writes a database instance .
method to load a record from the database .
sends the given response to the given { @link <unk> } .
returns <tt > true< / tt > if the given array contains the specified number of elements .
check if the passed array contains the given <code > null< / code > .
/ * ( non - javadoc )
returns a list of {
assigns the default {
execute the query .
execute the command .
updates the starting at the start of the list of edges starting at the given start node .
get the list of all the files in the tree sorted by their original pattern .
/ * adds the record to the list
builds a select statement .
/ * ( non - javadoc )
returns a comparator that compares {
adds a { @link <unk> } to this { @link <unk> } .
{ @link <unk> }
gets the {
<p > <unk> . < / p >
finds the type of {
converts this object to a { @link stream } .
create a ddl ddl statement for the given index .
execute the create class .
builds a projection expression for the aggregate .
returns the {
returns { @code true } if { @code <unk> } is { @code null } .
serialize a single field .
returns the prefix for the given string .
sets the string value for the given string .
pseudo - randomly advances and sets the value of the given probe value .
/ * ( non - javadoc )
execute the create class .
read a json document from a url .
execute the command .
generates a new <code > <unk> / code > object .
gets the return value .
/ * ( non - javadoc )
creates a string representation of the input string .
checks if the algorithm has the specified algorithm .
creates the index .
/ * ( non - javadoc )
load order .
/ * ( non - javadoc )
{ @inheritdoc }
get the index of the partition .
/ * ( non - javadoc )
generates a ddl ddl ddl ddl for ddl generation .
append the given response to the given { @link <unk> } .
get the features .
removes an edge from the graph .
execute the create link .
check if changes to {
/ * ( non - javadoc )
parse timeout .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
execute the command .
returns true if the given record is evaluated .
combines two { @link net . dv8tion . jda . core . entities . <unk> entities . <unk> } instances into a subset of { @link net . dv8tion . jda . core . entities . <unk> <unk> } .
execute the command .
returns a list of the requested entries .
load a cluster .
free the given classfile .
this is called when the instance is ready to be reused .
this method is used to start the cache
<p > singleton . < / p >
add a new rule to the requested resource
add a rule to the requested resource
/ * ( non - javadoc )
write a float value to the output buffer .
execute the command .
converts a plan to execution results .
/ * ( non - javadoc )
/ * ( non - javadoc )
bind parameters .
method to convert the object requested .
/ * ( non - javadoc )
----- private methods -----
get the current type .
gets the current type .
convert a string value to a string value . if the value is <code > null< / code > then a <code > java . lang . object< / code > is returned .
increments the popularity of the number of elements less than the specified number of elements .
increment the bit at the specified position in this buffer .
resets the table to the beginning of the table .
returns the index of the first item in the hash table .
exposed for testing
creates and returns an { @link <unk> } for the given type .
sets the indexes of the indexes that have been configured to access the db .
gets the index of the property that can be used by { @link <unk> () } .
returns the linked class .
execute the command and return the odocument object created .
adds a { @link <unk> } to this { @link <unk> } .
creates the index .
converts the odocument object to a odocument object .
adds a new scanner to the list of servers .
add a list of node ids to a list of nodes .
sets the server owner .
{ @link <unk> ( string ) }
converts a { @link <unk> } to a list of { @link <unk> } s .
/ * ( non - javadoc )
/ * ( non - javadoc )
removes a listener from the set of listeners .
register a database with the database .
dispatches the response to the thread .
waits for a request to be notified when a request is received .
create the server .
invoke this method to create a new instance of this class .
serialize the record .
execute the save record .
/ * ( non - javadoc )
notifies the hash that a new pointer is about to be saved .
merge the given { @link <unk> } into this { @link <unk> } .
/ * ( non - javadoc )
get the result of a { @link <unk> }
execute the command .
close all databases .
this method prints out the storage of the storage .
returns a set of all of the factories in the request .
returns an unmodifiable set of all the factories .
returns the names of all the factories .
returns the field size and type of the field .
/ * ( non - javadoc )
write the files in the application .
write the records in the record .
write the record to the db .
saves the current response .
send a stream .
/ * ( non - javadoc )
move the record to the previous record .
/ * ( non - javadoc )
/ * ( non - javadoc )
opens a new database with the given parameters and password .
creates a new configuration item with the given name and value .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
process a request .
<p > <unk> . < / p >
completes a component operation .
gets the scaling of the given component in the pages pointed by the { @link <unk> } .
gets the read speed of the file in pages .
returns the amount of pages for the given container
gets the total amount of pages that have been read from a file .
gets the write speed of the given component
gets the amount of pages in the cache .
get the cache hits for the specified component .
gets the amount of registered { @code <unk> } for a given component .
merges the union of {
get the cache of cache counters .
/ * ( non - javadoc )
write the snapshot output .
pushes a counters to the current thread .
write a pojo record to a pojo .
increment the contents of the toc component .
stops the cache flush timer .
stops the sliding transaction .
this method is called when a component is read from the cache .
updates the full checkpoint timer .
symmetry preserving scale factors
/ * ( non - javadoc )
called by <unk>
called by <unk>
/ * this method is used to make sure that the buckets are skipped .
/ * ( non - javadoc )
execute sql statements .
returns the result of calling { @link <unk> ( string ) } .
execute a sql statement .
/ * ------------------------------------------------------------
initializes the receive thread .
start a ping .
try to reconnect to the given {
start a new daemon thread .
writes the matrix to <code > outputstream< / code > .
/ * <unk> .
removes a record from the graph .
sets the given { @link org . apache . commons . hbase . model . <unk> } object .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
save a dependency .
re - visible to create a object .
returns the unique identifier .
apply the projection to the graph .
<p > <unk> . < / p >
attaches the specified {
get the versionable graph object
/ * ( non - javadoc )
execute the injection .
sets the properties of the given object .
gets the enum value for the given enum type .
creates a new list of { @code <unk> } with the given parameters .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
define a vertex attribute strategy .
defines a custom attribute strategy .
imports the data from an input stream to an input stream .
loads the graph from the given properties file .
count the number of lines from the given file .
creates a new { @link <unk> } .
loads a { @link <unk> } from the given { @link inputstream } .
create a new { @link <unk> } .
/ * ( non - javadoc )
converts a { @link java . util . date } to a { @link persistable } .
creates a { @link <unk> } from the given { @link bytebuffer } .
called by class iterator .
called by cluster iterator .
add an index entry to the buffer .
add the given set of violations to the set .
/ * ( non - javadoc )
configure the database configuration .
gets the user .
check if the content of the requested resource is authorized .
build current record .
apply the projection to the graph .
parse the return return value .
/ * ( non - javadoc )
estimates the index of the given { @code operator } .
this method is used to check if the given { @link <unk> } can be applied to the given { @link <unk> } .
/ * ( non - javadoc )
create a copy of the given object .
/ * ( non - javadoc )
write a transaction .
decodes a utf - 8 encoded utf - 8 encoded utf - 8 encoded utf - 8 encoded bytes from the buffer starting at the given offset .
opens a new database using the given database and password .
gets a { @link iredisclient } object .
method to initialize all vital prerequisites
automatically create a { @link <unk> } .
creates a new tree if it does not exist .
creates a table if it does not exist .
creates a new { @code collection } of { @code <unk> } instances .
finds the best index for the given indexes .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a { @link set } of the keys for the given { @link <unk> } .
/ * update the singleton instance of { @link <unk> } .
writes a page to disk .
read the next page of the page .
returns the truncate counter .
read a page from disk .
/ * ( non - javadoc )
/ * ( non - javadoc )
runs the example .
/ * ( non - javadoc )
{ @link <unk> ( string string string ) }
get a new sort order .
check if the current cluster is a synchronous operation .
returns true if the specified value is read - only .
get a list of cluster cluster names .
returns a list of declarations owned by the specified cluster .
gets the list of all configured servers .
get the { @link cluster } instance associated with the given { @link config } .
/ * ( non - javadoc )
get the list of servers belonging to a cluster .
prime servers asynchronously .
refresh all configured configured servers
get all clusters on a server
finds all clusters owned by the given launch node .
gets the cluster owner .
saves the cluster owner to the cluster .
get the list of configured servers .
returns a { @link collection } of { @link roles } for the specified { @link <unk> } .
/ * ( non - javadoc )
set the data center for this model
returns the total length of the given data center
prime servers asynchronously .
get the data center servers .
gets the data center of the given server .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the write quorum .
saves the current transaction .
gets the data center configuration for the given data center .
/ * ( non - javadoc )
returns a list of all initialized {
encodes the lines in the array of strings .
get the names of the classes in the specified set of labels .
encodes the class of a class name .
create a new pojo object .
configure the sre .
execute the create method .
drop the index .
/ * ( non - javadoc )
execute a { @link <unk> } .
create a new { @link <unk> } .
create a new { @link <unk> } with the given class name and property name .
returns a new { @link <unk> } from the given { @link <unk> } .
serialize the link .
returns the vertices of the given class .
returns the lucene { @link vertex } for the given key .
returns the index of the field with the given name .
internal method used to retrieve an { @link iterable } of { @link vertex } s .
returns the number of edges with the given class name .
get the value of the edges .
/ * ( non - javadoc )
runs the example .
/ * ( non - javadoc )
returns the { @link <unk> } for the given { @link <unk> } .
returns the { @link <unk> } for the given class name .
create a new { @link <unk> } .
create a new { @link <unk> } .
returns the { @link <unk> } for the given class name .
execute the create property .
returns the number of edge type for the given class .
create a new edge type
returns the edge type for the given class name .
returns the edge count for the specified class .
apply the projection to the object .
execute the injection .
{ @inheritdoc }
/ * ( non - javadoc )
gets the indexed keys .
removes the edges in the graph from the graph .
removes the inverse edge from the graph .
deletes the edge object if any .
/ * ( non - javadoc )
fire the event to all registered listeners .
this method seeks to the unused space memory .
read the name of the name file entry .
/ * ( non - javadoc )
execute the command .
this method is called when the thread is started .
/ * ( non - javadoc )
/ * ( non - javadoc )
register the given { @link objectname } to the platform mbean server .
unregister the jmx bean
gets the amount of time per operation .
get the setup hits for the specified component .
fetch the {
adds a new task holder to the cluster .
adds the component counters to the specified component .
update the data holder for a given thread .
returns the entry requested entry .
lidb2018 - 1 method to compress data .
returns the value of the specified property or <code > null< / code > if the key does not exist .
create a new instance of the class of a class . assure to be called only once .
create a detached instance of this class .
detaches all objects from the passed pojo .
saves the contents of the specified object to the specified value .
saves an object to the database .
saves the model object to the given pojo .
returns the version number of the object in the pojo .
/ * ( non - javadoc )
create a new instance of this class .
execute the create method .
gets the version number of the object .
returns the version number of the object passed in .
convert a pojo parameter to a pojo .
returns an unmodifiable set of all the factories .
returns an unmodifiable set of all the factories .
creates an instance of { @link <unk> } .
returns true if the response is a valid bucket .
locates the local node context for a local node .
wait for the current thread to become available .
/ * ( non - javadoc )
answer a list of <unk> responses .
calculates the best { @link <unk> } for the given { @link <unk> } .
sends a quorum of responses to the response .
returns a list of received notifications .
execute the given <code > key< / code > with the given <code > <unk> / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
src / main / resources / org / drools / compiler / lang / drl5expressions .
parse the given { @link <unk> } into a { @link <unk> } .
acquire a catalog engine .
releases the database engine .
/ * ( non - javadoc )
returns the next record .
/ * ( non - javadoc )
returns <tt > true< / tt > if this map maps one or more keys to the specified key .
removes from the system
attempt to convert a value to a json object .
returns the value at the given position in the segment .
returns indexes of {
unquote a string .
jump past white spaces to the current position .
get the index of the character at the specified position .
returns <code > true< / code > if the given <code > string< / code > starts with the given <code > <unk> / code > ignoring case .
sets the fetch plan .
serialize filtered repair .
/ * ( non - javadoc )
this method adds a new { @link <unk> } to the { @link <unk> } .
execute the create link .
returns a list of {
sorts a list of { @link <unk> } s .
assigns the default {
creates a new instance of the given class .
/ * ( non - javadoc )
/ * ( non - javadoc )
deserializes the specified class .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
connects to a db instance .
execute the command .
prints the contents of the entry to the log .
returns an instance of the given { @link java . lang . object } .
returns the maximum jvm memory value .
checks if the maximum size of the memory exceeds the maximum size of the jvm .
this method resets the configuration of the configuration .
parses a { @link <unk> } from json .
creates a new vertex from the json string .
archive a { @link <unk> } to a { @link <unk> } .
parses a { @link <unk> } from a json { @link <unk> } .
create a new {
create a jsonobject from an element .
creates a new <unk> for the given element .
creates a jsonobject from an element of type { @link <unk> } .
creates a new { @link jsonobject } from the specified { @link <unk> } .
create a jsonobject from an element s type .
creates a jsonobject from an element of type { @link <unk> } .
compiles the given job .
gets the cluster .
write the object as a byte buffer .
decodes a serialized object .
read the content of the buffer
gets the comparator instance .
returns a list of all active clusters for the current cluster .
returns a list of all cookies for the specified server .
/ * ( non - javadoc )
create a ddl ddl ddl string .
parse a srid string .
build a { @link <unk> } from a { @link <unk> } .
create a copy of the given file .
creates a ssl encryption key from an input stream .
factory method for creating a { @link <unk> } from a keystore .
{ @inheritdoc }
encrypt a string .
encrypts or decrypts data with the specified password and returns an encrypted string .
decrypt an encrypted string .
decrypts field .
saves data data to an output stream .
{ @inheritdoc }
/ * ( non - javadoc )
{ @link <unk> ( byte [] ) }
returns a cryptographically - serialized version of the cname .
set the child context .
adds an object to the graph .
/ * ( non - javadoc )
{ @link <unk> ( byte [] ) }
/ * ( non - javadoc )
write an object to a byte buffer .
write a number of bytes to a bytebuffer .
get the field value .
connects to a remote database .
get the value for the given key .
returns { @code true } if the current object has the same content of the same content .
returns { @code true } if the current object contains the same content of the same content .
returns the remote address of this <tt > <unk> / tt > .
return the record for the operation .
record the current record .
import a transaction .
calculates the euclidean distance between two points .
returns the cost of a heuristic cost for a heuristic .
calculates the cost of the <unk> heuristic for the specified point .
calculates the intersection between the diagonal and the diagonal line .
calculates the distance between the two specified distributions .
get the squared area of the area .
get the begin point of this segment .
connect the begin graph to the graph .
/ * ( non - javadoc )
drop the collection .
sets up the pool indices .
/ * ( non - javadoc )
{ @inheritdoc }
/ * <unk> : <unk> > ... > ...
/ * ( non - javadoc )
returns the next token in the stream .
generate parse exception .
gets the properties of a connection .
gets the inverse connection name for the given field name .
serialize link .
gets the edge between the two specified nodes .
called by <unk> .
returns a list of all of the keys in the graph .
returns a list of all the vertices in the graph .
returns all edges of the graph .
create a link from the class name .
adds a new edge to the graph .
adds a new edge to the graph .
adds a link to the graph and returns it .
returns the number of edges in the graph .
find all edges with the specified direction
returns an { @link iterable } of edges .
/ * ( non - javadoc )
{ @inheritdoc }
get the foreign key class name .
gets the href .
<p > <unk> . < / p >
deletes the broken data .
execute the command .
returns a map of all the console methods on the console .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
installs a database from a given location .
/ * ( non - javadoc )
gets the appropriate role .
execute the create property .
execute the command .
wait for a random number generator .
returns the argument at the given position .
/ * ( non - javadoc )
connects to a remote server .
list all databases .
gets a list of databases .
creates a new database in a remote server .
creates a database .
/ * ( non - javadoc )
drops a database .
creates a database request .
release a database .
gets the cluster status .
execute the command .
/ * ( non - javadoc )
parse the retry .
/ * ( non - javadoc )
update the record .
delete the record .
convert the configuration object to a configuration object .
tag :: login - header []
config method .
/ * ( non - javadoc )
check if the specified resource is authorized .
commits the user .
/ * ( non - javadoc )
decodes a stream from a stream .
/ * <unk>
/ * ------------------------------------------------------------
write a stream of bytes to a stream .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
<unk> a line .
{ @inheritdoc }
creates a { @link <unk> } from the given { @link bytebuffer } .
/ * ( non - javadoc )
sets the pointer to the given value .
gets the key pointer for the given offset .
execute a cluster .
seals the current operation and returns the result .
execute an atomic operation .
acquires a lock on the lock manager .
acquires the exclusive lock .
changes the maximum amount of memory to use .
/ * ( non - javadoc )
writes the filestore state .
writes the filestore state .
create a { @link <unk> } for a remote host .
read the parameters .
applies the filter to the given { @link <unk> } .
shutdown the <unk>
adds the given key to the end of the map .
/ * ( non - javadoc )
/ * ( non - javadoc )
executes the runnable and returns the start of the open files .
returns the value to which the specified key is mapped or { @code null } if this map contains no mapping for the key .
removes all entries from the cache .
{ @inheritdoc }
/ * ( non - javadoc )
/ * package
called after a write operation completes .
performs a read - only retry on the given node .
reads the entry at the specified index .
returns the next power of two .
/ * ( non - javadoc )
/ * ( non - javadoc )
evaluate the event .
re - create any object if the class has a public constructor that accepts a string as unique parameter .
serialize the class name size + class name + class name + class name + class name + class name + class name + class name + class name + class name + class name + class name + class name + class + class + ...
/ * ( non - javadoc )
serialize the class name size + class name + class name + content + class name + class + class + class + class + class + class + class + class + class + class + class + class + class + class + class + class + class +
convert the given object to a record .
<p > <unk> . < / p >
returns a { @link <unk> } for the given type .
starts a broadcasting phase of the given request .
adds the given method to the list of shutdown methods .
initialize shutdown .
register a list of engine classes to be used .
add a file to the engine .
/ * ( non - javadoc )
returns a { @link <unk> } for the specified { @link <unk> } .
/ * ( non - javadoc )
execute the request .
remove the current state from the registry .
adds a new {
todo : explain
todo : explain
--------------------- checkpointing --------------------------
todo : explain
acquires a lock on the { @code <unk> } and returns { @code true } if { @code <unk> } is not { @code null } .
/ * ---------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of tokens that are currently in use .
utility method to set the logback configuration to the platform mbean server .
try to acquire a read lock .
returns true if the graph is labeled with the specified label .
returns the record label of the outgoing record .
removes the link from the graph .
returns an <code > <unk> / code > over vertices in this graph .
returns the output of this graph object .
returns the set of edges in the graph .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
removes the graph from the graph .
returns the set of vertexes from the graph .
converts the generated {
returns the class name for the given label .
execute the alter database .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
execute the command .
/ * ( non - javadoc )
/ * ( non - javadoc )
called by {
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a copy of the specified range of the specified range .
execute the create index .
serialize the link .
/ * ( non - javadoc )
parse a strategy .
/ * ( non - javadoc )
read a byte buffer from the buffer .
read a buffer from a bytebuffer
this method is used to determine the size of the next object in the buffer .
get the starting positions .
execute the command .
resolves the link in the given field value .
returns the { @link <unk> } for the given { @link string } content type .
execute the command .
intercepts the { @link <unk> } method .
fill the record .
sets the identity of the record .
sets the identity object to use .
sets the version of the record .
get the record type .
<unk> method .
/ * ( non - javadoc )
/ * ( non - javadoc )
--- exception ---
/ * ( non - javadoc )
convert the requested item from the record .
/ * ( non - javadoc )
/ * ( non - javadoc )
registers the given command instance with the given command instance .
configure entity .
creates a new { @link <unk> } for the given user .
/ * ( non - javadoc )
check if the user is authorized for the compilation .
authenticate entity .
create a list of entities that match the given criteria .
create a unique index for search .
/ * ( non - javadoc )
method that detaches all fields from the given object and all contained fields .
/ * ( non - javadoc )
creates a list of disabled properties from a list header .
execute the index .
creates a new { @link <unk> } .
reads the current value of the next atom from the current distributed object .
/ * this
execute the command .
<p > <unk> . < / p >
check that the user has access to the database
called by the iterator .
returns true if the current instance of the current instance is of the given class .
adds a base class to the polymorphic cluster ids .
add a list of clusters to the polymorphic cluster .
/ * ( non - javadoc )
serialize the link .
{ @link <unk> } <unk>
/ * ( non - javadoc )
read a byte stream from an input stream .
acquires a <unk> from the pool .
releases a previously allocated memory pool with the given { @code pointer } .
attempts to remove the expired entries from the cache .
removes all of the mappings from the specified map .
read an unsigned integer from the byte array at the given offset .
gets the persistence unit .
download the persistence from persistence to the persistence unit .
/ * ( non - javadoc )
write an int value in variable - length format .
pseudo 64 - bit generator
read an unsigned long from a byte array .
@param <unk> @param <unk>
installs a database from a repository .
extract the clusters from the database .
execute a database lock on the database .
try to dump the server .
returns the index of the first occurrence of the specified element in the given list . if the list is <code > null< / code > then <code > - 1< / code > is returned .
finds the first occurrence of the specified object in the given array .
returns the index of the first occurrence of the specified object in the given array .
parse sql .
{ @inheritdoc }
/ * ( non - javadoc )
get a unique identifier for a context .
applies the partial partial data to the result .
gets the context .
parse the plan .
/ * ------------------------------------------------------------
attempts to optimize the given {
/ * this method is used only by <unk> ()
gets the cluster status .
execute the query .
execute the create link .
/ * ( non - javadoc )
writes a record to the specified output buffer .
records the records of a file .
start a report .
update a {
called by the update thread .
called by <unk> .
get the value for the given key .
/ * ( non - javadoc )
renames a report .
/ * ( non - javadoc )
execute the command .
/ * ( non - javadoc )
/ * ( non - javadoc )
execute the create class .
/ * ( non - javadoc )
execute the alter database .
execute the command .
update the record .
deletes the record .
browse the current transaction
check if the user has permission to match against the specified command
execute the query .
saves the current count of clusters
/ * ( non - javadoc )
check if the user has a certain resource specific to the operation .
check if the user has permission to access the specified resource
check if the user has a certain resource .
/ * ( non - javadoc )
set user roles .
register hook hooks .
register a collection of { @link <unk> } s .
unregister the hooks asynchronously .
hooks the item hooks for the specified type .
set whether to disable manual db .
delete the record .
saves the record .
serialize the record .
/ * ( non - javadoc )
saves the class name to the specified class name .
saves the current transaction to the specified cluster
finalize the log cluster .
/ * ( non - javadoc )
saves the record .
/ * ( non - javadoc )
count the number of elements in the database .
returns the count of the given class .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > sets the position of the <code > blob< / code > value that this <code > blob< / code > object represents . the size of the returned array will be stored in the <code > blob< / code > value that this <code > blob< / code > object represents . < / p >
gets the relative index of the chunk .
returns the next word in the parser parser .
parses the given { @code <unk> } and returns the { @code string } value .
parses the next word .
parses an optional word .
parses the next word .
returns a list of all the nodes in the given group .
execute the create property .
mark the output dir of the job .
convert the item requested .
recover a transaction .
we can grant access to implicit tokens
/ * ( non - javadoc )
obtain a new access token for the given resource and refresh the access token for the given access token .
this is a {
register a singleton bean with the given name .
parse the properties for a given node .
cast a object to a java . util . date
get an integer value from the settings map .
/ * <unk>
fails the task with the specified task id .
gets the status of a task .
create a history for a given {
kills the task with the given id .
creates a task for the specified task .
deploy a task actor .
remove a task actor
suspends the specified task .
see { @link <unk> ( string ) }
assign the envelope to the slot
creates a new task for a pending task .
get the task model for the given task id .
create a task for this task .
creates a new task for the given task .
save a task to a task .
/ * ( non - javadoc )
parses a list of actors from the actors .
{ @link <unk> ( string list ) }
loads a resource stream from a classpath resource .
copy the contents of the input stream to the output stream .
copy the contents of the input stream to the output stream .
read config file .
/ * ( non - javadoc )
<unk> > <unk>
/ * ( non - javadoc )
init method .
externalizes a { @link datasource }
/ * ( non - javadoc )
get a jdbc connection from the given datasource .
returns the first value in the collection if it exists or null otherwise .
get the index of the field with the given name in the result set .
returns the value of the given result set .
returns a java . sql . resultset object from a jdbc resultset .
gets the database type .
retrieve dialect from database .
<unk> <br > <unk>
<p > <unk> . < / p >
fetch the { @link <unk> } from the given { @link configuration } .
initialize the access service .
returns the { @link order } by its id .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is called by the { @link <unk> ( execution ) } method of the { @link <unk> } .
create a new execution node .
lists the files in a task s directory on its compute node .
execute task execution .
/ * ( non - javadoc )
get a list of all the pages in the order that are associated with the given order .
executes the task .
this method is called by the {
execute a sql script .
runs the given { @link reader } and writes the given { @link reader } to the given { @link reader } .
<unk> <unk> <unk>
<p > <unk> . < / p >
returns a list of child elements with the given name .
<p > split . < / p >
clean invalid xml content .
{ @link <unk> ( string [] order ) }
assert that a string is not empty .
/ * ( non - javadoc )
transmits the difftask at the current time .
/ * this method is used to determine if the given { @link type } is { @link <unk> } .
this method is used to locate a list of { @link stringbuffer } s .
runs the given { @link order } and returns an { @link <unk> } .
gets the engine instance .
associates the specified <code > name< / code > with the specified <code > value< / code > .
adds a class to the context .
return a query for the given entity type .
finds a list of objects for the given class .
finds a mapped morphia object by its id .
/ * ( non - javadoc )
<p > <unk> . < / p >
callback from task execution
<p > <unk> . < / p >
returns true if the given value is a { @link java . lang . number } or { @link java . lang . integer } for the given { @link object } .
tries to load a class from the given class name .
creates a new instance of the given class .
creates a new instance of the given class .
get the list of all the nodes in the database .
writes the task models .
converts the given model classes to a list of model objects for the given model classes .
returns the start model of this node .
gets the node with the given name .
return true if the given classnode contains all subclasses of the given type .
gets the value of the given class .
<unk> > <unk>
gets the parameter with the given name .
adds a class to the cache .
creates a new { @link <unk> } instance using the given { @link <unk> } .
/ * ------------------------------------------------------------
/ * parser
returns the value of the specified field from the given object . if the field does not exist in the object null is returned .
<unk> <p > <unk> / p >
/ * ( non - javadoc )
finds a method with the given name .
schedule a job .
/ * ( non - javadoc )
set the model .
{ @inheritdoc }
{ @inheritdoc }
evaluates the given { @code element } against the given { @code element } .
<p > create a <code > <unk> / code > for <code > config< / code > . < / p >
/ * ( non - javadoc )
initializes the mapping from the given {
<unk> > <unk>
<p > <unk> . < / p >
updates the type of the entity .
returns the { @link process } identified by its id .
gets the { @link process } from the specified { @link <unk> } .
method to deploy the given input stream
connects to the database .
<p > undeploy . < / p >
gets the document from the history .
returns a list of all the { @link filter } objects that match the given filter .
returns a list of all the elements in the given collection that match the given filter .
removes the metadata from the cache .
inserts the given entity into the cache .
parse a xml document into a topic model
parses the given node name and returns it .
/ * ( non - javadoc )
get the list of all the task models for the project .
create a new { @link execution } instance .
{ @inheritdoc }
runs the given { @link execution } .
/ * ( non - javadoc )
check if the clustering result can be rejected .
/ * ( non - javadoc )
{ @inheritdoc }
creates a new { @link <unk> } instance .
returns a { @link <unk> } for the given { @link descriptor } .
/ * ( non - javadoc )
returns true if the given string matches the pattern .
<p > <unk> . < / p >
create order .
cancel an order .
runs the <unk> .
<p > <unk> . < / p >
runs the given order .
adds an order id .
adapts a <unk> to a limitorder
monitor the status of the task .
returns a {
removes the specified { @link <unk> } from the history of the given { @link <unk> } .
builds a map from a list of arguments .
returns a map of key / value pairs for the given pattern .
gets the connection .
<p > save . < / p >
<p > write . < / p >
/ * ( non - javadoc )
converts a json string to an object of the given type .
returns the value of the specified property or <code > null< / code > if the key does not exist .
returns the integer value associated with the given key as an integer .
load properties from the properties file .
/ * ------------------------------------------------------------
reads a line from the given byte array .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
skip over the specified number of bytes in the stream .
/ * ( non - javadoc )
creates a new { @link <unk> } with the specified range .
ensure that the length of the array is equal to the length of the specified length .
compute the union of two sorted arrays
returns the upper bound of the first positive integer .
returns the upper bound of the first character in the specified sorted order .
copies the specified range of elements from the specified position to the specified index .
swaps the elements in the specified array .
sorts the specified list using the specified comparator .
sorts the specified range into ascending order .
exposed for testing
returns the bit with the given value .
/ * ( non - javadoc )
{ @inheritdoc }
opens a file .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * <unk>
blocks until all futures are complete .
newservice () creates a { @link <unk> } from a { @link supplier } .
returns a stream of the matches of the specified query .
this method is used by the <unk> to lookup a single container .
/ * ( non - javadoc )
gets the matching key .
gets the matching ordinal .
sets the capacity of the given long index to the specified value .
start the delete operation .
returns a hashcode for the specified field .
convenient method for {
get the transitive closure of the specified job .
add a <unk> relation to the specified schema .
factory method for creating a { @link <unk> } from the specified { @link schema } .
checks to see if the specified resource is valid for the specified one .
/ * ( non - javadoc )
*********************************************************************** <unk> () is called from <unk>
schedules a new <unk> for the specified <unk> .
read header tags from a stream .
prettyprint the specified object to the specified object .
unmarshal multiple { @link object } s into a { @link list } .
populate the specified record with the specified object .
/ * ( non - javadoc )
removes all of the mappings from this map .
returns a boolean indicating whether this set starts with the given path .
returns a bit set containing only the subset of the specified thread colors .
returns the segment at the given index .
handle the specified <unk> .
validates the specified <unk> .
<unk> - <unk>
loads the { @link <unk> } from the { @link stream } .
returns a boolean set to the specified cardinality .
see { @link <unk> ( long ) }
load the specified password from the specified input stream .
/ * ( non - javadoc )
<unk> . <unk>
sets the specified 64 - bit integer at the specified index .
<p > copies the contents of the source <code > <unk> / code > into a <code > <unk> / code > object . < / p >
copies the contents of the specified data into this buffer .
compares two byte arrays .
copy the contents of a segmented file into this buffer .
copies all the bytes in the specified array into the destination array .
reads a number of bytes from an input stream .
writes a range of bytes to the given output stream .
increases the capacity of the given segment index .
gets the index of the field with the given name .
for internal use only .
{ @inheritdoc }
factory method for creating a new instance of { @link <unk> } .
creates the specified directory .
factory method for creating a new instance of the specified { @link directory } .
/ * ( non - javadoc )
returns a list of all the parameters of the given type .
/ * ( non - javadoc )
register all the schemas in the given schema schema .
creates a new instance of <unk> from a set of <unk> .
enables or disables the clipboard .
publish a { @link <unk> } to a collection of { @link <unk> } s .
merges the specified <unk> from the specified <unk> .
add listeners to the specified type .
create a new { @link <unk> } for the specified url .
create a new { @link <unk> } for the specified { @link <unk> } .
create a new { @link <unk> } for the specified { @link <unk> } .
retrieves the specified <unk> from the specified path .
/ * ( non - javadoc )
behaves similarly to {
checks if the specified property is valid for the given version .
this method initializes <unk>
returns the values of devicedata .
returns a <unk> for the specified prefix .
----- private methods -----
gets the previous value change percent percentage .
/ * ( non - javadoc )
merges the specified <unk> with the specified type .
add self configs to self class .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
factory method for loading lines from a string .
/ * ( non - javadoc )
factory method to create a list of <unk> from the given catalog .
version&schema - specific filling into the impl
/ * ( non - javadoc )
returns the value at the given index .
return the subset of the records in the specified field value .
return a map of the fields of the specified type .
/ * ( non - javadoc )
sets the paths of the element paths .
<unk> <unk> <unk>
add a diff between two nodes .
entry point for <unk> .
/ * ( non - javadoc )
deploy this connection .
waits for the specified amount of time to refresh the specified memento .
trigger a protobuf update message .
loads a saveable object from this file .
loads the given <unk> from the specified <unk> .
creates a new instance of the specified {
creates a new {
this method is used to create a <unk> based on the specified objects .
this factory method creates a { @link <unk> } from the specified time .
this method returns a list of { @link <unk> } objects from the specified type .
returns the index of the last occurrence of the last occurrence of the specified element .
run the transaction cycle .
executes the given { @link <unk> } and executes the given { @link callback } .
converts the specified { @link <unk> } to a { @link <unk> } .
/ * ( non - javadoc )
writes the specified password to the specified output stream .
returns the required bits for the given field .
gets the <unk> for the specified <unk> .
sets the primary keys for the primary key .
combines the specified {
write a byte array to the output .
returns the field type for the given field position .
writes medium integer to the given buffer .
writes a fixed length long to the buffer .
returns a stream consisting of the elements of this stream according to the given action .
return the <unk> for the cell .
sorts the elements in this array .
returns the hash value of the specified key in the given { @code key } array .
/ * ( non - javadoc )
adds an element to the list of nodes .
returns the elements of the given node .
******************** resizing ******************************************
/ * package
deserializes the given serialized representation using the given serialization representation .
implements the <unk> .
determine the index of the <unk> for the given block .
/ * ( non - javadoc )
sets the { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link
compares the image with the given key .
resizes the bucket size .
/ * ( non - javadoc )
figures out the number of entries in the map .
returns a {
/ * ( non - javadoc )
/ * ( non - javadoc )
find the match for a given key
newservice () creates a new service from a class .
swaps the state of the {
pull the gene aliases from the given reader .
parse a schema from an input stream .
get the default type arguments for the specified type .
calculates the size of the given number of elements .
/ * ( non - javadoc )
given a {
method to write a snapshot to the given output stream .
/ * ( non - javadoc )
将 { @link <unk> ( string list ) }
returns a string representation of this version .
/ * ( non - javadoc )
<p > <unk> . < / p >
converts a field name to a member name .
load the specified element into the backend .
returns a 128 - bit hash of the specified objects .
<p > <unk> . < / p >
used to schedule a duration .
adds the specified type to the diff .
for testing .
this method is called to calculate the difference between the specified <unk> and <unk> .
*********************************************************************** <unk> () ;
/ * ( non - javadoc )
writes a long value to the given buffer .
writes a long to the output stream .
writes a byte to a byte array .
writes a byte to a byte array .
writes a byte to a byte array .
reads a variable number from the byte array .
reads a tag from the stream .
reads a zero - length encoded long from the input stream .
returns the length of the next sequence of bytes in the byte array .
reads a tag from the stream .
compute the number of bytes in {
count the number of bytes in the buffer .
/ * ( non - javadoc )
add the given view to the body list
creates and returns a { @link <unk> } to be used by the { @link <unk> } .
called when a value is attached to the iq
this method should be called after {
refresh the loading view .
sets the visibility of the header .
/ * ( non - javadoc )
pulls a { @link <unk> } from the { @link <unk> } .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
scrolls the given { @link <unk> } .
handles the {
called when the activity is first created .
/ * ( non - javadoc )
adds a condition to the rule builder .
/ * ( non - javadoc )
returns the selected value .
get the value of the <code > name< / code > property as a <code > <unk> / code > .
returns the value associated with the given key as a string .
returns the value associated with the given value or <code > null< / code > if the key does not exist .
returns the value of the named property as a double .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the value of the rule rule .
add a list of rules to the rule .
create a rule builder using {
creates an instance of { @link <unk> } .
creates a new instance of { @link <unk> } .
/ * [ deutsch ] <p > erzeugt einen neuen <unk> . < / p >
creates a new { @link builder } for the given result type .
/ * [ deutsch ] <p > f&uuml ; gt eine regel hinzu . < / p >
/ * [ deutsch ] <p > erzeugt eine <unk> < / p >
shrinks a rule to a rule builder .
/ * [ deutsch ] <p > erzeugt eine <unk> < / p >
shrinks the rule to a new rule .
converts a list of { @link field } s to a { @link list } of { @link <unk> } s .
creates a copy of the rule .
/ * ( non - javadoc )
adds the given model to the batch .
add a filter to the resource
add a rule to the tail of the rule .
<p > <unk> . < / p >
returns the {
returns a list of methods annotated with the given annotation .
returns the methods annotated with the given annotation .
get all annotation of the given type .
creates a {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
applies the given { @code action } to the result of { @link <unk> () } .
/ * ( non - javadoc )
/ * ( non - javadoc )
registers a new reference to the registry .
update the status of the rule .
get the status of the rule .
/ * [ deutsch ] <p > f&uuml ; gt die angegebene <unk> . < / p >
adds a { @link rule } to the { @link router } .
adds a { @link rule } to a { @link rule } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the {
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
returns a { @link <unk> } which applies the given action to the rule .
adds a { @link <unk> } to the default { @link <unk> } .
closes the connection .
/ * ( non - javadoc )
/ * ( non - javadoc )
one of ways of creating builder .
<p > erzeugt eine <unk> f&uuml ; r die angegebene rule . < / p >
creates an instance of the { @link <unk> } for the given { @link <unk> } .
<p > <unk> . < / p >
combines the two arrays into a new array .
<p > adds all the elements of the given arrays into a new array . < / p >
read empty line from table .
skips the first line of the table .
helper method to create a new deployment
initializes a new service .
convert a list of statistic objects to an array of statistic objects .
extract a map of labels from a template .
extract ports from images .
returns the list of ports for the build .
extract the list of port values from a list of ports .
parse a port mapping .
find the port if it is not null .
shifts the {
/ * ( non - javadoc )
add a { @link <unk> } to a { @link service } .
build an image stream resource .
enroll a service .
returns true if the port is a container port .
converts the given service name to a { @link <unk> } .
gets the host and port of the service .
registers a map if it does not already exist .
merges the given map with the given { @code <unk> } .
creates a sub - map from the supplied map .
add a value to the list if it does not already exist .
ensures that templates and label are compatible
<p > updates the containers associated with the template . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . < / p >
merges the docker container with the given container .
wait until a pod is deleted .
returns the name of the image with the given name .
/ * ( non - javadoc )
validate that the given string is a valid metric name .
returns a list of { @link <unk> } s from the given { @link <unk> } .
returns the version of the resource as string .
counts the number of occurrences of the given closure condition .
/ * ( non - javadoc )
returns whether the pod is ready for the pod .
returns the current user s context property or null if not found .
adds a { @link <unk> } to the list .
replace the request properties with the given properties .
adds a shutdown hook to the jvm .
waits until the specified port is in the pod .
create the class loader for the given classpath elements .
/ * ( non - javadoc )
find the plugin version from the list of plugins .
find a plugin by its id .
create a {
gets the version string .
check if the redo shift is open .
reads a list of resource fragments from the specified list of resource files .
/ * ( non - javadoc )
reads the version of the specified file and returns the context .
/ * ( non - javadoc )
convert a list of environment variables to environment variables .
<unk> / <unk>
merge multiple menu items .
merges the given map with the given error parameters .
collects the containers in the current packing spec .
{ @inheritdoc }
flatten http : // www . aws . amazon . com / <unk> / <unk> / <unk> . html
returns a { @link map } containing all the keys in this map .
add a port to the map if it is valid .
/ * ------------------------------------------------------------
returns the registryauth for the given server .
convert an object to a list of maps .
get the secret properties .
download the ocsp response from a service to a given location .
choose a random port from the specified range .
compare two strings .
/ * ( non - javadoc )
creates a { @link <unk> } from a { @link <unk> } .
returns a { @link list } of { @link profile } s for the specified { @link file } .
returns a list of profiles from the classpath .
/ * ( non - javadoc )
find the mime type of a profile .
gets a list of profile paths from the classpath .
loads a list of attachments from an input stream .
prepare a list of mime files .
fetch pulls on a repo
marshall the given resource with the given default value .
returns the pippo executor mode .
override this method to get the number of api requests
returns the first child element of the given parent element .
returns the text content of a node .
/ * ( non - javadoc )
apply the geometry to the geometry .
render template .
installs the template until it is running .
apply a service account .
remove a tag from a list of tags .
applies namespace to the list .
creates a new project .
/ * ( non - javadoc )
gets the namespace .
/ * ( non - javadoc )
add a line to the rule .
ensure that the class loader of the given project is a spring <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the metadata .
get environment variables .
/ * [ deutsch ] <p > konstruiert eine neue verschiebung auf basis einer geographischen l&auml ; <unk> . < / p >
/ * [ deutsch ] <p > interpretiert den angegebenen <unk> und zu einer <unk> dauer . < / p >
scans the given directory and returns a list of all files in the directory .
returns true if the service is a valid ports .
requests that open shift feature information .
check if the rule has a secured or more rule .
returns the project directory for the project .
returns the root project for this project .
{ @inheritdoc }
parses the given { @link inputstream } into a map of { @link <unk> } objects .
initializes the list of { @link <unk> } .
initializes the default { @link <unk> } .
creates a { @link <unk> } for the given { @link <unk> } .
<p > <unk> . < / p >
<p > <unk> . < / p >
extract the icon from the button .
used internally to get the default category .
populates a list of files from a zip file .
check if the icon string is a valid icon .
get spring boot properties
loads properties from a resource .
helper method to get the { @link <unk> } from the given { @link project } .
create a list of service objects from the given paths .
instantiates a writer using a list of <unk>
helper method to log a list of mbeans
get the content of the application .
gets the raw configuration .
this method is used to retrieve a property value .
sets up rules for validating rules .
validate message .
/ * ( non - javadoc )
returns the artifact id for the given artifact .
gets the list of watchers from the <unk> .
gets the api version .
returns a list of resolved image configuration .
store the given timestamp in the given file .
[ variable <unk> ]
returns true if the specified bean is equal to the specified class .
ensures that the value of {
returns the value associated with the given { @code key } if it exists and is a { @code null } value . if the key does not exist or is empty the default value is returned .
returns the value associated with the given key or { @code defaultvalue } if the key does not exist .
returns an unmodifiable view of the script variables .
prepares a list of named processors for a given list of named classes .
adds a merged config to a { @link mapconfig } .
convert a list of { @link string } s to a { @link list } .
adds a { @link <unk> } to the { @link <unk> } .
initializes the latke . <unk> .
returns the docker image name .
replies the registry registry .
returns the absolute path to the given url .
returns true if windup is configured . <p >
webdav propfind method
converts a throwable to a list of causes .
get the value of the property from the system property .
get the {
creates a <unk> .
create a new transport node .
applies the instrumentation .
/ * <unk>
adds the given field to the document .
adds a mapping to the given map .
creates a { @link <unk> } from json .
gets the acl for the client .
create new client metadata id .
creates a { @link <unk> } from a json string .
creates a new { @link <unk> } object from a json string .
fetch the capabilities of the fragment from the fragment .
enroll a privilege .
register a { @link <unk> } with a { @link <unk> } .
creates a { @link <unk> } from a json string .
parses the document from json .
open the app settings screen .
this method is used to authorize a user .
creates a { @link card } object from a { @link jsonobject } .
<p > <unk> . < / p >
create a <unk> object from json string .
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieves the authorization data for the given path .
creates a new <unk> object from the given json object .
gets the { @link <unk> } from the json response .
start live validation data .
this method is used to generate the snapshot .
<p > unregisters the { @link <unk> } from the device . < / p >
gets the metadata for the downloader .
returns <code > true< / code > if the given <code > <unk> / code > is valid .
redirect to provider .
delete a { @link <unk> } from a { @link <unk> } .
create a new { @link <unk> } .
handles the activity login response .
returns the client metadata id for the given <unk> .
perform the verification of the { @link <unk> } .
perform a verification of a nonce .
perform the verification of the redirection .
creates a new <unk> object from the given json object .
split a { @link card } into a { @link <unk> } .
returns the value mapped by {
/ * ( non - javadoc )
parse a payment method from a json string .
delivers a { @link paymentmethod } object with a { @link jsonobject } .
retrieves the endpoint configuration for a given environment .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
attempt to find the best <unk> for a project .
gets the <unk> of the <unk>
create a { @link card } from a json string .
/ * ( non - javadoc )
creates a artwork object from a { @link jsonobject } .
split a { @link <unk> } into a { @link <unk> } .
sends a request to the server .
encrypt a string .
performs a http post request .
gets a <unk> from json .
invoke a { @link <unk> } on the specified { @link <unk> } .
/ * ( non - javadoc )
gets authorization token from string .
returns the {
create a <unk> object from json .
called from <unk> . <unk>
returns a new instance of { @link <unk> } .
<p > <unk> . < / p >
removes a { @link <unk> } from the list of { @link <unk> } s .
get google api client clients .
creates a new {
requests the implicit grant to the given grant .
override dotag method
<p > <unk> . < / p >
create a service account .
create a <unk> from a json string .
transforms a json object into a json object
adds a tuple to dictionary .
<unk> <unk> .
parse word .
converts a sequence of tokens to a list of java tokens .
extract phrases from <unk> input text
/ * [ deutsch ] <p > liefert einen neuen <unk> . < / p >
create a copy of the given set .
reads the contents of a channel from a channel .
helper method to calculate the q matrix
re - free the matrix
consumes the given byte buffer from buf from buf to buf .
writes a buffer to the buffer .
encode websocket frame information .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
returns the utf - 8 offset of the utf - 8 section .
/ * ( non - javadoc )
used directly from { @link <unk> ( bytebuffer ) } .
reads a collection of utf - 8 bytes from a collection of <unk> objects .
creates a new sample entry for the specified codec .
convert a list of codec to a list of { @link <unk> } .
returns a copy of the given list of bytebuffers .
serialize a bloom filter to a bytebuffer .
get block <unk>
two - dimensional decoding methods
compute bilinear filtering .
two - dimensional decode methods
compute bilinear filtering .
compute block compressed block
compute block compressed block
/ * <unk>
<unk> [] <unk>
<unk> [] <unk>
/ * <unk>
convolve with the given <unk>
/ * <unk>
<unk> [] <unk> [] <unk>
<unk> > <unk>
<unk> [] []
<unk> [] <unk> [] <unk>
decode a block of pixels
decode a 4 - byte [] into a <unk> block
get the segment of the given <unk> block
compute bilinear filtering .
decodes the channel mapping .
returns the {
/ * normalized
/ * ( non - javadoc )
get the start of the dictionary based on the given frequency .
/ * <unk>
compute the <unk> implementation .
finds the value of the {
compute the <unk> .
get a <unk> lock .
stream to next marker
read the next marker from the stream .
read a utf - 8 payload from a utf - 8 byte array .
returns the string <unk>
/ * ( non - javadoc )
initializes the range limit .
calculate the index of the index .
copy an { @link <unk> } to a { @link <unk> } .
/ * ______________________________________________________________________
lock to avoid repeated bounds of bounds .
decode the window bound .
gets the edit duration of a datanode .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a collection of { @link <unk> } to a { @link <unk> } .
convert a byte representation to a { @link <unk> } .
calculates the <unk> for a given movie .
creates a { @link <unk> } for the given movie .
creates a { @link <unk> } for a given movie .
create a { @link <unk> } that extracts the marker from the given <unk> .
convert a <unk> to a timecode frame
interpolate the timecode into a string .
multiply two values of two boolean values .
/ * ( non - javadoc )
converts the given { @link <unk> } to a { @link <unk> } .
gets the width and height of the given components .
creates a new { @link <unk> } with the given metadata .
returns the next frame in the buffer .
parse a frame at a given time .
return a <unk> from a channel at a time .
reads a frame from the given file .
create a <unk> from a channel .
returns the native frame at the given frame number .
/ * [ deutsch ] <p > ermittelt die <unk> <unk> <unk> . < / p >
this method gets the native frame of the given {
this method will return a {
creates a <code > <unk> / code > with the given <code > <unk> / code > and <code > <unk> / code > .
/ * <unk>
/ * ( non - javadoc )
read a message from the buffer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the index of the next bit in the set .
/ * ( non - javadoc )
/ * ( non - javadoc )
clones the original and returns a clone of the original matrix .
/ * ______________________________________________________________________
loads the discrete fourier transform from a vector .
create a <unk> based on the given audio format .
get a <unk>
returns the n - bits in little - endian order .
returns the number of bits in this stream .
find the next byte in the stream .
/ * package
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a <b > <unk> / b > based on the input data .
append the data to the stream .
<p > <unk> . < / p >
checks if the image should be displayed .
splits a movie into a given movie .
decode a frame .
writes the given { @link biginteger } to the given { @link inputstream } .
method <unk> .
sets the shape
calls the <unk> method
compute the length of the given long value .
computes the length of the given string .
returns the length of <code > <unk> / code > that is <code > null< / code > bytes .
/ * <unk>
converts a float array into three arrays .
inserts the given array into the new byte array
given a {
computes the min - heap header for a given matrix .
get a localdatetime element .
get a single channel element .
method to initialize a channel pair element .
assign a value to a given position in the range .
re - using <unk>
/ * computes the mode of the <unk> mode .
<unk> c ++ <unk>
converts a byte code to a string .
helper method for creating noise .
this method is used to format a bytebuffer .
add a { @link packet } to the { @link packet } .
/ * ------------------------------------------------------------
repositions the stream .
/ * ( non - javadoc )
/ * <unk>
/ * ( non - javadoc )
returns the number of bits stored in the stack .
ensures that the buffer is in the buffer .
get a vector to represent a constant value .
this routine is adapted from <unk> . <unk>
reads a long array in bulk
reads a long array in bulk
/ * <unk>
re - encode the data
/ * <unk>
clamp values .
decode the decoded clip array .
/ * ----------------------------------------------------------------------------------------------------------
/ * <unk>
lpc coefficients .
{ @inheritdoc }
returns the entropy for the given string .
construct a new <unk> position .
returns a deep copy of this bean . <p > the original object will be cloned if the original object is not needed . < / p >
decodes the given <unk> and returns the corresponding <unk> data .
<unk> <unk> <unk>
check the given array of { @code <unk> } and { @code <unk> } .
add a block to the end of the array .
copies the contents of the specified { @link bytebuffer } into a { @link <unk> } .
/ * ( non - javadoc )
concat a bits into a byte buffer .
rewinds the remainder of the specified byte array .
rewinds the hi value for the given password .
decode <unk> .
resets the timer to the beginning of the timer .
get a { @link bitmap } from the given file .
get a { @link bitmap } from a { @link <unk> } .
creates and returns a bitmap with the specified metadata .
returns a bitmap of the given webview .
<p > gets the image with the given metadata . < / p >
get a single frame from the given file .
renders a bitmap with the specified frame number .
get a frame from the given <unk> .
get a { @link bitmap } from a { @link <unk> } .
creates a frame that will be used to render a frame .
get a frame that will be considered to be used by the <unk> .
seek to a {
******************** methods *******************************************
converts one byte array into a single byte array .
split a picture into a byte array .
/ * this method performs a blocking - based <a href = http : // en . wikipedia . org / wiki / <unk> > <unk> / a > .
calculates the data for a function .
lpc coefficients .
returns the index of the last variable in the variable set .
internal function used by gammacdf
converts a byte array to an array of bytes .
url parameter <unk>
convert the input stream to an { @link <unk> } .
factory method to create a { @link <unk> } from a { @link <unk> } .
get the missing bytes from the given instances .
/ * ( non - javadoc )
returns the {
returns the active <unk> for the old mode .
compute the extents of the old and <unk> components .
convert the old <unk> to the original <unk> map .
read the items from the compressed array of reordering buffer .
returns an array containing all of the integers in the given row .
loads a { @link bufferedimage } from the given { @link file } .
parses a frame from the given channel .
图像类型转换：gif = 》jpg、gif = 》png、png = 》jpg、png = 》gif ( x ) 、bmp = 》png<br > 此方法并不关闭流
returns a {
converts a frame to a bufferedimage .
encode a frame to a <unk> frame .
returns a {
returns a {
returns a {
$antlr start rule_ws
convert a reference to a ref .
encodes a rectangle .
bulk load of scaling list .
read scaling list matrix .
encode samples .
decode a blockencoderequest object .
decode a <unk> frame .
returns the property with the specified property name .
returns a { @code property } for the specified property name or { @code null } if no such property exists .
set property .
set a named property .
get the value of this property as a <unk> object .
set the value of a property .
<strong > [ icu ] < / strong > returns the supported codec values .
mines the edge tags .
set the number of runs that will be performed by the analysis engine .
returns the number of objects in the queue .
removes all of the elements from the queue .
adds a reference to the head of the queue .
/ * package
start a collection thread .
/ * ( non - javadoc )
see ipromise ( inheriting callback ) interface
/ * ( non - javadoc )
load the native library
/ * ( non - javadoc )
deletes all temporary files in the directory .
returns the default { @link <unk> } for the specified { @link <unk> } .
returns the index of the first { @link <unk> } of the specified { @link <unk> } .
returns a channel from the specified <unk> at the specified index .
get the { @link java . awt . color } for the specified { @link java . io . color } .
gets a descriptor descriptor for an installed format .
converts a { @link <unk> } into a { @link <unk> } object .
get the size of the window size .
decodes a { @code <unk> } packet .
reads a token from the given buffer .
get a media packet from the specified media packet .
creates a packet with the specified size .
get entry data .
reads the side of a side - data packet .
get the side packet type for the specified { @link <unk> } .
if not found create a new <code > init - type< / code > element
open a configuration file .
returns the number of bytes written to the given buffer .
seek to a long .
/ * ( non - javadoc )
check if the given url can be streamed to a file .
unescape the component descriptor .
add version information to the manifest .
splits this rational number into another .
/ * ( non - javadoc )
returns the <unk> for the given name .
construct a <unk> from this object .
/ * ( non - javadoc )
this method is called from the <code > <unk> / code > method . this method is called from the ui thread .
this method is used to decode a base64 encoded string .
retrieve a stream from this camera from the given stream .
this method is used to retrieve from an { @link io . <unk> . <unk> . media . packet . <unk> } .
query the stream meta data .
/ * ( non - javadoc )
/ * <unk>
retrieve a stream from the stream .
/ * ( non - javadoc )
pauses the current pause .
splits this rational number to another .
compares this slice with the specified object .
compares two specified arguments .
compute the sigmoid function .
gets the minimum value of the specified { @code <unk> } .
multiply this rational number to another .
add another fraction to the specified argument .
returns a new rational number of this rational numbers .
return a new rational number or null if overflow occurs .
subtract the specified argument into this one .
add another fraction to the specified argument .
add a rational number to this object .
return a new rational number or null if overflow occurs .
/ * ( non - javadoc )
rescale the supplied { @code rational } into a { @code base } .
make a copy of <unk> .
creates a new <unk> object .
creates a new <unk> .
power to a <unk>
/ * ( non - javadoc )
converts the numerator and places into a new base .
static helper method to set a number of peers to a given destination .
construct video from video format
/ * ( non - javadoc )
<p > returns a { @link collection } of { @link collection } of { @link bit } s that matches the given { @link <unk> }
creates a new instance of { @link <unk> } .
create a new { @link android . widget . converter } .
create a new encoder with the specified codec .
decodes a { @code <unk> }
open the key / value pair .
encode video announce packet .
encode audio .
encode a media packet .
/ * ( non - javadoc )
{ @inheritdoc }
creates a { @link <unk> } from the provided { @link <unk> } .
/ * ( non - javadoc )
prints a set of properties to a stream .
/ * ( non - javadoc )
loads the configuration from the given file .
get the passed in base .
returns the converter descriptor for the given type .
create a converter for the given webview .
get a watermark for the image .
create a converter for the specified image type .
creates a new { @link <unk> } with the given parameters .
create a new instance of { @link <unk> } .
converts an image to a bufferedimage .
/ * ( non - javadoc )
close the stream .
open an open stream .
reads a list of bytes from a byte buffer .
reads bytes from the socket .
/ * package
get the html for a single slot .
creates a new { @link <unk> } with the default { @link java . net . <unk> } and { @link <unk> } .
map the input string to upper case .
map a url to a string .
writes the given data to the given output stream .
map a string to a string .
map a file into a bufferedimage .
map a local file to a local location .
read a channel from a channel .
creates a channel with the given url .
reads the given channel from the given channel .
unmap a file .
returns a <unk> for the given channel .
returns a {
read properties from an input stream .
map a stream to a string .
copy the contents of the specified url to the given output stream .
map data from url to stream .
copy the contents of the given url to the given writer .
performs a mapping between <code > <unk> / code > and <code > <unk> / code > bytes .
copy the contents of the given inputstream to a writer .
executa a consulta de <unk> de la <unk> .
build a new message with the given url and handler .
returns the frame of the given url .
get the handler for the given signal type .
get the logger instance for the given logger name .
get the logger instance for the given logger name .
logs a log message .
create a <unk> from a <unk> .
convert a series of audio data to a media sampling .
splits this <unk> into another .
set the base time for the morph .
<p > returns an array of <code > <unk> / code > objects . < / p >
get the frame rate for this <unk>
splits this block into another .
get entry aspect ratio .
splits this container into a container .
/ * ( non - javadoc )
add a {
returns the entry at the given position .
get a reference to the <unk> .
{ @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } <unk> { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> }
gets the value of the <unk> property .
<p > returns a list of the supported video formats . < / p >
gets the value of the <unk> property .
create a list of supported audio formats .
get the supported audio channel layouts .
decodes the specified {
returns a new instance of {
returns the {
returns the { @code codec } for the specified { @code codec } .
returns a new instance of {
returns the {
returns a codec that can be used to decrypt the specified encoding .
get installed codec .
get the frame rate for the specified frame .
get the supported video formats for this pixel .
get the supported audio formats for the specified audio file .
returns the supported audio channels supported by this channel .
/ * ( non - javadoc )
convert a series of bytes to a media sampling .
convert a picture message to a chat picture .
creates a <unk> from a <unk> image .
open the given url .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
associates the specified value with the specified key in this map .
create a new { @link <unk> } .
make a key value bag .
sets the value of the given key to the given value .
open the input stream .
return the codec for this <unk> .
splits this <unk> into a coder .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
/ * ( non - javadoc )
<p > set the value of the <code > <unk> / code > parameter . < / p >
/ * ( non - javadoc )
/ * this method is used to get the camera from this camera object from this camera object . this method is called from <unk> to retrieve the camera from this camera .
gets the detailed format for the given format .
returns the {
set the number of codec identifiers to connect to the specified codec .
returns a { @link <unk> } for the given index .
creates a { @link <unk> } .
adds a filter to the filter .
add a new audio source .
create a <unk> from this <unk>
add a new audio sink to the <unk> .
adds a <unk> to this filter
queues a command to execute a command .
creates a new index entry .
decode an <code > <unk> / code > to a <code > <unk> / code > .
creates a stream from the specified bit stream restriction .
returns a {
compress the input buffer using the given input buffer .
set the filter to the specified media packet .
<p > copies the contents of the specified byte array into this buffer . < / p >
returns the bytebuffer at the given offset .
/ * ( non - javadoc )
creates a lock buffer for the specified { @code <unk> } and { @code buffer } . <p > this method implements the same semantics as { @link <unk> ( object ) } except that it does not need to be used directly .
creates a lock buffer for the given { @code <unk> } and { @code <unk> } .
creates a <unk> buffer for the specified child .
creates a new buffer for the given child .
creates a <unk> container from the specified input stream .
/ * ( non - javadoc )
convert a <unk> to a media format .
validate that the image type is valid .
validate the picture .
/ * ( non - javadoc )
stops the worker thread .
get the filter before the filter graph
splits this block into another .
/ * ( non - javadoc )
splits this block into another .
/ * ( non - javadoc )
sets the stop criterion .
/ * ( non - javadoc )
returns a { @link java . net . handler } for the given uri .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
calculates the current operating system ( arch + arch ) .
return the current value of the current operating system ( arch + os ) .
returns the current operating system by operating system .
returns the type of operating system .
/ * ( non - javadoc )
splits this block into another .
use this method to construct a new resource from the given filename .
the main method .
unregisters the object .
gets the library s library .
gets the native library for the current platform .
sets the version of the given library . <p >
load a candidate library from a file .
returns the set of library versions for the given name .
initializes the search path .
package private for testing
decodes the specified codec .
<unk> <unk> <unk>
decodes a audio packet .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * private static <unk> <unk> () { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) {
/ * ( non - javadoc )
negotiates the audio formats to be played .
convert a {
/ * ( non - javadoc )
get an alternate <unk> format .
gets the packed { @link <unk> } from the given audio format .
get the { @link <unk> } from the given { @link audioformat } .
returns the number of available buffers for the specified task .
helper method to create a buffer size out of the specified task .
<unk> > <unk>
returns a { @link <unk> } object for the given format .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
write packet .
make a synchronized block .
this method is used to set the number of runs that will be performed by this analysis .
construct a { @link <unk> } from a short name .
construct a <unk> from the given index .
/ * ( non - javadoc )
returns a <code > <unk> / code > from the <code > coder . coder . <unk> / code > or <code > <unk> / code > .
get a new <unk>
creates a new { @link <unk> } for the given { @link <unk> } .
decodes the given base58 string into the original data bytes .
generates a string representation of the given biginteger according to <a href = http : // tools . ietf . org / html / <unk> - 2 . 2 > <unk> / a > .
returns a transaction object .
return a list of transactions filtered by the given cluster address .
returns the list of transactions for the given address .
/ * ( non - javadoc )
get yaml .
/ * ( non - javadoc )
evaluates the jelly script .
creates a script from the given settings .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
reads a utf - 8 byte array from the stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the current position of the view .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
splits a class into a string .
adds a file to the file .
get a {
get a {
resize the store .
get binary data from a byte array .
documentation inherited from interface
/ * ( non - javadoc )
/ * ------------------------------------------------------------
write a portion of an array .
/ * ------------------------------------------------------------
write a string representation of a string .
writes a big - endian 4 - byte integer to the buffer .
/ * ( non - javadoc )
creates a struct
create a pool of the given type validator .
create a json configuration object from a catalog .
serialize a object to stdout .
register a new serializer .
creates an instance of the configuration .
<p > <unk> . < / p >
serialize an object to bytes .
this method is used to clear the caches .
get an object from the input stream .
get an object from a byte array
read an object from the file .
this method returns a { @link <unk> } object for the given { @link outputstream } .
convert this string to a string .
returns a set of the classes used by the naming service .
get the url of the given class .
/ * ( non - javadoc )
returns the object or <code > null< / code > if the object cannot be serialized .
returns the byte array as a byte array .
converts the given { @link object } to a { @link string } .
/ * ( non - javadoc )
reads a single integer from the stream .
get an instance of { @link <unk> } .
writes the given class to the output stream .
writes the given byte array to the given byte array at the given offset .
writes a messagepack long .
read an array of primitives .
writes a portion of an array of bytes .
read an array object from the receiver .
write object .
returns the superclasses of the given type .
this method is called by the {
this method is called by the {
write object to the output stream .
get an <unk> object for the given class .
write the fields to the fields .
<p > write . < / p >
save broadcasted stream .
writes the contents of the buffer to the buffer .
introspect the class .
<p > formats a <code > string< / code > using the specified <code > string< / code > . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
base implementation of this method .
base implementation of { @link <unk> ( byte [] ) } .
detaches the key from the pointer .
create a copy of the <unk>
/ * ( non - javadoc )
returns a { @link bytebuffer } representing the given { @link <unk> } .
method to create a new array
method to create a new template
<p > converts the given array of { @link <unk> } instances into a row vector . < / p >
resets the object position .
returns a { @link collection } of { @link record } s .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
adds a file to the stream .
poll for the specified timers .
reads a byte array from the given stream .
reads a 32 - bit integer from the stream starting at the current stream in little - endian order . this method reads the following bytes : <ul > <li > <code > read ( inputstream int ) < / code > < / li > <li > <code > read - int< / code > is incremented
/ * ------------------------------------------------------------
registers a class with the given configuration .
<p > <unk> . < / p >
starts the <unk> .
submits a cql {
creates a copy of {
/ * ( non - javadoc )
returns the class of the given object .
returns true if the given port is open i . e . whether it is open or not .
creates a {
this function performs a general qr - compute matrix - wise dot product of an m - m matrix .
computes the eigenvalue decomposition of the specified input order
performs a rank - 1 update operation .
symmetric householder reduction to tridiagonal form :
computes the eigenvalue decomposition of a given <unk>
computes the general matrix of the general general matrix
computes the eigenvalue decomposition of a given <unk>
computes the general matrix of the general general matrix
performs a rank - 1 update operation .
computes the eigenvalue decomposition of the specified order of values
computes the eigenvalue decomposition of a given <unk>
register a map of op descriptors
get the allocation mode from the context
set allocation mode for context
releases the memory allocated from the given pointer .
calculate the number of elements in the output
returns the cumulative probability of this value with the specified x .
this method executes given <unk>
returns true if the given condition is satisfied .
get float or float
returns true if n - 1 is equal to n i . e . if n is a condition ( 2 ) or 2 ( n ) 2 ( n ) 2 ( n ) 2 ( n ) 2 ( n ) 2 ( n + n )
merge the given n n - grams array with the given dimensions
see : { @link <unk> ( indarray int ) } for details
<p > applies the specified function to the specified value . < / p >
see { @link <unk> ( object boolean ) } for more details .
this method is equivalent to : <pre > public void <unk> ( <unk> > ) { <unk> = new <unk> > () ; } < / pre >
evaluate an array of {
<p > applies the specified function to the specified object . < / p >
applies a function to the dataset .
this method returns last index of given array
this method is used to create a {
load properties from flat properties file
create a dimension out of a {
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > normalized . < / p >
merge two coordinates .
returns the x - value of a vector .
partitions a list of samples to a list of samples .
returns the x - value of a vector .
convert an <unk> type to the <unk>
<p > shuts down the server . < / p >
<b > <unk> / b > <br > public void <unk> ( int mtlv string <unk> ) <br > <br > <b > note : < / b > <br > <b > <i > <unk> / i > < / b > < / p >
<b > <unk> / b > <br > public void <unk> ( int mtlv string <unk> ) <br > <br > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > < / p >
this method returns the current device memory point .
concatenate ndarrays by given indexes
returns an array containing the indices of the indices of all the views in the given array .
rearrange matrix columns into blocks
pooling 2d implementation
implement column formatted images
this method returns an ndarray given an input matrix
create a {
convert an ndarray to a direct buffer
get a list of { @link <unk> } objects for the given partition size .
update the <unk>
checks if the given arrays are sorted .
sets the data optype
convert an ndarray to a double array
this method returns the bias for the given vector
calculates pca matrix for a given matrix
reverses the matrix
this method returns an array of vectors for the given vector
random normal using the given seed
random normal using the given seed
/ * ( non - javadoc )
create a copy of the given shape
create a copy of the given shape
concatenate ndarrays along a dimension
create a copy of the given shape
create a copy of the given shape
create a shape databuffer given the shape stride for the shape
create a random ndarray with the given shape
create a random ndarray with the given shape
/ * ( non - javadoc )
creates a new complex shape with the specified shape
create a scalar nd array with the specified offset and offset
create a scalar nd array with the specified value
create a scalar nd array with the specified value
create a scalar nd array with the specified offset and offset
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
transform the original array into an array of complex numbers .
method to get the methods for a set of columns
calculates the 函数具体逻辑
~ methoden ----------------------------------------------------------
/ * 函数具体逻辑
creates a random { @link <unk> } .
returns a { @link bigdecimal } whose value is { @code power } .
/ * documented <unk>
/ * compute the exponent
compute power of a complex number .
returns a new {
this method frees specific chunk of memory described by allocationpoint passed in
returns a subset of this array based on the specified indexes .
returns a new {
/ * <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
sample a dataset by using the specified samples .
/ * ( non - javadoc )
converts an exception to a string .
returns true if the given ip address is a valid hostname .
<p > formats . < / p >
<p > <unk> . < / p >
converts a byte array to a hex string .
formats the time in milliseconds .
<p > <unk> . < / p >
<p > <unk> . < / p >
splits a string into a list of double values .
convert a comma separated list of class names to a set of class names .
<p > split . < / p >
split a string into an array of strings arround a character separator .
split a string into an array of strings arround a character separator .
<p > <unk> . < / p >
<p > perform a ( configurable ) string <strong > escape< / strong > operation on a <tt > char [] < / tt > input . < / p > <p > the following are the only allowed chars in the given string and will be escaped . < / p >
<p > perform a ( configurable ) string <strong > escape< / strong > operation on a <tt > char [] < / tt > input . < / p > <p > the following are the only allowed chars in an escaped string . < / p >
/ * ( non - javadoc )
joins a collection of strings with the given separator .
/ * ( non - javadoc )
replaces tokens with the given text .
formats the stack trace of the given stack trace .
returns true if two strings are case sensitive .
<p > checks if the string contains only whitespace . < / p >
inverts a matrix
/ * ( non - javadoc )
returns true if the specified date is part of the specified host .
check if the specified device is part of the specified <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the given shape is a vector
create a new shape from a copy of the given shape
get the offset from an ndarray
given an array of indexes returns the offset for the given indexes .
create the covering shape of the given shape
get the shape for the given buffer
unzips the zip file to the specified destination directory .
get a short from the buffer
this method does the actual creation of the pointer pointer
this method executes given <unk>
create a copy of the given { @link bytebuffer } to the given { @link bytebuffer } .
create a server starting from the given status .
{ @inheritdoc }
this method assumes that a call to { @link <unk> ( int int int ) } is invoked .
this method replicates given indarray and returns it .
create a new <unk> based on the given indexes
/ * ( non - javadoc )
cosine similarity using {
this method calculates the atan2 function of the two dimensional ndarray
this method returns the ceiling with the same { @link <unk> () }
sin function .
sin function .
sinh function returns sinh
element - wise sigmoid function
element - wise sigmoid function
element - wise power function
broadcast log function
less than or equal to another
greater than or equal to element
element - wise sigmoid function
maximum function with a scalar
element wise maximum function between 2 indarrays
min the minimum function
element wise maximum function between 2 indarrays
min the minimum function
element - wise sigmoid function
element - wise sigmoid function
element - wise sigmoid function
element - wise sigmoid function
element - wise sigmoid function
element - wise sigmoid function
element - wise sigmoid function
element - wise sigmoid function
this method computes the euclidean distance for the given input op
rearrange op columns
this method calculates the n nearest neighbors of an n matrix . note that duplicate output is in the same order as possible . see : { @link <unk> ( int int int ) } .
create an identity matrix for each ndarray
adjusts the scheme to the given bounds using the given bounds
returns the next element in the iteration . the iteration order is determined by the number of elements in the iteration .
{ @inheritdoc }
performs a cholesky decomposition of the given matrix
generate cholesky decomposition of a given matrix
this method returns allocationshape for given indarray
this method creates allocationshape for the given buffer
checks if a directory exists in the given directory .
/ * ------------------------------------------------------------
this method is called by the { @link <unk> () } method of the specified { @link <unk> } . this method is invoked by the { @link <unk> () } method of the { @link <unk> () } method of the given { @link <unk> } .
create a new ndarray with the given shape
create a new ndarray with the given shape
shuffles an array in a single array of dimensions ( in a place in place ) .
this method is called by jni . this method is called by jni . this method is intended to be used by jni . this method is intended to be used by jni .
this method is used to create an ndarray from a file .
this method provides the memory for memory usage by allocationshape
this method creates a memory - based data table allocation based on memory and memory parameters .
/ * ( non - javadoc )
update the <unk> of the given gradient .
serialize a {
load a { @link indarray } from a byte array .
/ * ( non - javadoc )
this method executes the given { @link op } and writes the { @link op } to the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method returns a pointer to the given { @link <unk> } .
this method returns the pointer to the given shape .
this method gets the device pointer associated with this device .
/ * ( non - javadoc )
this method replicates the databuffer of the available device id and device id
attach a thread to a device
get the next available device
loads a library from the specified classpath .
writes a resource to a file .
load a binary file .
writes a resource to a file .
create the extension extension .
returns a string representation of the current operating system .
calculates the current operating system ( arch + arch ) .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a data buffer with the given type and the given type .
this method executes the given rng
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
read unknown data from a stream .
/ * ( non - javadoc )
local response normalization operation .
<unk> out array reduction operation optionally along specified input values
<unk> <unk> > <unk> > <unk> > out [ i ] = output [ i ] <br > [ 1 2 ] <br > [ 1 2 ] <br > [ 1 2 ] <br > [ 1 2 ] <br > [ 1 2 ] <br > [ 1 2 ] <br > [ 1 2 ] <br > [ 1 2 ]
average pooling 2d operation .
max pooling 2d operation .
avg pooling 3d operation .
max pooling 3d operation .
<unk> <unk> > <unk> > <unk> > out [ i ] = output [ i ] <br > [ 1 2 ] <br > [ 1 2 ] <br > [ 1 2 ] <br > [ 1 2 ] <br > [ 1 2 ] <br > [ 1 2 ] <br > [ 1 2 ] <br > [ 1 2 ]
<unk> operation : out = <unk> ( input )
<unk> <unk> > <unk> > <unk> > out [ i ] = output [ i ] where out [ i ] = input ( input [ i ] )
calculate the covariance matrix for a given variance
return the principal components for all the eigenvalues ( covariance ) of the covariance matrix .
reset dashboard state
returns the module name for the given operation .
create a new ndarray with the given shape
allocate a new array and store it as a new array
get an array representation of the ndarray
get the shape of this shape
create the gradient function
create a compressed ndarray with the given shape data
returns a list of all of the elements in the window
convert an array of <unk> to a sparse matrix
truncate the given dimension
get the identity of the matrix
find the index of the element with the index of the element
broadcast the given ndarray to this device . <br > <b > note : < / b > this is equivalent to calling { @link broadcast ( indarray [] indarray indarray ) } .
/ * ( non - javadoc )
calculates { @link bigdecimal } x .
calculates the regularized gamma function .
returns the { @link bigdecimal } of the specified { @link bigdecimal } .
returns the asin of this { @link bigdecimal } .
calculates the root of a { @link bigdecimal } .
calculates the factorial of { @link bigdecimal } x .
calculates the factorial of { @link bigdecimal } x .
variations on asin ()
calculates { @link bigdecimal } x .
variations on asin ()
returns a { @code bigdecimal } whose value is { @code n } .
calculates the arc hyperbolic tangens of { @link bigdecimal } x .
calculates the arc hyperbolic tangens of { @link bigdecimal } x .
calculates the { @link bigdecimal } with the specified { @link mathcontext } .
variations on asin ()
variations on asin ()
variations on asin ()
variations on asin ()
variations on asin ()
variations on asin ()
variations on asin ()
variations on a { @link bigdecimal } .
calculates the arc hyperbolic tangens of { @link bigdecimal } x .
calculates the gamma function .
variations on asin ()
probability of { @link bigdecimal } x .
variations on asin ()
calculates the { @link bigdecimal } at the specified { @link mathcontext } .
the inverse function .
compute the eigenvalues of a <unk> matrix .
variations on the { @link bigdecimal }
calculates the { @link bigdecimal } rounded to the given { @link bigdecimal } .
calculates { @link bigdecimal } x .
returns a { @code bigdecimal } whose value is { @code x } and { @code <unk> } .
calculates the hyperbolic tangens of { @link bigdecimal } x .
calculates the { @link bigdecimal } rounded to the specified number .
returns a { @code bigdecimal } whose value is <code > <unk> ( x y ) < / code > .
calculates the arc tangens ( inverted tangens ) of { @link bigdecimal } x .
returns a { @code bigdecimal } whose value is <code > ( x y ) < / code > .
returns a { @code bigdecimal } whose value is { @code x + 1 } .
/ * ( non - javadoc )
updates the variable name with the given variable name .
get the function by id
puts a function for the given id
get the inputs for the specified function
this method is used to update the shape for a given variable name .
this method is used to associate a variable with the given shape with the given shape name .
get the shape for a variable name .
this method is used to update the shape for the given variable name .
this method adds a shape for the given variable name .
associate the array with the given variable .
get the properties for the given function
adds a property mapping for the specified function .
adds the given arguments to the graph .
adds the given arguments to the graph .
returns true if the specified function has arguments
this method is responsible for executing the {
create a new variable with the specified shape and shape
see { @link <unk> ( string sdvariable ) } for more details . <br > example : <br > <br > out = [ a b ] <br > if input variable has shape [ a b ] <br > <br > see <a href = http : // arxiv . org / abs / <unk> < / li > <li >
return an array with all 1s and values in the input sdvariable
create a new variable with the given shape and shape
create a new variable with the same values as the input variable with the same values as the input variable . if the variable is not in the same shape this method will return the same value as the original array . if the variable is not in the same shape it will be returned .
remove an argument from the graph .
set the gradient for a variable
average pooling 2d operation .
average pooling 2d operation .
max pooling 2d operation .
avg pooling 3d operation .
max pooling 3d operation .
max pooling 3d operation .
element - wise average operation : out = <unk> ( abs ( in ))
<unk> array reduction operation . <br > example : if input is<br > out [ i ] = output [ output [ i ] [ i ] [ i ] = output [ i ] = output [ i ] <br > [ 2 ] <br > [ 2 ] <br > out [ i ] = output [ i ]
local response normalization operation .
merge add operation normalization operation . <br > example : <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br >
element - wise rearrange operation optionally along specified dimensions : <br > out [ i ] = average ( inputs [ i ] ) . <br > supports broadcasting if x and y have different shapes and are broadcastable . <br > note : supports broadcasting if x and y have different shapes and are broadcastable . <br > returns an array with values
todo ( input ) : out [ i ] = <unk> ( input [ i ] )
get the addition of addition : <br > out [ i ] = input [ i ] if input [ i ] = input [ i ] = input [ i ] <br > out [ i ] = input [ i ] <br > [ 3 4 ] <br > [ 3 4 ] <br > [ 3 4 ] <br > [
element - wise rearrange operation optionally along specified dimensions : <br > out [ i ] = average ( inputs [ i ] ) . <br > supports broadcasting if x and y have different shapes and are broadcastable . <br > note : supports broadcasting if x and y have different shapes and are broadcastable . <br > returns an array with values
element - wise merge operation . <br > example : <br > out = [ a b c ] <br > [ 3 4 ] <br > [ 3 4 ] <br > [ 3 4 ] <br > [ 3 4 ] <br > [ 3 4 ] <br > [ 3 4 ]
todo ( <unk> ) :
element - wise merge operation . <br > example : <br > out = [ a b c ] <br > [ 3 4 ] <br > [ 3 4 ] <br > [ 3 4 ] <br > [ 3 4 ] <br > [ 3 4 ] <br > [ 3 4 ]
element - wise average ops along the dimensions : <br > out [ i ] = average ( inputs [ i ] ) . <br > supports broadcasting if x and y have different shapes and are broadcastable . <br > note : supports broadcasting if x and y have different shapes and are broadcastable . <br > returns an array with values 1
<unk> array reduction operation . <br > example : if input is<br > out [ i ] = output [ output [ i ] [ i ] [ i ] = output [ i ] = output [ i ] <br > [ 2 ] <br > out [ i ] = output [ i ]
batch norm operation .
batch norm operation .
<unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> . txt
create a new <unk> out of the given configuration with the specified base name and configuration . <br > returns an array with values equal to the specified base name . <br > note : supports broadcasting if the output variable has already been set to exist in the output . <br > for example if
generate the output variable for the specified differential function
get the list of differential functions
get the list of differential functions
create a copy of this block
get the gradient function for the function name
gets the list of variable attributes for the specified function .
create and depend on the current samediff instance
get the sub - graph of the input
adds a placeholder to the place holder holder .
this method resolves the values of the specified map of shapes with the specified values .
/ * ( non - javadoc )
adds a place holder for the given variable .
list the samediff version of samediff execution .
get the differential functions .
update the variable name and reference the given variable in the given { @link samediff } set . <br > returns an array with values 1 where the variable has the same name as the input variable . if the variable has already been set then an exception will be thrown . <br > if the variable
execute execution function
this method is used to print all the arguments of the specified ndarray
process a data format
update the gradient for the given variable
this method exports the input buffers into flatbuffers format .
as flat print
converts a byte value to a data type
this method converts enums for datatype
returns the number of operations for the given name
returns the type of the given byte representing the byte representation of the given byte .
returns the flat <unk> of the given type .
this method is used to allocate a memory object . this method will allocate a pointer to the device native device .
set the float array to a float array
returns the length for the given data optype
gets the allocation of the specified type .
returns the length of the given data optype
get the allocation mode from the context
this sets the allocation mode for the given context
returns the number of operations registered in the specified operation
this method is called by the <unk> when a pointer pointer is restored .
destroys all workspaces out of the current thread .
this method prints out the snapshot of the given resources .
this is the general matrix function .
this is the general solution function to solve a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * y
a general general matrix specialized version of { @link <unk> ( general matrix <unk> ) }
see : {
performs an x - m - d matrix with the general matrix .
performs an x - m - d matrix with the general matrix .
see : http : // www . <unk> . org / <unk> / <unk> / <unk> / <unk> . <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> ;
computes the x - alpha * x = alpha * x = alpha * x + beta * x = alpha * x + beta * x = alpha * x + beta * x = alpha * x + beta * y .
computes the x - alpha * x = alpha * x = alpha * x = alpha * x = alpha * x = alpha * x = alpha * x = alpha * x = alpha * x = alpha * x + - alpha * x < / pre >
performs a rank - 1 update depending on the given parameters
computes the general general matrix from the general general matrix .
solves a * x = a * x = alpha * x = a * x = a * x = x where n is a sparse matrix .
/ * ( non - javadoc )
calculate the bernoulli for the given labels
this method returns the standard deviation for the given dimension . <br > note that if keepdims = true the output variable has the same rank as the original array .
this method returns a random ndarray
this method encodes the given network using the given threshold .
encodes the given input using the specified boundary .
this method computes the euclidean distance for the given vector
this method applies accumulated updates to the given stepfunction
this method applies accumulated updates to the given stepfunction
returns a string representation of the package name .
<unk> execution .
executes the given batch operation .
/ * ( non - javadoc )
this method executes the given rng
this method executes the given operation
/ * ( non - javadoc )
sends a message to all shards that have been sent to the shard .
asserts that the specified workspace is not available .
{ @inheritdoc }
calculate the gradient for the negative log - likelihood ratio
requests that the given operation is waiting for the given time .
try to obtain a <unk> from the passed in {
releases the current {
returns the current {
creates a { @link <unk> } instance .
/ * ( non - javadoc )
sorts the dataset from the given examples .
set the value of the specified field .
initializes the system .
this method returns a pointer to the specified shape buffer buffer
/ * ( non - javadoc )
allocates memory from memory
convert a {
create a new data buffer with the given shape
create a data type from a tensor size
this method provides device memory memory allocated from device memory . this method is used by jni .
this method frees specific chunk of memory on device memory .
this method returns the gradient for the gradient of the given gradient and iteration .
/ * ( non - javadoc )
outer product of x
broadcast add op . see : {
broadcast copy op . see : {
broadcast divide op . see : {
broadcast equal to op . see : {
broadcast greater than op . see : {
broadcast greater than or equal to op . see : {
broadcast less than op . see : {
broadcast less than or equal to op . see : {
broadcast not equal to op . see : {
broadcast 3d distance op . see : {
broadcast reverse subtraction op . see : {
broadcast max op . see : {
broadcast min op . see : {
broadcast absolute max op . see : {
broadcast absolute min op . see : {
get a map of all the form properties for this canvas .
remove the argument holder from the graph .
compute the difference between two arrays
calculate the shape for the given shape
format the given ndarray
/ * ( non - javadoc )
convert an ndarray to a blob
/ * ( non - javadoc )
save this ndarray entity to an ndarray .
convert an ndarray to a matrix
convert an ndarray to a particular offset
{ @inheritdoc }
calculates pca factors for the given variance
calculates the euclidean distance between the two matrices .
compute the statistics for a single element .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the input transformation matrix .
/ * ( non - javadoc )
create a copy of this ndarray
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a number of rows to a matrix
/ * <unk>
{ @inheritdoc }
{ @inheritdoc }
create an {
convert a list of rows to a matrix
convert a list of rows to a matrix
{ @inheritdoc }
{ @inheritdoc }
convert a list of rows to a matrix
convert an ndarray to a matrix
add the corners in the given column
convert an ndarray to a matrix
perform a matrix multiplication on the other matrix
perform a matrix multiplication on the two matrices
perform a matrix multiplication
perform a matrix multiplication on the two matrices
perform a matrix multiplication on the two matrices
computes the dot product of this vector
generate a random permutation of the given shape
iterate through the given <unk>
add the given variance to the given variance
convert a value to a real { @link <unk> }
perform a matrix multiplication on the two matrices
perform a matrix multiplication on the two matrices
perform a matrix multiplication on the two matrices
perform a matrix multiplication on the two matrices
/ * ( non - javadoc )
solve a * x = b
computes the eigenvalues of a general matrix .
computes the eigenvalues and eigenvectors of a general matrix .
compute generalized eigenvalues of the problem a x = l b .
get the probability of a binomial distribution .
find the index of the element in the vector
computes the derivative of a vector by a scalar .
computes the dot product of a vector .
computes the product of a vector by a scalar .
computes the product of a vector by a scalar .
this method applies accumulated updates to the given stepfunction
evaluate the network with optional metadata
merge the specified features with the given features to the given merge
create a 2d array for 2d arrays
create a 2d array for 2d arrays
this method executes the given { @link org . apache . hadoop . codec . <unk> } with the specified { @link org . apache . hadoop . io . <unk> } .
returns <code > true< / code > if the given x is y - based on the input array
this method returns true if the given y - array can be contiguous or not .
this method returns an array with the given dimension
/ * ( non - javadoc )
cosine cross entropy loss function .
log ( i . e . p [ i ] = predictions [ i ] = predictions [ i ] = predictions [ i ] )
return the non - zero value of the non - zero error
return the mean value of the squared error loss
initializes the internal variables map .
creates a constructor from the given class .
creates a constructor with the specified arguments .
invokes a method with the given parameters .
creates a new instance of the class specified by the constructor .
gets the value of a field .
determines whether the { @link class from type } { @link class } is assignable to the { @link class to class type } .
returns the { @link annotation } annotation for the given annotations .
checks if the given annotation is present on the given class or not .
checks if the given class is present on the given class .
create a proxy instance for the given interface .
/ * ( non - javadoc )
loads the { @link <unk> } for the given { @link <unk> } .
marshals the field represented by the given metadata .
<p > save . < / p >
{ @inheritdoc }
<p > <unk> . < / p >
translates { @link <unk> } into { @link <unk> } .
sets the order by property name .
[ variable <unk> ]
sets the given number of bytes .
adds a field to the array of fields .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
[ variable <unk> ]
<p > <unk> . < / p >
adds a projection to the query .
add a distinct filter to the query .
creates a new instance of { @link <unk> memcache } using { @link org . memcache . memcache . helpers . <unk> } .
/ * ( non - javadoc )
create a new { @link translator } using the given { @link <unk> } .
waits for all pending tasks to complete .
cast a class to a typed value .
gets the metadata for a given kind .
returns a { @link <unk> } for the given query parameters .
[ variable my_kind ]
[ variable <unk> ]
execute the query and return a new list of results .
[ variable <unk> ]
divides the given iterator into a list of { @link iterator } s .
load a list of rows from the table .
returns an array containing all of the elements in this list in proper sequence ( from first to last element ) .
returns the value associated with this instance .
send a token to a string .
creates a key for the given key .
factory method to create a new instance of {
<p > creates a new { @link key } for the given class kind . < / p >
creates a key for the given key .
factory method to create a new instance of { @link <unk> } .
{ @inheritdoc }
compares two keys .
returns the key for the given key .
<pre > [ key ] [ google . google . cloud . api . v1 . <unk> ] . < / pre >
returns the name of the given class .
returns true if the given class is assignable to the given class .
returns the kind of {
returns true if the base type of the given type is a generic type .
returns the generic type of the given { @code type } .
returns the generic type of the given { @code type } .
get the return type of the given method .
capture a type for a type .
create rest callback implementation .
factory method to create a new { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the index of the index of the given class .
<p > <unk> . < / p >
returns the index of the first occurrence of the given method .
returns a list of { @link member } s of the given class .
returns a { @link <unk> } .
gets the { @link result } object .
execute the execution of the task .
fetches a list of entities from the cloud datastore .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the sub - class discriminators .
register a new subclass of { @link class } with the given { @link class } .
returns the collection type for the given collection type .
returns the canonical type of the given class .
returns the parent path of the given path .
removes the final path from the path .
returns a string representation of this class .
get the depth of the outer class .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a { @link map } containing all keys and values in the { @link bucket } .
process all operations in the cache .
~ methods **************************************************************************************************************************************
fetches a set of { @link <unk> } s into a { @link set } of { @link <unk> } s .
cache all keys in the cache .
converts a set of buckets to a { @link calendar } .
find key fields .
creates a new { @link <unk> } for the given { @code <unk> } .
----- private methods -----
converts an { @link <unk> } to a { @link <unk> } .
returns an incompletekey of the given pojo .
externalizes a { @link com . google . cloud . hdfs . client . datastore } .
register a { @link <unk> } with a given id .
returns the { @link <unk> } for the given { @link <unk> } .
<p > creates a new { @link <unk> } for the given { @link class } . < / p >
<p > <unk> . < / p >
/ * public static void <unk> ( class owner ) { return <unk> ; }
returns the parameterized type of the given class .
checks that the given type is within the bounds of the given type .
determines whether the given type is a common supertype of the given type .
<p > <unk> . < / p >
returns a wildcard type with the given upper bound .
returns the lower bound type of a { @code type } { @code ? } or { @code null } if { @code null } is returned .
searches for an annotation of the given type and returns it .
/ * ( non - javadoc )
adds a new value to the dictionary .
removes all of the mappings from the specified stream .
removes the key for the given key .
helper method to create the { @link counterdata } associated with the given { @link map } .
updates the error if needed .
helper method to create a groovy { @link ref } from the given parameters .
/ * ( non - javadoc )
fetches a set of entities from the datastore .
/ * ( non - javadoc )
{ @link <unk> ( string ) }
create a parent node .
appends the state of the given id to the { @link <unk> } .
appends the specified ids to the document .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
create a wrapper around a key .
<pre > { @link <unk> ( com . google . common . datastore . <unk> ) } < / pre >
<code > key< / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > key< / code > and <code > <unk> / code > .
creates a key for the specified key and key .
<pre > [ key ] [ google . cloud . kms . v1 . keymanagementservice . key ] < / pre >
creates a list of indexes for the specified type .
returns the id of the given { @link <unk> } .
convert a { @link <unk> } to a { @link <unk> } .
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
watches specified ids .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
an implementation of {
helper method to get the { @link counterdata } associated with the { @link <unk> } associated with this { @link <unk> } .
<p > <unk> . < / p >
creates a new instance of the given class .
construct a new collection of the given type object .
construct a new map from the given type .
<p > <unk> . < / p >
gets all instances of the given type .
creates a new { @link <unk> } for the datastore .
searches for a key range .
[ variable <unk> ]
get the { @link com . google . android . ui . ui . <unk> } .
inserts an { @link object } at the given { @link <unk> index } .
inserts an { @link <unk> } at the specified { @link <unk> } .
get the { @link <unk> } associated with the given { @link <unk> } .
/ * ( non - javadoc )
<p > run . < / p >
trims the given list of values from the given list .
coerces a number to a number .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
start the query .
<p > <unk> . < / p >
/ * ( non - javadoc )
<b > <unk> / b >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new key - value pair .
/ * ( non - javadoc )
get the value of the wrapped object .
adds a new value to the list of values .
/ * ( non - javadoc )
<p > <unk> . < / p >
runs the task .
/ * ( non - javadoc )
executes the runnable on the given runnable .
returns the container for the given path .
get the stat for a particular type .
schedule a { @link completablefuture } to be thrown .
rethrow the given { @link throwable } as a { @link runtimeexception } or throw { @link runtimeexception } if the wrapped throwable is a { @link runtimeexception } .
coerces a number to a number .
liberty change for cxf use
/ * ( non - javadoc )
creates a new translator for the given type .
load a single object into the container .
gets the property from container .
{ @inheritdoc }
----- private methods -----
{ @inheritdoc }
gets the value of the given { @code <unk> } .
writes the given { @link jsonarray } to the given { @link jsongenerator } .
writes the given category to the given category .
write collection of categories
process the snippet of the given snippet .
converts the given request to a json string .
writes the given json request to the given writer .
serialize an object to an outputstream .
write the json representation of the event to the jsongenerator .
convert a <unk> to a json string .
serialize an object to an outputstream .
writes the given json response to the given writer .
/ * ( non - javadoc )
returns the <unk> for the <unk> criterion .
returns an { @link iterable } of { @link <unk> } objects .
returns a list of bids clusters within the specified instance .
returns the example .
returns a stream of { @link <unk> } that provides access to the bid of the bid of the bid of the bid and the bid of the bid of the bid that accepted the bid .
returns an iterable of { @link <unk> } objects that will be added to the current agent .
updates the value of this bids with the given value .
updates the bids with the given computationgraph .
removes a bids from the bids .
removes a bids .
transfomiert eine implication ( imp ) operation . < / p >
returns the import plot of the specified type .
implements the binary search algorithm .
add a filter to a filter
compares two strings and returns true if they are equal to <unk> .
converts the given native node to a json string .
writes native object to the given writer .
serialize native objects to an outputstream .
writes the state of the event to the jsongenerator .
converts the native native response to a json string .
serialize an object to an outputstream .
writes the given native object to the given writer .
writes the json response to the given jsongenerator .
helper method for reading a set of extensions .
helper method to return true if the current token is null .
register a { @link <unk> } .
creates a { @link <unk> } object from the given { @link <unk> } .
register a specific implementation of the creator .
creates a native representation of the given native character sequence .
reads a native request from the given reader .
write a native request to the given writer .
appends a <code > <unk> / code > to the <code > <unk> / code > .
creates a representation of the representation of the given native character sequence .
reads a native response from the given reader .
parses the given { @link inputstream } to a { @link json } object .
constructs a new { @link <unk> } with the given parameters .
{ @inheritdoc }
returns the {
creates a representation of the representation of the given type .
reads an bid or creates an <unk> object .
write the contents of an bid request to the writer .
get a multi - valued bid request .
creates a representation of the representation of the given type .
reads an bid or throws an exception .
write the contents of an { @link inputstream } to a { @link <unk> } .
builds the <unk> object .
creates and returns a {
creates a new instance of the given message .
atomically updates the given { @code <unk> } with the given { @code <unk> } .
applies the filter to the given filter .
returns true if the given message is repeated or not .
get the current name of a method
parses a json object from a json parser .
/ * ------------------------------------------------------------
parses a json array from a { @link jsonparser } .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
returns the next token from a jsonparser .
writes a { @code boolean } field to the json file .
writes a list of strings to the stream .
writes a list of longs to a writer .
write a string to the given jsongenerator .
writes a string representation of a multipoint field .
writes a list of messages to a jsongenerator .
serializes the {
write a field to a jsongenerator .
<unk> > <unk>
read a parameter from a json array .
resolves the url for a url .
replies the url for the given url .
join the parts of a url to a url .
returns the path components of the given path .
returns the url of the given inetaddress object .
try to create a canonical url for the given url and refer to the original url .
<unk> > <unk>
extract the configuration element from conf
checks if the given url points to a jar file .
create a new url .
/ * ------------------------------------------------------------
fixes http headers
attempts to parse the given { @link response } into a { @link string } .
parse a timestamp value .
get the metadata for a given password .
merges the given metadata into the given metadata .
loads the rules from the engine .
<p > <unk> . < / p >
adds a key value pair to the properties file .
adds a request to the server .
calculates the id of the url .
validates a field name .
/ * ( non - javadoc )
get the charset from the content metadata file .
parses the given { @link byte [] } as a json string .
sets the charset to use for the given charset .
recursive method to get the charset information from the input buffer .
extracts the range of bytes from the beginning of the byte array .
<p > partition . < / p >
sets a parameter .
returns the value of the first key in the configuration .
returns the command that will be sent to the server .
main entry point .
parses a cookie string into a set of cookie objects .
checks if the given string is a valid domain name .
returns the base uri for the given url .
get the robot rules set from cache .
/ * ( non - javadoc )
extracts the meta tags from a document .
splits the given string into a list of lines .
normalized ledger ids .
/ * ( non - javadoc )
filter the given { @link <unk> } as a { @link <unk> } .
builds the html template for the given url .
create a list of rules from a list of rules .
loads rules from the jar file .
process query elements .
canonicalize the given url .
translate a path to a string .
converts a byte array to a hexadecimal string .
creates a client for the specified region .
returns a { @link <unk> } for the specified { @link <unk> } .
add a { @link <unk> } to this { @link <unk> } .
calculates the number of requests that should be taken into account .
trigger batch queries .
get a configuration object from storm s configuration
receive notification of character data .
/ * ( non - javadoc )
/ * ( non - javadoc )
receive notification of a comment .
receive notification of cdata .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
parse a robot .
checks if the given { @link <unk> } is { @link <unk> } .
returns a map of key - value pairs .
/ * ------------------------------------------------------------
returns the string representation of the given string .
/ * ( non - javadoc )
{ @inheritdoc }
deserialize a querycriterion .
get the configuration from storm s configuration file .
creates a new instance of { @link <unk> } .
submit a topology
the main method .
<unk> <unk> <unk>
unmarshals the given { @link java . lang . consumer } into a { @link java . io . <unk> } .
parses the given { @link inputstream } into a list of { @link list } objects .
creates a new { @link <unk> } from the given { @link inputstream } .
unmarshals the given { @link file } to an instance of { @link class } .
向工作簿中写入beans，所有bean写在一个sheet中 from <unk> <unk>
creates a new { @link <unk> } from the given { @link inputstream } .
returns the instance of the specified field .
set the value of the casting column
sets the value of the <unk> .
returns the default size for the given { @code size } .
set the drawable at the specified index .
set the drawable at the given index .
sets the color of the slider .
updates the offset of the slider .
big - endian
moves the item position to the position in the adapter .
/ * update velocity vector
returns the color for the contrast of the colors in the map .
rounds a value to the nearest integer .
returns true if the given string matches the pattern .
creates a {
set the coverage reader .
returns a new { @link <unk> } based on this { @link <unk> } .
produce a jsonarray containing the given <code > <unk> / code > from the given <code > <unk> / code > .
{ @inheritdoc }
returns the string representation of the version .
returns the value at the given index or <code > null< / code > if there is no such element .
returns the levenshtein distance between two points .
returns a string representation of the given string
set the value of an element in the matrix .
set a string to a string
gets the available parameters .
returns a string representation of the given string .
append a portion of a string .
append a string to the given stringbuffer .
returns the dot product of this matrix b .
multiplies the two matrices by one .
solve a * x = b
returns the offset interval for the given <unk> .
initialize the local table .
draw the image at the specified graphics context .
show the evolution monitor .
shows the dialog . if called outside the edt this method will switch to the ui thread using <code > swingutilities . invokeandwait ( runnable ) < / code > .
calc the data from the file .
read compressed data from the file .
returns a random estimate of the specified range from the given <unk> .
generates a new random {
unzips the file into a random file .
the main method .
get a local unit name .
creates a new { @link <unk> } .
returns the plural form for the given uri .
reads a resolution from the elapsed time .
/ * ( non - javadoc )
checks if the given date is within the given date .
/ * [ deutsch ] <p > ermittelt ob das angegebene intervall vor dem <unk> . < / p >
paint this date .
extend the working range .
sets the start date .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the duration of this view .
gets the duration of the <unk> .
/ * ( non - javadoc )
adds a bean to the map .
initialize the actions of the actions .
reads a coordinate array from the supplied index .
reads a coordinate curve from the given index .
returns the file position of the file .
get the next character in the string .
main method .
opens the given database location .
<unk> <unk> <unk>
get the name of the extension .
updates the cache by name .
gets the plugin by its short name .
/ * ( non - javadoc )
note : this is a good way to determine if a point is a good way of the projection
todo : move to <unk>
control the projection of the projection
computes the energy of the specified point .
run the projection
returns true if the given file is a multimedia file .
creates a new { @link <unk> } from the given { @link <unk> } .
clone a {
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the bounds of the bounds of the <unk>
/ * ( non - javadoc )
constructs a {
opens the next file in the repository .
<unk> <unk> <unk>
reads a chemfile object from the input file .
/ * ( non - javadoc )
returns the estimated number of dimensions for the specified dimension .
register the given directory with the watchservice
processes the given { @link <unk> } and adds it to the watch queue .
creates a new { @link <unk> } instance for the given date .
returns true if the given classname is present in the classpath .
returns the class for the given class name .
register a { @link factory } with a { @link class } .
validate a feature .
method <unk> .
checks if the feature is ok .
returns the {
/ * ------------------------------------------------------------
write text to the response .
package - private for testing . <p >
builds the html for the html anchor . <p >
get the debug information for the simple workplace .
/ * not supported
/ * implementation
find all the services in the given fedoraresource
/ * ( non - javadoc )
returns a string from the given url as a string .
unmarshals the given content into a channel .
gets the url contents as a string .
op op op op op op op op op op > op op op op op op op op op op op op op op op op op op op op op op op op op op op in op op op in op op op op op op in op op op op in op op op . op op op op op
executes the given operator ( abbreviation for <unk> ) .
src / main / resources / org / drools / functions
src / functions
<p > <unk> . < / p >
creates a new { @link org . apache . hadoop . io . <unk> } .
/ * ( non - javadoc )
$example off : <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
method to get the last element from a <unk>
find a dataset by path .
find a {
gets a {
returns { @code true } if the two { @link object } s are equal .
/ * ( non - javadoc )
parse a <unk> line .
reads the top of the file in the raf .
private method for reading the data from a <unk> file .
synchronized for <unk>
/ * package
converts a short into a short value
convert a byte array to an int .
returns the date for a julian day .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
returns a string representation of the given object name .
checks if the given string is a valid service name .
open a new file
validate the operation .
reads the contents of a structure from the disk .
read a <unk> .
writes a file to the file .
writes the data in the given vector .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
reads from the specified input stream and returns true if the data is read .
creates the values from <code > <unk> / code > and <code > <unk> / code > .
/ * ( non - javadoc )
write data to socket in binary format .
a version of <unk> .
returns true if at least one of the children has been loaded .
returns the <unk> of lines l1 and l2 .
returns the projection of the projection of the projection at the given coordinates .
returns the angle covered by the given point . <p > this method is equivalent to : <pre > { @code <unk> ( <unk> ) } < / pre > <p > please see <a href = http : // en . wikipedia . org / wiki / <unk> > http : // en . wikipedia . org / wiki / <unk>
returns the angle of the poi by the specified coordinates .
returns the angle of the angle covered by the given coordinates .
adds the given { @code <unk> } to the given { @code <unk> } .
returns the function with the given name .
load a function
loads the given { @link <unk> } from the given { @link <unk> } .
generates a { @link <unk> } from a { @link <unk> } .
/ * ( non - javadoc )
get the value of the level .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
creates a <unk> for the given prefix .
get a list of all the files in the given folder .
read parameter .
returns the distance between two nodes .
returns a human - readable description of the given type .
returns the record level unit .
/ * [ deutsch ] <p > liefert den <unk> <unk> . < / p >
complete generating a vertical opcode between two { @link <unk> } s .
returns true if the given { @link <unk> } is an ancestor of this relation .
create a { @link <unk> } from a { @link <unk> } .
{ @link <unk> }
encode date range filter .
encode a { @link <unk> } .
deletes the given { @link <unk> } .
entry point of <unk>
/ * [ deutsch ] <p > <unk> . < / p >
returns the string representation of the { @link <unk> } .
gets a { @link <unk> } representation of the given { @link <unk> } .
{ @inheritdoc }
returns a new instance of { @link <unk> } .
returns the class for the given class name .
register a constructor with the given name .
make a transform transformation .
creates a roc transformation for the given { @link <unk> } .
builds a projection object .
fires a property change event to all listeners .
factory method for create a new { @link jdialog } object .
the main method .
get the coordinate at the given index .
get file location from request path .
/ * ( non - javadoc )
/ * this method reads an <unk> value from the given <unk> .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
initialize the style .
returns a copy of this { @code <unk> } with the specified chronology . <p > this instance is immutable and unaffected by this method call .
serialize an array of <unk> .
/ * ( non - javadoc )
writes an array of bytes to the given buffer .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a latlng for the given feature .
/ * <unk>
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
try to read a { @link <unk> } from a { @link <unk> } .
finish the init .
show the grid .
gets the field .
/ * ( non - javadoc )
load a list of <unk> from the given reader .
/ * ( non - javadoc )
{ @link <unk> ( int ) }
returns the explanation of the power box .
control the projection of the projection
move the lat / lon of a point to a point .
attempts to create a <code > <unk> / code > .
parses the given css text .
prints a string to the <code > <unk> / code > <code > <unk> / code > <code > str< / code > character .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package private
initializes the length of the pe file .
inits the .
initializes the grid model .
reads next grid image
/ * ( non - javadoc )
the main method .
/ * ( non - javadoc )
write the preamble of the preamble to the given writer .
writes the latex values to the output file .
/ * ( non - javadoc )
find all files in the given directory .
unzips a log file .
gets the <unk> instance .
initializes the <unk> .
the main method .
returns the number of containers
converts a list of strings to a grid .
writes a grid record to a grid record .
/ * ( non - javadoc )
unpack a path from the scene graph .
re - encodes the vertices .
calculate the deltas according to <unk> and <unk> .
read a 32 - bit integer record value .
/ * merge the <unk> record to the file passed in .
/ * ( non - javadoc )
/ * ( non - javadoc )
prints the query grids .
iterates through the grid groups and prints the results .
<unk> - <unk>
read a normalized key from the stream .
reads the next byte from the input stream .
add a new variable to the map .
print the icon .
print the stack trace declaration .
deserialize the headless stream .
save the given { @link datastream } to the given { @link <unk> } .
/ * ( non - javadoc )
obtains an instance of { @code <unk> } from the given year month and day - of - month .
returns a { @code string } representing the date in utc .
returns a string representation of the given time .
returns a new { @link date } from the given { @link date } .
write a date to a date / time string .
/ * [ deutsch ] <p > <unk> . < / p >
reads a date from a date / time string .
returns the value of the specified field in this date - time . <p > the value is converted to a string based on the type of the instant . <p > the returned value is converted to a { @code int } .
/ * [ deutsch ] <p > addiert die angegebenen zeiteinheiten . < / p >
/ * [ deutsch ] <p > subtrahiert den angegebenen <unk> zu einem <unk> . < / p >
<unk> method .
gets the difference between two fields .
creates a { @link <unk> } .
creates a allocationshape for the given data
creates a new <unk> .
creates a new { @link <unk> } .
get the proxy file for the given request .
/ * ( non - javadoc )
/ * ( non - javadoc )
saves the configuration to a file .
escapes a string as a json string .
/ * ( non - javadoc )
creates a list of slices from an array of <unk> .
splits the given byte array into a single byte array .
/ * package private
run shuffle of a data set in a data set .
get the next object referenced by the given file .
checks to see if a set of <code > <unk> / code > is in a set of dimensions .
reduce a list of <unk> to a data set .
returns the long value of the given { @link type } .
returns the body of a { @link <unk> } .
convert an object to a enum enum .
returns a string representation of the given hash .
given a set of <unk> in a set of <unk> objects
convert the given value to the given unit .
add minutes to a date
subtracts the smallest unit from the smallest storage unit .
subtracts the given amount of scaled units by the given unit .
/ * ( non - javadoc )
gets the learning rate for this instance .
/ * ( non - javadoc )
performs conversion to desired conversion units .
/ * ( non - javadoc )
convert the coverage data to a string .
main method for showing materialized view .
returns a {
returns a new array .
returns a data from the <unk> .
read a point
/ * ------------------------------------------------------------
{ @inheritdoc }
/ * ( non - javadoc )
{ @link <unk> ( <unk> map ) }
find a service by name .
/ * ( non - javadoc )
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
get the constant pool size .
returns the start of this line constant .
get the constant count of this gate .
reads the data from the file .
/ * <unk>
write this object as xml .
make a variable - formatted string from the given variable .
/ * ( non - javadoc )
returns the preferred width and preferred width and preferred dimension
verify that {
returns the <unk> interactions of the given time index .
get the coordinate of the coordinate normal
/ * ( non - javadoc )
prints a double - out vector .
/ * ( non - javadoc )
/ * rewrite the <unk> in <unk> format .
given a string representing a set of fonts and / and / or / and / or / or / or / or / or / or / or / and / or / or / or / and / or / or / or / and / or / and / or / or / and / or / and / or /
/ * rewrite / index / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk>
parse a query string from a string .
returns the center of the given center .
returns the center of the <unk> for the given id .
get the catalog pixel resolver
gets the geospatial properties of the feature .
/ * ( non - javadoc )
compute the ifd variables .
inform the <code > date< / code > of a <code > date< / code > with the specified <code > calendar< / code > .
/ * ( non - javadoc )
/ * [ deutsch ] <p > erzeugt ein neues <unk> kalenderdatum . < / p >
returns a new <unk> from the given date .
/ * [ deutsch ] <p > <unk> . < / p >
the main method .
gen - last : <unk>
gen - last : <unk>
creates a new { @link <unk> } from the given { @code factors } .
runs the evaluation .
returns true if the file is valid .
return the audiofileformat from the specified file .
reads the records from the file .
<p > main . < / p >
/ * initialize the outline code
<p > <unk> . < / p >
reads the last time steps from the given section .
reads a single chunk from the table .
reads the entire contents of the specified section in the specified channel .
increase the point in the { @link <unk> } .
calculates the value of the step .
<p > <unk> . < / p >
adapted from <unk> .
parses the given time line and return the lengths of the lengths .
use <unk> or <unk>
performs a vertical transformation around the given dimension .
remove a partition .
/ * <unk>
/ * ( non - javadoc )
this method is used to extend { @link <unk> ( boolean ) } .
opens the file at the specified position .
{ @inheritdoc }
compute the singular values of a matrix .
check if a column occurs in the matrix .
parse the given url .
returns the bounding box that can be applied to the given {
method to convert the {
this method is used to get the bounding box from the bounding box
plots the <unk> offset from the two trajectories .
prunes cameras .
creates a new { @link <unk> } for the given { @link <unk> } .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
<unk> - <unk>
converts an integer to a string .
converts a long to a string .
returns a string representation of the given string .
formats the given { @link long } value .
show the version
/ clover : off
write the xml document to the writer .
write the xml document to the writer .
create a {
creates a new {
write axis axis .
returns a string representation of the given string array in the given array .
generate the html representation for the given { @link coordinate } .
the main method .
/ * ( non - javadoc )
returns the count of the first element in the iteration .
returns a string representation of this descriptor .
create a new { @link <unk> } from the given { @link slice } .
/ * ( non - javadoc )
/ * ( non - javadoc )
encodes the object .
return the global scope for a given name
compute the type of the <unk> .
encode a list of bytes to a stream .
extracts the data from an <unk> .
convert a {
decode serialized data
extract the contents of a url .
get the content of the file as a string .
this method is used to dump the contents of the input stream to an input stream .
/ * ( non - javadoc )
figure out the parent of the node .
private void <unk> () {
adds the given attributes to the list of attributes .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the std of the results
add a listener to the <unk>
entry point for the action
/ * ( non - javadoc )
create a directory object from a file .
read a variable .
print error details .
/ * ( non - javadoc )
decodes a stream into a stream .
returns true if this correlation is empty .
returns true if the specified point is in the geoposition for the given point .
compute the shape for the given chunk .
sets the value of the specified key in this map . <p >
parse a date from the given text .
get the calendar hours from the given day .
/ * [ deutsch ] <p > liefert den <unk> { @code date } . < / p >
/ * [ deutsch ] <p > liefert die aktuelle zeit in <unk> . < / p >
converts the given value to a date object .
/ * ( non - javadoc )
@deprecated use { @link <unk> ( double ) } instead .
get the length of the passed in map .
******************** initialization ************************************
adds the given file to the file .
adds a coordinate to the given database .
adds a number of points to be used in a gaussian
make a projection from the given error .
/ * ( non - javadoc )
adds a type variable to the cluster .
read a single coordinate from the grid .
/ * <unk>
read the normalization
prints a lat / lon pair to the console .
add a new space .
read data from the grid .
creates the <unk> axis .
sets the distance between the point and the projection .
calculates the distance between the whole line and grid .
/ * ( non - javadoc )
<p > <unk> . < / p >
get scan scan scan .
call this method to load a {
/ * ( non - javadoc )
get a comment object from an input stream .
write the bugcollection to the given output node .
method <unk> .
get the number of levels .
returns true if the file is a valid file .
opens the <unk> .
generate the attributes for the pharmacophore .
reads in the given section of the given section .
/ * ( non - javadoc )
/ * ( non - javadoc )
sneaky throws a { @link <unk> } .
performs serialization in the format of { @link <unk> ( java . io . outputstream java . io . outputstream java . io . outputstream <unk> object ) } .
/ * ( non - javadoc )
print the information about the column .
print the specified <code > <unk> / code > to the specified <code > <unk> / code > .
print the given message to the given stream . if the space is <code > <unk> / code > and <code > <unk> / code > is <code > true< / code > then the <code > <unk> / code > is used to determine whether the <code > <unk> / code > is <code > true< / code > .
/ * ( non - javadoc )
creates a bidirectional clone of the specified {
@see <unk> ( java . util . date )
extract variable name from a { @link <unk> } .
returns the value of the given { @link <unk> } .
----- private methods -----
build a new { @link <unk> } .
sets the levels in the form of <unk> .
parses the dimension of the expressionfactory .
create new variables .
create a <unk> from a reference .
returns a floating - point conversion to the given floating point value .
the main method .
parse enhance mode .
initializes the cache file cache .
wrap a {
method <unk> .
opens a dataset .
creates a { @link <unk> } from the given { @link <unk> } .
enhance the specified <unk> .
acquire a { @link <unk> } from a { @link <unk> } .
acquire a <unk> from a list of <unk> .
open a {
opens a { @link io . <unk> . <unk> . <unk> . <unk> } .
acquires a { @link <unk> } from the specified { @link <unk> } .
recover a file from a <unk> file .
attempt to open a file .
this method acquires a { @link <unk> } from the given { @link file } .
transforms a { @link <unk> } into a { @link <unk> } .
liefert die <unk> aus den urn
returns true if the given full name is found or not .
returns the image format associated with the given code .
returns the name of the coordinate instrument associated with the given object name .
/ * ( non - javadoc )
/ * ( non - javadoc )
add a coordinate about a coordinate axis .
enhanced <unk> .
set the values of this polygon .
set the value of the given variable .
execute a put call against the partial url
/ * ( non - javadoc )
dump the data for the given group .
debugging function .
main method .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
opens a new { @link <unk> } from the given { @link httpservletrequest } .
process an html get or post .
returns an { @link <unk> } for the given { @link <unk> } .
returns the index of the given indices .
read a file column from a file .
returns the type of the given type .
returns the type of the given service type .
create a tileset from a file .
/ * ( non - javadoc )
<editor - fold defaultstate = collapsed desc = <unk> >
向工作簿中写入beans，所有bean写在一个sheet中 默认以bean中的所有属性作为标题且写入第0行，0 - <unk> <unk>
split a linestring into a list of <unk>
writes the l2 - bit words at the given index to the given vector .
gson invokes this method to deserialize the axis of an axis .
augments a { @link <unk> } with the given { @link <unk> } .
add a <unk> to the <unk> .
creates documentation for documentation .
remove the documentation for the given type .
returns the file position of the file at the given position .
returns the maximum number of bytes insertion .
/ * [ deutsch ] <p > liefert den <unk> <unk> . < / p >
this method is used to get the value of a number .
/ * ( non - javadoc )
save the contents of this { @link <unk> } to a { @link <unk> } .
/ * <unk>
determines the constructor for the given resource .
returns true if the href attribute is a valid xml attribute .
creates a new {
/ * ( non - javadoc )
creates a new { @link <unk> } for the given class name .
register a class with the given name .
return the list of rdn names from the given dn .
attempts to build a genbank / embl - attribute location .
entry point .
/ * ( non - javadoc )
find coordinate axes for a { @link <unk> } .
this method is used to format the <unk> .
scan the given { @link <unk> } .
parse a {
make a new coordinate system .
generate a non - global non - non - optimal non - global non - explicit non - global non - non - private non - private non - private non - private non - static non - static non - static non - static non - static non - static non - static steps .
train the <unk> of a { @link <unk> } .
add a coordinate system .
determine the coordinate axis for the given array axis .
make a new <unk> transformation .
called by <unk>
add a coordinate variable .
obtains a list of { @link dataset } s from the specified { @link <unk> } .
find all the services in the predecessors .
<p > filter . < / p >
/ * ( non - javadoc )
delete the <unk> .
finish transformation .
get the base and factor base parameters .
convert a string representation to a long value .
parses the attributes of a string
load a <code > <unk> / code > from a <code > string< / code > .
the main method .
executes the ant task .
initialize the <unk> .
/ * ( non - javadoc )
produces a map of key - value pairs .
opens the <unk> object .
/ * ( non - javadoc )
increment the counter for a given value .
get the singleton instance of <unk> .
add a new legal symbol .
the main method .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link <unk> } .
/ * ===============================================================
/ * <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
returns true if the given time string is equal to the given time range .
/ * ( non - javadoc )
gets attribute .
get the attribute value .
adds an attribute to the attribute .
<p > append to the <code > <unk> / code > attribute . < / p >
appends the specified { @code <unk> } attribute to this { @code attribute } .
/ * ( non - javadoc )
/ * ( non - javadoc )
remove an attribute from the table .
print the request representing the request .
writes the given string to the given file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
validates the level of topics and returns a <unk> .
set this pane to be coplanar with the specified points .
get or create a path from the given path segments .
loads a class from the given class name .
register a listener .
register a given exception .
converts given {
creates a custom { @link <unk> } for the given { @link <unk> } .
/ * returns the <unk> .
erzeugt einen <unk> <unk> <unk> <unk> <unk> <unk> .
evaluateconstraints () method
get the prefix of the given code point .
{ @inheritdoc }
validates the given select node .
method to lookup given {
convert a nodelist to a list .
use this method to sort a list of information in a generic order
compare two tables
returns the value of the <code > <unk> / code > of the <code > <unk> / code > .
get partition keys .
/ * ( non - javadoc )
opens the frames from the file in the raf .
reads next data from the file .
find the variable with the given attribute name .
find the value of a variable .
check if the value of the attribute with the given name exists .
change the value of a parameter .
returns the structure with the specified <unk> array .
returns the component of the given structure .
returns true if v is a <unk> structure .
returns the value of a literal property handler .
get a feature type from a list of <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the dimension name associated with the specified key in the specified format .
returns the coordinate of a texture coordinate . <p >
/ * compute the <unk> value of the given instructions .
sets the coordinate values of the index buffer .
returns the union of the given ranges .
create a <unk> with data .
compute the weight matrix .
create a <unk> from a <unk>
get the bounds of the <unk> table
find the range hit .
calculate the minimum extent of the run .
prints out usage information .
initialize the singleton instance .
determines the name of the dimension .
transfomiert den <unk> des <unk> . < / p >
add an action to this menu .
add an action to the menu .
add an action to this menu .
show the title of the menu item .
splits a list of nodes into a map .
find a method by name .
returns the {
sets up the length of the file .
/ * ( non - javadoc )
read data from a libsvm file
/ * ( non - javadoc )
read the heap from the response .
read table for table table
parse a structure from a structure frame
/ * ( non - javadoc )
returns the center of the track .
adapt a { @link <unk> } to a coordinate .
adds a new segment to the end of the list .
the main method .
returns the index of the first occurrence of the specified pattern starting at the given offset .
compute failure .
classifies the given classifier on the given classifier .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
deactivates all callback handlers .
this method is used to stop the background thread .
sets the column visibility .
hide the table
move this column to the new index .
returns the names of the columns in the given row .
returns the column at the given index .
creates a new { @link <unk> } from the given { @link <unk> } .
creates a new <unk> object . <p >
creates a <unk> object .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
returns a new { @link java . lang . object } of type { @link java . lang . number } .
returns the next { @link <unk> } of the given type .
returns a pseudo - random uniformly distributed int value between min and max .
/ * ( non - javadoc )
returns a list of all the variables in this input stream .
reads the data from the given section .
/ * ( non - javadoc )
get the {
read the snapshot table .
load a single line .
open a file
lazy <unk> .
{ @link <unk> ( object ) }
main method .
removes the variable with the given name from this map .
converts the given string into a human readable direction .
check the names of duplicate patterns .
runs the example .
construct the transient data
sets the number of colors in the table .
reads a color table .
/ * ( non - javadoc )
/ * ( non - javadoc )
save the values in the stream .
sets the world bounds to world coordinates .
<editor - fold defaultstate = collapsed desc = visualization >
<editor - fold defaultstate = collapsed desc = visualization >
calculates transform .
convert a message to a compatible file .
performs an http upgrade on the given auth scope .
create a { @link <unk> } from an { @link uri } .
/ * ( non - javadoc )
returns true if the given { @code range } is equal to the given { @code factor } .
this method creates a new { @link org . <unk> . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal . internal
returns true if the proxy address is relative or not .
prepare request for logging .
prepares a request context for logging purposes .
main entry point .
get the certificates under the given directory .
get the next index .
read the classes from the input stream .
convert a <unk> to a <unk> .
sets the element content .
/ * ( non - javadoc )
<unk> <unk> <unk>
return the <unk>
create a <unk> xml element
{ @inheritdoc }
entry point for read - only view .
get the result service element
create a <unk> element
create a <unk> element
create the <unk> for a <unk>
create a <unk> from a {
/ * ( non - javadoc )
/ * <unk>
prints the menu .
adds the given menu to the menu .
create the parameters documentation .
parse info from words
get the parameter with the given name .
the main method .
read a string from an input stream .
read all bytes from an input stream .
determines the properties of the constructor .
creates a new { @link <unk> } for the given text and / or <unk> .
returns the conversion factor for the given units .
<unk> - <unk>
splits the {
/ * ( non - javadoc )
return pivot permutation vector .
a helper to replace a <unk> in a <unk> .
set the <unk> for this station .
calculates an <unk> for an <unk>
adds a propertychangelistener to the listener list .
method to get the value for this fieldvalue .
/ * ( non - javadoc )
returns true if the given value has changed .
reads the value of the given value .
<p > sets the value of the <code > <unk> / code > property . < / p >
fire the change event .
returns a string representation of the top - level format of the given list of documents .
~ methoden ----------------------------------------------------------
read the frames from the file .
/ * ( non - javadoc )
returns the type of the given method in the given class .
returns the type name for the given name .
create a point of type { @link point } .
read a log file .
get the coverage of given subset of { @link <unk> } .
writes the domain to the specified writer .
set the debug flags for this request .
get the class name from the path .
updates the global attributes .
/ * ( non - javadoc )
/ * ( non - javadoc )
sends a top - level task to the task .
add a new variable to the parent group . <p >
returns true if the given type is an instance of the given type .
add attributes to the tag .
/ * ( non - javadoc )
/ * package
given a list of <unk> and <unk> the given <unk>
/ * <unk>
returns the scalar value for a given data type .
this method converts enums for datatype
gets the data type for a given <unk> type .
sets the data optype
for testing only
<p > <unk> . < / p >
load options .
parses the given formatter using a formatter .
creates an instance of <code > <unk> / code >
loads an image from a docker image .
creates a cursor out of the specified image with the specified hotspot .
/ * ( non - javadoc )
the main method .
get the integer value from the dictionary
reads the data from the given position .
get the data fill with the given index .
read data from the pdf file .
generate the output variable for the given layout .
read the data from the given layout
copy the contents of the given subject to the given channel .
convert a primitive type to a primitive array .
convert a primitive array to a primitive array .
decodes a byte array from a byte array .
convert a byte array to a byte array .
converts a byte array to a byte array .
{ @inheritdoc }
writes the children of a structure .
stores the specified field in the array
/ * ( non - javadoc )
get scalar value
creates a new { @link <unk> } with the given index .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a new method to the given field .
decodes a float into a float .
same as { @link <unk> ( <unk> group <unk> boolean ) }
affiche une boîte de dialogue <unk> .
creates a new { @link <unk> } from the given { @link <unk> } .
returns the normalized path of the given path .
gets the x bounds of this envelope .
sets the <unk> .
add a { @link <unk> } to a { @link <unk> } .
gets explanations for a <unk> .
reads a collection of spec files from a file .
/ * ( non - javadoc )
create a set of datasets .
get a <unk> for the lzo file .
create a dataset from the given <unk> .
creates a { @link dataset } from a given { @link <unk> } .
/ * ( non - javadoc )
adds a point to the list of points .
removes the next line from the list .
deletes the previous entry in the list .
create a line from a <unk> .
get the value of a point .
get the value of a point .
/ * package private
returns true if the given <unk> matches the given <unk> .
computes whether a dataset can be filtered by applying filter .
adds a dictionary to this dictionary .
creates a copy of the <unk> copy of the <unk> .
evaluate javascript object .
closes the constraint .
send a webhook notification to a file .
evaluate the clauses of all clauses .
load all of the objects in the vector .
prints the constraint .
returns true if the specified group was unset .
performs the <unk> .
deeply sets the {
add unknown dimensions to unknown dimension .
returns the group with the given name .
download data from the given url .
/ * ( non - javadoc )
/ * ( non - javadoc )
parse the file .
return an enumeration of the property names for the event
/ * ------------------------------------------------------------
print the attributes of this object .
/ * ------------------------------------------------------------
creates a new tab content .
cleans the name of a js code .
initialize a search output .
paints the given <unk> .
creates a shape filled shape from the given shape .
add a { @link <unk> } to this { @link <unk> } .
/ * ( non - javadoc )
remove the specified layout component .
documentation inherited from interface
returns the minimum layout size .
documentation inherited from interface
<p > checks whether the given { @link <unk> } is a <unk> { @link <unk> } . < / p >
make a new <unk> for the given { @link <unk> } .
sets the image maximum .
remove the given time unit .
the main method .
reads a { @link point } from the specified { @link <unk> } .
returns the <unk> .
creates and executes a <unk> . <p >
opens the token .
this method convert to <unk> ( <unk> )
solves cubic equation
gets the <unk> between <unk> and <unk>
/ * ( non - javadoc )
converts the coordinates of an image into an array of coordinates .
given a line that represents a line symbol given a line that represents a line scaled by a line symbol .
elliptical arc curve to the given coordinates .
given a series of coordinates compute an array of <unk> .
calculates the angle of <unk> from <unk>
replies the coordinates of the polygon .
removes all vertices which are contained in a linearring .
todo : <unk>
this method is used to write a point to a specific location .
writes a point <unk> to the given output stream .
move a point to a file .
write a { @link featurecollection } into a { @link <unk> }
returns a new member with the given name .
get a scalar member .
get the scalar object for the given members .
returns the scalar value of this member as a member of the current member .
get a scalar member .
get a single member .
returns the member with the given name .
returns the member sequence for the given member name .
shows the given { @link <unk> } .
returns the full name of this item .
returns the authority of the authority .
get the access provider for the given service type .
finds a permission by its name .
removes the tag .
get the layer s parent .
get the metadata for the given catalog .
find the service with the given name .
returns the default access to the parent queue or null if there is no default access
execute groovy script
version&schema - specific filling into the impl
returns a projection that computes the projection of the projection between the two given points .
move the camera s coordinates to a ring
get the arc arc coordinates for a given angle and extent .
returns the cubic projection for the given pattern
/ * <unk>
find all the <unk> in a dataset .
returns the url of the url .
reads a coordinate array from the given time index .
get the coordinate mask for the given <unk>
nonsymmetric to <unk>
get the x - description of the predictions array .
creates a deep copy of this { @link <unk> } . <p >
calculates the whole { @code this } .
returns the <unk> of the given latitude .
todo : move to <unk>
returns the distance between two points .
converts instances of earth - fixed projection to wgs84 .
returns the angle of the angle between two points .
returns the angle between the two given coordinates .
<p > <unk> . < / p >
the main method .
replaces the designated column in the specified file .
use this method to write the content of a dataset to a file .
the main method .
/ * ( non - javadoc )
opens the file
/ * ( non - javadoc )
creates a list of { @link <unk> } s for the given annotations .
/ * ( non - javadoc )
write a parameter to the output variable .
write the results of the pharmacophore queries .
returns the index of the first variable in the given array .
returns a list of <unk> for each station
<p > <unk> . < / p >
make a variable variable with the specified dimension .
gen - last : <unk>
/ * parse and escape a quoted string .
print the string representation of the symbol .
parse json text .
/ * <unk>
append a feature tree to the output stream .
returns true if the constraint matches the given constraint .
<p > <unk> . < / p >
{ @inheritdoc }
{ @inheritdoc }
returns the size of the given batch size .
used to read the contents of an error .
<p > classify . < / p >
/ * ( non - javadoc )
receive a message from the input stream .
initialize the soap code .
/ * [ deutsch ] <p > liefert das <unk> der <unk> <unk> . < / p >
@deprecated use { @link <unk> ( string ) } instead
/ * [ deutsch ] <p > <unk> . < / p >
<p > converts a <code > string< / code > to a <code > date< / code > . < / p >
read a { @link <unk> } from a { @link point } .
creates a list of { @link <unk> } s from the given { @link string } .
read a file into a list of records .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
clone the {
creates a new { @link file } instance from the given { @link file } .
/ * ( non - javadoc )
this method does the same as {
create a subset of the given { @link <unk> } .
returns the index of the first occurrence of the specified character in the given array starting at the given index .
returns true if the given character is a letter .
replaces all occurrences of a single character in a string with another string .
converts a string to an integer .
convert a string to a double .
parses the given string to a long value .
convert a double to a number .
returns the index of the first occurrence of the specified character at the specified index .
returns the index of the first occurrence of the specified character at the specified index .
/ * ------------------------------------------------------------
create index .
/ * ( non - javadoc )
returns an array of all the atoms in the chain .
returns true if the text is valid .
method to get the edit value for this fieldvalue .
set the value of the term .
this method returns the description of the given arrow format .
augments a {
calculates the angle between two points .
<p > <unk> . < / p >
retrieve a date from the given calendar .
<p > liefert die <unk> <unk> <unk> <unk> <unk> <unk> <unk> . < / p >
<unk> la <unk>
/ * ( non - javadoc )
calculates the angle in degrees
read a world map .
/ * [ deutsch ] <p > formatiert die angegebene dauer . < / p >
returns a string representation of the contents of the specified string .
/ * ( non - javadoc )
return true if the given value is a valid shipping unit .
/ * ( non - javadoc )
creates a list of storage accounts from a xml file .
returns the shape of the polygon
optimize a projection
get the projected shape of the projection
generate the tag mapping .
creates a new notes note
returns the variable id for the given variable .
resolve a {
parse the list of objects into a collection of <unk> objects .
/ * ( non - javadoc )
parse the data variables .
adds a <code > <unk> / code > to the <code > <unk> / code > .
find the fringe with the specified name .
find the authentication token from the tree .
finds the element at the specified index .
populate a url .
get the shape from an array of ints
returns the parent group .
returns the name of the given dimension .
returns the index of the first dimension of the given name .
$non - nls - 1$
returns a shape representation of the column values for the given { @link <unk> } .
returns the union of the given ranges .
returns a { @link <unk> } for the given shape subsection of the given section .
creates a new variable with the specified index .
documentation inherited from interface
sets the streaming mode streaming mode .
read an array of bytes from the input stream .
read the ranges from the given ranges .
<editor - fold defaultstate = collapsed desc = sections related >
reads a collection of scalar values .
removes the data from the cache .
/ * ( non - javadoc )
removes the given section from the cache .
/ * ( non - javadoc )
reads the bytes from the given section into a byte channel .
get the name of the modifiers .
returns the full name of the name .
append the pdb representation of this dbref to the given stringbuffer .
<p > <unk> . < / p >
gets the name and dimensions for the given <code > <unk> / code > .
returns the full name of this { @link <unk> } .
/ * ( non - javadoc )
sets the data type encoding .
set the dimensions of this {
reset the shape of the shape
set the dimensions of the { @link <unk> } .
reset command - line usage options .
set the linear indices of the dataset to the given shape
sets the dimension of the kernel .
returns true if the database is cached .
set the cached data .
returns a list of {
gets the coordinate of a coordinate variable .
set the bounding box of this <unk> .
implements the <unk> algorithm .
parses the temporal extent of this { @link <unk> } .
find all datasets .
check if the given file is a multimedia file .
opens the given { @link <unk> } .
creates a new <unk> for the given <unk> .
validate the preparedstatement with the given moment .
evaluate the <unk> .
on super column .
fills the given remote directory with the given information .
get the {
creates a <unk> object from the given information .
creates a new { @link <unk> } from the given { @link <unk> } .
desirialize a struct object
fills the given { @link <unk> } with the given { @link <unk> } .
returns a {
loads the native library from the given location .
run the algorithm on a data set .
validate the given name .
/ * ( non - javadoc )
print the constraint .
create an instance of { @link description } { @link description } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @code description }
performs the actual work of a task .
process a <unk> message
<unk> an <unk>
this method creates the record variables for the subprocess .
write a { @link featurecollection } into a { @link <unk> }
this method is used to move a point to a specific location .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an iterator over all features in the feature set .
gets the visual transform .
sets the minimum cache size .
calculates the transform .
draw the map area .
returns the world point to the specified screen coordinates .
calculate the end points of the screen
builds a canvas that represents a dwg rectangle .
pan the <unk> with the specified <unk>
calculates the zoom level of the contour with the given width and height .
read the <unk> from the bounding box .
adds a new { @link <unk> } to the list of listeners .
adds a new listener to the listener list .
/ * ( non - javadoc )
<p > newinstance . < / p >
try to print a command
protected method to print a command line .
print a file to a file .
renders an xml file .
print the next task .
writes a string to a file .
write a variable to a string representation .
prints an arbitrary symbol to the given appendable .
load the image .
prints an exception to the specified printwriter .
/ * checks if the given url is valid .
<unk> - <unk>
<p > <unk> . < / p >
helper method for ecma - cases .
read attribute value from string .
adds a call to the { @link <unk> } .
collect radius radius from envelope_b .
prints data to stdout .
/ * ( non - javadoc )
/ * ( non - javadoc )
insert data into the given data collection .
formats the given list of { @link io . <unk> . <unk> . <unk> . <unk> } and { @link org . apache . flink . api . java . io . <unk> } .
ensures that the given class path is a specification of the given class .
/ * ( non - javadoc )
initialize the contents of the frame .
this method initializes this
save the <unk> to be saved .
gen - last : <unk>
tries to show the coverage data .
demonstrates how to create a new redraw .
generates a parameter from a grid record .
returns true if the given { @link <unk> } is a positive item .
calculates the checksum of a sequence .
this method is called from within the { @link action } to initialize the zoom out of the form . warning : this method is always regenerated by the form editor .
make a <code > <unk> / code > for <code > <unk> / code > .
converts an array of { @link unit } s into an array of { @link unit } s .
converts the given { @link string } array to a { @link float } array .
/ * ( non - javadoc )
<p > <unk> . < / p >
runs the monitoring { @code <unk> } between { @code <unk> } and { @code <unk> } .
get a list of polygons that match the specified name starting at the given index .
returns a list of all lines in the database with the specified uuid .
returns a list of points starting at the specified index .
sets the bit offset at the beginning of the file .
read a <unk> in the dwg format .
decode a signed integer .
submits a http connection to the specified session .
<unk> das <unk> das <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * ( non - javadoc )
/ * parse a ce entry .
returns a {
/ * ( non - javadoc )
/ * ( non - javadoc )
get the <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
predicts the position of the given point .
~ methods ------------------------------------------------------------------------------------------------------------------
this method is used to determine if a point is in a certain point .
calculates the projection of the trajectory edge .
/ * [ deutsch ] <p > wandelt diese instanz in ein <unk> / p >
$antlr start <unk>
returns the content of the resource type .
transforms a string representation of a <unk> into a <unk> .
this method calculates the total time range for the given date range .
creates a new instance of { @link <unk> } .
/ * ( non - javadoc )
parse the header from a file
create the file information .
return the audiofileformat from the given url .
<unk> <p > <unk>
this method is called when a {
returns a string representation of this header .
reads xml document from input stream .
<unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk>
reads a frame from the file .
converts the iso - 8601 date / time string into a java date object .
/ * ( non - javadoc )
reads a word from the file .
reads the data from the file .
reads the data from the given section .
convert a string to a utf - 8 string .
returns the substring of the specified suffixes
/ * ( non - javadoc )
splits a string into a backslash sequence .
convert a string to a backslash quoted string .
write out a <unk> variable .
adds a <unk> attribute to the <unk> .
sets the content disposition value . <p >
print the contents of the {
emits an xml document representing all the properties contained in the <code > <unk> / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the {
gets the start of a dimension .
print the head of the np to the specified print writer .
reads a word from the given byte array starting at the given offset .
convert a byte array to a little endian int .
convert a byte array to a long .
swaps the { @code v } at the given { @code offset } .
atomically sets the value of the given double value to the given value .
convert a byte array to a byte array .
convert a long to a byte array .
convert a long to a byte array .
reads an array of nodes from the given node .
returns a subset of this subset with the given range .
inverse of { @link <unk> ( <unk> ) } .
get the time coordinates of the given axis .
/ * ( non - javadoc )
returns a converter for the given id .
get the internationalized string representation of the given kafdocument object .
method to write a document to a document .
<unk> <unk> <unk>
/ * ( non - javadoc )
scan next token .
evaluate javascript source .
/ * ( non - javadoc )
/ * ( non - javadoc )
compute the approximate great - circle distance of two points .
todo : <unk>
prints the pom . xml file .
write features to asciidoc document
adds a list of <unk> to the map .
~ methods **************************************************************************************************************************************
add dimensions to <unk> file
/ * package
returns the bindings for the given header .
get the index of the surrounding element .
/ * ( non - javadoc )
gets the default { @link <unk> } for this class .
creates a directory with the given permissions directory .
/ * ( non - javadoc )
checks if the given file location is writable .
create a new { @link <unk> } that can be used to write a file .
resolves a symlink to the given location .
creates a temporary file with the given prefix and suffix .
add a path to the cache path .
opens the next file in the stream .
/ * <unk>
get the expected message .
/ * ( non - javadoc )
{ @inheritdoc }
calculates pre - calculates bearing from a point
calculates the bearing from a point .
returns bearing from ( lat1 lon1 ) to ( lat2 lon2 ) in degrees
calculates bearing from lat to <unk>
program main entry point
looks for a point in the graph .
search for a point in a point .
returns the point on the <unk> .
returns the distance between the two points .
this method is used to match a picture within an image .
sets up the picture to use .
gets the picture from the input image .
/ * ( non - javadoc )
download the image from the specified url .
converts an image to a bufferedimage .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * @override public void <unk> ( <unk> <unk> ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> ==
loads an image from the source image .
get the uri of the given url .
convolve with <unk>
calculates the { @link <unk> } of the given { @link <unk> } .
count the total number of members
/ * ( non - javadoc )
returns the hash object of the given objects .
load the contents of the dbf file .
counts the number of lines read .
returns the type of the given field in the dbf file .
write a double [] to the specified name .
returns the string representation of the dependencies .
returns the value of the <unk> as a boolean array .
get the name of the field .
returns an array of strings representing the ids of all the matched ids .
$example off : <unk>
gets the jsp attributes .
fills a <unk> object with the given information .
/ * ( non - javadoc )
$antlr @link <unk> ( group ) }
get the value of the given node .
checks if the given parent is a valid parent type convention .
get the escaped javascript name .
gets the trie node .
get the children of a path .
get a list of all the features of the given parent paths .
converts a list of string literals to a path .
determine if the given level is a top - level relationship .
/ * ( non - javadoc )
adds a radial variable matcher to the <unk> .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
creates a precision representation of the given set .
creates a new instance of a given <unk> .
writes the data to the device .
get the bean associated with the given key .
replaces the value of the given property with the given value .
add a new property changes to the specified value .
{ @inheritdoc }
returns the value of the specified key in the given object .
/ * ( non - javadoc )
find all of the children of a node
/ * ( non - javadoc )
returns the set of node keys directly by node path .
adds a child node to the backup node .
get the value of the <code > name< / code > property as a <code > class< / code > object .
adds the specified <code > key< / code > to the <code > <unk> / code > .
/ * ( non - javadoc )
returns the value associated with the given key . <p >
reads the data from the <unk> file
reads a revision from the file passed to the constructor .
reads the data from a file into a supplied <unk> file .
reads the data from a file .
$antlr start <unk>
splits the given data into a list of { @link slices } .
src / main / resources / org / drools / compiler / java / util / <unk> / <unk>
create a copy of the <unk>
write a statement to a string .
write the local file to the given file .
write the specified hml to the given output stream .
write the xml document to the writer .
create an { @link element } for an <unk> element .
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a variable to a string .
initializes a value for the given measure .
read field transformation .
extract an attribute from an attribute .
get the prefix code point for the given code point .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
main method .
create a new unit implementing { @link <unk> } .
find the unit with the given name and unit definition .
returns a clone of the physical database .
returns a clone of the given connections .
returns the singleton instance of this <code > <unk> / code > .
deletes the specified messages .
/ * ( non - javadoc )
create a {
find the coordinate of a coordinate element .
counts the coordinate of a coordinate .
returns the index of the coordinate of a coordinate .
find the index of the given key .
returns the coordinates of a coordinate .
find the index of the decomposed hit .
returns the index of the isotope in the symbol table .
@see { @link <unk> }
returns the subset of { @link <unk> } s .
creates a new instance of this class .
/ * ( non - javadoc )
< / editor - fold > // gen - end : initcomponents
process a soy element .
<unk> data management
/ * ( non - javadoc )
check local parameters
prints out the metrics table .
logical scan for strings .
/ * ( non - javadoc )
/ * --- private methods ---
opens a dataset dataset .
opens a dataset dataset .
opens a named feature dataset .
opens a dataset .
<p > <unk> . < / p >
<p > <unk> . < / p >
validate the given file .
determines the groups that match the given type .
returns the { @link <unk> } for the given { @link <unk> } .
<unk> - <unk>
/ * ( non - javadoc )
reads data from a tiff file .
reads the bytes from the file at the specified offset in the raf .
check if the file is a binary snapshot .
reads the exif data from the specified file .
replies the name of the given url .
assemble the content of the given parts .
returns null if the string is null or empty .
rewrite local dita attribute .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the coordinate of a coordinate on a given dimension .
populates the { @link <unk> } of the given { @link <unk> } .
<p > <unk> . < / p >
returns a { @link <unk> } that can be used to combine multiple { @link throwable } s into a single { @link <unk> } .
read an { @link <unk> } from the given { @link <unk> } .
get the groups .
publish a record to a topic .
load the image .
removes the mapping for the specified key from this map if it is present .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
removes the mapping for the specified key from this map if it is present .
converts a date to a java . util . date
*********************************************************************** <unk> () this returns the plain text representation of the counterexample . < / p >
print a dump of the given node .
sets the field information .
/ * [ deutsch ] <p > <unk> . < / p >
checks if the given object is equal to the given information .
liest <unk> <unk> .
creates a stack trace from a stack trace .
initialize the area .
checks if the file is valid .
reads a variable from the given section .
set the area directory attributes .
set the members of the navigation .
{ @inheritdoc }
retrieve the calendar type based on the given name .
set the neighborhood attribute for the given variable .
/ * <unk>
factory method used to construct a new <unk> name .
creates a geometry from a <unk>
find the coordinate of the coordinate system
gson invokes this call - back method during deserialization .
find the coordinate system of the given <unk> .
find the role that is fitting the given type .
/ * ( non - javadoc )
read feature vector
print the information on the specified property .
emits an xml document representing all of the elements in the classpath .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
get the variable at the given index .
gets the function .
checks if the given resource name starts with the given resource name .
print all elements in the environment .
<p > <unk> . < / p >
update the data payload
/ * private static <unk> <unk> () { return <unk> . <unk> () ; }
serialize marker marker .
serializes the {
save the contents of this { @link <unk> } to the given stream .
returns a clone of the notes in this frame .
load a single svg document using sax .
/ * ( non - javadoc )
/ * ( non - javadoc )
parses the given document token .
******************** private methods ***********************************
the main method .
converts the given members to a byte array .
returns a list of all the nodes in the list .
initialize the <unk> option .
sets the speed and counters of the <unk> .
enables or disables the scale of the scalebar .
redraws the <unk> .
sets the {
returns the priority of the given { @link <unk> } .
converts a projection matrix to a projection matrix .
/ * ( non - javadoc )
write the bugcollection to the given output stream as a xml file .
write this object as xml .
method <unk> .
adds the given rectangle to the bounds of the given rectangle .
adds the specified point to the end of the rectangle .
calculates the union of two rectangles .
replies if the specified point ( <var > x< / var > <var > y< / var > ) is contained in this range .
reads the state of a { @link <unk> } .
save the state of the <code > <unk> / code > to the stream .
checks if two {
adds the given configuration to this unit .
register a unit of time .
adds an alias to the given file .
add a symbol to the symbol table .
adds a link to the file .
adds an alias to the shared symbol table .
returns the { @link timeunit } corresponding to the given { @link <unk> } .
checks if the given name is a valid name .
adds a symbol to the symbol table .
----- private methods -----
creates a list of resources from a parent directory .
initializes the look and feel .
checks if the given name is a global name .
create a uri for a typename .
get a copy of a file
attempts to move to a file in the raf .
get an unsigned short from the raster
<p > <unk> . < / p >
append an <unk> to the <unk>
get the parameter values for a given row .
this method is used to create a {
version&schema - specific filling into the impl
calculates the whole ( extended ) position .
returns the projection of the projection of the projection
draws the angle between the two specified points .
get the angle between the given coordinates .
read the xml files .
<editor - fold defaultstate = collapsed desc = visualization >
include a feature dataset .
opens a named feature dataset .
include a feature dataset .
opens a named dataset in the benchmark .
<unk> . <unk>
generate a dataset name from a dataset
installs the access access access access feature .
distribute access by service type .
/ * ( non - javadoc )
returns a new list containing all of the elements of the specified list .
adds a new partition to the group
convenience method to get a collection of <unk> .
calculates the <unk> for the given file .
create a new instance of { @link <unk> } .
create a new instance of { @link <unk> } .
downloads the given uri from the given uri .
process an xml document .
replies the xml representation of a given document .
return the xml resource as xml string .
/ * ( non - javadoc )
returns a string representation of the given file as a string .
/ * ( non - javadoc )
set the projection to the response .
/ * ( non - javadoc )
method to read an array structure from a <unk> structure
/ * ( non - javadoc )
sets the image to the given binary image .
checks whether the scl string is the best fit .
<unk> de - <unk> .
/ * ( non - javadoc )
renders the content of the de - text image .
fake drag .
checks whether the scl string is the left of the camera .
does the scroll s right .
/ * ( non - javadoc )
paint the de - paint image .
update the status of this <unk> .
convert a <unk> integer array to an array of <unk> .
encodes a byte array in base64 format .
returns a string array that can be used as a substring of <unk> .
todo : more tests
/ * [ deutsch ] <p > blur . < / p >
/ * [ deutsch ] <p > ermittelt ob das angegebene <unk> . < / p >
/ * ------------------------------------------------------------
returns a string representation of the given string array .
compare two strings
finds the maximum number of values in an array .
returns the string representation of the given type .
get the status of the field .
reads the data from the given jar file and converts it to a properties object .
copy all of the bytes from the input stream to the output stream .
logs the properties .
/ * ( non - javadoc )
gets the tag associated with the given short code .
the main method .
/ * package
get the next image .
returns the size of the given <unk> .
convert a jdbc type to a string .
search for the maximum element in the array
adds a new image to the canvas .
set the overlap between 0 and 1 .
removes all of the elements from the input stream .
marks the specified rectangle if it is visible .
finds the intersection of two images .
finds the intersection of two points .
replies the closest point on the segment .
finds the closest points along the axis .
returns the euclidean distance squared for the specified point .
sets the {
returns the path to the given url . <p >
helper method to create a block of bytes .
fill the vertex buffer with the given time index .
todo : move to <unk>
/ * [ deutsch ] <p > liefert die <unk> zum angegebenen <unk> . < / p >
main point .
opens a collection manager .
adds the given key / value pair to the properties file .
/ * package
searches for a dataset url .
/ * ( non - javadoc )
creates a map of key - value pairs from the given query string .
canonicalize the given url .
validates the given path .
reads the object from the given url .
determine if the specified location is matched by the given location .
returns the activation key for the specified location .
loads and returns the <unk> .
/ * ( non - javadoc )
this method reads the data from a v into an output stream .
returns the fully qualified name of a fully qualified name .
returns the fully qualified name of the fully qualified name .
locates the given file in the classpath .
normalize relative definitions
normalizes a base path and return the result . <p >
creates a new byte array from the specified { @link bytebuffer } .
given a {
encodes the given path into a string .
converts a list of { @link <unk> } s to a { @link list } of { @link <unk> } s .
join an array of strings into a single string .
returns true if the given path is a relative path letter .
tokenizes the given text into a list of tokens .
get a list of { @link <unk> } s for a list of { @link <unk> } s .
transforms a { @link <unk> } into a list of { @link <unk> } objects .
returns the indices of the indices in the specified array .
creates a { @link list } of { @link slices } for the given indices .
returns true if the list of slices is contiguous .
checks if the list of slices contains exactly one slice .
converts a list of { @link slices } into an array of { @link string } s .
reads a byte array from the stream .
get a new { @link <unk> } from the input stream .
/ * ( non - javadoc )
returns the parent of this node .
writes the given { @link <unk> } to the specified { @link <unk> } .
bind the object to a list of <unk> .
produce a jsonarray containing the elements of the given <code > <unk> / code > .
{ @inheritdoc }
set the rate limit .
transform an <unk> to an <unk>
print the text representation of the given <code > <unk> / code > .
read the data from an input stream .
loads the sub categories of the given file .
/ * ( non - javadoc )
read storage accounts from xml file .
read a config file from a catalog .
replaces information on a given <unk> given a given information .
{ @inheritdoc }
returns a fully - qualified name of a parent node .
finds a temporary variable with the given name .
compares the groups of groups in the given groups .
validate the given parameters .
/ * <unk>
for testing .
/ * package private
<unk> > <unk> > <unk>
get the axis type for an axis .
obtains an instance of <code > months< / code > that corresponds to the specified number of months .
returns the {
get the {
adapted from { @link <unk> } .
returns a deep copy of the given range .
calculates the projection that expands the bounding box of the chart .
calculates the bounding box of the current lat lon .
this method calculates the boundary points for the lat / lon points .
calculates the convex hull points for a set of points .
helper method to create a list of { @link point } objects with the given coordinates .
returns a string representation of the coordinates in a string .
get the default values for the properties file .
set the global connection timeout .
registers a compressor for the given compressor .
/ * ( non - javadoc )
sets the {
removes the session id from the given { @link httpresponse } if it is not available .
sets the maximum number of redirects that will be set to the maximum number of redirects .
sets whether or not the given header should be compressed .
sets the value of the <unk> property .
closes the <unk> .
gets the authentication provider for the given auth scope .
sets the credentials . <p >
/ * <unk>
returns an unmodifiable map of all of the elements in this { @link <unk> } .
returns the path part of a uri .
creates a new multiplealignment . <p >
remove ssl property .
utility method to create a new zip file .
creates a new {
kills the session list . <p >
gets the global credentials provider .
imports a url from the base url . this method is called by the { @link <unk> ( url string ) } method .
generate a random { @link <unk> } for the given shape .
compute the gradient for the shape
get the index of the given index .
returns a subset of the specified ranges .
returns the size of the supplied array or null if the index is null .
returns the offset of the specified dimension
returns the transpose of the image at the specified positions .
computes the indices of the elimination tree for the specified dimension .
returns an iterator to iterate over the elements of the given array .
returns the number of bytes that can be written to the given channel .
returns the index of the maximum value in the array .
sets the bit at the given index .
/ * ( non - javadoc )
/ * sets the contents of this index
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
gets the time interval name .
adds a date range to the calendar .
{ @inheritdoc }
returns true if the <unk> is empty .
converts a string to a list of { @link datetime } objects .
returns a list of all the files in the csv file .
returns a list of supported method parameters .
get the wait time statistics for each station .
creates a charging station based on the given header .
returns a list of all keys that start with the given prefix .
validate the first
get the list of dates for a given date .
print the available <unk> stack .
prints a list of available elements to stdout .
find the index of the station with the given id .
returns the list of file type information .
return the <code > n< / code > object for the given <code > n< / code > object .
set the order of the component .
initialize the <unk>
walk through the collection of {
get the main expression for a ce
translate a clause in clause
collects all the components of the given { @link <unk> } .
convert a list of {
applies projection to the image .
translate a {
unquote a string .
translate this {
sets the <unk> .
documentation inherited from interface
read index from single file
/ * public static <unk> <unk> ( string <unk> string <unk> string <unk> string <unk> ) throws ioexception { string <unk> = new <unk> () ; <unk> = new <unk> () ;
<unk> a query .
upgrade fscrawler / index
scans the first scan for a single scan .
set the debug flags for the molecule .
convert a list of constants to a new variable .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the atomic array for the given member .
get the internationalized string representation of this object .
get the content of the given kafdocument .
the main method .
save a { @link <unk> } to an { @link outputstream } .
validate xml .
/ * ( non - javadoc )
returns a list of all the {
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a data structure to a array .
convert a data source to a data object .
get all the members of the members of a member .
/ * <unk>
returns true if the variable expression contains data .
enhances the <unk> .
open a file
open a grid .
/ * ( non - javadoc )
handles an authentication request .
create a new { @link <unk> } instance .
print the contents of the constraint .
/ * ( non - javadoc )
reads the data from the given section .
read <unk> data .
converts a sequence of { @link sequence } into a { @link <unk> } .
adds a new row to the writer .
{ @link <unk> }
computes the wait time for each station
create a <unk> for the given structure .
/ * ( non - javadoc )
<p > <unk> . < / p >
helper method for retrieving host
parses an xml document and returns the <unk> .
parse the given html string into a { @link org . w3c . dom . document } .
<unk> - mm - <unk>
/ * ( non - javadoc )
perform the xml transformation .
write the given xml file as a xml .
write the bugcollection to the given file as xml .
/ * ( non - javadoc )
get the metadata converter for the given key .
get the <unk> query .
/ * ( non - javadoc )
<em > implementation : < / em > <em > note : < / em > <em > note : < / em > <em > note : < / em > this implementation uses { @link <unk> ( unit ) } instead .
/ * [ deutsch ] <p > &auml ; quivalent zu { @link <unk> ( unit ) } . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
main method .
write a { @link geometry } to a { @link geometry } .
create an xml representation of the given section .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
returns the value of the named attribute in the given node .
creates a <unk> .
get the list of child nodes of the given parent node .
update the scope cascading type .
convert dom node to given sax .
get the subset of the subset of a variable .
/ * ( non - javadoc )
add a fuzzy member . <p >
returns the java representation of a structure .
read a polygon
read a line from a file .
read a point from the geopackage
gets the geometry value of a component .
make a { @link <unk> } from the data .
traverses the ast structure of the given ast node .
src / main / <unk> / <unk> / <unk> / <unk> / <unk> / <unk>
fills up the given set of information from the given { @link <unk> } .
returns an array object allocation with the given type
returns an array object based on the specified data type
creates a view of the given type creating one if necessary .
produce a jsonarray containing the elements of the given <code > <unk> / code > .
checks if two doubles are equal to the same value .
computes whether the given latitude and longitude are within the bounds of the bounding box .
returns true if this rectangle intersects the specified rectangle .
splits the latitude and longitude according to the given latitude and longitude .
returns a new instance of this { @code <unk> } .
returns the intersection of the specified bounding box .
<p > convert this <code > url< / code > into a <code > url< / code > . < / p >
adds the specified element to the end of the array .
adds a new element to the end of the array .
gets the direction of a point .
returns true if the shape of a shape is equal to the shape
{ @link <unk> } .
copies the given <code > iterator< / code > to the specified <code > <unk> / code > .
copies the contents of the given array to a stub class .
copies the contents of the specified array to a new array .
copies the elements of the given subject to the given array .
copies the contents of the given array into a new array .
copies the elements of the given subject to the given array .
copies the elements of the given array to the given array .
copies the given { @code array } to the given { @code array } .
cast a byte array to a byte array .
copies the contents of the given array to a new array .
copies the contents of the given array into a new array .
find min - max max min max min min max min max min min max .
adds the specified value to the vector .
returns the sum of all the edges in this array .
return the sum of the missing data .
this method is used to calculate the offset of the offset of the offset in the tm - scale .
compare two arrays
/ * ( non - javadoc )
$example off : <unk>
gets the value of the <code > value< / code > attribute of the current <code > position< / code > .
returns the value of the specified attribute in the table or <code > null< / code > if no such attribute exists .
resolve aliases .
resolve aliases .
initializes the alias .
gets the attributes .
creates a new <code > <unk> / code > instance from a <code > map< / code > .
create a upc / ean representation of the given data .
returns the octet for the given octet .
/ * <unk>
sets the projection to the given projection .
get the projection from a point from the projection matrix
move the coordinates of a point to a specific location .
{ @inheritdoc }
parses the given { @link string } as a string .
url - decode a string .
sets the url of the url .
unquote a string .
converts a well - formed string into a string .
splits the given string into a list of strings .
<p > returns the index of the first occurrence of the specified character in the given string . < / p >
convert a string to a printable string .
convert a string to a json string .
converts a string to a human - readable string .
reads the given { @link <unk> } from the given { @link list } .
reads a single model from the given <unk> .
read the information of the given information .
get the size of a primitive field .
/ * ( non - javadoc )
/ * ( non - javadoc )
given a <unk>
retrieves the object from the given { @link file } object retrieves the corresponding object from the given { @link file } .
/ * ( non - javadoc )
installs the given component selection .
returns the descendant of the specified property of the given type .
returns the descendant of the given class as a bean of type <code > value< / tt > .
returns the descendant of the specified property of the given type .
remove all the components of the given container .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the property value for the given property .
returns a { @link map } containing all the properties of the { @link object } .
returns the type of the given component .
associate the given variables with the qr code .
runs the given information on a given parent .
helper method to compile a { @link <unk> } into a { @link <unk> } .
runs the given derivator on a given parent .
compile a sequence of information to a dataset .
extracts a checksum from the given data .
read a number of characters .
read a 64 - bit long from the stream .
read all of the bytes from an array of bytes .
set the dimension of the axis .
configures the { @link <unk> } with the given { @link <unk> } .
add a change listener to the listener list .
remove a change listener .
returns true if needed .
returns the field with the specified name .
<p > <unk> . < / p >
sets the value of the specified field in the given object .
adds a field to the statistics .
adds a field to the checkbox field .
adds a date field to the date field .
add a field to the field .
adds a field to the field .
<p > <unk> . < / p >
adds a field conversion field .
adds a combo box field to the tab .
adds a textfield to the text area .
adds a row to the layout .
adds the specified component to the specified component of the specified component .
adds a new row to the specified column span .
/ * <unk>
returns the selected frame .
<p > read . < / p >
returns the log sum of the cell s cell spacing .
returns a new array containing all of the factors { @code factors } and { @code factors } .
performs a depth - first multiply operation .
creates a { @code factor } from the given { @code factors } .
returns true if the given dimensions don t have one of the given dimensions .
returns true if the given name is an identity .
constructs a new { @link <unk> } instance .
fire the event to all registered listeners .
fire the event to all registered listeners .
fire the event to all registered listeners .
reads the data from the <unk> .
/ * ( non - javadoc )
returns the cache name prefix .
/ * package private
create a <unk> for the given table and lookup table .
convert a jdom element to a jdom object
helper method to get a <unk> from the given center .
helper method to add parameters to a parameter table .
renvoie le <unk> de la table <unk> .
returns a copy of this duration multiplied by the specified unit .
/ * comparable
validates that the value is greater than or equal to the specified value .
converts a float array to its derived unit
converts the given input image into a unit .
checks if the file is stored in the file .
opens the file at the specified position in the file .
create a new file from a flat file .
read point .
******************* beginning of function ******************** //
make a vertical variable between two <unk> .
add a set of lat / lon pairs
reads the descriptor from the given file .
parse a descriptor from a file .
returns the name of the file as a string .
reads a file descriptor from the given file .
create a uuid from a byte array .
read an int from a byte array .
gets a float from the given byte array .
gets a double from the given byte array .
returns the default descriptor for the given descriptor .
get the singleton instance of <unk> .
uploads the given object to the given bucket .
invokes the { @link <unk> () } method .
----- private methods -----
----- private methods -----
main method .
returns true if the given location is absolute or not .
returns the absolute baseuri of the given relative uri .
create a converter request .
get the pixel value of a raster
add a change listener to the listener list .
remove a change listener .
/ * ( non - javadoc )
load a point feature from a list of <unk> .
<editor - fold defaultstate = collapsed desc = visualization >
is the point on the shape
marshall the given parameter metadata .
write out the evaluation time of the evaluation .
this method is used to write out the <unk> variant .
creates a double array that represents the double - precision floating point values of the given ndarray .
applies <unk> to <unk>
/ * ( non - javadoc )
adds a file to the zip archive .
reads all bytes from the input stream and puts them into the buffer .
read a buffer from the server .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
reads up to <code > len< / code > bytes from the input stream starting at offset <code > off< / code > to this stream .
skips the specified number of bytes in the stream .
returns the length of the scan .
runs the evaluation .
reads a coordinate array from the <unk> .
get the coordinate of a normal coordinate .
/ * this method is used to determine if a set of las matches a set of <unk> .
add an envelope to the file
add a group to a file
returns the index of a given record .
truncate the log file .
open the file
/ * ( non - javadoc )
read one scan parameters .
encodes one or more bytes into an array of bytes .
creates a data set .
parses the font .
returns a clone of this <unk> object .
adds a map area event
set the map area .
set the map area .
set the center of the map area .
/ * ( non - javadoc )
add this menu to the menu .
this method is called periodically by the monitor when the threshold expires .
sets the meta - mode of the meta model .
<editor - fold defaultstate = collapsed desc = visualization >
/ * ( non - javadoc )
<editor - fold defaultstate = collapsed desc = visualization >
moves to {
draws the screen size .
clears all the graphics images .
sets the selected state .
returns the element type of the given element .
get the double value of the given ndarray as a double array .
gets the double value of the given { @link <unk> } .
get the value of the given object .
identifies the atomic symbol .
identifies the cas symbol of atomic symbol .
/ * ( non - javadoc )
returns the valence of the <unk> valence for a given element .
read a fixed length descriptor .
returns the value of the named parameter .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
swaps the byte order of the current operating system .
get the number of times per file .
call this method to return the file name of the htod file .
/ * ( non - javadoc )
returns the short name of the given url .
checks if the given filename is an absolute path .
add an <unk> to the list of <unk> .
/ * ( non - javadoc )
write an array of colors .
get a { @link dateformat } object that can be used to format dates and times in the calendar system specified by <code > cal< / code > .
returns true if the given recipe is a <unk> .
produce a view of the given <code > <unk> / code > from the given <code > <unk> / code > .
creates a new instance of { @link <unk> } .
/ * <unk>
/ * ------------------------------------------------------------
read the parameters from the file .
run the <unk>
<unk> <unk> <unk>
read text from the file .
run the algorithm
/ * ( non - javadoc )
run the algorithm
/ * ( non - javadoc )
/ * <unk>
checks to see if the given byte data is radial properly .
parse the components in the buffer .
parses the command line and returns the list of items .
/ * 提取ngram
<p > <unk> . < / p >
this method is used to convert a character to a string
load the attachments
get a list of pdb levels for a given alignment .
get the reordering array levels .
get the reordering array levels .
get the levels array .
get the levels array .
adds a <unk>
<p > add a parameter to a tag . < / p >
returns the product level of the origin version .
sets the product info
loads a byte array from the given stream .
decode a base64 encoded string to a byte buffer .
writes a four - byte <unk> to a byte buffer .
process a guid .
preprocesses a byte [] to be used in constant time .
read a block from a byte buffer .
adapted from <unk>
convert a byte array to an object .
encodes the given byte array into base64 format .
convert a byte array to a hexadecimal value .
inflate the bytes of bytes .
visualizes a code .
constant for lookup .
set <unk> code
/ * package
initialize log level .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
re - creates the statistics .
this returns the information of the given information
adds the given { @link <unk> } to the given { @link <unk> } .
serves the specified {
log error message
creates a new { @link <unk> } .
sets the given table s data .
returns true if the specified point is on the anchor .
stretch the tile on the specified point .
paint the specified point .
call this method to clear the image .
/ * ( non - javadoc )
returns the last element of the middle point of the specified point .
convert text to date .
parses the provided text and returns the result as a long .
converts the given text to a date .
converts the specified text to iso - 8601 or iso - 8601 utc date time formatter .
iso format date - time format yyyy - mm - dd hh : mm : ss .
converts the given text to a date or time based on the provided text .
converts a java date to a java . util . date .
generator the data to a file .
ensure that the given size is {
rounds a {
/ * ( non - javadoc )
get the value of the file .
deserialize a <unk> from a disk file .
reads a file from the file passed in .
reads the bytes from the file at the specified offset in the raf .
reads a file from the file passed in .
returns the { @link <unk> } of the { @link <unk> } .
returns a number from a number .
reads a long value from the stream .
converts a byte array to a number of bits .
{ @inheritdoc }
initialize the whole <unk> .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
returns the distance between the two points .
converts a complex projection to a wgs84 projection .
stereo a point from a point .
convert a cubic normals to cartesian coordinates .
re - convert the given range of coordinates into a latitude - longitude coordinate .
escape xml entities .
escape string as a string .
unquote a string .
splits a string into a list of strings .
removes all comments from a string .
change the diff type .
open a resource bundle with the given parameters .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an estimate of the number of elements in the collection .
adds a new variable to the given type .
get the variable at the given index .
checked vs .
method to print the full stack trace .
/ * ( non - javadoc )
perform a comparison of the central part of an ipv4 address .
determine whether a spec is in a bundle .
clone a database object .
creates a double array containing the values of this object .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * <unk>
returns the date / time of the reference .
receive notification of cdata section .
index file .
main entry point .
/ * private methods
this method is used by the <unk> method of the <unk> process
returns the file that matches the given regular expression .
check if the <unk> matches the <unk> attribute .
process an <unk> resource .
gson method to get the type of a { @link <unk> } .
opens the file
reads the data from the given section .
load the area .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
dump a string .
returns a <code > <unk> / code > for the given <code > <unk> / code > .
/ * ( non - javadoc )
search for the type of the given method in the given class .
returns the type of the given property .
sets the value of this node .
execute the given { @link map } .
write a stream to a stream .
adds a list of transactions to the coordinate system .
/ * ( non - javadoc )
write the available units .
<unk> > <unk>
<p > init . < / p >
check if a read mode is enabled .
checks that the catalog file is read .
this method is used to read catalog from catalog .
<unk> <unk> <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the bounding box contains the given coordinates .
copies the given position into the given position .
converts a latitude coordinate ( in degrees ) to a string .
this method converts a <unk> object to its string representation .
compares this { @code <unk> } with the given { @code <unk> } .
main simple test
get the selected dataset .
$example off : <unk>
creates a new tree path from the given tree model .
open the <unk>
{ @inheritdoc }
set the catalog .
/ * ( non - javadoc )
/ * ( non - javadoc )
find coordinate axes
/ * <unk>
writes an integer to the output stream .
writes an int in a variable - length format . smaller values take fewer bytes . negative numbers are not supported .
writes an int in a variable - length format . smaller values take fewer bytes . negative numbers are not supported .
write a string to a string .
writes a string to the target string .
returns a string representation of this string .
reads utf - 8 encoding .
reads a byte array from the stream .
/ * ( non - javadoc )
get the {
computes and returns the <unk> of the given time index using the given time index .
hybrid composition <unk>
removes a member from the members .
removes a member from the members of this member .
returns the names of the members of this indexes .
find a member with the given name .
loads the bytes from the file at the given offset in the raf .
restore the state of the <unk>
core benchmark code
gen - last : <unk>
set the selected row .
get the index of the headers in the table .
ensures that the row is visible .
/ * ( non - javadoc )
create an array of options .
/ * ( non - javadoc )
get the stats for a given member .
get scalar value
get the float array for the given members .
/ * ( non - javadoc )
/ * returns the byte array as a byte array .
get the scalar value of the given members
get the stats for a given member .
get the scalar value of the given members
get a short array of the members of this structure .
get the scalar value of the given members
/ * ( non - javadoc )
get the character for the given member .
get a matcher for the java char array .
/ * get the scalar string
/ * ( non - javadoc )
method to create a new <unk>
saves the settings to a new one .
<unk> - <unk>
adds a field to a list of field values .
creates a dataset .
/ * ( non - javadoc )
translates { @link <unk> } into a { @link <unk> } .
get the keyspace with the given { @link keyspace } .
<p > init . < / p >
/ * ( non - javadoc )
use this method to generate a list of options .
write a record to the log .
show the missing confusion matrix .
returns the number of missing words in {
find the record with a given timestamp and level .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * ( non - javadoc )
registers a class with the given class name .
creates an instance of the empty class .
create a { @link typed } instance .
opens the graph .
creates a default { @link <unk> } instance .
decrypt a password
serializes this stream to an output stream .
/ * [ deutsch ] <p > formatiert die angegebene dauer . < / p >
execute the operation!
scans the given list of { @link <unk> } objects .
get the { @link <unk> } for the given { @link subset } .
deserialize a {
save the state of this <tt > <unk> / tt > instance to the given output stream .
finds the file offset of the file in the raf .
compare two byte arrays
serializes the given <code > <unk> / code > to the specified <code > <unk> / code > .
write the value to the output writer
/ * ( non - javadoc )
creates a sparql { @link <unk> } .
implements the normalization algorithm
validate the given name .
/ * ------------------------------------------------------------
<unk> <unk> .
this method is used for unit tests
parses a complete date format string .
converts a string to a date using the given pattern .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
{ @link <unk> ( projection ) }
returns the nearest point from the point that corresponds to the specified position .
converts a { @link coordinate } to a { @link <unk> } .
/ * package
open a new file
read an output from the file .
{ @inheritdoc }
reads a line from the file .
/ * this method sets the number of non - standard non - edge forces this object .
<editor - fold defaultstate = collapsed desc = <unk> >
/ * ( non - javadoc )
parse a {
returns a string representation of the section spec .
check if there are old <unk>
checks if two lines are intersecting .
evaluate the {
find k samples .
create a transform .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * http : // tools . ietf . org / html / <unk>
/ * <unk>
returns the <unk> from the <unk> .
returns the <unk> for the given <unk> .
returns the {
returns the time series profile config from the given <unk> .
determine if encoding is in period .
this method is used to determine if the data has a variable in the data structure .
determine the z - coordinate of a variable .
create a <unk> from a <unk> .
returns a {
make a table config inner
make a <unk> for <unk>
this method traverses the children of the given type .
compute the <unk> block .
/ * ( non - javadoc )
initialize the progress bar .
/ * ( non - javadoc )
returns a string representation of the given string .
/ * package
returns null if the string is null or empty .
concatenates a prefix and suffix . <p >
replies the string representation of the bundle .
/ * package
returns true if the given path is a drive letter letter .
/ * public static string <unk> ( string path ) { return <unk> ; }
returns true if the last modification date is in the last modified time .
create a new <unk> .
/ * package
returns a list of { @link <unk> } s .
removes the tag at the specified index .
updates the index of the index file .
sets the parent directory to the given directory .
close the file .
write a class file .
/ * ( non - javadoc )
creates a new { @link <unk> } .
creates a new { @link <unk> } .
adds a dimension to the list .
adds a dimension to the specified dimension .
renames the dimension of the view .
adds an attribute to the document .
adds a new global attribute .
/ * ( non - javadoc )
creates a new attribute with the given name .
renames an attribute .
returns a list of {
adds a delimiter to the list of properties .
/ * [ deutsch ] <p > formatiert die angegebene dauer . < / p >
this method adds a variable to the list of flatbuffers / gradients for a given variable
/ * ( non - javadoc )
add an attribute to the document .
add an attribute to the map .
add an attribute to the document .
delete an attribute .
renames an attribute .
update the attribute with the given attribute
reads the <code > <unk> / code > of the specified <code > <unk> / code > .
rewrites the file .
/ * ( non - javadoc )
/ * ( non - javadoc )
write a string to the { @link java . io . inputstream } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a new {
returns a <unk> instance
this method creates a <code > <unk> / code > for the component type .
creates a new { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
the main method .
write an preamble of the preamble to the given writer .
/ * ( non - javadoc )
get the internationalized string representation of this kafdocument object .
get the internationalized string representation of the current connection .
private method for creating a chemfile object .
extracts the <unk> xml document from the <unk> . xml file .
/ * ( non - javadoc )
this method checks to see if a descriptor is given .
this method is the same as <unk> () . <unk> () .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
writes the given { @link <unk> } to the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a { @link <unk> } to a { @link <unk> } .
returns the projection of the specified projection
move the coordinates of a point to a specific location .
main method for testing .
adds an observer to this list .
method to schedule the quartz .
returns true if the given position is in the grid .
<p > <unk> . < / p >
returns a range of ranges .
returns the element at the given index .
get the index of the specified range .
try to fold shift .
/ * ( non - javadoc )
create a new {
returns the union of two ranges .
returns the index of the first occurrence of the given interval .
returns true if the index is an unsigned long .
produce a jsonarray containing the elements of the given <code > <unk> / code > .
read the data from the given layout .
/ * ( non - javadoc )
this method writes table data to the buffer .
get the variable configuration for a feature .
reads all the <unk> from the font .
write the given { @link datastream } to the given { @link outputstream } .
/ * --- public methods ---
returns a subset of the specified subset of the image .
{ @inheritdoc }
create new data <p > stack : ... = &gt ; ...
returns a list of all methods that are annotated with the given name .
/ * ( non - javadoc )
loads the contents of the given file into a counter .
{ @inheritdoc }
/ * package
set the values of the float array as a float array .
this method is used to set the values of this packet .
writes a grid to the specified location .
parses a grid object .
removes the peak from the heap
returns true if the given latitude and longitude are within the bounds of the bounding box .
/ * ( non - javadoc )
get the end point of the projection
takes a point from latitude and longitude and converts it into lat / lon
/ * ----------------------------------------------------------------------------
returns the edge mid point between the two vectors .
returns true if a line is a good distribution of a line .
converts an array of ints to a double array .
get a view from the layout .
passthrough to boundaries .
filters the common parameters of the given { @link <unk> } .
check the coverage of hyper parameters .
set the rotation matrix to the given rotation .
/ * this method convert a <unk> to a <unk> factor .
<p > <unk> . < / p >
converts a {
solves the cubic equation
get the lat / lon coordinates for a given lat / lon extent .
returns a string representation of the given group name .
get a specific resource path
/ * ( non - javadoc )
helper method for getting a dense space .
helper method for vertical dimensions .
read buffer .
finish the <unk> .
gen - last : <unk>
/ * ( non - javadoc )
{ @inheritdoc }
this method parses the <unk> and places the result into the <unk> .
add the pagination information .
get a list of contributors from a <unk> .
compile a dataset .
remove a dataset from the set of categories .
nachricht hier <unk>
add a list of service ids to the service registry .
sends the given service to all registered services .
<p > a list of the services that are associated with the service . < / p >
remove the local <unk> .
returns the value associated with the given key .
/ * ( non - javadoc )
validate the href attribute .
/ * package
determine whether the given dataset is a regular expression .
/ * ( non - javadoc )
/ * ( non - javadoc )
******************** initialization ************************************
parses a multimedia file .
gets the server port .
/ * ( non - javadoc )
/ * private void <unk> ( <unk> <unk> ) {
check the parameters for an error .
get a list of all the template parameters
/ * <unk>
creates a new { @link <unk> } from the given { @link <unk> } .
{ @inheritdoc }
converts a list of { @link <unk> } s into a html identifier .
gets the contents of a file .
returns the number of bytes stored in the given s3 object .
returns the last modified version of the s3 object
creates a new { @link entity } with the given id .
checks if the given path starts with the given path .
reloads the config .
/ * ( non - javadoc )
creates a point from the given { @link <unk> } .
returns the relative path to the given base directory .
process the content of this request . <p >
process a file or directory .
write the content of the request to the http response .
write a base - 64 encoded string to the response .
gets the encoding for the given charset .
/ * ------------------------------------------------------------
forward forward to the server .
gets the request matcher .
/ * ( non - javadoc )
returns the full request path from the request .
redirects the request url to a string . <p >
returns the value of the parameter with the given name ignoring case or null .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
list all threads in the specified {
/ * ( non - javadoc )
gen - last : <unk>
factory method for create a { @link jdialog } object .
/ * -------------------------------------------------------------------
bind the object to a float array .
produce the given <code > <unk> / code > from the given <code > <unk> / code > .
create an instance of { @link <unk> } from the given { @link point } .
gets the start position of a document .
gets the end position list .
returns the { @link java . time . offsettime } of the given time .
adds a filter to the given format .
sets the bit offset of the bit vector .
create a stereo counter encoder for the given graph .
count the evaluation bits .
reads the local table and returns a map of entry strings .
print the archive with the specified signal .
/ * ( non - javadoc )
searches for the constraint element .
the main method .
returns the field with the given name .
extracts the document collection document from a disgenet file .
get the {
/ * package private
produce a jsonarray represented by the given <code > <unk> / code > .
get the value at the given index .
get the record at the given coordinates .
get the coordinate of the index as a coordinate .
creates a new { @link <unk> } .
sets the item to be selected .
/ * ( non - javadoc )
<p > returns the <unk> in the <unk> . < / p >
/ * ( non - javadoc )
returns a slice of this formula .
returns the total number of elements in this group .
/ * ( non - javadoc )
creates a lengths of the specified <unk> with the given index .
/ * ( non - javadoc )
get the <unk> loggers .
get the level of a level .
writes a single index to the file .
write a sparse array to a <unk>
convert a <unk> to a <unk> .
read a set of <unk> from a <unk> element .
returns a sequence of <unk> based on the <unk> rule .
<unk> > <unk>
adds a { @link <unk> } to this { @link <unk> } .
creates a new instance of { @link <unk> } .
/ * ( non - javadoc )
marshall the given { @link <unk> } .
checks if the slice argument is a valid slice argument .
<p > this method is analogous to the normal { @link <unk> ( float float float ) } method . < / p >
reads all utf8 bytes from the given { @link inputstream } into a { @link bytebuffer } .
reads all the bytes from the given { @link reader } to the given { @link writer } .
copy the contents of the given input stream to the output stream .
read the contents of an inputstream as a string .
read the contents of the given input stream into a byte array .
copy the contents of the given string into a zip file .
copy a file to a file
copy a file to a file .
copy the contents of the given byte array to the given output file .
copy a file .
copy the contents of the given file to the given file .
copy the content of the file to the beginning of the file .
copy a zip file to a list of files .
read the contents of a file into a byte array .
/ * package
writes the contents of a file to a file .
writes the given byte array to the given file .
writes a string to a file .
writes the given inputstream to the given file .
invoke rest service
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * {
/ * ------------------------------------------------------------
/ * <unk>
verify access to a single object
get the catalog for a given catalog .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * get status code
return the status of the query .
/ * ------------------------------------------------------------
{ @inheritdoc }
updates the memory usage of the memory used in the memory cache .
/ * ( non - javadoc )
/ * [ deutsch ] <p > liefert die <unk> <unk> <unk> . < / p >
inits the entity .
/ * ( non - javadoc )
reads the data mapped data for the given file .
read everything from the file .
parse xhtml file .
use <unk> to open a document
/ * ------------------------------------------------------------
wrap a string into a string .
removes all the elements in the given byte array from the given byte array .
/ * ------------------------------------------------------------
convert a string to a quoted string .
cleans a valid <unk> name .
returns the longest common sequence of two strings
/ * ------------------------------------------------------------
returns a string representation of the given string .
remove all occurrences of a character from the given string .
removes random characters from a string .
/ * ------------------------------------------------------------
<p > <unk> . < / p >
<p > collapse . < / p >
replace all occurrences of the given string with the given string .
replaces all occurrences of the given character with the given replacement character .
replaces double quotes with single quotes .
replace all occurrences of the given string with the given replacement string .
replaces all occurrences of the matched substring in the target string with the given replacement string .
/ * package
/ * ( non - javadoc )
flattens a list of objects into a single string .
escapes a string so that it can be inserted into xml .
/ * ------------------------------------------------------------
converts a string to a string
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
remove trailing whitespace from the given string .
classorinterfaceorenumdeclaration = modifiersopt ( classdeclaration )
/ * ( non - javadoc )
get the status of the stack .
sets the state of the state machine .
update the state of the collection .
get the full name of a dataset .
create a {
$example off : <unk>
detector for <unk> .
get a <unk> dataset from the given string .
return the sequence sequence for the given descriptor .
copy a relation between two <unk> .
check if the given format is {
recursively format the use section .
/ * ( non - javadoc )
/ * <unk>
/ * private void <unk> ( string <unk> ) { return <unk> . <unk> () ; }
recursively format the node summary for the given formatter .
/ * ( non - javadoc )
processes a time unit .
export all spatial groups
<p > a list of datasets . < / p >
<p > an array of <a > <unk> / a > objects . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > returns the list of projects available in the specified s3 object . < / p >
gets the argument name .
process a digital object .
/ * <unk>
/ * returns the html for a csv file .
<p > <unk> . < / p >
get a copy of the given raster object .
converts the given object into a <unk> object .
parse a structure into a byte array .
converts an <unk> to an <unk> .
method used to convert a structure into a <unk> object .
create an <unk> from the given <unk>
/ * <unk>
compute the ranks of the objects in the given range .
get the names of all the named objects .
/ * ( non - javadoc )
<p > gets the schema for the given feature . < / p >
gets the analyzer property .
returns the <code > <unk> / code > of the <code > <unk> / code > of the given <code > <unk> / code > .
performs the actual analysis .
generate the default aliases .
collects all tables that are nested in the tree .
creates a document .
/ * package
returns true if the file is a valid file .
opens the mc .
/ * ( non - javadoc )
returns true if the jar is still valid .
null - safe method for { @link java . lang . arrays . <unk> }
produce a view of the given <code > <unk> / code > from the given <code > <unk> / code > .
produce a jsonarray containing the elements of the given json - array
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
execute a query .
sets the response for the response .
/ * <unk>
/ * ( non - javadoc )
probe the request to the database .
prints the library to the given print writer .
print the specified <code > <unk> / code > using the specified <code > <unk> / code > .
/ * <unk>
convert a byte array to a long .
convert a byte array to a 32 - bit long integer .
reads a word from the given byte array starting at the given offset .
find the coordinate axes .
/ * <unk>
returns true if the given object is a variable with the given name .
returns the declared variable or null if this variable doesn t exist .
returns the group with the given name .
documentation inherited from interface
/ * ( non - javadoc )
gets the value of the attributes property .
finds the enumeration for the given name .
returns true if this group is parent i . e . the other peer is parent .
returns true if this group overlaps with the other one .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
sets the parent group .
removes the specified dimension from the specified dimension .
adds the dimension of the dimension of the container to the container .
adds a group to the container .
adds an alias to the list of aliases .
adds a new variable to this set .
remove the given dimension .
/ * ( non - javadoc )
removes a key from the map .
sets the dimension of the dimension .
returns true if the variable with the given name exists .
returns an immutable copy of the given {
returns the next group entry .
das <unk> <unk>
<strong > [ icu ] < / strong > returns the values of the specified attribute .
<strong > [ icu ] < / strong > returns a new instance of the {
d366807 . 3
method <unk> <p >
populate an attribute table .
prints a message to a file .
delete a node
returns true if the given type is equal to the given type .
/ * ( non - javadoc )
gets the current search directory .
/ * ( non - javadoc )
parse the given xml document .
initialize the recordowner .
/ * ------------------------------------------------------------
resolve the inbound aliases .
/ * ( non - javadoc )
initializes the alias .
returns an instance of the given { @link <unk> } object .
returns a string representation of the given string .
splits the given string into a vector of tokens .
redirects to the specified url using the specified <code > <unk> / code > and <code > <unk> / code > parameters .
adds a {
returns the {
checks if the given attribute is a valid arguments .
extracts the hash table from the supplied attributes .
check if the given <unk> is valid for the given <unk> .
/ * ( non - javadoc )
get the html representation of this screen .
creates a clone of this <unk>
respond to a file .
creates a {
writes a grid to the given grid .
writes a { @link <unk> } to the given { @link <unk> } .
find min and max values
replaces the missing values in the given { @code <unk> } .
returns the center of the polygon shift
run the {
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if index is an unsigned int .
bind the object to the name of the heap .
produce a jsonarray containing the given indices from the given json - array .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the top index file from the file .
/ * ( non - javadoc )
read buffer .
returns an {
loads a <unk> from a file .
returns true if the partition is part of a partition .
adds a collection of <unk> to a collection .
returns true if the collection is in a valid collection .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * <unk>
return an immutable collection of tables
returns an { @link <unk> } for the specified { @link <unk> } .
returns an immutable collection of open data .
create an <unk> for the given data file .
returns a new { @link <unk> } from the specified { @link <unk> } .
/ * ( non - javadoc )
returns true if the given url pattern matches the given pattern .
adds a new value to the list .
/ * package
/ * package
<unk> <unk> .
inserts the specified object into this triple . if the key does not exist in the list the old value is replaced .
print the recipes constraint .
[ target <unk> ( <unk> ... ) ]
$example off : <unk>
sets the <unk> .
replies the map of shapes for the specified transformation .
add a shape to the map
parse a string to a string .
gen - last : <unk>
/ * ( non - javadoc )
do update .
create a partitioned partition .
converts the geometry to a <unk> .
writes conll data to the disk
write a {
convert a { @link <unk> } to a { @link <unk> } .
write a {
create a new {
/ * ( non - javadoc )
checks if two dewey numbers are equals .
get a pseudo model coord for a list of <unk> objects .
this method is used to normalize a set of { @link <unk> } s .
create a {
write a {
write a proto group proto .
write a set of <unk> to a <unk> .
read an unsigned short from the raster
get the pixel value of an identity
create an array of <unk>
sets the member array . <p >
extract the members of a member .
copies the messages from the given split into the given members .
get scalar object from member field .
cast a object to a float value ( primitive value type )
cast a object to a double value ( primitive value type )
convert the scalar value to a constant value .
set the scalar value of the non - stroking color in the <unk> .
get the scalar value of the image .
get the scalar value of the image .
get the character array for the given shape .
get the scalar value of a column .
returns a {
converts an array of <unk> to an array
converts the given array of image members into an array .
/ * ( non - javadoc )
/ * ( non - javadoc )
calculates the whole { @link <unk> } .
returns a {
<p > <unk> . < / p >
parses a {
get byte from raw binary format .
returns a pseudo - random uniformly distributed double value between min and max values .
extract the relative path from the base path .
returns the file path for the given dataset .
run the computation of the <unk>
evaluate a given sequence of work .
returns a string representation of the constraint string .
/ * <unk>
given a node get the key information for the given node .
returns true if the recommender with the given name is equal to the given sequence .
resolve the given information to the given information .
returns the id of the given variable .
/ * expands the given object into the given structure .
/ * ( non - javadoc )
collects the streamable fields .
calculates the number of features for a given field .
/ * ( non - javadoc )
fills the list of information from the given { @link <unk> } .
/ * {
generates a list of cluster health groups .
{ @link <unk> }
print the specified <code > <unk> / code > to the specified <code > <unk> / code > .
clone a map
/ * ( non - javadoc )
returns true if the file is a valid file .
gen - last : <unk>
make the action
<unk> method .
create a <unk> from a file .
initializes the tag .
unmarshals the <unk> .
returns the order of the given byte order .
calculates the current byte order .
load the header with the chosen method name .
method that removes the keys from the map .
attention : this method is only called by <unk>
this method is called to write the parameters in the array .
entry point for the program .
returns the key for the given name .
<unk> > <unk>
returns the file header for the given file name .
prints a list of <unk> .
checks if the given index exists in the given index .
gets the part of a part .
this method is used to add an object to the end of the data pointer .
/ * ( non - javadoc )
adds a component to the network byte order .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
gets the <unk> .
convert a string into a color object .
given a <unk> and returns a key that matches the starting scale .
sort the supplied part of part of part of the stream .
returns a string representation of the { @code b } .
add a <unk> to the <unk>
writes <code > mlarrays< / code > into <code > <unk> / code > .
writes the specified channels to the given channel .
parse a xml document .
parse an xml document .
parse the base element .
output an array
build the array template
parse the grid .
/ * package
/ * ( non - javadoc )
find the base type factory .
parse the attributes .
parse aliases for an element .
escape xml characters .
create an instance of { @link <unk> } .
dd - mm - dd hh : mm : ss
deeply compare .
update the compound names in the tree .
recursively iterates through the tree .
called by <unk>
returns the time weighted by <unk>
/ * ( non - javadoc )
print the credential information .
checks if the file is valid .
<p > <unk> . < / p >
reads the data from the stream .
reads all data from the given section .
loads the data from the given section .
returns the { @link <unk> } for the given { @link <unk> } .
get the set of standard deviations .
computes the set of the set of sets for each row
compares two float values .
compares two doubles .
computes the difference between two points .
returns true if the two numbers are equal to the specified absolute tolerance .
compare two byte arrays .
get a copy of {
read the <unk> xml table .
read the text from the <unk> table
write config proto .
builds a { @link java . lang . feature } object .
convert a { @link <unk> } to a { @link <unk> } .
returns true if the given node can be merged with the given block .
parse a string spec .
sorts the given ray from the given ray array .
/ * ( non - javadoc )
/ * --- protected methods ---
check if the given {
removes the specified time from the end of the list .
convert a projection from a point into a projection matrix .
move the lat / lon coordinate to the given location .
sets the coordinates of this quantile to the specified values .
create a new latlong from a given table .
returns a {
calculates the projection of the origin from the origin .
calculates the projection of the trajectory .
displays the debug page action .
make a diff request .
returns a new version of the given entry .
analyze the time series and time series for the time series .
converts a list of <code > <unk> / code > s into a map . <p >
returns the value of the specified { @link <unk> } .
extract string value .
get a numeric value from raw binary format .
iterate through the given object
set the string value for the given string .
/ * ( non - javadoc )
this method is used to set the values of an array .
<p > <unk> . < / p >
executes the given { @link <unk> } .
generate a unique id for a dataset
internal method to get the path from a { @link <unk> } .
normalize the service path .
write a {
/ * package
writes the domain to the specified writer .
convert a { @link <unk> } to a { @link <unk> } .
gen - last : <unk>
evaluate the <unk> .
gen - last : <unk>
/ * ( non - javadoc )
create the gui and show it . for thread safety this method should be invoked from the event dispatch thread .
creates a jframe with a <unk> .
creates a <unk> for the given prefix .
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the areas are left right .
find the axis of the axis .
get the {
returns a projection that projects the projection of this projection .
get the bounding box of the projection
tell if the coordinate of a coordinate is regular .
determines if a subset of the specified subset of dimensions is a subset of the specified dimensions .
determines whether the given list of <code > <unk> / code > contains at least one axis .
check if the given axis contains the given axis .
returns true if the given { @code <unk> } contains the given { @code <unk> } .
creates a list of axis declaration .
check if the given axis is a axis type .
/ * public <unk> <unk> ( <unk> <unk> ) { return <unk> . <unk> () ; }
creates a clone of the given { @code <unk> } .
/ * ( non - javadoc )
opens a new ssl dialog .
creates a new instance of <code > <unk> / code > from the given message .
override handlerequest in order to get the tool tip text .
add a change listener to the listener list .
remove a change listener .
get the currently selected session .
/ * ( non - javadoc )
get a list of the selected columns
apply the conversion to all cells in the table .
sets the selected list of selected items .
/ * ( non - javadoc )
/ * ( non - javadoc )
notifies the registered listeners that the bean has been updated .
restore the state of the table
<unk> <unk> <unk>
parse an attribute value .
creates an unknown unit .
/ * ( non - javadoc )
returns true if the variable wasn t specified .
/ * ( non - javadoc )
find the <unk> of the given node .
add a list of variables to the list .
add an <unk> to an existing <unk>
get the <unk> .
move to a given location .
creates a list of nodes .
creates a new charge of a given class descriptor .
note : this method is not thread safe .
find a variable for a given group
find the field for the given group id .
applies the given { @link <unk> } to the given { @link <unk> } .
opens the given directory .
decode a byte array to a string .
entry point for simple unit testing .
/ * *
gets the unit .
<unk> > <unk>
check if a unit expression is compatible with a unit expression
/ * ( non - javadoc )
checks if the given string is a date unit .
checks if the given string is a time unit . <p >
convert the input string to a memory unit .
convert the given value to the given unit .
/ * fall back to <unk>
/ * [ deutsch ] <p > <unk> ; <unk> ; < / p >
/ * [ deutsch ] <p > liefert eine <unk> l&auml ; nge des <unk> . < / p >
creates a new {
returns a { @link function } with given name .
returns a function for the given function name .
write an rdf download record .
rewrites the station to a file .
<p > returns a buffered image that contains a single image . < / p >
/ * ( non - javadoc )
this method is used to start the crawl .
/ * ( non - javadoc )
/ * ( non - javadoc )
starts a crawl request .
attempt to find a file in the given location .
returns the list of { @link file } s from the given { @link file } if it does not exist .
creates a new position of the given type .
gets the password authentication method .
enroll the user with member service
/ * ------------------------------------------------------------
returns a list of all of the files in the given directory .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
reads the next byte from the file .
reads up to <code > len< / code > bytes from the specified byte array starting at offset <code > off< / code > to this method .
reads a number of bytes from an input stream .
reads a number of bytes from the stream .
reads up to <code > len< / code > bytes from the specified input stream starting at the given offset .
write a byte to the stream .
/ * ------------------------------------------------------------
writes a byte array to the underlying output stream .
reads a 32 - bit integer from the stream starting at the current stream in little - endian order . this method reads the following bytes : <ul > <li > <code > read - &gt ; < / code > < / li > <li > <code > read - &gt ; < / code > < / li > <li > <code
/ * ( non - javadoc )
writes a byte array to the output stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
read a string from the stream until the boundary is reached .
writes <code > len< / code > bytes from the specified byte array starting at offset <code > off< / code > to this output stream .
writes a byte array to the underlying output stream .
/ * ------------------------------------------------------------
writes an array of bytes to the output stream .
/ * ------------------------------------------------------------
writes a byte array to the output stream .
/ * ------------------------------------------------------------
write a string to the file .
writes <code > len< / code > bytes from the specified byte array starting at offset <code > off< / code > to this output stream .
/ * ( non - javadoc )
writes utf - 8 encoded string to the given <unk> .
search for the end of the file .
adds a query to the query .
/ * ( non - javadoc )
creates a new { @link <unk> } from the given { @link <unk> } .
find the index of the file .
returns true if the given large file is a leaf .
<unk> <p > <unk> / p >
/ * public static boolean <unk> () { if ( <unk> ! = null ) { return <unk> ; }
reads the contents of a file .
opens a new {
creates a new { @link <unk> } .
gets a list of <unk> from a <unk> dataset .
gets information about the {
/ * ( non - javadoc )
/ * ( non - javadoc )
acquires a file from the specified { @link <unk> } .
{ @inheritdoc }
loads the cache from the cache .
loads the cache configuration from the cache .
load the cache .
/ * ( non - javadoc )
returns true if the file is a symbolic link .
/ * ( non - javadoc )
returns the {
/ * cut the contents of the cache to be cleaned up
returns the numeric value of the given { @code int } { @code d } { @code d } and { @code <unk> } .
acquires a file from the specified {
{ @inheritdoc }
figure out the cache that caches the cache .
try to load an element in cache
adds a cache element to the cache .
/ * ( non - javadoc )
/ * ( non - javadoc )
clear the cache .
/ * ( non - javadoc )
show the tracking of the tracker .
converts the given string to an object of the given type .
<unk> - <unk>
<unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> -
retrieves vertical transform for the given { @link <unk> } .
/ * ( non - javadoc )
marshall the given parameter object .
this method is used to add a new coordinate vector .
this method is used to calculate top level descriptors .
get the {
get the {
<editor - fold defaultstate = collapsed desc = visualization >
calculates the latitude and longitude for the poi
this method is needed to call the addexplicithydrogenstosatisfyvalency from the class tools . hydrogenadder .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the position of the item .
gets the item at the specified position .
<p > <unk> . < / p >
creates a new { @link path } for a collection of paths .
expands the list of files in the given directory .
submits the remote files to be read .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of {
/ * ( non - javadoc )
parse a string representation of a { @link <unk> } .
returns a copy of this instance .
/ * [ deutsch ] <p > konvertiert das angegebene iso - 8601 - <unk> . < / p >
/ * subtract one date from the graph
gets the conversion factor .
<strong > [ icu ] < / strong > returns the value of the specified field .
gets the time based on the start and end date .
creates a new instance of { @link <unk> } .
opens the file at the specified location .
/ * ( non - javadoc )
/ * ( non - javadoc )
demonstrates how to list all tables in the table .
/ * ------------------------------------------------------------
returns the longest path for the given path .
/ * ( non - javadoc )
returns the data root of the given data root .
extracts the data from a {
creates a calendar based on the given date .
fetch a collection of coordinates from a collection of coordinates .
creates a new { @link file } instance with the given prefix and suffix .
create a new las file writer .
same as { @link <unk> ( string int int ) } but takes an array of { @link dimension } s .
same as { @link <unk> ( string sdvariable ) } but with the same dimension as the input array .
create a new dimension selector .
renames a resource .
adds a new group to this group .
adds an attribute to the document .
adds a {
creates a new group attribute .
creates a new attribute with the given name and type .
adds a new variable to this group
adds a new variable to the command group .
add an {
create a new { @link structure } with the given structure .
adds a variable to the <unk> .
adds a {
/ * ( non - javadoc )
add an attribute to the document .
create the file .
/ * ( non - javadoc )
rewrites the file .
add a record to the table .
/ * ( non - javadoc )
validates the values in the variable .
write a row to a file .
write a string to a variable .
write a string to a variable .
closes the dbase file .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the metadata for the given dataset .
gets the geospatial anchor .
find the date range from the given { @link <unk> } .
process the arguments of the <unk> .
remove unused name beans from the list of old names .
constructor <unk> .
subtracts the given amount of units from the given unit .
/ * ( non - javadoc )
subtracts the given {
converts the given key to its derived unit value .
/ * ( non - javadoc )
calculates the euclidean unit of input .
convert a list of <unk> to a <unk>
convenience method to convert a top - level operation into an array of <unk>
convert v to array
compute the <unk> for a given <unk> .
serialize a bigdecimal
compute the offset for a primitive array .
converts a hexadecimal string into a byte array .
/ * ( non - javadoc )
open the database .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a { @code string } to a { @code period } . <p > the conversion is performed using the { @link <unk> ( int ) } method . <p > for example : <ul > <li > { @link <unk> } < / li > <li > { @link <unk> } < / li > <li > { @link <unk> } <
try to read a {
returns the coordinate of the coordinate set .
checks if the point is outside of a coordinate .
read lines in the input stream .
adds the specified value to the end of the array .
increases the capacity of the given array into a new size .
returns the element at the specified index .
augments a dataset with a dataset .
convert a projection from a { @link point } to a <unk> .
move line to lat / lon .
validate the expected scan location .
/ * ( non - javadoc )
request path from base path .
make sure that the given path string is a directory .
/ * ( non - javadoc )
gets the container type .
$antlr end exponent
show the debug page .
constructs a <code > <unk> / code > for the given <code > <unk> / code > .
/ * <unk>
/ * ------------------------------------------------------------
resolves a reference to a server uri . <p >
adds a file to the file .
loads a concept from the given file .
restores the <unk> from the line .
attach a component to the jsf concept .
/ * [ deutsch ] <p > <unk> . < / p >
output lookup table files .
this method will print all of the local unique keys
the main method .
/ * ( non - javadoc )
notify registered variables .
get the date range of the given <code > <unk> / code > from the given <code > <unk> / code > .
this method does the same thing as {
read an index from the file
/ * [ deutsch ] <p > interpretiert den angegebenen stream . < / p >
print the program to the print writer .
marshals the given bean into the given map .
find a {
reshape the identifier to a vector of java identifier types .
factory method for create a new { @link <unk> } .
expand the access point .
this method expands the <unk> map .
retrieves the children of a dataset .
use the input data
<unk> precision .
/ * ( non - javadoc )
load a picture from a url
this method stops the given url .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a scaled piece of scaled objects .
returns a scaled bounding box that is scaled by the given factor .
returns the image size string .
merges multiple images into a single file .
/ * ( non - javadoc )
returns a buffered image reader for the specified file .
initialize the <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * build table header
returns a list of all the policies that match the pattern .
/ * ( non - javadoc )
the main method .
set the path to the root directory .
creates a new root directory if it doesn t already exist .
deletes the cache file .
creates a new file based on the given file location . if the file does not exist it will be created . if the file does not exist it will be created . if the file does not exist it will be created .
returns the path to the cache path .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * ( non - javadoc )
creates a patch to the given filename .
/ * ( non - javadoc )
returns the image for the given image name .
creates a new { @link <unk> } from the given geometry .
creates an instance of a { @link imageicon } with the given parameters .
adds the action to the button .
adds a action to this menu item . <p >
add the action to this button .
adds an action to the container .
change the visibility of an action .
sets the zoom property on the action button .
creates a list of <unk> for each station
returns the geometric center of the given point in meters .
faster than <unk>
gets the dimensionality of the relation .
add a copy of the given axis to this axis .
returns true if the data type is numeric .
formats a { @link <unk> } object .
format the time zone of the <unk> .
sort the rows in the column .
sets the list of selected rows .
removes the given { @link object } at the given index .
get the selected row .
rollback the selected session action .
this method increments the currently selected country .
get the table index .
scroll to the given row .
/ * [ deutsch ] <p > ermittelt die <unk> <unk> <unk> . < / p >
returns { @code object } where { @code <unk> } is { @code <unk> } .
gen - last : <unk>
/ * ( non - javadoc )
builds a parse tree from the given sourcereader .
checks that the metric name is observed in the given vector .
/ * public <unk> <unk> ( vector <unk> ) throws ioexception { return <unk> ; }
sorts the specified subset of the specified subset of the specified subset of comparables from least to greatest using the supplied comparator .
swaps the elements in array [ j ] .
converts a string to a human - readable string .
verify that the file exists in the classpath .
convert a projection from a string to a projection vector
evaluate the <unk> .
converts a {
creates a zip file from the given file .
creates a new instance of the class <code > <unk> / code > .
creates a new { @link <unk> } from the given { @link resource } .
saves the application data directory .
save the specified file to disk .
dump the contents of the message to the specified output stream .
writes the given information to the given writer .
getting the information of the given information .
persistencedelegate . initialize ()
/ * public static <unk> <unk> ( <unk> <unk> ) { this . <unk> () ; }
writes the initial frames to the given <unk> .
convert a row to a <unk> .
creates a patch to the specified model .
<p > a list of { @link <unk> } objects . < / p >
returns true if the file is valid .
returns the string representation of this name .
print the matrix information .
prints the text representation of the given space to the standard output stream .
prints the table index to the output writer
appends the specified <code > <unk> / code > to this <code > <unk> / code > .
removes one dimension
get the dimensions of the given dimension .
clone a classifier
compare two tables
-------------------------- other methods --------------------------
serialize all of the elements in the specified map to the specified map .
set the projection to the given dimension .
src - <unk>
returns the value of the given object .
read <unk> code
read a variable .
run the algorithm
<unk> <unk> <unk>
gets the <unk> .
convert a vector of bitmap to <unk>
evaluate the <unk> .
decode the <unk> to a <unk>
returns the number of bytes per second .
colorize the non - edge <unk>
parses the <unk> table and returns the table width
removes columns in the matrix .
/ * ( non - javadoc )
formats a list of { @link <unk> } s into an array of { @link <unk> } s .
make a new file in the specified range .
returns a new list that contains the specified grid size .
create a new { @link waypoint } with the given parameters .
process transformation transformation .
get the speed of the station
register a property exclusion .
this function adds a <unk> to the <unk> .
get the closest match for this file .
get the currently selected station .
/ * ------------------------------------------------- [ merging ] ---------------------------------------------------
/ * [ deutsch ] <p > implementierungsmethode des interface { @link externalizable } . < / p >
convert a {
this method fills out the grid matrix data .
returns the name of the values of the given type .
/ * ( non - javadoc )
the main method .
pack the images window
converts pdf to checkbox .
save the model table .
get the speed of the bounding box using the provided bounding box
get the typical auth descriptor for cram - md5 .
get a { @link <unk> } that can be used to iterate over the { @link <unk> } .
creates a <code > iterator< / code > containing the data in <code > <unk> / code > .
reads the data from the {
returns an estimate of the number of elements in this set .
get the setter type for the given index .
print the contents of a <code > <unk> / code > .
deserialize a webhook .
/ * ( non - javadoc )
this function is used to fixup variables from qnames to stack frame indexes .
save the values in the stream .
returns the {
returns the <unk> for the given descriptor .
compare two <unk> and <unk> .
returns the l2 norm of this point in <i > v< / i > .
computes the dot product of the given vector .
<p > <unk> . < / p >
trains the sparse matrix .
creates a { @link catalog . builder } from a schema .
get the services associated with the given id .
read an xml file .
/ * ( non - javadoc )
tries to read the { @link <unk> } from the given { @link <unk> } .
/ * ( non - javadoc )
parses the catalog ref .
outputs the rdf dataset found in the given { @link <unk> } .
read a set of <unk> from a volume .
/ * public void <unk> ( string href string <unk> ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk>
/ * <unk>
returns the related <unk> for the given element .
/ * ( non - javadoc )
returns the summary of the variables in this element .
/ * ( non - javadoc )
/ * private void <unk> ( string [] args ) throws ioexception { string <unk> = new <unk> () ;
/ * ------------------------------------------------------------
get the value of a parameter .
get the value of a parameter .
read parameter table .
read parameter table resources .
read parameter table from input stream .
/ * ( non - javadoc )
write a filter attribute .
adds a new value to the <unk> .
converts a list of namespace prefixes to a comma - separated list .
returns true if the given email is a valid email address .
/ * ( non - javadoc )
reads the next character from the stream .
reads the next character from the stream .
removes leading and trailing whitespace from the given string .
read number of digits
read a string from the stream .
parse a java identifier
collect collection .
registers a parameter
creates the offset pattern .
sets the value of the axis .
returns the value of the named property or <code > null< / code > if the parameter does not exist .
create a projection search for a given search request parameter .
calculates the crc32 checksum of the segment .
$antlr start <unk>
get the line <unk> matrix .
$antlr end <unk>
/ * ( non - javadoc )
get the scheme {
replies if the given point is added to the triangle .
gets the time type name .
returns the current time mapping .
report an error message .
gets the value for the given key .
/ * ( non - javadoc )
deletes the given { @link polygon } .
deletes the previous entry in the list .
adds a polygon to the polygon .
extract the value of the given property .
helper method for retrieving the base uri
sets the current state of the query .
/ * ( non - javadoc )
<p > newinstance . < / p >
create a new <unk> instance
adds the specified class to the list of registered providers .
check if the given class is registered with the given class .
returns true if the given class is registered with the given class .
sets the debug flags for the debug flags .
opens a typed task .
opens a task file .
writes a set of tags to this mp3 file .
open a file lock .
prepends the given search string to the beginning of the uri .
open a file in memory
open a file in memory
opens a file in the given format .
reads the content of the url as a string .
/ * ( non - javadoc )
find the item with the given name .
get the value of the next variable
auto - detect package name
gets attribute by name .
gets attribute by name .
find attribute by name .
<p > <unk> . < / p >
generates a html representation of the given url .
prints the message to a file
print a value to a print writer .
/ * <unk>
write an xml file declaration .
write the attributes to the writer .
/ * ( non - javadoc )
adds an attribute to the parent
adds an attribute to the <unk>
adds the specified { @link eventloopgroup } to the { @link group } .
documentation inherited from interface
returns true if the given group name is a valid dimension .
adds a new variable to this samediff instance .
create a new variable with the given name
adds a variable to the given group name .
removes the variable with the given name from this group
/ * ( non - javadoc )
/ * ( non - javadoc )
marks this file as sealed .
returns a list of empty group rules .
returns a new list of unknown words .
read data from a datanode .
reads the given section from the given section .
reads the data from the given section to a byte array .
<p > a list of variables . < / p >
returns the array of {
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
returns true if the filter should be included in the filter .
returns true if the filter should be excluded .
determines whether the given event is a filter .
same as {
validate the given <unk> by a given <unk> .
remove the given <unk> from the given <unk> .
returns the string for the given id .
returns the type of the given string .
get the value of the <code > value< / code > at <code > index< / code > .
get the value at the given index .
append the value to the given value .
sets the value of a property .
converts an integer to a string .
/ * ( non - javadoc )
checks if the given string is a double .
check if the string is a valid double .
/ * ( non - javadoc )
check if a string is a double
check if a string is a double
clone a { @link <unk> } attribute .
gets the type of the attribute .
gets the rank of a data type .
returns the largest instance of the given data type .
convert data type to data type .
{ @inheritdoc }
checks if the given string is a valid ip address .
returns true if the path is a valid path .
returns true if the given path is a valid filename extension .
returns true if the given id is a valid id .
checks if the given string is on the axis .
check if the given string contains an alpha attribute .
checks if the given string contains invalid characters .
<p > <unk> . < / p >
checks if the given string is a valid alphanumeric string .
check if a file is valid .
returns the canonical form of the given path .
returns true if the string is a valid hexadecimal string .
returns a hexadecimal string representation of the given code point .
add a key / value pair to the parameters map .
add an integer property to the properties file .
set a job value .
returns the value of the given key as a string .
/ * ( non - javadoc )
reads all bytes from the input stream and puts them into the buffer .
reads a leaf from the input stream .
helper method to add a coinbase event to a container
encodes the structure of a {
<p > <unk> . < / p >
/ * ( non - javadoc )
extract projections .
/ * ( non - javadoc )
remove quotes from a string .
/ * <unk>
<unk> : = <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * --- private methods ---
returns the value for the specified alternate key or alternate key .
returns the { @link <unk> } with the given name and { @link <unk> } .
/ * ( non - javadoc )
returns the string representation of the date .
returns a string representation of this node .
recovers the corrupt station .
/ * ( non - javadoc )
get the { @link point } from the { @link <unk> } .
validate the given string .
<p > returns a projection that calculates the projection of the projection of the specified projection . < / p >
<unk> <p > <unk>
returns the angle between the two points .
get the azimuth in degree of this arc based on the given canvas .
gets the elevation .
returns the x - measurements of a vector .
returns the polygon as an array of strings . the polygon will be used to represent the polygon .
returns the polygon as an array of strings .
<p > <unk> . < / p >
return a copy of this matrix .
<p > create a copy of the specified matrix . < / p >
get a list of all the members of the given members .
returns the names of the given variable names .
adds a new member variable .
sets the member variables .
removes the variable with the given name from this map . if the map previously contained a mapping for this variable the old value is removed .
replaces all the members of the given pattern with the new value .
{ @inheritdoc }
returns the field with the given name .
add members to the members of the members .
calculate the size of the sample
invokes { @link <unk> () } on { @link <unk> () } .
reads a structure from the given iatomcontainer .
convert a list of writables to an array .
get the structure for the given size
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * private void <unk> ( string <unk> ) { <unk> logger = <unk> . <unk> () ;
returns the category for the given category .
get the name of the class .
adds a parameter to the query string .
returns a string representation of the bundle header .
get the broadcast string from a string array
returns the projection of the given projection
get a lat / lon pair .
get a good lat / lon pair .
compute the bounds of this shape .
/ * ( non - javadoc )
/ * public void <unk> ( <unk> <unk> ) {
calculates the closet point of the bounding box from the given bounding box
returns the angle in degrees of a longitude coordinate .
convert a double to a number .
returns the cosine distance between two points .
returns a nice number for the given range .
get the cell type from the given code .
returns the version of the given identifier .
/ * ( non - javadoc )
formats a value in the given field .
returns the <unk> for the given <unk> .
installs the next file in the directory .
create a dataset with coverage data .
returns a new <unk> .
------------- <unk> -------------------------------
/ * ( non - javadoc )
<editor - fold defaultstate = collapsed desc = visualization >
draw the grid attributes
returns true if the given label is a child of the given label .
returns the field with the given name .
reads the frames from the file .
/ * ( non - javadoc )
installs the rows in the given table to the table .
adjust the widths of the cells in the given table .
/ * ( non - javadoc )
returns the frequency of the given object
retrieves the key from the given path .
creates a temporary file .
sets the access key of the client .
returns the {
creates a new { @link label } with the given time .
creates a new { @link label } with the given lines .
<p > <unk> . < / p >
converts the given markdown value to html .
returns the value of the { @code name } of the given { @code name } .
<p > main . < / p >
connect to { @link <unk> } .
gets lookup environment variables .
create an instance of { @link <unk> } .
parses the list of resources . <p >
returns an instance of the { @link <unk> } instance for the given { @link <unk> } .
construct a new connection to the server .
removes softreferences from loggers .
compile all the classes in the compilation units .
compiles the given class name and return the result as a class .
add a class annotation for the given class name .
reads a graphics control extension .
reads a block from the input stream .
get the next frame .
put a frame into the <unk> .
read a block from the work buffer .
shows the { @link <unk> } in the specified { @link window } .
this method returns a list of the names of all the items in this document .
/ * ( non - javadoc )
inject a {
sets the local time in milliseconds to utc .
gets the validation message .
merges the specified resource bundle with the specified locale .
returns a list of resource bundles from the given list of bundles .
creates a new instance of the given type .
/ * ( non - javadoc )
process an add event
deletes a list of { @link <unk> } s .
process an update event .
processes the given event .
returns the user with the given id .
creates a new { @link <unk> } with the given { @link <unk> } .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
process the {
/ * ( non - javadoc )
documentation inherited from interface
adds a message to the list of messages .
returns the value of {
this method is used to lookup a memo message .
/ * ( non - javadoc )
inflates the {
creates a new instance of { @link <unk> } .
finalize the resource bundle .
creates a string binding that always returns { @code true } if the value is { @code null } .
returns all view fields of the given view type .
gets the { @link view } from the given { @link view } .
injects view annotations .
create a new { @link view } instance .
create a { @link view } for the given { @link view } .
asserts that the { @link view } is annotated with { @link <unk> } .
returns all initialize method declarations for the given method .
adds the given { @link <unk> } to the given { @link <unk> } .
/ * ( non - javadoc )
return the country for this { @code <unk> } .
entry point for <unk> .
entry point for <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > init . < / p >
resets the fields to the default values .
write the current values to the default values .
/ * ( non - javadoc )
reloads the fields .
copies the values from the given model to the given model .
<unk> > <unk>
returns an immutable copy of the property .
returns a { @link javafx . property . <unk> } representing the property of the javafx property .
<unk> > <unk>
creates an instance of a { @code <unk> } .
<p > <unk> . < / p >
<unk> > <unk>
<p > <unk> . < / p >
returns the value of the { @code <unk> } property .
<p > <unk> . < / p >
returns the value of the property with the given id .
creates a new { @link <unk> } for the given { @link getter } .
returns a list of {
wrap a { @link collection } of { @link object } s of type { @link <unk> } .
returns a lens that focuses on the given { @link map } property .
adds a subscription to the rule .
{ @link <unk> }
creates a new { @link list } of { @link observable } s from the given { @link list } .
creates a new { @link <unk> } for the given view type .
adds a new view to the given view type .
register a { @link map } of { @link subscription } s of the given observable type .
adds a listener to the list of registered listeners .
adds a listener to the invalidation listener .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of all fields annotated with the given annotation .
<p > <unk> . < / p >
returns a { @link java . lang . object } object for the given { @link java . lang . object } .
sets the value of a field .
access the properties of a { @link <unk> } .
load a view of the given view type using the given { @link <unk> } .
create the path to the fxml file .
load a view of the given fxml resource .
load the given fxml view .
query for the icon row for the given style mapping row .
{ @inheritdoc }
get the coverage data value
get the coverage data value
{ @link <unk> ( byte [] int int ) }
/ * public <unk> <unk> ( byte [] <unk> ) {
validate the image type
draw a coverage data image with the specified pixel values .
draw a coverage data tile from the specified array of unsigned short pixel values .
draw a coverage data tile from unsigned array of unsigned values
draw a coverage data image with the specified values
get the image
set the pixel value as a 16 bit unsigned integer .
set the pixel value as a 16 bit unsigned integer .
create the tile table with metadata
set the { @link <unk> } for this image .
{ @inheritdoc }
get the max query
return true if the table exists
query for a single result
query for values in a single column
query for values
{ @inheritdoc }
executes the given sql query and returns the result set .
{ @inheritdoc }
query the row
query for the row
query for the row
query for the row .
get or create a table index
find the index of the first row in the resultset
get the index of the geometry row
returns an iterator over all the rows in this table .
/ * ( non - javadoc )
register a table
/ * ( non - javadoc )
/ * ( non - javadoc )
draw the tile for the tile at the specified zoom level
returns the tile at the specified zoom level .
get the gridded coverage extension
get the coverage data data for a tile dao
get the coverage data data for a tile dao
create the tile table with metadata
get the tile from the request
get the coverage data values from the request
get the coverage data tile results
get the coverage data tile results
get the coverage data tile results
get the coverage data tile results
get the tile matrix
get the coverage data value
set the styles for the geometry type
get the style of the geometry type
get the value of a particular row
{ @inheritdoc }
/ * ( non - javadoc )
convert a byte array to a purgeable bitmap
convert bitmap to byte array
{ @inheritdoc }
delete the table
updates the last indexed indexed indexed indexed indexed indexed indexed indexed indexed time .
update the last indexed table indexed
update the last indexed table
get or create the geopackage
get the metadata for the table
get or create the metadata for the feature table
get the geopackage package link for the feature table
creates a { @link <unk> } object for the given { @link cursor } .
create a new extension
get the feature row row .
get a custom { @link <unk> } .
get the max query
get the max query
get the bounding box of the table
query by the projection
query the query for the given envelope
query the query of the geometry envelope
query for rows within the resultset
counts the number of rows matching the specified x and y coordinates .
build the where args .
query by the projection
query by the projection
query the query for the given envelope
get the bounding box for the feature table
counts the number of times the specified area is in .
returns an iterator over all the rows in this table .
gets the size of the bitmap from a byte array .
set the data for this image .
sets the bitmap to use for the specified image format and quality value .
sets the {
write formatted tiles
get the bounding box bounds for the bounding box
transform the bounding box feature projection to web mercator coordinates
get the tile grid count for the tile grid and zoom level
get the web mercator tile bounding box for the tile grid and zoom level
get the tile bounding box for the tile matrix
get the tile grid results
query for tiles in the tiles row .
query by tile grid and tile grid
get the approximate zoom level for the provided width and height in the default units
get the approximate zoom level for the provided width and height in the default units
get the closest zoom level for the provided width and height in the default units
get the approximate zoom level for the provided width and height in the default units
query by tile grid and zoom level
query by tile grid and zoom level
counts the number of rows matching the zoom level .
get the zoom level
get the coverage data value
get the pixel value .
get the pixel values of the image .
initializes the {
get the coverage data value
get the coverage data values
draw a pixel in the image array with the specified width and height .
draw a coverage data tile from unsigned short pixel values .
draw a coverage data image with the tile width and height
draw a coverage data image tile from the coverage data
get the coverage data for the image .
get the pixel value in the image raster
create the tile table with metadata
project a geometry to a json object .
get or open the geopackage
{ @inheritdoc }
query for the row with the given id
get the row for the row
get the value at the specified index in the data type
helper method to enable read repair
read the table
get the bounding box provided by the projection
<p > <unk> . < / p >
query for style mappings by base id
delete by base id
get the rectangle of the bounding box with the provided bounding box coordinates
get a rectangle with rounded floating point boundaries using { @link <unk> ( int boundingbox <unk> ) }
returns true if the specified rectangle intersects the supplied rectangle .
returns true if the specified rectangle intersects the supplied rectangle .
returns true if the supplied rectangle intersects the supplied rectangle .
returns true if the supplied rectangle intersects with the specified rectangle .
returns a list of all the { @link <unk> } s .
get all the dex path
get all the databases like {
delete list of databases .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the size of the database .
checks if the filename is an external file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the metadata of the dex file .
delete all files in the database .
/ * ( non - javadoc )
get all the tiles that are missing .
create a geopackage
create the geopackage file and create a geopackage
/ * ( non - javadoc )
/ * ( non - javadoc )
create the geopackage file
/ * ( non - javadoc )
write the geopackage package to the database
{ @inheritdoc }
{ @inheritdoc }
get or open the geopackage
get or create the extension
get or open the geopackage
get the geopackage package
get or open a geopackage
download a tile from a url
write the geopackage package
open the geopackage file with the extension
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
<p > <unk> . < / p >
create a geopackage
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
validate database .
validate database .
this method is called when the database is upgraded to the database .
/ * ( non - javadoc )
check if the file is valid .
add a list of databases to the {
get all external databases .
import the geopackage file
get all the dex geopackage
get the geo package metadata
delete the geo package metadata at the external path
returns true if the given timestamp is a temporary file name .
create the geometry
create a geometry
create a geometry index .
populate the geometry index with the given id and geometry
delete the metadata cascading
delete rows in the geopackage
delete the geopackage
create a new { @link <unk> } .
{ @inheritdoc }
/ * ( non - javadoc )
get the geometry metadata for the geopackage package and contents
get the geometry metadata
get the contents of a table within the geopackage
get the bounding box options for the geopackage
get the bounding box
/ * ( non - javadoc )
query for tiles in the geopackage
count the number of tiles within the geopackage
build a envelope from the bounding box
query for geometry index objects within the geometry envelope
get the count of a table within a geopackage
query for geometry
query for geometry
reads a { @link list } of doubles from a { @link cursor } .
query for the row with the given id
update the rows matching the where clause .
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
draw a tile at the specified width .
get the list of rows that match the given id .
query the bounding box of the feature table and return the bounding box
/ * ( non - javadoc )
get the feature dao
get the feature dao
get the tile table associated with the table
get the tile table associated with the contents
get the attributes dao
set the contents contents for the user
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
get or create a table name for the given table .
get the user mapping for the given table name
get the media attributes associated with the table
get the mappings for the base relation
get a list of all the mappings for a given related relation
<unk> determines whether or not the given mapping exists for the given table and related id
/ * ( non - javadoc )
{ @inheritdoc }
reads the contents of a cursor and returns them as a number .
register missing cursor wrapper
read a user custom table
get the tile from the request bounding box
draw the tile from the tile results
reproject the tile to the requested bounding box
get the tile from the bounding box
get the tile results map for the tile matrix
draw the overlap
sets the scale of the polygon .
get the line paint .
set the scale of the polygon .
draw a tile at the specified zoom level .
draw a tile at the given zoom level
draw the tile at the x and zoom level
query for feature results
draw the tile count across the results
query for indexed features
query for feature results in the bounding box
set the bounding box of the bounding box
expand the bounding box in the tile bounding box
draw a tile at the x and zoom level
returns a list of points in the map
set the feature style into the polyline options
set the feature row style for the feature row .
get the { @link paint } object for the feature style .
draw the line
get the polygon paint the feature style
get the style paint from the feature s style .
get the style paint from the feature s feature style
get the style paint from the feature s style
helper method to check if the bitmap is intersects .
get the paint for the feature style
get the style paint from the feature s style .
get the style paint from the feature s style .
get the style paint from the feature s style .
puts a { @link <unk> } for the icon row .
create an icon image with the density settings of the icon
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an iterator over the rows of the feature row .
/ * ( non - javadoc )
creates a new { @link map } of { @link <unk> } s .
disposes the layers
dispose of the layered graphics layers .
returns a bitmap of the specified layer .
returns the image for the specified layer .
creates an image and graphics based on the specified layer .
get or create a data columns dao
get the style attributes for the feature table
get the style for the icon
get the feature style styles for the feature table and tile table .
get the feature table link style and tile table
get the style for the geometry type
get the feature editor link for the feature table
this method gets the icon row for the given style mapping row .
get the rtree style styles for the feature table
paint the feature table .
set the feature style into the feature table
set the feature row style into the polyline options
create a styles .
create a { @link extension } for the feature row .
get the style for the feature table
get the style of the feature table
get the style for the feature table and feature id
get the style for the geometry type and geometry type
determine if the feature table style relationship exists for the given feature table and feature table .
create the rtree index extension for the feature row .
create a new { @link extension } based on the feature row information .
create the rtree index extension for the feature row .
get the icon shape of the feature table
get the feature shape count for the feature table table and feature id
this method gets the icon row for the button .
get the default icon for the feature table
get the style for the geometry type
get the icons of a feature id
set the style for the feature table .
set the styles for the geometry table .
set the style for the feature table
create the style for the feature table and feature table .
sets the side - icon for the icon .
set the rtree spatial table column
set the style for the feature table
set the feature row style into the feature row style options
get the feature shape from the feature table and feature id
set the feature row style into the polyline options
set the feature row style into the polyline options
set the feature row style into the polyline options
set the feature row style ( icon or style ) into the feature options
set the feature style ( icon or style ) into the marker options
removes the specified style names from the specified row and column .
set the default style of styles .
set the style for the feature row
set the style for the geometry type
set the style for the feature row .
create the style for the feature table and feature table .
set the style into the polyline options
set the icons for the feature row .
set the icons for the feature table .
set the feature row style ( icon or style ) into the marker options
set the feature table icon .
set the feature row style ( icon or style ) into the marker options
set the icon to be displayed in the feature table
set the icon to the marker options
updates the style of the style .
gets the edit icon .
get the style mapping for the base id
create a style relationship between the feature table and feature table style and icon table
delete the icon table icon related to the feature table icon table and icon table
create the style mapping table .
create a style relationship between a feature table and a feature table
delete all triggers .
create a style relationship between the feature table and feature table and style
delete the rtree icon of the feature table
delete the icon relationship between the feature table and feature id attributes .
delete a user mapping
get the mappings for the feature table .
get the list of table icon ids for the feature table
get the list of style mappings for a feature table
get the list of all the icon mappings for the feature table .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the pixel value for a pixel
reads the row from the {
this method is called when the db is created .
/ * ( non - javadoc )
{ @inheritdoc }
draw the feature
draw the geometry
draw the line
draw the polygon
get the path to the shape
convert a { @link polygon } to a { @link polygonoptions }
draw the point
get the label for the given monitor id .
create the rtree index extension for the feature table
changes the size of the cache .
get the styles associated with this library .
/ * ( non - javadoc )
set the feature row style into the polyline options
get the feature style style for the feature type
get the style of the geometry type
get the style of the geometry type
gets the rtree index of the feature row .
this method gets the icon row for the button type .
set the style for the geometry type
set the styles for the geometry type
set the feature row style into the polyline options
set the feature style into the polyline options
set the style for the geometry type
set the style of the geometry type
set the styles for the geometry type
set the icon to be displayed in the feature options
/ * ( non - javadoc )
/ * ( non - javadoc )
read a user custom table
{ @inheritdoc }
sets the width of this component .
get the height of the cell .
get the derived width and height .
get the tile length
returns the density of a tile density rectangle .
/ * ( non - javadoc )
{ @inheritdoc }
read a single blob
{ @inheritdoc }
get the value at the specified index in the data type
/ * ( non - javadoc )
{ @link <unk> ( string list ) }
read a user custom table
set the web color .
sets the color or null if the color is null .
set the fill color .
validate the resource .
create a color from a hex color .
get the { @link <unk> } for the current thread .
creates an instance of the given {
returns the last supertype of the given type .
convert a collection of { @link <unk> } s to a { @link collection } .
returns the order of the {
/ * ( non - javadoc )
try to determine the index of the preferences .
returns true if the feature index is indexed
returns whether or not the given { @link <unk> } is indexed .
returns true if the feature index is indexed
delete the given { @link mediatype } in the list .
delete the given { @link <unk> } .
delete the specified geometry index .
returns true if the feature index is indexed
returns true if the specified index is indexed .
create a { @link set } of { @link <unk> } s .
returns <code > true< / code > if this index is indexed .
returns a list of all the groups indexed by the given type .
returns the last indexed indexed indexed indexed indexed indexed record .
query for feature index results
query for feature index count within the bounding box
query for feature index count within the bounding box
query for feature index results in the geometry envelope
returns true if the index is indexed
check if tile is within the bounding box
query for feature results in the tile
get a file from a uri .
gets the text view of a textview .
returns the type of the geometry type of the geometry type .
set the geometry name of the geometry type
replace the bounding box of the bounding box with a bounding box
replace the x y and z components in the url .
replace the url with the given url .
get the bounding box from the url
replace the bounding box in the url with the bounding box
download the tile from the url
insert the argument into the argument list
/ * ( non - javadoc )
get the geometry
{ @inheritdoc }
index the geometry
get the index of the index in the geopackage
find the index of the first row in the resultset
draw the geometry
update the last indexed table index
delete the table .
delete the geometry with the given id
returns <code > true< / code > if the extension is indexed .
get the index of the last indexed feature
get the index of the geometry
query for geometry index query
query for feature index count within the bounding box
query for geometry index query
query for feature index count
query for geometry index objects within the bounding box projected correctly
query for geometry index objects within the bounding box projected correctly
project a bounding box to the provided projection
gets the geometry metadata .
{ @link <unk> ( cursor ) }
get the index of the geometry row
get the tile table names for the tile table
get the tile table names for the tile table
get the bounding box for the bounding box projected using the projection
get the tile bounding box for the tile
delete the feature tile table extension from the geopackage
/ * ( non - javadoc )
query by base id
get the bounding box ids
get the bounding box ids
delete by base id
query by tile grid and zoom level
query by base id
builds the where ids of the where .
create a geopackage
delete the contents of the database .
returns true if the service with the given name is renamed the name of the service .
rename a geopackage
get all geopackages
gets all template names
get the metadata for the specified database database .
get the metadata for the specified geopackage
get or open the geopackage
get the geopackage s geopackage
get the { @link <unk> } for the specified path .
<unk> > <unk>
get the metadata where the name of the field is not like a like clause .
returns the names of the template metadata in the specified revision .
create a { @link <unk> }
adds a row to the table .
{ @inheritdoc }
returns an iterator over the rows of the feature row .
/ * ( non - javadoc )
this method will be called when the view is created .
attach listener to internal state change listener
fill the view with the given {
/ * ( non - javadoc )
creates a custom view of the given view name using the default constructor .
called when the activity is first created .
translate the logging level .
serializes an { @link <unk> } to the given { @link outputstream } .
formats the logging event .
/ * ( non - javadoc )
gets the url of a resource .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the canonical address of the given address .
creates a new { @link <unk> } .
/ * ( non - javadoc )
<p > <unk> . < / p >
set up a rolling policy .
adds an option to the configuration map .
returns the value for the given key .
creates an ssl serversocket .
returns a string representation of the given string .
returns a string representation of the given string .
<unk> ( string ) ;
set the value of a header .
adds a collection of patterns to a collection of patterns .
set the value of a header .
matches a list of patterns .
writes an integer to the byte array at the given offset .
converts a byte array to a long value .
compiles the environment .
{ @inheritdoc }
returns the next token in the scan .
returns the next token in the stream .
formats the logging event
/ * ( non - javadoc )
returns a list of { @link file } s that matches the given { @link date } .
creates a new ssl serversocket .
used internally to used internally to used internally to used internally to used internally to used internally to used internally to parse an evaluator .
<p > <unk> . < / p >
/ * ( non - javadoc )
instantiate a { @link <unk> } from the given { @code classname } .
sets up the project properties .
checks if the sd card is writable or not .
returns the directory path of the external files .
/ * ( non - javadoc )
sets the file name . <p >
/ * ( non - javadoc )
returns true if the file is opened .
initializes the absolute path to the given filename .
evaluate the logging event
get the logging value for the logging event .
method to update {
filter the filter chain chains .
/ * ( non - javadoc )
get the secure random generator .
used internally to set the {
creates a new { @link sslcontext } .
creates a { @link <unk> } for the given { @link sslcontext } .
build trustmanagerfactory .
create a { @link <unk> } from system properties .
get the location of the user key file .
returns the url for the given resource location .
used to reuse the <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
creates a goro implementation that binds to {
appends the throwable to the stringbuilder .
start the server .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
classify a { @link <unk> } to a { @link <unk> } .
returns the value of the specified key if it exists .
returns the value to which the specified key is mapped or null if the key does not exist .
/ * ( non - javadoc )
returns the value associated with the given key .
returns the <code > <unk> / code > represented by this <code > <unk> / code > .
renames a file .
check if the file is on a different file .
gets the normalized index of the given file .
returns the value of the specified property from the system property .
get the value of a property .
try to retrieve a system property from the system properties .
get the value of a system property .
returns the default credentials for the given key .
returns the value of the given string key as a boolean or the default value if the value is not a boolean .
resets the state of this node .
/ * ( non - javadoc )
sets the context map .
/ * package
/ * ( non - javadoc )
/ * ( non - javadoc )
extracts a stack trace from the specified { @code throwable } objects .
returns true if the type of the given type is a nested type dependency .
adds a new status to the end of the list .
registers a { @link status } with the given { @link <unk> } .
/ * <unk>
/ * package
opens the class loader for the specified classloader .
returns the value associated with the specified key in the system property . if the key does not exist or is empty the default value is returned .
returns the boolean value associated with the specified key or { @code defaultvalue } if the key does not exist .
/ * ( non - javadoc )
returns an array of all methoddescriptors for the given class .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * package
/ * ( non - javadoc )
/ * ( non - javadoc )
adds the xml description to the builder .
close the stream .
attempts to stop the server .
<p > <unk> . < / p >
reset the life cycle of all components .
adds a listener to the console .
/ * ------------------------------------------------------------
get the value of the <unk> property .
/ * ( non - javadoc )
returns true if the {
/ * ( non - javadoc )
/ * ( non - javadoc )
获取 { @link keyfactory }
close a closeable .
attempts to close the given { @link socket } .
closes the given { @link serversocket } .
get an sslsocket .
sets the list of protocols defined by the server .
returns the cipher suites to use for the cipher suites .
returns a list of strings representing the files in the efaps directory .
<p > <unk> . < / p >
convert a string to a scope object
similar to {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
remove a child level from the list of children .
/ * ( non - javadoc )
call the appenders attached to the given event
/ * ( non - javadoc )
create a child logger .
--- logger ---
reply filter chain .
log the log4j .
call this method to wait until the socket is available .
creates a new parent directory if it doesn t exist .
returns the relative path to the given base path .
/ * ( non - javadoc )
convert an integer to a level .
converts a string to a level .
converts the given level to logback logging level .
returns the logger level .
checks if the given object is an instance of the given class .
<p > <unk> . < / p >
factory method for creating a new { @link keystore } object with the given parameters .
visit a resource .
loads a class from the classpath .
returns the package name of the specified object .
returns a { @link classloader } for the given class .
returns the class loader for the given class .
load a class from the given class name .
/ * ( non - javadoc )
append an event to the log .
/ * ( non - javadoc )
set the logger s level .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the index of the first occurrence of the specified class .
evaluates a log event .
build trustmanagerfactory .
returns the { @link <unk> } for the given { @link socket } .
returns true if the given file is on the same symbolic link .
start the error .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
returns the compression type of the given file .
invoke rest of the given url with the given url .
<p > configure . < / p >
configure the logging system .
render the {
<p > reconfigure . < / p >
<p > reconfigure . < / p >
returns the value for the given key .
sets the name of the { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds an element to the queue .
get the element at the given position .
get the number of elements in this pool .
resizes the given size to the specified size .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
returns a { @link <unk> } object that will be used to watch for the app s configuration .
{ @inheritdoc }
returns the effective header value for the given soap header .
this method returns the file header names for the given flags .
this method is used to dump the debug trace list to a string in the trace .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
stops the client .
shuts down all clients in the {
/ * ( non - javadoc )
~ methods **************************************************************************************************************************************
adds the given resource to the list of resources . <p >
removes a resource from the cache .
{ @link <unk> ( string ) }
add a new entry to the list .
get the context identified by the given key .
get the current thread s keys .
returns a copy of the context map .
convert a string value to an object .
returns the value of the specified method in the given class or <code > null< / code > if no such method exists .
method that returns the decision filter .
/ * ( non - javadoc )
adds a new rule to the list of rules .
matches walker as walker as possible .
searches for the specified text element against the given element path .
unpack bundled <unk> into the specified directory .
/ * <unk>
returns an array of { @link file } s that match the given { @code <unk> } .
starts the <unk> .
/ * ( non - javadoc )
creates a new { @link sslcontext } .
/ * ( non - javadoc )
try to get the syslog facility from the syslog facility .
set the syslog facility .
check if a node already exists .
loads the database file .
initialize sql .
/ * ( non - javadoc )
check if the last version is expired .
sets the { @link <unk> } .
execute a <code > <unk> / code > <code > <unk> / code > and <code > <unk> / code > .
performs the actual append operation .
returns the index of the {
bind log event to the statement .
<p > bind . < / p >
strip the suffix from the given object and returns the result .
returns true if the event should be able to run the event .
merges the {
insert the given properties into the database .
formats the caller data .
insert exception .
returns the length of the {
returns the default pbkey level .
introspect this object .
<p > <unk> . < / p >
sets the property .
returns true if the class is an interface or interface .
/ * ( non - javadoc )
/ * ( non - javadoc )
unlinks non - null first token .
get the left hand curly braces
visits a replacement node .
walks the current node and returns them as a node .
<p > <unk> . < / p >
loads the properties from the given url .
trim head and tail .
----- private methods -----
returns true if the server should be started .
/ * ( non - javadoc )
check if the cause of the given exception is an instance of { @link <unk> } .
get unused hosts .
returns a new { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
search for objects
add an object to this index
adds a query to the query .
<p > sets the current { @link <unk> } object . < / p >
sets the delay between milliseconds .
generate local index .
saves the settings directory to the data directory .
sync the current query .
sync the synchronization date if needed .
/ * synchronizes the trust manager to the given fix .
execute a query .
returns the {
search for a query from the index
compiles a batch of queries .
this api is used to fetch multiple queries from a list of queries .
creates a { @link list } of { @link queries } for multiple queries .
returns a list of queries for the aggregate query
get multiple queries for this index
compiles a list of queries from the index .
creates a new { @link <unk> } with the given { @link query } and { @link <unk> () } .
creates a new { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
retrieve an object from the index
gets the properties of a profile
gets an object as a json object
gets the online version of the specified application .
get an object from this index
gets a { @link <unk> } from the specified connection .
get several objects from this index
get several objects from this index
get several objects from this index
returns the list of participants for a conversation .
get several objects from this index .
upload a list of objects from the specified list of strings to this offline connection .
search for a facet values .
search for a facet controller
search for a facet of the current page .
search for a model by facet .
delete by index
sets settings for this index
fetch multiple queries from a collection of queries .
delete this index
creates a query response for queries with disjunctive facets .
queries disjunctive facets with disjunctive facets .
search for a facet of the current query
search for values in a facet of a facet .
search for values in facet values
loads an object from the index
fetch an object from the application .
add an object to this index
adds a { @link <unk> } to the request .
saves a { @link object } to a { @link <unk> } .
update an object in the index
update an object in the index
creates a new { @link <unk> } with the given { @link <unk> } .
delete all objects in a single object
get this object as an object
get an object from this index
get the object from this profile from the specified profile .
get several objects from this index
waits for a task to be executed on the server .
creates a new {
delete an object from this index
returns observable to remove list of participants from a conversation .
get several objects from this index
deletes the query with the given query query .
get settings for this index
sets the settings for this { @link <unk> } .
set settings for this index
sends a { @link <unk> } to the specified { @link io . <unk> . <unk> } with the given { @link cursor } .
helper method to browse the index content
clears an existing index
add an object to this index
delete by index
add an object to this index
retrieve an object from this index
get several objects from this index
get several objects from this index
add an object to this index
delete several objects
add an object to this index
delete several objects
get several objects from this index
delete by index
search for a single facet
delete by index
waits for a task to be executed on this object .
get settings for this index
save a settings rule
clear the index of an existing index .
get multiple queries
build a string representation of a map of key / value pairs .
get parameter value from query
adds a key / value pair to the query .
sets the location of the { @link <unk> } around the { @link location } .
/ * set radius range
/ * ( non - javadoc )
/ * ( non - javadoc )
get the map of facet filters
creates a new immutable { @link set } of { @link com . <unk> . <unk> . <unk> . <unk> } .
highlights the given bdd as a comma - separated list of {
convert a { @link geometry } to a { @link point } .
add a { @link polygon } to the { @link query } inside the query .
get the numeric value of a json string .
sets the query type of the query .
remove a stop tag
sets the value of the { @code list } of { @code this } to { @code null } .
sets the query parameters for the query . <p > <b > note : < / b > { @link <unk> ( string ) } is used for queries .
gets a list of { @link <unk> } s from the given { @link <unk> } .
search for disjunctive facets with disjunctive facets .
populate disjunctive queries with disjunctive facets .
aggregates disjunctive results from a json query .
creates a new { @link <unk> } with the given { @link query } .
search for synonyms
compiles a list of queries to a list of queries .
get an object from this index
get several objects from this index .
loads the settings from a { @link <unk> } .
creates a new { @link <unk> } with the given { @link query } and { @link <unk> () } .
creates a new { @link <unk> } from the given { @link cursor } .
search for a facet of the query
search for values in facet values
builds a { @link <unk> } with the given settings .
creates a new { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
search for disjunctive queries .
deletes a query from this index
creates a json object from persisted object .
update an object
update several objects
write a file to a file
returns the index for the given index .
associates the specified index with the specified index .
checks if the given file exists in the given path .
this method returns a list of { @link <unk> } instances .
generates a list of cluster health issues .
signs the specified index with the index provided .
delete by index
moves an index to the index
/ * ( non - javadoc )
sends a get request to the index
deletes a file or directory .
write the contents of the given { @link inputstream } to the given { @link file } .
add a url parameter to the request .
set the value of a global header .
adds a user agent to the list of user agents .
reads the contents of the given file as a string .
reads the contents of an { @link inputstream } as a byte array .
get several objects from this index
request the request
closes the connection .
check if the resource request is up to the given collection of hosts .
set the location of the { @link <unk> } matching the given { @link location } .
takes a { @link <unk> } and stores it in a { @link <unk> } .
returns a string representation of the around radius .
----- static methods -----
returns a new { @link <unk> } instance for the given query specification .
set a number value to the query parameter referenced by the given name .
/ * ( non - javadoc )
search for a facet of the query
creates a <unk> from a query query using the given parameters .
blocking method to create a { @link token } for facet values .
blocking method to retrieve indexes of a specific request .
deletes an index from this index .
constructs a new { @link <unk> } instance .
moves an index to the index
copy an index to this index
this method allows you to specify a list of queries to be used for multiple queries .
return a list of multiple queries
add or replace one or more batch items
updates the { @link list } of { @link <unk> } s in the given { @link <unk> } .
get settings for this index
add an object to this index
search by index
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
removes the cached value from the cache .
/ * ( non - javadoc )
adds the statistics to the statistics .
creates a new { @link thread } from the given { @link runnable } .
<p > <unk> . < / p >
compares two version strings .
/ * <unk>
<unk> > <unk>
initializes the gateway with the specified file .
registers a system property .
get the value of a property .
<p > <unk> . < / p >
gets the method by name .
launch a worker .
get the pid of the process .
note : copied from google guava under apache license v2 . 0
format a value to a percentage value .
formats a long number as a string .
formats the given long as a string .
create private key entry .
reads the next character from the stream .
convert a hex value to a byte value .
write a binary version of the url .
write a string to the transport .
<p > perform a java <strong > unescape< / strong > operation . < / p >
read a json string from the input stream .
parse a java identifier string .
read a json string from the input stream .
read a json value from the input stream .
read a utf8 encoded string .
creates a new { @link <unk> } for the given object .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
replies the absolute path to the given location .
/ * ( non - javadoc )
replies the active part in the workbench .
replies the active part in the workbench .
/ * create a new editor
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a copy of the pool as a byte array .
/ * ( non - javadoc )
create the default context .
toggles the default page handler .
/ * ------------------------------------------------------------
adds a new column .
returns an enumeration of the values of the current enumeration .
returns true if any of the nodes in the passed list are alive .
sets whether or not this parse is alive .
get the parameter edits set from the tree rooted at this node .
generates the href of the lock .
returns the depth of the element .
returns an enumeration of the values of type { @code <unk> } .
returns the name of the bone .
sets the depth of the tree .
builds the shared xml element . <p >
returns the owner of the container .
sets the default timeout for this tag .
/ * ( non - javadoc )
add a { @link <unk> } to the { @link <unk> } .
checks if the path is a shared element .
adds a new factor to this factor graph .
creates a term from the given tokenizer .
returns true if this condition matches the given condition .
get the <unk> .
this method is called when a bound property is changed .
paint the component .
/ * ( non - javadoc )
builds and returns a list of { @link <unk> } s .
replies the <code > java . util . project . <unk> / code > containing the given <code > <unk> / code > .
helper method to walk the completion of the completion of a <unk> .
* returns the <code > <unk> / code > for the given resource .
loads the lombok configuration from the original file .
reads the mappings from the input stream and adds them to the <unk> .
extracts the name of the given path from the given content .
appends a trailing slash to the end of the url .
replies the child of the given parent .
returns the absolute url of the given relative uri .
gets the elements from the given url .
gets the last element of a url .
returns the parent url for the given url .
returns the root url of the given url .
removes the trailing slash from the given url .
/ * https : // tools . ietf . org / html / <unk>
returns true if the given url contains the given pattern .
registers / unregisters a menu resource .
/ * ( non - javadoc )
returns the content type of the content - type .
get the document body .
returns the html representation of the given node .
creates a new response name and adds it to the response .
add a { @link <unk> } element to this element .
/ * ( non - javadoc )
returns true if the given element is <unk>
add an href to the url .
add a { @code document } element to a { @code document } .
returns an enumeration of the values of the given names .
inserts a new href with an empty href .
remove the href of the node .
get the value of the named property under the given name .
propfind helper method .
add a folder to the list of folders .
create a new {
propfind helper method .
/ * ( non - javadoc )
returns an enumeration of the values of type { @code name } in the given { @code separators } .
returns an enumeration of the field s stats .
returns the text form of the element with the given index .
checks if a property is a valid array of resources .
removes the whitespace nodes from the passed in element .
sets the status mapping .
adds a name / value pair to this object .
sets a property value .
username and password .
notify all registered listeners that a property has been changed .
/ * ( non - javadoc )
returns true if all of the validation classes are of the specified type .
return a collection of {
return multiple entities .
check if any intervals are contained in the classpath .
parses the list of annotations from a list of <unk> .
append a child element to the parent element .
append a child element to the element .
creates a shallow copy of the given node .
returns the root element of the document .
sets the value of an xml element .
checks if the given element is an xml element .
validates that an object is not null .
asserts that the given { @link object } is { @code null } .
checks if the node is a dom node .
add the given element to the given dom element .
adds a node to a node .
adds the given element to the parent element of the given parent element . if the parent doesn t exist it will be created .
get the first element of the parent element with the given name .
returns the first child element of the parent element of the current node .
returns the text of the given child element with the given name .
returns the first child of the given parent node .
returns the text of the first child of the given parent element with the given name .
returns the first child element of the parent element with the given name .
returns the first child of the given parent node .
returns the last child element of the given parent element with the given name .
checks if the given { @link element } is a parent of the given { @link element } .
/ * ( non - javadoc )
returns the next sibling element .
remove the first sibling of the given element .
returns the elements of the next sibling of the given element .
returns the simple name of the parent uri .
gets the extension of a file .
returns the namespace uri for the given element .
returns the simple name of the parent uri .
gets the extension of a file .
returns the qualified name of the given element .
----- private methods -----
returns the text of the given page .
get the root element of the given element .
inserts a new sibling element before the given namespace .
returns true if the node is a valid body element .
returns true if the node is a valid dom element .
rewrite the given xmlfile
given a prefix and an xml element return the corresponding namespace uri .
append a child element to a parent element .
adds the given element to the parent element of the parent element if present . if the element is not found it will be added to the parent element . if the element is not found it will be added to the parent element .
instrument the specified zip file .
helper method to create the <unk> object .
adds a new connection to the session .
counts the value of the property with the given id .
removes a connection from the session .
sets the location factory .
sets the value of the selected property .
defines the size of the visualization where the size of the new size is the number of items in the gauge .
converts an array of constraints to a string .
set the zoom manager .
returns the listing of properties found in the zip file .
expression : expression
adds a lock entry to the lock .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a new child to this node .
removes the given { @link cuboid } intersects the given cuboid .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the resource string associated with the given key .
returns the resource bundle for the resource bundle .
returns a {
<p > <unk> . < / p >
decode a date time string .
returns true if the directory exists .
/ * ( non - javadoc )
throws an exception if the given exception is an error .
log a message at the error level .
adds a field to the editor .
<p > <unk> . < / p >
gets the font fields .
/ * ( non - javadoc )
checks that the fields are valid .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * creates the parent component editor for the field editor .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the field with the given name as a date or null if not found .
/ * fire a property change event .
notifies the registered listeners that a property has changed .
/ * ( non - javadoc )
sets the value of the specified preference overriding the name / value pair to the specified value .
/ * ( non - javadoc )
initialize the barcode .
/ * ( non - javadoc )
<p > <unk> . < / p >
adds the given { @link <unk> } to the tool bar .
$antlr start <unk>
<unk> : = attributekey string
decodes the given url string and returns a string representation of the url .
returns a string representation of the given dn .
encodes a byte array into base64 notation .
creates a context .
save the content of the maven project .
create the wcheckboxselect menu .
/ * ( non - javadoc )
returns the shared resource for the given url .
read a { @link repositoryconfiguration } .
returns the extension of the given url .
returns an enumeration of the keys contained in this enumeration .
/ * ( non - javadoc )
read a { @link repositoryconfiguration } .
replies the url that corresponds to the specified attribute s path .
adds the specified token to the tree .
returns the node at the given node .
write a file .
/ * ( non - javadoc )
{ @inheritdoc }
<unk> { @link condition } <unk>
creates a stub with the given condition .
asserts that the specified object is not { @code null } .
<p > validate that the argument condition is { @code true } ; otherwise throwing an exception with the specified message . this method is useful when validating according to an arbitrary boolean expression such as validating a primitive number or using your own custom validation expression . < / p >
returns a new {
returns the status of the annotation .
create a new { @link <unk> } .
sets the status of the service .
<p > <unk> . < / p >
<p > <unk> . < / p >
get list of interesting lines from the adapter .
bind a string to a string .
returns a string representation of the given message bindings with the given arguments .
returns the localized message for the given key .
encodes a string into a string .
get the url of the given url .
creates a <unk> from the given <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the index of the first occurrence of the specified element in the given array . if the specified array is <tt > null< / tt > or an empty <tt > null< / tt > is returned .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
visits a { @link <unk> } .
returns the dot representation of an object .
use this method to add a new element to the file .
<p > <unk> . < / p >
finds sets of sets of sets of sets of sets of sets .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
override this method to set up the <unk> .
overridden to create a push button .
<p > newinstance . < / p >
generate a report for the given <unk>
parse the <unk> .
/ * ( non - javadoc )
returns true if the terms contain the regular expression .
creates a condition using the tokenizer .
build a streamtokenizer for the arff file .
adds the given { @code element } to the { @code <unk> } element .
add a { @link qualifiedname } to the given { @link qualifiedname } .
returns an enumeration of all of the elements in this list in the specified order .
returns an enumeration of the names of the elements in this list in the order that they are returned by the <code > <unk> / code > method .
factory method for creating permission .
/ * ( non - javadoc )
/ * ( non - javadoc )
obtain an http delete request .
sends a post request to the server .
gets the status of a job .
sets the version of the work definition .
/ * ( non - javadoc )
/ * ( non - javadoc )
add the label to the document .
add the element to the document .
/ * ( non - javadoc )
sets the label name of the node .
/ * ------------------------------------------------------------
execute a query .
handles the search results .
replaces the element at the specified position in this array with the specified value .
adds the active lock to the active container .
/ * ( non - javadoc )
filter the 128 - delimited list of googlecloudstorageiteminfo .
reads a line from the document starting at the given position .
calculates the execution rows of a graph .
/ * ( non - javadoc )
creates an instance of the edit model .
returns the work item for the given element .
replies the image descriptor for the given path .
/ * package
generates the digest challenge .
adds a base vertex to the given depth .
returns the index of the row .
returns the width of the selected row .
prints the vertices .
returns the number of rows in the qr code
returns the editor id for the given class .
creates the context menu .
get the adapter adapter .
/ * ( non - javadoc )
******************** initialization ************************************
compute the bounds of a graph .
adds a new graph to the contextpath .
get a breakpoint breakpoint for the current line .
$non - nls - 1$
/ * ( non - javadoc )
sets the <unk> .
set the href attribute .
execute a request .
/ * ( non - javadoc )
copies the content of the destination reader to the given destination .
/ * ( non - javadoc )
verify that the { @link <unk> } is { @link <unk> } .
propfind method .
retrieve a response from the cache .
returns an enumeration of the entries in the stream .
--- get ---
webdav get method implementation .
use this method to get the status of a property .
get the <unk> resource .
get the version of the resource .
creates a new instance of { @link <unk> } .
/ * ( non - javadoc )
convenience method to create a new instance of a { @link <unk> } .
produces a { @link <unk> } for the given { @link <unk> } .
write out a static resource .
send a { @link <unk> } to a { @link <unk> } .
convenience method to list all documents in the given collection .
returns the value of the property with the given name .
convenience method to set the content of an input stream .
produces an instance of httprequest .
add a property to the mapper .
convenience method which checks whether a particular lock is stored .
convenience method to send a payload .
convenience method to wait for a response .
convenience method for delete a list of resources .
fetches the error code from the cddb server .
convenience method to write a string to a string .
checks if the credential is a working stream .
convenience method to check whether a property is a child of the given name .
adds a new { @code <unk> } to the given { @code namespace } .
get the list of all the nodes in the passed document .
write enumeration element .
decorates a jcomponent to a <unk> .
this method gets called when a bound property is changed .
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a byte array to a hex representation .
converts an array of ints to a hex string
/ * ( non - javadoc )
returns the children of the given element .
/ * ( non - javadoc )
appends the given object to the given parent .
create the root element of the document .
returns true if this <code > <unk> / code > is empty .
sets whether or not the given node is a child of this node .
parse the given { @link document } into a { @link <unk> } .
get a single property .
<p > strips the last part of a string . < / p >
/ * <unk>
looks to see if the method is a getter method .
gets the property name for the given method name .
gets the property name for the given method name and property name .
check if the method is a getter method .
gets the simple name of the class .
render the state of the window .
/ * ( non - javadoc )
write the contents of the stream to the output stream .
/ * ( non - javadoc )
main runnable .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the next quoted string .
reads the next token from the stream .
remove all white space characters from the end of the string .
* find all files in the project folder
this method will add the given resource to the <unk> .
/ * ( non - javadoc )
replies the metadata for the given resource .
enumerates all elements of the specified hashtable .
returns the value associated with the given key as a string .
returns the age of the age tag .
/ * ( non - javadoc )
truncate the string .
returns true if the overwrite value is false .
returns the <unk> of this issue .
returns the charset of the given type .
returns an enumeration of the keys contained in this properties object .
set the value of a property .
/ * ( non - javadoc )
load users from a file .
read the content of the object .
combine the given string into a boolean pattern .
returns the right - hand side of the key .
removes the object metadata from the given text .
post / metadata / { @link <unk> }
creates an array of tokens from the input string .
/ * ( non - javadoc )
/ * ( non - javadoc )
list of children children .
/ * ( non - javadoc )
add a child to the list of children .
prints all children of this node .
prints the given node .
prints a lookup .
convert a json string to a list of { @link list } of { @link document } s .
creates a jsonvalue object from a double value .
/ * ( non - javadoc )
discovers the children of the given parent .
returns the parent type of the given object .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the image descriptor for the given id .
sets the <unk> .
returns the context for the given url
method <unk> <p >
sets the proxy server server url .
translate a resource .
closes the context .
set the proxy server handler for the given url .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
returns the value of the field with the given name .
get the header field name .
get the header value for the column .
/ * ( non - javadoc )
sets the proxy server url .
<unk> > <unk>
sets the resource url .
get the socket factory .
/ * private static void <unk> ( final ioexception <unk> ) { if ( <unk> ! = null ) { <unk> = new <unk> () ; system . <unk> () ;
/ * ( non - javadoc )
create a new rule flow from the maven project .
/ * private void <unk> () throws ioexception { <unk> = new <unk> () ;
/ * ( non - javadoc )
returns the list of all checked items in the list .
updates the sre .
this method is used to create an image from the image .
enumerates all elements of the specified hashtable .
/ * ( non - javadoc )
returns an enumeration of the keys contained in this enumeration .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * add / <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
install the default sre .
{ @link <unk> ( string ) }
restart the findbugs .
restart the {
/ * <unk>
create a module that is currently restart .
run the module identified by the given module .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
$non - nls - 1$
this method is called from the eclipse thread .
generates a new {
gets the {
return a new string .
<p > getter for the field <code > <unk> / code > . < / p >
/ * <unk>
/ * ( non - javadoc )
/ * ------------------------------------------------------------
creates a { @link <unk> } for use with the { @link <unk> } .
/ * ( non - javadoc )
get the properties for a resource .
/ * private void <unk> ( string <unk> string <unk> string <unk> ) throws ioexception { <unk> <unk> = <unk> . <unk> () ;
/ * ( non - javadoc )
returns the contents of the given resource .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get a resource from zanata .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
pushes a baseline report .
export a member .
convenience method to handle a patch request .
get the name of the remote interface .
/ * ( non - javadoc )
optimize the dfs .
/ * -------------------------------------------------------------------
/ * ( non - javadoc )
/ * <unk>
returns the {
gets the reference to the given url .
returns the {
calculate the md5 hash of a string
generates a md5 digest of the given request .
/ * ------------------------------------------------------------
creates a list of conditions from a well - formed sequence .
/ * ( non - javadoc )
initialize the resource .
performs validation .
check if the project name is valid .
returns the dialog settings section .
creates a list of { @link list } of { @link <unk> } s .
generates an entity tag
produces an instance of httprequest .
removes a vertex from the graph .
generate a long term ecdsa key pair .
verifies the signature of the <unk>
initializes a private key from a byte array .
decodes the given private key into a byte array .
get the public key from the given dn .
initializes the <unk> object from the given byte array .
reads a private key from the given byte array .
<p > <unk> . < / p >
initializes the rsa public key from a string .
get domain parameters from a curve name .
get the domain parameters from a <unk> .
<p > initialize . < / p >
gets the private key of the private key .
encrypt the given data using the given key .
<p > the <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > and <code > <unk> / code >
/ * [ deutsch ] <p > <unk> . < / p >
shuts down the executor service .
gets the partition key ranges .
bulk import documents
returns a { @link list } of { @link partitions } in the given { @link document } as a { @link <unk> } .
method to abort the authentication process ( phase 2 ) .
/ * ( non - javadoc )
method to abort the user .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
check if the user is right
/ * ( non - javadoc )
sets up the connection options .
checks if the user has the right username .
load the settings from a file .
write the database properties to the database .
/ * ( non - javadoc )
returns true if the user has a right user .
sets the options for this widget .
initializes the subject .
/ * ( non - javadoc )
/ * ( non - javadoc )
select a list of all the features in this score .
helper method to execute a request .
deploys application urls .
<p > <unk> . < / p >
returns true if the given string needs to be quoted .
returns the evaluation of the given node .
creates a new {
<p > <unk> . < / p >
<p > <unk> . < / p >
clears all static initializers .
checks if slf4j is available .
asserts that the given object is a { @link class } .
returns the class name of the given object .
returns the class name of the given class .
get the package name of the passed object .
returns the class name of the given class .
encodes the given string into a string using the given encoding .
returns a string representation of the given object .
returns true if the given object is an instance of the given { @code object } .
<p > converts an array of primitive doubles to objects . < / p >
returns an array of parameter types for the given method .
returns the parameter types for the given entity type .
returns the parameter types for the constructor .
returns the { @link <unk> } for the given { @link method } .
returns the wrapper class for the given class .
checks if the given object is compatible with the given class .
returns true if the given class array is more suitable for the given class array .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > invoke . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * public static <unk> <unk> ( string source ) { return <unk> . <unk> () ; }
<p > <unk> . < / p >
returns an array of { @link propertydescriptor } for the specified message .
returns the converted value of the indexed property .
sets the class cache inspector
returns the read method for the given name .
<p > <unk> . < / p >
/ * ( non - javadoc )
returns the source string for the given child .
display the stack trace of the throwable s stack trace .
display the stack trace of the throwable s stack trace .
<p > invoke a method on the target object . < / p >
<unk> <unk> .
/ * semicolon
/ * assignment
/ * and for and && then then equality
/ * and for and && then then equality
/ * and for and && then then equality
/ * and for and && then then equality
/ * and = && false
/ * equality for equality
/ * relational expression
/ * equality for !
/ * multiplication for a bunch of them then multiplication
/ * multiplication for a bunch of them then multiplication
/ * <unk>
/ * multiplication for a bunch of them then multiplication for them
/ * <unk>
/ * <unk>
/ * <unk>
/ * <unk>
compares the given two objects .
gets the value of the comparison between the two objects .
returns true if the value is a number .
coerce to a long .
coerce to a double .
register a { @link biginteger } as a { @link biginteger } .
returns a { @code bigdecimal } whose value is { @code biginteger } .
<p > <unk> . < / p >
returns true if the given value is a primitive type or a primitive type .
converts the given string to an object .
converts the given string to a java object .
converts the given string to an object .
cast a object to an integer .
this method returns the constant corresponding to the constant pool of the interface or interface .
returns the numeric representation of the two given types .
returns a new value for the given type .
returns a new number with type { @code n } .
casts a throwable to a runtime exception .
/ * ( non - javadoc )
returns the current type of the current stack .
returns the median of the values in the current list .
returns the next node in the tree .
/ * ( non - javadoc )
removes the current evaluation of the current solution from the cache .
<p > <unk> . < / p >
returns the type name of the given type .
{ methode }
returns true if the expression should be cast to the given node .
search for method in the given class .
<p > compile . < / p >
generates a getter method for the given field .
generates the setter method .
returns the class loader for the specified context .
returns a new { @link <unk> } for the given { @link <unk> } .
removes the node at the top of the stack .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an {
returns a {
adds a child to this node .
/ * ( non - javadoc )
find a class by name .
rehashes the contents of the map to a new size .
unescapes the character identified by the <code > <unk> / code > property .
/ * ( non - javadoc )
compiles a ognl expression .
<p > <unk> . < / p >
creates a default unmarshaller for the given root object .
returns a {
returns an { @link <unk> } object using the { @link <unk> } .
returns the value of the root view of the root object using the specified root object .
adds the given object to the given root object using the given context resolver .
returns a {
<p > <unk> . < / p >
set the value for the root scope .
returns the value associated with the root object using the specified root object .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
returns the value of the root object using the ognl expression .
returns the value of the root object using the ognl expression .
returns a {
returns the value in the ognl stack . if the root object is not an instance of <code > e< / code > then an <code > illegalargumentexception< / code > is thrown .
returns an object from the ognl stack .
<p > <unk> . < / p >
sets the value of the ognl stack to the given value .
set the value of the given property on the tree .
set the value of a property on the bean .
returns true if the tree is constant
returns true if the expression is a constant or literal .
returns an array of <unk> .
this method is called when the server is started .
writes a list of files to watch for the given file .
/ * ( non - javadoc )
read the contents of the file as a string .
/ * ( non - javadoc )
reads a string from a file .
constructs a <code > process< / code > object from the given original source file .
process the package names .
creates an archiver for the given archiver .
deletes all streams on exit .
resolve the resolved artifact .
reads the contents of a resource as a string .
returns a list of all projects that have been added to the build project .
initializes the polling strategy .
{ @inheritdoc }
/ * ( non - javadoc )
adds a system property to the domain .
executes the system property .
initializes the native library directory .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
get the current values of all buckets .
<p > <unk> . < / p >
gets the current bucket .
adds the given value to the current bucket .
returns the sum of all cells in this cell .
sets up the navigation icon of the action bar .
creates a new instance of { @link <unk> } .
gen - last : <unk>
changes the contents of a directory .
refresh the button state .
starts the observer .
refresh the selected folder .
creates and returns the list of folders for writing . <p >
checks if the given file is a valid cache directory .
checkstyle : on
returns true if the domain matches the specified domain .
returns true if the specified <code > string< / code > matches the specified <code > <unk> / code > . leading dots are ignored if present . the search is case - insensitive .
returns true if the specified <code > string< / code > matches any iana - defined top - level domain . leading dots are ignored if present .
returns true if the specified <code > <unk> / code > matches the specified <code > string< / code > . if the specified <code > <unk> / code > returns <code > true< / code > returns <code > true< / code > if the specified <code > string< / code > matches the specified <code > <unk> / code > .
returns true if the specified <code > string< / code > matches the specified <code > <unk> / code > . leading dots are ignored if present .
returns the canonical representation of the method parameter names .
called when the activity is first created .
/ * ( non - javadoc )
/ * ( non - javadoc )
handles a start tag .
/ * ( non - javadoc )
----- private methods -----
adds a <code > <unk> / code > to the stream .
end the list
constructs a <code > <unk> / code > for the given <code > string< / code > .
finds the hit based on the state of the image .
handles the motion of the image .
moves the cursor to the specified position . <p >
increases the width and height of a rectangle by the specified width and height .
returns a rect that can be used to crop the crop region . <p >
computes the layout for the view . <p >
/ * package
/ * ( non - javadoc )
sets whether or not the text editing is supported .
sets the text editing for the given content .
set the text to be displayed .
gets state of the <unk>
create a span that can be applied to the span .
applies the effect of the given decision to the view .
convert a string to a html object .
convert a { @link <unk> } to a { @link <unk> } .
/ * package
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a { @link <unk> } to a list of { @link <unk> } s .
converts paragraphs to a paragraph .
/ * [ deutsch ] <p > <unk> . < / p >
escapes the given text content .
returns the mime type of the given url .
returns the uri of the given file .
converts the given uri path to a { @link file } .
returns the namespace of the given name or null if not found .
/ * ( non - javadoc )
validate attribute .
encodes the given string according to rfc <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the file is writable .
copy the content of the specified asset file to the specified file path .
/ * <unk>
writes <code > len< / code > into a <code > byte< / code > array .
/ * ( non - javadoc )
/ * ( non - javadoc )
write the contents of a bytebuffer to an outputstream .
转换为 { @link <unk> }
reads all bytes from the input stream into a new stream .
returns a new byte array containing the contents of this buffer .
gets the size of the font .
normalizes a filename to a unix separator .
internal method to normalize a filename .
converts the given path separators to unix space .
returns the index of the extension of the given filename .
this method is used to get the spans from a set of spans .
recomputes the color of the solution
sets the size of the image to be visible .
calculates the position of the menu based on the given key .
reset the feed class .
/ * perform an unescape operation based on a reader .
attempts to match the given value against the defaults .
$antlr end <unk>
/ * ( non - javadoc )
returns the next element in the iteration .
evaluate the element type .
set the attribute value .
sets the parent of the parent element of this element .
returns the element type definition for the given name .
returns the <code > int< / code > value associated with the given <code > name< / code > .
returns true if the image is located at the given location .
validates the authority and returns true if the domain is invalid .
returns true if the given path is a valid path .
removes all paragraphs of the given function f from the list of matched elements .
returns the absolute path to the given media type .
/ * ( non - javadoc )
apply the <unk> to the <unk>
returns true if the given string is a valid email address .
returns true if the authority is a valid authority .
gets the character position at the specified text .
/ * ( non - javadoc )
pops the redo stack from the redo stack .
pops the next command from the redo stack .
push a new operation to the stack .
replaces all occurrences of $ { <unk> } with the given regular expression .
/ * package
sets the {
returns true if the thread can be consumed by the thread .
decodes a { @link bitmap } descriptor .
pre - load the fonts in the fonts
get a list of all the fonts in the assets folder
get the font for the matching asset .
copy a directory to a directory
reads the contents of an { @link inputstream } into a byte array .
<p > read . < / p >
read a byte array from an input stream .
converts the given string to an input stream .
read a byte array from a url .
write the contents of this inputstream to a byte array .
reads the contents of an { @link inputstream } to a { @link byte [] byte [] } array .
converts the given string to an input stream .
reads the contents of a { @link inputstream } from a { @link reader } .
read lines from the input stream .
read lines list .
creates a new instance of { @link <unk> } .
returns an input stream for the given input .
writes the given collection of lines to the given { @link outputstream } .
/ * ( non - javadoc )
write the data to output { @link outputstream } .
writes the given string collection to the given { @link outputstream } .
write the data to output { @link outputstream } .
writes the given string to the given writer .
writes the given string data to the output stream .
writes the given string to the given output stream .
writes the collection of lines to the given { @link outputstream } .
writes a collection of lines to the stringbuilder .
writes a collection of lines to a file .
writes a collection of lines to a writer .
writes a portion of an array of bytes .
<unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> >
<unk> <unk> <unk> <unk>
calls <code > <unk> () < / code > on the character <code > out . <unk> / code > .
parses the given input stream and creates a new { @link <unk> } instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
restart the given element .
end processing of given node
<p > <unk> . < / p >
/ * ------------------------------------------------------------
declare foreign keys .
/ * ( non - javadoc )
unquote a string .
split a string into an array of strings .
wait for the element to finish .
parses a utf - 8 string .
save the state of the activity .
/ * ( non - javadoc )
registers the editor .
unregister an editor .
add the specified toolbar to this activity s toolbar .
removes the given toolbar from the toolbar .
过滤<br > 过滤过程通过传入的editor实现来返回需要的元素内容，这个editor实现可以实现以下功能：
insert a new image in the editor
/ * ( non - javadoc )
initializes the { @link <unk> } . <p >
render the effect of the <unk> .
******************** private methods ***********************************
update the base matrix
compute the maximum image size .
checks if the current selection is in selection .
过滤<br > <unk>
remove the object from the selection .
gets the spans of the given {
/ * ( non - javadoc )
adds to the <unk>
method to encode the request url and query parameters .
url - decode a string .
returns a new { @link <unk> } from the given { @code charsequence } .
picks up a directory from the given activity .
called when the activity is first created .
returns the size of the bitmap from the given uri .
creates a new bitmap with the given scaling .
rotates the given bitmap with the given angle .
called when the activity is first created .
/ * ( non - javadoc )
sets the output stream .
set the uri prefix .
/ * ( non - javadoc )
receive notification of the end of the end of the xml document .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns <code > <unk> / code > for the given uri .
process a namespace .
/ * ( non - javadoc )
writes the given text to the output stream .
add attributes to the given attributes .
creates a boolean query string .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
receive notification of attributes .
add attributes to the element .
create a <unk> for the specified configuration .
try to discover the stream with the specified stream name .
get metainfo for a kinesis stream stream .
get metainfo for a stream .
returns the best converter for the given class .
add a relation to the tail of the tail of the tail .
completes the program with missing snapshots .
get metainfo for a kinesis stream .
<p > <unk> . < / p >
get records in the kinesis stream .
perform a synchronous action that executes the action with retries .
retries the action on the {
creates a fix that uses a {
returns the bucket region via the bucket name .
retrieves a method from a map of objects .
load the store .
copy the source files into the given folder .
search for files that match the given wildcard pattern .
opens a file .
this method is called to trigger a wildcard type .
replaces all occurrences of the given substring in the given string with the new pattern .
convert a { @link collection } of { @link collection } s into a delimited { @link string } delimited .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new {
{ @inheritdoc }
/ * ( non - javadoc )
extracts the error message from the response .
builds a javascript script from the given options .
{ @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> () } { @link <unk> () } { @link <unk> () } { @link <unk> () } { @link <unk> (
update the configuration properties with the system properties .
returns a copy of the {
/ * ( non - javadoc )
<p > get the map of pre - generated children . < / p >
<p > getter for the field <code > <unk> / code > . < / p >
load the model from the given file .
create a new { @link <unk> } instance from the given { @link <unk> } .
creates an { @link inputstream } for the given file name .
builds an { @link <unk> } from the given factory .
returns a string representation of the namespaces in the given path .
<p > <unk> . < / p >
get signature hash map .
stops the executor service .
submit the loop .
/ * ( non - javadoc )
compile the remote script .
copy the contents of the given reader to the given writer .
{ @inheritdoc }
checks whether the given url is a valid url .
rewrites the image url
creates a { @link <unk> } for the given configuration .
{ @inheritdoc }
/ * ( non - javadoc )
encodes the given resource id into the given resource group .
fires a value change event to all registered listeners .
fires a value change event to all listeners .
runs the registered { @link <unk> } s .
factory method to create a runnable .
sets the period of time to be scheduled on the scheduler .
/ * ( non - javadoc )
write the static resource to the response .
----- private methods -----
adds the given { @link <unk> } to the list of processors .
adds the { @link <unk> } s to the list of processors .
<p > <unk> . < / p >
creates a new instance of { @code <unk> } .
factory method for creating a new instance of { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
resolves the given { @link <unk> } from the given { @link <unk> } .
creates the context layout for the pattern .
returns a transformer that can be used to start a {
returns a transformer that adds a suffix transformer to a file .
/ * ( non - javadoc )
returns the { @code <unk> } for the given { @code filename } .
get the content - type header for the given filename .
retrieve the contents of a tms resource .
/ * ( non - javadoc )
override the naming strategy to use .
on error output .
/ * ( non - javadoc )
transform the given { @link <unk> } to a { @link <unk> } .
checks if the given resource is a detail page .
gets the base name for the given zip file .
create a list of files for a given group .
create an image url that will be used to create the image .
validates the uri of a uri .
/ * ( non - javadoc )
compile the given string .
<p > <unk> . < / p >
creates a { @link <unk> } based on the given { @link <unk> } .
/ * this method is used to rebuild the jmx server if the jmx server is enabled .
------------------------------------------------------ crud methods
process the request .
/ * ( non - javadoc )
sets the { @link configuration } of the given { @link configuration } .
/ * ( non - javadoc )
this method initializes duplicate groups .
prints out the example { @link org . apache . hive . hive . core . model . <unk> } .
{ @inheritdoc }
gets the required {
/ * ( non - javadoc )
apply the post processors to the given { @link <unk> } .
factory method to decorate a { @link <unk> } .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
upload the { @link <unk> } to the given { @link writer } .
/ * ( non - javadoc )
splits the given string into an array of enum values .
load the { @link <unk> } scheme .
validates the given { @link <unk> } .
loads the properties from the given { @link inputstream } .
<p > parse . < / p >
creates a standalone {
returns the { @link <unk> } for the file system .
creates a { @link <unk> } instance .
creates a servicedirectorymanagerfactory .
sets the { @link <unk> } of the { @link <unk> } .
process the resource workgroup .
returns { @code true } if { @code <unk> } is { @code null } .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the url for the given resource .
create a resource extension .
removes the file extension from the uri .
invoke rest service using post method .
processes the given reader and writes it to the given writer .
creates a new { @link <unk> } based on the given configuration .
creates a { @link <unk> } for the given { @link configuration } .
/ * ( non - javadoc )
set the transformers transforming each attribute in the model .
{ @inheritdoc }
{ @inheritdoc }
adds a file to the operation .
checks if the given url is valid .
tries to merge the given { @link resource } into the given { @link <unk> } .
returns a string representation of the given resources . <p >
runs the given list of resources .
apply a pre - generated { @link org . apache . commons . codec . <unk> } to a { @link <unk> } .
copy the { @link <unk> } to the specified { @link <unk> } .
uploads the given target callback to the target callback .
/ * ( non - javadoc )
deduplicates an object .
prepares the given { @link <unk> } for the given object .
get all fields from delegate object
maps a field to an object .
fuzzily match an image against one of your custom image lists . < / p >
compute the css uri for the external server . <p >
computes the location of an image file .
adds a key / value pair to the { @link <unk> } .
/ * ( non - javadoc )
method called when a period changed .
/ * ( non - javadoc )
set teh transformers transforming the output of each data provider .
/ * ( non - javadoc )
----- private methods -----
/ * ( non - javadoc )
run the { @link <unk> ( java . io . reader reader ) } method .
expands the given string according to the rules of the form $ { key . name } .
expands the uri of a uri template uri .
{ @inheritdoc }
/ * ( non - javadoc )
creates a new { @link string } representation of the given resource .
/ * ( non - javadoc )
generates a pre - processor that pre - processor resources .
determines if the given { @link set } is eligible for the given type .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method appends the specified reader to the given writer .
/ * ( non - javadoc )
creates a new instance of the { @link org . openqa . selenium . by } .
<p > <unk> . < / p >
<p > <unk> . < / p >
stops the server .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
performs the gzip read and writes the response to the response .
----- public static methods -----
create a new {
{ @inheritdoc }
creates a new { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
----- private methods -----
load the resource from the given resource .
reads the contents of a file into a string .
create a report for a resource .
returns a { @link list } containing the elements of the given collection .
/ * ------------------------------------------------------------
<p > <unk> . < / p >
determines the url of a group url .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
<p > <unk> . < / p >
finds imported resources .
load a resource .
gets the absolute path of the action path .
checks if the request has been modified since the last modified timestamp of the request .
creates and returns a validator which allows to validate the content of a specific resource .
<p > <unk> . < / p >
split a constant list into a list of tokens .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > process . < / p >
this method is used to encode the version of a group into a group path .
<p > <unk> . < / p >
/ * ( non - javadoc )
destroy the { @link <unk> } s .
provide a map of message cache .
parses the api request parameter .
{ @inheritdoc }
rename a group .
computes the location of the destination jar files .
copies the resources from the given group to the given parent .
wraps the given { @link throwable } as a { @link runtimeexception } .
{ @inheritdoc }
/ * ( non - javadoc )
check if the given path exists for the given uri .
set the current physics engine .
generates a javascript template expression for the given content .
/ * ( non - javadoc )
renders the context folders and renders the resources .
gets the stream for the given location .
/ * ( non - javadoc )
{ @inheritdoc }
create a new { @link <unk> } using a { @link <unk> } .
creates a new { @link <unk> } using the { @link <unk> } and { @link <unk> } .
rewrites the image url
<p > process . < / p >
<p > process . < / p >
gson invokes this call - back method during serialization when it encounters a field of the specified type .
locates a jar file .
opens a file .
locates all jar files in a jar file .
extracts the path from the uri .
/ * ( non - javadoc )
/ * ( non - javadoc )
prints the document to the output stream .
/ * ( non - javadoc )
<p > syntactic sugar < / p >
creates a new { @link <unk> } based on the given { @link <unk> } .
adds the colors in the given reader to the given writer .
visits the specified option .
expands the given { @code content } to the given { @code run } .
gets the crc checksum .
<p > log . < / p >
this method is called when a resource is processed .
{ @inheritdoc }
returns the lock for a given key .
/ * ( non - javadoc )
creates a process instance from the given source file .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
provide a { @link map } of { @link <unk> } s .
this method processes a comma - separated list of properties .
get the list of module information for this task .
/ * ( non - javadoc )
removes the script tags from the given input string .
creates a map of custom { @link response } s from a { @link map } .
creates a { @link map } of { @link response } s from a { @link <unk> } .
parses the header .
sets the keep alive header .
adds the headers to the request .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
convert object to json string .
create a path from the {
returns the package path of the given class .
returns <code > true< / code > if the given <code > str< / code > matches <code > null< / code > or <code > null< / code > otherwise .
returns the absolute path to the given path segments .
checks if the request is a gzip header .
parses a string representation of a version string .
gets whether the given value is selected .
get a copy of a resource .
loads the regexp with the given property name .
copy the contents of the given reader to the given writer .
creates a temporary uri from the given file .
joins the given string with the given separator .
clean up the image url .
returns the full path for the given path .
normalizes a resource path .
<p > <unk> . < / p >
gets mbean attribute .
/ * ( non - javadoc )
gets the attribute value .
returns a string representation of the given inputstream .
logs a warning .
creates an instance of { @link <unk> } .
returns the top - level handler for the <unk> .
/ * ( non - javadoc )
create a new file element .
open a <unk> .
creates a new { @link <unk> } instance .
starts the correlation for the given correlation id .
/ * ( non - javadoc )
returns a new { @code <unk> } with the given { @code callable } .
creates a list of { @link cache } s based on the specified { @link cache } s .
{ @link <unk> ( string ) }
schedule a job immediately .
returns a { @link <unk> } for the given { @link subscriber } .
process exception .
check if the resource has changed .
/ * ( non - javadoc )
stops the container .
checks if the given resource type is a resource type .
initializes the resources .
add a resource to this group
sets the resources for this resource .
copy all of the mappings from the source map to the target map .
creates a { @link process } from the given source file .
returns the command line for the given file path .
/ * ( non - javadoc )
encodes the given string as a byte array .
encodes an object .
adds the rules to the group .
load template groups from the given tsmeta element .
create a list of group elements .
convert a resource to a resource identifier .
rename the given resource to the given resource .
get the resources for the given group .
/ * ( non - javadoc )
/ * ( non - javadoc )
----- protected methods -----
returns a { @code collector } that accumulates elements into a { @code map } whose keys and values are the result of applying the provided mapping functions to the input elements .
executes the given { @link throwable } as the given { @link throwable } object with the given { @link <unk> } .
returns a { @code list } of { @code future } s that completes when the given { @code duration } is { @code null } .
attempt to wait for the future of the specified futures .
creates a thread - safe { @link map } with the given { @link <unk> } and { @link <unk> } .
returns a { @code map } with the specified keys and { @code <unk> } .
constructs a new instance of { @link timeoutexception } with the given timeout .
stop the thread .
get a named timer for the given string name for a given thread . if no such timer exists for the specified name then the newly created thread will be returned .
get a named timer with a given name .
returns the named timer for the given string name . if no such timer exists yet then it will be newly created .
get a named timer for the given string name for a given thread . if no such timer exists for the specified name then the newly created thread will be returned .
prints the statistics .
interrupts the worker thread .
/ * ( non - javadoc )
update the {
attempts to increment the counter if the counter is smaller than the current maximum value .
add the given { @link <unk> } to the given { @link context } .
{ @link <unk> ( string ) }
{ @link <unk> ( string ) }
default value for the <unk> .
gets the sub - property chains .
gets the subset of {
creates and returns a { @code <unk> } with the given { @code <unk> } and { @code <unk> } .
/ * ( non - javadoc )
collects the {
{ @inheritdoc }
restore the values of the current stage .
determines if the manifest is inconsistent with the <unk>
returns a { @link au . <unk> . <unk> . <unk> . <unk> } .
gets the taxonomy information for the specified class .
/ * ( non - javadoc )
unregisters the program from the program .
gets the instance taxonomy for the specified class .
convenience method to get an instance of a { @link <unk> } .
/ * ( non - javadoc )
gets the property taxonomy property .
<p > filter . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
determines if the specified set of axioms is entailed by the reasoner axioms .
<p > gets the <unk> of the <unk> rule . < / p >
returns the set of <unk> for the given <unk> .
removes the given { @link <unk> } from the given { @link <unk> } .
return all possible <unk> objects for the given <unk> .
registers a set of axioms in a set of axioms .
execute the <unk> on an iterable of axioms .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the transport is open .
invalidates all the ontology stages in the tree .
returns the hash of the given node .
returns true if the given { @link <unk> } is { @link <unk> } .
returns the automata to add .
process a set of indexed nodes
returns a { @link collection } of { @link entityannotation } s .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
disposes the current ontology .
returns the initial capacity of this <tt > <unk> / tt > instance .
removes all elements from the given array at the given position .
removes all entries from the given maps .
returns the position of the last element in the array .
returns <tt > true< / tt > if the specified <tt > <unk> / tt > object contains at least one element <tt > e< / tt > such that <tt > ( o == null&nbsp ; ?&nbsp ; get ( i ) == null&nbsp ; : &nbsp ; o . equals ( e . g . &nbsp ;
/ * ( non - javadoc )
/ * [ deutsch ] <p > ist die angegebenen <unk> ist . < / p >
convert a <unk> to a <unk>
/ * ( non - javadoc )
{ @inheritdoc }
adds the timer rule .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the <unk> link for the current page .
normalizes and adds the given { @link <unk> } to the given { @link <unk> } .
normalizes and adds the given { @link <unk> } to the given { @link <unk> } .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
create a linear copy of an array
!!! all methods that use this method must be sync enlarge the old values to the old one .
rehashes the table into a new one .
loads the configuration from the configuration file .
returns true if there is at least one larger than the given position .
process a class change data .
print the declarations for the given class .
gets a set of all elements of this node according to the specified query .
gets all sub - nodes of the given collection of direct elements according to the given adt .
count all instances of a node .
create a new { @link <unk> } backed by the given { @link map } .
find stale entries .
adds a new element to the hash table .
removes a mapping from the head of the table .
resizes the table to the new capacity .
removes all of the mappings from this map .
/ * ( non - javadoc )
given a factory this method creates a new <unk> from the given factory .
creates a hash code for the given objects .
returns the hash of the given { @link iatomcontainer } .
returns a collection of { @code <unk> } with the given { @code <unk> } .
returns a new { @code hashset } containing the elements of { @code <unk> } .
/ * <unk>
returns a set that contains the difference between s1 and s2 .
returns the one of the given { @code key } in the given { @code key } .
copy the contents of the given input stream to the output stream .
returns a list of { @link string } s of the given type .
static factory method for health checks .
/ * ( non - javadoc )
gets the <unk> monitor .
<p > <unk> . < / p >
/ * ( non - javadoc )
remove all deleted rules .
/ * ( non - javadoc )
sets whether or not the default delay should be used for incremental delay .
returns true if the given { @link <unk> } is contained in a conjunction of the given { @code <unk> } .
removes { @link <unk> ( <unk> ) } from the given { @code <unk> } and { @code <unk> } .
returns the index of the first chain of the given residues in the given <unk> list .
returns a <unk> from the given <unk> .
<p > <unk> . < / p >
dumps a taxonomy to a file .
----- private methods -----
dumps the contents of a job to a file .
dumps { @code taxonomy } to { @code writer } .
an immutable hash from a taxonomy .
processes a taxonomy .
print the specified { @link <unk> } and { @link <unk> } .
this method calculates inferred flag for a given inference class
calculates the hash of the specified { @link <unk> } .
/ * ( non - javadoc )
submit the input to the buffer .
append the text to the file .
removes all linked property chains from this linked list .
/ * ( non - javadoc )
rehashes the contents of this map to a new size .
rehashes the contents of this map to a new size .
returns a map of group name / value pairs .
runs a socket task .
runs the task collection .
runs the task .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
returns a {
returns a { @link <unk> } for the given { @link rule } s .
processes the given {
helper method to register a { @link <unk> } .
matches an ast node with the given matcher .
register a { @link <unk> } with the { @link <unk> } annotation .
/ * ( non - javadoc )
returns the {
{ @inheritdoc }
returns the fillers of the given taxonomy .
{ @link <unk> ( <unk> ) } from { @link <unk> } .
/ * ( non - javadoc )
<p > <unk> . < / p >
calculates the hash of a taxonomy .
/ * ( non - javadoc )
gets a { @link <unk> } of the given { @link <unk> } .
checks that a chain of {
combines multiple iterables into a single iterable . the returned iterable does not support {
returns a { @link java . util . iterable } that contains all the elements in { @code iterator } . the { @link iterable } s that the elements in the iterable will be skipped .
returns a { @link collection } containing the results of applying the given { @code mapping } to each element of the collection .
returns a { @link set } view of the keys contained in this set .
returns an immutable map containing all of the elements in the first map that have the same keys .
write a collection of elements to a stringbuilder .
returns a { @link set } containing the union of the input elements in the given { @code set } .
base64 encode a byte array .
/ * package
clustering the data .
rehashes the contents of the map to a new array .
add a new value to the map
remove a single value from the map
/ * ( non - javadoc )
divides the given list of positions according to the specified root positions .
adds a new counter to this counter .
log a stack trace event .
calls { @link <unk> () } on the given { @link <unk> } .
log file creation .
calls { @link <unk> () } on the given { @link <unk> } .
allocates memory usage of the jvm .
/ * ( non - javadoc )
/ * ( non - javadoc )
utility method to get a taxonomy node .
see { @link <unk> ( <unk> ) }
gets the node taxonomy node .
--- factory method ---
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the sub - classes of the specified class expression .
/ * ( non - javadoc )
gets the super classes of the specified class expression .
/ * ( non - javadoc )
gets the sub - object properties of this node .
gets all super - tree super - super - super - super - super - tree .
gets all the instances of the specified class expression .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
prints the header .
join the character array with the specified values .
同 system . out . println () 方法，打印控制台日志
returns a string representation of the given character .
overrides the visitor to compare the address
main entry point for command .
convert a { @code <unk> } to an { @code <unk> } .
******************************************************************** / * ******************************************************************** / * internal methods ********************************************************************
removes all indexed implementations of a taxonomy .
adds a new rule to this rule .
shuts down the buffer .
parse the given request url into a proper { @link java . util . inputstream } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the given class is a single value type .
returns <code > true< / code > if <code > str< / code > is <code > null< / code > or <code > null< / code > otherwise .
sets the value of the link attribute .
returns true if the given media type is supported by this link .
<p > sets the value of the <code > <unk> / code > property . < / p >
sets the title of the link .
set the title of the title
returns true if the given media type is supported by this link .
sets the value of the <code > link< / code > attribute for the html anchor .
set the marker anchor .
adds a link parameter to the request .
<p > <unk> . < / p >
expands the { @link uritemplate } using the given parameters .
expand the { @link affordance } s parameters to the { @link affordance } s .
<p > expand . < / p >
returns the list of service implementations for the given service type .
returns the service implementations for a given service type .
returns true if there are any required parameters in the {
creates a map of strings that --------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the specified <code > <unk> / code > matches the specified <code > <unk> / code > .
helper method to determine if the input is included in the {
/ * ( non - javadoc )
validate the request .
returns the default value for the request .
<p > <unk> . < / p >
/ * ( non - javadoc )
this method fills the <unk> of the given <unk> .
/ * ( non - javadoc )
method that can be called to ask implementation to serialize values of type {
converts the given { @link <unk> } to a list of { @link <unk> } s .
gets the setter for the given property .
convert a { @link <unk> } to a { @link <unk> } .
convert an { @link <unk> } to an { @link <unk> } .
/ * ( non - javadoc )
this method walks the list of {
get the action input parameters for the fragment .
gets the value of the given property if it exists .
/ * ( non - javadoc )
gets the terms of annotated terms .
find all { @link event } s matching the given criteria .
get the { @link query } from the supplied { @link <unk> } .
/ * ( non - javadoc )
write an xml tag .
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
build an { @link map } of { @link chaining } s .
adds a path to the { @link <unk> } .
add a link to the {
add a { @link <unk> } to the { @link <unk> } .
add a link header
registers a { @link <unk> } .
returns the current request context path .
adds a { @link <unk> } to the set of { @link <unk> } s .
returns the dynamic { @link net . dv8tion . jda . core . template . template . template } .
<p > expand the given request parameters . < / p >
<p > expand . < / p >
appends the given { @code parameters } to the given { @code parameters } .
returns a new {
search for a node with the given name .
returns the relationship with the given id .
{ @inheritdoc }
/ * ( non - javadoc )
creates a <i > mutable< / i > { @code set } object containing the elements of the given iterator in the order that they are returned by { @code iterator } .
根据等号左边的类型 构造类型正确的hashmap .
returns an immutable map view of the specified size .
returns a { @link map } with the values of the specified { @link map } .
creates a new { @link map } for the given key and value .
<unk> { @link inode } <unk>
@see <unk> ( int )
<unk> > <unk> > 是 { @link <unk> ( map ) } 的逆方法<br > 比如传入数据：
<unk> > <unk>
returns an empty map .
returns a new {
returns a { @link set } of { @code entry } objects representing { @code entry } s { @code entry } and { @code <unk> } .
{ @inheritdoc }
/ * ( non - javadoc )
{ @link <unk> ( object object ) }
/ * <unk>
/ * <unk>
returns the value of the last element in this queue .
returns the predecessor of the given node .
/ * ( non - javadoc )
add a key - value pair to the map .
returns the intersection of two maps .
creates a new instance of the given { @code iterable } .
/ * <unk>
creates an { @link <unk> } that iterates over the elements of this { @link iterable } .
{ @link <unk> ( iterable ) }
returns a { @link iterable } that contains all of the elements of the given iterable that satisfy the given predicate .
kullback - fold divergence .
/ * documented <unk>
creates a new { @code <unk> } instance with the given { @code comparator } .
creates a collection composed of the elements of the two collections .
returns a { @code map } containing the elements of { @code items } .
removes the given key from the graph .
returns an iterator over the elements in this stream in the order that they are returned by the iterator .
returns a { @link option } of type { @link option } .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
static factory method for wrapping a value of type <code > a< / code > .
constructs a { @link tuple2 } from a { @link map entry } .
returns the object at the specified index .
returns an array containing all of the generic elements of the specified class .
/ * <unk>
produces a { @link list } containing the results of applying the accumulation function to each element of a function .
obtains a { @code range } from the given { @code number } .
{ @inheritdoc }
returns the index of the first occurrence of the specified element in this list or - 1 if the specified object is not an index .
/ * ( non - javadoc )
returns a range of the portion of this list in the specified range .
<p > <unk> . < / p >
static factory method for wrapping a value of type <code > g< / code > in a { @link choice7 } .
returns the empty mapping .
returns a { @code map } containing the elements of { @code items } .
returns the leaf at the given index .
{ @inheritdoc }
replaces the element at the specified position in this vector with the specified value .
{ @inheritdoc }
returns a fluent iterable whose iterators traverse first the elements of this fluent iterable followed by all of the elements in this fluent iterable . <p > this fluent variant of { @link <unk> ( iterable iterable ) } for each element in the iterable . < / p >
/ * ( non - javadoc )
creates a new node .
static factory method for wrapping a value of type <code > <unk> / code > in a { @link choice8 } .
returns a map of key / value pairs from the specified key / value pairs .
returns an immutable copy of the specified map . the returned map is a copy of the original map .
returns a new { @code stream } instance containing the given items .
returns a mutable copy of the given items .
returns a { @code map } containing the elements of { @code items } .
converts an array of items into a flowable .
returns a set containing all elements of the given items .
create a stream from a sorted map .
returns a list containing all of the elements in the sorted set . the order of the elements in the iterable is the same as the <code > <unk> / code > method .
sorts the elements of the given iterable into a sorted list .
converts an array of items into a flowable .
creates a new { @code stream } with the given items .
/ * [ deutsch ] <p > iterable eine <unk> . < / p >
<p > <unk> . < / p >
以 conjunction 为分隔符将数组转换为字符串
以 conjunction 为分隔符将数组转换为字符串
creates a new instance of an { @link optional } .
applies the supplied supplier to the result .
<p > <unk> . < / p >
insert the given array into an array .
resize the given array and return the new array .
creates and returns a new array that contains the given items in the specified array .
<unk> > <unk>
split the given array into a new array .
removes the element at the specified position in the specified array .
/ * ( non - javadoc )
borrowed from seam
/ * ( non - javadoc )
execute a commit .
/ * ( non - javadoc )
enlist the resouce with the { @link <unk> } associated with this { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the state of a {
/ * ( non - javadoc )
/ * --- private methods ---
validates that the given directory is a directory and its contents are valid .
get all the interfaces implemented by this class .
create the inheritance link for the given class .
adds the given format to the list of accessible methods .
/ * package
convert a primitive type name to a string representation .
creates a copy of the {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
receives an int from its int representation .
creates a {
event for { @link timer } .
/ * ( non - javadoc )
/ * ( non - javadoc )
f743 - <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
displays the category tree .
/ * ( non - javadoc )
<p > implementierungsmethode des interface { @link externalizable } . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * supplier .
create a {
/ * this method returns the list of artifacts for the scan .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
validate audit records .
returns the number of activities mapped to this page .
get the number of activities mapped to the given statistics .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a <unk> to an array of <unk> .
{ @link <unk> ( int ) }
<unk> t2 transformation
returns the number of executed tasks for the specified executor .
{ @inheritdoc }
/ * ( non - javadoc )
<p > returns the estimated number of misc tasks that are currently in progress . < / p >
<p > returns the { @link <unk> } for the given { @link <unk> } . < / p >
get the amount of misc tasks scheduled on the server .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the specified key is enabled or not .
<p > compareto . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
activates the given { @link <unk> } with the given name .
<p > <unk> . < / p >
{ @inheritdoc }
unregister the endpoint for the given service .
/ * ( non - javadoc )
<p > startup . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
locks the routing statistics for a routing event .
returns the average event url of the event .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
translate a tinylog severity level .
parses a string representation of a string representation of the given string .
compares this alarm to the given version .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
unregister a usage parameter .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
register an mbean source .
/ * ( non - javadoc )
/ * ( non - javadoc )
register all the usage of the mbean managed by this instance .
gets the boolean init parameter set .
/ * ( non - javadoc )
f743 - <unk>
f743 - <unk>
<unk> > <unk>
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
get all the profile tables .
/ * ( non - javadoc )
get the { @link state } from the specified { @link cloudtask } .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
deserialize a message .
execute the repository .
receives an instance of the { @link <unk> } associated with the { @link <unk> } associated with the given { @link <unk> } .
returns the appropriate {
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the property as a string .
/ * ( non - javadoc )
/ * ( non - javadoc )
clear stale connections .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
remove a child node .
returns the contents of the given node as a map .
/ * ( non - javadoc )
/ * ( non - javadoc )
translate a tinylog severity level .
/ * ( non - javadoc )
checks to see if this object contains the given trace level .
/ * ( non - javadoc )
initialize the profile scope specification .
gets the profile columns .
/ * ( non - javadoc )
convert a profile description to a number .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
extracts the contents of a zip file and extracts the corresponding { @link <unk> } from the jar file .
dump the contents of the tracer to the given directory .
copies the contents of the input stream to the output stream .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if there are any nodes that have no children .
/ * ( non - javadoc )
attach a child to this node .
returns true if the given <code > <unk> / code > already exists .
returns true if this node has no effect attached to it .
returns projects that are tied on this node .
remove a child node .
remove a child node .
returns true if this node is an ancestor of this node .
returns a copy of this node s children .
{ @inheritdoc }
gets the value of the specified option .
{ @inheritdoc }
append the given message to the buffer .
process the arguments .
/ * ( non - javadoc )
/ * initializes the notification for the notification .
remove the usage notification for the given usage .
helper method to create a usage notification .
/ * ( non - javadoc )
process arguments .
/ * ( non - javadoc )
initializes the local retirejs repository .
stops the install process .
copy the contents of a local file to a directory
downloads the given url into a byte array .
/ * ( non - javadoc )
reinstalls the <unk>
find the deployment context for a deployment
apply the search to the application .
invoke the action method .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the logger for the given logrecord .
/ * ( non - javadoc )
display help menu .
/ * ( non - javadoc )
converts an { @link <unk> } to a { @link <unk> } .
converts a { @link <unk> } to a { @link <unk> } .
given a {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
serialize the object .
reads this object from the given stream .
/ * ( non - javadoc )
----- private methods -----
gets the policy from the policy file .
opens a { @link reader } for the given uri .
/ * package
returns the list of all the available annotation classes .
{ @inheritdoc }
<p > <unk> . < / p >
/ * ( non - javadoc )
returns a profile object for the specified profile .
/ * ( non - javadoc )
remove a profile from the database .
finds a profile by its attribute value .
/ * ( non - javadoc )
filters the list of { @link <unk> } s by its name .
gets the search entities for the given attribute .
/ * ( non - javadoc )
/ * ( non - javadoc )
close a profile
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add the use of <code > // < / code >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
if the given service is not active then the given service is filtered .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > start . < / p >
add a scenario to the management scenario .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
builds the profile attribute map .
/ * ( non - javadoc )
/ * ( non - javadoc )
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i >
returns projects that are tied on this node .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the value of usage parameter .
retrieves the value of the <unk> parameter .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
gets the named data parameter with the given name .
gets the names of the post parameters .
<p > remove . < / p >
sets the usage information for the given parameters .
f743 - <unk>
event handler method .
/ * ( non - javadoc )
retrieves a client profile from the server .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * documented <unk>
returns the subset of {
gets the java type of the given java type .
gets the string representation of the option .
unboxes the given { @link string } to an { @link java . lang . string } .
returns the list of abstract methods of the given class .
returns the list of concrete methods of the given class .
returns the list of concrete abstract methods of the given class .
scans the class of an abstract class for this class .
get the interface methods from the controller .
receives a metric from the database .
/ * ( non - javadoc )
register a sip connector pool .
/ * mbean
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates an { @link <unk> } from the given int value .
/ * ( non - javadoc )
/ * ( non - javadoc )
removes all the alarms for a notification .
get all topology names .
retrieves the names of all alarms associated with the given notification source .
/ * ( non - javadoc )
<p > the <code > <unk> () < / code > method returns an array of <code > <unk> / code > objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * [ deutsch ] <p > implementierungsmethode des interface { @link externalizable } . < / p >
calls the super method and writes the mbr object to the specified stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
runs the given <code > <unk> / code > with the given <code > <unk> / code > .
$non - nls - 1$
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the <code > <unk> / code > property of the <code > <unk> / code > property is set to <code > <unk> / code > .
abort the transaction .
this method is used to determine if a transaction is uncommitted .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
receives the transaction associated with the specified transaction .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the current { @link <unk> } object for the given { @link <unk> } .
stops the current commit actions .
leaves the cluster .
/ * ( non - javadoc )
stops the current commit actions .
/ * ( non - javadoc )
returns an array of { @link propertydescriptor } s that provides at most one { @link <unk> } .
/ * ( non - javadoc )
re - registers a pooled tracer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * end public methods
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
set the { @link <unk> } for this { @link <unk> } .
register the editor editor editor .
/ * ( non - javadoc )
convert a { @link <unk> } to a { @link <unk> } .
swaps the left color and bits of the given color .
<p > <unk> . < / p >
<p > deactivate the endpoint . < / p >
<p > remove . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > invoke . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a string field to an object .
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
clears the cache for the specified key .
removes a key from the cache .
check if the notification is enabled for the given notification .
sets the profile label of the profile .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
receives a { @link <unk> } from the given { @link <unk> } .
/ * ( non - javadoc )
removes leading and trailing whitespace from the given string .
/ * ( non - javadoc )
removes stale heartbeats from the cache .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds all of the elements in the specified collection to the end of this molecularformulaexpand .
/ * ( non - javadoc )
returns an array containing all of the elements in this list in proper sequence ( from first to last element ) ; the runtime type of the returned array is that of the specified array . if the list fits in the specified array it is returned therein . otherwise a new array is allocated with the runtime type of the specified array and
validates that the given child is a child of the given string .
/ * ( non - javadoc )
converts an int to a { @link <unk> } .
get the sip application name for the given subsystem .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the number of threads currently being executed .
checks to see if this level is higher than the given level .
convert a level to an int .
parses the deploy config .
/ * ( non - javadoc )
remove all classes from the classpath .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * [ deutsch ] <p > implementierungsmethode des interface { @link externalizable } . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieves a profile object from the pool .
receives a { @link <unk> } from the specified { @link <unk> } .
update the bean .
validate profile .
read abstract properties .
validate descriptor .
/ * package
/ * ( non - javadoc )
execute a task .
execute a task to be executed in the { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
generate the concrete methods for the given class .
/ * ------------------------------------------------------------
/ * <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
augments the default configuration properties with the default configuration .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a name binding to the cache .
/ * <unk>
remove the feature shape from the database .
f743 - 506
detach a timer from the cache .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
inform the <code > <unk> / code > for the given <code > <unk> / code > .
receives an event from the session . <p >
/ * ( non - javadoc )
/ * use <code > <unk> / code > for <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > and <code > <unk> / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
gets the output actions of the given build .
/ * ( non - javadoc )
/ * receives a map of {
/ * ( non - javadoc )
/ * mbean
/ * ( non - javadoc )
/ * ( non - javadoc )
close the profile state .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * this method is called when the method is called from the ui thread .
/ * ( non - javadoc )
get video field list .
create video management method invocation
invoked after a management method invocation .
method <unk> .
/ * ( non - javadoc )
documentation inherited from interface
/ * ( non - javadoc )
return true if the token existed in the body .
gets the entity name for the given entity name .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
deletes a file or directory .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * [ deutsch ] <p > implementierungsmethode des interface { @link externalizable } . < / p >
calls the super method and writes the mbr object to the specified stream .
creates a constructor that can be used to create the concrete class .
sets the percentage of free memory free memory to use .
sets the percentage of the free memory free memory to turn off .
sets the period between the number of currently running units .
/ * ( non - javadoc )
/ * ----------------------------------------------------------------------
creates a constructor with the given parameters .
creates a default constructor .
creates a default usage parameter for the given class .
/ * package private methods
/ * ( non - javadoc )
executes the <unk> method .
wraps the given {
f743 - <unk>
initializes the query handler .
add an { @link <unk> } to the { @link <unk> } .
add an exception to the list of cycles .
adds the specified <code > key< / code > to the <code > target< / code > .
{ @link <unk> ( string ) }
unbinds a { @link name } from { @link <unk> } .
/ * ( non - javadoc )
binds the given name to the jndi context .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
exit event .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
adds the given { @link <unk> node } to the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * receives the constructor and adds it to the concrete class .
set up the time between the given time .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
set the real field name for the component .
sets the value of the field to the given value .
converts a json string to a primitive type .
/ * ( non - javadoc )
retrieves the login event from the given workspace .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
/ * ( non - javadoc )
/ * ( non - javadoc )
initializes the profile handler .
/ * ( non - javadoc )
<p > compareto . < / p >
/ * ( non - javadoc )
create a new instance of this class .
/ * ( non - javadoc )
unregisters the inheritance from web container .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
creates a setter method .
<p > <unk> . < / p >
clones the annotation
adds the member values to the annotation .
/ * ( non - javadoc )
loads a class from the given classname .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a collator that can be used to guess the collator for this collator object .
/ * ( non - javadoc )
replaces all occurrences of the given string with the given replacement string .
validate usage parameter interface
returns the invokable method for the given interface .
get all interfaces implemented by this interface .
returns a list of method names from the given class .
/ * ( non - javadoc )
set the trace level component .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets a copy of the given source .
get a copy of the given source .
/ * ( non - javadoc )
validates a tracer id .
register a failover source .
check if a tracer is defined .
creates a new tracer for the given tracer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * / *
downloads the content of the <unk> into a temporary file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
generate the classes for this profile .
generate the attribute array class for this profile .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the profiles .
/ * ( non - javadoc )
persists the entity to the persistent store .
/ * ( non - javadoc )
/ * ( non - javadoc )
initializes the inputformat implementation .
this method is used to clear the transaction associated with the current thread .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
register a notification listener . this method is invoked by { @link <unk> ( object ) } and { @link org . infinispan . notification . notification } is finished .
call this method .
/ * ( non - javadoc )
returns the class loader for the current thread .
convert the proxy jar to a proxy object .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
save the given <code > <unk> / code > to the <code > <unk> / code > .
parses the max - age ( value ) string value and returns the result as a string .
returns true if the current thread is visible in the current thread .
/ * ( non - javadoc )
factory method for <unk> .
/ * ( non - javadoc )
clear all registered loggers
adds a new { @link org . apache . gobblin . console . <unk> } to the given { @link org . apache . console . logger } .
add a new socket handler
load a handler on the management console
add a new step handler
build the drop down controls .
converts the value of an { @code int } to a { @code long } value .
sets the value of the given string parameter to the given value .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the priority of the priority queue .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
return a child relation with the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the next index in the list .
/ * ( non - javadoc )
builds a string representation of a { @link <unk> } .
initialize the logger with the given log4j level .
sends a { @link <unk> } to a { @link logger } .
/ * package
adds a message to the console .
log a message at the log level .
adds a fine - grained message to the specified level .
log a message at the debug level .
log a message at the finer level .
log a message at the finer debugging level .
adds a message to the console .
/ * ( non - javadoc )
/ * ( non - javadoc )
log a message at the info level .
adds a severe message to the database .
log a message at the severe level .
/ * ( non - javadoc )
/ * ( non - javadoc )
log a warning message .
/ * ( non - javadoc )
check the tracer for a tracer .
writes the members of an object to an output stream .
reconstitute the <tt > <unk> / tt > instance from a stream ( i . e . deserialize it ) .
/ * ( non - javadoc )
returns a list of all dependencies .
reads a frame from the persistent store .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
receives the profile from the profile .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the { @link <unk> } for the specified { @link <unk> } .
method will return the active {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
receives a new instance of { @link <unk> } and returns a new instance of { @link <unk> } .
receives a <code > <unk> / code > and returns it .
/ * ( non - javadoc )
create a new {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
set the column class name .
get the local profile profiles .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the tracer for the given tracer .
sets the {
/ * use the default profile specification components .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
activates the given { @link <unk> } from the given { @link <unk> } .
adds the given class to the concrete class .
determine the concrete class for the given class .
/ * ( non - javadoc )
<p > query . < / p >
returns a { @link list } of { @link object } s that match the given { @link <unk> } .
returns a { @link set } of { @link set } s of the given { @link <unk> } .
query whether a { @link <unk> } exists .
inserts the given { @link <unk> } into this { @link <unk> } .
<p > update . < / p >
sets the value of the updated field .
sets the value of the <code > name< / code > property as a <code > object< / code > value .
check that the argument is not null .
/ * ( non - javadoc )
registers a custom { @link java . sql . <unk> } with the specified custom type .
adds an order by name .
添加命名的参数 : propertyname - > 命名的参数
adds a field to the query .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
parses an { @link <unk> } from a string .
gets the bounds of the box .
resolves the image dimensions to a rectangle .
parses the given string into a set of integers .
generate the canonical form of the catalog .
/ * ( non - javadoc )
get the list of {
zhongshu - comment <unk>
{ @inheritdoc }
set the <unk> .
添加命名的参数 : propertyname - > 命名的参数
merges the contents of a { @link <unk> } into a { @link <unk> } .
merges two {
converts a { @link string } to a { @link <unk> } .
create a converter for the converter .
添加命名的参数 : propertyname - > 命名的参数
adds a new { @link <unk> } to this { @link <unk> } .
returns the value of the property as a string .
parses an { @code <unk> } object from a string .
creates a canonical form from the given size .
resolves a {
this method resolves an {
/ * package
initializes the {
returns true if the given { @link class } contains the given { @link throwable cause } .
/ * ( non - javadoc )
returns the string representation of the document .
returns true if the specified device is pop up .
/ * package
this method blocks until the standby is running .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
replaces all occurrences of the given regular expression with the given regular expression .
<p > replaces all occurrences of the given regular expression with the given replacement . < / p >
replace all occurrences of the pattern with the given replacement .
adds a property to the text box .
/ * ( non - javadoc )
/ * ( non - javadoc )
builds the markdown javascript expression for the given markdown file .
converts the given text to native encoding .
close a connection .
close a connection .
{ @inheritdoc }
/ * ( non - javadoc )
sets the name of the application .
checks if the exception is an instance of { @link <unk> } .
returns a list of exceptions .
executes the { @link <unk> ( java . util . map java . util . map ) } method .
/ * ( non - javadoc )
returns the health relating to a {
/ * ( non - javadoc )
retrieves a cached cached statement .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
set up the default values for the given connection .
returns true if the sql connection is valid .
creates a new <code > <unk> / code > object from the given <code > <unk> / code > .
get the name of the pool .
removes all elements from the {
find the parent of a type element .
get the implementation of the { @link <unk> } via { @link <unk> } .
/ * ( non - javadoc )
generate delete .
<p > <unk> . < / p >
write a bit to the stream .
/ * ( non - javadoc )
finds the category of the given node .
deserialize a state from an input stream .
create a new instance of { @link type } .
retrieves a list of objects from a json array .
returns a list of objects from a json object .
<p > <unk> . < / p >
returns a { @link list } of { @link link } s that match the given predicate .
get a set of modifications from a set of transitions
get allowed durations for new card
/ * ( non - javadoc )
gets the list of groups within the given structure .
initializes the <unk> .
add a picture to an image file .
registers a system property if it does not already exist .
appends an event to the logging level
this method converts a { @link list } of { @link object } s into a { @link list } of { @link float } s .
adds a new array to the end of this list .
/ * ( non - javadoc )
/ * ( non - javadoc )
overloaded version of { @link <unk> ( int int ) } for more details .
/ * ( non - javadoc )
equivalent to {
populates a collection of { @link <unk> } s from the given { @link list } .
runs the constructor .
evaluates a list of { @link map } s of type { @link list } of { @link object } s .
get a list of { @link revision } s from cassandra .
creates a new selector validation map .
creates a new selector for the given value .
<p > <unk> . < / p >
this method should be called when the pool is idle .
scans the queue for writing events to the queue .
extract the annotation data from the given annotations .
returns an array of { @link annotation } s for the given property .
returns an array of { @code annotation } objects that are annotated with the given property name .
<p > <unk> . < / p >
<unk> > <unk>
tells you if the expression is a string literal .
set the custom data to the local database .
<unk> > <unk>
liberty change end
creates a new instance of the given { @link map } using the given { @link java . util . list } .
<unk> > null< / code >
<p > <unk> . < / p >
decodes a { @link map } of { @link object } s .
decodes a { @link map } of { @link object } s .
to map .
converts an object into a map .
<unk> <unk> .
<unk> > <unk>
<p > <unk> . < / p >
{ @inheritdoc }
{ @link <unk> ( list ) }
returns a { @link <unk> } for the given { @link <unk> } .
create a validator for validating a resource .
remove a property from the properties object .
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
returns the number of cache elements in the cache .
internal hash function .
returns the default options instance .
open a file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
loads a list of keys from the given keys .
/ * ( non - javadoc )
returns the index of the end of the array .
returns the value of the given object as a double array .
reduces the number of elements of the given array .
returns the minimum value in an array .
returns the standard deviation of the given values .
<p > returns the index of the given array . < / p >
returns the maximum value in an array .
returns the minimum value in an array .
calculate the mean value of a double array .
calculate the variance of a double array .
returns the <a href = http : // en . wikipedia . org / wiki / <unk> > arithmetic mean< / a > .
compute the median of an array of values .
/ * ( non - javadoc )
returns a new instance of {
factory method used to construct a new instance of { @link methodinvocation } initialized with the given { @link method } .
<p > returns the sum of all the elements in the given array . < / p >
returns the <a href = http : // en . wikipedia . org / wiki / <unk> > arithmetic mean< / a > .
returns the maximum value in an array .
returns the standard deviation of the values in the supplied array of values .
/ * ( non - javadoc )
<p > <unk> . < / p >
adds a criterion to the query .
returns a new criterion that compares { @code name } and { @code value } .
creates a new criteria for the given operator .
creates a new { @link criteria } for the given { @code name } .
creates a criterion using the given { @link list } of { @link list } s of the given { @link list } .
creates criteria from a json token
this method converts a { @link list } of { @link object } s into a { @link list } .
adds a new array to the end of this list .
adds a new array to the end of this list .
adds a range of values .
/ * ( non - javadoc )
equivalent to {
search for the first element in the list and return the index of the specified list .
search for the first element in the list and return the index of the first occurrence of the specified key .
returns a random position of the given array .
returns the first element of the list with the specified filters .
returns the last element of a list or null if the list is empty .
returns a list containing the last element of the list .
returns the first element of the list .
sorts the given array using the specified comparator . if the specified array is <code > null< / code > then <code > null< / code > is returned .
returns the first element of the list or null if the list is empty .
returns the last element of a list or null if the list is empty .
returns a random position of the given array .
sort the given array according to the specified comparator .
/ * ( non - javadoc )
process a list of maps .
/ * ( non - javadoc )
utility method to convert a list of <unk> to a list of <unk> .
handle collection values .
creates a schema from a collection of fields .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the localized message for the given key .
creates a label from a resource bundle .
returns the localized resource tooltip for the given key .
<p > <unk> . < / p >
writes a string to the stream .
handles the keep - alive bridge data .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds the given { @code key } to the { @code key } .
/ * ( non - javadoc )
process read operations
helper method to process a single write operation .
close the hardware .
<p > index . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
add a string to a string
adds the given string to the end of the string .
add a string to a string
<p > split . < / p >
split a string by space .
splits a string into a string .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
check if the char sequence is equal to the given string .
gets the median of two strings .
returns a string representation of the given number of numbers .
build a {
sort the given list of field access fields .
sort the object in ascending order .
/ * ( non - javadoc )
returns a { @link list } containing all the elements in the specified { @code iterable } .
adds the given array to the given array .
add a comparator to this comparator .
{ @link <unk> } <unk>
returns the first value in the given navigable map .
returns the first value in the given navigable map . if the specified navigable map is not a { @link <unk> } then the first value is returned .
returns the first value in the given navigable map . if the specified navigable map is not a <code > map< / code > then a <code > <unk> / code > is thrown .
returns a matcher that matches the given value on the given map .
check if an array of bytes equal to the expected length .
check if the supplied array equals the expected byte array .
get the sum of all values in the array .
returns the maximum value in an array .
returns the minimum value in an array .
calculates the standard deviation of a dataset
compute the median of a collection .
returns the rounded power of the given number rounded up to the nearest power of 2 .
retrieves the localized message from the bundle .
sorts the values in the specified list and sorts them accordingly .
sort the given list of { @link list } s .
delete the given response from the given restresponse .
/ * ( non - javadoc )
sets field value from map .
/ * ( non - javadoc )
returns a pattern that matches the given regular expression .
/ * ( non - javadoc )
/ * ( non - javadoc )
过滤<br > <unk>
calculates the index of the given list .
returns true if the given object is a string field .
returns a list of all declared fields of a class .
returns a list of { @link field } s for the given class .
returns an array of { @link <unk> } s for the given class .
<p > <unk> . < / p >
returns the first field of the given class that ends with the given class .
gets the field meta field .
returns the { @link <unk> } of this { @link <unk> } .
compares the given { @link entry } to the given { @link entry } .
creates a new {
gets the value of an object in ascending order .
<p > <unk> . < / p >
sort map by value .
dynamically sorts the map entries by value .
dynamically sorts the map entries with the given value .
<unk> > <unk>
<p > <unk> . < / p >
returns a comparator that compares { @code <unk> } and { @code <unk> } .
create a { @link comparator } for the given { @link list } of { @link map } s .
compares two values .
returns the value associated with the given key .
cleans up the cache for the given key .
/ * ( non - javadoc )
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
returns { @code true } if { @code <unk> } is { @code true } .
cleans up obsolete entries .
<p > <unk> . < / p >
initialize object .
returns true if the given value is a {
<unk> { @link iterable } <unk> { @link <unk> } <unk>
cast a object to a list of objects .
/ * ( non - javadoc )
allocate a new byte buffer .
returns true if the current thread is ready to exit .
execute the input writer and return the result .
try to flush the server if necessary .
wait for the next data to be written .
schedule a background thread .
start the server .
/ * ( non - javadoc )
validates a field .
execute the expressions in the given expressions .
iterate through all fields and add them to the result set .
apply the given set of criteria to the given set .
wrap a collection of { @link collection } into a { @link collection } .
converts a { @link string } to a { @link map } .
/ * ( non - javadoc )
attempt to lock the file to disk .
close the reader .
/ * ( non - javadoc )
/ * ( non - javadoc )
unblock the output stream .
/ * ( non - javadoc )
adds the given { @code key } to the { @code key } .
returns a { @link map } containing all of the keys in this map .
/ * ( non - javadoc )
returns the value to which the specified key is mapped or { @code null } if this map contains no mapping for the key .
returns the key for the given key .
adds the given { @code key } to the { @code key } .
/ * ( non - javadoc )
reads the meta data from the properties file .
gets the { @link <unk> } for the given { @link <unk> } .
extracts the meta data from a string .
get a list of validator meta data for a given class .
extract validator meta data .
load annotation meta data from meta data .
copy annotation data to validator meta data
compiles the regex pattern .
<p > split . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
parses a float from the given byte array and returns the number of bytes written .
parses a double from the given byte array and returns the parsed value .
parses an int from the given byte array and returns the number of bytes written .
parses the given byte array and returns the corresponding long value .
this method converts a { @link list } of { @link object } s into a { @link list } of { @link <unk> } s .
adds a new array to the end of this list .
adds a new array to the end of this list .
sets the element at the specified position in this list .
converts a list of { @link list } of { @link object } s into a { @link list } .
adds a new array to the end of this list .
adds a number of values to the end of the list .
/ * ( non - javadoc )
/ * ( non - javadoc )
equivalent to {
/ * ( non - javadoc )
returns the field name for the target object .
returns the value of the field with the value of the specified { @code <unk> } .
coerces an object to a value
/ * ( non - javadoc )
gets the value of a property .
set the value of a property .
gets all fields from map .
gets the value of a property .
gets the value of a property .
returns the value of the specified object in the given object .
sets the value of the given property to the given value .
adds a value to a bean .
get the value of a property .
gets the value of a property .
set the value of a property .
gets the value of an object in the given object .
convert a path to a string
set the value of a property .
gets the value of a property .
gets the value of a property .
get the current context .
returns a deep copy of a property field .
<p > <unk> . < / p >
/ * ( non - javadoc )
logs a message with the given key and arguments .
create a message with a subject and subject .
this method is used to get the keys of the object .
get the current subject .
parses text from the given text .
sends a http request to the client .
adds a new database to the database .
creates a new resource in the database .
gets the document in the database .
returns a list of uuids for the given number of uuids .
/ * private void <unk> ( <unk> <unk> ) { if ( <unk> ! = null ) { <unk> = new <unk> > () ;
converts the given { @link jsonobject } element to a { @link object } .
scans the classpath for regular files .
triggers a replication operation .
create a json object from a json document .
/ * ( non - javadoc )
finds all documents in the replicator database .
performs a query and returns a view of the specified class .
queries a query and returns the results as a list .
query a query
this method is used to get the maximum view of the view .
/ * ( non - javadoc )
performs a http put call with the specified document id .
/ * ( non - javadoc )
gets a design document from the database .
creates a list of designdocument objects from the given directory .
transforms a { @link <unk> } to a { @link designdocument } .
removes the documents from the replicator database .
removes a document from the replicator database .
finds all documents in the replicator database .
removes a document from the replicator database .
finds a document in the database .
finds a document in the database .
removes a document from the database .
finds all documents in the replicator database .
checks if a document exists in the database .
send a document in the database .
send a document in the database .
removes a document from the database .
bulk api api .
saves a document to a document in the database .
saves a document to a document in the database .
invokes a document update handler .
execute an http request .
/ * ( non - javadoc )
gets the response .
get an object from the database .
performs a http put request .
uploads the given content to the server .
generate a post request .
executes a delete request .
validates the response .
sets the entity .
deserializes the {
adds an attachment to the database .
changes the changes feed to the database .
gets changes to the database .
reads the next row from the table .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last : <unk>
gen - last : <unk>
gen - last : <unk>
gen - last : <unk>
gen - last : <unk>
gen - last : <unk>
gen - last : <unk>
sets up the currently selected values .
#func <unk> >
calculates the percentage of percent .
returns a string representation of this function as a string .
************************************************************************* this method is *************************************************************************
release the lock .
creates a new { @link observable } .
publishes an observable to a topic .
add metric tags to the visiblefortesting
creates a transition to the temporary tables .
returns the metric metric name for the given name .
/ * ------------------------------------------------------------
sends a request to the server .
---------- oo - verbs
create a put http put request .
try to ping the request and update the connection .
close the connection .
initializes the client - side statement with the given { @link <unk> } .
/ * ( non - javadoc )
returns the scheduled job details for the given slice .
returns a list of { @code <unk> } objects containing the results of applying the given { @code <unk> } .
schedule a job .
evaluate a regular expression pattern
waits for a channel to be <unk>
/ * ( non - javadoc )
/ * [ deutsch ] <p > interpretiert den angegebenen string als intervall . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
creates a list of buckets from the specified range .
create a new random {
send a message to the server .
/ * ( non - javadoc )
send a message to the kafka listen .
scan the given query string and return a list of { @link scan } s .
return true if the given text matches the pattern specified by the given pattern .
/ * ( non - javadoc )
/ * ( non - javadoc )
set the value of a property .
adds a file entry to the zip archive .
unpacks a file to a file .
creates a new zip file .
generates a new {
disassemble the given iterator into a <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
validates the content of a uri .
fetch order content .
{ @inheritdoc }
generate generation of file generation metrics .
creates a temporary directory with the given base directory .
<p > ends . < / p >
renders a group .
/ * dereference
registers a new instance of the instance .
render the template .
/ * ( non - javadoc )
/ * ( non - javadoc )
add { @link org . apache . hadoop . configuration . <unk> } to { @link org . apache . { @link org . apache . hadoop . configuration . <unk> } .
returns a { @link timeofday } instance representing the given { @link date } .
convert a date to a date .
create a non - duplicate file from the given directory .
calls { @link <unk> ( javax . lang . function ) } which must be used with { @link <unk> () } and { @link <unk> ( method ) } .
compute the factory for a specific key - value pair .
compute the {
compute the for for for for for for for for for for for internal use .
compute the {
compute the {
compute the for for a specific index .
compute the for for a specific index .
compute the {
compute the factory that will be used to compute the for for a specific function .
compute the {
generates a {
compute the factory that will be used to compute the for a specific key - value pair .
copies the contents of the given { @link inputstream } to the given { @link outputstream } .
creates a new { @link org . w3c . dom . document } .
parses the given file into a { @link document } .
parses the given { @link inputstream } into a { @link document } .
returns a stream of all elements in this { @code element } .
returns a stream of the elements of the given element .
get the first child element with the given name .
<unk> > <unk> > <unk>
validates an xml document .
convenience method to replay the application using the given configurer .
this method will connect to an kanbanery <strong > <unk> / strong > <strong > note : < / strong > this method should only be called once .
{ @inheritdoc }
create a { @link inputstream } from a file .
the main method .
encrypt the content of the <code > key< / code > with the <code > content - type< / code > header .
method to read a resource from the stream .
extracts a list of entities from a zip file .
encodes the given string into a url - encoded string .
signs the given http request and returns the signature as a string .
<unk> <unk> <unk>
creates a <unk> request signature for the given request method and request parameters .
对于私钥是非常保密的信息，强烈建议将私钥存储在服务端。 开发者首先调用getstringforsign获取待签名字符串，然后将待签名字符串发送到服务器，由开发者服务端对待签名字符串进行签名。 签名方法可以参考rsasign方法的实现。
encodes the given string into a signature string .
get the method mappings for download request .
sets the signature for the given access key .
encodes a byte array into a base64 encoded string .
decode a base64 encoded string .
/ * ------------------------------------------------- [ misc ] ---------------------------------------------------
checks if the given file is a file or directory .
uploads a file to a file .
upload a file to the bucket .
sends a cors request to the cors manager .
record a file
<unk> method .
post - <unk>
observes wifi signal plugin
returns a list of all security roles that have been added to the portlet role
/ * package private
returns a { @link comparator } for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package private
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
refreshes and categorize entries in a list .
gets the list of notifications for a given page .
/ * ( non - javadoc )
handles request for saving / updating account
gets the class information for a given class
time sensitive apis
gets a workflow instance .
gets the list of events for a given class
update an order status
deletes a notification .
gets the canonical url for the given url .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
parses the bearer token from the request .
init fxml when loaded .
set layout context path .
/ * ( non - javadoc )
set the {
this method is used to convert an authentication token into an authentication token .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * implementation of <unk>
filter by category .
{ @inheritdoc }
returns a list of categories for the given list of alert categories .
<p > clones this object and returns a copy of this object . < / p >
/ * ( non - javadoc )
unmarshals the {
sends a { @link <unk> } to a { @link <unk> } .
/ * ( non - javadoc )
read a notification entry .
/ * ( non - javadoc )
this method is used to create a valid url for the given link .
returns the { @link <unk> } for the given portlet request .
/ * ( non - javadoc )
generates the web authentication uri for the given request .
returns a ==========================================================================================================================
/ * package
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * implementation
/ * implementation of <unk>
/ * ( non - javadoc )
get the principal id of the portlet authenticated by the user .
extracts the user id from the <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a map of all custom attributes .
extracts the column from the camera matrix .
check if the given point is contained in the given boundaries
returns true if the line is <unk>
finds the closest point that is closest to the given point .
compute the sign of the point as a point .
sets the tune s transform .
wrapper for { @link <unk> ( <unk> ) }
sets the values of this matrix to the specified values .
converts a 3x4 camera matrix into a point3d object .
converts a point in homogeneous coordinates into a 3x4 coordinate .
converts a rotation matrix into an essential matrix .
<p > trifocal tensor with point - line - encoded coordinates . < / p >
converts a gray scale input image into an output image
rotates the image 90 degrees in the image
converts a { @link dmatrix } to a { @link <unk> }
<p > converts a rectangular region into a <unk> image . < / p >
sets the location of the tracker .
draws a polygon in the polygon
transfers a point from the first line to a point .
todo : move to <unk>
computes the average of the pixels in the image
<p > checks to see if a matrix is lower triangular or hessenberg . a hessenberg matrix of degree n has the following property : <br > <br > a<sub > ij< / sub > < / p >
<p > checks to see if each element in the two matrices are equivalent to the same distance . < / p >
flip the values in the array .
<p > sets every element in the matrix to the specified value . <br > <br > a<sub > ij< / sub > = value <p >
<p > sets every element in the matrix to the specified value . < / p >
calculates the convex hull of a list of points .
draws a polygon
removes the corner duplicates from the polygon
<p > checks to see if each element in the polygon is identical to another tolerance . < / p >
returns the average error of the point that is closest to the closest point in target .
converts a { @link dmatrixrmaj } into a { @link <unk> }
<p > converts a translation into a { @link dmatrixrmaj } . < / p >
<p > computes the greatest common divisor . < / p >
fit the polygon
returns the point on the point on the line .
returns true if the polygon contains a convex polygon
returns true if the polygon contains a polygon
checks if the quad contains the given <unk>
checks to see if a point is inside a triangle .
finds the intersection point between two points .
finds the intersection point between two points .
returns the intersection point between two lines .
<p > trifocal tensor with point - line - line correspondence : < / p >
<p > computes the intersection of two sides of a point between two points . < / p >
returns the intersection point between two lines .
returns the intersection of a polygon
returns true if the specified point is inside the bounds of the line
returns true if the line is a line
returns true if the edge is inside the ellipse .
returns true if the line is intersect
estimates the intersection of two lines .
sets the location of a tracker .
computes the intersection of two ellipses
converts a calibration matrix into a rotation matrix .
computes the <unk> coordinate jacobian
converts euler angles to canonical coder .
set this quaternion to a rotation
converts a quaternion to a rotation
performs quaternion conversion of quaternion q1 .
converts euler angles to canonical state .
returns the raw string at the given index .
apply a rotation to a rotation matrix with the given { @link <unk> } and store the result in <code > dest< / code > . <p > when used with a right - handed coordinate system the produced rotation will rotate a vector and store the result in <code > dest< / code > . <p > if <code > m< / code
converts a rotation matrix into a <unk>
<p > computes the essential matrix for the camera frame . < / p >
set the x - axis vector
converts a rotation matrix into a rotation matrix .
converts a rotation matrix into a rotation matrix .
sets the y z component of the x y vector to the rotation vector .
converts the camera matrix into a matrix .
initialize a rotation matrix .
<p > computes the rectifying homography for a camera matrix using the rectifying homography algorithm . the rectifying homography is computed using the rectifying homography algorithm . < / p >
set <code > this< / code > matrix to <code > t * r * m< / code > where <code > t< / code > is a translation by the given <code > ( tx ty tz ) < / code > and <code > r< / code > is a rotation - and possibly scaling - transformation specified by the given quaternion
sets the angle of this vector to the specified angle .
returns the point on the point on the line .
<p > computes the homography matrix given a set of observed points in a translation . < / p >
<p > <unk> . < / p >
degree of <unk>
<p > <unk> . < / p >
sets the histogram s translation
computes the histogram between the two provided observations .
enforce the label
<p > extract the camera matrices from the two matrices . < / p >
converts a list of { @link point } s into a 2d normalized 2d normalized 2d fiducial .
<p > computes the standard deviation of a list of points in a 3d plane . < / p >
computes the null space of the given point
returns the index of the side .
finds the intersection of the two lines
finds the first line in the line that is closest to the specified location .
converts a list of candidate points to a list of polygons .
converts the given list to an array of <unk> .
converts a trifocal tensor into a { @link dmatrixrmaj } .
<p > converts an array of doubles into a constraint . < / p >
convert a <unk> into a { @link <unk> }
c = h * dst [ src ] .
converts a { @link <unk> } to a { @link <unk> } .
<p > converts h into h . < / p >
shortcut for {
<p > creates a trifocal tensor that is the cross product . < / p >
<p > trifocal tensor with <i > <unk> / i > is the point <i > <unk> / i > . < / p >
gets the cross product of three components .
<p > extracts the cross product of the two camera matrices . < / p >
add a column to the camera matrix .
note : ( m1 + m2 ) never
<p > adds a <unk> to the end of the camera matrix . < / p >
extracts the sub - view of the form a b = c * a * b
apply a rotation around the z - axis
rotate distance between the real and z axis .
creates a gaussian kernel t .
solve a * m - d by d .
<p > computes the matrix multiplication for a point - wise multiplication . < / p >
splits the matrix into a 3x3 matrix .
calculate the bounding rectangle for a point .
<p > computes the inner <unk> of the inner view of the inner matrix . < / p >
<p > trifocal tensor with the same point in the plane . < / p >
<p > trifocal tensor with point - point : < / p >
<p > computes the inner product of the two matrices . < / p >
inserts the given column into the camera s projection
extracts the quotient of the two camera coordinates .
/ * ( non - javadoc )
<p > removes the real part of the input matrix . < / p >
convert a feature into a scene object .
computes the <unk> coordinate jacobian
returns the signed angle of the given angle .
returns the offsets of the image for the specified amount of image .
convert the specified amount of radians to the specified coordinates .
returns the angle of a given angle in radians
returns the angle between the specified angle and direction
calculates the rotation of the given radians about the specified amount of radians about the specified <code > ( x y z ) < / code > axis . <p > the axis described in <code > <unk> / code > is the rotation origin . <p > if <code > <unk> / code > is <code > this< / code > <code >
calculates the equirectangular of the given amount of radians about the specified <code > ( x y z ) < / code > axis . <p > when used with a right - handed coordinate system the produced rotation will rotate a <code > <unk> / code > and store the result in <code > dest< / code > . < / p
convert a 4 - d 4 - d 4 - d 4 - d rotation to the specified <code > ( x y ) < / code > . <p > the axis described by the three components needs to be a unit vector . <p > the axis described by the three components needs to be a unit vector . <p > the
convert a 4 - dimensional 4 - d 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
computes the difference between two points .
/ * [ deutsch ] <p > returns the absolute value of the difference between two points . < / p >
calculates the distance between two points .
/ * ( non - javadoc )
test whether the two lines are intersects the plane .
determine whether two lines are intersecting the plane .
determine whether two lines are intersect
<p > computes the intersection of two points using the specified homography . < / p >
$antlr start of two points
<p > computes the intersection of two points using the specified homography . < / p >
computes the approximation of the intersection of a polygon
/ * ( non - javadoc )
returns true if the bounding box is contained within the bounding box
check if a point is within the box
returns true if the line is intersects the line
computes the color between a reference to a polygon
<p > given a { @link matrix } extracts the equivalent quaternion from q by the given q . < / p >
computes the convex hull of a polygon
check if the point is outside the image border
sets the covariance for the given matrix .
<p > sets the solution to the original motion matrix . < / p >
sets the affine transform for the given matrix
<p > converts a translation into a <unk> matrix . < / p >
<p > converts a calibration matrix into a calibrated camera matrix . < / p >
<p > creates a trifocal tensor of the plane . < / p >
<p > converts a homography matrix to a refined matrix . < / p >
replies the distance between two points .
******************** private methods ***********************************
<p > checks to see if two observations of a camera are identical to the same translation . < / p >
<p > returns a { @code true } if the matrix is known to be projective or false . < / p >
gets the distance between two points .
returns the euclidean distance between two points .
convert a { @link <unk> } to a { @link vector } .
returns true if the given point is within the center of the circle
compute the arc sine of a point .
compute the circle of a circle .
creates a point equation
computes the cubic equation
finds the point on which the line is closest to the line segment .
returns the closest point from the camera line to the point <code > <unk> / code > .
computes the point on the plane on the plane on the plane .
<p > determine whether a point is <code > ( x y ) < / code > and <code > ( x y ) < / code > intersects the plane . < / p >
determine the point on the plane on the plane .
writes a point to a point .
creates a point out of the passed in line
<p > trifocal tensor with point { @code c } <sup > t< / sup > < / p >
computes the length of a point in the plane .
converts a <unk> into a <unk>
computes the average distance between the two points .
converts a list of 2d pixel coordinates into 2d pixel coordinates .
transforms a 2d array of points into a set of points .
transforms a list of { @link point } s into a list of { @link point } s .
converts a camera into a coordinate system .
determine the scale of the scene associated with the same <unk>
<p > given two observations of the same point which has been transformed using the { @link <unk> } method . < / p >
converts a list of objects to a list of { @link <unk> } objects .
sets the value of the given list of points .
<p > checks to see if a matrix is upper triangular or equal to another hessenberg matrix . < / p >
cubic function for cubic roots .
returns the approximate difference between two points .
converts a line descriptor into a servlet .
converts a line descriptor into a line .
converts a trifocal tensor into a linestring .
converts a line and its points into a servlet .
calculates the distance between two line segments .
<p > trifocal tensor with point - line - line correspondence : < / p >
<p > trifocal tensor with point - point - line correspondence : <br > [ p2 ] <sub > x< / sub > = <unk> > <unk> > i< / sub > <unk> > i< / sub > <unk> > i< / sub > <unk> > i< / sub > <unk> > i< / sub >
converts a line <unk> into a line using the <unk> .
converts a line - line segment into a line .
converts a { @link linestring } to a { @link <unk> } .
<p > computes the inner product of the plane . < / p >
<p > computes the inner product of the plane . < / p >
<p > converts a <unk> image into a <unk> image . < / p >
converts a translation into a plane based on the plane .
computes the energy of the plane .
computes the distance between the plane and the plane .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
computes the observations from the plane on the plane on the plane .
<p > checks to see if a matrix is identical to the tolerance . < / p >
returns a copy of this matrix .
returns the average of the euclidean length .
converts a { @link linestring } to a { @link linestring } .
replies if the line is intersecting . <p >
returns true if the triangular matrix is nan and false otherwise .
<p > checks to see if each element in the two matrices are equivalent to <i > <unk> / i > . < / p >
computes the average distance between the two points in polar form .
calculates the area of this polygon .
returns the center of the given point
computes the angle between two ellipses
estimates the 2d motion estimation for a list of points .
takes a list of points and converts it into a { @link <unk> } .
<p > checks to see if a matrix is symmetric and false otherwise . < / p >
generates a random observations of the given point .
converts a point in homogeneous coordinates into a 3x4 coordinate format .
computes the affine transform from the given image .
computes the affine transform from an image .
computes the angle of the difference between two vectors .
<p > computes the inner product of the two vectors . <br > <br > a = b < / p >
compute the arc sine of a number .
bounds the image in the image .
gets the x - and - z - coordinate of a - b - coordinate system .
computes the dot product of this vector with the vector v1 .
<p > connects to the ellipses in the ellipse . < / p >
convert the edge to ellipse
computes the distance between the two ellipses
processes the edge along the ellipse and determines the coordinate of the ellipse .
<p > computes the edge point along the ellipse and determines if the edge is inside the ellipse . < / p >
computes the angle of the edge along the ellipse .
processes the edge of the ellipse and determines if it requires an edge
computes the intersection of the two ellipses
computes the intersection of two ellipses
refines the ellipses in the ellipse .
computes the intersection of two ellipses
finds the intersection of the two edges .
clean the points in the specified area .
returns the squared euclidean distance between two views
converts a projective camera matrix into a metric using the rectifying homography algorithm .
sets the color of the corner of the corner .
creates a homography out of the rectangular region in the plane
calculates the distance between two points .
returns the euclidean distance between the two points .
returns the distance between the plane and the plane .
calculates the euclidean distance between the given point and the given point .
calculates the width of the line .
calculates the euclidean distance between two points .
sets the point on the line
returns the point on the line that is closest to the specified point <code > ( px py pz ) < / code > .
returns the euclidean distance between two points .
returns the euclidean distance between two points .
returns the euclidean distance squared between two points .
returns the euclidean distance between two line segments .
returns the euclidean distance between two points .
returns the euclidean distance between the line and a line .
computes the euclidean distance between two line segments .
distance squared away from line segments .
calculates the euclidean distance between two points .
computes the euclidean distance between the two points .
finds the euclidean distance between the two points .
returns the euclidean distance between the two points .
calculates the distance between two points .
calculates the distance between two points .
assigns the euclidean distance between the two points .
computes the euclidean distance between the two ellipses
computes the euclidean distance between the two ellipses
/ * ( non - javadoc )
transfers the point from the first line to the contour .
searches for a point in line segments .
assigns a line to a line segment .
returns the closest point to the point in the matrix .
computes the closest point inside the line using the specified line .
computes the homography induced from a planar image
performs a linear scan over the polynomial .
<p > computes the elimination of c : <br > <br > b<sub > ij< / sub > = a<sub > ji< / sub > < / p >
creates a random 2d kernel drawn from a uniform distribution .
<p > computes the inner product of the two vectors . < / p >
<p > checks to see if the two matrices are identical to the tolerance . < / p >
<p > normalized . < / p >
creates a new matrix that stores the columns in the matrix .
converts a matrix into a 3x3 matrix .
bessel function of the second camera .
extracts the column from the camera matrix .
<p > trifocal tensor with the point <code > <unk> / code > and <code > <unk> / code > . < / p >
/ * ( non - javadoc )
computes whether the two segments are intersecting .
computes the intersection of two geometries
returns true if the polygon is convex .
returns true if the polygon contains <unk>
view distance between two points .
returns true if the specified point is inside the bounds of a line
create a <unk> instance .
/ * ( non - javadoc )
connects to the ellipses
processes the edge of the ellipse and determines if it is the responsibility of the edge
/ * ( non - javadoc )
<p > computes the null space of the two camera matrices . < / p >
determine the winding of three points .
replies the x - axis of the given sphere .
simple estimate of the polygon
<p > convenient function for { @link <unk> } . < / p >
<p > computes the center of the point in the range . < / p >
<p > trifocal tensor with point - point - line correspondence : <br > [ 0 1 ] <sub > x< / sub > = 0 < / p >
estimates the geometric bounding box of the image .
compute the bounding box of a list of points .
compute the center of the circle .
computes the center of the box around the given points .
<p > generates a list of points between two points using a distribution between the two points . < / p >
sets the values of this { @code <unk> } to the specified value .
/ * ( non - javadoc )
/ * ( non - javadoc )
ensures that the points inside the image are inside the image .
creates a bounding box found in the bounding box
checks to see if a polygon touches a polygon
flip the values in the array .
returns true if the polygon is convex or not .
computes the euclidean distance squared between two views .
returns true if the two matrices are equal .
<p > checks to see if each element in the two matrices are equal to the same line . < / p >
converts a list of { @link point } s into a { @link list } of { @link point } s .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
determine the jacobian given a matrix .
computes the polynomial decomposition of the given data matrix .
computes the jacobian formula .
fits the specified data in a line .
returns the distance between two points .
returns the squared euclidean distance between two points .
/ * ( non - javadoc )
generates a random hit of the specified { @link point } .
adds a random observations to a list of observations .
<p > computes the mean normalization of the two points . the points are assumed to be in the same order . < / p >
<p > computes the standard deviation of a list of points in a 3d - form - coordinate system . < / p >
get the bounding box of the given points .
invalidate all properties for the given credentials .
discards any organization that satisfies the given predicate .
splits the given collection of strings into a set of strings .
get server features .
/ * helper
/ * ( non - javadoc )
parse a set of include files
creates a new set of rows from the given document .
download product sources
download the pom to the given <unk> .
returns true if the generated feature is not null
returns the list of liberty features for the given file .
checks if the server is currently open .
returns <tt > true< / tt > if the specified collection contains the specified target collection ignoring case considerations .
/ * ( non - javadoc )
resolves a bundle descriptor .
returns the base version of the next step .
add all the symbolic names to the manifest .
this method is used to clean up the location of the jar files in the given directory .
returns <code > true< / code > if the first version of the file is replacement .
extracts the suffix from the file name .
compares two version parameters .
validate product info .
initialize the analyzer .
check if the jar file is a jar file .
<p > sets the properties of the tag . < / p >
/ * ( non - javadoc )
checks if the given file is a working directory .
creates a new { @link <unk> } with the given title and message .
shows a { @link crouton } with the given title and caption .
/ * ( non - javadoc )
<editor - fold defaultstate = collapsed desc = visualization >
refines the shape of the given { @link <unk> } .
creates a new instance of the multi - class jmol system .
check if the qname is accepted by this qname .
creates a qr - code that encodes the length of the specified length .
converts the current angle into the angle of the node .
/ * private void <unk> () {
returns true if both s1 and s2 are null
writes a dot file to a file .
returns the integer value for the given name or { @code defaultvalue } if the string does not exist .
returns a random integer between min and max values .
/ * ( non - javadoc )
checks if there are any artwork in the <unk> .
determines whether the given { @link file } is accepted by the given { @link file } .
initialize color palette .
init fxml when loaded .
/ * ( non - javadoc )
/ * ( non - javadoc )
convenience method for { @link <unk> ( int ) } .
returns the entropy of the given distance .
<p > set the { @link <unk> } associated with this instance . < / p >
creates a sound instance from the audio stream .
prints a formatted string to system . out .
writes a formatted string to stdout and stderr .
the main method .
computes the icon for the given image number .
draws a line between two points .
compute the size of a pixel using the supplied { @link java . util . image . <unk> } .
/ * <unk>
draws the circle with the specified radius and radius .
draws an ellipse .
returns the root of this linesegment .
calculate the square of a square .
calculate the bounding box of a rectangle .
create a flow polygon from a vector y [ x y ] .
draws the image at the specified coordinates .
shows an image at a given location .
给图片添加文字水印<br > 此方法并不关闭流
draw a text at the specified location .
save a file to a file
add a variable to the console .
private static void <unk> () {
initialize the base colors .
draws the inner {
checks to see if there is at least one edge .
calculates the right state of the repository .
/ * <unk>
converts a trajectory from a <unk> to radians .
adds an expression .
initialize color palette .
******************** private methods ***********************************
turn <unk> into ss glyph .
sets the horizontal speed of the edge .
returns a {
draw a bitmap of the specified length
override paint to paint the document .
scalarization distance between two normalized histograms .
set the volume label stored in this buffer .
returns a uniform distribution from a uniform distribution .
returns the uniform distribution from uniform distribution
returns the geometric output of the { @code double } { @code double } value .
returns <i > <unk> / i > <sup > t< / sup > ( lambda ) <sup > t< / sup > < / p >
<p > splits a double array into an integer list . < / p >
the main method .
hashes file content .
serialize a uri to a byte array .
<unk> > <unk>
<unk> > <unk>
create a user in the db .
updates a namespace .
updates a namespace .
creates a new { @link predicate } for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of all selected candidates .
/ * <unk>
/ * ( non - javadoc )
returns the object with the given id .
/ * --- private methods ---
/ * ( non - javadoc )
returns the oauth history record for the given job .
updates a chart .
resume the <code > <unk> / code > with the <code > <unk> / code > .
join join criteria
/ * ( non - javadoc )
apply the streaming streaming request .
extract the cookies from a cookie list .
register all the classes in the injector .
authenticates a user .
authenticates a user by username and password .
authenticates a user using the provided credentials .
returns the status of the user by username .
authenticate a token .
/ * private void <unk> ( <unk> > <unk> ) { if ( role ! = null ) { <unk> = new <unk> ( <unk> ) ; }
insert the given search parameter in the database .
get the details of an entity .
/ * ( non - javadoc )
installs a list of triggers .
gets the history of a job .
resume the <code > <unk> / code > and <code > <unk> / code > .
/ * ( non - javadoc )
adds a projection that allows the criteria to return a projection that allows the criteria to return a projection that allows the criteria to return a projection that allows the criteria to return a projection that allows the criteria to return an alias
get the <unk> for the given user .
forwards to the menu .
/ * ( non - javadoc )
schedule the given <code > { @link trigger } < / code > with the given <code > { @link org . quartz . trigger } < / code > .
sets the values of this trigger to the given trigger builder .
sets the start time for the given trigger .
call this method to delete an mail from the mail .
/ * ( non - javadoc )
{ @inheritdoc }
initializes the scheduler .
gets the list of { @link file } s .
<p > <unk> . < / p >
creates a new { @link bootstrap } for the given { @link bootstrap } .
the main method of the { @link <unk> } method .
get the permissions for a role .
create a role / role relationship .
generate a service .
/ * package
/ * ( non - javadoc )
sets the { @link <unk> } of the { @link <unk> } .
get the hash value for the given attributes .
generates a query string for the given challenge .
sends the given { @link <unk> } to the given { @link <unk> } .
/ * ( non - javadoc )
creates a buffered writer for the given prefix and password .
/ * ( non - javadoc )
resets the password of the given user to the given user .
creates a { @link value } from an { @link optional } .
hashes the password against the given password .
sets the prefix of the account prefix .
verifies that the password strength is valid .
{ @inheritdoc }
creates a md5 hash of the given id .
loads the bytes from the file .
returns the value of the asset with the specified key .
/ * ( non - javadoc )
provide the search model .
{ @inheritdoc }
create a { @link <unk> } for the given packages .
finds and executes the {
/ * ( non - javadoc )
creates a new lyra managed configurableconnection for the given { @code <unk> } and { @code <unk> } .
registers a new session .
/ * ( non - javadoc )
returns the current active transaction .
returns the current { @link <unk> } if the current transaction is not { @link <unk> } .
stops the session .
closes the container .
get the sub menu .
create a list of { @link permission } objects with the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
check if a solution is valid .
create a {
registers the javamelody {
/ * ( non - javadoc )
creates an internal { @link <unk> } instance .
creates a { @code this . equals ( property ) } expression
create a new restriction
create a less than or equal to expression
creates a less than or equal to the less than or equal to the given value .
create a greater than or equal to value
create a restriction from the given property name and value .
create a new restriction with the given property name and value .
create a new restriction with the given property name and value .
adds a namespace to the manager .
return a representation of this representation with the given content .
returns a copy of this { @link <unk> } for this { @link <unk> } .
add a link to this representation .
set the { @link link } s with the given link - relation type .
<p > <unk> . < / p >
/ * ( non - javadoc )
returns a { @link link } pointing to the given { @link link } s .
turns this { @link <unk> } into a { @link <unk> } .
returns a copy of this link representation of the given namespace .
returns an immutable map instance containing the given map .
get the root cause of a { @link throwable } .
returns a throwable with a throwable throwable .
returns the stack trace of the given throwable .
returns the stack trace of the given throwable .
propagates { @code throwable } to { @link runtimeexception } .
/ * ( non - javadoc )
deserialize a serialized object .
returns <code > len< / code > characters from the given <code > string< / code > starting at <code > offset < / code > starting at offset <code > off< / code > .
encodes a byte array into base64 notation .
encode a string into a byte array .
<p > gets the substring of a substring of the given string . < / p >
writes a big - endian 4 - byte integer to the given byte array .
writes a big - endian 4 - byte integer to the given byte array at the given offset .
read an int from a byte array .
read a long from the given byte array starting at the given offset .
copy the contents of the given input stream to the output stream .
copy the contents of the given string to the given output stream .
copy the contents of the given string to the given output stream .
<unk> > <unk> > <unk> / p >
compares the contents of the given reader and returns true if it is equal to the length of the input reader .
copy the contents of the given reader to a string .
build a new calendar from an input stream .
read the content of the inputstream as a string .
read a list of lines from a reader .
read lines from the given stream .
read lines list .
implementation of <unk>
implementation of pbkdf2 ( <unk> ) .
implementation of pbkdf2 ( <unk> ) .
implementation of <unk> .
copies the contents of the given { @link file } to the destination directory . if the destination file does not exist an { @link ioexception } is thrown .
copies the contents of the given { @link file } to the given { @link outputstream } .
copies the contents of the given input stream to the destination file .
copy the given source file to the given destination file .
recursively delete the given file .
set the last modified timestamp to the last modified time .
<unk> method .
reads a file from the given file .
check if two files are equal
returns the file name for the given file .
creates a new { @link <unk> } .
reads the contents of a file into a byte array .
parse the given string into a { @link <unk> } object .
creates a new media type with the given type and subtype .
return the charset for this charset .
/ * ( non - javadoc )
returns a copy of this media type with the given parameters .
returns a new media type with the given quality value removed .
returns a copy of this media type without any parameters removed .
returns true if the media type specified by this media type is supported by this media type range .
combines multiple iterables into a single stream . the returned stream is closed if the provided iterables are closed .
returns a new {
/ * package
returns { @code true } if the two { @link iterable } s are equal .
creates a { @link <unk> } from the given { @code iterable } .
returns a deferred drop iterable for the given iterable .
returns a list containing all of the elements in the iterable .
creates a <i > mutable< / i > { @code set } from { @code iterable } .
create a new collection composed of the distinct elements of the given collection .
add padding to the buffer .
creates a <i > mutable< / i > { @code list } instance containing the given { @code collection } .
returns an immutable copy of the specified collection .
returns an immutable multiset containing the union of the given elements .
returns an unmodifiable view of the specified elements .
returns a list containing the values of the specified array .
returns a stream for the head of the given file as a stream .
returns a list of formulas from the given file .
<p > <unk> . < / p >
<unk> > <unk>
<p > <unk> . < / p >
creates a buffered reader for this file .
creates a buffered writer for a file .
create a buffered writer for a file using the specified character encoding .
<unk> > <unk>
read lines from the file .
creates a urn from the given string .
try to find a resource with the given name .
load a class from a class .
copies the contents of the given { @link outputstream } to the given { @link outputstream } .
writes the contents of the given { @link outputstream } to the given { @link outputstream } .
write the contents of this url to a byte array .
<unk> > <unk>
<unk> > <unk>
<p > checks if two calendar objects represent the same instant . < / p >
<unk> <unk> .
<p > checks if two calendar objects represent the same local time . < / p >
<unk> <unk> .
<unk> <p > <unk> / p >
determines whether the specified <unk> is the same day .
determines whether the specified <unk> is the same week with the specified <code > <unk> / code > .
<unk> <unk> .
determines whether the specified <unk> is the same month and the specified <unk> .
<unk> <unk> .
<p > determines whether the specified <unk> is the same day . < / p >
parse the given date value into a { @link date } .
/ * ( non - javadoc )
<p > <unk> . < / p >
converts a { @link date } to a { @link calendar } .
multiplexes an iterator of iterators into a single iterator . the returned iterator iterates across the elements of each iterator in { @code b } . the iteration order of the returned iterable is the concatenation of the source iterators .
multiplexes an iterator of iterators into a single iterator . the returned iterator iterates across the elements of the source iterator . e . g : <code > chain ( [ 1 2 ] [ 3 4 ] ) - > [ 1 2 3 4 ] < / code >
/ * documented <unk>
creates a { @link iterator } that iterates over the elements in the given array .
returns { @code true } if the two { @link iterable } s are equal .
creates a { @link com . merakianalytics . datapipelines . iterators . closeableiterator } that iterates over the elements in the given { @code iterator } .
similar to {
creates a <i > mutable< / i > { @code hashset } instance containing the given elements in unspecified order .
creates a <i > mutable< / i > { @code list } of the elements from the specified iterator . the elements returned by the iterator are reflected in the collection .
returns <code > true< / code > if the given <code > string< / code > is blank or not <code > null< / code > .
<p > abbreviates a string using ellipses . < / p > <p / > <p > if the specified length is <code > null< / code > then a new string is returned . < / p >
join an array of strings with the given separator .
calculate the damerau - levenshtein distance between two char arrays
produce a random string .
returns a string padded with the given number of times
<p > capitalizes a list of strings . < / p >
<p > strips whitespace from the start and end of a string . < / p >
returns a substring of the given string starting at the specified position .
<p > strips the right - hand side of a string in a string . < / p >
returns the number of spaces in the given string .
trim the right - hand side of the given string .
<p > pad the given string to the given <code > string< / code > . < / p >
<p > pad . < / p >
<p > <unk> . < / p >
unquote a string .
count the number of occurrences of a substring .
{ @link <unk> ( string ) }
covert file to uri .
returns the url for the given file .
returns the name of the given class .
returns the simple name of the given class .
returns the class name of the given class .
get the ancestors of the given class .
returns a list of all super classes that are common to the given classes .
verifies the password of the hashed password .
read the content of the file as a string .
adds a new byte to the buffer .
adds an array of bytes to the end of the array .
/ * ( non - javadoc )
merge the contents of arrays into an array .
creates a new array containing all of the elements in the specified array .
creates a copy of the given long array .
returns a copy of the given array .
creates a copy of the given array .
<p > returns an array containing all of the elements in the specified array . < / p >
returns a new array containing all of the elements in the specified array .
<p > rotates all the elements in the array . < / p >
returns a new array containing all of the elements in the specified array .
randomly shuffle the elements of an array .
creates a copy of the given array .
sorts the specified array and returns an array containing the elements in the specified array .
<p > converts an array of primitive doubles to primitives . < / p >
converts an array of doubles to a double array .
<p > converts an array of primitive shorts to primitives . < / p >
returns an array containing all of the elements in this dataset in proper sequence ( from first to last element ) .
converts a byte array to an array of bytes .
<p > converts an array of primitive booleans to primitives . < / p >
convert a float array to a double array .
convert a double array to a double array .
clone a long array .
returns a clone of the given array .
<p > converts an array of primitive shorts to objects . < / p >
<p > converts an array of primitive shorts to objects . < / p >
converts a byte array to an array of bytes .
<p > converts an array of primitive booleans to objects . < / p >
<p > converts an array of primitive doubles to objects . < / p >
<p > converts an array of primitive doubles to objects . < / p >
decode base64 encoded string .
<p > checks if the string is punctuation < / p >
checks if the string is numeric .
converts a string to title notation .
~ methoden ----------------------------------------------------------
encodes a sequence of bytes into a base64 - encoded string .
/ * ( non - javadoc )
encodes a byte array into base64 notation .
creates a rational number of the specified { @link integer } value .
reads a fraction from the given string .
compares this timestamp with the specified fraction .
<p > subtract the result of this fraction by the specified fraction . < / p >
<p > divide this fraction by another . < / p >
<p > divide this fraction by another fraction by the specified fraction . < / p >
/ * [ deutsch ] <p > <unk> . < / p >
<p > creates a <code > fraction< / code > instance to be applied to this component . < / p >
reduces this fraction by the denominator s numerator .
returns a new set containing the elements of the specified collection .
returns an unmodifiable view of the specified iterable . the returned set is a copy .
returns an unmodifiable view of the specified elements .
returns a set containing the elements of the given array .
returns a { @link set } containing the elements of the specified array .
parse a duration string .
obtains an instance of { @code money } from a { @code bigdecimal } . <p > this allows you to create an instance with a specific currency and amount . <p > this allows you to create an instance with a specific currency and amount .
obtains an instance of { @link duration } .
/ * [ deutsch ] <p > diff das angegebene dauer . < / p >
returns the maximum value of an array of values .
returns the minimum value in the array .
returns the <a href = http : // en . wikipedia . org / wiki / <unk> > arithmetic mean< / a > of { @code values } .
returns the <a href = http : // en . wikipedia . org / wiki / <unk> > arithmetic mean< / a > .
returns the absolute value of { @code a } and { @code b } .
returns the least common multiple of a { @code int } .
safely multiply two long values throw a { @link long } .
safely multiply two long values throw a { @link long } .
safely multiply multiple { @code long } arrays .
safely multiply two long values .
returns the { @code int } value of { @code a } and { @code b } as the result of { @code b } .
returns a { @code long } whose value is { @code a } and { @code b } .
returns the greatest common divisor of two { @code long } values . <p > this is equivalent to { @code <unk> () } .
returns the least common divisor of two { @code int } values . <p > this is equivalent to : { @code lcm ( a b ) } . <br > <b > note : < / b > this method does <i > not< / i > do not <i > not< / i > { @code lcm
returns the least common multiple of a { @code int } . <p > this is equivalent to : { @code lcm ( a b ) } and { @code lcm ( a b ) } and { @code lcm ( a b ) } . <br > <b > note : < / b > this method
safely convert a long to an int .
ensures that an object reference passed as a parameter to the calling method is not null .
throws an { @link illegalargumentexception } with the given message .
cast a object to a primitive type .
<unk> > illegalargumentexception< / code > 。
<p > negates the specified boolean . < / p >
returns true if the boolean value is true or false .
<p > <unk> . < / p >
returns a splitter that is on the given separator .
returns a splitter that behaves on the given { @code pattern } .
returns a splitter that behaves as a splitter for the current { @link <unk> } .
returns a splitter that behaves as follows : <pre > { @code <unk> > } < / pre >
returns a splitter that behaves as a splitter for the given suffix .
returns a splitter that ignores the empty { @link <unk> } and { @link <unk> } .
returns a splitter that replaces the empty strings with a new empty string .
splits a string into a list of strings .
creates a mutable { @link comparator } for the given { @link comparator } .
merges the given iterable sources from the given iterable sources . <p > the result s iterator () doesn t support remove () .
returns a comparator that reverses the order of the specified objects .
returns a { @code list } object containing the elements of the given iterable using the specified { @code comparator } .
returns a { @code comparator } that compares { @code o1 } with { @code o2 } .
returns a new { @link trimmed } instance that omits leading or trailing whitespace from the given { @link string } object .
returns a new { @link trimmed } instance that omits leading or trailing whitespace from the given { @link string } object .
returns a new { @link trimmed } instance that omits leading or trailing whitespace from the given { @link string } object .
returns a new { @link trimmed } instance that omits leading or trailing whitespace from the given { @link string } object .
returns a new { @link trimmed } instance that omits leading or trailing whitespace from the given { @link string } object .
returns a new { @link trimmed } instance that omits one or more items with the given separator .
join an array of strings with the given separator .
creates a md5 digest of the specified algorithm .
calculates the hmac - value for the algorithm .
creates a <i > mutable< / i > { @code arraylist } instance containing the given elements .
/ * documented <unk>
creates a <i > mutable< / i > { @code multiset } with the given elements . the returned multiset is a copy of the specified iterator . the returned multiset is a copy of the specified iterator .
creates a <i > mutable< / i > { @code immutablelist } from the given array of elements .
creates a <i > mutable< / i > { @code <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
read the body of the response
{ @inheritdoc }
builds a { @link <unk> } for the given { @link <unk> } .
unmarshals the given { @link <unk> } .
/ * ( non - javadoc )
load a resource .
checks if a resource is allowed to access the given resource .
<p > deletes a <code > <unk> / code > object . < / p >
{ @inheritdoc }
parse a token .
/ * ( non - javadoc )
unmarshals the given { @link <unk> } .
/ * ( non - javadoc )
unmarshalls the given { @link <unk> } into a { @link <unk> } .
{ @inheritdoc }
returns the generic type of the given { @code type } .
returns the default value for the given type .
unmarshalls the given { @link <unk> } into a { @link <unk> } .
unmarshals the given { @link <unk> } .
returns the content location of a point .
computes the sunrise for the given latitude and longitude .
returns a list of the history entries for the specified latitude and longitude .
run the <unk> algorithm
returns the <unk> for the given { @link <unk> } .
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link idtype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link idtype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link idtype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link idtype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link idtype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link idtype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link idtype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link idtype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link idtype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link idtype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
fetch query .
/ * ( non - javadoc )
/ * [ deutsch ] <p > extrahiert eine <unk> <unk> f&uuml ; r die angegebene <unk> . < / p >
return a geographypointvalue from the given parameter string .
fetch the content of the response .
create an instance of { @link jaxbelement } { @code < } { @link idtype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
return the header with the given <unk>
returns the { @link <unk> } corresponding to the given { @link <unk> } .
helper method to create a { @link uri } for the given uri .
returns true if the given date is a sun license .
<p > returns the example . < / p >
returns the <unk> for the given date .
returns the <unk> for the given date .
tbd expr idocumentquery<t > idocumentquerybase<t idocumentquery<t >> . <unk> ( expression<func<t tvalue >> propertyselector string latitude double longitude )
fetch data from docusign
get the file extensions .
generates a normalized path to the given file .
load view tags .
evaluates the given script and returns the result as a string .
invokes a method on the specified object using reflection .
<p > acquire . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
{ @inheritdoc }
checks if the given path exists .
{ @inheritdoc }
{ @inheritdoc }
authenticate internal configuration .
creates { @link <unk> } from configuration .
creates a { @link list } of { @link java . util . stream } objects for the specified { @link service } .
{ @inheritdoc }
shortcut for { @link <unk> ( class class ) } .
creates a new instance of { @link <unk> } .
uses the {
returns a list of all services that implement the specified interface .
return an instance of the <code > <unk> / code > that is implemented by the given <code > <unk> / code > .
<p > <unk> . < / p >
{ @inheritdoc }
creates a new { @code bytes } with the specified { @code string } .
returns the comment at the specified index .
gets the component with the given name .
/ * package
$antlr start <unk>
<unk> l <unk> .
computes the cold - length checksum of the given <unk> .
compute bilinear checksum .
returns a subset of the {
run a given string to --------------------------------------------
$antlr start <unk>
run a {
returns true if the given left relation ends with the given end .
handle the binary search algorithm .
/ * <unk>
tries to run a single clustering .
src / main / <unk> / <unk>
returns a new <unk> with the same type as the original .
returns the successor of the given string or null if it is null .
/ * ( non - javadoc )
returns the successor of the given entry .
/ * ( non - javadoc )
create an nfa from the given <unk> .
$antlr start <unk>
sets up the {
parses a {
computes the nfa condition for nfa nfa .
decodes the nfa and nfa states .
/ * --- private methods ---
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * <unk>
/ * this method is used to parse the tree
/ * package
/ * ( non - javadoc )
create a random dbobject
given a child with the given <unk> clause
/ * ------------------------------------------------------------
generate a substring of the given base64 character .
/ * package
compiles the given string into a regular expression .
executes the given { @link pattern } within the given { @link pattern } .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
gets the 1st component of the color .
<unk> afp <unk>
return the afp value of the <unk> .
/ * ( non - javadoc )
handle the case of the <unk>
flip the second component of this arc .
diagonal pivoting method .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
version&schema - specific filling into the impl
parses the command line options .
/ * <unk>
/ * ------------------------------------------------- [ <unk> ] ---------------------------------------------------
constructs the next character from the db .
write the given regex notes .
unescapes the character identified by v .
convert a string to a utf - 8 string .
retrieves the value of a codepoint from the given url .
sets the state of the drawable .
permutes a set of css states .
returns a {
returns the last seen port set .
returns true if the character is a unicode character set .
/ * package
runs a gbs tree .
nonsymmetric reduction to hessenberg form .
returns a string representation of this sketch .
resets the {
create a new state with the given flags .
/ * package
pushes completion to the given state .
updates the <unk> -----------------------------------------------------------------------------
called by the -----------------------------------------------------------------------------
reads all elements from this scanner .
copies the state of this buffer to the given state .
create an <unk> for this arc
/ * ( non - javadoc )
finds the <unk>
adds a collection of objects to the given state .
destroy the <unk> packet .
formats the time with the chosen depth .
send a string to a stringbuilder
/ * ------------------------------------------------------------
/ * package
/ * <unk>
closes the zookeeper version .
analyze the <unk> and return a new solution
$antlr start ws
src / main / resources / org / drools / code >
handle all the characters in the chain .
src / main / resources / org / drools / compiler / lang / drl5expressions .
sets the {
symbolic cleanup .
asserts that {
asserts that {
$antlr start <unk>
/ * ( non - javadoc )
gets the rule parameters from the properties file .
get rule set rule .
gets the report plugins .
/ * ( non - javadoc )
the main method .
parses command line arguments .
composes an error and returns a string containing the error message .
creates the options for the command line options .
builds the standard options .
merges the child options with the given options .
returns a string representation of the task names .
interprets a single command line .
parses command line arguments .
executes the task .
reads the recommendations from properties file .
prints the command line arguments .
gets the home directory of jenkins .
get the class loader for the current directory .
extract parameters from url .
writes the geometry to a geometry .
create a new instance of this polygon .
creates a set of { @link map } containing the invariants of the given bounding box i . e . the { @link <unk> } of the given bounding box .
creates a set of extent that intersects the given query .
returns the <unk> divergence .
route to route
reverse routing .
adds a new connection to the router
adds a new connection to the router
this method adds a route to the router .
removes the given path pattern .
removes the specified path from this router .
returns the end of the routing table .
this method adds a pattern to the routing table
this method adds a pattern to the routing table
this method adds a route to the router .
remove a path pattern .
removes the target item from this router .
check if any of the provided path tokens have any of the provided tokens .
/ * ( non - javadoc )
<unk> <unk> <unk>
/ * ( non - javadoc )
returns a list of files in the given directory .
~ methods **************************************************************************************************************************************
returns the child elements of this element .
compare args .
compare two entries .
compare two filters .
returns the preferences which are stored in preferences .
/ * ( non - javadoc )
reads a short description string .
set the last modified time for the last modified time .
==================== <unk> ====================
this method is used to convert the current value of type { @link <unk> } to a { @link <unk> } .
gets the value of the <unk> property .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------- [ misc ] ---------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
receive notification of the end of an element .
/ * ( non - javadoc )
receive notification of the start of a line .
receive notification of the start of the dtd and dtd declarations associated with it .
adds a prefix attribute .
/ * ( non - javadoc )
parse a standard action .
parse a custom action .
adds <unk> to the <unk> .
sprintf in <unk>
parse the content of the file .
this method gets called when a start tag is encountered .
/ * ------------------------------------------------------------
creates a secure saxparser parser .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
loads the class data from the given file .
wrap a {
wrap a { @link callable } into a { @link java . util . concurrent . callable } .
authenticate the request .
creates a new { @link <unk> } instance using the provided { @link <unk> } .
maps a java . lang . object class to a java . lang . object .
maps a java . lang . object class to a java . lang . object .
/ * ( non - javadoc )
reads data from the given byte array starting at the given offset .
append a string to the result .
/ * ( non - javadoc )
/ * ( non - javadoc )
parse the content of a zip file .
convenience method for parsing the nodes from a file .
<unk> <unk> <unk>
/ * parse the jar file and return the resulting node .
<p > <unk> . < / p >
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
<unk> <unk> <unk>
this is the main method of the <code > <unk> / code > method of the <code > jsp . <unk> / code > tag .
gets the encoding for the given content type .
/ * ( non - javadoc )
/ * <unk>
create a compiler .
/ * ( non - javadoc )
get the location of the specified uri .
increments the internal state of this tag .
this method will compile the content of the jasper exception into a <unk> .
==================== manipulating the class ====================
read a number of bytes .
reads characters into a portion of an array .
gets the last mod itinerary .
computed the stack size
check if the parent classloader is a parent classloader .
creates a {
converts the inputstream to a byte array .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a { @code <unk> } that iterates over all pages in the page given by { @code <unk> } .
/ * ( non - javadoc )
count the basename of a string .
builds the file and adds it to the file .
reads the fields from the data
gibt ein <unk> <unk> <unk> <unk> .
{ @link <unk> ( string ) }
replies the implicit translation for the specified path .
acquires a mac checksum from the given algorithm .
gets the size of the node .
validate simon name .
skips the specified number of bytes in the stream .
gets the encoder options .
gets the memory usage options for the specified options .
reads a number of bytes from the stream .
/ * ( non - javadoc )
seek to the specified position .
seeks to the index of the given block .
seek to the tail of the current block .
locates the block at the specified position .
/ * ( non - javadoc )
initializes the next block .
/ * ( non - javadoc )
generate the vim comments .
/ * ( non - javadoc )
checks if the artifact is a zip file .
convert a <unk> to a <unk> .
update stats and statistics .
/ * ( non - javadoc )
calculate the limit for the <unk> type
/ * compute the list of <unk> possible
/ * ( non - javadoc )
returns the number of bytes that can be read .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
read a character from the input stream .
throws an exception when an exception is thrown .
throws an exception for invalid byte array .
replies the location of the accent .
<unk> delegates .
scan the jsp config for tlds in web . xml
scans the jar file for the specified package .
scan all top - level annotations in the specified path .
create a class definition for the specified class and entry class .
read jars from an urlclassloader
/ * ( non - javadoc )
<p > compile . < / p >
returns the default { @link classloader } for the current thread .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
write a file to disk
apply the <unk> to the <unk> .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
start the thread .
stops the current thread .
/ * ( non - javadoc )
finds the first matching element by its unique key .
/ * package private
<unk> <unk> <unk>
update the cache for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
copies the contents of the given input stream to the given output stream .
copies all { @code readable } bytes from { @code from } to { @code appendable } .
parse and return nodes in a given directory
add a <code > attributes< / code > object to an <code > <unk> / code > .
parse an xml attributes
parse an attribute .
returns the name of the next token in the stream .
evaluate javascript source .
determines if the given string is quoted or not .
finds and merges the classes in the jar .
this method gets called when a start tag is encountered .
/ * parse directive include directive
/ * ------------------------------------------------- [ misc ] ---------------------------------------------------
generates the taglib directives for the tag .
parse the directive directive .
parse a directive directive .
this method gets called when a start tag is encountered .
parse a directive binding directive .
parse a variable directive .
parse and wait for a comment .
parse and wait for a declaration .
parse a script declaration .
run a parse expression
encode a label .
parse and wait for the container .
parse the start of a node .
parse the include and exclude declarations from the parent .
parse the forward result .
parse a get property .
parse a set property .
parse an empty html document and add it to the parent .
parse the use bean .
/ * parse the body of an html document and add it to the parent .
<unk> <unk> <unk>
try to parse the children of the parent node .
try to parse a node into a node .
parse a plugin definition .
checks an l command .
parse a standard action .
parse the tag .
/ * parse the next token from the input .
parses the next character in the stream .
parse the element and parse it out .
/ * parse two xml tags and parse them into a <unk> .
parse the elements of the element .
create a fully - rewritten tag uri .
extracts the content of a html tag .
parse the body of the body .
parse the body of a css tag .
parse the named attributes .
get the type of the given attribute .
returns the value of the named attribute in the named attribute or <code > null< / code > if there is no such attribute .
get a named namespace node .
returns all child nodes of the given parent node .
add parent node to parent node .
returns a list of { @link <unk> } instances for the given context classes .
sets the value of the specified attribute .
adds a child to the list of children .
/ * ( non - javadoc )
returns the names of all known attributes .
returns the node with the given name .
gets the number of nodes in the tree .
returns all siblings of the given parent node .
/ * ( non - javadoc )
returns the resource alias for the given alias .
/ * ( non - javadoc )
create a byte array from the input stream .
/ * ------------------------------------------------------------
<p > encode . < / p >
adds a header field to the writer .
appends an element to the parent element .
appends an element to the parent element .
get the child elements of the given element .
write a character to the output stream .
write a portion of an array of characters .
writes <code > len< / code > bytes from the specified <code > string< / code > starting at <code > off< / code > to this writer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
write a portion of the buffer .
map a <unk> to a <unk>
find the first parent node with the given key .
registers the { @link <unk> } for the given { @link <unk> } .
{ @inheritdoc }
schedule a job .
normalizes a file path
/ * ------------------------------------------------------------
<p > <unk> . < / p >
read a character from the stream .
/ * ( non - javadoc )
creates a {
get the {
/ * ( non - javadoc )
<p > resolve . < / p >
returns the value of the configuration attribute . if the value is null the default value is returned .
for each element in the two meta data this is the same as { @link <unk> ( map ) } .
write file .
returns the request bundle for the given request .
delegates to the <code > <unk> / code > method of the <code > <unk> / code > method of the <code > <unk> / code > method of the specified <code > string< / code > .
convert the value according the type of devicedata .
this method is called by the framework to get a value from an object .
this method is called by the <unk> () method of the bean defined by the <unk> () method .
/ * ------------------------------------------------------------
includes whether or not the response should include one or more values for the response .
this method will reuse the tag handler pool if available .
release the available tag handler .
check if the given resource is a check sum .
/ * ( non - javadoc )
initializes the data used by the {
converts the given { @link throwable } to a { @link runtimeexception } .
<p > <unk> . < / p >
/ * ( non - javadoc )
returns true if the given file is a xml file .
parse a maven tag file .
<unk> : <unk>
load the tag files .
returns the average threshold algorithm .
runs compilation .
set the path of the uri .
set the <unk> .
returns the children of the <unk> .
the main method .
copy the contents of a remote directory into a local directory .
gets the next argument value .
/ * ------------------------------------------------------------
load the configuration file .
initialize the system class loader .
removes all entries in the cache .
returns the index of the most most significant byte in the specified array .
parses the given expression using the given mapper mapper .
{ @inheritdoc }
<unk> <unk> <unk>
returns true if the <code > <unk> / code > of <code > <unk> / code > matches <code > <unk> / code > .
get the next character .
/ * package
/ * ( non - javadoc )
/ * package
/ * <unk>
compiles a source file .
unregister a source file .
transforms a file into a { @link com . <unk> . <unk> . <unk> . <unk> }
refines the <unk> of the current file .
make a new snapshot of the artifact .
creates a { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
/ * <unk>
sets the preset in this preset .
read dict .
/ * ( non - javadoc )
set the bars .
sets the mode mode .
sets the <unk> length of this <code > <unk> / code > .
set the preset <unk> .
/ * ( non - javadoc )
delegates to {
delegates to the { @link <unk> ( string object ... ) } method .
delegates to {
delegates to { @link <unk> ( string string string ) } .
/ * ( non - javadoc )
delegates to the <code > <unk> / code > method of the <code > <unk> / code > method .
executes the compilation .
/ * ( non - javadoc )
pass an error to the database .
parse an error message .
returns a sequential ordered { @code list } of { @link list } elements which match given predicate .
returns a list of all possible aspect ids .
sets the path prefix .
<unk> > <unk>
/ * ( non - javadoc )
parse the content of an xml document and return the result .
parse the options .
converts a dom node to a dom node .
use <unk> ()
creates a schema from the given schema .
create a binding from a map .
returns the error result for the given result result .
adds a key binding to the binder .
/ * ( non - javadoc )
/ * ( non - javadoc )
generates the smap
returns the concatenation of the specified path .
invoke the plugin .
get a { @link <unk> } from the cache .
get a { @link <unk> } which collects the elements of a { @link list } of { @link cache } s .
loads a byte array from the specified array of bytes .
returns an array containing all of the elements in the specified array .
resolves the {
prepare an { @link <unk> } for the given { @link <unk> } .
resolves the given { @link <unk> } .
validate the local artifact .
get the resource as stream .
jsp2 . <unk>
/ * ( non - javadoc )
/ * <unk>
create a tag file info .
method used to validate <unk>
pushes a new stream to a buffer .
reads the next state from the stack .
<p > <unk> . < / p >
actual initial reader .
returns the iana encoding name that is auto - detected of the converting - endian encoding .
/ * ------------------------------------------------- [ misc ] ---------------------------------------------------
/ * <unk>
scans surrogates .
report a fatal error with the given parameters .
fills the { @link list } of { @link <unk> } s from the given { @link <unk> } .
fills the { @link <unk> } with the given { @link <unk> } .
fills the { @link <unk> } with the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets resource as stream .
/ * ( non - javadoc )
log a message and exception .
<p > <unk> . < / p >
<p > <unk> . < / p >
update the filter options .
updates the filter attribute .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
returns the size of the specified size .
get an instance of a memory size
get an instance of a <unk>
<p > <unk> . < / p >
moves the cursor to the beginning of the buffer .
adds a new frame to the end of the stream .
add a pending message to the {
/ * ( non - javadoc )
returns the length of the longest match between the specified <code > <unk> / code > <code > <unk> / code > and <code > <unk> / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
/ * ******************************************************** / * internal methods ********************************************************
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
write a portion of an array of bytes .
/ * ------------------------------------------------------------
write a portion of an array of characters .
writes <code > len< / code > bytes from the specified <code > string< / code > starting at <code > off< / code > to this output stream .
allocates a new character buffer .
/ * ( non - javadoc )
/ * ( non - javadoc )
csv compilation .
==================== delegates to {
adds a new value to the cache .
creates a message for the given error message .
returns the string representation of the supplied message .
looks up and returns the formatted string as a string with the specified message .
returns the localized message for the given error code and arguments .
<p > <unk> . < / p >
/ * <unk>
create the class .
creates a new { @link <unk> } for the given { @link <unk> } .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
initialize the java compiler .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a string representation of the given string .
rewrite the given xmlfile
use <unk> () to compile the list of <unk> .
/ * ( non - javadoc )
/ * package
/ * <unk>
this method is used to generate an arbitrary list of sets of sets of sets of imports .
gen - last : <unk>
/ * <unk>
method to write out a complex tag
generate the preamble for the servlet .
emits the xml declaration of the xml document .
generate constructor .
*********************** volt db extensions ************************
/ * ( non - javadoc )
/ * ( non - javadoc )
generate the preamble of the <unk> .
/ * ( non - javadoc )
/ * --- private methods ---
generates the end of dynamic attribute .
/ * ( non - javadoc )
converts a property name to a method name .
<p > <unk> . < / p >
reads all properties from an xml document .
export a list of tracks to a zip file
sets entries in the input stream .
<unk> : <unk>
/ * ( non - javadoc )
use this method to reuse the { @link tag } for reuse .
release all available resources .
parses the given text expression .
parses a function pattern and returns a typed list of nodes .
/ * --- private methods ---
returns the next token in the stream .
/ * ------------------------------------------------------------
add a test property
fills the <unk> with the given uri .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the index of the first line in the given string .
checks if the given string is an expression .
get the expression from the expression string
sets the scope of the given scope .
end of attributes
encodes the given string according to rfc <unk> .
/ * ( non - javadoc )
translate a class type to a class .
/ * ( non - javadoc )
validate the given expression by replacing the values in the given expressions .
{ @inheritdoc }
returns a string representation of the given path .
splits a string into a list of substrings .
convert a java identifier to a valid java identifier .
mangles a character to a byte array .
returns true if the given string is a reserved word .
returns true if the given name is a valid java identifier .
returns the canonical name of the given class .
returns a list of jar files in the given jar file .
creates a new random { @link string } with the given length .
return a map of key / value pairs
get jcr node .
get response xml .
retrieve a job by its id .
extracts the modifier from the modifier
returns a set of key - value pairs from the given metadata .
/ * ( non - javadoc )
returns true if the given node is compiled .
/ * -------------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the specified key is a valid key .
get the basename of the specified name .
reads the entire contents of the given byte array into the specified buffer .
/ * ( non - javadoc )
closes the input stream .
{ @inheritdoc }
get the cardinality of the table
<p > <unk> . < / p >
<p > <unk> . < / p >
loads files from the specified locator .
{ @link <unk> }
rounds a number to the given number of decimal places .
returns the { @link bytebuffer } representation of this { @link <unk> } .
write list to { @link <unk> } .
insert a {
/ * ( non - javadoc )
creates a { @link <unk> } from the specified { @link <unk> } .
converts a { @link map } into a { @link list } of { @link point } s .
invokes the {
/ * ( non - javadoc )
get the bound locator for the given locator .
/ * ( non - javadoc )
get the history of the given notification .
increments the memcache of the items in the queue .
read object from input stream .
write object .
returns an unmodifiable map of all the properties from the properties file .
creates the container .
/ * ( non - javadoc )
/ * ( non - javadoc )
updates the { @link <unk> } with the given key .
for eligible tasks
allocates a new { @link <unk> } for the given { @link <unk> } .
{ @inheritdoc }
checks if the slot is idle for the given slot key .
/ * ( non - javadoc )
~ methods **************************************************************************************************************************************
sets the granularity of the granularity of this timestamp .
<unk> metrics .
/ * ( non - javadoc )
perform a synchronous call to the { @link <unk> ( string ) } method .
/ * ( non - javadoc )
handler for pending events .
/ * ( non - javadoc )
returns the remote name of the report .
writes an { @link <unk> } to the { @link outputstream } .
parses the given file name into a long .
/ * ( non - javadoc )
returns the raw data points for the specified destination type .
kill the topology
creates a { @link <unk> } for the granularity of granularity or updates .
compute the {
compute the rollup interval for the given points .
get the offset from the web data store .
get the bound { @link <unk> } for the given { @link <unk> } .
compute the specified array of bytes .
escapes a single line .
converts an array of integers into a string array .
register metrics .
try to reconnect to the given wait time .
fetches the number of locks that are associated with the stream .
waits until the current thread is running .
construct a <unk> object from a string
resolve aliases .
returns the topological sort keys for this graph .
returns the { @link <unk> } for the given { @link <unk> } .
this method will generate a new thread pool with the given name and index .
/ * ( non - javadoc )
<p > gets the abbreviated index of a metric . < / p >
returns a set of metrics with the given metric names .
get a map of dirty slots to a set of dirty entries .
a { @link parser } that splits a given { @link locator } into a { @link token } .
executes a { @link <unk> } { @link <unk> } { @link <unk> () } { @link <unk> () } { @link <unk> () } { @link <unk> () } { @link <unk> () } { @link <unk> () } { @link <unk> () } { @link <unk> () } { @link <unk> () } { @link <unk> () } and { @link <unk>
searches for a component by its type and range .
<p > <unk> . < / p >
add a batch of rollup results to the batch .
check metadata for locator
executes a select statement .
given a list of { @link <unk> } s to database .
inserts a range from the specified slot to the given slot .
creates a granularity of { @link granularity } using the given { @link <unk> } .
computes the { @link granularity } that contains the given points .
computes the { @link granularity } that is the same as { @link <unk> ( string long long ) } .
returns a granularity of { @link <unk> } .
/ * returns the granularity of the granularity of two points .
sets the stop criterion .
add a new shard to the partition .
remove a shard from the partition .
returns a list of unique tokens for the specified locator .
get a list of all locators that match the locator .
process a list of tokens .
collect the thread pool information
get unique hosts .
returns a set of dead nodes .
returns a set of inetsocketaddress for a tracker .
sets the minimum number of connections to connect to the pool .
write a 32 - bit integer to the {
get the query string
<p > <unk> . < / p >
http post .
returns an iterator over the metric column families for the given metric .
the main method .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the metric data for the specified range of ranges .
/ * ( non - javadoc )
{ @inheritdoc }
<p > <unk> . < / p >
evaluates the <unk> and returns the bound { @link <unk> } .
returns a new set of locators for this <unk>
get metric names .
fetches a single elasticsearch metric .
creates a file name for the given query title and reference .
start the server .
/ * ( non - javadoc )
compute the anomaly score for a metric .
populates a list of { @link rollupinterval } objects from a list of { @link interval } s from the given { @link <unk> } .
/ * ( non - javadoc )
<! -- begin - user - doc -- > <! -- end - user - doc -- >
check if the current token is in the token discovery .
/ * ( non - javadoc )
adds a new reference to the specified slot .
/ * ( non - javadoc )
returns a list of { @link ranges } objects corresponding to the specified { @link <unk> } .
returns a list of { @link <unk> } objects corresponding to the specified page size .
returns a list of { @link ranges } objects representing the specified intervals for the specified intervals .
/ * ( non - javadoc )
add a new metric locator to the <unk>
insert the specified locator into this location .
insert a new <code > <unk> / code > into the <code > <unk> / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
~ methods **************************************************************************************************************************************
get a list of sax events .
/ * ( non - javadoc )
create a map of { @link org . apache . gobblin . metrics . <unk> } instances .
get the column type from the input map .
/ * package
<p > <unk> . < / p >
get the bound { @link <unk> } for the given metric .
generates a list of metric names for the given channel .
get the metadata values of the metadata .
get the data for a particular type .
/ * [ deutsch ] <p > ermittelt den video zum angegebenen <unk> . < / p >
gets the cardinality of the specified range .
return a list of {
returns a serializer for the given type .
gets the content type of the content - type header .
/ * ( non - javadoc )
write a list of <unk> to a batch .
checks if all the metrics are valid .
/ * ( non - javadoc )
terminate the given file .
/ * ( non - javadoc )
/ * ( non - javadoc )
decodes the raw data .
returns the number of free port in the socket .
get a new instance of the extractor .
convenience method to create an instance of { @link <unk> } .
gets the system property .
returns true if the given string is a valid java version .
check the operating system .
checks if this version is a major version of the given version .
/ * ( non - javadoc )
{ @inheritdoc }
method shutdown .
start the time count .
/ * ( non - javadoc )
splits this { @link <unk> } into the specified { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * [ deutsch ] <p > liefert eine <unk> <unk> die angegebene <unk> . < / p >
joins a collection of strings to a string .
read an erlang version from the stream .
<p > launch a { @link <unk> } instance . < / p >
returns a list of { @link plugin } objects for the current { @link plugin } .
/ * ( non - javadoc )
enable a plugin
disable a plugin
copies the data from the url to the given destination .
copies the data from the url to the given destination .
copies the contents of the given source inputstream to the given destination file .
/ * ( non - javadoc )
parse the appversion component into a plugin version .
execute the default constructor .
sets the list of directory servers .
adds a list of ice connected servers .
/ * ( non - javadoc )
/ * ( non - javadoc )
cancels any ongoing signal .
send a message to the client .
send a post request
transmits the message to the oauth dispatch system .
transmits all the subscribers of the given message .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
main method .
runs the example .
interpretiert den picture als <unk> .
gen - last : <unk>
creates a new agent .
returns an instance of <unk> .
creates a {
creates an image with the given id .
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <unk> property .
requests that the <code > <unk> / code > property be set to the <code > <unk> / code > property . the <code > <unk> / code > field is set to <code > true< / code > .
gets the value of the properties property .
gets the value of the <code > <unk> / code > property .
gets the value of the <code > <unk> / code > property .
gets the value of the properties property .
gets the value of the properties property .
requests that the <code > <unk> / code > field be set to the <code > <unk> / code > property . the <code > <unk> / code > field is set to <code > true< / code > .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
close the library .
<p > <unk> . < / p >
fetches a list of <unk>
/ * <unk>
writes a list of <unk> to the output stream .
parse the ttml records into the console .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
checks if the given string is a valid numeric value .
parse the given string value into a number .
parse the given string value into a number .
returns a string representation of the given number .
formats a number as a percentage .
gets the value of the properties property .
helper method to create a nodelist from a xml document .
create a <unk> from a document .
creates a { @link marshaller } from the given { @link class } .
get the unmarshaller .
returns the context object represented by this object .
requests that the <code > location< / code > field be set to the <code > <unk> / code > field . the <code > <unk> / code > field will be set to <code > true< / code > . the local value will be updated immediately and an event will be propagated through the system to notify the listeners .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <code > <unk> / code > property .
gets the value of the property property .
helper method to read xml content from xml file .
loads a xml document from an xml file .
method to print out the internal representation of the bean .
gets the value of the properties property .
gets the value of the properties property .
returns true if the given document is readable .
converts an xml document to a { @link <unk> } object .
{ @inheritdoc }
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the <unk> property .
/ * ( non - javadoc )
creates a new xml document from the given container .
gets the value of the properties property .
converts a dom document to a dom document .
{ @inheritdoc }
gets the value of the properties property .
returns the country for the given country .
convert a string to a list of mapcodes like { @link <unk> ( string ) } .
format phone number in e123 national format with country and country .
extract the locale from the given string .
gets the country suffixes .
search for available country suffixes .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
the main method .
returns the pid of the given csv file .
read a csv document from the given input stream .
prints the contents of the table to console .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the <unk> property .
main method .
creates a string representation of this calendar .
gen - last : <unk>
gen - last : <unk>
parses the { @link <unk> } attribute for the given { @link document } .
build the subtitle objects for a given document .
helper method to wrap { @link <unk> ( document ) } .
the main method .
gets the value of the properties property .
<p > <unk> . < / p >
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the properties property .
create container <unk> images .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the <code > <unk> / code > property .
extract the xml content from the given xml stream .
writes the contents of the tile to the console .
gets the value of the properties property .
/ * ( non - javadoc )
this method is used to dump the contents of the given file into the given writer .
returns the value for the given property or <code > null< / code > if no such property exists .
check if a record is nullable
list the trackers belonging to this torrent .
appends a value to the list of values .
gets the value of the properties property .
loads a xml document from an xml file .
runs the given <code > <unk> / code > representation of the specified <code > <unk> / code > .
gets the value of the properties property .
loads a xml document from an xml file .
converts the given { @link <unk> } to a { @link <unk> } .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <code > <unk> / code > property .
gets the value of the properties property .
requests that the <code > <unk> / code > field be set to the <code > <unk> / code > field . the <code > <unk> / code > field will be set to <code > true< / code > .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <unk> property .
gen - last : <unk>
gen - last : <unk>
recursive method to insert an <unk> elements into the xml document .
insert <unk> elements into document
/ * ( non - javadoc )
utility method to upgrade a conf node .
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link byte } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
this method is used to write a csv file to the console .
create a new <unk>
create a <unk>
<p > <unk> . < / p >
entry point of the demo application .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the unnormalized product of this instance .
creates a new result set .
create a row
parse the ttml file into xml representation .
create a new dom document from the given document .
loads a xml document from an xml file .
/ * ( non - javadoc )
gets the value of the properties property .
gets the value of the properties property .
requests that the <code > <unk> / code > field be set to the <code > <unk> / code > field . the <code > <unk> / code > field is set to <code > true< / code > .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <code > <unk> / code > property .
gen - last : <unk>
/ * ( non - javadoc )
this function creates and configures a new document with the given arguments .
<unk> ( <unk> )
write the xml document to an output stream .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
helper method to create a dom document from a dom document .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the properties property .
the main method .
parses the xml file .
loads the {
converts a { @link <unk> } to a { @link <unk> }
writes a { @link <unk> } to a { @link <unk> } .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
parses the xml document to xml document .
converts the { @link <unk> } to a { @link object } .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
downgrades from the current version of the model to a target version .
/ * ( non - javadoc )
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
returns the parameters for the given node .
main entry point .
creates a random record .
process a list of records .
gets the value of the <code > <unk> / code > property .
gets the value of the properties property .
parses the given { @link file } into a { @link class } .
processes the given template file and returns it .
prints the version of the record .
write zero or more bed records to the output stream .
reads the next section of the given value and returns it .
create a new dom document from the given document .
create a <unk> from a document .
converts a string to a boolean value .
get the value of the system property .
<p > <unk> . < / p >
/ * [ deutsch ] <p > interpretiert den angegebenen key - objekt zurueck . < / p >
parses the global orientation value from a string representation .
converts a { @link string } to a { @link boolean } instance .
parses a <unk> string value .
convert the value to { @link bigdecimal } .
parse a <unk> value .
converts a string to a boolean value .
overrides the { @link <unk> ( boolean ) } method of the { @link java . lang . string representation } of { @link boolean } { @link boolean } { @link boolean } { @link java . lang . <unk> ( boolean ) } { @link <unk> ( boolean ) } { @link <unk> ( boolean ) }
converts a string to a boolean value .
creates a new instance of { @link <unk> } .
formats the given { @link imageformat } .
sets the min / max value of the given { @link bigdecimal } .
parses the given { @code type } to { @code type } .
sets the min value of the spinner
/ * ( non - javadoc )
returns the type of the given uri .
returns the type of the given file type .
gets the value of the properties property .
remove all whitespaces from the given node
count the number of nodes in doc .
<p > <unk> . < / p >
returns the first child element of the given parent node .
create a new dom document from a dom tree .
create a new document with the given text .
create a new documentbuilder and parse it into a dom object .
parse a xml document from a xml document .
this method convert an xml document to a dom document .
parse a xml document from an xml document .
creates a dom document from an input stream .
construct a builder from an existing xml document .
parse a xml document into a dom object .
creates a { @link xpathutils } instance .
creates a { @link xpathutils } instance .
<unk> > <unk>
returns the children of this node .
set the content of an element .
this method processes the given { @link node . node . node . <unk> } at the given node .
read all children of the given element .
returns the text of a cdata element .
write the xcal document to a file .
write the document to a file .
write the xcal document to an output stream .
write the xcal document to a writer .
write a <unk> to a file .
calls { @link <unk> ( com . vectorprint . report . xml . pdf . <unk> boolean ) } and calls { @link <unk> ( string ) } on the document .
write the xml document to the output stream .
<p > serialise . < / p >
factory method to create a <unk> object from a dom document .
gen - last : <unk>
/ * ( non - javadoc )
build <unk> elements from document .
<unk> <unk> .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
main entry point .
sets the kerning information .
interpretiert den picture .
dummy reply .
/ * ------------------------------------------------------------
generates a random string .
generates a random {
generates a random alphanumeric string .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
parses a { @link <unk> } to a { @link <unk> }
converts a { @link <unk> } to a { @link document } .
/ * ( non - javadoc )
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the properties property .
gen - last : <unk>
upgrade a document to a document .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the properties property .
example usage :
create a new <unk>
<p > <unk> . < / p >
generate <unk> generator
returns a copy of the artifactory project
get feed project declaration .
create a project
get feed using <unk> .
<p > get project project password . < / p >
gen - last : <unk>
gen - last : <unk>
@throws ioexception @throws exception
implements the {
helper method to upgrade the { @link document } to { @link <unk> } .
gets the value of the properties property .
gets the value of the properties property .
requests that the <code > <unk> / code > field be set to the specified value . the local value will be updated immediately and an event will be propagated through the system to notify all listeners that the attribute did change . proxied copies of this object ( if any ) .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
main method .
returns a pseudo - random uniformly distributed { @link <unk> } object .
creates an image from the images .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the <code > <unk> / code > property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the properties property .
creates a list of { @link <unk> } objects from the given xml layout .
extract the xml content from the given xml stream .
utility method to print out the state of the <unk> .
gets the value of the properties property .
gets the value of the <code > <unk> / code > property .
gen - last : <unk>
gen - last : <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * private void <unk> ( doc document doc ) {
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the value of the properties property .
requests that the <code > location< / code > field be set to the <code > <unk> / code > field . the <code > <unk> / code > field will be set to <code > true< / code > . the local value will be updated immediately and an event will be propagated through the system to notify the listeners .
creates a { @link <unk> } from a { @link <unk> } .
converts an { @link <unk> } to a { @link <unk> } .
creates a dom document from the given root element .
returns the root object representation of this version .
gets the value of the properties property .
create a <unk> from a document .
gets the value of the properties property .
gets the value of the <unk> property .
loads a xml document from xml file .
performs the analysis .
gets the value of the properties property .
process a record .
gets the value of the properties property .
gets the value of the properties property .
parses an xml document and returns a { @link document } representation .
parses an xml document and returns a { @link <unk> } representation .
create a dom document from the given xml string .
returns the { @link <unk> } for the given { @link node } .
creates a new { @link element } with the given name and value .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the <unk> property .
parses the xml file .
loads the {
adds the <unk> to the console .
loads the result of the <unk> .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
loads a xml document from the given xml stream .
applies the given { @link <unk> } to the given { @link <unk> } .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
<p > main . < / p >
runs the example .
creates the ad type for <unk> .
read a single file .
creates a dom document from the xml document .
gen - last : <unk>
gen - last : <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
build the soap url elements from the xml document .
remove unsupported languages .
upgrades a new build elements into a new dom node .
creates a new { @link <unk> } .
prints performance information .
creates a new xml document from the given feed .
converts this { @link <unk> } to an { @link object } .
gen - last : <unk>
/ * ( non - javadoc )
helper method to wrap a { @link document } at a &lt ; <unk> ; element .
gets the value of the properties property .
returns the owner of the document .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
set the value to {
creates a new { @link <unk> } instance .
creates a new instance of { @link <unk> } .
creates a new instance of { @link <unk> } .
computes the replication for the specified slave host and port .
creates a new instance of <unk> .
writes the given byte array to the given output stream .
writes the specified stream to the output stream .
/ * ( non - javadoc )
checks if the given class implements the given interface .
get the generic type argument for the given class .
returns the names of all fields of the given class .
<p > <unk> . < / p >
returns a list of all matching fields of the given class .
gets the field name from the given method .
create a new instance of the given class using reflection .
<p > invoke . < / p >
finds a method with the specified name and parameters .
/ * package private
<p > <unk> . < / p >
<p > <unk> . < / p >
finds all super classes of the given component class .
/ * ( non - javadoc )
compares two objects .
gets the package name of the class .
parses the given { @link url } into a { @link charset } .
read properties from a file .
unmarshals the given { @link source } instance into an instance of { @link <unk> } .
unmarshals the given { @link source } instance into an instance of { @link <unk> } .
template method for creating { @link xmlstreamwriter } for the given { @link <unk> } .
template method for creating new { @link <unk> } .
creates the key pair .
encrypts the given string with the given secret .
/ * private static <unk> <unk> () { return <unk> . <unk> () ; }
生成用于非对称加密的公钥和私钥<br > 密钥对生成算法见：https : // docs . oracle . com / javase / 7 / docs / technotes / guides / security / standardnames . html#keypairgenerator
decrypt string .
check if the given exception is compatible with the given exception type .
saves the certificate to a file .
{ @inheritdoc }
read a number of bytes from an input stream .
installs the given environment bindings .
adds a namespace uri to the namespace .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the default executor for the given class .
returns true if the specified class is an instance of the specified class .
parse the given string into a {
parse mime types .
sorts the given list of {
create a charset from the given input stream .
copy the input stream to a file .
returns true if the given string is an opening tag with the given string .
consumes a comment .
extracts the next token from the line .
returns the index of the first line of the token .
get the number of months between two dates .
<unk> - mm - <unk>
<unk> - mm - <unk>
returns a string representation of this date / time string .
returns a string representation of the date . <p >
gets the date .
<unk> > <unk> : yyyy - mm - dd hh : mm : ss
<unk> - mm - <unk>
<unk> - mm - <unk>
<unk> > <unk>
<unk> > <unk>
<unk> > <unk> : yyyy - mm - dd hh : mm : ss
get the last day of a day
returns a string representation of the date .
returns a string representation of the given time .
<unk> > <unk>
adds the date to the date .
<p > <unk> . < / p >
gets the number of days between two dates .
<unk> ( <unk> )
<unk> ( <unk> )
<unk> ( <unk> )
******************* beginning of function ******************** //
this method returns a string representation of the given string .
<unk> <unk> <unk>
determines whether the specified <unk> is the same week with the specified <unk> .
test to see if two dates are in the same week
get the week number for the specified unit .
<unk> <unk> .
<unk> <unk> .
/ * ( non - javadoc )
shuffles a random string .
<unk> > <unk>
initializes the { @link <unk> } with the given configuration file .
returns { @code <unk> } from { @code <unk> } .
/ * ( non - javadoc )
returns the name of the {
adds an iterator to the end of the iteration .
/ * ( non - javadoc )
get the inline images
/ * handler
<p > <unk> . < / p >
gets the interface .
iterate through all files in the given directory .
iterate over the excluded files .
deletes all the files in the {
<p > <unk> . < / p >
create a { @link set } of { @link <unk> } and { @link <unk> } .
<unk> : <unk>
<unk> : <unk>
returns a string representation of the given number of bytes .
returns a string representation of the given string .
encrypt a password
generates a container password for the given password .
get all the classes in the installation .
get the classloaders .
get all the classes in the given package filtered by the given package .
returns all classes that match the given package name .
<unk> > <unk>
find all classes in the jar .
initializes the output stream for writing to this pipe .
creates a new { @link outputstream } for the given stream .
creates a stream pumper to copy the given input stream to the given output stream .
creates a stream pumper to copy the given input stream to the given output stream .
prints the stack trace of the given stack trace .
this method gets the singleton instance of this { @link <unk> } . <br > <b > attention : < / b > <br > please prefer dependency - injection instead of using this method .
sets the options .
<p > <unk> . < / p >
<p > adds a <code > <unk> / code > to this <code > <unk> / code > . < / p >
<p > adds a <code > <unk> / code > to this <code > <unk> / code > . < / p >
<p > adds a <code > <unk> / code > to this <code > <unk> / code > . < / p >
<p > <unk> . < / p >
parse the command line arguments .
/ * ( non - javadoc )
this method is used to print the stack trace of the given throwable .
get the full stack trace of the given throwable .
get the current stack trace element .
returns the {
/ * ( non - javadoc )
returns the annotation of the given type .
<p > <unk> . < / p >
returns a list of { @link field } s that extends { @link class } s of the given class .
compares two strings using the specified strategy .
compute the hash code of a string array .
init method .
get the value of a cookie in the form of a cookie string .
returns a string representation of the given file as a string .
<p > newinstance . < / p >
/ * ( non - javadoc )
this method gets the singleton instance of this { @link <unk> } .
read a line from the input stream .
获取 { @link target } <unk>
compares the given date with the specified far date range .
converts the given value to a string .
sets the value to the given value .
/ * ( non - javadoc )
/ * ( non - javadoc )
scans the classpath for classes that are annotated with { @link java . util . scanner . <unk> } or { @link java . io . serializable }
accepts a file .
upload the profile file .
<unk> <unk> <unk>
loads an image from the given url .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
invokes a method on the given instance .
invoke a method using reflection .
create a json string from the given object .
returns a json representation of the given object .
adds the given date to the given date object .
deletes a directory recursively .
<unk> > <unk> / code > <unk>
recursively copy the contents of the given source file to the destination directory .
converts a collection of strings to a collection of strings .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * package private
returns the json encoding corresponding to the given encoding .
returns true if the given method is an object method .
/ * ( non - javadoc )
/ * ( non - javadoc )
finds the class of the given class .
find a constructor with the given arguments .
<p > invoke . < / p >
returns the difference between the given parameter types .
convert a long to a string .
convert a byte array to a hexadecimal string
install the version of the file .
serializes an object into a byte array .
deserializes the given byte array into an object .
/ * ( non - javadoc )
<p > reflect . < / p >
<p > init . < / p >
returns true if the given string has the given text .
generate a signature for the given parameters .
<p > <unk> . < / p >
gets child elements by tag name .
returns the child element of the element with the given name .
<p > <unk> . < / p >
<p > <unk> . < / p >
deserializes the given element .
returns true if the given node is equal to the given name .
returns true if the given node name matches the given namespace .
returns true if the node s name matches the given replacement node .
returns the cell of the given column .
paints the rows of the table .
removes the next tag from the string .
appends spaces to the given string .
<p > convert an array of object to a string array . < / p >
<p > convert an array of object to a string . < / p >
this method gets the singleton instance of this { @link <unk> } . <br > <b > attention : < / b > <br > please prefer dependency - injection instead of using this method .
checks if the string is empty .
<p > <unk> . < / p >
returns the intersection of the given list of objects .
ensures that the {
<p > <unk> . < / p >
adds a query parameter to the request .
adds the encoded value to the url .
/ * <unk>
returns the rdf representations of {
adds a { @link com . ibm . websphere . <unk> . <unk> } to the given { @link <unk> } .
add an entry to the registry .
stops monitoring thread .
check if the file size is less than or equal to the given file .
parse the tiff file into a dom element .
list all files that match the given suffix in the given folder .
create a stream from a url .
creates a temporary file from the given path .
returns the { @link url } for the given path .
copies the input stream to a file .
read the contents of a file into a string .
check if the file is a required file .
read the contents of an inputstream to a byte array .
reads the contents of a file into a byte array .
write a byte array to a file .
decode a base64 - encoded string to a file .
saves a matrix to a file .
/ * ( non - javadoc )
find the directory in the given path .
/ * package
/ * public void <unk> ( pagecontext pc string classname ) throws pageexception { return <unk> . <unk> () ; }
converts a string interface to a set of interface names .
checks if the given class is a valid interface .
/ * <unk>
/ * ------------------------------------------------------------
replaces all the tags in the given { @code content } with annotations .
get the <unk> of the android process .
load a mobile document from an inputstream .
generates a random string .
<p > <unk> . < / p >
creates the output properties for the transformer .
format the xsl : output property .
get the current status of the current thread .
returns the qualified name of the given qualified name .
adds a namespace declaration to the given namespace .
/ * ( non - javadoc )
adds the given { @link callable } to the { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
encrypt data .
generates a md5 hash of a string
create a table entry spec .
/ * <unk>
reads the atom types from the given filename .
returns the custom file name for the given name .
this method gets the singleton instance of this { @link <unk> } . <br > <b > attention : < / b > <br > please prefer dependency - injection instead of using this method .
unpack int value from input stream .
reads the contents of a file and returns true if the file is not a file .
read a number of bytes from a file .
remove duplicate line breaks from the given file .
<p > returns the formatted filesize to the given locale . <p >
encodes the specified byte array into <var > destination< / var > . the array <var > source< / var > and <var > destoffset< / var > should be used .
generates a random number generator .
/ * ( non - javadoc )
compute the encrypting code of compressed data .
gets the minimum number of bits from the specified decimal coordinate .
check the children .
gets the search path .
convert a list of strings to a string array .
returns a list of all of the currently contained children
get the list of childs having childs
/ * <unk>
verifies that the {
liberty change for cxf begin
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * ( non - javadoc )
compares two lists of strings .
/ * ( non - javadoc )
create a { @link map } of { @link class } s .
adds a message to the md5 digest of the message .
<unk> - <unk>
<p > <unk> . < / p >
add a tag to the superclasses .
determines if the file is accepted by the analyzer .
create a new gelf appender .
returns true if the text is rtl or not .
returns the background color of the item .
this method returns the rmsd of all the residues in the array .
returns the colorstatelist for a given amount of colors .
sets the placeholder text size . <p >
calculates the power of the item in x .
normalizes a path to a path .
starts the server .
/ * returns the csv for the given file .
/ * ( non - javadoc )
helper method to open a keyword .
query for values
/ * ( non - javadoc )
get the keyword documentation for a keyword .
the main method .
load a library .
loads a class from the given class name .
/ * ( non - javadoc )
/ * ( non - javadoc )
stops the service .
configure logging .
<p > <unk> . < / p >
converts the given json string to a json string .
copy properties from file to json .
{ @link <unk> ( inputstream ) }
<p > <unk> . < / p >
converts the given { @link map } to a { @link jsonobject } .
converts the given properties object to a json string .
extract properties from properties .
<p > <unk> . < / p >
/ * ( non - javadoc )
sets the color state list .
/ * ( non - javadoc )
get the shadow of the shadow
creates an {
creates a builder for an {
/ * ( non - javadoc )
creates an { @link com . google . common . client . builder } .
{ @inheritdoc }
process the attributes of the attribute .
compile markdown files .
replaces tokens with % replaced with tokens .
process markdown .
finds the first line in the passed list of strings .
adds the html to the html file .
returns a new instance of { @link string } that matches the given parameters .
checks if a relative path is a relative path .
copy files from the source directory to the target directory .
copies the properties of the project .
/ * ------------------------------------------------------------
build the minidrawer
changes the view up to the specified duration .
////////////// animation matrix
returns the percentage of the slider .
adapts the size of an album .
<p > <unk> . < / p >
launches the soft activity .
gets the envelope status for the specified envelopes .
get the <unk> alert <unk> .
sets the timeouts of the httpclient .
set the date format to use for the api call .
serializes the given object into an object .
deserialize a json response object to an object .
download file from response to file .
invoke api to invoke the rest api .
get the client configuration .
create a new alert entity .
get the list of alert recipients for a given identifier .
get the list of <unk> journals .
get the list of export journals .
get the data for the api .
set the default host provider host .
sets the client credentials .
list all recipients of the alert type
get the data for the api .
list all recipients of a bookmark
bind object executes
/ * <unk>
merges the given { @link graph } into the given { @link graph } .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the exclude filters .
blocking method to shutdown .
executes a select
returns a deep copy of the specified { @link node } .
creates a { @link <unk> } from a { @link <unk> } .
install the resource extension .
/ * <unk>
{ @inheritdoc }
creates a new instance of <unk> .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
set the number of threads in the process .
resizes the current { @link <unk> } object .
rotates the { @link <unk> } with the given degrees .
<strong > [ icu ] < / strong > extends { @link <unk> ( object ) } .
<p > <unk> . < / p >
returns a random item from the list of items .
draw a watermark at the specified offset .
get the image dimensions for a specific file .
set output directory .
<p > <unk> . < / p >
adds a histogram to a collection .
prints a list of metrics to the registry .
get counter domains by name .
<p > <unk> . < / p >
<p > <unk> . < / p >
convert a duration string to a timeunit object .
<p > <unk> . < / p >
recursively create a zip file .
execute the { @link <unk> ( string ) } method .
creates a {
adds the given { @link file } to the { @link url } .
/ * ( non - javadoc )
set the current slide index .
starts the worker thread .
this method is used to determine if the target region is good enough for the screen .
returns true if the target region is <unk> .
check if the target region is good .
returns true if the toolbar supports <unk> .
gen - last : <unk>
this method is called to check if a leaf is ok .
execute the task .
sorts a list of rectangles into ascending order .
{ @inheritdoc }
launches a {
renders a template .
creates a file based on the filename of the framework .
computes the location of the mouse event .
overlap an overlap vertically .
/ * ( non - javadoc )
/ * ( non - javadoc )
get a builder for the retry executor builder .
register a {
/ * ( non - javadoc )
execute a message .
poll the sqs message for both sqs and sqs .
/ * ( non - javadoc )
execute a message selector .
returns the version number of the manifest file .
opens a source file with the given name and filename .
creates a temporary file with the given prefix and suffix .
expands the operating system to a zip file .
creates a new lyra managed configurableconnection for the given { @code name } and { @code options } .
tries to load a resource .
load the native library
prepare the operating system .
load a resource from a file .
tries to find a file with the specified parameters .
copy the temporary directory to temp directory .
re - initializes the index by invoking the given { @link org . apache . commons . commons . logging . <unk> } .
/ * ( non - javadoc )
creates a new { @code <unk> } with the given string value and returns the result .
create a new log - entry map .
<p > trace . < / p >
log a message at the trace level .
log a message at the trace level .
log a message at the trace level .
log an event with the given event .
log a message at the trace level .
/ * ( non - javadoc )
log a debug log message .
log a message at the debug level according to the specified level .
log a message at the debug level according to the specified { @link throwable message } formatted with the given { @link object [] arguments } .
log a message at the debug level according to the specified { @link org . slf4j . logger } .
{ @link <unk> }
log a message at the debug level .
/ * ( non - javadoc )
log a consumer to log .
log a message with info log level .
log a message at the info level .
log a message at the info level .
{ @link <unk> }
log a message at the info level .
synchronously sends request to cloudformation s3 endpoint
log a message at the info level .
<p > log . < / p >
log a message at the warn level .
log a message at the warn level .
logs a warning message with the specified message .
{ @link <unk> ( string map ) }
log a warning message .
log a message at the warn level .
log a message at the warn level .
initializes the deferred log .
log a message at the error level .
log a message at the error level .
logs a formatted message with an error message .
log an error .
log a message at the error level .
log a message at the error level .
log a message at the info level .
logs a list of { @link org . apache . slf4j . logging . <unk> } .
/ * package
returns an array containing the ids of the values in the given collection .
returns an array containing all of the elements in the given array .
<p > <unk> . < / p >
extracts the first {
<p > removes the specified number of elements from the specified array . < / p >
serializes an object into a json string .
add steps to a bmr cluster .
{ @inheritdoc }
write an {
end an event
write a {
write a resulset to a json object
used to write a { @link <unk> } to the given { @link <unk> } .
create a { @link <unk> } instance .
checkstyle : off
checks if the given object is a string type .
returns a logger for the given class .
returns a logger for the given class .
returns a logger for the given name .
returns the { @link <unk> } for the given { @link <unk> } .
{ @link <unk> ( logger ) }
initialize a @ { @link squigglypropertyfilter } with a specific property filter .
initialize a @ { @link squigglypropertyfilter } with a specific property filter .
get a context from the provided url .
encodes an { @link event } to a { @link <unk> } .
delete an array of { @link <unk> } s .
check if the given marker is an array of markers .
helper method to check whether a marker in the map is a map marker .
remove a marker from the map .
returns the { @link <unk> } for the given marker .
returns the { @link <unk> } for the given marker .
delete marker event
/ * ( non - javadoc )
serializes an object to a json string .
build format string .
convert the array of devicedata .
creates a {
create a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
method that can be called to ask implementation to serialize values of type { @link <unk> } .
serializes an event to a json string .
gets the stack trace element of the current thread .
serialize an object to a json string .
serializes an event to a json string .
create a { @link list } of { @link <unk> } s .
create a { @link list } of { @link <unk> } s .
writes the given { @code value } to the given { @code encoder } .
encode a throwable as a string .
encode a {
encode the { @link list } of values .
encodes the given { @link object } as { @link java . lang . string } .
calls { @link <unk> ( org . apache . beehive . netui . util . logging . <unk> . <unk> ) } .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a hive database
remove a key from the table .
/ * ( non - javadoc )
returns the number of rows matching the selection and selection criteria .
/ * ( non - javadoc )
registers an instance of the given class with the given { @link <unk> } .
registers a serializer for the given type .
copies the content of the specified cell into this cell .
<p > <unk> . < / p >
<p > <unk> . < / p >
creates a new string from the given string value .
<unk> > <unk>
major version of { @link <unk> ( string string ) }
get the column index from the save attribute .
<unk> <p > <unk> / p >
<unk> <p > <unk> / p >
sets the save objects in a hidden row .
<unk> <p > <unk> / p >
saves a markdown sheet .
<unk> <p > <unk> / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
returns the length of the given port .
<p > retrieve . < / p >
convert a double to a string .
<p > retrieve the value of the <code > <unk> / code > property . < / p >
reconstitute the <tt > <unk> / tt > instance from a stream ( i . e . serialize it ) .
<unk> <p > <unk>
put string shift .
获取 { @link <unk> }
/ * ( non - javadoc )
imports a formula evaluator .
<unk> <p > <unk> / p >
load web sheet .
<unk> <p > <unk> / p >
selects a tab change radio button .
closes the stage .
/ * ( non - javadoc )
save the content of the main chaincode .
submits the multi - part submits run .
/ * ( non - javadoc )
gets the current view configuration .
reconstitute the <tt > <unk> / tt > instance from a stream ( i . e . deserialize it ) .
{ @inheritdoc }
<p > <unk> . < / p >
get the locale for this component .
<p > <unk> . < / p >
returns the state of the cell .
/ * ( non - javadoc )
<p > <unk> . < / p >
helper method to clone the state of this chart .
convert a given parquet list to a list of <unk> .
given a cell address from a cell address must be associated with a given cell .
/ * package private
/ * package private
/ * package
assembles the list of items from the table .
read rows from rows .
/ * package
given a list of dependencies to a list of <code > <unk> / code > s .
/ * package
/ * package
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the color name of the sre .
sets the current state of this layer to the given value .
/ * example :
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * this method is used to extract container from http : // stackoverflow . com / questions / <unk> / <unk> . html
computes the automatic tint technique for the specified index .
converts a <unk> to a <unk>
<p > <unk> . < / p >
creates a <unk> from a <unk>
{ @link <unk> }
finds the component name for the given component .
/ * ( non - javadoc )
returns the {
sets the value of the property on the specified object .
gets the value of an object property .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
gen - last : <unk>
gen - last : <unk>
initializes an { @link com . <unk> . <unk> . <unk> } . <p >
<unk> <p > <unk> / p >
gen - last : <unk>
add a series of pie chart to chart
<p > <unk> . < / p >
creates the chart .
creates a chart panel .
creates a new chart .
creates a chart .
/ * <unk>
/ * <unk>
creates a trend chart .
gen - last : <unk>
copies the charts in the given excel system .
replies the expected value of the chart .
initializes the <unk> .
creates a chart .
/ * ( non - javadoc )
<unk> <unk> <unk>
returns a cells object from the given <unk> .
sets up the upper - case - style rules of the given cell and adds them to the table .
builds the cell in the given cell .
returns a list of rows mapping by full name .
adds index number in shift map .
check the upper bound of a class .
<unk> : <unk>
set the full name of the cell
returns the number of rows in the csv file .
sets the original cell number in the hidden form .
returns a list of { @link <unk> } s for the given attribute names .
converts a { @link <unk> } to a { @link <unk> } .
returns the first element of the collection or <code > null< / code > if the collection is empty .
<unk> <p > <unk> / p >
check if the row is released .
<unk> <p > <unk> / p >
removes the modifier suffix from the given full modifier name .
replace the string with the specified cell value with the specified cell value .
<unk> <p > function : <unk> / p > <p > description : < / p >
<unk> <p > function : <unk> / p > <p > description : < / p >
add a merged cell to the cell .
converts a {
build the rewrite for a list of rewrite aliases .
builds the other sheet s configuration .
copy a sheet .
build the form command from a sheet .
<unk> <p > function : <unk> / p > <p > description : < / p >
copy a sheet .
<unk> <p > <unk> / p >
<p > <unk> . < / p >
<unk> <p > <unk> / p >
<unk> <p > <unk> / p >
static helper method to match the parent command .
calculates the parent for a given command .
create a command from a command .
<unk> command .
<p > <unk> . < / p >
<unk> > <unk>
build command list .
<p > <unk> . < / p >
process a sheet .
move a comment to a map .
/ * <unk>
build the map operation .
copy a sheet configuration to a sheet
set the footer of the sheet .
set the body of the sheet .
set the header of the sheet .
add a row .
<p > <unk> . < / p >
remove <unk> from shift map .
<unk> > <unk>
get the command from the command - line map .
insert an empty object in the context .
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
check if the given row is allowed to add a row to the sheet .
<unk> > <unk>
create a column from a cell .
<unk> > <unk>
returns a copy of the given formula .
returns true if the given string is a quoted string .
<p > evaluate . < / p >
エラー情報を追加します。 <p > <unk> {
execute boolean expression .
<unk> > <unk>
<unk> <p > <unk> / p >
<unk> <p > <unk> / p >
<p > <unk> . < / p >
return j session scope .
create a new chart by prefix
{ @link com . <unk> . <unk> . migrate . <unk> }
copies the cell .
assemble the current value to a new value .
<p > <unk> . < / p >
<unk> <p > <unk> {
<unk> > <unk>
<unk> <p > <unk> / p >
<unk> <p > <unk> / p >
sets the cell value for the given cell .
converts a cell value to a boolean value .
returns the value of the cell .
sets the cell value for a cell .
copy all rows from one sheet to another sheet
copy a single row from another sheet to another row
<unk> <p > function : <unk> / p > <p > description : < / p >
copy a cell to another cell
<unk> <p > <unk> / p >
copy a row to a sheet
create a new { @link com . <unk> . <unk> . <unk> . <unk> } from the template sheet .
<unk> > <unk>
<unk> <unk> <unk> <unk>
<unk> <p > <unk>
get the shape of the <unk> from <unk> .
clones a cell from a workbook .
<unk> a1 <unk>
<unk> a1 <unk>
<unk> a1 <unk>
<unk> a1 <unk>
<unk> / <unk>
transforms the given { @link window } into an array of { @link <unk> } s .
<p > <unk> . < / p >
{ @link <unk> }
<unk> <p > <unk> / p >
<unk> <p > <unk> / p > <p > description : < / p >
<unk> <p > function : <unk> / p > <p > description : < / p >
<unk> > <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > execute . < / p >
<p > evaluate . < / p >
save the state of this object to the given stream .
adds a new row to the end of the list .
removes a row from the table .
create a map from a list of rows .
<p > recover . < / p >
gets the chart area of the chart
{ @link <unk> ( string ) }
/ * ( non - javadoc )
******************** initialization methods
/ * <unk>
draw the <unk>
returns the node with the given id .
returns the unique id for the attribute .
save the state of the <code > <unk> / code > instance to the stream .
/ * ( non - javadoc )
{ @inheritdoc }
build multiple objects for a single object .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the {
documentation inherited from interface
restore data context
gets the last part of the given full name .
associates the given resource with the given parts .
/ * ( non - javadoc )
<p > <unk> . < / p >
set the first row ref
<p > <unk> . < / p >
build command index .
{ @inheritdoc }
builds the cells for a row .
build las cell .
<p > <unk> . < / p >
serializes the {
deserialize a json document from a stream .
<p > <unk> . < / p >
returns a list of {
build a chart series in a list
/ * ( non - javadoc )
checks whether the specified datapoint type list has a translator for the specified datapoint type .
sets the backing map .
<unk> <p > <unk>
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * <unk>
<unk> / <unk>
/ * <unk>
returns a {
creates a mapping from the specified cell to the specified cell .
adds a { @link cell } to a { @link cell } .
{ @link <unk> } <unk>
{ @inheritdoc }
returns the pattern that matches this pattern .
<p > encode the content of the component . < / p >
<p > <unk> . < / p >
save the state of the object to the stream .
<p > <unk> . < / p >
<p > <unk> . < / p >
<unk> <p > <unk> / p >
get the name of the cell
returns the standard decoration decoration .
<unk> <p > <unk> / p >
copies the cell s {
<unk> <p > <unk> / p >
returns the vertical alignment from the given cell .
<p > <unk> . < / p >
<unk> <p > function : <unk> / p > <p > description : < / p >
/ * <unk>
/ * ( non - javadoc )
<unk> > <unk>
sets the format of the cell to the specified format .
<unk> > <unk>
<unk> > <unk>
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
normalizes a resource path and removes leading and trailing slashes .
main evaluation .
<p > <unk> . < / p >
<p class = changed_added_2_0 > return the <code > <unk> / code > property . < / p >
<p > return the expression associated with the expression in the specified expression . < / p >
convert a string array to a delimited string .
returns a new { @code double } with the specified number of decimal places . <p > the value is rounded according to the specified number of decimal places to the given value . the number of decimals will be rounded to the number of decimal places to be rounded . <p > the value will be rounded to the number of decimal places
returns the active tab type .
get the synthcontext for the tab style .
retourne la valeur de la propriété <unk> .
format the decimal separator for a decimal separator .
format <unk> .
/ * ( non - javadoc )
<unk> <unk> <unk> <unk>
/ * <unk>
add a watch list to watch list .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns <code > true< / code > if the given <code > str< / code > is quoted or not .
******************* beginning of function ******************** //
returns <code > true< / code > if the given string is a <code > null< / code > constant .
returns <code > true< / code > if the given <code > str< / code > is quoted or not .
returns <code > true< / code > if the given string is a quoted value .
------------- <unk> -------------------------------
<unk> > <unk>
<p > <unk> . < / p >
returns the string representation of the given string .
returns the index of the last occurrence of the given substring in the string starting at the given index .
converts a string into a map of key - value pairs .
parse the given {
check if the given list of entity attributes should be excluded .
extract validation attributes .
this method is intended to be used by generated classes to parse the given string . this method is intended to be used by generated classes ( e . g . http : // www . w3 . org / protocols / rfc2616 / rfc2616 - <unk> . html ) .
parse special attributes for the special attributes .
----- private methods -----
this method is used to process the select item attributes .
create special attributes for special attributes .
<unk> - <unk>
find the position of the first cell in the input string .
replace all occurrences of the given word in the given input string with the replacement string .
encodes the given excel number .
<unk> <p > <unk> / p >
<unk> <p > function : <unk> / p > <p > description : < / p >
extracts the package name from a type element .
removes the package name from the given type .
converts a column name to an index .
<unk> <p > <unk> / p >
<unk> > <unk>
<unk> the width of the column .
offsets the height of the pixels in pixels .
check if the given string is a date .
parse a metric entry .
check if the given string is a valid numeric value .
read feature parameters .
sets the property value to the given property on the object .
<unk> <p > <unk> {
checks if the given { @link <unk> } is inside the given { @link <unk> } .
parse a sheet
<unk> > <unk>
delete hidden row editors .
<unk> <p > function : <unk> / p > <p > description : < / p >
get the merged sheet value from the dimension
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<pre > <unk> . <unk> ( <unk> ) ; < / pre >
validates the cell in the current row .
<unk> ( <unk> )
check error message
<unk> <p > <unk> / p >
return true if the mbean value is valid
<p > <unk> . < / p >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
copy a sheet
method <unk> .
<p > refresh the children of the specified <code > <unk> / code > . < / p >
/ * <unk>
<p class = changed_added_2_2 > setter for the field <code > <unk> / code > . < / p >
tries to validate the current tab .
clear the tree .
load header rows .
adds a row to the given build .
fill the list of namespaces in the table .
returns the style of the header column .
get the width of the cell .
<p > <unk> . < / p >
get column width .
sets up the combo box for the current site . <p >
{ @link <unk> } <unk>
/ * ( non - javadoc )
initializes the tabs . <p >
load the data from the data
<unk> > <unk>
<p > <unk> . < / p >
init data for cell .
returns the index of the tab with the given name .
save the value of the { @link <unk> } in the { @link <unk> } .
prepare the { @link <unk> } for the given { @link <unk> } .
sets the component data table page .
saves the {
encode a row .
<p > fill the body table . < / p >
ask the given row to be <unk>
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * private void <unk> ( string parent ) { if ( <unk> == null ) { return <unk> ; }
adds a new endpoint reference .
copy the body rows
/ * ( non - javadoc )
returns whether the dart resource is active or not .
<p > <unk> . < / p >
parses a string representation of an xml document .
parses a string representation of an event
/ * ( non - javadoc )
<p > <unk> . < / p >
returns a {
/ * ( non - javadoc )
creates an instance of the given event .
/ * ( non - javadoc )
returns a new macro that is the macro of the given macro .
reduces the list of {
expand the given binding into the given bindings .
returns the {
returns a copy of the given array .
<p > <unk> . < / p >
returns true if the given class has an annotation of the given type .
<p > <unk> . < / p >
introspects the supplied class and returns the state of the class .
<p > <unk> . < / p >
instantiate a constructor for the given type .
returns true if two strings are case sensitive
try to convert the given string to a try - try to switch to the given default value .
returns the name of the end of root .
returns a {
execute the given { @link inputstream } to the given { @link outputstream } .
writes the given value to the given writer .
writes a new line to the writer .
returns the width and height of the column
writes <code > len< / code > bytes from the specified byte array starting at offset <code > off< / code > to this stream .
/ * ( non - javadoc )
sets the <unk> tag .
send a binary request to the server .
internal method for adding binary data to a binary buffer .
convenience method to add a bitmap to the current binding map .
/ * ( non - javadoc )
/ * ( non - javadoc )
add a header to the request .
clears the result .
call the { @link <unk> ( uri string bundle ) } method .
pause the playback .
bind to the service .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a request to the request .
adds a request to the request .
build the uri .
read the content of the given inputstream as a string .
parse a {
copy the contents of the input stream to the output stream .
consumes the given input stream and writes it to the pool .
get an input stream from a resource .
handle http request .
checks if the given file name is a valid resource name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
resets the stringreader .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
send a header to the output stream .
/ * ( non - javadoc )
send a transfer header to the output stream .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
deliver the message
/ * ( non - javadoc )
converts a byte array to a hex string .
get the total number of bytes in the part of the array .
/ * ------------------------------------------------------------
helper method to send the 304 response .
sets the date header .
sets the date and cache headers for the http response .
sets the content type header .
closes the given channel .
/ * ( non - javadoc )
/ * ( non - javadoc )
opens the cache .
ensure that the given directory exists in the given directory . if the directory does not exist an exception is thrown .
returns the value for the given { @code <unk> } .
creates a new { @link inputstream } from the given { @link <unk> } .
resets the bitmap with a background color .
creates a new instance of { @link sslcontext } .
configure a keystore with a truststore and password .
replace the scale type with the scale .
sets the scale type .
start the service .
stops the { @link com . <unk> . services . location . <unk> } from the { @link android . app . feature . <unk> } .
get a pending intent that can be sent to the specified intent .
opens a connection to the given url .
bind to goro service .
/ * ( non - javadoc )
notifies the view that the given view is about .
/ * ( non - javadoc )
callback method for incoming data .
/ * ( non - javadoc )
sleep for the given time unit .
asynchronously applies the specified { @link <unk> } to the specified { @link imageview } .
<p > unbinds a { @link <unk> } . < / p >
process image set .
sets the image result to be consumed by the {
sets the text or hidden of a textview .
sets the text to be displayed .
hides the soft keyboard
show soft keyboard
toggles the soft keyboard
convert to 0 in pixels
find view by id .
find view by id .
/ * ( non - javadoc )
gets the current position in the buffer .
resets the buffer to the beginning of the buffer .
resets the user buffer .
/ * ------------------------------------------------------------
clear the cached image url .
populates a { @link typeface } from the specified { @link view } .
cancels an image loading cycle .
creates a { @link <unk> } from the given { @link view } .
<p > <unk> . < / p >
update the drawable bounds
load the {
loads a bitmap from the cache .
gets the model type .
release the buffer .
sets the http response headers .
retrieve the configuration from the given context .
add a parameter to the request .
connect with https : // stackoverflow . com / questions / <unk> / how - to - set - to - java - to - java
get the md5 hash of the given message .
checks if the given activity is sharing the same intent .
/ * compute the multipart boundary
returns the string identifying the given <unk>
returns the string identifying the given <unk>
checks the given result code .
description : this routine converts a sparse matrix into a dense vector .
description : this routine converts a sparse matrix into a dense matrix .
generate unitary matrix
generate unitary matrices from qr code
compute the singular value of the device .
sets the size of an device pointer .
solve <unk> = b
generate unitary matrices from qr code
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix into a dense vector x .
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix into a dense vector o .
<pre > description : solution of tridiagonal factorization < / pre >
<pre > description : solution of tridiagonal factorization < / pre >
<pre > description : solution of tridiagonal factorization < / pre >
<pre > description : solution of tridiagonal factorization < / pre >
<pre > description : solution of tridiagonal factorization < / pre >
<pre > description : solution of tridiagonal factorization < / pre >
<pre > description : solution of tridiagonal factorization < / pre >
<pre > description : solution of tridiagonal factorization < / pre >
<pre > description : solution of tridiagonal factorization < / pre >
<pre > description : solution of tridiagonal factorization < / pre >
<pre > description : solution of tridiagonal factorization < / pre >
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix into a dense vector x .
description : this routine converts a sparse matrix into a dense vector x .
description : this routine converts a sparse matrix into a dense vector x .
description : this routine converts a sparse matrix into a dense vector x .
description : this routine converts a sparse matrix back into a dense matrix .
description : this routine converts a sparse matrix back into a dense matrix .
generalized symmetric eigenvalue solver a * x = b
generalized symmetric eigenvalue solver a * x = b
description : this routine converts a sparse matrix into a dense matrix t .
checks if the given result is a valid result .
allocates a new host host .
calculates the cursor for a vector .
get the label of a vector .
builds a cursor from a image reference .
calculates the size of the matrix .
converts a buffered vector to a planar vector .
get a vector of pixels .
calculate the upper triangular portion of the data .
calculates the size of the matrix .
rotates a matrix by a scalar .
rotates the x y and z axis of the given matrix .
rotates a matrix by a scalar .
replies the intersection of a point on a segment .
compute the singular value of a matrix .
compute the singular value of a matrix .
compute the singular value of a matrix .
<pre > description : < / pre >
computes the dot product of a matrix .
compute the singular value of a matrix .
compute the singular value of a matrix .
description : this routine converts a cartesian product to a sparse matrix .
cusolverrf extraction for <unk>
computes the eigenvalue of a matrix by a scalar .
computes the dot product of a matrix .
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
computes the dot product of a matrix .
computes the dot product of a matrix .
computes the eigenvalue of a matrix by a scalar .
<pre > --------- cpu host = alpha * host : a * host [ host ] stands for debugging . < / pre >
description : this routine converts a sparse matrix to a sparse matrix .
applies givens rotation to sparse matrix .
computes the eigenvalue of a matrix by a scalar .
computes the dot product of a matrix .
computes the dot product of a matrix .
description : this routine converts a sparse matrix into a dense matrix .
description : this routine converts a sparse matrix into a dense matrix .
compute the singular value of a matrix .
compute the singular value of a matrix .
compute the singular value of a matrix .
compute the singular value of a matrix .
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
complex pivoting matrix .
complex pivoting matrix .
computes the eigenvalue of a matrix by a scalar .
computes the eigenvalue of a matrix by a scalar .
compute the singular value of a matrix .
<pre > {
solve a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = b .
applies givens rotation to a rank - 1 matrix .
compute the singular value of a matrix .
compute the singular value of a matrix .
compute the singular value of a matrix .
description : this routine converts a sparse matrix into a dense matrix t .
description : this routine converts a sparse matrix into a dense matrix .
description : this routine converts a sparse matrix into a dense matrix .
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
computes the eigenvalue decomposition of a given matrix
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
description : a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * f ( a )
description : a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * x * y = a * x = alpha * x * b
description : a * x = a * x = a * x = a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * a * x = a * x = a * x = x * b
description : a * x = a * x = a * x = a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * a * x = a * x = a * x = x * b
generate unitary matrix
generate unitary matrix
description : a * x = alpha * a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * x = a * x = a * x = x * y = a * x = a * x = <unk>
description : a * x = alpha * a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * x = a * x = a * x = x * y = a * x = a * x = <unk>
description : a * x = alpha * a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * x = a * x = a * x = x * y = a * x = a * x = <unk>
description : this routine converts a sparse matrix into a dense matrix .
description : a * x = a * x = a * x = a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * a * x = a * x = a * x = x * b
description : a * x = a * x = a * x = a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * a * x = a * x = a * x = x * b
description : this routine converts a sparse matrix into a dense matrix .
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
description : this routine converts a sparse matrix into a dense matrix .
generate unitary matrix
generate unitary matrix
description : this routine converts a sparse matrix into a dense matrix .
description : this routine converts a sparse matrix into a dense matrix t .
description : this routine converts a sparse matrix into a dense matrix .
description : this routine converts a sparse matrix into a dense matrix .
description : a * x = alpha * a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * x = a * x = a * x = x * y = a * x = a * x = <unk>
description : a * x = a * x = a * x = a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * a * x = a * x = a * x = x * b
generate unitary matrix
description : a * x = alpha * a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * x = a * x = a * x = x * y = a * x = a * x = <unk>
description : a * x = a * x = a * x = a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * a * x = a * x = a * x = x * b
generate unitary matrix
description : this routine converts a sparse matrix into a dense matrix .
description : this routine converts a sparse matrix into a dense matrix .
description : a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * f ( a )
computes the eigenvalue decomposition of a given matrix
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
description : a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * x * y = a * x = alpha * a
<pre > q = c * op ( a ) * b * b * b * b * b * b * b * b * b * b * b * b * b * b * c = a * b * b * b * b * c = a * b * b < / p >
generate unitary matrices from qr factorization
generate unitary matrix q * x * x = b
generate unitary matrix q * x * x = b
generate unitary matrix q by <unk>
generate unitary matrix q by <unk>
description : this routine converts a sparse matrix in block - csr storage format to a sparse matrix in csr storage format .
generate unitary matrices from qr factorization
generate unitary matrices from qr factorization
generate unitary matrix q * x * x = b
generate unitary matrix q * x * x = b
generate unitary matrices from qr factorization
generate unitary matrices from qr factorization
generate unitary matrix q by <unk>
generate unitary matrix q by <unk>
compute the singular value of a matrix .
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
computes the dot product of a matrix .
gets the length of a symmetric matrix .
compute the singular value of a matrix .
description : this routine converts a cartesian product to a sparse matrix .
cusolverrf extraction for <unk>
computes the eigenvalue of a matrix by a scalar .
computes the dot product of a matrix .
compute the singular value of a matrix .
compute the singular value of a matrix .
description : this routine converts a sparse matrix into a dense matrix .
description : this routine converts a sparse matrix into a dense matrix .
description : a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * f ( a )
description : a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * x * y = a * x = alpha * x * b
computes the eigenvalue of a matrix by a = a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * f ( a )
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
description : a * x = alpha * a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * x = a * x = a * x = x * y = a * x = a * x = <unk>
description : a * x = alpha * a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * x = a * x = a * x = x * y = a * x = a * x = <unk>
description : a * x = a * x = a * x = a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * a * x = a * x = a * x = x * b
generate unitary matrix
generate unitary matrix
description : a * x = a * x = a * x = a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * a * x = a * x = a * x = x * b
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
generate unitary matrix q by <unk>
generate unitary matrix q by <unk>
generate unitary matrix q by <unk>
generate unitary matrices from qr factorization
generate unitary matrices from qr factorization
generate unitary matrix q * x * x = b
generate unitary matrix q * x * x = b
description : a * x = b
generate unitary matrix q * x * x = b
description : a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * f ( a )
computes the eigenvalue of a matrix by a = a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * f ( a )
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
description : a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * x * y = a * x = alpha * a
generate unitary matrix q * x * x = b
description : this routine converts a sparse matrix to a sparse matrix in general block - csr storage format .
generate unitary matrix q by <unk>
description : this routine converts a sparse matrix into a dense matrix .
description : this routine converts a sparse matrix into a dense matrix .
generate unitary matrix q * x * x = b
generate unitary matrices from qr factorization
description : a * x = alpha * a * x = a * x = alpha * x = a * x = alpha * x = a * x = alpha * x = a * x = a * x = x * y = a * x = a * x = <unk>
description : this routine converts a sparse matrix into a dense matrix .
<p > <unk> . < / p >
get a list of <unk>
adds a { @link <unk> } .
adds the ending id .
<unk> ++ <unk>
prepare estimate .
returns { @code true } if the character is { @code null } or { @code false } otherwise .
tokenize the given html analyzer .
returns a linked list of { @link <unk> } s .
tokenizes the sentences in a sentence .
get the short form of this <code > <unk> / code > .
/ * ( non - javadoc )
adds attribute values to the attribute .
<p > <unk> . < / p >
builds a html representation of the attribute .
adds a tag to the response .
parses a tag string .
create an attribute values from a <unk> .
/ * ( non - javadoc )
<p > <unk> . < / p >
write the tsne format
get a list of all the metrics .
get a map from the source map to the source map .
creates a new instance of { @link <unk> } .
parse json string .
this method is used to set the metric value .
initiate connection config
returns a list of all {
/ * ( non - javadoc )
one of ways of { @link <unk> ( <unk> ) } .
one of ways of { @link <unk> ( <unk> ) } .
set the { @link <unk> } to use .
create a new <code > <unk> / code > object .
set the given { @link <unk> } .
set the given { @link <unk> } object .
{ @inheritdoc }
get the singleton instance of the passed { @link scope } .
get a list of all matching vat items .
get all columns of a column set .
get a list of all the elements in the passed text .
/ * ( non - javadoc )
create a column from the passed column set .
get a list of all matching vat items .
get all keys in a collection
create a derived <unk> from the passed column set .
updates the functions with the given name .
remove the functions with the given name .
get the short name of the passed { @code string } .
set the name of the passed string .
create a simple value expression
create a { @link <unk> } for a { @link column } .
create a digest using the passed data type .
create a digest key .
sets the number of lines to be displayed .
add a column at the specified index .
one of ways of { @link <unk> ( <unk> <unk> ) } .
one of ways of { @link <unk> ( <unk> ) } .
one of ways of creating a { @link <unk> } .
creates a new { @link <unk> } .
a { @link <unk> } .
create a { @link <unk> } .
create a list of <unk> .
set validation error set .
set the { @link <unk> } to be used as a { @link <unk> }
create a { @link <unk> } .
set the validation error set .
set a { @link <unk> } .
get the last value associated with a pair
send logs to server .
/ * ------------------------------------------------------------
sets the { @link <unk> } .
set up the log level .
get the { @link <unk> } from the { @link <unk> } .
store the logs .
request a connection to a broker
set whether or not the user has already started .
starts a {
reset the size of the size store .
send a { @link <unk> } to all registered { @link <unk> } s .
/ * ( non - javadoc )
this method is called when the { @link <unk> () } method is called .
<p > log . < / p >
prepend a metadata message .
append stack metadata to a json object .
create a jsonobject representing the error message for the given error code .
returns the full stack trace of the given throwable .
captures the entire contents of the given { @link jsonobject } as a { @link <unk> } .
initializes the registered subordinate controls .
/ * ( non - javadoc )
this method is used to update the location of the metadata .
set the metadata for a user .
<p > log . < / p >
<p > <unk> . < / p >
this method is called when the location of the { @link android . app . <unk> ( android . support . v4 . app . android . support . v4 . app . android . support . v4 . app . android . support . v4 . app . android . support . v4 . app . <unk> ) } .
checks if the specified region is a valid region for the given region and prefix .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
get the authentication token from the request .
/ * ( non - javadoc )
returns a list of the parameters in the map .
reads a snapshot record from the stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
returns the time at which the given time index is greater than or equal to the given index .
/ * ( non - javadoc )
returns a list of { @link chart } s .
compute the statistics of the statistics .
returns true if the given locale is a member of the given locale .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets a region of the specified { @link <unk> } and { @link <unk> } .
list region data
register a {
loads region data for a particular region .
get the region object name
returns a new { @link objectname } for the specified { @link <unk> } .
/ * package
register a list of gateway receivers for the specified { @link <unk> } .
converts a { @link jsonobject } to a collection of { @link <unk> } s .
/ * package
runs the example .
<p > <unk> . < / p >
returns a collection of all conditions for the given execution .
flatten a collection of objects .
/ * ( non - javadoc )
get a collection of {
if exist .
if exist .
deliver a remove event .
update the put event .
associates the specified entry in the specified region .
deletes a region for a profile
get an instance of the name off of the kinesis data stream .
sends an error response to the specified {
/ * ( non - javadoc )
returns an array of all the values of the promise that are accepted by the filter .
/ * ( non - javadoc )
reads files from a file .
loads user details by username .
<p > compares two <code > object< / code > objects numerically . < / p >
returns the size of the subsequence captured by the specified region .
executes the query and returns the result .
return a list of all the mbeans in the registry .
/ * ( non - javadoc )
{ @inheritdoc }
fails if the given entry is a map .
returns the name of the given resources .
construct a security listener .
creates a new instance of <unk> .
factory method to create a { @link map } of { @link <unk> } instances .
retrive all search results .
creates a new region based on the given region name .
returns a list of { @link region region } s with the given names .
retrieves a region of the specified region in the client cache .
{ @inheritdoc }
register a { @link <unk> } after { @link <unk> } and { @link <unk> } .
register a { @link consumer } with a { @link <unk> } .
/ * ( non - javadoc )
handles the special webdav methods .
export the region to a list of regions .
export chain region
export region from region .
returns the password for the user .
returns the username for the given user id .
generate random time stamps .
generate random time stamps .
checks if the given value is not null .
add a new value to the set of values .
returns the value of the given { @code values } .
returns the value of the given type as a string .
fills the { @link <unk> } with the given { @link <unk> } .
close datasource .
converts the given { @link file } to a { @link file } .
<unk> <unk> .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
gets the jmx connector object .
/ * ( non - javadoc )
main method .
unregisters the specified { @link org . apache . commons . <unk> . <unk> } with the given name and { @link <unk> } .
/ * ( non - javadoc )
see https : // tools . jboss . org / <unk> / <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk>
shuts down the zone .
映射键值（参考python的zip () <unk> > 例如：<br > keys = [ a b c d ] <br / > <code > [ 1 2 3 ] < / code >
returns a string representation of the given page key .
store result .
映射键值（参考python的zip () <unk> > 例如：<br > keys = [ a b c ] <br > [ 1 2 3 ] <br > [ 3 4 ]
/ * ( non - javadoc )
returns true if the region name is a region of the specified region name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the mime type of the given locator .
replaces the text with the given locator .
/ * ( non - javadoc )
returns the class for the given class name .
returns the memory used to split the given intervals .
returns the values of all the samples in the given <unk> array .
<p > <unk> . < / p >
/ * ( non - javadoc )
check the region for a region .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
retrive all { @link <unk> } s from the given { @link <unk> } .
/ * ( non - javadoc )
version&schema - specific filling into the impl
returns true if all regions are available
visits a region node .
start the search .
director method to build a document
waits for a member to start .
waits for a member to become active .
new filtered changed key value with entry map .
save search results .
/ * ( non - javadoc )
/ * ( non - javadoc )
tag :: <unk> []
returns a list of all the history records for a given query
gets the statistic .
returns the value of the given field in the given object .
returns whether or not the given typemirror is a class or interface .
encodes the given object into a byte array .
deserializes a byte array into a cookie object .
returns an instance of an instantiator for the specified class . if no interface is found an empty { @link illegalstateexception } is thrown .
returns the id of the given {
scans the given {
checks whether the given type is a subtype of the given type .
returns the schema of the table printed by the given key .
/ * package
create a { @link <unk> } .
create a table with the given prefix .
drop table .
drop the table .
drop column in content value .
/ * ( non - javadoc )
handles the delete operation .
emits a delete method for the given object .
generate execute method .
/ * ( non - javadoc )
returns an { @link observable } that can be used as a result of { @link <unk> () } .
gets the field name .
returns the string value of the string or the default if the string is not a string .
capitalizes the first character of the given string .
returns whether or not the given type is of the given type .
returns a builder for the query .
reads a temperature value from the file .
returns the value of the specified { @code type } .
log a message at the debug level .
log a message at the error level .
log a message at the error level .
gets the font fonts .
returns all <code > icon< / code > elements
/ * ( non - javadoc )
add a data point to the alternative data point .
gets the x y - coordinate of a float .
get view panel .
gets the style for the column .
returns the base 64 - bit power of 2 .
copy the values of this matrix to a new double array .
sets the values of the matrix .
compute the euclidean norm .
prints the matrix .
/ * ( non - javadoc )
/ * [ deutsch ] <p > liefert eine <unk> <unk> f&uuml ; r <unk> . < / p >
computes the natural exponent of { @link bigdecimal } x .
calculates the { @link bigdecimal } in the given { @link bigdecimal } x .
returns a { @code bigdecimal } whose value is <code > ( x y ) < / code > .
calculates the logarithm of { @link bigdecimal } and { @link <unk> } to { @link <unk> } .
calculates the { @link bigdecimal } x in the passed in { @link bigdecimal } .
calculates the { @link bigdecimal } with the given { @link bigdecimal } x .
calculates the square root of the database .
prints the pi pi .
gets a date time string .
sets the maximum damage value .
put a float .
prints the table .
add a complex number to this complex number .
subtract two complex numbers .
magnitude of complex number .
magnitude of complex number .
make a copy of the original matrix .
sets the values of this matrix .
computes the euclidean norm of this matrix .
prints the matrix .
/ * ( non - javadoc )
returns a row of the matrix
gets a <code > <unk> / code > object that is a column of this matrix .
copy the values in this matrix .
set the value of this matrix to the given value .
sets the values of the matrix .
set the row to the given row vector .
set the column of this matrix to the given column vector .
return the transpose of this matrix .
creates a new matrix that stores the elements in this matrix .
creates a new matrix that stores the result in <code > this< / code > matrix .
multiply this matrix by a scalar
multiply this matrix by another matrix .
multiply this matrix by another column vector .
multiply this matrix by another row .
print a message to the print stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new image with the given id .
add a data point to the data store .
validate the coefficients .
/ * ( non - javadoc )
$antlr end <unk>
/ * --- internal methods ---
convert a proto type to a { @link <unk> } .
validate style .
/ * ( non - javadoc )
parse a <unk> .
returns the next point in the matrix .
<p > checks to see if the total area is <code > a< / code > <code > b< / code > and <code > b< / code > . < / p >
/ * ( non - javadoc )
sets the values of this matrix to the given value .
sets the min and max bounds of the matrix .
fires a validation event on all registered handlers in the handler manager . if no such handlers exist this method will do nothing .
fires a validation event on all registered handlers in the handler manager . if no such handlers exist this method will do nothing .
compute the inverse of this matrix .
calculates the determinant of this matrix .
compute the euclidean norm .
/ * ( non - javadoc )
set the row to the given row vector .
{ @inheritdoc }
solve a linear equation a * x = b
print the samples .
compute the lu decomposition .
perform forward elimination on the given vector of vector data .
solve a * x = b
solve ux = y - vector substitution
iteratively improve the solution on a linear regression solution
converts a <tt > <unk> / tt > into a <tt > t< / tt > .
/ * [ deutsch ] <p > liefert das <unk> <unk> <unk> . < / p >
diagonal of the <unk> method .
returns the greatest common divisor of 2 integers . <p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
checks the validity of an interval .
adds the value of the specified {
multiply two integers .
returns the base 64 - bit integer ( power ) of the base 64 - bit integer ( power of 2 ) .
region <unk> implementation
/ * ( non - javadoc )
gets data manager .
converts a { @code long } to a { @code string } .
<unk> <unk> <unk>
print the <unk> to the specified stream using the specified writer .
checks if the <unk> coefficient is <unk>
method to validate a float for a gaussian kernel .
checks if the <unk> coefficient is <unk>
method to validate double - precision
creates a gallery date . <p >
returns the next random float .
compute next uniformly distributed uniformly distributed random number .
compute the next <unk> value .
prime a <unk> by using a prime number generator .
returns an array of pseudorandom { @code <unk> } from the given { @code <unk> } .
returns the greatest common divisor of 2 integers . <p >
/ * ( non - javadoc )
/ * ( non - javadoc )
wait for the runnable to be executed in the fx application thread
gets the configuration from the config file .
/ * ( non - javadoc )
creates a new { @link <unk> } instance for the given value .
/ * ( non - javadoc )
load a fxml component .
set the location of the controller .
update an event definition
set the {
adds a <i > <unk> / i > to the { @link <unk> } .
builds a new {
get the host name from service service
gets the <code > <unk> / code > attribute for the given attribute .
wait for attribute to attribute .
fills the feature map with the given features .
send an event to a service payload .
sends events to the queue .
truncate the string .
forwards to the state menu .
exchange for the first matching auth token .
sets the {
returns query clauses for the query parameters .
convert a { @link <unk> } to a { @link <unk> } .
convert service instance to service instance .
returns the names of all the services in the given category .
query the instances for the given service id .
forwards to the state menu
this method returns a map of parameters for the request .
returns a list of regular expressions that match the emoji s result .
creates a json object that represents the json object that represents a json object that represents a valid json object .
{ @inheritdoc }
create a new collaboration .
produce ticket information .
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
maps collection of { @link <unk> } to json representation .
{ @inheritdoc }
/ * ( non - javadoc )
create a new user .
update user .
activate user .
activate a user .
/ * ( non - javadoc )
mounts orientdb password to user .
<unk> ticket .
for update .
create or update a user where username and user .
create a new user where the user where the user has the user .
for update .
create a new user with the given service .
create a { @link com . <unk> . <unk> . api . <unk> }
create a { @link com . <unk> . <unk> . api . <unk> } instance with the specified service role .
get all user where the user has logged in .
gets the user s user by username .
upload a channel to the remote storage
handles an authentication request .
checks if the user has access to the given role .
checks if the user has access to the given role .
{ @inheritdoc }
<unk> > <unk> / code > <unk>
returns the { @link multichoice } instance as a { @link field } .
{ @inheritdoc }
/ * ( non - javadoc )
get the value of the field as a number .
get the value of the field as a number .
get the value of the <code > key< / code > field as a <code > integer< / code > object .
get the value of the field as a number .
get the value of the field as a boolean .
/ * ( non - javadoc )
get the multi <code > <unk> / code > as a <code > <unk> / code > .
get the field id for the given field .
sets the field value .
sets the type of this field .
returns the type of the given field .
/ * ( non - javadoc )
{ @link <unk> }
/ * ( non - javadoc )
populate an elastic search object .
/ * ( non - javadoc )
liberty change for <unk>
returns true if the field qualify as an elastic searches for an elastic searches .
/ * ( non - javadoc )
set the step properties .
calls { @link <unk> ( string ) } and calls { @link <unk> ( string ) } to get the value .
/ * ( non - javadoc )
{ @inheritdoc }
create a flow step .
update flowconfig locally .
get ticket .
produce a flow step version .
returns a { @link <unk> } for the given { @link <unk> } and { @link <unk> } .
create a <unk> by flow parameters .
create a { @link ticket } for the given { @link <unk> } .
create a listing .
create a new { @link com . google . cloud . servlet . api . <unk> } from the given { @link <unk> } .
produce a listing of all { @link ru . yandex . qatools . allure . <unk> . <unk> } s .
produce ticket .
delete a flow step .
delete a flow step .
used by {
gets search query .
get query skills .
~ methods <unk>
search for all fields and values from the query .
this method will search the query and return a list of { @link <unk> } s .
creates a list of { @link form } s .
does the index exist?
/ * ( non - javadoc )
checks if the given string contains a valid import name .
{ @link <unk> ( string ) }
get the program for the given service .
get the modifier for this element .
create a new { @link form } for the specified { @link subject } .
create a list of { @link <unk> } s for the given <code > <unk> / code > .
converts the given string to camel case .
returns the latitude from the provided text .
returns the latitude / longitude value for the specified language .
<p > <unk> . < / p >
/ * ( non - javadoc )
splits the given string into a lower - case string .
decodes a base64 encoded string .
converts a byte array to a string .
converts a string to a byte array .
encodes a byte array into base64 notation .
sets the parameters of a field .
this function handles the request message .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a jvm message to the command .
get a list of values from the return value .
returns true if the given header parameter is a header separator
unzips a byte array into a byte array .
<p > <unk> . < / p >
{ @link <unk> ( form ) } <unk>
{ @inheritdoc }
create a new { @link <unk> } instance from the given { @link form } .
<unk> method .
zap : added this method
executes a custom action .
create a new {
produce ticket .
get a list of {
get form data listing
gets the execute query data .
posts a comment to the form .
looks up the form container .
create a { @link <unk> } .
<unk> > <unk>
<unk> <br >
<unk> <unk> <unk>
get the form container
get <unk> form .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method forms a { @link forms . form . <unk> } .
this method is used to map the form container to form
convert the list of { @link role } s to a { @link list } of { @link role } s .
/ * ( non - javadoc )
creates a new { @link <unk> } .
creates a new { @link <unk> } from the given { @link <unk> } .
posts a comment to the form .
constructs a new { @link <unk> } object with the given id .
get a list of forms for a user type .
create a new instance of { @link <unk> } .
creates a new { @link <unk> } based on the given { @link <unk> } .
get a field value from the configuration .
utility method to get the value of a { @link <unk> } .
<unk> > <unk>
invokes the method on the given object .
returns a string representation of the storage key .
/ * ( non - javadoc )
initialize the channel .
{ @inheritdoc }
get a list of all the descendants of this form .
returns the integer value of a property .
/ * ( non - javadoc )
convert a string to a long .
returns the json object as a json object
{ @inheritdoc }
returns a string containing all of the identities in identities .
/ * ( non - javadoc )
<unk> > <unk>
create an ancestor from this object .
return the list of all descendants of this form .
<p > <unk> . < / p >
get form fields for this view
sets the form fields to be added to the form .
get the list of field values for the given form .
/ * ( non - javadoc )
{ @inheritdoc }
{ @link <unk> ( object ) }
/ * ( non - javadoc )
get the value of the field with the given name . <p >
/ * ( non - javadoc )
create a flow step rule .
create a flow step .
create a flow step .
update ticket .
update flowconfig locally .
update ticket .
produce a {
get all exit rules for a step .
execute a ticket .
produce a {
produce a { @link <unk> } instance .
produce ticket step rule .
produce ticket step rule .
delete flowconfig locally rule .
delete a flow .
delete flowconfig locally .
get the ticket .
login requests to a sheet .
establish a new { @link <unk> } with the given parameters .
/ * <unk>
issue an app request token .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a string representation of the given list of strings .
creates a new { @link <unk> } .
creates a list of users from a user query .
creates a new { @link <unk> } for the given { @link <unk> } .
create a { @link user } for the given { @link <unk> } .
get all user queries .
execute this window query .
update the specified user .
returns the form field mapping for the given <unk> -------------------------------------------------------------
returns a list of form timestamps for the given revision .
returns the <unk> for the given column id .
get the form fields for this form .
get the form .
creates a new { @link queryparameters } from the given { @link resultset } .
create a new { @link role } .
update ticket .
delete ticket .
creates a { @link role } for the given { @link <unk> } .
create a new { @link org . apache . <unk> . broker . <unk> } instance .
{ @inheritdoc }
execute a command
this function executes the given command limit on the given command limit .
{ @inheritdoc }
{ @inheritdoc }
{ @inheritdoc }
returns the value of the field with the given name .
returns the value of the field with the given name .
returns the field value for the given field name .
returns the field with the given name belonging to this transient object .
returns the field value for the given field name .
retrieves the value of the designated field as a boolean .
retrieves the value of the designated field as a <code > bigdecimal< / code > . if the field is not found <code > null< / code > is returned .
retrieves the value of the designated field as a { @link bigdecimal } .
retrieves the value of the designated field as a long .
retrieves the value of the designated field as a number .
sets the field value .
sets the field value .
returns the type of the given form type .
{ @inheritdoc }
convert an elastic search object to a json object .
convert this object to a json object
returns the json object as a json object
/ * ( non - javadoc )
send a request to a flow
get service ticket as hex .
converts a byte array to a hexadecimal string .
{ @inheritdoc }
sets the value of the given field to the given value .
creates a new { @link <unk> } for the given field .
liberty change for cxf begin
create a mapper .
create a new { @link <unk> } .
create a new { @link <unk> } .
sets the value of the field to the given value .
sets the value of the <unk> field in the form .
update the given field with the given <code > <unk> / code > .
gen - last : <unk>
updates the specified field in the form x - www - form .
updates the specified <code > <unk> / code > with the given parameters .
sets the value of the given field to the given value .
get the value of the given field in the form .
creates a new { @link <unk> } instance with the given name and type .
create a new { @link <unk> } for the given form .
move the given field to this sql .
force the action to force .
generate the log data for a table field .
{ @inheritdoc }
create ticket boolean .
<unk> method .
returns a { @link mapper } for the given field .
create a new { @link <unk> } instance .
factory method .
serialize a date / time field .
produce a new field value .
<p > <unk> / p >
returns a new { @link <unk> } instance for the given field .
force the physical binary request .
returns a new instance of the specified type in the account .
creates a new {
create a new index in the index .
{ @inheritdoc }
maps collection of { @link <unk> } s to json representation .
adds a batch of sql statements to the database .
create a { @link flow } instance .
update flowconfig locally .
create a flow connection .
create a flow connection .
delete a flow .
delete flowconfig locally .
set ticket .
answer the field with the given name .
gets the field value .
~ methods ------------------------------------------------------------------------------------------------------------------
pad the given form with the specified <unk>
/ * ( non - javadoc )
get form of form
/ * ( non - javadoc )
flushes the {
{ @inheritdoc }
{ @inheritdoc }
<unk> . <unk>
{ @inheritdoc }
returns true if the token is expired .
create a user notification .
update ticket .
produce ticket .
delete user .
create a new user with the given id .
get all read notifications from the user .
gets all user notifications for a given user .
get all user notifications from a user and date .
returns a new byte array with the given parameters .
validates the given key and returns the hmac .
calculates the hash value of the given password .
calculates the hash value of the given byte array using the given seed .
<p > <unk> . < / p >
<p > <unk> . < / p >
decrypt an aes key .
encrypt data using aes .
sha - 256
/ * ( non - javadoc )
/ * ( non - javadoc )
registers a new handler .
@see <unk> ( string )
sets the echo mode .
compose the message .
create an admin user .
{ @inheritdoc }
/ * ( non - javadoc )
create a new access token for the given client id .
/ * ( non - javadoc )
copy form fields
propfind method .
/ * ( non - javadoc )
get the value of the given parameter .
create a json object from the <unk> .
issues http post request returns response body .
post json .
post json .
delete <unk> .
delete json .
<unk> <unk> <unk>
build a json object .
makes a put request to the given endpoint .
/ * ( non - javadoc )
<unk> form .
this method is called from the base class
build a <unk> from the request .
creates a map from the given name / value pairs .
<unk> > <unk>
encodes a string into a url - encoded string .
this method is used to check if a window is valid .
returns true if the error should be retried .
/ * ( non - javadoc )
returns the ssl context for the moment .
this method closes the { @link <unk> } and { @link <unk> } .
closes the connection represented by this <code > connection< / code > object .
except for <unk>
this method closes the { @link preparedstatement } .
closes the { @link preparedstatement } for the given { @link preparedstatement } .
create a comment from the form .
create a flow item .
creates a scrollable { @link com . <unk> . <unk> . view . <unk> } .
send a single flow request .
sends a request to the specified flow .
/ * ( non - javadoc )
this method is called when a message is received .
update message .
sends a message to a window .
close the user session .
gen - last : <unk>
get the list of forms for this operation .
{ @inheritdoc }
create a list of users .
this method gets the singleton instance of this { @link <unk> } .
get the sql syntax for the given parameters
get the value syntax for the field mapping .
checks if the given text is plain in any of the given strings .
checks if the given string is a select challenge .
{ @inheritdoc }
{ @inheritdoc }
creates a new license resource .
unbind the license .
maps a json object to a json object .
<unk> method .
<unk> method .
create a field .
produce ticket .
create ticket .
factory method .
create a date / time date .
create a date / time field .
create a mapper for the given field .
format a field .
set the ticket flag .
update ticket text .
produce ticket .
update ticket .
update the specified field .
called when a valid record is read .
<p > <unk> . < / p >
set ticket .
create a ticket value .
get a {
produce ticket .
<unk> > <unk>
move the physical binary data .
converts a { @link <unk> } to a { @link list } of { @link <unk> } objects .
converts a { @link <unk> } to a { @link field } .
configures the configuration with the given configuration parameter .
creates a new { @link org . apache . hadoop . configuration . configuration } from the given { @link configuration } .
/ * ( non - javadoc )
creates a new { @link <unk> } with the specified <code > <unk> / code > .
format provider names from <unk> format .
create a new { @link attachment } object with the given { @link attachment } .
get a single attachment .
get a list of all attachments for a form .
{ @inheritdoc }
create a new { @link attachment } object with the given { @link attachment } .
checks if the {
replaces the attribute group attributes with the given <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
$non - nls - 1$
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
renders the concrete settings of the concrete concrete settings .
adds a reference item to the list .
sets the schema location .
obtains the {
<unk> xsd schema xsd .
checks if a {
returns all the {
update the restriction of a method .
recursively walk the xsd .
checks if a {
check if the tag is valid .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the web . xml file of the given file .
validates that the {
check if the xsd is a {
/ * ( non - javadoc )
/ * --- private methods ---
convert a { @link jsonnode } to a { @link map } .
replaces the <unk> elements with the given <unk> .
get the raw content of a node .
checks if the given { @code <unk> } is { @code null } .
creates a { @link <unk> } from a { @link <unk> } .
returns the <unk> value of the given element .
/ * ( non - javadoc )
validates the given attribute name and value .
returns the value of an attribute with the given name .
get the float value of the element with the given name .
validate the value of an attribute .
returns the value of the {
returns the parent of the {
returns the value of the {
creates a {
/ * ( non - javadoc )
/ * ( non - javadoc )
creates an { @link net . <unk> . <unk> . <unk> } from the given { @code klass } .
create a list of { @link net . <unk> . <unk> . <unk> } s .
parse arguments .
method to parse the command line arguments .
parse arguments .
calculates the date for the event .
adds the given path to the configuration .
add footer view .
removes the footer view of the given view .
set the position of the matrix .
sets the value of this rectangle to the specified values .
computes the value of the x y and z of a module .
returns the value of the specified <code > double< / code > value .
compute the length of the two given points .
runs the gradient method
ordinary noise function .
adds the given key and seed to the end of the array .
/ * ( non - javadoc )
get the matrix value .
find the minimizer of an interpolated cubic function .
<p > <unk> . < / p >
recalculates the lower and upper bounds of the upper bound .
change the bounds of this matrix .
process the { @link <unk> } .
<p > process . < / p >
/ * ( non - javadoc )
sets the account id for the account .
<p > <unk> . < / p >
splits a string into a list of strings .
apply a substitution predicate to this rule .
runs the example .
downloads the given source stream and returns the { @link <unk> } .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package private
creates a copy of the given file .
/ * ( non - javadoc )
deletes all files and directories in this directory .
create a { @link <unk> } for the given parameter .
/ * ( non - javadoc )
find the first bugannotation in the message that matches the annotation type .
gets the { @link <unk> } for the given { @link <unk> } .
creates a new { @link <unk> } from the given { @link providercontext } .
{ @inheritdoc }
/ * ( non - javadoc )
returns all methods annotated with {
registers all properties of the given instance .
returns a { @link stream } of jar entries that are contained in the given { @link stream } .
get the dependencies of a class .
fires an { @link <unk> } on the given { @link <unk> } .
creates a new { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
sets the text size of the view .
creates and returns a new { @link <unk> } which allows to set the { @link android . app . view . <unk> } and { @link android . app . view . <unk> } .
creates a copy of the given map .
/ * ( non - javadoc )
creates a new { @code <unk> } instance .
set the value of a property .
returns the value of the named property or the default value if no such property exists .
returns the value of the specified property as a string .
/ * ( non - javadoc )
this method is used to process the { @link <unk> } and { @link <unk> } .
returns the raw class for the given type .
{ @inheritdoc }
returns the parameterized type for the given parameterized type .
replies the type variable for the given type variable .
scans the given { @link parameterizedtype } as a { @link list } of { @link class } s .
puts the given {
creates new instance of fixture .
scans the class loader for the given class .
puts the given closure to the cache .
returns a cache of the class loader cache for the given classloader .
prints the stack trace of this throwable .
prints the stack trace to the print writer .
returns the classes contained in the given text .
/ * ( non - javadoc )
run the reactor .
returns the next revisiontask .
/ * ( non - javadoc )
/ * ( non - javadoc )
submit the task to the spidering task .
/ * ( non - javadoc )
stops the given task .
<unk> { @link <unk> ( runnable ) }
removes the specified job from the queue .
run the job in the request .
sets the blocking mode .
resolves the type of the object to be resolved .
<p > creates a new { @link <unk> } instance . < / p >
list members filtered by the given base url .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
creates a new instance of { @link <unk> } .
adds the given <code > <unk> / code > to the given <code > <unk> / code > .
return an enumeration of the entries in the catalog .
customize the catalog .
load the catalog files from the catalog .
parse the catalog file .
parse the catalog from the given {
/ * ( non - javadoc )
check to see if there is a valid catalog .
parses the given file name .
/ * ( non - javadoc )
/ * ( non - javadoc )
parses catalogs from a catalog .
resolve an external entity .
resolve the ip address .
get the public schema from the resolver .
verify that the local public portion of the jarfile and id are valid .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
this method is used to set the json document to a json document .
/ * public void <unk> ( string <unk> ) { return <unk> . <unk> ( <unk> ) ; }
convert a byte to a hex string .
find the next resource in the catalog .
creates a socket from the given host and port .
splits the given string using the specified text .
creates a new { @code ref } .
/ * ------------------------------------------------------------
<unk> > <unk>
logging an error and return the exception .
creates a modifiable { @link list } of { @code <unk> } objects .
{ @inheritdoc }
checks if the given host and port are available .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
remove the object at the given index .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
----- private methods -----
adds keys to the map .
returns the type of the entry with the given name .
returns the count of the parameter designated by this sqlxml instance .
<p > <unk> . < / p >
inserts the specified object at the specified position .
extract the number of nodes in the tree .
{ @link <unk> ( string ) }
set the thread context classloader .
/ * ------------------------------------------------------------
swaps the elements of the two arrays .
/ * ------------------------------------------------------------
sends a default extension to the builder .
check if the heap is a heap .
/ * ( non - javadoc )
preload the server .
returns the stream handler .
/ * ------------------------------------------------------------
returns the java class for the current thread .
creates a set from the given iterator .
attempt to close an array of <tt > inputstream< / tt > s .
returns a {
returns a new { @link vec } of { @link vec } s of { @link <unk> } .
returns true if the extension of the given resource name starts with the extension .
/ * ( non - javadoc )
/ * ( non - javadoc )
fixes processing of an element .
/ * ------------------------------------------------------------
returns the value for the given key .
/ * ( non - javadoc )
/ * ( non - javadoc )
binds the given name to the given name .
binds the given name to the given name .
/ * ( non - javadoc )
substitute sub - strings from a string .
splits a string into an array of strings .
encodes a byte array into base64 notation .
<p > <unk> . < / p >
trim all occurrences of the given { @code string } from the given { @code string } .
trim all occurrences of the given { @code string } from the given { @code string } .
gets the current value .
returns true if the given filename ends with the given name .
/ * ( non - javadoc )
returns the value associated with the given key .
removes the mapping for the specified key from this map . if the map previously contained a mapping for this key the old value is replaced .
/ * ( non - javadoc )
removes the mapping for the specified key from this map . if the map previously contained a mapping for this key the old value is replaced .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
connect to the given resolution .
removes the mapping for the specified key from this map . if the map previously contained a mapping for the key the old value is replaced .
returns the child elements of the given parent element with the given name .
returns a unique child element with the given tag name .
returns the text child of the given element or <code > null< / code > if it doesn t exist .
returns the content of the given element as a string .
<unk> > <unk>
<unk> > <unk>
stops the timer .
create a { @link threadpoolexecutor } from the given { @link <unk> } .
sets the user blocking mode .
sets the user blocking mode .
/ * ( non - javadoc )
/ * ( non - javadoc )
schedules the specified { @link task } at the specified fixed rate .
convert a { @link collection } of { @link task } s to a { @link <unk> } .
sets the value of the property as a string .
initializes the detail information for the device .
resolve the given uri .
/ * ( non - javadoc )
/ * ( non - javadoc )
resolve an external entity .
resolves an entity by its id .
--- resolver ---
count the number of elements in the vector .
/ * ( non - javadoc )
package - private for testing
resolves all the segments in the specified segments .
returns a list of all known entries in the system .
/ * ( non - javadoc )
adds a catalog parser to the given root element .
given a namespace uri and a namespace uri this method will return the name of the given root element .
read catalog file from url .
deletes the given <code > name< / code > from the given <code > <unk> / code > .
receive notification of the start of an element .
receive notification of the start of an element .
receive notification of the end of an element .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
acquires this object from the pool .
wait for the lock to complete .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the header field .
compareandset next value .
append marker to the help of the cas .
/ * ( non - javadoc )
creates and returns a new snapshot .
compareandset right side .
tries to cas a successor from this node .
get or create a new { @link logger } for the given name .
generates a string representation of a collection of objects .
returns the short name of the class .
convert a subject to a string .
set the file name of the file .
sets the search packages .
/ * ( non - javadoc )
sets the name of the file to use .
sets the name of the file to use .
sets the name of the file to use .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
<p > sets the value of the <code > <unk> / code > property . < / p >
returns an instance of the { @link java . util . instrument . <unk> } .
sets the search packages .
returns the compatible constructor for the given type .
returns a deep copy of the given object .
unwrap an object .
deserialise an object to an object of the given type .
<p > <unk> . < / p >
----- private methods -----
create an instance of { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an unmodifiable set of the entries in this bean .
adds a { @link <unk> } to this { @link <unk> } .
adds all property listeners to the cache .
remove event listener .
fire a property change event .
fire a property change event .
fires a property change event to all listeners .
fires a property change event to all listeners registered by this event .
/ * ( non - javadoc )
loads a property value from the specified map .
reads the properties from the given { @link inputstream } .
returns a new instance of the class specified by the given classname .
/ * ( non - javadoc )
returns a list of all the values in the given paths .
returns a string representation of the property group with the given basename .
/ * ( non - javadoc )
get schema by id .
returns the value of the type specified by the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
loads an { @link inputsource } from an { @link inputstream } .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
normalizes a {
creates a {
get the zone id from a urn
<p > replaces all occurrences of a string with another string . < / p >
<p > start . < / p >
/ * ( non - javadoc )
creates a new { @link <unk> } from the { @link watchservice } .
/ * ( non - javadoc )
convert a byte array to a long value .
returns the hash code of the given array .
creates a new element .
get the value of the field editor .
remove property .
read a file from the catalog .
/ * <unk>
returns an { @link java . util . iterator } with the same values as { @link java . util . map } or { @link java . util . map } .
initializes the system property privileged with the default locale .
/ * ( non - javadoc )
adds a new vertex to the graph .
adds a new vertex to this graph .
adds a new edge to the graph .
adds a new edge edge to the graph .
writes the given vertex to this graph .
removes an edge from the graph .
depth - first search algorithm
depth - first search .
visit a set of variables .
/ * ( non - javadoc )
finds a vertex that is a vertex of the given list .
create a copy of this edge .
xmlfilter methods -------------------------------------------------------
/ * ( non - javadoc )
normalises the given string and returns it as a java . lang . string
parses the given string as an xml element .
parse an xml document from an xml stream .
parse an xml document from an xml file .
create an element from a local part .
parse a qualified name from a qualified name .
returns the value of the given attribute as a string .
helper method to get the value of an attribute .
copy the attributes from the given reader to the given handler .
returns true if the given node is a child of the given node .
returns the child elements of the given node .
get the text content of a node .
returns the child elements of the given node .
get the parent of a node .
/ * ( non - javadoc )
read options .
download file .
returns the host name of the host .
/ * ( non - javadoc )
returns the {
/ * ( non - javadoc )
instantiate a { @link java . util . <unk> } instance for the given property name .
display the class information for a class
get the urls of all urls in the given classloader .
<p > <unk> . < / p >
<p > <unk> . < / p >
creates a { @link <unk> } for the specified class .
returns the package name from the given classname .
extract the package name from the class name .
/ * ( non - javadoc )
convert primitive types to primitive wrapper type .
get all interfaces implemented by the given class .
returns all interfaces implemented by the given class .
returns true if the given type is a number .
create a new instance of this class .
tries to load a class using the current thread s context class loader .
tries to load a class from the class name .
convert an array of java classes to an array of java classes .
returns a write method for the specified property name .
returns the attributes of the specified method .
loads a class from the given class loader .
get a system property .
sets the value of the property as text .
returns the values for a property . <p >
returns true if the given <code > file< / code > matches the given <code > file< / code > .
removes weak elements from the queue .
returns an iterator over the specified objects .
determines if the specified object is added to the specified object .
creates a new { @link <unk> } from the given class name .
determines if the given file should be accepted .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a { @link java . util . set } of this { @link <unk> } .
adds a { @link <unk> } to the list of listeners .
remove a property listener .
<p > <unk> . < / p >
binds the specified property to the given property name .
<p > parse . < / p >
returns a new instance of the given { @code clazz } .
returns a simple cache for the given classloader .
checks if the given string is a null value .
converts a string to a java object .
gets the editor for the given type .
gets the editor for the given type .
converts the given value to the specified type .
converts the given value to the specified type .
fill properties .
sets the java properties of the bean property .
/ * ( non - javadoc )
set the thread context classloader .
/ * ( non - javadoc )
schedules a task for execution .
tries to cancel the next task in the pool .
unbinds the <code > name< / code > from the given <code > <unk> / code > .
unbinds an object from the jndi reference .
returns the string representation of the given class .
invokes { @link <unk> ( context object class ... ) } .
invokes { @link <unk> ( context class class ) } on the given { @link class name } .
add a distinguished name to the ldap tree .
binds the jndi name to the jndi context .
removes the link from the ldap directory .
/ * ( non - javadoc )
<p > <unk> . < / p >
appends the class information to the given object buffer .
gets the set of transitions for a given state .
main method .
computes the signature of the verb .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
{ @inheritdoc }
create a { @link <unk> } based on the system properties .
configures the {
create a catalog resolver .
create a catalog resolver .
/ * ------------------------------------------------------------
returns the class name for the given class .
/ * ( non - javadoc )
resolve the href of href of href .
returns the absolute path to the given relative uri .
loads a class from a class name .
returns the property descriptor for the given key .
sets the value of the property to the specified value .
remove property .
returns the prefix of this element .
returns the name of the resource as a string .
returns the namespace uri for the given node .
returns the namespace uri for the given element .
sets the value of the property as a string .
/ * documented <unk>
returns an input stream for the specified path .
loads the properties from the properties file .
/ * ( non - javadoc )
adds an edge to this outgoing edge .
adds outgoing edges to outgoing edges .
removes an edge from the graph .
adds the edge to this outgoing edge .
adds the edge to this outgoing edge .
return the child node of the given interval .
adds the edge to this set of edges .
returns the cost of this vertex .
a convenience method to create a zip file from the given source file .
adds a zip file to the output stream .
<unk> > <unk> > <unk>
adds a directory to the zip file .
extract a list of files from a file .
returns true if there are no more records in the table .
adds a new task to the queue .
adds a task to the queue .
set the trace tag for this machine .
process task queue .
@deprecated use { @link <unk> () } instead .
installs the { @link java . util . collection } of { @link <unk> } .
/ * ( non - javadoc )
clean up the files that match the given filter .
runs the given action on the fx thread .
gets loader .
create a path for the given model type .
performs the update .
remove fields matching the predicate .
/ * ( non - javadoc )
/ * ( non - javadoc )
log a message at the error level according to the specified format and arguments .
perform double parameter substitution before logging the message at level .
log a message at the warn level according to the specified format and arguments .
log a message at the error level .
perform double parameter substitution before logging the message at level warn according to the specified format and argument .
perform double parameter substitution before logging the message of level warn according to the format outlined above .
log a warning message .
log a message at the error level .
log a message with level { @link info } .
perform double parameter substitution before logging the message at level .
log a info message with a throwable .
log a message at the info level .
log a warning message .
perform double parameter substitution before logging the message at level warn according to the format outlined above .
log a message at the warn level according to the specified format and arguments .
log a message at the warn level .
log a message at the error level according to the specified format and arguments .
perform double parameter substitution before logging the message of level error according to the format outlined above .
log a message at the error level according to the specified format and arguments .
log a message at the error level .
returns a { @link stream } of { @link records } objects that are one of the specified types .
strict conversion of records .
/ * ( non - javadoc )
returns a stream consisting of the elements of this stream along the elements of this stream .
returns a stream consisting of the results of applying the given combiner function to each element of this stream .
returns a stream consisting of the results of applying the given combiner function to each element of this stream .
binds the provided { @link <unk> } to the given { @link <unk> } .
binds the provided { @link <unk> } to the given { @link <unk> } .
configures the { @link <unk> } with the given { @code name } and { @code <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the instruction should be generated .
/ * inherit javadoc
the main method .
starts the <code > main () < / code > element
list all files in the given directory .
read the deviation from the file .
returns the tail of the given string .
adds the given file to the end of the file .
/ * ( non - javadoc )
load the <unk>
<unk> > <unk>
return the index of the first occurrence of the specified node .
get the <unk> path .
reads a unicode identifier from the given { @code sentence } .
<p > <unk> . < / p >
returns the numeric value of the specified code point .
<unk> . <unk>
returns the number of elements in this sequence .
returns the count of missing words in this list .
returns the variance of the words in the samplegroup .
computes the sum of the sum of the sum of the words in the lexicon .
prints a chunk of chunks .
flush the specified <code > <unk> / code > to the specified <code > <unk> / code > .
flushes the specified <code > <unk> / code > from the specified <code > <unk> / code > .
decode a list
decode a list of <unk>
the main method .
creates a new { @code mode } with the given parameters .
<unk> { @link mode } <unk>
creates a new { @code mode } with the given parameters .
creates a new { @code <unk> } with the specified parameters .
parse command - line arguments and return a map of key - value pairs .
/ * ( non - javadoc )
create a schema from the datasource .
returns a json object that can be used to read the content of a { @link jsonobject } .
/ * ( non - javadoc )
executes a method on the given object type .
parse a list of identifiers to a list of objects .
/ * ( non - javadoc )
returns the datasource for the supplied jndi name .
{ @link <unk> }
creates a new { @link <unk> } with the given type .
gets an array of { @link credential } s of the specified type .
gets credential .
create a collection collection of the given type token .
gets credential .
set the elements of the given { @code type } to the given { @code type } .
creates a queue backed by the specified class .
creates a queue backed by the given type .
returns a credential of the specified type .
returns a { @code deque } containing the elements of the given type { @code type } .
gets credential .
create a new instance of the given { @code <unk> } .
map a { @link <unk> } to a { @link map } .
dynamically check that the members of the map are instances of the given type .
shortcut for {
mutates the given {
transforms a { @link object } into a fresh { @link object } .
creates a list of objects from the given class .
returns an array containing all of the elements in the given collection .
gets all implementations of the given class .
returns a new set containing all the elements of the given collection .
create a new {
create a new {
returns a { @code map } whose keys and values are the same as { @code <unk> } .
returns a { @link map } whose keys and values are the same as the given { @link class } .
creates a list of objects from the given class .
create a new { @link option } .
create an instance of { @link <unk> } .
create an instance of { @link <unk> } .
shortcut for { @link <unk> ( class ) } .
shortcut for { @link <unk> ( class ) } .
try to create a new {
try to create a jdbc connection with the given url and password .
check if the table exists in the database .
/ * <unk>
as boolean .
<p > <unk> . < / p >
<unk> > <unk>
this method is called when the database is upgraded to a new version of the database .
write a suffix to a csv file .
create a new { @link <unk> } .
returns the blob or null if the column is null or null .
sets the empty text .
dump the contents of the database to a csv file .
load t .
https : // www . elastic . co / guide / en / elasticsearch / reference / current / docs - multi - get . html
add a query to the query .
add a query to the query .
escapes a newline character .
escapes quotes in the given string .
get a list of runtime values from a csv file .
reads the next value from the stream .
splits a query string into a map of strings .
transforms a map into a string .
convert a list of strings to a string .
<p > join . < / p >
/ * ( non - javadoc )
read a { @link <unk> } from a { @link <unk> } .
write the cache to the output stream .
find the id information for a field .
get the hint of the control interface that this endpoint is associated with .
returns the base dao class name for the given entity .
returns the name of the binding .
returns the first character in the given string .
read text from csv file .
import the given file into the database .
compute value from mapping row .
this method is called when the db is created .
/ * ( non - javadoc )
this method is called when the db version is upgraded .
store and restore tables .
save all tables to a csv file .
restore all tables from a csv file
read the given { @link <unk> } from this { @link <unk> } .
writes the given { @link <unk> } to the given { @link <unk> } .
get the converter for the given value .
add a query parameter to the query .
returns a list of all instances of the given type .
/ * ( non - javadoc )
/ * ( non - javadoc )
set a parameter .
adds a parameter to the query .
add a parameter to the query .
build a string representation of the query .
delete the bean with the given id .
get the value associated with the given id .
create a foreign key object .
save a list of orphaned events to the database .
/ * ( non - javadoc )
update the object associated with the given object .
return a { @link cursor } of this { @link cursor } .
query for rows
returns a { @link list } containing all the items in the specified { @link cursor } .
returns a { @link <unk> } that is used when creating a new { @link cursor } .
converts the {
adds an item to the list of items at once .
defines a where and where clause .
creates a new where clause from the existing where clause .
adds the specified number of items to the where clause .
builds a { @link <unk> } with the given name and value .
method to add items in a where clause .
method without varargs to increase performance
add a subquery to the query .
read the sarl configuration .
this method is used to log out the x - www - form - urlencoded state
get the list of active stacks .
get ccm stack stacks .
adds the plan to the plan .
selects the plan alternatives for the given plan .
register a plan .
sets the plan s policies .
/ * ( non - javadoc )
returns a copy of the signature .
returns the names of the children of this node .
returns a copy of the given <code > unsigned < / code > object .
creates a file appender .
/ * ( non - javadoc )
set goals for this goals .
add goals .
/ * ( non - javadoc )
initialize the selection of <unk> .
gen - last : <unk>
create the worker threads .
gen - last : <unk>
load all extensions from the config file .
register a handler for the given handler .
/ * <unk>
parses the k / v database arguments .
/ * public static <unk> <unk> () { return <unk> ; }
registers a css class with a css class .
registers the supplied number of plans to the given <unk> .
to how much of the type of the property is to be added to the number of the mixin types
initializes the agent .
get the goals of a class .
clone the matching atom annotation
get the goals for the injection info .
loads a class from a class name .
<p > <unk> . < / p >
returns true if the two arrays are the same .
retrieves a description of the plan .
parse command line arguments .
parse the command line arguments .
/ * ( non - javadoc )
the main method .
----- private methods -----
returns the value at the specified index .
returns the function with the given name .
pushes an object onto the stack .
pop a global constant .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
removes the element at the specified position in this list .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
grow the array of levels .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
replies the value of the given key .
returns the { @link org . apache . { @link org . apache . org . apache . java . util . properties } of the given parameters .
returns true if obj is a number .
returns true if the given <unk> is compatible with the rhs .
the main method .
returns the name of the target field .
convert a string to byte array .
/ * ( non - javadoc )
send a auditor message .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a copy of the data contained in the buffer .
set goals .
/ * ( non - javadoc )
add the given belief
/ * ( non - javadoc )
asserts that the main thread is idle .
/ * ( non - javadoc )
returns the field with the given name .
returns the index of the field with the given name .
/ * ( non - javadoc )
parses the command line arguments .
/ * ( non - javadoc )
creates a <unk> belief
/ * example : <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> >
entry point for parsing .
/ * ( non - javadoc )
check if the agent is valid .
remove obsolete elements from the list .
registers a goal to the service
/ * ( non - javadoc )
attempts to remove the journal entry from the list .
parse the active agents .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
move the given list of {
the main method .
/ * <unk>
start the evaluation .
waits for the credentials to be idle .
similar to {
returns true if the pool is idle .
returns true if all parents are projective .
set the agent idle time .
converts an integer to a number .
<p > <unk> . < / p >
<p > compile . < / p >
create a join expression
joins a set of properties to a set of properties .
copy join joins .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
get the single part of the request .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
removes the extension from the request path .
returns the content type for the given file .
get the content type .
check if this parameter has an attribute with the given name .
returns the value of the named attribute .
parse the given expression and convert it into a map of parameters .
/ * ( non - javadoc )
create a file output file .
writes the content of the artifact to the given file .
/ * ( non - javadoc )
scan the annotations of the given context .
load the implementation class .
load the interface classes from the given descriptor .
loads the instance scope from the given scope descriptor .
returns the instance type for the given instance descriptor .
get the table name from the given configuration descriptor .
returns a constructor that matches the given implementation class .
returns an array of { @link <unk> } s for the specified class .
<unk> <unk> <unk>
returns a string representation of the method represented by this class .
returns the annotation of the given class .
returns true if the given annotation is present in the target class .
finds an annotation of the given type .
visible for testing
returns the { @code <unk> } associated with the given { @code clazz } .
returns the {
creates a new instance of { @link <unk> } .
creates a reader for the specified type .
register a { @link <unk> } for the given type .
/ * ( non - javadoc )
--- private methods ---
returns the instance type for the given field .
<p > <unk> . < / p >
checks if the given project is valid for the given project .
/ * ( non - javadoc )
the observer subscribes to the stream .
sets the href attribute of the href / href = http : // www . w3 . org / protocols / rfc2616 / rfc2616 - sec14 . html > http : // www . w3 . org / protocols / rfc2616 / rfc2616 - sec14 . html > http : // www . w3 . org / protocols / rfc2616 / rfc2616 - <unk>
sets the default { @link <unk> } for the operation .
executes the given request and throws an { @link <unk> } .
executes the request .
log a response .
handle errors .
invoke the {
/ * ( non - javadoc )
/ * ------------------------------------------------------------
parses the template metadata and adds it to the map .
clones the given map and returns a new map containing the value .
calculate the capabilities of the response .
returns true if the method is allowed to be allowed .
returns a list of all the classes in the result set .
generates a human - readable human readable message .
/ * ( non - javadoc )
/ * ( non - javadoc )
registers a new instance of { @link <unk> } annotation .
register a child scope .
registers an instance factory for the given instance type .
<p > <unk> . < / p >
creates a processor processor for the given processor processor .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a new instance of the given { @link <unk> } .
register a configuration file .
this method loads the configuration from the configuration file .
adds an argument to the list of arguments .
create target file list .
/ * ( non - javadoc )
<p > marshal . < / p >
/ * ( non - javadoc )
initialize the <unk> .
finds the name of the application .
creates a new { @link type } from the given { @link reader } .
creates a new instance of { @link <unk> } .
/ * ( non - javadoc )
sets the request path .
/ * ( non - javadoc )
waits for a call to { @link <unk> } .
/ * ( non - javadoc )
replies the content of the given arguments .
converts the specified {
gets the content type .
/ * ( non - javadoc )
<p > <unk> . < / p >
handle an observable .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the value of a field .
save the reply to the user .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
parse the {
resolves a collection of documents to a collection of documents .
load the xml files from the given directory .
parse a directory .
returns a collection of <unk> with the given { @code <unk> } .
gets the list of <unk> for a given resource set .
sets model directories .
sets the file extensions for the given file .
add model classes to the list of base classes .
/ * ( non - javadoc )
check if the given section matches the expected values .
compares the computed values for each element in the provided list .
compares two { @link <unk> } s .
this method is used to determine if a row is available .
this method is used by { @link <unk> ( string properties ) }
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of log events for the specified event validator .
/ * ( non - javadoc )
execute the given { @link iterable } of { @link iterable } s of the values in the resultset .
updates the designated parameter with the specified values .
sets the designated parameter to the given <code > java . sql . timestamp< / code > value . the driver converts this to an sql <code > timestamp< / code > value if it is not <code > null< / code > .
{ @inheritdoc }
checks if the argument is a valid args argument .
get the value of the argument from the argument list .
/ * ( non - javadoc )
processes a template .
{ @inheritdoc }
returns a {
inits the model .
get the canonical form of this directory .
write a calendar to a string .
/ * ( non - javadoc )
forwards to the server .
override handlerequest in order to perform processing specific to this component .
configure the application .
sets the size of the dialog window .
prints the given view .
saves the specified value to the file .
copy the contents of the given input stream to the output stream .
opens the window to use .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get all cookies in the request .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ( non - javadoc )
returns a list of { @link method } s that will be annotated with { @link <unk> } .
copy the config from config .
/ * ( non - javadoc )
region autocloseable implementation
sets the remote host .
stores the next event in the queue .
sets the value of the given parameter to the given type .
encrypt the given plain text using the aes encryption .
removes the prefix from the given path .
check if the file is a symbolic dir .
gets the output directories for the given platform .
gets the base path of the given { @link <unk> } .
returns the absolute path of the base path .
returns a new file path .
gets the depth of the path .
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> <unk> <unk>
/ * ------------------------------------------------------------
sends bad request to the client .
/ * ( non - javadoc )
sends a { @link throwable } to a { @link <unk> } .
returns the {
sends a reply to the response .
adds a list of template templates to the request .
<p > <unk> . < / p >
<p > init . < / p >
finds all the references to a template file .
/ * ( non - javadoc )
/ * ( non - javadoc )
set the value of the save button .
loads the dialog from ui .
called when a delete method is called .
capture input variables .
/ * ( non - javadoc )
<p > newinstance . < / p >
creates a { @link <unk> } from a file .
get the backtrace from the given logrecord .
calculate the response headers .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of all the files in the given directory .
<p > gibt die angegebene count . < / p >
formats a node label
creates a string representation of a bean .
/ * ( non - javadoc )
outputs a list of sub - summary files .
/ * ( non - javadoc )
<p > getinstance . < / p >
creates a new instance of the given class using the given bean name .
creates a new instance of the given { @link class } using the given { @link <unk> } .
/ * ( non - javadoc )
returns the {
/ * ( non - javadoc )
/ * ( non - javadoc )
create an instance of { @link <unk> } .
returns a list of model directories for the given configuration .
returns a list of all model resources that are associated with the given <unk> .
{ @inheritdoc }
create a radio button select container .
copies the contents of the given file to the given file .
/ * ( non - javadoc )
helper method to build config .
<p > <unk> . < / p >
/ * --- private methods ---
given an array of parameters return an array of arguments .
creates a new instance of { @link <unk> } .
replies if the given type is an instance of the given type .
loads a { @link <unk> } from the request .
reads the contents of an { @link inputstream } .
/ * ( non - javadoc )
pre - process arguments .
/ * ( non - javadoc )
<unk> { @link <unk> } <unk>
<code > map&lt ; string string&gt ; capacitybytesontiers = 9 ; < / code >
retrieves the {
{ @inheritdoc }
<p > <unk> . < / p >
load fixture .
gets the ssl configuration .
sets the port .
checks if the request contains a post request .
checks if the request is a android request .
{ @inheritdoc }
/ * ( non - javadoc )
removes the element at the specified index .
same as {
attempt to read a { @link reader } from the given { @link inputstream } .
/ * ( non - javadoc )
handle webhook .
{ @link <unk> ( list ) }
<p > <unk> . < / p >
returns a list of { @link <unk> } objects with the given annotation type .
returns the { @link <unk> } annotation for the given property .
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
execute the <unk>
returns true if the given <unk> is a <unk>
/ * ( non - javadoc )
create a managed handler .
creates a managed action method with the given class name .
~ methods **************************************************************************************************************************************
{ @inheritdoc }
<p > <unk> . < / p >
returns the value of the designated column in the current row of this <code > resultset< / code > object as a <code > boolean< / code > .
/ * ( non - javadoc )
adds a set of environment variables to the environment .
/ * ( non - javadoc )
returns the value of the cookie associated with the given name or <code > null< / code > if the cookie doesn t exist .
adds a cookie to the response .
adds a meta - data object to the meta - attributes map .
/ * ( non - javadoc )
gets the list of allowed values .
/ * ( non - javadoc )
returns a generator instance that can be used to create a new instance .
adds a class to the list .
compiles the class .
checks if the given { @link cookie } matches the { @link <unk> } .
returns the value of the file or null if not found .
make sure the end point is a trailing slash .
blocking method to validate .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the current request .
/ * ( non - javadoc )
executes the given <code > <unk> / code > and returns the <code > <unk> / code > instance .
execute an immutable transaction .
invokes { @link <unk> ( throwable throwable ) } and returns the { @link throwable } .
returns a list of files in the directory specified by the filefilter . if the directory does not exist an exception is thrown .
returns an array of all the files in the directory .
returns the last file found in the given directory .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the file name for the given request path .
load the dialog from ui .
de - registers the given driver drivers .
resolve the concrete configuration for the given configuration .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
parses a string to a date using the given format .
<p > <unk> . < / p >
initializes this window . <p >
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the current request .
/ * ( non - javadoc )
{ @inheritdoc }
<p > <unk> . < / p >
this method deals with cross validation tags .
reads the specified jar file and adds it to the { @link <unk> } .
/ * ************************************************************************* java object serialization ***********************************************************************
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieve the content of the response .
commit the content of the http request .
commit the content of the request .
compare two files .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
subscribe an event .
merges the properties of { @code <unk> } .
gets the upload corpora .
add the ipermissions to the user .
retrieves a timestamp from the given input string .
returns the uri of the argument with the specified name or the default value if no such property exists .
/ * ( non - javadoc )
/ * ( non - javadoc )
set the value of the given field to the given value .
returns the names of all the facet names .
performs a click on the view of the given view with the specified receiver .
schedules a timer task .
reset the timer to the given timeout .
cleans up the timer .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns <code > true< / code > if this <code > <unk> / code > is currently available .
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> method .
get a user .
{ @inheritdoc }
{ @inheritdoc }
{ @inheritdoc }
returns a challenge s challenge .
verify the captcha response .
returns a {
handles authentication challenges .
configure the application .
print the usage banner with the specified banner options .
prints the usage message .
/ * package
parses command line arguments and returns the directory name .
/ * this method is used to register a { @link <unk> } after a shutdown hook .
returns true if the command line argument is a multi - listener multi - listener multi - line option .
{ @inheritdoc }
returns the value of the specified class .
returns the method method .
wait for the {
/ * package - private
trigger notification .
called when a trigger is opened .
/ * ( non - javadoc )
inserts the given { @link <unk> } into this one .
/ * ( non - javadoc )
<p > locale . < / p >
format the given format .
setter for answer - sets
getter for categories - gets
setter for categories - sets
getter for <unk> - gets
setter for <unk> - sets
creates a new {
getter for head - gets
getter for filename - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for filename - gets
setter for pos - sets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for filename - gets
setter for <unk> - sets
getter for entities - gets
setter for entities - sets
indexed getter for entities - gets an indexed value -
indexed setter for entities - sets an indexed value -
getter for entities - gets
setter for entities - sets
indexed getter for entities - gets an indexed value -
indexed setter for entities - sets an indexed value -
indexed getter for redirects - gets an indexed value - list of redirects pointing to a wikipedia page .
indexed getter for redirects - gets an indexed value - list of redirects pointing to a wikipedia page .
setter for categories - sets list of wikipedia categories associated with a wikipedia page .
indexed getter for head - gets an indexed value -
indexed setter for head - sets an indexed value -
indexed getter for mentions - gets an indexed value -
setter for token - sets
getter for ref - gets
setter for head - sets an indexed value -
getter for <unk> - gets
setter for answer - sets
getter for <unk> - gets
setter for <unk> - sets
getter for value - gets
setter for value - sets
getter for <unk> - gets
setter for entities - sets
indexed getter for value - gets an indexed value - annotations to be chained .
indexed setter for value - sets an indexed value -
getter for value - gets
setter for component - sets min
getter for <unk> - gets
setter for entities - sets
indexed getter for itemlist - gets an indexed value - annotations to be chained .
indexed setter for value - sets an indexed value -
getter for head - gets
setter for component - sets
getter for <unk> - gets
setter for <unk> - sets
setter for doctype - sets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for encoding - gets
setter for name - sets the name of the title c
getter for head - gets
setter for dep - sets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for subtype - sets
getter for filename - gets
setter for min - sets min
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for head - gets
setter for head - sets
getter for <unk> - gets
setter for head - sets the head of the document
returns the metrics for the given class .
checks if the {
getter for ref - gets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
getter for answer - gets
setter for answer - sets
getter for <unk> - gets
setter for <unk> - sets
getter for id - gets
setter for id - sets
getter for component - gets
getter for component - gets
setter for confidence - sets component of the annotation c
setter for component - sets the head of the dependency relation
getter for ref - gets
setter for categories - sets
getter for <unk> - gets
setter for component - sets
getter for component - gets
setter for <unk> - sets
/ * ( non - javadoc )
getter for categories - gets
setter for answer - sets
setter for names - sets
getter for doctype - gets
getter for <unk> - gets
setter for component - sets
getter for <unk> - gets
setter for <unk> - sets
getter for arguments - gets
setter for token - sets
getter for component - gets
setter for value - sets
returns the index of the next set bit at the specified index .
sets the bit at the specified index . the index should be less than the openbitset size .
build a string representation of a sql query .
execute a transaction .
unmap a byte buffer .
creates a new { @link <unk> } .
<p > <unk> . < / p >
associates the given name with the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
initializes the driver for the given connection .
copy the contents of the input stream to the output stream .
/ * documented <unk>
/ * documented <unk>
joins strings using the given delimiter .
convert a { @link collection } of { @link string } s into a delimited { @link string } .
returns an array containing all of the elements in <code > a< / code > .
build a list of elements from a list .
removes elements from the given list into the given array .
returns a list containing the elements of this list as a list .
support the subscript operator with an objectrange for a list of values .
returns an array containing the elements of the specified type .
extracts the value at the specified position in the given array .
convert a { @link collection } to a { @link list } of { @link string } s .
convert a collection of strings to a list of strings .
rehashes the given array into an array .
count the number of elements in an array .
gets the next separator .
/ * ( non - javadoc )
method to generate a canonical helm 2 connection section
method to generate a canonical helm 2 connection section
method that splits the {
/ * ( non - javadoc )
$antlr end ws
/ * ( non - javadoc )
method to add details about jwt details
generates a concatenated representation of the given source object .
method to add an element at the end of the string
/ * ( non - javadoc )
computes the molecular weight .
parse the command line .
method to build a molecule from the end of the current polymer
check if a given file name is included in the polymernotation
restart the <unk>
/ * --- private methods ---
/ * ( non - javadoc )
extract details of a file
******************* beginning of function ******************** //
method to check if the given polymernotation is a single
method to generate a pretty - serialized json string .
/ * ( non - javadoc )
method that will validate the monomer .
/ * ( non - javadoc )
method to get all polymers given a list of polymernotation
method to get the grouping grouping to the existent size
generates a string representation of the mapper .
method to generate the natural analogue sequence for rna / dna
method to generate a canonical helm 2 connection section
method to generate a canonical helm 2 connection section
generates a string representation of the section section of the array .
method to generate fasta for the given helm2notation
method to get all polymers for the given helm2notation
method to add groupings to the grouping section
method to get all polymers for a given polymernotation
method to set the elements of the polymernotation
method to build the { @link <unk> } for a single polymer
/ * ( non - javadoc )
convert a string to a string .
/ * ( non - javadoc )
******************* beginning of function ******************** //
method to parse a monomernotation
method to check the monomernotation
this method parses the string as an rfc <unk>
method to initiate the action
returns the { @link <unk> } for the given { @link <unk> } .
~ methods **************************************************************************************************************************************
parses the test string .
notation for <unk>
/ * ( non - javadoc )
method to filter the list of googlecloudstorageiteminfo .
method to build molecules for the whole connection .
method <unk> .
/ * ( non - javadoc )
method to validate the {
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last : <unk>
check if a string is a valid pattern .
{ @inheritdoc }
get the statistics .
{ @inheritdoc }
creates a list from a list of edges .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
<editor - fold defaultstate = collapsed desc = <unk> >
returns a list of all nodes in the graph sorted by reachability .
<p > <unk> . < / p >
<p > subscribes . < / p >
subscribes to a method with the specified name and parameter types .
<p > subscribe . < / p >
send an error message to the remote node .
unsubscribe from the stream .
sends a request to the server .
sends a message to the server .
send a sync message to the remote node .
decrypt a byte array request .
add a message to the request .
/ * ( non - javadoc )
/ * ( non - javadoc )
send a response message to a remote node .
deserialize messages asynchronously .
attempts to receive a message from the network .
receive a message .
synchronously receive a message .
receive a message from the remote node .
encrypts or decrypts a given timeout .
send an error message to the remote erlang node .
returns true if the given exception is a non - <unk> server .
print an exception of a throwable to a stack trace .
returns the lock state of the run .
waits for the current thread to arrive on the thread .
tries to unlock the given state .
create and start a worker .
tries to add a worker to a worker .
register a {
tries to shut down the worker pool . stops from the pool and returns immediately . stops and stops the worker thread .
tries to register a worker .
tries to release a worker .
/ * <unk>
scan a work queue and return the result .
waits for a work queue to be reported .
returns the non - empty steal queue .
tries to kill a work queue .
returns a count of the number of currently running tasks in this pool .
tries to terminate the worker queue .
runs the external submitter .
/ * adds a work queue to the work queue .
returns the worker queue for the given worker queue .
tries to find a work queue for a given task .
returns the number of tasks that have been completed by this task queues .
invokes the given task with the given { @code <unk> } .
submits a forkjointask for execution .
returns the total number of steals when the pool is quiescent .
creates and returns a new {
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new empty map .
/ * ( non - javadoc )
attempt to execute the given { @link <unk> } on the given { @link <unk> } .
serializes the given message to a string .
<unk> > <unk>
/ * ( non - javadoc )
creates a new { @code <unk> } with the given elements .
creates a list of elements from the given list .
creates a map from elements from the given elements .
returns the result of { @link <unk> () } .
returns an iterator over the results of this <code > <unk> / code > .
returns a new set containing the elements of the given iterator .
creates a new { @code hashset } containing all elements of { @code elements } .
returns a { @link set } view of the elements contained in the given { @code elements } .
iterates over the elements of the given collection and store the result in the given { @link iterable } .
creates a string representation of the given objects using the given separator .
finds the first element of the given collection that is the result of each element in the collection and if the specified <code > <unk> / code > is <code > <unk> / code > then <code > <unk> / code > is returned .
returns { @code true } if all of the elements of the given iterable are null .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
returns a { @link list } containing all the elements in { @code this } replaced by { @code this } replaced by { @code this } .
creates a <code > set< / code > of type <code > predicate< / code > .
returns a new list containing all of the elements of the specified iterable . the result is returned as a { @link list } .
returns a new list containing all of the elements of the given iterable .
returns a { @link set } containing all the elements of the specified iterable that are contained in the given iterable .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
returns a { @link list } containing all the elements in the collection that match the given predicate .
returns a { @link list } containing the elements of this collection that satisfy the given predicate .
returns a { @link list } containing all the elements of this stream according to the specified range of elements in this stream . if the specified element is { @code null } an empty { @code list } is created with the specified element .
/ * documented <unk>
distinct by applying the given function to each element of the given collection and return a new list with the results of applying the given function to each element .
/ * distinct
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
新建一个arraylist<br > 提供的参数为null时返回空 { @link arraylist }
returns a new collection that contains all of the elements of the specified collection .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . hashset . stream< / code > is preferred for multiple phases operation .
returns a copy of the specified array .
convert an iterable to a list .
returns the items in the iterable as a collection . <pre class = groovytestcase > def list = [ 1 2 3 ] assert list == [ 1 2 3 ] < / pre >
convert an iterator to a list .
returns a { @link map } with the specified size .
/ * documented <unk>
将键列表和值列表转换为map<br > 以键为准，值与键位置需对应。如果键元素数多于值元素，多余部分值用null代替。<br > 如果值多于键，忽略多余的值。
creates a new { @link <unk> } with the given { @code key } and { @code <unk> } .
returns a { @link map } whose keys and values are the same as the given { @link multimap } .
utility function to create a <unk> from two <unk>
{ @inheritdoc }
pushes a task to the stack .
frees the object .
returns the shift of the shift .
creates a { @link <unk> } from { @link <unk> } and { @link <unk> } .
creates a map from iterables of keys and values .
returns a { @link map } whose keys and values are the same as the given { @link multimap } .
utility function to create a <unk> from two <unk>
<unk> > <unk>
将键列表和值列表转换为map<br > 以键为准，值与键位置需对应。如果键元素数多于值元素，多余部分值用null代替。<br > 如果值多于键，忽略多余的值。
returns a { @link map } containing the elements of the given { @code elements } to the given { @code values } . the { @code map } argument specifies the keys and values of the elements of the given { @code values } . if the given { @code iterable } is { @code null } the resulting { @code map }
creates a map from iterables of keys and values .
/ * ---
{ @inheritdoc }
creates a new { @link <unk> } instance .
returns an iterator over the keys contained in this cache .
/ * ( non - javadoc )
returns the name of the resource with the given name .
/ * ( non - javadoc )
process an xml document from web . xml .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
write a portion of an array of characters .
returns a substring of the given string .
append a string to the buffer
/ * documented <unk>
returns a { @code list } of { @code elements } that are equal to the specified { @code comparator } .
returns the index of the first occurrence of the specified element in the array .
gson invokes this method to deserialize an instance of the specified type .
读取certification文件<br > certification为证书文件<br > see : http : // snowolf . iteye . com / blog / 391931
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a method to the given class .
checkstyle : off
adds a cron expression to the cron expression .
sends a { @link <unk> } to a { @link <unk> } .
sends a { @link <unk> } to the given { @link <unk> } .
discovers the { @link <unk> } for the given { @link <unk> } .
{ @link <unk> } --------------------------------------------
checks if the request has been modified since the last modified timestamp of the request .
check if the condition is satisfied or not .
set file download header .
<unk> <unk> <unk> <unk> <unk>
encodes the given parameters with the given parameters .
encodes http basic http basic authentication header .
returns true if any of the given roles has any of the supplied roles .
get the application configuration .
<p > process . < / p >
template method .
create project code .
returns the value of a { @code long } value .
get the filename of the given path .
returns the extension of a file or <code > null< / code > if not found .
apply the given relative path to the given relative path .
cleans a path with the given path .
<p > converts an array of strings to a string array . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
convert a collection of { @link collection } s into a delimited { @link string } .
appends a string to the builder padding .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<unk> > <unk>
<p > <unk> . < / p >
aligns a character to a character .
<p > <unk> . < / p >
<unk> > <unk>
/ * ( non - javadoc )
converts the size of a size to a human readable format .
like { @link <unk> ( string ) } but returns { @code null } .
/ * ( non - javadoc )
/ * ( non - javadoc )
获取 token <unk>
removes the session attributes from the session .
returns a cmsobject with the given username and password .
returns a {
sets the user s login members .
hashes a password using the given password .
saves a member in the request .
<unk> a <unk>
gets the value of a cookie in the request .
encrypt a string .
/ * ( non - javadoc )
/ * package
method to decrypt a <code > string< / code > <code > <unk> / code > <code > key< / code > <code > key< / code > <code > key< / code > <code > <unk> / code > <code > key< / code > <code > <unk> / code > <code > key< / code > and <code > <unk> / code
creates a new { @link response } with the given message and code .
creates a { @link iterator } that iterates over the elements in the given { @code array } .
create a new failure response
creates a { @link iterator } that iterates over the elements of the given { @link object } .
deregisters a { @link <unk> } .
creates a new response forbidden with the given message and code .
gets the error message .
creates a new { @link response } with the given { @link string message } formatted with the given { @link string code } .
<p > failure . < / p >
creates a new { @link response } with the given { @link string code } .
generate key code .
encode the given password using the given password .
/ * ( non - javadoc )
returns the excluded list of method names .
creates a { @link <unk> } for the given { @link <unk> } .
returns the list of { @link <unk> } s for the specified { @link <unk> } .
create action for action key .
returns the { @link annotation } for the given { @link method } .
returns the list of annotations for the specified class .
returns true if the method is annotated with { @link <unk> ( method ) } .
authenticate user .
perform authentication .
/ * ( non - javadoc )
removes the final slash from the given path .
gets the browser destination information .
/ * ( non - javadoc )
returns the ip address of the given request .
check if the request is a robot .
find cookie by name .
adds a cookie to the response .
returns the domain name of the given host .
returns true if the ip address is in a valid ip address .
/ * ------------------------------------------------------------
returns a request parameter as integer .
returns the value of the given request parameter or the default value if the parameter is not found .
returns a request parameter as long .
this method is used to check whether the request is a ajax request .
<p > <unk> . < / p >
log a message at debug level .
get the { @link <unk> () } method of the { @link <unk> () } method .
sets the error correction level .
sets the background color of the textview .
set the color of the robot .
gets hints for hints .
returns a list of { @link <unk> } objects .
validates a {
convert a list of strings to a html string .
<p > <unk> . < / p >
convert this report to a string .
convert a string to a smiles string .
returns a byte array for the given byte array .
convert a charsequence to a byte array
return the char array for the given byte array .
converts a hexadecimal string to a byte array .
convert a charsequence to a byte array
returns <code > true< / code > if the given character is a sub - delimiter character .
returns true if the character is a non - alphanumeric character .
returns the index of the first occurrence of the specified character starting at the specified { @code string } .
returns the index of the first occurrence of the specified character starting at the specified position . the index of the first character is the index of the first character in the given string .
returns true if the given string contains only digits .
<p > convert a <code > string< / code > to an array of strings . < / p >
returns the currency data for the given locale .
/ * [ deutsch ] <p > getinstance . < / p >
gets the locale from the given language string .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
<p > <unk> . < / p >
returns a relativedatetimeformatter for a particular locale .
method to write an object to a destination .
adds an { @link <unk> } to this { @link <unk> } .
render the given template .
adds the given {
adds a {
/ * ( non - javadoc )
/ * ( non - javadoc )
validate the content type header and return it .
缩放图像（按高度和宽度缩放）<br > 缩放后默认为jpeg格式
calculate the optimal width and height
generate qr image .
returns the content of the given image as a base64 encoded string .
parses the specified file and adds it to the <unk> .
creates a new { @link <unk> } from the given { @link map } .
replace placeholders in the template with the given macro resolver .
invokes the { @code <unk> } method on the given { @code <unk> } .
<unk> <unk> <unk>
sets the credentials for the service .
initializes the resttemplate .
render the ajax error log message .
render a message .
<p > <unk> . < / p >
attempts to append the given path to the end of the path .
/ * ( non - javadoc )
lists the data tables .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
validate the given model .
sets the label of the given object .
/ * ( non - javadoc )
performs the given sql query calling { @link <unk> ( string list ) } with the given parameters .
check if the request is a logout .
returns a { @link <unk> } with the first { @link email } or { @literal null } if not found .
get the value of the <code > name< / code > property as a <code > char [] < / code > . if the name is null or empty this method returns the default value provided .
get the value of the <code > name< / code > property as a <code > char [] < / code > . if the name is null or empty this method returns the default value provided .
<p > <unk> . < / p >
/ * ------------------------------------------------------------
/ * ( non - javadoc )
register a { @link <unk> } with a { @link <unk> } .
converts a hex string to a byte array .
base62 ( <unk> ) <unk>
url encode a string .
url - decode a string .
returns a list of all the elements of the injector in the injector .
get the stack trace of the current application .
sorts the specified array of memory .
propagates { @code metrics } to { @code log } .
return a filtered collection of metrics .
checks if the given string is non - null .
encodes a string into a comma - separated string .
<p > unchecked . < / p >
returns the stack trace as a string .
<unk> <unk> <unk>
iterates over the page by superclass .
iterates over the entire page by wiki page .
builds a page of records with pagination parameters .
returns a {
returns optional charset
/ * ( non - javadoc )
executes a mongodb query .
gets a mongodb document .
closes the output stream .
closes the input stream .
copy all of the bytes from the input stream to the output stream .
copy the contents of the given input stream to the output stream .
copy the contents of the given input stream to the output writer .
copy the contents of the input stream to the output writer .
copy the contents of the given reader to the given writer .
copy the contents of the given input stream to the output stream .
copy reader to stream .
read binary data from an input stream .
checks to see if the input stream is equal to the given input stream . if the input stream is not a buffered input then this method returns false .
<unk> the contents of the given input stream to the given output stream .
applies the given { @link io . <unk> . <unk> } to the given { @link org . apache . ojb . broker . <unk> } .
creates a function that sets the values of the given function to the given function .
creates a new multimap that contains the result of applying the given function on each element of the multimap .
register a gauge that reports the value of the specified { @link function } .
assembles a new instance of the specified component .
returns a { @code collector } that filters the given { @code predicate } using the given { @code predicate } .
returns a sequential ordered { @code intstreamex } containing the elements of { @code list } with the given predicate .
returns the elements of the last set that satisfy the given predicate .
register a custom randomizer for a given predicate .
removes the element at the specified index .
<unk> > <unk>
converts the given xml string to an object of the given type .
<p > <unk> . < / p >
returns the url for the given resource location .
determine if the given url points to a jar file .
creates a new active { @link pipelines } instance .
zip the given file .
archive a zip archive to a directory
/ * ( non - javadoc )
initialize the logging manager .
construct a new instance of the { @link <unk> } .
initialize the dialog window .
returns true if the given string starts with the given pattern .
returns <code > true< / code > if the given <code > type< / code > is a built - in type .
returns true if the given type is a parameterized type .
returns { @code true } if { @code type } is a supported collection type .
returns true if the given type is an array type
returns the raw type of the given { @link type } .
{ @inheritdoc }
checks if the given type is a collection type .
returns true if the given type is a valid value type .
registers a converter type with the given converter .
returns the raw type of the given { @code type } .
<p > <unk> . < / p >
/ * ( non - javadoc )
checks if the given string is a mobile or not .
check if the given string is a valid { @link <unk> } .
check if the given string is a valid phone number .
checks if the given string is a <unk> .
check if the given string is a valid one .
check if the given string is a valid zip file .
check if the given string is a valid currency value .
returns true if the given string is a <unk> .
check if the given string is a valid url pattern .
check if the given string is a valid date pattern .
returns { @code true } if { @code value } is empty .
<unk> - <unk>
<unk> <unk> <unk>
creates a swagger2markupconverter . builder from an <unk> .
convert an input stream to an bgr spectrum image
convert an input stream to an bgr spectrum image
<unk> <unk> . <unk>
gen - last : <unk>
creates a new { @link <unk> } with the specified source file .
gen - last : <unk>
/ * ( non - javadoc )
<p > getfield . < / p >
/ * ( non - javadoc )
initialize the messaging engine .
/ * ( non - javadoc )
initialize the configuration .
return the version of the <unk> .
returns the package name for the given class .
/ * package
decodes a base64 encoded string .
converts a hexadecimal string to a byte array .
load properties from a file .
/ * ( non - javadoc )
read a string from a file .
reads a byte array from a file .
read a byte array from an input stream .
write content to a file .
copies the input stream to the output stream .
copy the contents of an inputstream to a file .
copies the contents of the given source file to the target directory . if the target directory does not exist it will be created . if the target directory does not exist it will be created . if the target directory does not exist it will be created .
/ * package
adds the permission controls to the { @link net . dv8tion . jda . core . entities . permissionoverride permissionoverride } .
compares this { @link <unk> } with the given { @link <unk> } .
compares this instance with the specified { @code other } and { @code other } . <p > the comparison is based on the total length of the amounts . it is consistent with equals as defined by { @link <unk> ( object ) } .
/ * [ deutsch ] <p > liefert eine kopie mit dem angegebenen <unk> . < / p >
returns a copy of this monetary value multiplied by the specified value .
returns a copy of this monetary value multiplied by the specified rounding mode . <p > the scale of the result will be the same as the scale of the result . <p > the scale of the result will be the same as the scale of the divisor . the scale of the result will be adjusted to
creates a new array based on the given size .
<unk> <unk> .
creates a new instance with the specified { @code <unk> } and { @code <unk> } .
creates a new security handler .
loads a list of properties from a { @link <unk> } .
serialize document to a string .
load a chemfile from a file .
private method to parse a chemfile object .
loads a xml document from a string .
check if the given element is valid .
sign saml element .
/ * ( non - javadoc )
<unk> > <unk>
returns the class of the given object instance .
returns true if the given class is a non - null value .
returns the class name for the given class .
gets the package name of the given class .
gets the package name from a fully qualified class name .
returns the qualified name of the given class .
returns the qualified name of the given method .
returns the constructor if available .
循环向上转型 <unk> 并强制设置为可访问 .
checks whether the given method is a direct method level method .
checks if the given class is a primitive or primitive wrapper .
checks if the given class is a primitive array .
checks if the given { @code class } is a primitive array .
<p > <unk> . < / p >
returns true if the specified type is assignable to the specified type .
returns { @code true } if the given { @code type } is a primitive type .
converts a resource path to a class name .
convert class name to a resource path
add a resource path to a package path .
get all interfaces of the given object instance .
returns all interfaces implemented by the given instance as set .
returns all interfaces that the given class implements as set as a set .
creates a new { @link <unk> } for the given interfaces .
initializes the {
create project properties file .
replaces the value of the given key with the given value .
apply the given {
returns the pid of the process object .
write a pid to a file .
returns a map of variable names to the given uri .
<p > <unk> . < / p >
associates the specified permission with the given permission .
returns true if the given class is a subclass of the specified class .
returns true if the given class is an instance of the specified class .
<p > reflect . < / p >
returns a new {
creates a new { @code <unk> } with the given { @code extension } and { @code extension } .
create a singleton instance of { @link <unk> } .
returns a list of all the classes in the given class .
returns true if the given objects are equal .
/ * ( non - javadoc )
produce a maker object .
returns true if the given type is compatible with the given type .
adapts a parameter to a parameter .
convert the given object to an object .
<p > <unk> . < / p >
/ * ( non - javadoc )
adds the request cookies to the request .
parses the session from the session .
calculates the md5 digest of the given byte array .
initialize the <unk> .
sets the validation configuration .
adds a condition to the list of parameters .
set the value of a parameter .
发送es model .
creates a response object from the given object .
creates a new { @link <unk> } instance with the given value .
creates a new { @link <unk> } with status { @link <unk> } .
#func <unk> <unk>
#func <unk> >
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
convert a comma - separated char array to an int array .
returns the sum of all the elements in an array .
counts the number of clear bits .
returns the age of the <code > <unk> / code > parameter
same as <unk>
same as <unk>
<unk> > <unk>
<unk> > <unk>
returns true if the given date string is a leap year .
/ * ( non - javadoc )
returns the value of the given key from the parameters map . if the key does not exist it will return the given default value .
get override body
sets the body of the body of the body .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
show the dialog .
/ * ( non - javadoc )
invokes the annotated methods annotated with the given { @code <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link <unk> } instance for the given { @link method } .
/ * <unk>
check if a new table is created .
<unk> > <unk>
sets the first column of the query .
delete a list of objects by ids .
<unk> > <unk>
iterates through the { @link <unk> } and returns a { @link page } with the results of { @link <unk> } .
gets the application mode .
determines whether an exception is propagated on the given method .
/ * ( non - javadoc )
/ * ( non - javadoc )
constructs and initializes a new { @link <unk> } with the given { @link type cause } and { @link <unk> } .
get method param names
<p > save refresh settings . < / p >
checks if the given string matches the pattern .
initialize the panel .
main method .
init method .
/ * ( non - javadoc )
<unk> > <unk>
move the controls to the properties file .
set the file properties to upload .
returns the instance of the { @link <unk> } annotated with { @link <unk> } annotated with { @link <unk> } .
executes the query and returns the result .
reads the next file from the stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
gets the entity table .
checks if the given class is a supported entity type .
gets the protobuf annotation for a given method .
process all fields .
returns the value of the specified field in the given field .
{ @link java . util . map }
gets the setter fields .
returns a singleton instance of { @link <unk> } .
<p > calculate total rows for pagination . < / p >
move the controls to the properties file .
setupsfields method .
<unk> > <unk>
returns the { @link mapper } for the given { @link type } .
creates and configures a modifiable { @link objectmapper } for the given { @link objectmapper } .
creates a json factory that can be used to convert the json content to a json object .
<unk> > <unk>
<p > <unk> . < / p >
converts the given json string to a generic type reference .
<unk> > <unk>
<unk> > <unk>
decodes a json parser to a bean .
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
converts the given json string to an object of the specified class .
generates a json representation of the given object .
close connection .
close a prepared statement .
closes the given result set .
get property .
<p > fill given field . < / p >
sets the borders of the shadow bounds .
creates a new instance of { @link <unk> } .
<p > <unk> . < / p >
<p > send . < / p >
create a new request with the given url and body .
/ * ( non - javadoc )
gets client - side of a transliterator .
gets the signature for the given credentials .
gets the http response .
sends a request with the given type and body .
sends a post request to the given url with the given parameters .
verifies the body of the request .
gets the body of the given { @code body } using the given { @code body } as the body .
gets the body of the body .
gets the body of a key - value pair .
gets the http response .
create a modelform object for the given method .
/ * ( non - javadoc )
applies the specified http request .
returns the content of the response as a string .
returns the credentials for the given username and password .
sets the authentication credentials for authentication .
/ * ------------------------------------------------------------
--- function ---
returns a list that contains the elements in the target list that match the given criteria .
returns a list that contains elements that match the given set of elements .
returns a { @link set } view of the given elements .
{ @inheritdoc }
authenticate user .
read user record .
gets the connection .
adds a double to the end of the double .
calculate the sub - amounts of an v1 .
returns how many amounts of an array of values .
calculate the multiplication of two - double values .
calculate the multiplication of two - double values .
提供 ( 相对 ) 精确的除法运算 当发生除不尽的情况时 由scale指定精确度
提供 ( 相对 ) 精确的除法运算 当发生除不尽的情况时 由scale指定精确度
保留固定位数小数<br > 例如保留四位小数：123 . 456789 = 》 123 . 4567
提供 ( 相对 ) 精确的除法运算 当发生除不尽的情况时 由scale指定精确度
convert a bigdecimal to a bigdecimal .
float constructor .
/ * ( non - javadoc )
convert a date string to a date .
parses a date out of a string using the specified locale .
copy unmapped attributes from target object .
copy the attributes of the given object to the target object .
<p > <unk> . < / p >
generate a set of declarations for a given type .
<p > fill given field of given type . < / p >
add the filter to the file .
{ @inheritdoc }
returns a new array with the same type as the given { @code array } .
/ * documented <unk>
/ * documented <unk>
/ * documented <unk>
copy the contents of the given input stream to the output stream .
copies the input stream to the output stream .
create the object from the class name .
attempts to convert the given date string to a date object .
convert this date to a string .
check if the properties file should be filtered .
/ * ( non - javadoc )
set a property .
adds a window to the window .
returns a { @link set } view of the entries in this set .
/ * ( non - javadoc )
print the help for <code > options< / code > with the specified command line syntax .
parse a command line .
initialize the { @link <unk> } .
init this property .
get the next ancestor converter .
create a new {
/ * ( non - javadoc )
/ * ( non - javadoc )
init this file .
move the physical binary data to the next row .
main visualizer setup .
initialize this application .
initialize the application .
create a collection of urls with the specified class loader .
returns a collection of urls for the given package and subpackages .
create a new instance of { @link <unk> } .
returns the default { @link classloader } for the current thread .
returns the class of the given class name .
returns the class represented by the given class name .
returns the canonical name of the given class .
creates a new { @link resource } for the resource with the given resource name .
/ * ( non - javadoc )
loads properties from a class file .
<p > <unk> . < / p >
initialize the uri .
initialize the uri based on a uri string .
initialize the scheme from a uri string spec .
initialize the scheme from a uri string spec .
initialize a path from a uri string spec .
initialize the path part of the uri . <p >
set the scheme for this uri .
initialize a path from a uri string spec .
set the host for this uri . if it is a well - formed address for a uri string is set to null .
set the port for this uri . if the requested port is not set this method will throw a <unk> .
set the path for this uri .
append a path to the end of this uri . if the given path is null the path is appended to the end of the path . if the given path is null the path is appended to the end of the path .
set the fragment for this uri from a uri string .
set the fragment from a uri string . this method is used to indicate a specific uri for a uri .
returns a string representation of this uri .
returns true if the given string is a valid scheme name .
encodes a string into a byte array .
decode a string to a string .
<p > write . < / p >
创建 { @link preparedstatement }
create a { @link preparedstatement } with the given parameters .
initializes the <unk> .
get the <unk> .
gen - last : <unk>
returns the clipboard contents of the clipboard
get the clipboard contents of the clipboard
gets the visible action .
waits for a file to be opened .
connect this streamlet to <unk> .
add query parameters to the query .
create a list of { @link <unk> } s .
create a new { @link <unk> } from a { @link <unk> } .
get the service registered for the given type .
get the authorization url for this request .
parses the response and returns the response .
compares the { @link <unk> } and { @link <unk> } .
retrieves a thumbnail from the specified path .
/ * <unk>
inserts the specified element at the tail of this buffer .
/ * ------------------------------------------------- [ union ] ---------------------------------------------------
returns an array containing all of the elements in this list in proper sequence ( from first to last element ) .
returns an iterator over the elements in this list in the order that they are returned by the iterator .
<p > <unk> . < / p >
rounds the given string to a string
<p > <unk> . < / p >
/ * public static string <unk> ( string <unk> ) { string <unk> = new <unk> () ;
{ @inheritdoc }
gets the encoding for the given text .
serializes an object into an xml object .
transforms an array of operation { @link object } into an xml - compatible xml representation .
<p > <unk> . < / p >
this method is used to create a bean from xml string .
helper method to parse a single - valued xml document .
initializes the xstream for xstream serialization .
returns driver class name .
/ * ( non - javadoc )
<p > map . < / p >
accessor method used to retrieve a date from the cache .
/ * ( non - javadoc )
{ @inheritdoc }
<p > insert entity request . < / p >
returns true if the given class name is available .
checks if the rhs is an instance of the given class .
creates a new instance of { @link connection } .
returns the authorization code for the given authorization url .
creates a new prepared statement .
returns the entry at the given index .
<p > retrieve entities . < / p >
creates an instance of { @link <unk> } .
<p > add user . < / p >
visit a {
visits a type declaration .
/ * ( non - javadoc )
visits a formal parameter declaration .
adds a new controls to the view .
add all the screen listeners .
set this menu property to a properties object .
get this property . <p >
<unk> method .
create a new instance of { @link connection } .
gets the property value .
<p > process entity request . < / p >
returns a predicate that returns true if the given set of modifiers has the given modifier .
returns a { @link <unk> } for the given declaration .
/ * ( non - javadoc )
converts a filter to a declaration .
returns a filtered collection of {
returns a list of { @link directive } s that matches the given { @code <unk> } .
/ * ( non - javadoc )
sets the value of the specified field in the given object to the given value .
<p > <unk> . < / p >
<p > <unk> . < / p >
get the super class type of the given class .
returns the class list of the given types .
obtains a byte array of { @link <unk> } s of the given type .
returns the class of the given class for the given class .
convert an array of interfaces to a class .
canonicalize the given map with the given parameters .
main visualizer setup .
move the controls properties to the properties file .
setupsfields method .
<unk> method .
get the domain name from the url .
<unk> method .
/ * ( non - javadoc )
this method is called to finish the transfer .
/ * ( non - javadoc )
returns true if the file should be skipped .
main method .
convert this button controls to the properties file .
set the value of this property .
disposes the transaction .
gets the connection .
<unk> > <unk>
fill properties .
creates a deep copy of the source map .
set up the <unk> params .
/ * ( non - javadoc )
<unk> method .
<unk> method .
get the backup file
creates a new map with the specified key and value .
/ * ( non - javadoc )
applies the request to the given action .
audit connection .
the main method .
/ * ( non - javadoc )
<unk> method .
/ * ( non - javadoc )
fixes a property name .
converts a byte array to a string .
<p > process entity request . < / p >
/ * ( non - javadoc )
gets all indexes for a given name .
parse sql .
factory method for create a new { @link <unk> } .
/ * ( non - javadoc )
counts the number of elements in the area .
<p > make filter with load . < / p >
<p > process . < / p >
authenticate user .
<p > retrieve entities . < / p >
create an inputstream from an inputstream .
create an { @link transfers . <unk> } from an existing { @link properties } .
move the file to the destination file .
/ * ( non - javadoc )
returns true if the schema supports column length
/ * ( non - javadoc )
determines the sql type .
return the character corresponding to the name of the character or <code > null< / code > if there is no such character .
returns the executable method with the given name and parameter types .
search for executable executable parameters .
checks if two classes are compatible with the rhs .
/ * ( non - javadoc )
--- normalize ---
<p > combine the parent of the given parent { @code parent } and { @code child } . < / p >
apply the given relative path to the given relative path .
converts the given path separators to a unix path .
converts a windows path to a windows path .
converts the given path separators to a unix separator .
creates a new instance of <code > <unk> / code > .
returns a constructor that matches the given parameter types .
returns a constructor that matches the given parameter types .
returns the method with the given name and parameter types .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
create a { @link <unk> } { @link <unk> }
serializes the given {
creates an instance of {
convert a collection to a json object .
gets the value of the given field .
sets the value of the specified { @code object } to the given { @code <unk> } .
parses the passed { @link file } s into a { @link <unk> } .
/ * ( non - javadoc )
<p > retrieve start data . < / p >
create a new result set .
method to execute the search .
converts a map of api labels into a map of { @link <unk> } .
<p > retrieve param . < / p >
get the bounds of the given type .
resolves the type variable for the given type variable .
returns the bounds of the given { @code type } . <p > <b > note : < / b > if the given { @code type } is a { @link parameterizedtype } or { @code type } is a { @link parameterizedtype } or { @code class } then a { @code <unk> } will be used
returns the generic supertype of the given class .
<p > fill entity by field name . < / p >
returns the last modified timestamp of the metadata file .
<unk> method .
{ @inheritdoc }
/ * ( non - javadoc )
<unk> method .
add a directory to the list of files .
poll the pool and close it .
executes the polling on the given <unk> .
create a new instance of the given class using reflection .
creates a new instance of this class using reflection .
循环向上转型 <unk> 并强制设置为可访问 .
get all declared methods of a class .
<unk> > null< / code > <unk>
returns all constructors in the given class .
<unk> > null< / code > <unk>
returns all methods annotated with given annotation .
collects all public constructors of the given class .
close the database .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new prepared statement .
/ * ( non - javadoc )
main method .
move the controls to the properties file .
set the file properties to upload .
create a count of the number of occurrences of the query
add a file to the end of the file .
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> method .
returns the next file in the zip file .
/ * ( non - javadoc )
<p > make a request . < / p >
get the request cookies token .
get the auth form token .
/ * ( non - javadoc )
returns the java class corresponding to the given class name .
{ @inheritdoc }
<p > setter for <unk> . < / p >
this method reads the class file and returns true if the class is read .
reads a constant pool entry .
returns null if the string is null or empty .
if the passed string is <code > null< / code > returns <code > null< / code > .
returns the default if the given string is empty or the default is null .
returns the default if the string is blank or blank or blank or blank . if no such string is blank or the default string is returned .
checks if two strings are equal ignoring case .
returns <code > true< / code > if the given <code > str< / code > matches <code > null< / code > or <code > null< / code > otherwise .
checks if the given string ends with the specified suffix .
returns the index of the first occurrence of the specified character starting at the specified index . the index of the first character is the index of the first occurrence of the specified character . the index of the first character is the index of the first character of the first character of the first character of the first occurrence of the
returns the index within the last index of the first occurrence of the specified character ignoring the case of the first character in the given string .
returns the index of the first occurrence of the specified character starting at the specified index . the index of the first character is the index of the first character of the first character of the first character of the first character . the index of the first character of the first character is the index of the first occurrence of the
returns the index of the first occurrence of the specified character starting at the specified index . the index of the first character is the index of the first character in the given string array . the index of the first character is the index of the first occurrence of the second character in the string array .
returns the index within the last index of the first occurrence of the specified { @code string } ignoring upper / lower case .
returns the index within the last index of the first occurrence of the specified character starting at the specified { @code index } ignoring the index of the last occurrence of the specified { @code char } .
returns the index of the last occurrence of the specified character starting at the specified index .
returns the index of the first occurrence of the specified <tt > string< / tt > array .
returns the index of the last occurrence of the specified substring in the given string array .
<p > gets the substring of a string . < / p >
<p > gets the substring of a substring of the specified string . < / p >
<p > gets the substring before the given separator . < / p >
<p > gets the substring before the specified separator . < / p >
<p > gets the substring before the last occurrence of the specified separator . < / p >
<p > gets the substring after last . < / p >
<p > gets the substring between the given tag and tag . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > same as { @link <unk> ( string int ) } but takes care of length < / p >
repeat a string .
<p > repeat a string separated by a separator . < / p >
<p > <unk> . < / p >
<p > remove . < / p >
<p > case insensitive removal of the start of the string . < / p >
<p > remove . < / p >
<p > case insensitive removal of the end of the string . < / p >
<p > remove . < / p >
<p > <unk> . < / p >
convert a string to a comma - separated list of strings .
/ * ( non - javadoc )
log a login command .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
clean up the state of the user .
initializes the audit service .
initializes the message queue .
initializes the implementation of {
initializes the login context .
<p > process entity request . < / p >
set the value of the <unk> method
checks to see if two {
main method .
called when a controls has been set .
set the value of this property .
/ * [ deutsch ] <p > getinstance . < / p >
gets the locale for the given locale .
returns the { @link locale } from the given { @link string } .
calculate the filenames for the given language and locale .
returns a list of { @link java . util . locale } { @link java . util . locale } { @link java . util . locale } { @link java . util . locale } { @link java . util . locale } { @link java . util . locale } { @link locale } or { @link java . util . locale
<p > <unk> . < / p >
gets the months .
returns a relativedatetimeformatter for a particular locale .
returns the currency data for the given code .
creates a new instance of { @link statement } .
removes all of the mappings from this map .
adds an element to the end of the list
replaces the contents of this vector with another vector .
read properties from file .
returns a { @link charsetdecoder } for the specified { @link charset } .
/ * ( non - javadoc )
dump the contents of a file .
parses the given array of { @link properties } and returns them as a { @link class } .
process the command .
canonicalize a url .
gets the value of the named property .
init method .
creates a combobox for the given value .
prompts the user to set the value of the selected item .
creates a panel with a horizontal panel with a horizontal layout .
/ * ------------------------------------------------------------
encodes http basic http basic authentication header .
checks if the request is a ajax request .
check if the user agent is a robot .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new instance of { @link <unk> } .
returns true if path matches pattern .
match the given path and returns the index of the match .
/ * package
returns the squared euclidean distance between the two specified points .
returns <code > true< / code > if this envelope intersects the other .
returns true if the specified point is within the bounds of the specified line .
returns the intersection of two lines .
returns the union of the two supplied rectangles .
counts the number of areas in a rectangular region .
counts the number of areas in the two given regions .
return the relationship between this interval and q .
returns the intersection point of the line .
get the filename of the given path .
returns the extension of a file or <code > null< / code > if not found .
move the controls to the properties file .
setupsfields method .
gets the nth column in the matrix .
returns the index of the row .
draw the cell at the specified coordinates .
returns the absolute area of a rectangular area .
returns the absolute area of the viewport .
finds the first cell in the matrix .
returns the centroid of the cell .
calculates the grid points .
calculate the rows of the area .
replaces the tokens in the text with the given entity .
<p > creates an instance of message . < / p >
create a singleton message builder .
<p > synchronize <unk> . < / p >
adds the controls to the view .
unwraps the wrapped { @link throwable } instance of the wrapped { @link throwable } returning a { @link throwable } wrapping it in a { @link throwable } or a { @link throwable } instance .
appends a byte buffer to the current buffer .
/ * ------------------------------------------------- [ union ] ---------------------------------------------------
sets the hash of the hash array as a byte array .
konwertuje <unk> <unk> na <unk> <unk> .
parse the request .
{ @inheritdoc }
adds the given { @link <unk> } to the { @link <unk> } .
adds the given { @link class } class to the given { @link class } .
adds a bean to the bean .
registers a new <unk> .
sets the bean property .
<unk> <unk> <unk>
gets the bean instance .
get the <unk> object associated with the given name .
/ * ( non - javadoc )
the main method .
public only for testing
copies the contents of the buffer into the buffer .
src / main / resources / org / drools / compiler / lang / string
computes the symbol table for the symbol table .
sets the symbol table for the specified symbol .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
gets the value of the first argument .
initialize the requirement .
this method is used to determine if the given { @link net . dv8tion . jda . core . annotations . <unk> <unk> } is less than or equal to the given { @link <unk> } .
returns a copy of this query with the same arguments as the specified {
add a child to this node .
clear the children of this node .
/ * ( non - javadoc )
returns the next item in the queue .
adds the given body to the end of the body .
adds the given { @link <unk> } to the given list of { @link <unk> } s .
method to evaluate the numeric value of a numeric type .
< / editor - fold > // gen - end : initcomponents
registers the given work panel .
adds a message to the given input stream .
add a componenthandler with the specified constraints .
removes the specified item from the map .
computes the preferred size of the given { @link container } .
/ * ( non - javadoc )
/ * ( non - javadoc )
opens the url with the given url .
/ * ( non - javadoc )
visits a { @link bigdecimal } .
sends a bad request to the client .
returns true if the given term is a ground term .
applies the given { @link <unk> } to the given { @link <unk> } .
returns a list of positions that match the given predicate .
compares two streams using given comparator
/ * ------------------------------------------------------------
/ * package
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
initializes the {
/ * ------------------------------------------------------------
render the start tag
/ * ------------------------------------------------------------
------------------------ method resolution .
reconstructs a {
resets the output to the missing termvector .
main method .
returns the value associated with the specified key or null if there is no such key .
/ * ( non - javadoc )
/ * ( non - javadoc )
replaces the element at the specified position in this list with the specified index .
/ * ( non - javadoc )
removes the element at the given index .
returns the index of the property with the given name .
sets the property .
calls the getter method of the given object .
returns true if the given wrapper type is compatible with the given wrapper type .
get the getter methods .
/ * ( non - javadoc )
reconstructs the current { @link net . sf . mmm . util . <unk> . <unk> } object .
returns the decision of this decision
initializes the given {
returns a list of all the rows of the given query .
unify the given document with given document .
unify the given variables .
ends a scope by predicates .
compile a sentence .
/ * helper methods
generates a {
finds the maximum number of arguments in the match .
get a list of <unk> interactions .
this method is used to allocate a <unk> for the given clause .
generated code for <unk> and <unk> .
returns the position of the position of the given term .
<unk> method .
<unk> method .
encode the given number of characters into the buffer .
convert a byte array to a lower case string .
sets the id of the node .
returns the value of an attribute as a string .
set the string value for the attribute .
constructs a sentence with the specified token .
implements renaming .
get the list of selected items .
checks if a class is loadable in class path .
returns true if the given class is an instance of the given class .
returns true if the parent of the given name is a subclass of <unk> .
checks if the given object is a subclass of the given class .
returns the class for the given property name .
<p > newinstance . < / p >
<p > newinstance . < / p >
<p > invoke a static method . < / p >
<p > <unk> . < / p >
<p > invoke . < / p >
returns a constructor that matches the given arguments .
returns a set of { @link java . util . set } of { @link java . lang . reflect . <unk> } types .
render the maximum number of columns in the table .
gets the current action .
gets limited blocking queue .
gets limited blocking queue .
<unk> : ignore <unk>
gets limited blocking queue .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
get an attribute from an object .
resets the state to reset .
/ * ( non - javadoc )
search for the given { @link <unk> } .
returns the value of the specified key in this map or null if the map is empty .
/ * ( non - javadoc )
creates a new collection of primitive types .
returns a set of all possible unique values .
returns an iterator over the elements in this list in the order that they are returned by the iterator .
evaluates the given numeric type on the given numeric type .
/ * ( non - javadoc )
returns the states of the given assertion .
joins the joiner to the table2 using the given {
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
set filler for column .
initialises the timezone with the given name .
/ * ( non - javadoc )
add a dimension to the table .
builds and validates the <unk> .
{ @inheritdoc }
find all free variables in a query
find all free variables in a query
generate a list of terms inside a class .
high - recursive version of {
convert a term to a {
/ * ( non - javadoc )
reads the contents of a file as a string .
reads the contents of a file into a string .
writes the given object to the given output file .
read a text from the input stream .
adds the specified object to the end of the list .
/ * ( non - javadoc )
inserts the specified element at the specified position in this list . shifts the element currently at that position ( if any ) and any subsequent elements to the right ( adds one to their indices ) .
removes the element at the specified position in this list . shifts the element currently at that position ( if any ) and any subsequent elements to the left ( subtracts one from their indices ) .
adds all of the elements in the specified collection to the end of this collection .
searches for a set of { @link clause } s .
marks the given predicate for the given predicate .
creates a new { @link <unk> } for the given { @link problem } .
checkstyle : off
/ * ( non - javadoc )
returns a { @link set } of { @link <unk> } s that matches the given functor .
compile a list of instructions to the given functor .
this method is used to ensure that a call to {
this method is used to ensure that the given term is a temporary connection .
<p > <unk> . < / p >
tells whether or not the given { @code var } is the last part of a { @code vector } .
/ * ( non - javadoc )
method to get the extinction classification for a given property list .
/ * ( non - javadoc )
computes the best property for the best property .
create a functor without destroying it .
method to create a functor from a given name .
returns a new instance of this class with the given name .
process an error .
removes the element at the specified position in the list .
paint the region .
paint the stripes and grid .
calculates the minimum size of the page .
set the paint .
documentation inherited from interface
/ * ( non - javadoc )
gets the buffered image from the java . awt . image .
documentation inherited from interface
<p > returns a buffered image that contains a single pixel in the image . < / p >
read a <unk> from the stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
processes a single schema .
handles a service exception .
connects to the given { @link <unk> } .
connects to the given { @link <unk> } .
<p > split . < / p >
<unk> <p > <unk>
restores the state of the undo stack with the undo stack .
returns true if the specified column name is null or not .
parses the given { @link clause } into a { @link <unk> } .
enters a { @link <unk> } into the given { @link <unk> } .
sets the queue search algorithm .
search for a query .
/ * ( non - javadoc )
connect to selenium .
delete the {
delete the mock service .
<p > <unk> . < / p >
search for a { @link org . apache . ojb . broker . search . <unk> } .
validates the jcas .
csv parser .
<unk> <unk> <unk>
/ * ( non - javadoc )
returns a string representation of this proposition .
expression3 = <unk> .
/ * ( non - javadoc )
returns a {
/ * ( non - javadoc )
returns the subset of { @link term } s corresponding to this { @link <unk> } .
encode a variable name .
$non - nls - 1$
this method creates a {
returns a comment representing the literal term .
see ipromise ( inheriting callback ) interface
consumes and consumes a directive and consumes it from the source channel . if the value is <code > null< / code > then this method will return <code > null< / code > .
adds an operator .
builds the web - inf / web - web - inf / web - inf / web - inf / web - inf / web - inf / web - inf / web - inf / web - inf / web - inf / web - inf / web - inf / web - inf / web - inf / web - inf /
consumes a token from the token source .
attempt to consume the given kind and matches the given kind .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds all elements from the iterator to the collection .
returns the code for the given compiled code point .
adds a call point to the symbol table .
converts a date to a <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
translates a { @code <unk> } to a { @code <unk> } .
calculates the amount of time to utc .
converts a number of milliseconds to a number of hours . <p >
<p > converts ticks in to a number of milliseconds . < / p >
converts ticks in milliseconds .
sets the duration to the given value .
returns a long value that has the same { @link <unk> } as { @link <unk> () } .
convert a java . util . date to a java date .
converts a year - of - year and a year to a { @code <unk> } .
writes the given { @code int } to the given { @code buffer } as a { @code <unk> } .
writes the given value as a string .
returns the amount of time for the specified year .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the specified key in this key or null if there is no such key .
skips checks for the specified key .
reset the hash table .
/ * ( non - javadoc )
find the entry with the given key .
/ * ( non - javadoc )
resizes the hash table if necessary .
/ * <h3 > links< / h3 > <a href = http : // www . concentric . net / ~ttwang / tech / inthash . htm > http : // www . concentric . net / ~ttwang / tech / inthash . htm > http : // www . concentric . net / ~ttwang / tech / inthash . htm< /
encrypt a signed integer with a symmetric guid .
/ * ( non - javadoc )
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > set the preferred size of the
******************************************************************** / * ******************************************************************** / * actions ********************************************************************
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
loads the native library from a symbol table .
returns an { @link java . util . set } of { @link variable } s .
returns the entropy of an array of probabilities .
computes the product of two vectors .
returns the entropy of an array of buckets .
computes the sum of all the elements in the matrix .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the amount of time filter to the given number of ticks .
/ * ( non - javadoc )
perform a form action .
/ * ( non - javadoc )
creates a new url with the given encoded url .
execute the request .
/ * ------------------------------------------------------------
creates a map of cookies for the request .
returns the request header map .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
gets the session attributes .
returns the session attributes .
<unk> <unk> <unk>
/ * ( non - javadoc )
builds a string representation of a map of strings .
render an object .
{ @link <unk> }
change the current state of the channel .
change the document to a given term .
try to compare two float expressions .
/ * ( non - javadoc )
/ * ( non - javadoc )
notify all registered listeners that the value changes .
adds a character to the matrix .
inserts the specified character at the specified position .
creates a new region in the form of a grid .
draw a table
adds a clause to the solver .
/ * ( non - javadoc )
<p > <unk> . < / p >
returns true if the node is in top level leave .
returns whether or not the given context is top - level .
appends all of the elements in the specified collection to the end of this list in the order that they are returned by the specified collection s iterator .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an array containing all of the elements in this list in proper sequence ( from first to last element ) ; the runtime type of the returned array is that of the specified array . if the list fits in the specified array it is returned therein . otherwise a new array is allocated with the runtime type of the specified array and
removes the element at the end of the list .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new functor instance with the given functor .
sets the parameters to be used for the given arguments .
/ * ( non - javadoc )
adds an infix opcode .
/ * ( non - javadoc )
adds a propertychangelistener to the screen .
update the current state of the wizard .
attach a cancel button to the wizard .
register a work flow listener .
/ * ( non - javadoc )
gets the { @link classinfo } object for the given class name .
change the color map
creates a new instance of a { @link <unk> } .
/ * ( non - javadoc )
returns true if this binding is bound to this binding .
returns the attribute at the specified owner .
sets the column style attribute .
sets the width and height of the cell .
returns the attribute value or null if not found .
returns the attribute value .
/ * ( non - javadoc )
returns the value of the first argument .
this method is called from within the constructor to initialize the form .
compute the speed of the viewport .
move the viewport to the screen .
creates an instance of type {
returns a random {
visits a { @link <unk> } .
creates a new collection of primitive types .
returns <code > true< / code > if the given string is an instance of <code > <unk> / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
receive the last body without body .
/ * ( non - javadoc )
returns the position of the node at the given position .
gets the parent context .
create a new { @link <unk> } for the head operator .
creates a { @link <unk> } .
creates a new { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
updates the graph with the given list of <unk> .
change the delta of registers .
returns the value of the given { @code scope } .
create a new { @link node } for the given { @link <unk> } node .
returns a new { @link <unk> } for the given { @code <unk> } .
get the variable mapping for the given variable .
returns the value at the given index .
add a block to the cache .
/ * ( non - javadoc )
sets the scaling rate for this file .
/ * ( non - javadoc )
/ * ( non - javadoc )
read a character from the reader .
<unk> method .
compile a call call call .
associates the given disjunction with the given disjunction .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
remove the key from the map .
retrieves the value of the specified key from this map if it is present .
reads a uuid from a byte array .
writes an integer to a byte array .
/ * ------------------------------------------------------------
reads an int from the given byte array starting at the given offset .
read a short from the byte array at the given offset .
big - endian or motorola format .
returns a { @link set } of { @link <unk> } s that matches the given body .
instantiates a search node algorithm given a search node .
--- fold ---
returns an { @link java . util . collection } of { @link operator } dependencies .
returns the value of the specified value .
returns the value of this attribute s value .
sets the unique attribute value .
splits a string into an array of tokens .
prints an array of integers .
get a map of parameter names from a delimited string .
tokenize the given string value .
{ @link <unk> ( string ) }
returns a new instance of { @link <unk> } .
load a configuration string
adds the handlers to the logger .
sets the value of the {
<p > <unk> . < / p >
{ @inheritdoc }
gets the value of the specified functor .
add a new variable to the top of the stack .
similar to {
runs the visitor on the specified { @link clause } instance .
implements { @link <unk> ( int ) } .
implements { @link <unk> ( string ) } .
returns the name of a call to a call to {
reserves a reference to a label .
resolves a label with the given label .
sets the field information for the specified functor .
creates a new { @link <unk> } instance .
checks if the given path is a sub - category of this path .
returns the id of this node .
{ @inheritdoc }
/ * ( non - javadoc )
returns the value for the given path .
encode an attributelist instance as json .
/ * ------------------------------------------------------------
<unk> <unk> <unk>
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
returns a boolean value indicating whether or not the given { @link <unk> ( long ) } should be used .
put the element at the given position in the bucket .
removes the element at the specified position in this bucket .
initializes the mod with the specified size .
gen - last : <unk>
@see <unk> ( throwable )
/ * ------------------------------------------------------------
this method is used to perform the handshake
this method is used to encrypt a packet from the server . this method is used to encrypt a packet from the server to the server . this method is called by the client engine .
/ * ( non - javadoc )
/ * ( non - javadoc )
encrypt ssl status .
vr : inline
/ * ( non - javadoc )
returns an iterator over the elements of this operator .
gets the top - level object associated with a functor without returning it .
/ * term
insert an attribute into the grid . <p >
selects a single row .
/ * ( non - javadoc )
given an internal set of <unk> it returns a set of <unk> .
sends a {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
compares two {
create a new { @link list } of { @link node } s .
todo : explain
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
traverses the package and calls { @link <unk> ( predicate ) } .
override handlerequest in order to perform processing .
override handlerequest in order to perform processing .
parses the given { @code <unk> } .
returns an iterator over the elements of this distributed iterator .
decode a base64 encoded string .
pack the int into a byte array .
getter for bitrate
returns the size of an integer .
calculates the size of a number .
returns the logarithm of { @code value } to { @code b } and { @code k = 0 } as { @code 0 } .
returns the number of characters that are in the given range .
returns the absolute value of the absolute value of the given character .
calculates the number of digits in the given long value .
escapes the number of digits in the given string .
create a color with the gradation .
change the color of the chart
/ * ( non - javadoc )
sets the { @link <unk> } to be used in the { @link <unk> } .
/ * ( non - javadoc )
override handlerequest in order to perform processing specific action .
sets the keras sort order .
save the work flow .
discard the work flow .
change the sub - screen .
returns true if any element of t is evaluates to true .
get the value of the named method .
gets the value of the specified mapped property .
returns a list of { @link uicomponent } s with the specified prefix and prefix .
/ * ( non - javadoc )
/ * ( non - javadoc )
generate a list of permutations for permutations .
/ * ( non - javadoc )
creates the array properties .
builds a {
sets the number of decimals that will be used to calculate the number of decimal places .
this method should only be called by the { @link <unk> () } method of the { @link <unk> () } method of the { @link <unk> } .
/ * ( non - javadoc )
sets the value of the specified property in the current valuemap to the given value .
method to evaluate the numeric value of a numeric value .
gets the security properties from the backend .
loads the configuration from the system properties .
gets the properties of this resource .
get the status of the properties file .
leave a functor .
/ * ( non - javadoc )
todo : explain
visits this node then the given visitor visit this part .
apply the given { @link transformer } to the given { @link transformer } .
gets the structural value for the given terms .
returns a subsequence of the subsequence captured by subsequence of the subsequence captured by the specified substring starting at the specified end .
compares this <code > <unk> / code > with the specified comparator .
converts a byte array to a char array .
/ * ( non - javadoc )
create a new { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
connect to socket .
start a connector
visit a { @link <unk> } .
returns true if the { @link <unk> } is true .
applies the given functor to all elements in the list .
visitor method : visit all the <unk> .
run method .
prints the contents of the table .
used to create a new {
/ * package
/ * package
/ * ( non - javadoc )
/ * package
build a new page .
inits the component .
build a new control content group .
build the mock post content .
closes the {
reconstructs a new {
$antlr start <unk>
/ * ( non - javadoc )
get the control value of a control .
<unk> <unk> <unk>
start the polling process .
get the transaction associated with the current transaction .
<unk> <p > <unk> / p >
adds a cache operation to the cache .
acquires a global write lock .
/ * ( non - javadoc )
creates a new instance of <unk> .
rewrite the given rule set .
inserts the specified element at the tail of this queue waiting up to the specified wait time .
/ * ( non - javadoc )
retrieves and removes the head of this queue or returns { @code null } if this queue is empty .
/ * ( non - javadoc )
retrieves but does not remove the head of this queue .
/ * ( non - javadoc )
inserts the specified element at the tail of this queue waiting up to the specified wait time .
inserts the specified element at the tail of this queue waiting up to the specified wait time . if the queue is empty this method blocks until the queue is full ( i . e . { @code e } ) . if the queue is full then wait for the queue to become available .
/ * @awisniew - added
drains the synchronization records to the given collection .
/ * @awisniew - added
inserts the specified element at the tail of the queue . if the queue is full the call will block until the queue is full .
inserts the specified element into the buffer .
returns the next element in the enumeration .
合并系统变量 ( - d ) ，环境变量 和默认值，以系统变量优先
returns the value of an attribute as a short . if the attribute is null the default value will be returned .
try to set the value to null if the property is null .
try to set the value to null if the property is null .
set the value of a property to a float .
returns the value of the property as a { @code double } . if the value does not exist then the default value will be returned .
returns the value for the given variable to null if the property is null .
sets the value of the property as a boolean . if the property is not set the defaultvalue is returned .
gets the value of the property as a short .
set the value to <code > property< / code > such that <code > <unk> / code > is <code > null< / code > .
get the size of the property as a long .
合并系统变量 ( - d ) ，环境变量 和默认值，以系统变量优先
合并系统变量 ( - d ) ，环境变量 和默认值，以系统变量优先
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
set the property value .
sets attribute value as long .
sets the value of the specified key in the current valuemap to the given value .
sets the name of a property .
get the value of the property as a boolean .
returns the value of a property property .
returns the value of the requested property
load a list of arguments .
updates the {
clone the children of a scope .
/ * ( non - javadoc )
removes the specified { @link <unk> } from the given { @link <unk> } .
backtracks for the given node .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a set of {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
returns the value of the specified field in the specified class .
adds a element to the map . if the element does not exist it will be created .
returns a collection of all keys in the specified class .
the main method of the <unk> method .
{ @inheritdoc }
/ * ( non - javadoc )
records the specified number of bytes .
returns the value associated with the specified key in this map . if the map previously contained a mapping for this key the old value is returned .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced by the specified value .
appends all of the elements in the specified collection to the end of this list in the order that they are returned by the specified collection s iterator .
retrieves and removes the element at the head of the list .
creates a new { @link <unk> } .
creates a new { @link <unk> } .
opens the text .
delegated rules <unk>
construct a <unk> from a unary predicate .
get walker from <unk> .
get a set of <unk> walker from a {
gets the <unk> walker from the <unk> visitor .
<p > <unk> . < / p >
sets the current query .
todo : explain
reset template variables .
executes the search .
returns an iterator over all of the variables in this set .
loads properties from an input stream .
loads properties from a file .
loads properties from a url .
loads properties from a file .
trims the properties of the given { @link properties } object .
remove the kind of notation from the given name .
<editor - fold defaultstate = collapsed desc = visualization >
returns the {
initialize the preferred width of the font .
adds a propertychangelistener to the listener list .
adds a propertychangelistener to the listener list .
/ * ( non - javadoc )
this method is called when a bound property has been changed .
/ * package private
compile a {
performs the maximization action .
/ * ( non - javadoc )
applies the given {
/ * ( non - javadoc )
initialize the contents of the frame .
creates a new jframe with the given component .
display the help window for the given component .
display the left pane .
display the right - pane window relative to the right - hand frame .
sets up an accelerator for the given action .
set up horizontal bar options .
set up the left - hand content of the content pane .
shows the right - hand window bar .
<unk> <unk> <unk>
returns a { @link list } of { @link link } s that match the specified link .
/ * ( non - javadoc )
generates a {
returns a list of {
this method should only be called by {
this method should only be called from the { @link <unk> () } method of the { @link <unk> () } method of the { @link <unk> } .
{ @inheritdoc }
appends the mdw classpath to the given string .
/ * ( non - javadoc )
accept a visitor for this node .
free method .
an implementation of { @link <unk> ( string ) } that uses the { @link <unk> () } method to find all elements in the { @link webelement } .
/ * ( non - javadoc )
prints the version information .
creates and returns a new instance of the {
evaluate the sentence .
evaluate the {
get a multi - type data from a multi - type attribute .
converts a list of bytes to a multi - byte multi - type array .
capitalizes the first character of a multi - type character .
as short type array .
get a multi - type data from a multi - type integer .
returns a multi - type data array for the given type .
returns a { @link <unk> } object for the given type .
get a multi - type data from a { @link <unk> } .
get a multi - type data from a string .
get a multi - type data set .
convert a primitive type to a java object .
best match for primitive types .
stores an object in the page context .
applies the given { @link <unk> } to each dimension .
parses a single response from the chain .
/ * ( non - javadoc )
returns <tt > true< / tt > if this map contains a mapping for the specified key .
returns the value associated with the specified key or <code > null< / code > if the key does not exist .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
returns an iterator over the elements in this list in the order that they are returned by the iterator .
/ * ------------------------------------------------------------
{ @inheritdoc }
converts a string to a character .
returns the character at the specified position .
creates a new region in the form of a { @link <unk> } .
creates a new table with the specified width and height .
fire the connection event .
/ * ( non - javadoc )
parses the current sentence and returns the result .
/ * ( non - javadoc )
compare two predicates .
/ * ( non - javadoc )
******************************************************************** / * helpers
adds an operator .
get operator operator .
/ * ( non - javadoc )
given a {
returns a new { @link <unk> } for the given { @link <unk> } .
write a byte to the output stream .
writes <code > len< / code > bytes from the specified byte array starting at offset <code > off< / code > to this method .
parses a comma separated list of strings .
returns true if code is equivalent to {
returns the custom options for this property .
returns the usage of the {
parse the command line arguments .
adds the output properties to the output properties .
set the output properties to a properties object .
/ * ( non - javadoc )
parses the given properties from the properties file .
checks that the argument is a valid argument format .
sorts the given range of iterators according to the given comparator .
returns an enumeration of the available options .
parses the options .
gets the options .
sets the predictions for the selected item . <p >
opens a <code > <unk> / code > for the given <code > <unk> / code > .
creates a new instance of this { @link table } .
the main method .
returns the { @link <unk> } value of the { @link <unk> } represented by this { @link <unk> } .
creates an instance of type { @link <unk> } .
sets the current state of this channel .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the current memory layout .
$antlr start <unk>
returns the output of the section .
read an html entity .
dereference the given string .
creates a { @link boofcv . alg . distort . <unk> } instance for the given function .
internal method to call the {
resolves the macros in the database .
src / main routine resources .
returns the next line in the end of the section .
pops and return true if the beginning of the next tag is available .
compares two blocks .
/ * --- private methods ---
sorts the next two - elements in ascending order .
read trail .
<editor - fold defaultstate = collapsed desc = misc >
return true if any of the given leases is available .
prints a string representation of the given mode .
/ * ( non - javadoc )
reconstructs a {
copy the input { @link iatomcontainer } to an { @link iatomcontainer } .
generates a list of objects that can be applied to each operator in the contained neighbourhoods .
/ * ( non - javadoc )
swaps the coordinates of two tile coordinates .
compute the size of an operator .
swaps the tiles in the plot .
returns a list of characters representing a single character .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the message from the given logrecord .
converts the log4j level to java . util . logging . level .
/ * ( non - javadoc )
retrieves and removes the head of this queue or returns { @code null } if this queue is empty .
{ @inheritdoc }
retrieves and removes the head of the queue .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an element of the head of this queue waiting if necessary .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the indices of the remaining items in the queue .
/ * <unk>
/ * ( non - javadoc )
increment the size of the record .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the property with the specified name .
documentation inherited from interface
create a new {
/ * ( non - javadoc )
/ * ( non - javadoc )
************* smarts ****************
/ * ( non - javadoc )
<unk> :: = ( | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
/ * ( non - javadoc )
create a new { @link <unk> } .
************* inlines ****************
************* tables ****************
<unk> :: = <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk>
/ * ( non - javadoc )
visits an identifier .
p2 :: = <unk> p2
<unk> :: = <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk>
<unk> :: = ( | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
************* inlines ****************
get the value of a function .
/ * ( non - javadoc )
************* smarts ****************
returns a {
************* smarts ****************
************* smarts ****************
nth - repeat - num :: = <unk> - > | - <unk> - <unk> - hh : mm : ss
returns a { @link rule } consisting of { @code bar } { @link <unk> } and { @link <unk> () } .
nth - unit :: = repeat ( nth - repeat - spec )
************* code ****************
unicode :: = ( 1 * digit ) *
/ * [ deutsch ] <p > interpretiert den angegebenen <unk> ; < / p >
creates a new { @link <unk> } with the given name and arguments .
push a variable reference .
this method can be used to capture stack trace from stack trace .
paints the given row .
adds a list of column values to the table .
returns the value of the specified row in this matrix .
remove a row from the grid .
get the designated column s maximum number of columns .
adds a label to the table .
reload the given properties .
updates the column width . <p >
saves an error .
create a { @link <unk> } for the result .
transform a functor from a functor .
creates a new <unk> for the given adt .
this method is used to handle an exception that is thrown by the { @link <unk> ( <unk> ) } method .
compile a sentence .
initializes the <unk> .
instantiate a symbol table .
method <unk> .
attempts to compile a { @link code } to a list of { @link <unk> } s .
returns the string representation of the variable .
removes all of the mappings from this map .
returns true if the map contains the given primary key .
sets the value of the primary key in the combo box .
removes the item with the given primary key from the cache .
returns a {
returns the symbol associated with the specified key .
sets the value of a key in the symbol table .
puts a new item in the cache .
sets up the combo box up to the given label .
/ * ( non - javadoc )
open the <unk> .
evaluates the given value against the given numeric value .
this method is used to report a lock on the thread .
/ * ( non - javadoc )
/ * ( non - javadoc )
waits until the given timeout is reached or the timeout elapses .
/ * ( non - javadoc )
remove a listener .
create a {
inserts the specified element at the tail of this queue . shifts the element currently at that position ( if any ) and any subsequent elements to the right ( adds one to their indices ) .
retrieves and removes the smallest element in the tree .
/ * computes the ceiling common divisor .
returns the minimum value of the given node .
******************* beginning of function ******************** //
inserts a new node into the list .
wait for the coordinator to finish .
starts the {
returns the monitor id for the given key .
associates the specified value with the specified key in this cache . if the cache previously contained a mapping for this key the old value is replaced .
/ * ( non - javadoc )
copies all of the mappings from the specified map to this cache .
/ * ( non - javadoc )
/ * package
/ * package
returns an instance of the given {
returns a { @link set } containing all the elements of the given { @code iterable } .
returns a list of the elements of the given type .
get all solution - paths in the given { @link <unk> } .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . object< / code > is immutable .
opens the bug window .
returns the first non - null result in the given iterator or null if there is no such element .
convert a byte array to a buffer .
compile body arguments .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the value of the named property .
get the value of the property as a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
main method .
documentation inherited from interface
documentation inherited from interface
/ * package
returns the link with the given link - relation type .
removes and returns the element at the top of the stack .
/ * ( non - javadoc )
set the registers to the beginning of the image .
parses the <unk> code
copies the contents of this table to the clipboard .
get a keystroke
converts the given modifier to a string .
/ * ( non - javadoc )
insert a <code > <unk> / code > into the <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code > <code > <unk> / code >
set the size of the attribute .
fire the change event .
parse the given string as an integer .
convert a date string to a date .
parses the given string as a date .
parse the given string as a date .
parse the given string as a date .
returns an { @link <unk> } for the given string .
read a token from a file .
create a string from an input stream .
returns the next token in the stream .
returns the next token in the stream .
/ * ( non - javadoc )
checks if a given throwable is a constant .
/ * package
get the boolean value associated with an argument .
create an instance of { @link <unk> } .
render the table columns .
converts a { @link <unk> } to a { @link list } of { @link operator } s .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts the visitor to a visitor .
returns an { @link java . lang . reflect . operator } for the given { @link operator } .
returns true if this is a identity query .
get the argument at the given index .
find the structural implementation of a <unk> .
gets an { @link iterator } of children .
gets a copy of the score of the score matrix .
/ * ( non - javadoc )
converts a geometry to a functor .
returns a string representation of the given arguments .
retrieve a { @link <unk> } for the given { @link <unk> } .
retrieve a list of { @link java . sql . query } objects for the given { @link java . sql . query } .
execute the query .
compute the dpi registers .
this method is used to update the code in the <unk> .
<unk> registers the registers for the <unk> registers .
<unk> registers the registers for the given <unk> .
method to write a class descriptor to a map .
decode the code .
gets the value of the property .
returns a random instance of the specified type .
get the wrapper class for the given class .
reads the next token from the stream .
prints a collection of variable names to a human readable string .
prints a map of variables to the given map .
returns a string representation of this variable .
determines which variables to be used for a given solution . returns an empty map if no such variable is found .
adds an infix + operator + operator .
compile a body of body arguments .
/ * ( non - javadoc )
$non - nls - 1$
this method is called when a nonce is received .
<p > <unk> . < / p >
<p > returns the time in milliseconds for the uuid . < / p >
returns the elapsed time in milliseconds . <p >
/ * ( non - javadoc )
update the metadata for a playlist
marshall the specified { @link <unk> } .
set the volume of this music .
updates the help of the specified playlist .
ask the player to update the waveform info .
generates a list of { @link resource } s from the given { @link <unk> } .
this method is called when an event is rendered .
handles a resource request .
invoked when an event is fired .
handles the event request .
fires a { @link <unk> } event .
rolls back a new one .
called when the client is ready to connect .
starts the server .
shutdown the connection .
creates a <code > <unk> / code > instance using the default parser .
/ * ( non - javadoc )
process a packet .
sets the value of { @link <unk> () } .
creates a new chat with the given id and listener .
returns the user from the <unk> or null if not found .
returns a list of { @link inetaddress } s of the { @link endpoint } s .
sets the content manager content manager .
resets object .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
builds a new { @link <unk> } .
parse the request .
clear all caches .
computes the hmac - sha1 for the given data and key .
<p > <unk> . < / p >
translates { @code acl } to { @code <unk> } .
creates a new set of { @link <unk> } s .
{ @link <unk> ( map ) }
/ * ( non - javadoc )
list of { @link net . dv8tion . jda . core . entities . role permissions } .
returns an unmodifiable view of the specified map .
/ * ( non - javadoc )
/ * ( non - javadoc )
sends a packet to the server .
returns the next packet in the queue .
this method logs a new word .
<p > <unk> . < / p >
gets a list of all active <unk>
create a new http client with the given configuration .
creates an { @link <unk> } for the given media type .
creates a new { @link <unk> } for the given { @code type } .
/ * ( non - javadoc )
creates a new { @link <unk> } for the given { @link <unk> } .
returns true if this descriptor contains a descriptor .
adds an event to the event lifecycle .
invoked when an activator - event occurs .
starts the {
/ * ( non - javadoc )
<p > accepts a { @link collection } of { @link collection } s of the given { @link collection } . < / p >
creates a new { @link <unk> } that uses the given { @link filter } and { @link <unk> } .
returns true if the two files are equal .
unmap a byte buffer .
removes the current mapping from the map .
/ * ( non - javadoc )
<unk> > null< / code >
hash function .
returns true if x and y are the same as the other .
/ * ( non - javadoc )
package - private for testing
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
/ * ( non - javadoc )
resizes the table to the new capacity .
copies all of the mappings from the specified map to this map . if this map contains no mapping for the specified key the old value is replaced by the specified map .
/ * ( non - javadoc )
removes the mapping for the specified key from this map if it is present .
removes the mapping for the specified element from this map if it is present .
removes all of the mappings from this map .
{ @inheritdoc }
/ * ( non - javadoc )
returns an immutable view of the given { @code map } .
parses a date version of a version of the form <code > yyyy - mm - dd hh : mm : ss ; < / code > .
convert a date string to a date
gets the extension part of a file .
fixup authority from path .
parse the beginning of a string .
strips the host and port from a resource uri .
check if the given string is a valid <unk> query label .
encode a string .
replaces the $ { <unk> } placeholders in the given string with their escaped values .
escapes a string so that it can be represented as a string .
returns the sha - 1 hash of the avatar .
converts a byte array to a hex string .
encodes a string into a byte array .
encodes a byte array into base64 notation .
decodes a base64 encoded string .
generate a random string consisting of a number of random characters .
/ * ( non - javadoc )
sets the audio pause button .
set the controller s controller controller .
set the next direct controller for the given controller .
set the current progress controller for direct execution .
set the controller with the given controller .
sets the controller controller controller .
<p > a list of <code > { @link <unk> } < / code > < / p >
handle all { @link <unk> } s .
loads a volume from the { @link <unk> } .
attach a { @link <unk> } to the { @link <unk> } .
handles a track of a track .
get the map of attributes associated with this request .
returns the class cache for the given name .
returns the cached { @link cache } from the cache .
/ * ( non - javadoc )
/ * ( non - javadoc )
get field from source object
url - encodes a string .
returns an immutable copy of the specified { @code <unk> } .
add a field mask to the map .
returns the naaccr id from the given string .
encodes a cookie string to a string .
trims a cookie string and replaces it with the given character .
<p > <unk> . < / p >
/ * ( non - javadoc )
delete a path .
checkstyle : off
/ * ( non - javadoc )
returns the <unk> instance for the given connection .
returns a new { @link <unk> } instance .
/ * package
try to connect to the server .
set the ping interval .
sends a ping task to the server .
start a new worker thread .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
<p > <unk> . < / p >
add the given { @link options } to this { @link <unk> } .
adds an option to the list of options .
checks if the given option is a member of this member .
parses command line arguments and parses them into a { @link <unk> } .
prints the usage for the application .
/ * package
/ * ------------------------------------------------------------
initializes the connection .
establishes a connection to the xmpp server .
callback for <unk> .
returns the compression handler of the compression method
if compression is true then the compression method is used to determine if the compression flag is set to true .
writes a stream to the socket .
/ * package
--- connect ---
notifies all registered { @link <unk> } s that the { @link connection } is alive .
notifies all registered listeners that a script has changed .
adds a new <unk> class to the given class .
returns a list of all registered saslmechanism .
implementation of the authenticate method .
authenticate the server .
authenticate logic .
get the value of a writable field
/ * ( non - javadoc )
initialize { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> }
{ @inheritdoc }
execute mojo .
parses the command line arguments and puts them into the command line .
log a message at the error level .
log a message at the error level .
log a warning message .
creates an instance of the given { @link <unk> } .
creates an instance of the given { @link <unk> } .
notify listeners about the listeners .
generates a { @link resource } for the given { @link resource }
checks if the resourcebuilders contains the resourcebuilders .
checks if the given resource is available
provides a list of resources that are tagged with the given id .
provides the message from the source .
returns an unmodifiable view of the specified map .
adds a column to the cache .
returns the key for the given key .
remove a context from the cache .
execute a put method
sets the jar file filters .
get the location of the classpath .
/ * ( non - javadoc )
check if a jar is valid .
adds the sasl mechanism to the currently supported mechanism .
adds a collection of sasl mechanisms .
/ * ( non - javadoc )
/ * ( non - javadoc )
asynchronously executes the http call and return the response .
connects to the server .
registers a { @link event } to receive events from the { @link event } .
write stats to a file .
acquires a lock on the given channel .
the main method .
invoked when an event is received .
creates a default { @link <unk> } for the given { @link <unk> } .
{ @link <unk> ( <unk> ) } <unk>
create player executor
{ @link <unk> } <unk>
creates a new { @link shardedjedispool } .
returns the instance of { @link <unk> } .
create a new { @link jediscluster } with specified password .
create a new { @link <unk> } .
create a new <unk> from a specific keyspace .
creates a new { @link <unk> } from the given { @link <unk> } .
start the identification .
stops the identification .
initializes the identification .
create a client request for a playlist
create a playlist from a playlist .
<unk> <unk> <unk> <unk>
log a message at the severe level .
append a path to the url .
adds a query parameter to the url .
adds a query parameter to the url .
adds a query parameter to the request .
url - encode a string .
generates an { @link <unk> } for the given { @link event }
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last : <unk>
check if the device is running .
check if the given url string is a valid url .
gen - last : <unk>
returns an imageicon or null if the path was invalid .
/ * ( non - javadoc )
main method to run the application .
returns the maximum value in an array with the given values .
returns a copy of the data contained in this object .
returns the presence of the presence of a resource .
get a { @link <unk> } object for the given index .
get the int value associated with a key .
returns the integer value associated with the given key as an integer .
returns the value converted to a double or the specified default value if the conversion fails .
encodes the given value into a json string .
/ * ( non - javadoc )
<unk> <unk> <unk>
verifies the capabilities of the given sector .
executes the given command with the specified capabilities .
create a cluster .
creates a new { @link <unk> } for the given table .
evaluate a single cluster .
create a new { @link jediscluster } with the given parameters .
create a new { @link shardedjedispool } .
returns the session for the given { @link session } or { @link session } if it does not exist .
/ * ( non - javadoc )
binds the given prepared statement to the prepared statement .
binds a template .
executes the given cql query .
execute a put command .
execute the given {
executes a {
execute a single row .
executes a {
opens a callback for the given task .
executes a query asynchronously
execute a put asynchronously
opens a callback for the given task .
executes a single session in a session .
execute a batch of statements .
execute a batch of batch statements .
execute a batch of <unk>
sets the filter .
get all subclasses of the given package .
return all subclasses of the given class .
creates a new { @link set } of { @link class } objects from the specified location .
find a set of classes that match the given package name .
search for classes in the classpath .
sets the resource .
sets the resource .
sets the resource .
returns a { @link list } of { @link resource } s from the { @link <unk> } .
get the size of the map .
gets all events for the event
creates a list of { @link <unk> } instances .
wait for the outbind to become available .
process stanza .
<p > decorates . < / p >
emit an { @link <unk> } .
selects an iq error message .
create a iq error message .
create a new jingle error response .
create an iq response object from an iq request .
generates a { @link <unk> } for the given { @link event }
returns a synchronized ( thread - safe ) sorted map backed by the specified sorted map . the returned sortedmap is backed by this treemap so changes to the backing sorted map are reflected in the returned sorted map . the returned sortedmap is backed by this treemap so changes to the returned sorted map are reflected in the sorted map .
/ * ( non - javadoc )
get the roles for a given subject
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a set view of the elements of the given set .
sets the name of the stanza to this node .
update message state
returns a list of all groups in this group .
returns { @code true } if this roster object equals the given object equal to the given object .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of all keys in the cache .
create a { @link <unk> } for the given { @link element } .
create a preparedstatement for the given search element .
create a list identifiable by unit testing
/ * ( non - javadoc )
{ @inheritdoc }
reloads the roster .
creates a new group group .
creates a new roster item .
removes the given entry from the server .
returns a set of all entries in this group .
returns the roster entry associated with the given xmpp address .
returns the presence information for a given user s presence information .
returns the presence information for a given user .
returns a list of presence objects for a given xmpp user . if no presence is available the presence information is returned .
----- private methods -----
updates the offline presence data for a user .
fires roster change event .
sets the digest for the given password and password .
/ * ( non - javadoc )
sets the value to be equal to the specified value .
{ @inheritdoc }
/ * ( non - javadoc )
returns a {
returns a {
returns a synchronized ( thread - safe ) map backed by the specified map .
clear the cache .
set the volume of this { @link <unk> } .
{ @link <unk> }
{ @link <unk> }
create a player request .
create a player request for a playlist .
create a player request for a playlist .
returns the timestamp passed to the { @link <unk> } .
add a listener to the set of listeners .
initializes the properties file .
reloads the properties file .
parses an error packet .
returns a list of available sasl mechanisms .
returns the set of all the links to the installation .
parse the available sasl mechanisms .
decodes the parameter value .
creates start request request to start player requests .
attach start request to start player
creates a conversion request from the given source and target class .
get start request
finds the conversion request for the given playlist .
registers an identifiable id .
<p > <unk> . < / p >
returns a predicate that evaluates to { @code true } if the given { @code obj } is equal to the given { @code obj } .
creates a comparator that compares { @code base } objects with the given counter .
creates a <code > &lt ; <unk> ; < / code > with the given <code > function< / code > .
get the playback state from the resource .
returns the secret key from the specified dump .
/ * ( non - javadoc )
returns the value to which the specified key is mapped or { @code null } if this map contains no mapping for the key .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
removes the mapping for the specified key from this map if present .
/ * ( non - javadoc )
returns a view of this key set .
returns the values of the values contained in this map .
process purge .
removes the mapping for the specified key from this map . if the map previously contained a mapping for this key the old value is replaced .
/ * ( non - javadoc )
/ * package
create a new entry from the map .
/ * ************************************************************************* java object serialization ***********************************************************************
reconstitute the <tt > <unk> / tt > instance from a stream ( i . e . deserialize it ) .
/ * ( non - javadoc )
sets whether or not the selected entity is unique .
returns a list of {
sends a message to the chat room .
notifies all registered listeners that the message has been written to the message .
/ * ( non - javadoc )
initialize the configuration .
the main method .
gets the application directory .
/ * ( non - javadoc )
creates a new output directory if it does not already exist .
loads properties from a file .
write the given document to the file .
generates an { @link <unk> } for the given { @link event } .
returns a dynamically typesafe view of the specified collection .
{ @inheritdoc }
get service resolver .
--- connect ---
/ * ( non - javadoc )
{ @inheritdoc }
returns the attributes of the element .
add attributes to the packet .
/ * ( non - javadoc )
creates an { @link <unk> } from the given { @link <unk> } .
attempt to verify the given event .
/ * ( non - javadoc )
read a <unk> from a specific keyspace .
create a new { @link jediscluster } with specified password .
create a new { @link jediscluster } with the given parameters .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
@throws <unk> @throws <unk>
adds a connection listener to the managedconnection instance .
create a new { @link <unk> } from a { @link <unk> } .
add a stanza listener to the packet .
/ * ( non - javadoc )
notifies all registered listeners that the given packet was received .
adds a new { @link packet } to the { @link <unk> } .
notifies all registered { @link <unk> } that a packet has been received .
initializes the debugger .
converts the given value to an object of the given type .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
rollback the clustering .
returns the current thread s thread id .
returns true if the node is a valid node .
adds a { @link copier } to this { @link copier } for the specified value .
returns a <code > set< / code > of the entries in this <code > entry< / code > .
returns a { @link set } view of the elements of this { @link <unk> } .
returns a {
return the node at the specified index .
----- private methods -----
helper method to validate that the given { @link java . io . <unk> } is valid .
/ * ( non - javadoc )
compare two maps .
translate an assignment to an internal node .
returns the successor of the given node .
removes the next node from the tree .
removes the given node from the tree .
returns the most - valid { @link node } for the given node .
translate an assignment to a context node .
copy all of the mappings from the specified map to the specified map .
returns true if the node p is red .
returns true if the node p is black .
helper method to add a key - value pair to the node .
helper method to add a key - value pair to the node .
returns a { @link node } representing the given node in the given parent node .
returns simpleimmutableentry for entry or null if null
returns the right child of the given node .
returns the left child of a node .
returns true if the node is a left child of the given node .
returns true if the node is a right child of the given node .
/ * ( non - javadoc )
/ * private void <unk> ( <unk> node ) { if ( p == null ) { if ( p == null ) { return <unk> ; }
/ * private void <unk> ( node <unk> ) { if ( <unk> == null ) { return false ; }
/ * private void <unk> ( <unk> <unk> ) { if ( <unk> == null ) { return <unk> ; }
go through each node in the subtree rooted at this node .
<unk> () .
inserts the given object at the given index .
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a { @link set } view of the elements of this { @link <unk> } .
/ * ( non - javadoc )
returns a <code > set< / code > that contains all the entries in this <code > <unk> / code > .
copy all entries from the given { @code <unk> } to the given { @code <unk> } .
returns the node with the given key or null if no such entry exists .
/ * ( non - javadoc )
/ * ( non - javadoc )
handles the eviction policy .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
see { @link <unk> ( string ) }
ask the player for a playlist to be a player .
get playlists from a player
initializes the roster store .
opens a roster store .
put the two keys .
returns a list of local network addresses that match the given host .
returns a list of local inetaddresses for the given address .
returns a { @link <unk> } that represents the ip address of the given ip address .
returns an unmodifiable view of the specified sorted map .
returns a { @link set } view of all the entries in this { @link map } .
/ * ( non - javadoc )
read a pid from a file .
read a url .
/ * ( non - javadoc )
read the xml document from the given input stream .
create an xml document from the given text .
read a document from an xml document .
read a document .
/ * [ deutsch ] <p > interpretiert den angegebenen text als intervall . < / p >
returns a copy of the given { @link <unk> } .
returns a { @link map } containing all of the keys in the given { @code filter } .
check if file is a new track
check if file is a new file
update file .
exports the given { @link <unk> } instance .
generate the tag documentation .
adds a { @link <unk> } to this { @link <unk> } .
returns a new mapbuilder with the given key and value .
set the jar file types .
registers a new constructor with the given name .
find all implementations of the given set of classes .
main entry point .
execute an application .
returns a list of { @link brand } objects for the meta data .
inits the arguments .
entry point of the demo application .
<p > <unk> . < / p >
<p > <unk> . < / p >
refreshes the schemata .
get a schema by name .
writes a command line to a file .
/ * ( non - javadoc )
adds a { @link option } to this { @link option } .
returns a list of all the records in the schema .
gets the field with the given name .
returns the name of the properties file as a string .
/ * ( non - javadoc )
<p > <unk> . < / p >
close all the subservices .
returns an immutable map view of the given reducer .
get a { @link <unk> } from the pool .
stops the server .
creates an instance of { @link <unk> } .
/ * ( non - javadoc )
creates a new { @link stream } with the results of applying the provided { @link function } to each of the supplied { @link stream } s .
performs iteration .
returns the metadata for the given event .
creates a map of {
import a list of { @link <unk> } into a { @link <unk> } .
<unk> ( <unk> )
download image from image .
loads a json object from a file .
get a json string from a url .
get acl list .
{ @inheritdoc }
replaces all the values in the source map with the given target map .
creates a new { @link <unk> } from the given { @link collection } .
calculate the multiplication of two sets .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
disconnects from the pool .
returns a copy of the given { @code <unk> } .
creates an empty {
returns a queue entry for the given position .
liefert die postfach - nummer als { @link biginteger } ist .
liefert die postfach - nummer als <unk> zahl . da die nummer optional ist wird sie als { @link optional } zurueckgegeben .
/ * ( non - javadoc )
/ * ( non - javadoc )
verify that the given capabilities match the given capabilities .
exports the track .
inits the .
decodes four bytes from array <var > source< / var > and writes the resulting bytes ( up to three of them ) to <var > destination< / var > . the source and destination arrays can be manipulated anywhere along their length by specifying <var > srcoffset< / var > and <var > destoffset< / var > . this method does not check
/ * ------------------------------------------------------------
authenticate a resource .
creates an { @link <unk> } for the given { @link <unk> } .
creates an instance of { @link <unk> } .
returns the extension part of the file name .
encodes the given string according to rfc <unk> .
returns the md5 hash of the specified string .
converts a byte array to a hex string .
authenticate client .
authenticate with the given username and password .
creates a new {
/ * ( non - javadoc )
copy the contents of this object to a json string .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
join all queues .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
stops the daemon thread .
creates a { @link <unk> } for the given { @link <unk> } .
notification that the root window should be closing .
returns a copy of the given { @link <unk> } .
execute a patch request .
/ * ( non - javadoc )
create a new { @link <unk> } .
this method is used to unassign the passed role id .
called when an event is fired .
converts a string to a list of <unk> .
adds a content to a file .
/ * ( non - javadoc )
convenience factory method to create an inputstream for a specific version
get an input stream content .
/ * ( non - javadoc )
/ * ( non - javadoc )
invoked when an event model is permanent .
checks if the given resource is a permanent resource .
sets the name of the roster entry .
returns the roster entry associated with the given xmpp address .
adds a roster entry to the logger .
returns the value to which the specified key is mapped or { @code null } if this map contains no mapping for the key .
/ * ( non - javadoc )
returns <tt > true< / tt > if this map maps one or more keys to the specified value .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
copies all of the mappings from the specified map to the specified map .
removes the mapping for the specified key from this map . if the map previously contained a mapping for this key the old value is replaced and returned .
removes all of the mappings from this map .
hash function .
/ * <unk>
returns { @code true } if both arguments are equal .
returns the entry for the given key .
publishes a new entry to the cache .
inserts a new entry into the map .
/ * ( non - javadoc )
removes the mapping for the specified entry from this map .
removes the entry from the map .
adds the entry to the cache .
increases the capacity of the internal buffer .
sets the capacity of this <tt > <unk> / tt > .
calculates the new capacity for the given number of new capacity .
gets the next entry in the map .
returns an iterator over the elements in this map .
returns a <code > iterator< / code > containing all of the entries in this map in the specified order .
returns a { @link set } view of the keys contained in this { @link <unk> } .
/ * ************************************************************************* java object serialization ***********************************************************************
reconstitute the <tt > <unk> / tt > instance from a stream ( i . e . deserialize it ) .
loads a { @link <unk> } from the given { @link inputstream } .
create a byte array from a failure scope .
/ * ( non - javadoc )
register a <unk>
initializes the <unk> .
tries to reconnect .
notifies the listeners that a connection has been changed .
notifies the connection that the connection has been changed .
