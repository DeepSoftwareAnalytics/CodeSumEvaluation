parse data data from a { @link } .
finds the class of the given class .
{ @inheritdoc }
creates a new path instance .
check if the url is a url
returns whether the given log level is enabled .
registers a new listener .
adds the folders to the list of folders that are contained in the list .
adds a source folder to the folder .
start the tailer of the task .
stops the .

scans the package for the given annotation .
copies the contents of the inputstream to a stream .

copy the input stream to the given output stream .
closes the { @code closeable } and cancels it .
closes the specified { @code closeable } and destroys the stream if any encountered .
update the main class loader for the restart .
restart the restart .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
update the package name .
clear the cache
create a bounding box for a json string
build a bounding box from the points and points it to the points .
creates a boundingbox from a bounding box .
transform this object to a json string .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
returns { @code true } if the given { @code cause } is { @code true } otherwise .
create a new saga from the given object .
gets the points intersecting the given point in the given point .
crops the points contained in the specified point .
gets a list of all values from the given point .
list all points from the given points .
returns all points of points in a given linestring .
returns all points of the given points in the given list .
get all shapes in the polygon
gets all the polygon contained in the polygon .
get a list of all the points contained in the multilinestring
gets all the points in the list .
returns all the values in the list of objects contained in the list .
gets all the points in the polygon .


add a list of { @link featurecollection } to a { @link featurecollection } .
get a list of coord targets .
get the coordinate system as a point in the plane .
returns the byte representation of this data .
serialize this message to a short buffer .
returns a list of filters .
print the given string .
this method is used to parse a file tree structure .
flushes the data and writes the value to the stream .
given a list of files and the given files then the given { @link } is thrown .
sets the { @link repository } { @link contenttype } .
creates a { @link } from the given { @link inputstream } .
convert json object to json

read the next token from the jsonobject .
returns the fields of the specified controller .

get the {
get the encoded string representation of this .
returns the url of the url .
compares this <code > / code > to the specified { @code object } .
returns the value of the <code > string< / code > property .
{ @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link
returns a new { @link } which is authenticated .
share a and point .
create a new { @link } object .
renames the given .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
set the level of the .
log a message at the severe level . <p > the caller is responsible for closing the given message . the caller is responsible for closing the execution of the log . <p > the caller is responsible for closing the execution of the log . <p > the caller is responsible for closing the execution of the log . <p > the
log out a message for the given log message level .
logs the given message and log the message .
extract a <code > string< / code > from the given ldap attribute .
returns the attributes of the given attribute .
get the attributes of the given ldap attribute .
lookup a list of attribute values .
lookup a list of attribute values .

checks whether the given row is a valid row .
{
{
returns the column as a { @code column } object .
{

move the row to the bottom of the row .
{
{
{
the matrix of the rows in the matrix row is the same as the row .
/ * remove the column from the table .
encode the string to a jcr value .
encode a string value into a string .
decodes a string to a string .


{
assigns the group to the primary key .
returns the labels for the given string .
returns the sql statement for the unmatched parameter .
{
entropy
calculate the mean of the mean and return the mean value .
returns the mean of the values in the set of doubles .

returns a random value from the array of doubles .
returns the number of bytes in the given collection .
returns the number of integers in the given array .
generate a double constant for the double values .
set the values of the specified values in the specified array .
computes the normalized values of a collection .
computes the mean value of the doubles .
sums the values of the given values .

create indices with the
read the data data point .
{
adds a new vector to the vector .
sets the value at the specified index .
{
{

在线学习


find all the children of the given node .
find all the children of the given node .
returns the indices of the inner indices of the column in the column .
read the file and return the file .
parse command line arguments .
cleans up resources .
returns the next document from the document .
register a request to the request .
find the matching method for the given method .
handles the generic request .
start the thread .
writes the request to the log .
returns the name of the url .
parses the given uri .
get the resource for the given resource . this method is used to extract the content of the resource from the cache .
method called to close the chunk buffer .
set the for the given .
/ * ----------
this method is called when the close is closed .
creates a map of identifiers from the specified object .

summarize the and .
this method is used to retrieve all objects from the given list of objects .
calculates the for the given model .
adds a new value to the map .

put the value in the map .
create a dataset for the given feature data

calculate the graph graph from the graph .
***********************************************************************************
get the list of paths from the list of paths .
get the best - search path for the current vertex .
returns the nth ordered list of items in the list .
compares this <code > / code > to this <code > / code > .
{
{

returns a graph that projects each stage in the graph and returns the graph with the given vertices .
a convenience method for creating a collection of dataobjects .
advances the current state to the next state .
returns the next available or null if the current iterator is not exhausted .
{
translate a string to a string .
computes the vector of the words in the given vector .
add the values of the source tensor to the source array .
calculates the resistance for the pca grid .
calculates the matrix of the given file matrix .
{
get the { @link } for the given file .
returns an instance of { @link } that will be used to retrieve the stack .
get the stack of the { @link } s .
<p > retrieves the { @link stack } of { @link } s . < / p >
returns a stream of properties that are available in the configuration file .
create a new { @link securityexception } object from the given { @link } .

check that the value is a map of .
gets the value of the key .
returns the first value of this resource .
returns the results of the current route .
{
adds a remark entry to the index .
{
this method is called when the end of the row is in the same space or not in the same order .
retains the full columns of the columns in the order of permutations .

returns the number of columns in the given row .
returns the column at the specified row .

sets the row column of the specified column .
sets the row indexes for the specified row .
{
returns the results of the specified word in the specified list .
adds the { @code options } option to the { @code } .
{
{
shuffles the elements in the array in place .


{
starts the emulator .
build the array of values from the array .
open the stream .
save the given output stream to the outputstream .


<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
processes the token .
returns the most approximate approximate approximate approximate squared - neighbors in the specified list of
returns the largest relation in the given row of the specified row in the given row .
factory method for creating a new { @link } based on the given { @link } .
creates a new instance using the given certificate .
creates a new { @link } from the given { @code } .
creates a new object based on the keystore .
sets the ocsp responder response .
shuts down the current connection .
encode the given len bytes .
writes encrypted data to a { @link bytebuffer } .
read data from the .
logs the error with the given error message .
ghost ssl handshake .
sets the protocols to accept the protocols .

this method is used to convert a string to a java . crypto . openssl . .
adds the given element to the index .
set the value of the element at the given index .
add all the promise to the queue .
add a value to the value .
sets the value of the specified value .
{
creates a new { @link } instance for the given string .
creates a new oauth request .
/ * public void ( string string string params char string params params params params params ) { return ( ) ;
creates a new object that contains the default smtp ( oidc ) recipient message .
creates a new oauth request .
loads the properties from the properties file .
runs the embedded toolkit .
add additional properties to the properties file .
creates a new instance of { @link } that is compatible with the given { @link } .
checks whether the cmd is a booleanquery .
checks if the current state is a phone number .
send heartbeat to the heartbeat queue .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
called when the client is running .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
/ *

<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
adds the items to the list of suggestions .
adds a single error message to the list of conditions .
adds a condition to the given failure condition .
constructs a record from the given record name .

/ * ( non - javadoc )
{
{ @link }
{ @link specification } for retrieving { @link distributionset } s by like { @link distributionset } .
{ @link specification } for retrieving { @link distributionset } s by like { @link distributionset } .
{ @link specification } for retrieving { @link distributionset } s by like { @link () } .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
get all the users accessible { @link profilefield } .
persist all the { @link } objects to the { @link } .
checks whether the task is showing the task .
create a new based on the given type .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
get all the nodes in the list .
{ @link specification } for retrieving { @link } objects that have been deleted .
{ @link specification } for retrieving { @link } s by name .
{ @link specification } for retrieving { @link } s by given type .
helper method to convert base64 encoded base64 encoded string to base64
calculates the number of random numbers in the given range of ints .
{
claim a {
acquire a release lock for the specified node .
returns the queue of the node registry .
releases the ticket for the ledger .
/ * ( non - javadoc )
remove the node from the head of the node .
check ticket ids for a node .
attempts to delete the znode from the zookeeper node .
attempts to delete the given node from the given node .
/ * update the for the
add a new number of zoom level to the bottom of the view .
check the request and pagination .
filter the .
invokes the method on the target table .
get targets type
{
pop the stack from the current state .
calculate the min extent of the extent of the extent of the vector .
/
/
show the notification .
decorate the given { @link } .
visits a scope scope .
returns the server inet address that is the default configuration of the server .
parse the pseudo - - - .
parse emv information to .
convert a string to a java name .
returns the for the given key .
{
/ * ( non - javadoc )
{
/ *
decodes the header and returns the response encoded .
decodes a from the given encoded encoded encoded string .
convert the byte array to a string .
convert the string to a string .
checks that the address is valid .
/ * ( non - javadoc )
/ * ( non - javadoc )
close the statement .
calculates the for the given .
returns the source bindings for the given key .
returns the for the given bindings .
creates a new connection to a database .
process the next chunk of the rabbitmq block .
registers the binding of the binding .
resolves all the bindings that are referenced by the { @link injector scopes } .
creates a new {
creates a new method call .
creates a new method call for the given method name and assigns the given parameters .
checks if the method is a long .
mock

traverses the instrumentation of the ginjector initialising method the given method and modifiers .
inject the annotations to the target type .
executes the given python command .
checks if the given path is a directory or a foreignkey .
checks if the given list of files are opened .
creates the report for the report file .
report the output files .
creates a summary of the .
gets the file name of the file name .
process pam .
write data to socket .
calculates the block of alignment .
initialize the probability of the probability of the grid probabilities .
/ * ( non - javadoc )
returns the sub - substring of the <code > string< / code > in the <code > string< / code > value . <code > / code > is the <code > / code > character . <code > / code > is returned in the case of the <code > clob< / code > value that is returned .
returns a <code > clob< / code > value of the <code > clob< / code > value that is returned . the length of the <code > clob< / code > value is a <code > clob< / code > value that is returned .
sets the character stream at the given position .
returns the characters of the character represented by this <code > / code > .
set the string at the specified position in the given position .
{
start the connection
{
add blacklist to the cluster .
resets the clock to the cluster .
set the host to be considered .
handle a single method invocation .

connect to the database .
/ *
creates a port from the specified port .
compute the convolution matrix .
compute the lu of the matrix .
filter image from raw text to crop .
/ *
creates a new buffer with the given { @code } .
encode a response header .
/ * parse the buffer to the end of the buffer .
returns the end of the end of the buffer .
called by the { @link plugin } to be used for authentication .
process the next token .
initialize the main jframe .
returns title of the rabbitmq - print - - -
start the gui .
flush the flush to be flushed .
returns the version of the given string .
parse the range [ 1 ] .
remove all values from this buffer .
retrieve a connection from this connection .
retrieve a connection from the database .
returns a new connection capable of creating a new connection .
sets the multipart boundary .
parse the body of the request .
parse the body multipart body .
decode multipart / form - data source .
checks if the given { @code bytebuf } is not empty .



{
updates the attributes of the { @link } .
reads the next line from the reader .
reads a line from the reader .
/ * assigns id to the .
remove the id from the tracker .
update the number of id in the .
move the current step to the end of the step .
this method is called when the preferred instance is created .
render the path to the file .
/ * ( non - javadoc )
move the current move to the current move .
check if two points cross diagonal is equal to the quaternion matrix .
check if the current matrix is a
check the delta of the .
check the id of the connection .
called when the is called .
returns the ne change for the specified .
returns the maximum step for the current step .
/ * collidable
/ * recyclable
populate col data .

returns a new {
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
returns the maximum 100 hash of the key .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a { @link } to a collection of <code > / code > .
splits a string array with a separator .
{
{
return the value of the row as key in the row s row id .
{
set the filter to be used .
initialise the game .
hides the visibility of the keyboard focus .
transform the transform in the transform to the transform .
render the current frame .
free this object .
insert a record using the given key and filename .
returns iterator sorted by the amount of time sorted by the first position of the sorted sort order .
creates a new { @link } instance .
get system property system property .
sets the random random {
creates a random value from the given { @code bloomfilter } .
construct a random {
gets the value of the trigger property .
gets the value of the property .
gets the value of the role property .
add a new component to the list of component . <p >
adds the given component to the given tabbed pane . <p >
add a new feature to the list of .
remove an existing from the list .
add the to the .
remove the from the .
/ *
/ *
creates a new fileoutputstream for the given output stream .
creates a sax reader for the given input stream .
write the data to the output stream .
returns the specified {
copies the input stream to the output stream .
create a new { @code doublegene } object from the given genes .
create a new random chromosome .
create a new chromosome of { @code double } values .
creates a new { @code doublegene } with the specified length .
create a new random { @code double } from a { @code range } .
create a new { @code doublegene } from the given range . if the range is empty { @code null } is returned .
copies the specified { @link inputstream } to the { @link outputstream } .
copies the { @link inputstream } to a { @link } .
process the input stream and process the input stream .
process the inputstream .
this method is used to set the control header for the specified request .
create a cache of control cache .
create a new publication for a given cache .
returns a cache for the specified class .
returns the first token of the token .

disposes the current {
applies the given transform to the given { @link mapfunction } .
this method increments the bucket size and the given buckets .
returns the regex pattern string .
this method is used to decode the properties of the properties .
decode the given set of uuids .
compares this { @link } to this mutable object .
get a {
{
combine two histograms together .
{
fails out the view with the specified probability predicate .
create a { @code genotype } from the specified { @code genotype } .
create a new { @link phenotype } with the specified { @link } .
returns true if the two constraints are in the same order .
transmit the progress of the current thread to the current thread .
navigates to the current size of this object .
/ * ( non - javadoc )
{
creates a new { @link } .
copies the contents of the object to the target row .
set the field to the target object .
<p > computes the moore cosine of the given . < / p >
add a direction to the direction of the two direction .
add a direction to the
sets the direction of the ray .
update the last webdav entry .
update gesture .
constructs a calendar from the specified string .
update the vector of the matrix
substract a interval from the specified string .
restore the current state of the current clip .
parse a second string to a long value .
/ * updatable
returns true if the node is not in the list .
push this node onto the stream .
removes a node from the given uri .
create a new gene with a given source and allele .
create a new gene with the given supplier .
navigate to the current node .
check if the node is a uri or a node .
removes the node from the node .
add a correlation correlation id to a node
find the next correlation id from the torrent .
remove a correlation id from the list of blacklisted states .
writes a data point to the stream .
get the data for the hash code .
writes the data to the stream .
get the data for the data .
set the state of the current state .
get the state of the given context .
closes the connection .

send a message to the client .
sends a message to the client .
sends the given command to the current thread .

build the tree for the specified node type .
performs a single - atom and returns a new array that is the same as the first one .
/ * extract information of the endpoints from the specified endpoint .
initialize the endpoint
initialize the endpoint information .
returns true if the given {
this method will return a list of objects .
get the producer cursors for the producer
helper method to get a list of endpoints
reserved for internal use .
compare the tile at the given index .
check if the sprite image is located at the given location .
extract image from device .
get the number of non - overlapping tiles in the given tile .
extract the whole image from the given collection .
evaluates the tree tree and returns the root node .
checks the given { @code } .
create a new program
create a new node from the given node .
create a new node from the given node .
create a new node tree from the given node .
get the index of the nodes for the given nodes .
normalize the doubles in the form .
divide the values in the given array .
/ * ( non - javadoc )
clamp values in lo to a given value
returns the position of the slice in the slice .
{
gets the handler handler for the given expression .
expand the pattern in the pattern string .
expand a string in the form of a string .
parse a sequence of { @link } s in the form {
returns the child at the specified index .
inserts the given node at the given index .
replaces the child of this node with the given child .
remove the specified node from the tree . this method is called by the parent { #link } .
remove a path from the tree .
replaces the child of the node with the path of the tree .
remove a child from this node .
remove all children of this tree .
insert a record to the record .
{

attaches the tree to the parent tree .
adds the given child node to this node .
maps the target type to the target object .
returns a new node which is the first node in the tree .
returns the node tree for the tree tree rooted at the tree tree rooted at the tree tree . this tree is a tree of nodes in the tree tree . this method is equivalent to {
parse the given tree into a tree .
parses a string into a new node .
{
increases the capacity of the array .
returns the { @link } { @link } with the given { @link string } .

returns the name of the type name of the class .
sets the view pool view to be displayed .
check whether the mode is a valid .
returns the { @link } that is the given { @code } .


merges two associative functions together .
peek a new item to the last poll .
peek a consumer to consume items on the right side .
{
{
returns a { @link } that composites over the given accumulator .
{
{
{
{
{
{
{
{
create a new instance of { @link } from the given { @code } .
<p > it creates a new { @link } that is emitted by the reduction of the target and the given supplier . < / p >
returns a formated date string from the specified date string .
<p > . < / p >
returns a new { @code throwable } which applies the given { @code predicate } to the given { @code predicate } and returns its result .
returns a new {


a lens that focuses on the element at a position within the given index .
a lens that focuses on a { @link } .
creates a new { @link } from a { @link } .
add the current {
set the month field text .
touches the last date date and fires a new date event .
set the field event field value .
initcomponents this initializes the calendar .
create a new shard shard
sets the text of the textfield .
check if two objects are equal
returns the java version of the current version .
loads the java version string from the classpath

get the surface insets of the given window .
gets the screen display area of this window .
gets the current screen .
parse the date - time formatter locale . <p >
get the date formatter for the locale pattern . <p / > <p > the locale is determined by locale - specific locale . <p >
parse a date and time string .

get the constraints for the given graphic .
check if the date is a date or a date or a date .
checks if the component is scrollable .
returns the substring of the given string .
get the version of the given class file .
get the major version from the given file .
sets the default table table style ( ) of the grid view .
main method .


/ *
/ *
returns a string that represents the given of the given .

decodes a column from the database .

helper function to generate the current progress of the specified job .
cancel the given synchronization of the given .
run the program .
build a program program
handle the program .
handle error reporting .
parses the job id from the job id .
run the cluster .
/ * ( non - javadoc )
main method .
returns the directory of the environment .
returns formatter specific extra formats supported by locale . <p >
set the { @link } to be used for the job .
returns the custom { @link } command line .
load a custom command line .
returns a new for the given join type .
returned by the class name of the class or null if the string is not null
joins the given join type according to the following production rule : <br / > <br / > [ ] [ [ ] [ [ ] [ 1 ] .
transfers data from to .

handle data from the ufs file .
shut down the service .

check if the given segment is a sequence of string arguments .
find the index of the first occurrence of the pattern in the pattern .
creates a union of the union of the union data and compacts the union of the union data .
splits the given { @link } into the { @link } .
filter output stream .
map the mapper function to the output stream .
creates a new gson type from the given { @link } .
returns a new { @link datastream } that contains the given { @link keyselector } .
write text to the given path .
writes the given host to the given host .
adds a { @link } to the stream .
resolves the kjar to the given target file .
download the artifact from the given source directory and stores it in the download directory .
creates a commandline command line command line arguments .
build a command line command line command line breaks down .
get soil graph from server .
is the process to process the process .
executes a script with the given name and type .
execute a script using the default { @link } .
executes a translet and returns the results of the given type .
creates a map of all the environment .
transform a tuple to a tuple .
a {
{
{
creates a lens that wraps the given { @link function } .
determines if the file path is a directory or directory .
{
reads the next byte from the input stream .
close the stream .
build a new { @link } instance .
parse the given input string .
marshall the given parameter object .
create a new instance based on the algorithm parameters .
handle the request .
writes the given string to the given file .




creates a new request object from the specified object .

cast a object to a list of type {
trim the string that is a whitespace string .

destroys this pool manager .
reallocate the segment buffer .
{
compares this object to another .
set the properties of the specified { @link } .
creates a new cipher for encryption .
creates a cipher for encryption .
opens the data for the given input split .


checks the response status code for the response .
{ inheritdoc } .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
{ inheritdoc } .
{ inheritdoc } .
{ inheritdoc } .
{
returns true if the row is a valid table .
returns true if this row is a materialized materialized view .
returns true if the row is a row where the row is a row of the result .
carry out the result of the hit statement .
move the cursor to the current row .
{ inheritdoc } .
retrieves the date of the designated column in the given column .
returns a time value from the designated column of the given column .
{ @inheritdoc }
retrieves the timestamp of the column in the given timestamp .
{ inheritdoc } .
{ inheritdoc } .
{ inheritdoc } .
{ inheritdoc } .
{ inheritdoc } .
{ inheritdoc } .
{ inheritdoc } .
returns stream of data from a column of binary data .
get a string value for the given column .
adds a new sample to the map .
sets the error threshold .
sets the threshold to be displayed .
{
handles the { @link event } .
create a {
add a new element to the list of integers .
set the element at the specified position in the array .
adds the specified element at the specified position in this list . shifts the element currently at that position ( if any ) .
gets an unmodifiable view of the given array of ints .
creates a view of a range of elements from the given array .
returns a range of integers from the start of the given range .
computes the maximum derivative objective for the given row .
searches the reduction of the search term .
computes the neighbors for the given rank and the given list of solutions .
{
/ * ( non - javadoc )
get the value of the property .
get the for the specified proxy .
this function will be called by the collector configuration .
this function will validate the fax job data .
this function will suspend an existing fax job .
this function will suspend an existing fax job .
this function will cancel an existing fax job .
this function returns the fax job status . <br / > this fax job status is returned . <br / > this fax job status is returned . <br / > this fax job status is returned . <br / > this fax job status is returned . <br / > this fax job status is returned . <br / > this fax
this function returns the fax job response .
this method allows you to configure a http request .
this function will update the fax job .
process the process process . utilizes output .
copy properties from map to target properties .
this function will return the format of the target . <br > this function will return the string describing the destination .
replaces template parameter with the given template parameter .
encode the given text into a url .
decodes the given text string into a url .
this function returns the file parameter value .
returns the information for the given type .
returns the selected selection list .
add a new binding to the list of added bindings .
add a binding to the list of ancestors .
remove the from the current list .
remove the specified binding from the list of receivers .
clear all the nodes .
disposes all the resources that have been saved to this database .
returns true if this node is marked as a replica .
applies edges to the vertex type of the graph .
returns a graph edge from a graph type .
adds a listener to the invalidation listener .
removes the listener from the invalidation listener .
add a listener to be notified when the listener is changed .
returns a graph containing the type of the graph graph .
{
returns a dataset with the given path for the given column .
reads a single geometry from a column of numeric values .
reads a single row from a single column .
reads a single regression data set from a numeric value .
creates a new classification for a given target .
reads a set of data from the given input stream .
helper method for reading a classification data set from a set of characters .
creates a new classification for the given path and creates a new array containing the given values .
read data set from the given { @code } .
<p > reads the specified number of lines in the specified { @link } . < / p >
read data from a { @link } .
reads the contents of a { @link } into a { @link } .
sets the values of the given k - vector .
sets the learning rate for the output .
set the regularization penalty .
set the cumulative frequency of the specified latitude / longitude value .
returns a new { @link } which is a new { @link } .
scales the decimal - range of values from the input vector .
update the data of a new data set
fit the data set in the given .

this method is used to update the measurements for a given data
prepare the gamma function .
computes the mean of the phi vectors and the bias term .
compute the size of the native soft bits .
this function is used to validate the input process .
this function executes the process .
returns the keys in the keys .
returns the int value associated with the given key .
returns the float value of the float value .
returns the value of the given key as a byte array .
{
adds a new diagonal to the matrix .
adds a new row to the row .
a new row matrix that computes the column of the matrix .
<p > performs a matrix multiplication operation : <br > <br > c = a<sup > t< / sup > * a<br > < / p >
<p > performs a matrix multiplication operation : <br > <br > a = c vector = &alpha ; b = c < / p >
computes the row where the diagonal row is a sequence of rows in the matrix .
performs a matrix multiplication .
adds a new matrix to the matrix .
<p > adds a new matrix to the matrix . < / p >
<p > performs a matrix multiplication operation : <br > <br > c = a * b<sup > t< / sup > * u * u<sup > h< / sup > * a * b<sup > t< / sup > * b<sup > t< / sup > <br > c = a * b<sup > t< / sup > * b<sup > t<
<p > performs a matrix multiplication . the matrix is the same as the input in the matrix . the matrix is the same as the input in the matrix . the matrix is the same as the input in the matrix . the matrix is the same as the input in the matrix . the matrix is the same as the input
adds a new row row row vector to the matrix leaving the original vector .
/ * ( non - javadoc )
<p > assigns the householder reflection to a matrix . < / p >
swap a symmetric matrix with the given k - k eigenvalues .
swap the rows of the matrix .
<p > performs the householder u to the householder vector u . < / p >
stores the matrix in the given matrix .
creates a string for the given string .
create a complex complex complex number of complex numbers .
generate a complex underflow of cudoublecomplex <code > <a href = 0< / code > .
generate a complex - wise complex - wise complex number of complex outputs .
materialize the data from the current row .
materialize the current row of the current row .
sets the tolerance value tolerance of a new tolerance .
updates the row vector centroids .
performs the given double function on the given root .
sets the maximum allowed history of the history .
/ * adds the specified object to the history .
returns the history of the given time .
adds a new set of categories to the list of neighbors of the list .
<pre > the google service value is a gpu . < / pre >
get data point from a { @link vec } .
get all values for each value in the list
<div color = red style = font - size : 24px ; color : red > <b > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > add a column to this
set the sigma parameter


sets the width / height paint .
set the column width .
loads the attributes from the .
create anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous anonymous .
<pre > the script path to the script . < / pre >
<pre > the path of the script to be returned . < / pre >
/ * ( non - javadoc )
<p > . < / p >
sets the default strategy .
adds the given strategy to the current .
returns true if the application is installed .
disable logcat red .
sets the search parameters .
validates the given configuration .
remove the { @link properties } from the properties and returns the properties of the given properties .
creates a new { @link } from the given { @link properties } .
get the producer configuration for the given configuration .
returns the text for the text .
update the .
set graphics graphic .
update the graphics screen .
return the length of the given .
/ *
returns the name of the font for the font family name .
finds the font for the font family .
returns the full font of the specified string in the given set of bytes .
validate the configuration of the given configuration .
returns the string representation of the specified monetary { @code money } .
print the given { @link appendable } object .
<p > . < / p >
parses the text as a { @link bigdecimal } .
parses text from text .
{
{
/ * ( non - javadoc )
sets the paths of the paths .
returns the paths of the table storage folders .
returns the options of the .
gets the options for this option .
attempt to load the file .
creates a new saga instance with the given key .
create a new instance of .
sets the manager to use for the { @link } .
overridable method that returns the key type of the key .
defines a builder for the type of the specified type .
returns the value of the specified field .
sets the value of the specified field .
sets the value of the specified class .
sets the expire time to be executed . <p > note that the mutation operations will not affect the uid .
sets the user s configuration .
<p > . < / p >
sets the cache to be used for the given class .
sets the { @code } to be used for the given { @code } .
sets the cache to be used .

sets the cache to be used for the given writer .
adds the given { @link } to the cache .
adds a new listener to the constructed list .
adds the given entry to the cache .
sets the value of the provided { @code } to the value .
sets the retry count .
sets the maximum retry interval count .
sets the current time the last tier is rolled up to the duration of the specified time .
sets the policy to be used to perform the execution action .
sets the configuration section of this { @link configsource } s .
sets the current time the execution of the given executor .
sets the current executor to the given executor .
<pre > describes the requirements that validate the requirements that are associated with the aws account . < / pre >
<pre > the quota action for the failure . < / pre >
sets the value of the { @code } s .
sets the value of the gauge to the value set .
build a cache entry for the given key .
build a {
sets the cached { @code } and { @code } .
<pre > describes the key action that defines the most specific error page . < / pre >
<pre > the action failure failure for a specific error . < / pre >
/ * [ deutsch ] <p > interpretiert den angegebenen ohne . < / p >
convert a year date time to a date
convert a year month .



parse a monthday from a monthday .
{
returns the version of the current versionname .
get the revision information for the given revision .
returns the user - defined class name .
get the memory allocation for the given jvm .
returns the size of memory allocated in kilobytes .

this method returns the command line options
get the auto - start options of the given jvm .
/ * returns the file limit for the current thread .
log a meta - info key .
{
retrieves a <code > set< / code > object that represents a <code > resultset< / code > object describing the <code > methods< / code > of the returned constraint <p >
create a new gene with the given id .
retrieves a <code > table< / code > object describing the accessible tables in the table . <p >
execute the build command .
retrieves a <code > table< / code > object describing the accessible tables in the database . <p >
{
add a {

{
retrieves a jdbc driver for this database . <p >
retrieves a <code > table< / code > object describing the accessible tables in the database . <p >

check if the given type is a fixed length part .
returns true if the input is not in the stream .

returns a {
this method initializes
sets the title of the . the title will be visible in the .
defines the text for the text .
sets the sections to the rpm
adds a new sections to the list of sections . sections in the medusa library usually are not needed .
removes the specified section from the list of sections . sections in the medusa library usually are concerned with the same size .
defines if the sections is visible in the areas .
defines the sections that will highlight the areas of the sections .
sets the sections to the list of sections . areas .
adds the given to the list of areas .
removes the given from the list of areas .
defines if the sections should be visible .
defines the areas of the areas .

defines if the title of the title is visible .
defines if the text of the visible visible indicators is visible .
defines if the date is visible .
defines the for the radial gauges .
defines the paint that will be used to draw the radial paint .
defines the paint for the .
defines if the indicator of the clock should be visible .
sets the footer of the gauge .
defines the color that will be used to colorize the title of the gauge .
defines the color that will be used to colorize the color of the gauge .
returns the json object converted to a json object .
sets the border width
defines the color that will be used to colorize the date - line .
defines if the hour tickmarks is the start of the minute .
defines if the minute tickmarks is the same as the value of the gauge .
defines the color that will be used to colorize the poi tickmarks .
defines the color that will be used to colorize the .
defines if alarms are enabled .
defines if the ticklabel is visible .
{
upload the file to the server . <p >
defines if the image is drawn according to the option .
defines the location of the location that will be used to visualize the location of the location .
defines if the custom font is scrollable .
get the value of the property .
defines the font banner .
fired when the is shutting down .
check if the time enters the time at the time of the timezone .
******************** initialization ************************************
******************** methods *******************************************
******************** resizing ******************************************
creates a skin configuration object .
******************** initialization ************************************
******************** methods *******************************************
checks if the font widths are not digits .
<pre > monitoring configurations for sending metrics to the subscription . < / pre >
<pre > monitoring configurations for sending metrics to the producer . < / pre >
<pre > monitoring configurations for sending destinations . < / pre >
<pre > monitoring destinations . < / pre >
<pre > monitoring configurations for sending metrics to the consumer project . < / pre >
<pre > monitoring configurations for sending metrics to the consumer project . < / pre >
<pre > monitoring configurations for sending destinations . < / pre >
<pre > monitoring configurations for sending destinations . < / pre >

returns the output format for the tune .
check if the file name is a file .
returns the set of locales that are available in the current environment .
get the runner that is used for yarn script .
checks if the style is a style name .
loads the style of the style from the url .

get the link to the parent
sets the output format for the given format .
sets the links to the given links .
{
register a css function .
converts a { @link } to a { @link } .
converts a { @link citation } to a { @link list } of .



creates a new one for the specified .
creates a new instance of the specified .
******************** initialization ************************************
******************** methods *******************************************
{
set the token for this decision .
get the tokens for the userattribute of the user .
sets the divider to this item .
set the value of the option to this attribute . <br > <br > defaults to <code > null< / code > .
returns the string representation of this attribute .
set the css option .
sets the value of this attribute to the specified value .
returns the content of this user s content .
sets the hidden attribute . <br >
get the cause of the given throwable .
set the properties to be used for the given separator .
<p > returns a list of supported specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications specifications for each feature . < / p > <p > if the string is not <code > null< / code > and is returned
parse a specification from a string .
parse a specification of specifications and returns a list of specification specifications .
******************** initialization ************************************
******************** methods *******************************************
******************** canvas ********************************************
creates a new instance of { @link } .
returns true if the automaton is not a distinguishing of { @link } .
this method is intended for type - based iteration on how often the process execution is interleaved .
transform the given { @link } to a { @link } .
generates a { @link } that is able to execute each loop .
{
get the log log of the disk .
return the hosts and excludes the .
----------------------------------------------------------------------------------------------------------------------
creates a new { @link } instance that will create the { @link } .
returns the next available port .
{
fires a summernote blur event .
start the activity .
creates an intent that will be used to show the intent from the intent .
create an pendingintent to be used for the intent .
add a { @link logconfig } to the given class name .
this method is used to convert the capabilities of this query to a { @link } .
returns the default app default app ( arch ) is used to display the app version .
returns the default version of the given app .
get a boolean value from the given key .
calculate the exponential distribution between the cosine and the given factor .
creates a new matrix with the given values .
create a new
adds a new sample distribution .
merges the mu of the given distribution .
{
returns the snapshot of the current snapshot of the current snapshot .

try to read a message context .
{
{
{
serialize the payload to the session .
create a new query .
encode the number of bytes in the specified byte array into a byte array .
create a new domain with the specified timeout .
execute the bridge process .
fetch the contents of the file .
execute the given asyncwork .
reads the robots file from the given stream .
reads the entry from the reader .
closes the stream .
parse the line - up - 1 if the name is not a string .
executes the given action on the specified group .
creates a new thread - thread which is used to create the thread pool .
sends the message to the client .
finds the first index of the first occurrence of the message received from the message .
sends a message to the end of the message .
/ * ( non - javadoc )
returns the status of the finite number of items that were saved to the list .
returns the next available buffer .
returns the next available array from the memory buffer .
--------------------------------------------------------------------------------------------
closes the current node .
free this number in memory .
computes the hash code of the hash code point .
creates a new .
{
{
write a variable count to the output stream .
extract the current { @link } of the given { @link class } .
returns the absolute distance between this two given strings . the returned { @code } is the <code > / code > parameter of the <code > / code > parameter .
saves the current state of the object to the bundle .
restores the instance state from the current state .
registers a { @link } to notify the { @link } registered with the { @link } .
opens the new { @link serverconfiguration } .
flush the transaction to the kafka producer .
creates producer for producer 2 .
/ * ( non - javadoc )
/ *
transform the help to the client .


delete the range of rows from the database .
returns true if the prefix is not empty .
handle the best state for a given sequence of .
returns true if the method is not a cglib - prefix .
returns a {
adds a new field offset to the data store in the given offset .
returns the source field information of the input source .
checks the given { @link string } represented by the given { @link string } .
creates a new instance of the .
creates a new for the given .
closes the readindex and closes the readindex .
creates a object from the .
clear the list of all the .
releases all tables from the table .
creates a partition partition for the partition .
helper method to build a median filter .
--------------------------------------------------------------------------------------------
returns the number of bits from the output .
computes the 2<sup hash function to a given value .
/ * ( non - javadoc )
allocates a slot for a given node and returns the successor of the given slot .
allocates a slot for a given slot sharing group for the given slot id .
remove child child of slot .
/ *
/ *
collects all items in the given iterator .


<p > . < / p >
get the content outer tag outer inner tag tags for the given tag .


parse a duration expression .
generate a python - sparql - dump - tree python command .
generate the python - command line for the given file .
generate a map of typescript jars from the manifest file .
executes the given job . the result is not raised if the job is successfully executed .
{
installs the shutdown hook .
checks if the given { @link } is present .
scan the scan .
set the current scan timeout .
starts a new engine .
starts the {
reset the watchdog .

/ * ( non - javadoc )
remove an from the given .
adds a new broadcast set set to the list of broadcast data set .
create a from the msg .
opens the command line .
execute update operation
parse command line .
creates a default terminal .
joins the string representation of a string .
writes the content of the rtf document .

/ * ( non - javadoc )
returns the string of the given class .

convert the given camel case folding expression to a stringbuilder .
tokenize a string
tokenize the given string
add a task to the task queue .
{
push the current token to the current one .
runs the command line arguments .
/ * auxiliary method to store the information from the zookeeper .
decode the header .
creates a observable that will resume replay or execute the filter .
convert a byte array to a byte array .
close the database .
closes a jdbc connection to a jdbc connection .
write the content of the dbase file .
convert a { @link } to a javascript function .
returns the { @link } for the given { @link } .
sets the parameters for the given parameters .
<p > checks if the alignment is aligned in the alignment . < / p >
starts the .
returns the server inet address .
shuts down the { @link channelpipeline } of the { @link tcpserver } .
create the directory for the given upload directory .
checks the given directory and if the given directory is an error or thrown if the upload directory is empty .
returns the string representation of the string representation of the string .
resets this sorter .
{
/ * ( non - javadoc )
returns iterator for the given iterator .
append the header name of the given variable name to the given { @code } .
create a new { @link } instance .
returns the type of the given type of { @link typeinformation } for the given typeinformation .
/ * ( non - javadoc )
deletes the specified file .
{
resolves the given { @link } expression as a metric
sets the global - global global .
sets the x - coordinate .
rewrites the given source files to the given source .
reports warnings to the error reporter .

generate a boolean constant summary flag indicating the number of branching instructions should be generated .
print a new trace string .
returns the value of the attribute as a string .
check if the attribute is not a valid attribute .
returns empty content if it is not a sanitizedcontent .
returns a {
returns a html - based mask of the given content - types .

returns a string that is a sanitized representation of a given {
returns a string that is a string that is a string representation of a given input .
returns a string that is a constant of a .
returns a css code that is a css css css class and a css function .
creates a constant variable of a given visitor .
creates a string denoting a hardcoded resource .
get the font number for the font .
write the definition of the font to the output stream

returns a string value from a string constant .
converts a { @link sanitizedcontent } of kind js code to a { @code sanitizedcontent } .

returns a {
converts a safescript into a { @link safescript } .


returns the { @link safestylesheet } s of the given { @link } .



validates the given resource name .
handles the { @link appendable } for the given { @link appendable } .
/ * ( non - javadoc )
returns the { @link } for the given { @link } .
returns a { @link } for the given url .
create a .
creates a single single single single single single .
generates a variable message for the given node .
builds a string containing the name of the given node name .
creates a new object which is the given signature .
builds the msg string to the given message .
wml2 : method called from .
applies the given { @link } to the { @link } and { @link } .
helper method to infer the msg message for the given node .
adds the msg message to the list of violations .
append a placeholder
decodes a placeholder name to the .

visit a tag
returns a new instance of { @link } .
appends the specified string to the end of this string .
returns whether this range contains the specified character .
adds a new label for the specified page number .
adds a page label for the given label .
gets the dictionary dictionary .
get the labels labels for the given column .
gets the page title .
/ * opens the input split as a single parameter .
closes the connection .
{
sets the media box for the media media .

<p > . < / p >
returns the public accessible accessible constructor of the given class .
get a constructor of accessible accessible ( accessible ) accessible by the given constructor .
<p > returns a constructor of the specified class or null if the parameter is not found . < / p >
remove the notation from the given string .
removes the given prefix from the given method name .
returns a new for the given .
returns a new { @link } for the specified version .
multiply two matrices . this is equivalent to the dot product of two vectors .
writes pdf to the pdf document .
put a key / value pair to the map .
puts a mapping from the specified dictionary into the map .
gets the dictionary .
gets the .
gets the <code > param< / code > object containing the data from this bundle .
gets the value of the property .
gets the number of bits of this variable in the partners .
gets the value of the specified property .
retrieves the value of the pdf data retrieved by this property .
returns the reference to the <code > / code > object . the object is uniquely identified by the <code > / code > .
start participation in the given {
returns the set of active database executions for the given job id .
creates a new { @link } for the given { @link } .
allocate a slot for a slot in the specified slot .
check if the slot is a given slot id .
check if the slot is a live slot for the given slot id .
this method is used to decide if the slot is a slot for a job .
check the amount of time to check if the given ticket is available .
check if the slot is a given jobid
tries to allocate a slot for a given slot for the given slot id .
get the job job from the given jobid .
adds a task to the slot .
remove a task from the task .
get the task for the given slot .
{
retrieve the slot from the given task id .
{
------------------------------------------------------------------------
executes a job execution .
returns a plan plan for the plan .
creates a plan for the plan .
{
{
deletes the commerce notification queue entry from the database .
updates the commerce notification queue entry in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .

converts the string value to a float .
converts double to a double value .

converts a short string to a short value .
creates a number of strings from a string .






returns the minimum value of the given array .
returns the minimum value of the given byte array .

get the minimum value from the given array

<p > . < / p >


returns the minimum value of the specified operand in this sketch .
/ * ( non - javadoc )
returns the maximum value in this range .
checks if the given string is a .
{
{
creates a option binding option to the default option .
<p > decodes the encoded charsequence to a { @code } . < / p >
returns true if the given string is a full search string .
normalize the attribute .
rotate the rectangle tied to the right frame .
returns true if the borders of this board is black .
update border black pixels

sets the rectangle position of the current line .
this method is used to calculate the shadow bounds of the shadow bounds .
aggregate the given tuple into a single value .
/ * [ deutsch ] <p > einen eine kopie operator . < / p >
adds a given field to the list of documents .
sets the operator .
sort the group of rows in the specified field .
sorts the specified { @code key } using the specified { @link keyselector } .
serialize the dbase file to the end of the file .
{
{
returns true if the page is present .
create a new tunnel for the given uri .
returns the prefixes for the given .
gets the context context for the given column index .

get base class type from class .

sets the cp friendly url local service .
sets the cp route category service remote service .
sets the remote service .
sets the asset entry endpoint .
sets the asset remote service .
sets the local service .
sets the service .
creates a new { @link } instance that schedules the { @link } .
adds the commerce wish list to the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
creates a new commerce wish list with the primary key . does not add the commerce wish list to the database .
deletes the commerce wish list from the database . also notifies the appropriate model listeners .
deletes the commerce wish list from the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns the commerce wish list matching the uuid and group .
returns all the commerce wish lists matching the uuid and company .
returns a range of commerce wish list matching the uuid and company .
returns the commerce wish list matching the uuid and group .
returns a range of all the commerce wish lists .
updates the commerce wish list in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
sets the commerce wish list item local service .
returns the first cp option in the ordered set where uuid = &#63 ; .
returns the last cp option value in the ordered set where uuid = &#63 ; .
returns the cp option value where uuid = &#63 ; and groupid = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
removes the cp option value where uuid = &#63 ; and groupid = &#63 ; from the database .
returns all the cp option values where uuid = &#63 ; and companyid = &#63 ; .
returns the first cp option value in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the first cp option value in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the last cp option value in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns a range of all the cp option values where groupid = &#63 ; .
returns the first cp option in the ordered set where groupid = &#63 ; .
returns the first cp option in the ordered set where groupid = &#63 ; .
returns the last cp option value in the ordered set where groupid = &#63 ; .
returns the cp option values before and after the current cp option category in the ordered set where groupid = &#63 ; .
returns a range of all the cp option values where companyid = &#63 ; .
returns the first cp option in the ordered set where companyid = &#63 ; .
returns the first cp option value in the ordered set where companyid = &#63 ; .
returns the last cp option value in the ordered set where companyid = &#63 ; .
returns the cp option category before and after the current cp option in the ordered set where companyid = &#63 ; .
returns a range of all the cp option values where cpoptionid = &#63 ; .
returns an ordered range of all the cp option values before and after the current cp option value in the ordered set where cpoptionid = &#63 ; .
returns the first cp option value in the ordered set where cpoptionid = &#63 ; .
returns the last cp option value in the ordered set where cpoptionid = &#63 ; .
returns the last cp option value in the ordered set where cpoptionid = &#63 ; .
returns the cp option value before and after the current cp option option in the ordered set where cpoptionid = &#63 ; .
returns the cp option value where cpoptionid = &#63 ; and key = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
removes the cp option value where cpoptionid = &#63 ; and key = &#63 ; from the database .
returns the cp option value where companyid = &#63 ; and externalreferencecode = &#63 ;
returns the cp option value where companyid = &#63 ; and externalreferencecode = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
removes the cp option value with the default category uuid from the database .
returns a copy of this period with the specified period in years . <p > this method returns a period representing the days field in the period . the calculation is not supported . <p > this method is equivalent to calling { @link #minus ( period ) } to add a period period to the date .
returns the instant of the epoch .
set the data for the data .
set the data for the data .
/ * ( non - javadoc )
add files to the list of files
adds the cp definition link to the database . also notifies the appropriate model listeners .
creates a new cp definition link with the primary key . does not add the cp definition link to the database .
deletes the cp definition link from the database . also notifies the appropriate model listeners .
deletes the cp definition link from the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns the cp definition link matching the uuid and group .
returns all the cp definition links matching the uuid and company .
returns a range of cp definition links matching the uuid and company .
returns the cp definition link matching the uuid and group .
returns a range of all the cp definition links .
updates the cp definition link in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .

registers a frame handler
unregister a from the handler .

emits an auxiliary error message .
sets the labels of the button .
set the filter of the current folder .
update the layout layout for the button .
load the folder from the folder .
load the folder .
returns the first commerce price list account rel in the ordered set where uuid = &#63 ; .
returns the last commerce price list in the ordered set where uuid = &#63 ; .
returns the commerce price list account rels before and after the current commerce price list account permission .
removes all the commerce price lists where uuid = &#63 ; from the database .
returns the commerce price list account rel where uuid = &#63 ; and groupid = &#63 ; or throws a { @link account } if it could not be found .
returns the commerce price list account rel where uuid = &#63 ; and groupid = &#63 ; or returns <code > null< / code > if it could not be found . uses the finder cache .
removes the commerce price list account rel where uuid = &#63 ; and groupid = &#63 ; from the database .
returns the first commerce price list account rel in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the last commerce price list in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
removes all the commerce price list account rels where uuid = &#63 ; and companyid = &#63 ; from the database .
returns all the commerce price lists where commercepricelistid = &#63 ; .
returns a range of all the commerce price list account rels where commercepricelistid = &#63 ; .
returns the first commerce price list account rel in the ordered set where commercepricelistid = &#63 ; .
returns the last commerce price list in the ordered set where commercepricelistid = &#63 ; .
returns the commerce price list account rels before and after the current commerce price list account rel in the ordered set where commercepricelistid = &#63 ; .
removes all the commerce price list items where parentcommercepricelistid = &#63 ; from the database .
returns the commerce price list account rel with the primary key .
returns the commerce price list account rel where commercepricelistid = &#63 ; and commercecountryid key and has the primary key then optionally from the finder cache .
removes the commerce price list account rel from the database .
caches the commerce price list account rel in the entity cache if it is enabled .
caches the commerce price list account rels in the entity cache if it is enabled .
clears the cache for all commerce price list account rels .
clears the cache for the commerce price list .
creates a new commerce price list with the primary key . does not add the commerce price list to the database .
{
{
{
removes the commerce price list account rel with the primary key from the database . also notifies the appropriate model listeners .
returns the commerce price list account rel with the primary key or throws a { @link com . liferay . portal . kernel . exception . nosuchmodelexception } if it could not be found .
returns the commerce price list account rel with the primary key or returns <code > null< / code > if it could not be found .
returns all the commerce price list account rels .
returns a range of all the commerce price lists items .
read the next line from the stream .
returns the value of this class .
set the file to be used .
update the icon of the icon .
returns a prefabricated unmodifiable set of { @link } s .
returns a collection of { @link } s that are contained in the specified collection .
upload a template .
put a java class to a java . util . file .
list all templates .
creates a application application template .
lists all applications associated with the given name .
shutdown the application .

huaweiapiclient 连接结果回调

parses the bean with the given bean .
set the field names for the field names . <p > this method is mutually exclusive only if the field name is empty .




returns a new { @link entity } representing the given keys .
{



解密
convert a list of json text to a list of json text .
writes the json content to the given list of strings .
parse json data into a {
parse the given json array into a json string .
parse json data into a json object .
parse the given input stream into a json string .
parse json data into a { @link jsonobject } .
parse json data into a json string .
parses a json string into a {
parse a json string from the given class .
get log log log .
get log log log log


convert the file to the list of files .
<p > converts a string to a string . < / p >
get the setting for a specific name .

validates the given message .
parse the given directory tree into a list of files .
parse the given { @link } from the given { @link } .
check whether the {
tag :: tag - to - safe etag
associate an ip address .
check whether the current request is standby of the current vm .

/ * [ variable ]
create a volume around a volume .
create a new { @link } instance .
determines the for the given volume .
push the given volume to the storage volumes .
returns the class name of the class .
creates a new instance of { @link } that implements { @link ( class ) } .
returns a new handler that is capable of invoking a handler that can be used to create a handler for the given class .

creates a graphics instance of the graphics hardware .

returns the minimum y y coordinate of the graphics context .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a { @link } of { @link } .
creates a { @link } instance .
creates a { @link } of two { @link } .
creates a { @link } of two { @code dfa } { @code > } and { @code } .
creates a { @link } of { @link } .
creates a { @link } from a { @link } .
returns a { @link } for the given alphabet .
this method is used to retrieve the variable name for a variable name .
this method is used to parse the exported variables .
parses the exported variables .
creates a { @link } instance from a sequence of sequence and start the given sequence .
returns a new with the given parameters .
returns a new with the given parameters .
computes the start of a dfa learning setup a single transition .
minimizes a dfa - major transitions to the given dfa .
minimizes the two steps : the two - two - two - way - or - 1 is the same as the two dfa .
finds prefixes in the given instance .
finds prefixes from variables .
finds prefixes that are matching the variables in the rule .
finds prefixes found in the given directory .
updates the variables of the ip address .
minimizes the two steps : the same as the two - b : <pre > { @code * ++ b r } { r } : { r } : { r } { r } { r } { r } { r } { r } { r } { r } { r } { r } { r }
computes the outer class for the given input and returns the result .
create a soap client instance .
initializes the soap client instance .
set the charset .
set the name of the request .



setter method for { @link ( string ) } .
/ * ( non - javadoc )
set the method name .
set the parameter name .
setter method for bcc .
set parameters to the parameters
/ * ( non - javadoc )

send string to json string .
sends the response to the response .

skip the reading of the data .
copy the input stream to the output stream .
copies data from inputstream to stream .
copy the reader to the given writer .
copy the contents of the given reader to the writer .
closes the closeable catching and any exceptions thrown by { @link closeable } .
returns an input stream to read the input stream .
returns an { @link inputstream } of the given input stream as a { @link inputstream } .
converts a { @link inputstream } to a { @link inputstream } .
creates a { @link outputstream } for the given output stream .
returns a outputstream that is responsible for writing to a file .
creates a {
creates a {
find the context for the textbox
creates a new cp specification option value with the primary key . does not add the cp specification option to the database .
returns the cp specification option matching the uuid and group .
returns the cp specification option value rel with the primary key .
adds the cp specification option to the database . also notifies the appropriate model listeners .
configures the state of the feature .
sets the feature .
returns the first cpd availability estimates in the ordered set where uuid = &#63 ; .
returns the last cpd availability estimates in the ordered set where uuid = &#63 ; .
returns the last cpd subscription in the ordered set where uuid = &#63 ; .
returns the cpd availability estimate where uuid = &#63 ; and groupid = &#63 ; or throws a { @link } if it could not be found .
returns the cpd availability estimates where uuid = &#63 ; and groupid = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
returns all the cp route categories where uuid = &#63 ; and companyid = &#63 ; .
returns the first cpd availability estimates matching the uuid and company .
returns the last cpd availability estimates matching the current cp definition specification option value rel in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the cpd availability estimates matching the current cp definition specification option value in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns a range of all the virtualnetworktaps in the database .
returns an ordered range of all the deleted versions of the list of the cpd availability estimates in the ordered set where commerceavailabilityestimateid = &#63 ; .
returns the first cpd availability estimates in the ordered set where commerceavailabilityestimateid = &#63 ; .
returns the first cpd availability estimates in the ordered set where commerceavailabilityestimateid = &#63 ; .
returns the last cpd availability estimates in the ordered set where commerceavailabilityestimateid = &#63 ; .
returns the cpd availability estimates before and after the current commerce availability estimates in the ordered set where commerceavailabilityestimateid = &#63 ; .
returns the cpd availability estimates where cproductid = &#63 ; .
returns the cpd availability estimate where cproductid = &#63 ; from the database .
removes the cpd availability estimates with the primary key from the database . also notifies the appropriate model listeners .
returns the first cpd availability estimate with the primary key or throws a { @link } if it could not be found .
refreshes the given items from the cache .
refreshes the cache item .

build conditions conditions for entity .



creates a new commerce shipping fixed option with the primary key . does not add the commerce shipping fixed option to the database .
deletes the commerce shipping fixed option from the database . also notifies the appropriate model listeners .
deletes the commerce shipping fixed option from the database . also notifies the appropriate model listeners .
convert a java . util . date . timestamp to java . util . date .
converts a timestamp into a java . sql . timestamp .

returns a list of supported languages .
calculates the hash of the given collection of bytes .
store the storage .

splits the given into a list of .
registers the listener .
{
waits for the state of the given state .
获得一个带缓存的写入对象
获得一个带缓存的写入对象


returns the default value for the given type .
returns the first type of the given type .
get the set of all the pro - b for each of the given id .
get the supplier of a method .
checks whether the given class is a type of the given class .
generate a new { @link supplier } of the id of the given id .
calculates the next id of the given id .
wraps primitive wrapper wrapper for a type .
build a mandatory padding fields for the default fields .
get the index of the path of the path .
get the full string for the specified line .



gets the value of the attributeset property .
creates a jackson jackson object with the default configuration .
check if the character is a blank char .
checks whether the specified character is a valid character .

check if the configuration of the given configuration is valid for the current solution .
returns a configuration for the given .
encode the given { @code traceid } into the given { @code } .
creates the index .
create a new index .
query for the query parameters .
create a new coverage of png window size and size .

get the list of regions
converts the soap model instance into a normal database .
converts the soap model instances into normal model instances .
creates a new commerce tax method in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
creates a new commerce tax method with the primary key . does not add the commerce tax method to the database .
creates a new commerce subscription entry with the primary key . does not add the commerce subscription entry to the database .
deletes the commerce subscription entry from the database . also notifies the appropriate model listeners .
returns the commerce subscription entry matching the uuid and group .
returns a range of all the commerce subscription entries .
returns all the commerce subscription entries matching the uuid and company .
returns the commerce subscription entry matching the uuid and group .
adjust the quality of the specified audio source to the specified length .
clean up a zip file and remove it from the file .
removes the file from the specified source file .
get the coverage coverage of the coverage coverage data from the region .

create a coverage file and the given { @link } .



updates the cp instance in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
returns the cp instance local scope matching the current key or the database or adds it if it does not yet exist .
returns the cp instance matching the uuid and group .
bulk calls for slicing - only data
validates the given file in the given repository .


get the version of the manifest . mf .
convert the source map to a map .
returns the response body as a byte array .
returns the response body as a response .
returns the response body as string .
/ * this method is called to write the entire data to the front . the output is positioned in the case of the next step .
/ * read lookahead
advancing the next character in the next segment .
send a string to a string . delete a single element in the input stream . delete the following things : 1 ) a string with a single node .
get the setting for the setting of the specified preference .

returns true if the line of the document is a line of the same line .
subscribe to this { @link biconsumer } by the { @link executorservice } callback .
sets the size of the pixels that are currently drawn to the texture .
get the top layer layer .
{
find the shape points that are used to find the corresponding layers .
{
adds a new layer to the layer container .
remove the layer from the graphics layer .
{
moves the layer to the top of the top layer .
moves the layer to the current layer .
moves the layer to the top of the top left corner of the input element .
{








adds a shutdown hook to register .
return true if the given path is a path


gets the current thread context info .
returns the text of the given .
get collate name from a groupid .
find the node that matches the given pattern .
returns the data for the promise .
returns the data for this promise .
copies the specified input stream to the specified output stream .
copies the specified input stream to the specified destination .
初始化
initialize the template .
creates a new velocityengine with the given template .
get content from a file .
get content from the specified template .




write a h2gis template to a writer .



parse the request attributes from the request .
parse the request attributes from the session attributes .
creates a new { @link } from the given { @link string } using the default { @link } .
main method .
print out the command line arguments .
read the csv file from the input stream .
sets the .

load the parameters from the .

set the { @link } for the given model .

send data to streamed
/ *
returns the resource stream for the given path .
/ * ( non - javadoc )
executes the given result .
sends a failed request to the { @link } .
replaces the component with the given source string . <p >
append a path to the end of the source string .

computes the relative path of a file .
returns a { @link callable } that delegates to the { @link callable } to be evaluated composing the { @code callable } .
returns the value associated with the given key .
put the value into the cache .
removes the mapping from the map .


gets the name of the sheet .
process the record .


sign the given private key .
close the file .
returns a key for the given key and password .
get the password for the given alias .
sets the password for the given alias .
store a keystore .
add meta data to the document .
builds the table table .
initialize the taglet .
log a message at level verbose .
converts the soap model instance into a model .
converts the soap model instances into normal model instances .
returns the sso token from the target .
print the given string to the given printstream .
activate the current environment .
registers a hook for the given class .
dispatch key = value event to the breakpoint event .
append the supplied parameters to the target url .
loads the file from the classpath .
creates a jar jar containing jar file .
load jar jar from the jar .
create a jar jar from the jar file
add a jar file to the jar .

check if the file is a webjar .
creates a new commerce virtual virtual order item with the primary key from the database . also notifies the appropriate model listeners .
deletes the commerce virtual order item from the database . also notifies the appropriate model listeners .
returns the commerce virtual order item matching the uuid and group .
returns the commerce virtual order item matching the uuid and group .
returns a range of all the commerce virtual order items .
add a section to the list of section controls .
returns the list of available clip sequence .
toggles the container that is currently paused or not .
adds the commerce address to the database . also notifies the appropriate model listeners .
creates a new commerce address with the primary key . does not add the commerce address to the database .
deletes the commerce address with the primary key from the database . also notifies the appropriate model listeners .
deletes the commerce address from the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns a range of all the commerce addresses where the c products are ordered .
updates the commerce address in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
parse json string .
checks whether the registry is a dynamic or a collection of the given .
<p > . < / p >
<p > . < / p >
<p > setter for tostring () . < / p >
initializes the filter for the given input stream .
dump the fields in the array .
creates a new variable binding with the given variable definition .
get the parameter names of the request .
get the value of a parameter from the request .
the method of the parameter with the given name and the default parameter values .
the method to check parameter with the specified name .
validates the parameter with the given name .
returns a pseudo - parameter parameter value with the given name and ending with the specified name .
returns the { @link } of the specified name .
get the parameters of the given name .
get parameter from request .


checks whether the given { @code name } qualifies zap parameter .





returns true if the parameter is not null or empty or not parseable
returns { @code true } if the parameter name is not present or { @code null } .
parses a string parameter from the given string .
parses the given long value .
parses a string value .
parse a date parameter from a string .

escape bad ampersand and escape a string

sets the text of this text .
sets the target width .


loads the { @link } from the given { @code inputstream } .

checks if the string contains a group
checks if the given collection contains a collection
add attributes to the text .
gets the width of the center of the specified grid .
finds the bounds of the bounds of the bounds of the bounds of the bounds .
returns the height of the specified layout . if the range is not in the range { @code [ 0 } ) .
lays out the layout of the layout .
the layout is not supported .
finds the lines between the two dimensions and fills them with the given width and height .
renders the color of the specified grid .
returns the text of the specified {
adds a variable definition to the given value .
returns the value of the given variable definition .
returns a new variable definition for the given name .
add a property to the list
sets the bindings for this variable .
add bindings to the bindings .
creates a new commerce warehouse item with the primary key . does not add the commerce warehouse to the database .
deletes the commerce warehouse item from the database .
returns a range of all the commerce warehouse items .
updates the commerce warehouse item in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
closes the inputstream .
closes the output stream .
closes the reader .
closes the underlying writer .

gets the name of the column .
returns the map of all the fields in the map .
adds the given source to the source graph .
adds a drop target to the target target target .
adds the given source to the list of listeners .
removes a source source from the source .
adds a target to the target target component .
adds an { @link } to the list of registered { @link component } s .
remove the { @link } from the given { @link component } .
set the component cursor to the cursor .
find the target target target if it is not already visible .
called when the mouse is visible .
get the rectangle that is currently showing the shadow .
resets the reset state .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
get a { @link } from a { @link inputstream } .
get a {
get the report report .
load report report .
save the report data for a report .

saves the report file to the file .
convert the dmr to a xml report .
check if the report is valid .
check whether the version is a valid version .
check if the specification is newer than the version .
compare two versions of two strings
get the version of the report .
returns the version of the given inputstream .
read a string from the given path .
read a string from the input stream .
returns the file name of the file .
get the images for the given report
get sql string for sql report
get sql string for a kafka topic .
get the list of {
get the names of all the
check if the sql - parameter is a valid sql .

get the list of all
get the list of all
get the list of chart
get the for the given
returns the cols for the given { @link } .
get the number of .
get the function for the
returns true if the group is grouped by the group .
returns the cp attachment file entry matching the uuid and group .
deletes the cp attachment file entry from the database . also notifies the appropriate model listeners .
deletes the cp attachment file entry from the database . also notifies the appropriate model listeners .
this method is used to verify the operating system of a certain number of versions .
returns true if the system identifier is a windows file .
get the constraints for the given {
computes the orientation of the boxes .
create a button for the given .
create a new
creates a new policy
create a new
creates a new policy

creates a new { @link } for the given { @code } .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
gets the value of the property .
初始化<br >
初始化<br >
returns the key of the given key . <p >
returns the key for the given key .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
returns the current { @code iterator } represented by this { @code iterator } .
returns the first available item in the specified iterable .
picks the value from the given weights .
returns the first cp count ( or null ) value for the specified values .
returns the smallest of the given values .
returns the items that will be used for the specified iterable .
returns the first item from the collection .
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link addresstype } { @code > }
gets the value of the property .
/ * ( non - javadoc )
start the task .

verifies that the actual { @link object } is mapped to the given one .
verifies that the actual { @link object } is mapped to the given one .
returns the first cp definition in the ordered set where uuid = &#63 ; .
returns the last cp definition specification option in the ordered set where uuid = &#63 ; .
returns the cp specification option where uuid = &#63 ; and groupid = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
removes the cp definition specification option value where uuid = &#63 ; and groupid = &#63 ; from the database .
returns all the cp definition specification option values where uuid = &#63 ; and companyid = &#63 ; .
returns the first cp definition in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the first cp definition in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the last cp definition specification option in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns a range of all the cp definitions where groupid = &#63 ; .
returns the first cp specification option in the ordered set where groupid = &#63 ; .
returns the first cp specification option in the ordered set where groupid = &#63 ; .
returns the last cp specification option in the ordered set where groupid = &#63 ; .
returns the cp definition specification option values before and after the current cp definition specification option in the ordered set where groupid = &#63 ; .
returns a range of all the cp definition specification option values where cpdefinitionid = &#63 ; .
returns the first cp definition specification option in the ordered set where cpdefinitionid = &#63 ; .
returns the first cp definition links where cpdefinitionid = &#63 ; .
returns the last cp definition specification option in the ordered set where cpdefinitionid = &#63 ; .
returns a range of all the cp definition specification option values where cpspecificationoptionid = &#63 ; .
returns an ordered range of all the cp definition specification option values where cpspecificationoptionid = &#63 ; .
returns the first cp specification option in the ordered set where cpspecificationoptionid = &#63 ; .
returns the first cp definition in the ordered set where cpspecificationoptionid = &#63 ; .
returns the last cp definition specification option in the ordered set where cpspecificationoptionid = &#63 ; .
returns a range of all the cp specification option values where cpoptioncategoryid = company are added .
returns the first cp definition in the ordered set where cpoptioncategoryid = &#63 ; .
returns the first cp specification option in the ordered set where cpoptioncategoryid = &#63 ; .
returns the last cp specification option in the ordered set where cpoptioncategoryid = &#63 ; .
returns a range of all the cp specification option where cpoptioncategoryid = &#63 ; .
returns the first cp specification option value in the ordered set where cpdefinitionid = &#63 ; and cpoptioncategoryid = &#63 ; .
returns the last cp definition specification option value in the ordered set where cpdefinitionid = &#63 ; and cpoptioncategoryid = &#63 ; .
returns a range of all the cp definition specification option values where cpdefinitionid = &#63 ; and cpspecificationoptionid = &#63 ; .

returns the first cp definition specification option value in the ordered set where cpdefinitionid = &#63 ; and cpspecificationoptionid = &#63 ; .
returns the last cp definition specification option value in the ordered set where cpdefinitionid = &#63 ; and cpspecificationoptionid = &#63 ; .
returns all the cp definition specification option values where cpdefinitionid = &#63 ; and = &#63 ; from the database .
returns the first cp definition specification option value in the ordered set where cpdefinitionid = &#63 ; and cpspecificationoptionid = &#63 ; .
removes the cp definition with the primary key from the database . also notifies the appropriate model listeners .
returns the cp definition option value rel where cpdefinitionid = &#63 ; and cproductid = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
invokes the class { @link objectname } for the given key .

returns the bean represented by the specified class .


convert a string to a integer value .
converts the given class to a class .
skips the whitespaces and the last character in the source string .
<p > copy the content of the given { @code } from the given { @code offset } .
/ * ( non - javadoc )
allocates a new direct buffer .
create a new { @link } instance that will be used to create threads that can be used to track threads .
create a new { @link } instance for the given { @link forkjoinpool } .
create a new {
create a new {
create a new thread pool { @link } instance .
create a new thread pool for ehcache - worker threads .
create a new thread pool for ehcache threads .
create a new { @link } instance from a { @link } .
create a new { @link } instance for { @link } .
create a new { @link } instance for { @link } .
create a {
create a {
creates a { @link } instance that will be used to create a { @link } instance .
creates a new { @link } instance that will be used to create a new { @link } instance .
adds the user to the segment .
creates a new user from the database .
deletes the cp rule user segment rel from the database . also notifies the appropriate model listeners .
deletes the cp rule user segment rel from the segment rel from the segment and notifies the appropriate cp rule user segment rel to the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns a range of all the cp rule user segment rels .
updates the user segment rel in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
{
sets unimplemented handler .
sets the result handler to execute .
adds the commerce discount user segment rel to the database . also notifies the appropriate model listeners .
creates a new commerce discount user segment rel with the primary key . does not add the commerce discount user segment rel to the database .
deletes the commerce discount user segment rel with the primary key from the database . also notifies the appropriate model listeners .
deletes the commerce discount user segment rel from the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns a range of all the commerce discount user segment rels .
updates the commerce discount user segment rel in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .

/ * ( non - javadoc )
deserialize data data bytes from the byte array .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
/ * ( non - javadoc )
gets the value of the property .
convert the given uid to the given string .
converts a byte array to a string array .

get the bits of the mpeg - ieee version of the .
returns the size of the mpeg frame .
/ * ( non - javadoc )
returns the default locale for the given tag .
get the locale for the given locale .
finds the first matching locale for the given locale .
this method is used to store the of the .
this method is used to retrieve the plugin configurations from the cache . the returned object is a weak reference to the cache .
add a new interceptor .
adds the commerce discount usage entry to the database . also notifies the appropriate model listeners .

get the tang plugin plugin to use for the given plugin .
/ * ( non - javadoc )
{
render the content of this node .
creates a new commerce discount usage entry in the database or adds it if it does not yet exist .
get the app name for the application .
alias for aliases .
adds a name to the alias .
add values to the jmx bean .
recursively sort the property names for the specified property .
/ * ( non - javadoc )
returns the string value from the token string .
converts a string to a string .
check if the string is a java identifier .
returns the first commerce tier price entry in the ordered set where uuid = &#63 ; .
returns the last commerce tier price entry in the ordered set where uuid = &#63 ; .
returns the commerce tier price entry in the ordered set where uuid = &#63 ; .
removes all the commerce tier price of the commerce tier price entry where uuid = &#63 ; from the database .
returns the commerce tier price entry where uuid = &#63 ; and groupid = &#63 ; or throws a { @link nosuchpriceentryexception } if it could not be found .
returns the commerce tier price entry where uuid = &#63 ; and groupid = &#63 ; or returns <code > null< / code > if it could not be found . uses the finder cache .
removes the commerce tier price entry where uuid = &#63 ; and groupid = &#63 ; from the database .
returns the first commerce tier price entry in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the last commerce tier price entry in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
removes all the commerce price entries where uuid = &#63 ; and companyid = &#63 ; from the database .
returns all the commerce price entries where groupid = &#63 ; .
returns a range of all the commerce price entries where groupid = &#63 ; .
returns the first commerce tier price entry in the ordered set where groupid = &#63 ; .
returns the last commerce tier price entry in the ordered set where groupid = &#63 ; .
returns the commerce tier price entry in the ordered set where groupid = &#63 ; .
removes all the commerce tier price where groupid = &#63 ; from the database .
returns all the commerce price entries where companyid = &#63 ; .
returns a range of all the commerce discounts where companyid = &#63 ; .
returns the first commerce tier price entry in the ordered set where companyid = &#63 ; .
returns the last commerce tier price entry in the ordered set where companyid = &#63 ; .
returns the commerce tier price entry in the ordered set where companyid = &#63 ; .
removes all the commerce tier price of the commerce tier price entry where companyid = &#63 ; from the database .
returns all the commerce price price entries where commercepriceentryid = &#63 ; .
returns a range of all the commerce tier price entries where commercepriceentryid = &#63 ; .
returns an ordered range of all the commerce price list entries where commercepriceentryid = &#63 ; .
returns the first commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; .
returns the first commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; .
returns the last commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; .
returns the last commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; .
returns the commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; .
removes all the commerce tier price entries where commercepriceentryid = &#63 ; from the database .
returns the commerce tier price entry where commercepriceentryid = &#63 ; and minquantity = &#63 ; or throws a { @link } if it could not be found .
returns the commerce tier price entry where commercepriceentryid = &#63 ; and minquantity = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
removes the commerce tier price entry where commercepriceentryid = &#63 ; and minquantity &le ; &#63 ; from the database .
returns all the commerce price notes where commercepriceentryid = &#63 ; and minquantity &le ; &#63 ; .
returns a range of all the commerce tier price entries where commercepriceentryid = &#63 ; and minquantity &le ; &#63 ; .
returns an ordered range of all the commerce price list entries .
returns the first commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; and minquantity &le ; &#63 ; .
returns the first commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; and minquantity &le ; &#63 ; .
returns the last commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; and minquantity &le ; &#63 ; .
returns the last commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; and minquantity &le ; &#63 ; .
removes all the commerce price entries where commercepriceentryid = &#63 ; and minquantity = &#63 ; from the database .
returns the commerce tier price entry where companyid = &#63 ; and externalreferencecode = &#63 ; or throws a { @link } if it could not be found .
returns the commerce tier price entry where companyid = &#63 ; and externalreferencecode = &#63 ; or returns <code > null< / code > if it could not be found . uses the finder cache .
removes the commerce tier price entry where companyid = &#63 ; and externalreferencecode = &#63 ; from the database .
caches the commerce tier price entry in the entity cache if it is enabled .
caches the commerce notification hubs in the entity cache if it is enabled .
clears the cache for all commerce price entries .
clears the cache for the commerce tier price entry .
creates a new commerce tier price entry with the primary key . does not add the commerce tier price entry to the database .
removes the commerce tier price entry with the primary key from the database . also notifies the appropriate model listeners .
returns the commerce tier price entry with the primary key or throws a { @link com . liferay . portal . kernel . exception . nosuchmodelexception } if it could not be found .
returns the commerce tier matching the primary key or returns <code > null< / code > if it could not be found .
returns all the commerce price of the commerce tier price entry .
returns a range of all the commerce price entries .
converts the soap model instance into a normal model instance .
converts the soap model instances into normal model instances .


returns javadoc javadoc comment .
loads taint config config config config .
returns a range of all the commerce addresses where commerceregionid = &#63 ; .
returns an ordered range of all the commerce addresses where commerceregionid = &#63 ; .
returns the first commerce address in the ordered set where commerceregionid = &#63 ; .
returns the first commerce address in the ordered set where commerceregionid = &#63 ; .
returns the last commerce address in the ordered set where commerceregionid = &#63 ; .
returns the commerce address restriction in the ordered set where commerceregionid = &#63 ; .
returns a range of all the commerce addresses where commercecountryid = &#63 ; .
/ * retreive the for the specified user .
returns the first commerce address in the ordered set where commercecountryid = &#63 ; .
returns the last commerce address in the ordered set where commercecountryid = &#63 ; .
returns the last commerce address in the ordered set where commercecountryid = &#63 ; .
returns the first commerce address in the ordered set where classnameid = &#63 ; and classpk = &#63 ; .
returns the first commerce address in the ordered set where classnameid = &#63 ; and classpk = &#63 ; .
returns the last commerce address in the ordered set where classnameid = &#63 ; and classpk = &#63 ; .
returns all the commerce addresses where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; .
returns a range of all the commerce addresses where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; .
returns the first commerce address in the ordered set where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; .
returns the last commerce address in the ordered set where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; .
returns the commerce addresses where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultbilling = &#63 ; .
returns the first commerce address in the ordered set where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; .
removes the cp attachment file where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultbilling = &#63 ; from the database .
returns the number of cp attachment file entries where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultbilling = &#63 ; .
returns the commerce addresses where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultshipping = &#63 ; from the database .
returns the first commerce address in the ordered set where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; .
returns the last commerce address in the ordered set where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; .
removes all the cp friendly url where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultshipping = &#63 ; from the database .
returns the number of cp friendly url entries where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultshipping = &#63 ; from the database .
removes the commerce address with the primary key from the database . also notifies the appropriate model listeners .
returns the commerce address with the primary key or throws a { @link } if it could not be found .
set environment variables to the environment variables .
returns the type of the specified type .
get the address of the machine .
get the inet address .
lookup the ip address of the network interface .
{

add a list of patterns to the list of .
set the option of the option .
factory method for create a new { @link } .
adds a new browser to the list of acceptable hosts .
starts the hub .
get a configuration object .
returns an error checker that fires a property violation event .
sets the validation error validation error .
sets the transaction timeout .
sets the names of the map .
sets the value of this configuration as a configuration map .
returns the text of the alert text that is ready to be sent to the alert text .
add a time to the list of time execution .
returns the average duration of the given interval that is in progress .
returns the error rate for the given interval .
updates the c product in the c product . also notifies the appropriate model listeners .
updates the c product in the database or adds it if it does not yet exist .
returns the c product matching the uuid and group .
returns c = code from c : // delete = c : >
returns the c product matching the uuid and group .
returns a range of all the c products .
returns all the c products matching the uuid and company .
{
find all the metrics in the list .
builds the path to the path .
adds the cp option category to the database . also notifies the appropriate model listeners .
creates a new cp option category where the cp option category = &#63 ; ; and the database = &#63 ; .
deletes the cp option category from the database . also notifies the appropriate model listeners .
adds a new to the given .
set the table metadata .
deletes the cp option category from the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns the cp option category matching the uuid and group .
returns all the cp option category matching the uuid and company .
returns a new with the given xmpp connection .
returns a range of cp option categories matching the uuid and company .
returns c matching the uuid and group .
returns a range of all the cp option categories option categories .
updates the cp option category in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
removes all registered {
creates a new threshold
gets the status of the .
get status for the given .
read config file
returns the { @link multimapconfig . properties } .
post the given {
check if the resource is a symmetric one .
checks if the header contains the header .
build the map of expression
transform sql statements .
create a shared instance of the .
create a new instance of .




returns the least - most unique id of the given id .
encode a segment id to a segment .
新建一个hashmap
transform the given collection into a {
validates the given { @link } .
encode the given uri .
parses a phone number format format .
<p > . < / p >
create a
set the type .
sets the current schema .
get the connection pool .
closes the managedconnection and closes the managedconnection .
finds a uri from a uri .
finds the string of the resource uri for the given uri .
finds all the urls that are included in the list of urls from the list of resources .
finds all the urls that are available in the given <code > / code > .
returns a map with the given keys from the url . the string is the key in the dictionary .
finds all the webelements in the given string .
<p > finds the given uri . < / p >
finds all classes in the specified uri .
finds all classes in the given uri .

finds the classes in the given { @link resourcebundle } .
/ * ( non - javadoc )
finds all classes in the class hierarchy .
finds the available classes for the given class .
finds all the classes in the given class .
finds the {
finds a resource with the given uri .
finds all the resources that are contained in the given uri .
finds all properties that are available in the given properties file .
reads properties from the given uri .
finds all properties present in the properties file .
get resources from the url .
create a new instance of a class .
create a new instance of .
show the dialog .
sets the widget state .
create sharding data source .
returns all the commerce warehouse items where commercewarehouseid = &#63 ; .
returns a range of all the commerce warehouse items where commercewarehouseid = &#63 ; .
returns an ordered range of all the commerce warehouse items where commercewarehouseid = &#63 ; .
returns an ordered range of all the commerce warehouse items where commercewarehouseid = &#63 ; .
returns the first commerce warehouse item in the ordered set where commercewarehouseid = &#63 ; .
returns the first commerce warehouse item in the ordered set where commercewarehouseid = &#63 ; .
returns the last commerce item in the ordered set where commercewarehouseid = &#63 ; .
returns the ordered definition of the table definition column name .
returns a column definition from the specified column .
returns the last commerce warehouse item in the ordered set where commercewarehouseid = &#63 ; .
returns the commerce warehouse items where commercewarehouseid = &#63 ; .
{
method to set the disabled data source .
removes all the commerce warehouse items where commercewarehouseid = &#63 ; from the database .
returns the number of commerce warehouses where the requested option has the primary key or the requested entity .
returns the commerce warehouse item where commercewarehouseid = &#63 ; and cpinstanceuuid = &#63 ; or returns <code > null< / code > if it could not be found . does not add the database to the database .
returns the commerce warehouse item where commercewarehouseid = &#63 ; and cpinstanceuuid = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
returns a range of all the commerce warehouse items where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
returns an ordered range of all the commerce warehouse items where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
returns an ordered range of all the commerce warehouse items where cpinstanceuuid = &#63 ; and cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
removes the commerce warehouse item where commercewarehouseid = &#63 ; and cpinstanceuuid = &#63 ; from the database .
returns the first commerce warehouse item in the ordered set where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
returns the last commerce warehouse item in the ordered set where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
{
returns the last commerce warehouse item in the ordered set where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
returns the commerce warehouse items before and after the current commerce warehouse item in the ordered set where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
removes all the commerce warehouse items where cproductid = &#63 ; and cpinstanceuuid = &#63 ; from the database .
returns the number of items in the database .
caches the commerce warehouse item in the entity cache if it is enabled .

caches the commerce warehouse items in the entity cache if it is enabled .
clears the cache for all commerce warehouse items .
clears the cache for the commerce warehouse item .
creates a new commerce warehouse item with the primary key . does not add the commerce warehouse item to the database .
removes the commerce warehouse item with the primary key from the database . also notifies the appropriate model listeners .
returns the commerce warehouse item with the primary key or throws a { @link com . liferay . portal . kernel . exception . nosuchmodelexception } if it could not be found .
returns a range of all the commerce warehouse items .
returns the commerce warehouse item with the primary key or returns <code > null< / code > if it could not be found .
returns all the commerce warehouse items .
{
returns a { @link } that contains the result of the specified delimiter .
create a new datasource data source .
returns a {
returns a dynamic { @link } for the given {
returns a list of floats of the items in the list .
returns a {
returns a { @link func1 } that is encoded to be sorted .
convert a long to a list of longs .
returns the singleton instance of the .
set the value of the database .
adds a table to the table .
get default template string for the given class .
parse the given content file .
add a table value to the table .
get table keys ( foreign key ) of the table .
get table values for the table .
create new instance .
ensures that the given group is the same as the sequence .
insert groups of groups
replaces all occurrences of the given replacement string with the replacement string . replaces any occurrence in the replacement string
returns the address of the address of the address .
servo will be called by the { @link } .
creates a datastore instance .

generate random random rr data .
create a dom document from the document .
serialize node to string .
convert the name of the uri to a package name .
convert a package name into a namespace .
add a new to the list of inner classes .
create a list of selectors and return a single string array .
combine the given selector selector and selector .
parse the string of the given string .
{
{
return the charset value this method will return the default value if this is a default value .
create a new instance of { @link } .
get the list of runners metrics that are registered to the {
create a new closure for the given closure .
get a { @link } instance for the given { @link hystrixmetricspublisher } implementation .
get the { @link hystrixmetricspublisher } implementation of { @link hystrixmetricspublisher } instance for all operations { @code } .
get an instance of the pix source auditor from the global context
audits an iti - discover event query .
audits an iti - 18 query query for patient .
audits an iti - 17 patient - level pix event notification actors .
audits an iti - 41 document document document document type and persist the discovered document document .
audits an iti - 41 patient document document document document and store association event .
creates a { @link } from the specified { @code } .
returns the medium block name for the given medium name .
adds the commerce shipping method to the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
creates a new commerce shipping method with the primary key . does not add the commerce shipping method to the database .
convert a to a packet .
constructs a { @link } instance from the given byte array .
returns a {
deletes the commerce shipping method with the database . also notifies the appropriate model listeners .
deletes the commerce shipping method from the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns a range of all the commerce shipping methods .
updates the commerce shipping method in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
/ * ( non - javadoc )
converts the soap model instance into a normal model instance .
converts the soap model instances into normal model instances .
creates a new element .
saves the attributes .
sends a cemi frame to the server .
fires a frame that is responsible for the given cemi frame of the given frame .
handle a type of data type .
sets the current state of the state .
sets the state of the given state .
close the given reason .
check the channel id for the given channel id .
get service request service .
returns a range of all the commerce notification queue entries where commercenotificationtemplateid = &#63 ; .
returns the first commerce notification queue entry in the ordered set where commercenotificationtemplateid = &#63 ; .
returns the last commerce notification queue entry in the ordered set where commercenotificationtemplateid = &#63 ; .
returns the commerce notification queue entry in the ordered set where commercecountryid = &#63 ; .
returns a range of all the commerce notification queue entries where sent = &#63 ; .
returns the first commerce notification queue entry in the ordered set where commercenotificationtemplateid = &#63 ; .
returns an ordered range of all the commerce notification queue entries where sent = &#63 ; .
returns the first commerce notification queue entry in the ordered set where sent = &#63 ; .
this method is called from within the constructor to work around the .
returns the first commerce notification queue entry in the ordered set where sent = &#63 ; .
returns the last commerce notification queue entry in the ordered set where sent = &#63 ; .
returns the commerce notification queue before and after the current commerce notification queue entry in the ordered set where commercenotificationqueueentryid = &#63 ; .
update the device
get the list of devices for the device .
get the list of for the .
get the feature serial type from the system .
/ * ( non - javadoc )
open the server for the given device .
remove interface or interfaces .
extract the bitmatrix from the image .
fires a frame to the frame stack .
collect a list of devices from the specified list of devices .
trims the string to the end of the string .
checks whether the given device id is a sip identifier id .
find the device name for the given name .
get the list of level recognition statuses which are left justified
this method is called to report a system info report .
converts the pixel - x - to - image - pixel alpha
write a binary file to the path .

write the given data to the outputstream .
write a matrix to a stream
creates a new { @link } from the given { @link clientoptions } .
creates a new object .
init the default modules .
convert the given string to a file .
checks source file and source file .
check target target to the target file .
returns the namespace namespace prefixes for the given namespace name
/ * ( non - javadoc )
adds the commerce order item to the database . also notifies the appropriate model listeners .
creates a new commerce order item with the primary key . does not add the commerce order item to the database .
deletes the commerce order item with the primary key from the database . also notifies the appropriate model listeners .
deletes the commerce order item from the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns the commerce order item where companyid = &#63 ; and externalreferencecode = &#63 ; from the database .
returns a range of all the commerce order items where commerceorderitemid = &#63 ; .
updates the commerce order item in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .

returns a range of all the commerce user segment entries where groupid = &#63 ; .
returns an ordered range of all the commerce user segment entries where groupid = &#63 ; .
returns the first commerce user segment entry in the ordered set where groupid = &#63 ; .
returns the first commerce user segment entry in the ordered set where groupid = &#63 ; .
returns the last commerce user segment entry in the ordered set where groupid = &#63 ; .
returns a range of all the commerce warehouses where groupid = &#63 ; .
returns the commerce user segment entry where groupid = &#63 ; and key = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
removes the commerce user segment entry where groupid = &#63 ; and key = &#63 ; or throws a { @link } if it could not be found .
returns the first commerce user segment entry in the ordered set where groupid = &#63 ; and active = &#63 ; .
returns the last commerce user segment entry in the ordered set where groupid = &#63 ; and active = &#63 ; .
removes the commerce user segment entry with the primary key . also notifies the appropriate model listeners .
creates a new text item from the given property .
parses the given date string using the given date string .
format a date
get all the
converts the soap model instances into normal model instances .
================
this method is called to the {
returns a file parameter for the given parameter name .
sends a text out of the response .
log an error message .
log a message at level debug .
returns the kv descriptor for the given type .
create a new instance of {
create a new { @link } from the given { @link } .
find the { @link } for the given id .
loads the class from the given classloaders .
set the parameters parameters .
{ @inheritdoc }
{
{
{
remove a previously registered listener from the list of listeners .
check if the database is not valid .
report a single one .
report a single {
logs a warning message .
report a log message for a log level .
{
report a specific exception that is passed to the user .
log a json message using the given { @link string } and the { @link logger } .
report a single - level domain .
collects all annotations of the given class with the given annotations .
check if the condition is met .
removes the brackets from the given condition .
creates a new { @link } from the given { @link } .
check if the variable name is reserved ( { @link } ) .
{
/ * ( non - javadoc )

encrypt the plaintext using aes mode .
creates a new { @link } object with the default { @link () } .
returns a new {
returns the for the given configuration .
this method is used to create an identifier for the given id .
create a new { @link } based on the given class and arguments .
/ * ( non - javadoc )
get capabilities of the given { @link } .
/ * ( non - javadoc )
add a new listener to the list of listeners .
returns all the registered {
remove listener from the listener .
nosonar
add a new listener to the pipeline .
add a new listener . <p >
add a message listener to be notified of events .
add a new listener which will be used to create a message listener .
add a new listener .
{
{
{
{
{
remove a specific channel from the channel .
sends a message to the given message .
send message to message delivery .

start the connection .
stop this event .
create a serial port from a
remove the serial port from the serial port .
handle data of the message .
consume a message from the given message .
dispatch message to listeners
parse the expression to the current version .

parses the { @literal > } non - terminal .
parses the semver version of the semver { @link } .
parse a range expression .
creates a new version from the specified major version .
creates a new commerce discount rel with the primary key . does not add the commerce discount to the database .
returns the commerce discounts matching the uuid and group .
returns the commerce discount matching the uuid and group .
returns a range of all the commerce warehouses .
updates the commerce discount in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
creates a version of the specified version .
creates a new vm instance .
build json configurations from json
parses the { @link } instance .
checks if the editor is not a valid input state .
get jtextfield from the document
returns the first non - null element of the specified {
checks if the given sequence is a block block .
returns the first commerce country in the ordered set where uuid = &#63 ; .
returns the first commerce country in the ordered set where uuid = &#63 ; .
returns the last commerce country in the ordered set where uuid = &#63 ; .
returns the commerce country where uuid = &#63 ; and groupid = &#63 ; or throws a { @link } if it could not be found .
returns the commerce country where uuid = &#63 ; and groupid = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
returns all the commerce countries where uuid = &#63 ; and companyid = &#63 ; .
returns the first commerce country in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the first commerce country in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the last commerce country in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns a range of all the commerce warehouses where groupid = &#63 ; .
returns the first commerce country in the ordered set where groupid = &#63 ; .
returns the first commerce country in the ordered set where groupid = &#63 ; .
returns the last commerce country in the ordered set where groupid = &#63 ; .
returns the commerce countries before and after the current commerce country in the ordered set where groupid = &#63 ; .
returns the commerce country where groupid = &#63 ; and twolettersisocode = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
removes the commerce country where groupid = &#63 ; and twolettersisocode = &#63 ; or throws a { @link }
returns the commerce country where groupid = &#63 ; and = &#63 ; from the database .
returns the commerce country where groupid = &#63 ; and primary = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
returns the first commerce country in the ordered set where groupid = &#63 ; and active = &#63 ; .
returns the first commerce country in the ordered set where groupid = &#63 ; and active = &#63 ; .
returns the last commerce country in the ordered set where groupid = &#63 ; and active = &#63 ; .
returns the commerce country where groupid = &#63 ; and active = &#63 ; .
returns the commerce country where groupid = &#63 ; and billingallowed = &#63 ; and active = &#63 ; .
returns a list of all the commerce warehouses where groupid = &#63 ; and billingallowed = &#63 ; and active = &#63 ; .
returns the first commerce country in the ordered set where groupid = &#63 ; and billingallowed = &#63 ; and active = &#63 ; .
returns the last commerce country in the ordered set where groupid = &#63 ; and billingallowed = &#63 ; and active = &#63 ; .
returns the commerce country where groupid = &#63 ; and active = &#63 ; .
returns a range of all the commerce warehouses where groupid = &#63 ; and shippingallowed = &#63 ; and active = &#63 ; .
returns the first commerce country in the ordered set where groupid = &#63 ; and shippingallowed = &#63 ; and active = &#63 ; .
returns the last commerce country in the ordered set where groupid = &#63 ; and shippingallowed = &#63 ; and active = &#63 ; .
removes the commerce country where commercecountryid = &#63 ; and commercecountryid = &#63 ; from the database .
returns the commerce country with the primary key or throws a { @link } if it could not be found .
remove redundant members from the .
copies all of the elements from the collection to the collection .
build a signature signature for a given url .
/ * ( non - javadoc )
handles a single cloud .
installs a message to the list of projects .
uninstall a message .
uploads a file to the upload .
handles a { @link upload } event to the ua
handles a new request .
sends a message to the list of objects meeting a specific message .
list the agent s sharing state of the agent .
executes the given request .
creates a new parameters for the current token .
deploys a { @link } to a json document .
deploys a new network with a new network .
deploys a { @link packet } with a { @link } .
sends a undeploy update to a cadmium war .
deploys a module to a web application .
sends a new issue with the given configuration .
removes the deployment from the deployments .
sends a new network to the specified collection . <p > the resulting { @link } must contain a { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
verifies the given token .
starts the daemon thread .
returns the next permutation .
find all matching ce
installs a new { @link } to the { @link sharedpreferences } .
evaluate () method

calculate the selection of the
/ * ( non - javadoc )
/ * ( non - javadoc )
calculate the distance between the two points .
calculate the geodetic polynomial approximation for the given .
{
build the reference counter .
build the reference set reference .
tune
get the pair of pairs of solutions .
compare two versions of a version .
update the length of the byte array .
{
evaluate () method
start the current request .
returns all the actions of the actions of the actions .
returns the log directory for the current directory .
returns the text that contains the given text .
returns the full path of the .
start the connection manager .
{
logs a new server to the server .
{
returns the node or null if not found .
sets the .
returns the successor of the successor jobs .
sets the node name .
set the number of clusters .
returns all the runners available in this cluster .
returns the display of the display station .
returns true if the pool is out of the idle jvm .
returns the next long value .
returns the next available { @link } for this instance .
returns the description of the node .
remove the current {
interrupts all tasks .
get the {
get the environment variables of this environment .
this method is used to build the script environment .
get the host name from the channel .
start the periodic .
serves the table .
serves the { @link } .
serves text as a page script .
accepts submission .
serves the xml file .
updates the xml document with the given xml content .
delete this pom .
handles the plain text of the vulnerable log .
get the current node
this method is used to retrieve the from the pool .
creates a { @link } for the given { @code enginename } .
合并文件
evaluates a solution
calculate the matrix value of the matrix
calculate the recall from noise
calculate the longitude of the two gain .
interpolate the x - alpha y pairs .
/ *
returns an { @code > } { @code > } .
returns an { @code } instance containing the given { @code } .
creates a new { @code } instance for the given { @code number } .
creates a new { @code } from the given { @code } .
returns a new { @code stream } containing the given { @code } .
creates a new spliterator from the given { @code } .
creates a new { @code spliterator . ofdouble } .
returns an { @code primitiveiterator > } instance of { @code } as { @code n } .
returns an { @code primitiveiterator . ofdouble } object .

evaluates the given solution
fills the specified byte array with the specified { @code byte } value .
{
returns the short value at the specified index .
returns the int value at the specified index .
returns the long value at the given index .
get the float at the given index .
returns the double value of the specified <code > / code > .
/ * ( non - javadoc )
transfers the specified byte array to the specified destination starting at the specified absolute buffer starting at the specified absolute { @code offset } .
returns the bytes of the given array starting at the given index .
{
set the value at the given index .
set the value at the given index .
set the value at the given index .
set the value of the specified { @code long } value .
set the value at the given index .
set the value at the given index .
transfers the specified source data starting at the specified absolute { @code source } to the specified { @code source } .
transfers the specified source to this buffer starting at the specified absolute { @code source } .
transfers the contents of the specified inputstream into this buffer starting at the specified index .
creates a slice of the specified length .
compares this slice to another slice .
compares two positions with the specified offset .
factory method for creating a new stream of the given length .
create a new { @link } from the given { @link } .
factory method for creating a new { @link fileoutputstream } from the given { @link } .
reads the given offset from the given file array .
update the current state of the process .
runs the test runner .
collect all in the list of active targets .
--------------------------------------------------------------------------------------------
adds a given symbol to the symbol .
synchronizes the current { @code } to the current { @code } .
the algorithm list is the number of
execute the population of solutions

remove the context
returns the evaluation context that is responsible for the given .
get the evaluation context of the window .
evaluate () method
write header to the header .
sets the state of the state to the given state .
creates a new instance of { @link } .
checks if the current state is in the given state .
exposes the response to the response .
return a name for the given name .
set the symbol code for the current marker .


create a { @code } object for the given type variable .
return the { @link typeelement } of the given type variable .
returns the enum type of the given type .
find the sql statement for the given .

runs the script .
runs script from the given reader .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
{
/ * ( non - javadoc )
evaluate () method
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / p >
/ * ( non - javadoc )
checks that the specified { @link string } is { @code other }
checks to see if the given { @code } is a { @link } .
reads the next available from the given stream .
reads a delimiter from the given stream and returns the index of the next chunk .
loads the multipart multipart request .

read multipart multipart data from a multipart request .

skips the next line and returns true if the next chunk is not a valid line .
<p > . < / p >
returns the superclass of the specified key .
returns whether the given array is a vector of elements .
splits a multipart / passwd / quotes / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / / /

generate a line from a json array .
convert a { @link charsequence } to a { @link } .
{
check if a field is valid .
creates a chain of occurrences of a chain .
request verification verification . a verification verification verification verification verification code . see http : // docs . cometd . org / docs / api / . html
request a password change .
{
request a list of grants .
update the token .
/ * ( non - javadoc )
computes the specificity of the tune .
convert the string representation of the string to the underscore character .
invokes the method for the property name .
returns the value of the given property as a property .
checks if the property is a namespace property .
----- private methods -----
checks whether a given value is a valid color .
returns whether the term is a valid term or if the term is a valid term or a document .
returns whether the given type is a valid term .
check if the given type is a namespace of the given type .
helper method to check whether the given color type is mapped to the color type .
process the color value of the property .
generate shadow mapping from the value of the property .
generate js property .
checks if a { @link } is a track - tree identifiable .
read the value from the file .
replaces the innermost of the given object from the given object .
reads a file from the file .
instantiates a new memory from the given srcmem .
instantiates a memory from the sketch
returns the maximum intersection of the given size .
/ * this method is used to get the union of the objects .
returns the minimum value of the histogram with the specified count .
check if the gene is id
{
heapify the given srcmem from the given srcmem
instantiates a new from the given memory - heap .
creates a new from the given double .
creates a new instance of the given data .
create a new instance of a .
creates a new instance of a .
create a new instance from the given data .
update the update of the update in the order of the data .
predict a {
predict a list of .
accepts the user .

convert a to a object .
creates a union of .
interleave the union of the given .
returns a new which represents this segment .
heapify noise sketch data from the given memory image containing sketch data .
returns the value of the property .
insert a new state for the given hash table .
resizes the current buffer .
reallocate the cache cache size .
evicts a dirty cache from cache .
returns the l - infinity value of the given .
build a fb fb {
returns the byte count of this { @code } . returns { @code true } if this { @code bytebuf } is not { @code null } . returns { @code true } if this { @code bytebuf } is not { @code null } . returns the number of bytes in the sketch .
returns the cache of this cache .
convert a byte array to a byte array .
/ * events

add a new record to the
set the service pool .
returns true if the given queue is exceeded .
get the set of evaluators that are contained in the queue .
returns all the registered {
called when the change is executed .
/ * ( non - javadoc )

initialize the connection with the given connection .
notifies the failure failure that the connection is received .
check if the idle is idle .
closes socket .
/ * events
return the execution of the current thread
loads the { @link urlmapping } given a { @link file } . the { @link } is walked for the { @link } .
creates the top level item item .
handles the action to be displayed .
{
set the executor service .
complete the closable .


populates the object .
generate a list of lists from the given examples
get the primary key from the given set of keys .

writes the custom streamable fields .
reads the class of the stream .
update the current counter .
returns a { @link } which animates scale to a specific scale frame .
build a { @link } instance .
$antlr start
$antlr start
$antlr start

$antlr start stringliteral
$antlr start deletion
/ * ( non - javadoc )
process entity .
$antlr start
$antlr start
checks that the target size is not enough to be a stable memory size .
$antlr start eol
sets the end points ending with the given list of values .
parse the given coin coin format into a json array .
add a new opacity of the given <code > / code > to the <code > / code > .
generate json entity for the json entity .
helper method to decide if the value is not in the background .
write the object to the entity .
this method is called when the entity is a streamed entity .
/ * ******************************************************************** / *

returns the property property value .
returns the property value for the given property .
get the value of the property as a long property .
binomial reduction of equations .
binomial reduction to minimize the number of times the deviance value of k is the number of mean value .
complementary l - 65536 incomplete trigonometric ( nd ) ( regularized ) function . h . ( )
calculate the gain of a logistic regression .
creates a new instance of the specified object .
creates a new object from the given data .
this method returns a sketch instance of this class from the given srcmem which must be a memory representation of this sketch class .
grow the items to the specified .
skip the contents of the specified number .
resets the current state of the .
returns the combined array of the array of dataobjects .
returns the {
returns the serialized byte array for the given array of items .
calculate the sum of the sum of the values in the given range .
returns the value of the property .
inserts a value at the position position .
returns a deep copy of the current immutable position .
returns a union of this { @link } .
increases the size of the pollfd array .
{
{

$antlr start eol
check offset for a given offset .
parses the string representation of the given string .
pad the value of the pad .
returns the index of the number of times the given offset .


check if the input source is a valid xml source


applies the given xml document to the given document .
compare two paragraphs
check if the input source is a valid xml source


compare two documenttype nodes
compare two paragraphs
asserts that the supplied document must match the given xpath .
asserts that two nodes are equal .

performs the validation on the xpath of the given input .
asserts that the supplied document node is not equal to the given xpath .
compares two nodes using xpath expressions .

performs a comparison on the ast node .
assertion of { @link } s .
verifies that the given { @link string } is a string .

check if two input expressions are equal .
assertion for a dom - tree .
verifies that the given { @code document } is equal to the supplied { @code } .
asserts that two elements are equivalent to xml .
verifies that the given { @link xpath } is not { @code null } or { @code null } if the result of the given { @link xpath } is not { @code null } .
verifies that the given { @link qualifiedname } is not { @code null } or { @code xpath } .
performs a deep - validation assertion assertion .
assert that the given node exists .
asserts the document is not null .
asserts the document is not null .

this method is used to convert the xml document to an xml document .
this method is used to parse a string from an xml document .
returns a {
serialize the string representation of the form to the string builder .
returns the value of the given key in the hashmap .

given a string returns the major minor and minor major version .
parse the given java version string .
merge two histograms together with another sketch .
merge two slots in a sketch in the sketch .
sort the merge sort algorithm .

$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
add a column to the list
adds a value to the column value .
adds a new value to the column .
generate the text for the column .
$antlr start id
$antlr start
verifies that the actual node exists in the given node .
verifies that the actual { @code path } conforms to the given object .
compares two { @link } objects .
verifies that the actual schema is a valid schema .
verifies that the actual schema is a valid schema .
verifies that the actual object is a valid schema .
verifies that the actual object is a valid schema .
$antlr start greater
returns the number of trailing bits of the specified target .
resolves the peer urls from the current host to the client .
remove all from the list of blacklisted nodes .
checks if the specified url is a valid host name .
check if the url is valid .

execute the batch operation .
create a { @link } instance for the given { @link operationcontext }
returns a number readable byte readable bytes from a byte array .
{
read project properties .
this method extracts calendar data from the mspdi file .
read calendar data from a calendar .
read resources .
writes the datagram datagram to the given {
reads the message from the { @code } .
this method reads a resource from a binary data structure from a ganttproject .
process the tasks .
process the activity activities .

get the first layout of the given node .
run the given {
process a task .
sets the schema schema .
create a validator which allows to validate the type of the { @link } .
{
search for the result in the current context
results ////////////////////////////////////////////////////////////////
gson invokes this call - back method during serialization when it encounters a field of the specified type . <p >
{
returns a row key that is associated with the specified row . returns the row for the row .
returns true if the current data is a subset of the current data .
creates a new instance of { @link class type } .
creates a new instance of { @link } .
returns the value of the named field from the given instance .
returns the value of the named column for the specified column .
sets the value of the {
set the value of the named column for the given column .
applies the mutation data to the given instance .
creates a new instance of the specified columns . the resulting immutablelist instance is mandatory .
initialize the given instance
gets all rows in the table .
process an entry for the process definition .
{
parse the given string .
parse a string from a string .
loads properties from the resource properties file
/ * ( non - javadoc )
returns the uri from the given uri .
returns the product of a uri from a uri .
get the boundstatement for the given query .
checks if the given resource is a resource with the given path .
validate the given uri .
validate whether the given uri is a resource .
factory method to create a new uri with the given uri .
get the prepared statement for the query .
create a new instance .
sets the {
adds a {
add a variable to the current context .
registers the given { @link } .
executes the given command .
deploy a service .
creates a binding for the given key .
bind the binding binding to the .
javamelody is used to bind the {
sets the argument to the given argument at the given index .
--------------------------------------------------------------------------------------------------------------------

get the next file from the current directory .
get the next file in the table .
returns the list of files for the given directory .
check if the file is a file .
find the best match rule .
returns the xpath expression for the given xpath expression .
{
perform the actual cors header .
resolves the type of the target type .
resolves the class type variable with the given type name .
find the constant for the given class .

/ * ( non - javadoc )
check if this object contains the current user .
/ * ( non - javadoc )
returns true if the vertex is not empty .
move the node to the current node .
/ * ( non - javadoc )
lays out the layout of the layout tree .

installs the given { @code } from the provider .
returns the for the given .
generate a random key pair from the specified private key .
returns certificate type for a certificate type .
returns the { @link } for the given extension .
decodes a bytearray containing der base64 encoded base64 encoded byte [] .

returns a set usages of the given object
returns the string representation of the given dn .

convert a principal to distinguished name .
convert a distinguished name to a string .


returns the identifier of the given identifier .
closes the socket .
closes the socket .
add a socket to the connection .
called when a call is called .
check if the mapping is a line of column positions .
-------------------------------------------------------------
add the mapping to the list .
/ * ( non - javadoc )
check if a string is a valid identifier id .
generates a prefix for the given prefix in the given template id .
sets the page to the current page .
get the id of the id . this method is used to retrieve the id of the id .
get the element ref .
sets the parent element .

creates a { @code tag } from the current uri .
get the path of the request .
/ * ( non - javadoc )
transform the given { @link } into a result .
returns a new executionresult that is reporting a new result
propagates { @code throwable } to { @code onerror } . propagates the { @code } to the { @code } and rethrows it to the stack .
add a new to the list of queues .
remove a new from the list of receivers .

get the list of channel ids which are going to be used .
remove all that have been removed
handle the event status .
get channel channel for the given channel name .
get channel channel from channel
/ * ( non - javadoc )
handle the state of the .
dials the smtp server communications to the recipients for the voice recipient .
creates a new tempfile with the temporary file .
deletes the temporary files .
/ * -------------------------------------------------------------------------------
gets pattern .
collects all attribute values from the list of attributes .
gets list of attributes .
filters the list of values that are matching the pattern .
finds all the subscriber methods in the given subscriber .

{
get the total array of percentiles of the histogram .

determine if the request is available .

check if the value of the given list is in the order of the given parameters .
/ * package
gets the failure failure failure .

/ * ( non - javadoc )
{

this method is called from the launcher to clear the socket .
/ *
transfers the contents of the input stream to the given output stream .
/ *
returns the number of bytes in the string .
add a record to this builder .
add a {
add all records in the given collection to the given collection .
lookup the given type .

returns the client nonce to use for the given client s token .
wraps a message to a string
check if the given is a valid
helper method to generate text format .
this method is used to get the credentials from the jaspi .
checks if the token is a valid token .
get the decrypted uid payload from the message .
{
{
{
adds a new to the database .
gets the command line arguments .

{
invokes post - post - post - authentication - post - authentication
populate authentication metadata attributes .
adds authentication attributes .
resolves principal from principal to principal .
invokes basic authentication .
this method is called by subclasses to create principal principals and principal components .
gets the service resolver resolver .
execute a sql script from the given script source and returns it as a prepared script .
this method is used to generate the for the specified authentication .
invokes the { @link } on the connection .
check if the authentication is satisfied by the given authentication policy .
handle the exception .
read the sql from the given resource .
this method is used to update the top - level nodes in the ast .
/ * this method is called by the xpath function to check that the node is a valid range of the rhs .
/ * this method is used to remove from the rhs .
returns the id of the user s id .
get the extra info info for the current user .
/ * this method is called when a single node is encountered .
create a action action .
create a action action .
creates the default transition transition to the transition transition transition .
the transition state for the given state .
create a transition to a new state .

build parser for schema .
create a new { @code } object for the given { @code } .
create a new { @link } for the given string .
check if state is a flow state .
check if state transitions exists in the state of the state .
check if the transition transition exists .
create a flow variable of the flow .
create a new state configuration for the given type .
create a new {
get the state of the view .
clones the given state and target targets .
get the list of { @link transition } instances .
get the expression expression for the given action .
create an action action state .
create a new action state for a given action state .
get state state .
get the state of the state machine .
get the state of the flow state .
create state .
create a new action state
create a new
create a new
append actions action state to a .
resolve events from the current resource .
validate the given set of events .
{
build json signature
encrypt token
set up the signature of the target key .

configure the ssl settings for the client .
create a new trust store for the specified principal .
get the inputstream for this file .
{
{
execute script script .
execute a script script script
execute script statement .
sorts the specified values in the specified order .
execute script script script and mutator instance with groovy script .
execute script script script
parse the given string .
execute script script script .
execute the groovy script .
parse the given script from the given script .
execute a sass script in the given script object .
execute script script .
returns the object instance from the given resource .
gets object instance from given resource .
gets authenticated profile .
build a response error validation response validation error response .
get the root cause of the root cause .
get the location of the location .
prints stacktraces to the stack trace .
print the stack trace of this exception .
print the stack trace of this exception .
/ * message validation errors
create a new node from the given .
gets collection of objects .
deserialize a json document .
commit the status of the commit message .
this method is used to determine if this sequencer is configured .
<editor - fold defaultstate = collapsed desc = generated code > // gen - begin : initcomponents
< / editor - fold > // gen - end : initcomponents
gen - last :
serializes the entry to a csv file .
add an attribute to the attribute .
returns the id of the attribute .
{
get the attribute id for the given id .
builds the main attribute for the attribute .
inject cas properties into jersey properties .
gets the platform profile directory for this file .
checks to see if the service is blocked .
check if the current date is valid .
compile the sql - compiling compiling .
connect to the zookeeper server .
this method is called by the server to open a file .
update the specified topic with the specified number of topics .
send a message to the database .

check the number of topics in the partition and return the partition in the partition .
/ * ( non - javadoc )
create response entity response .
set the client api to the credhub server .
performs a request to the given timeseries data
send a list of search to the server .
perform a table
perform a gossip request for a given request .
get atom service from uri using the given uri .
returns a collection of instances that have the same name .
executes the given command .
/ * ( non - javadoc )
redirect to validate the request
redirect to the user .
build redirect view to a url .
gets the view view .
get x509 accesstoken .
check if the specified attribute is present on the specified attribute .
compacts the data to the given array .
finds the value of the specified key from the map .





gets the time key .

get the artwork for the track artwork .
returns the url of the avatar .
checks if the string is a valid mail address .
check if the string is a url string .
check if string is a mobile device or not .
check if the given string is a valid international specification .

remove session ticket .
check if the string is a time string .
check the type of the type of the given type .
checks if the fields are compatible with the given {
drop the index index
returns a new {
handle cas profile .
performs the record - extract - end - of - signature .
reads the next byte from the stream .
reads a byte array from the stream .
gets principal of the principal .
{
returns a string representation of this { @link } .
decrypts data in the given string
checks if the given message is a valid { @code string } .
encrypt the text with the provided key .
encrypt the given string using the given key . <p >

returns a new pair of key pair keypair .
encrypts the given data .
encrypts a given key and decrypts data .
decrypts data for encrypted data .
returns the key of the given key as a string .
returns the key for the given key .
returns a new publickey from the given key .


installs the given uri .
base64 encode the byte array of encoded bytes .
decodes the text from the given text .
create a new http client with http connection parameters and uri .
read record from the given record header .
get the current time entry for the given parameters .
creates a new { @link sslsessionstrategy } with the given key / uri .
creates a new { @link sslsessionstrategy } with the given { @link uri } .
creates a new { @link sslsessionstrategy } with the given uri and password .
creates a new {
create a { @link } from the provided { @link net . dv8tion . jda . core . } of { @link } .
write a project to the given stream .

sets the values of the values .
create a new { @link } from a { @link message } .
convert message to gl service .
main method .
visit a class .
inject the given { @link collection } of arguments to the given { @code } .
returns a type of generic parameterized type for the given object type .
get methods for a service .
returns the type of the specified method .
extract name from service name .


validates the method throwing an exception if it is not present .
this method returns a new { @link } instance for the given { @link } .
main method .
this method is used to format the message format for the given message .
handle http request request .

convert the given resource to a string .
build a string representation of the environment variables .
get the cached node if this node is not available yet .
returns the segment for the given node .
remove the node from the session .
{
add a ticket to the builder .
returns the current transaction id this method returns the current transaction id .
/ * ( non - javadoc )
returns the transaction associated with the current transaction .
/ * ( non - javadoc )
rollback the transaction .
updates the cache for the current updatetransaction .
resume this object .
reads the next character from the stream .
reads the next character from the stream .
check if token is a valid token .
initialize .
{
{
check that the node is not a valid distance of the closest node .

/ * dump the content of the html report file .
/ * ( non - javadoc )
initializes the streamtokenizer that the function is executed .
this function is used to compute the arctangent of the .
returns a document link from the database .
this method creates a client document .
create a document from the database .
check whether the passed in parameter is valid .
replaces the s subnodes of the given .
create document template document .
create a new document object mapping .
create a new join point for the given point .
{
matches a { @code } consisting of the elements of the specified type .
matches a { @link collection } of type <code > a< / code > and returns a new <code > / code > object .
creates a new { @code } representing a specific element of the given type .
creates a new for the specified .
creates a new server - track command .
-----------------------------------------------------------------------------------------------------------------
<p > creates a new { @link } that sends a { @link } to the { @code context } . < / p >
{
{
send the messages to the receiving packet .
reads the { @link net . dv8tion . jda . core . entities . } .
ident - called when the outer class is visible .
process import .
read the import imports .
performs a single bulk of the given data array and stores them in the given range .
process the surface of the matrix .
/ * ( non - javadoc )
computes the gradient for the outer block .
extract the names of the attributes from the given { @link } .
returns true if the constraint is a valid constraint .
/ * ( non - javadoc )
{
atomically permit to { @link node } s { @link node } s { @link node } s { @link node } s in the { @link node } s .
set the node with the given type .
add a node to this node .
computes the primary key from the cache and add it to the {
/ *
returns the node containing the given identifier .
saves the current node with the given { @link } . <p > this method is equivalent to { @link ( object ) } but with the { @link } then this method is invoked when the { @code node } is not already present .
check if the current user is available and returns false if the user is not authenticated .
checks whether the { @link role } is valid .
check if the path is valid .
/ * ( non - javadoc )
check the current permission .
{
returns the path to the named node .
creates a node node .
returns true if the node is a foreign key .
creates a new identifier identifier .
returns the singleton instance of the { @link } instance .


configures ssl tls .
returns a new ssl - 8 rsa .
checks if the given socket is compatible with the given { @code } .
intersection of two integers
creates a new binary { @link } object from the given { @link serializer } .
set the keep alive time state .
start the poll state .
returns the host name for the default host name .
{

notify the stream .
stops the { @link } .
convert a grpc status code code to a { @code } .
adds a gzip - compressed byte array .
method called to read the block of data from the stream .
<pre > the cluster reservations . < / pre >
<pre > job name to job name . < / pre >
<pre > job name to be used for job definition . < / pre >
<pre > config properties ( ) < / pre >
<pre > the protocol of the object that is used to retrieve the protocol . < / pre >
<pre > the address of the file . < / pre >
called when the connection is done .
reads the next fragmented message .
process the header .
process body .
determine whether or not the node is a mixin node .
this benchmark attempts to undo the {
matches a { @code } consisting of the elements of the specified type .
process the request .
<pre > input parameters : <code > f ( slice - 1l ) - &gt ; < / code > . this is an alias of <code > / code > . < / p >
<pre > the input parameters . < / pre >
<pre > : nth from ( f ) return value < / ul >
<pre > the function for each index of the function . the values are the order of the input values . the values are concatenated with the following order : < / pre >
<pre > . < / pre >
<pre > the output variables for each slice . < / pre >
<pre > : nth - output instruction of . . . . . . . . . . . . . . . . . . . . . . . . . . .
<pre > : nth - f ( f ) < / tt > .
<code > attribute list of - attribute type = attribute = ; < / code >
<pre > partial to merge data types where the destination is a slice of the size of the slice . < / pre >
<code > attribute . tensorflow . collectiondef . = 5 ; < / code >
<code > repeated . tensorflow . . . = 3 ; < / code >
<pre > . < / pre >
<pre > the summary file . < / pre >
<pre > google cloud storage address . < / pre >
<pre > the request to the quota of the quota . < / pre >
<pre > byte type datatype datatype datatype gpu type = type = type = . ( ) < / pre >
<pre > : tensor describing two tensor types : jpeg - memory jpeg - jpeg - jpeg - jpeg - jpeg - jpeg - jpeg - jpeg - jpeg - jpeg - jpeg - jpeg - jpeg - layout - proto description - scaling / general > / a > . < / pre >
<pre > optional . () . () . () . () ;
<pre > : tensor describing the tensor name to <code > / code > . < / pre >
<pre > : . () < / pre >
<code > optional . tensorflow . collectiondef . = 3 ; < / code >
<code > optional . tensorflow . collectiondef . = 5 ; < / code >
<code > optional . tensorflow . collectiondef . = 3 ; < / code >
<code > optional . tensorflow . collectiondef . = 5 ; < / code >
<pre > the job source . < / pre >
<p > construct a { @link } expression . <p >
this method replaces the given relative path with the given path pattern .
returns a binaryoperator concatenating the result of the two ore two matrices .
add the column to the node list .
add the column to the list of distinct values .
create a { @link marshaller } for { @link } instances .

decode buffer .
checks whether the given { @code } is positive and if not set to true the { @code } rate .
returns { @code true } if the given object is an array of objects .
main method .
returns the hash code for the given array of ints .
parse the json string to be parsed into a object .

serialize string format to json string
convert the given section to the given section .
create a new { @link marshaller } for the given { @link } .
create a new { @link marshaller } for the given parser .
{
this method is called when the channel is read .
{
{
called when a { @link executionexception } is thrown .
{
add a node to the node type .
removes the node with the specified key from this node and removes the node with the given name .
adds a node to the node s children .
moves a node to this node .
renames this node s primary node to this node .
{
/ * recyclable
sets the output state .
commits the transaction .
sets the buffer size for the output stream .
flushes the output stream .
reset the buffer to the stream .
set the locale to the response .
/ * ------------------------------------------------------------
sends a new error message to the client .
sends a redirect to the url .
set the date header value of the request .
sets the value of the specified header .
set the value of the header .
add a date header to the response .
add a header to the end of the request .
add a header to the list of header .
/ * ( non - javadoc )
{
sets the content type of the content type .
sets the encoding character .
returns the character encoding of this character .

/ * ------------------------------------------------------------

returns the string representation of the given byte array .
check if the address is a quad ( or master ) to a slave .
returns a { @link inetaddress } representing the given name of the given name .
get an array of all addresses from the given name .
returns a inetaddress that is a valid ipv4 address or a loopback address
return the debug info for the current time .
returns a inetaddress of {
returns the { @code } represented by the specified { @code inetaddress } .
parse the json string to the user .
process the given regular expression .

/ *
process robot groups .
loads the data from the file .
load data from inputstream to file
create the data structures .

returns true if the file is a directory .
transfers the specified file to a file .
this method is used to compute the memory overhead of the sketch .
returns the metadata of the meta data .


/ * ------------------------------------------------------------
set the path to the dispatcher . <p >
returns the locale for this locale .
get the locales configured by this engine .
get the cookies for the cookies .
returns the headers of this header .
returns the translated string for the current resource .
get the authentication type of the authentication request .
returns true if the user has the specified role .
/ *
returns the full string representation of this request .
get the session for the session .
create new session with the given session .
set the character encoding .
/ * ( non - javadoc )
get parameter values from the request .
get the local name of the session .
returns the local address .
get the reader for the encoding .
returns the index of the dot of the given property .
/ * ------------------------------------------------------------

returns the value of the given property as a string .
returns the value of the given object as a value .
returns the indexed value for the given object .

<p > sets the value of the <code > property< / code > property . < / p >
sets the value of the given object .
set the value of the property to the index of the property .
set the value of the property to the value
returns the for the given data .
returns a list of all files in the directory .
create a new filter for the current file

returns the index of the specified column .
sets the object to be used .
{
handles heart beat from a cue segment .
{
/ *
updates the metadata data source .
this method is called from the { @link ( ) } method .
this method is called when the entity is rebuilt from the list of instructions .
check if the given path exists .
rename a object with a name .
this method returns the object object for the given objectid id .
creates a password from the system .
----- private methods -----
returns the lucene document id for the given object .
/ *
recurse over the list of items in the list .
create a new { @link document } from the current repository .
get the binary content of the document .
imports the types of import types .
add the given type to the repository list .
/ * ( non - javadoc )
get the types of the given type .
register the jcr type information for the given node type .
write the given write to the writer .
retrieve recurring metrics for a set of time stamps .
adds a field to the list of fields .
adds a field to the list of fields .
adds a new value to the given writer .
{ @inheritdoc }
close the connection .
check idle time .

get the field info .

formats the given date object to a string .
format the date and time values for the specified calendar .
returns the field names .
gets the field info .

{
get the values of the named field .
returns an <code > / code > that is prefixed with the given name . the prefix is returned .
add a new field to the map .
associates the specified list with the specified name .
add a field to the registry .
remove the field from the map .
get the field value as a int field .
get the field value .
adds a date to the date .
puts a date field into the date .
reads the next line from the input stream .
writes the fields to the output stream .
clear the current state of this field .
destroys the fields .
returns the value of the given string parameter .
get the quality of the { @code } .
returns the quality of the specified { @code list } as a list of { @code } objects .
add a cookie to the header .
add the flex header mappings to the fields
returns a { @link } that spans the sequence number of sequences and ranges into a { @link } .
add the outer block to the tail of the node .
returns the value of the given column .

/ *
cast result object to array value .
cast a value to array
return a string containing the groups in the given group .
creates a tag entry entry .
/ * private void ( string map )


extract tags from meta tag .
generate a string representation of a metric group .
extract a line from the metric .
convert a string to a stream of tuples .
creates a new heap with the given {
removes all listeners registered with this { @link } .
/ * ( non - javadoc )
gets the properties of the properties .
set the app name for the app .
sets the content type of the content editor .
set the content encoding of the content .
set correlationid of correlation correlation id .
set the value of the flash mode .
set the expiration time .
set the headers for this control .
set the message id for the current user .
set the priority of the priority list .
sets the reply to the reply .
sets the timestamp of the current timestamp .
set the type of the property .
sets the userid of user id .
decodes the given string array of the form {

get user s current user .

get user from contig
get user information by given user
get group list from user name .
add friends to site .
update friends y
get type of the command
set this group s group s group name .
upload a user
get the action for the command
creates a new scene object with the given text .
registers the given handler for the given action handler .
get the current state of the current state of the current state .
connect to the specified connection .
adds a listener to the source event listener .
removes a source listener listener .
sets the link to the target node .
sets the action to be used for the given action .
returns the number of tier partitions .
initializes the trees for the given injector and adds them to the list of .
builds the bindings .
creates a bindings for the class .
creates a { @link } .
creates a bindings for the binding .
apply the epipolar tile to the specified coordinates .
/ * ( non - javadoc )
configures the path of the resource .
/ * ------------------------------------------------------------

/ * initializes the xml document .
/ * initializes the xml editor element .
init the parser .
/ * init the node s name from the dom node .
/ * init .
/ * init documents for the filter .
/ * initializes the xml content editor .
/ * init the xml mapping from the dom node to the servlet .
init listener .
/ * ------------------------------------------------------------
/ * initializes the session config
initializes the mime mime headers .
/ * recursive method to parse a list of nodes from the list of files
/ * helper methods
/ * initializes the error page .
/ * this method is called from the xml node and generates instructions for the xml node .
/ * init xml documents from xml .
/ * ( non - javadoc )
/ *
handle the request .
/ * ( non - javadoc )
init fxml
returns the directory as a directory .
returns a list of files that are contained in the directory .
process the visitor to process the files in the list .
get the value of the preference s range or {

use this api to apply .

registers a type name to the given class .
returns the host name .
set the port to the address .
returns true if the current thread is not open .
start the server .
stop the server .
returns the entity represented by the guid .

add the member information .
returns an iterator over the elements of this fluent iterable where the first element is the same as the given iterator .
returns an iterator that divides the elements of the given iterator to the given iterator of elements .
sends a request to dropbox http request .
sends a upload request to the given file .
returns a list of objects from a collection of objects .
returns a list of child elements of a given class .
toggles the maximum visibilities .
fired on the
{
{
{
create a new reader builder .
/ * ( non - javadoc )
attach a jwt to the web endpoint .
<p > get a url to use for this request . < / p >
returns a filter that matches the query filter .
returns a filter that matches the query query or null if no matching filter is found .

{
finds the builder for the given processor and returns the list of runners together with the sample information .
build the pipeline .
merge data from the given { @link instream } into a { @link optional } .
adds a new element to the form .
remove an element from this list .
check if the collection is a sorted list of the same number .
{
/ * ( non - javadoc )
adds a new sprite to the specified sprite and the specified sprite .
removes the sprite from the current sprite and the specified sprite .
clear the scroll gesture .
called by {
add a new list of to the list of .
add dirty tables to the grid view
called when the graphics is done .
creates a new polygon with the vertices of the given graphics interior .
renders the scroll layer with the specified layer .
decodes a format from a format .
determine the current user s descriptor for the current user .
convert the number of { @code } to a { @code atomiclong } .
this method is used to determine the type of the { @link } for the given type .
derive the from the .
get the shape of a polygon .
get the color of the given type .
create a { @link } instance for { @link } .
create a new shape for a given type .
visit a tree .
get input {
get layer output type .
run the job .
initialize the formal parameter .
add a constraint to the equivalent constraint .
adds a constraint to the model .
generate the contributions for the buildfactory .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
the method to extract vocab data from the specified dataset .
write the to the
restore a new valueset to a new datainputstream
creates a inetsocketaddress that creates a inetsocketaddress for the given target type .
normalize the ip address of the host with the given name .
/ * the grammar class for the given grammar .
/ *
gets the results of the items in the iteration .
get the previous value from the named resource .
gets broadcast set set set .
initialize the ecore element when inside a script .
add this property to the container .
computes the activations for the layer to the given graphic .
add a modifier .
adds a new delta field to the record .
returns the priority of the current render class .
add this priority at the end of this list
returns a stream of tags that are represented by the given { @code tags } .
returns a stream of tags that are mapped to the given { @code } .
maps values to be a superset of metric values .
sets the delta to the metric value .
===========================================================
{
get a list of { @link eventdispatcher } s associated with the event .
connect to the server .
disconnect the connection
this method will return a new channel that is capable of this { @link channel } .
send a message to the end of the log .
shutdown the channel .
returns the platform - specific java version of the bundle .

/ * message is used to create a new .

sends a connection to the given target .

sends a http request to the specified { @link } .
register dispatcher for the flash activity
notify listeners about the connection .
notify listeners of listeners .
notify listeners that the user has changed .
notify all listeners registered with the connection .

sigmoid reduction operation : elementwise { @code [ out [ 1 ] } supports see { @link ( int layer ) } to eliminate reduction over the permutation ( along with the output permutation ) . <br > for example : <br > [ i ] where [ i ] = [ norm [ i ] [ abs ] [ abs ]
returns true if the class is not present .
returns true if the first class is found .
get sound from path
disposes all sources necessary to clear the resources that were not composing this .
this method disposes all the outstanding objects from the pool .
/ * ( non - javadoc )
this method is called when the user presses the .
the transform .
set the logging level of this logger .
create a new { @link } instance that will create { @link } .
create a terminal frame from the current terminal handler .
creates a new stream set .
create the quick fix if needed .
transform a value into a map .

sort the sort sort .
search for param type .
add a new configuration to the project .
add source folders to project .
get the parameter value for the given parameter .
process the configuration .
initializes the eclipse configuration file .
parses the project configuration file .
===========================================================
adds an { @link } to the aggregator .
returns the number of subscriber events .
gets the output gate associated with the given gate index .
this method is to generate json and then renders it to json .
/ * ( non - javadoc )
{
{
set the input labels of the feature matrix
transform a text into a transform - separated string .
add a field to the set of field .
add a field to the node
adds a field to the node .
use this api to fetch resource of given name .
build the { @link } instance .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
checks if the given file is a directory .
{
{
loads the data buffer from the input stream .
reads a single {
reads a { @link } from the given { @link } .
generate the default eclipse js code for the given name .
sets the current page status .
checks if the given name is a duplicate name .
sets the names of the names of the names of the form that the given name is set to the given name .
this method is used to update the page status of the status update .
{

this method returns the keystore object from the configuration .
returns the base configuration for the vault .
repeat 32 - bit integer from the given array of ints .

/ * compute the next n bits of the three .
compute the pq of a
count the number of bytes in the buffer .
/ *
/ *
compute the pseudo - algorithm .
main method to print the specified class using the given main class .
{
transform the results of this operator and returns a mapper .
flatmap > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
filter the results
partitions the elements in this group by applying the provided mapping function to each element in this group .
returns a new grouping key object represented by this group .
initiates a join transformation .
initiates a cross product transformation cross product of the other and other other other parts .
initiates a cross product of this transformation .
initiates a cross product transformation cross product cross - transform cross product cross - transformation .
initiates a delta iteration ( asynchronously ) transformation . the delta is applied to the delta . the current iteration and sort of the delta is applied to the number of rows in the window .
runs the operation executing operation .
writes the specified data sink to the output stream .
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
print a single histogram .
/ * ( non - javadoc )
add a single - time window to the wheel .
initialize the ecore property .
this method is called when the script is initialized .
create a .
shuts down the current thread .
{
create a .
add a to the list of top - bottom - precision and related examples .
add a to the list of top - related examples .
adds a data to this field .
adds a data field to the existing field .
adds a field to the record set .
careful! not implemented by objectinputstream .
create a .

serializes the given { @link outputstream } .
create a .
add a classifier to the solver .
create a .
create a .
create a .
create a new { @link } instance for the given class .
creates a new { @link scheduledexecutorservice } that hosts the program arguments .
register the metric with the given prefix and .
register metric data observer .
find the variable associated with the system property .

{
writes a { @link dataoutput } object to the output stream .
/ *
resets the intersection .
extract the container from the container .
invoke the method .
generate the closure definition .
generate the anonymous classes for the given anonymous class definition .
generate the given object .
generate the given object .
generate the member .
generate the given object .
generate the given object .
generate the given object .
generate the given object .
generate the given object .
generate the given object .
returns the end of this list .
generate the given object .
generate the given object .
generate the given object .
generate the given object .
generate the given object .
generate the given object .
generate the given object .
throws an exception if the value is not null .
assert that the value is not null .
generate the given object .
generate the value for the executable .
generate the given object .
generate the given object .
generate the given object .
generate the given object .
generate the given object .
generate the given object .
generate the given object .
generate the given object .
generate the given object .
convert a string to a default value .
create new feature instance .
gets the value of the given environment .
stores the current store key in the input stream .
checks whether the given process is an agent .
/ *
analyze the state of the given { @link } .
compute the types of the given type .
checks whether arguments are not null .
checks if the given message is a valid { @code string } argument .
check that the given { @link string } is not { @link } .
checks whether the given { @code state } is not { @code true } and throws { @code illegalstateexception } .

=============
{


{
setup the marker for the user .
this method is used to parse the data in the { @link } to the current step .
positions the divider in the given recyclerview
init fxml by this class .
log a message to a message .
replies the sarl passage of the sarl compiler .
writes a boolean value to the stream .
writes the long value to the stream .
write double to the buffer .
writes a float value to the stream .
{
{ @inheritdoc }
{
add a forbidden annotation .
add a forbidden annotation .
add a modifier .
process the event .
start the processor .
writes a string to the buffer .
writes binary data to the buffer .
check if len is available
add default super - super - mapping mapping .
creates a new fluo cluster .
flush the buffer to the stream .
writes the ref of the ref .
process the next tag .
train the tree .
this method is used to build the worker threads
this method is used to determine the segments for the .
sets the model context .
add a dependency to the dependency .
sets the interval .
check if the is modified .
check if the log file is modified .
get the cursor
get a new watchdog call from the given .
get a callback that will create a new
evaluate the given
evaluate the given minibatch conditioned on the given { @link } .

returns the number of spread raised to the number of times the number of runs the number of times the number of times that is returned .
return the precision of the specified label
calculate the number of doubles for the given precision .
get the recall value for the given
calculates the recall for the given recall .

evaluate the estimator for the given .

sets the rate of the population to be returned .
calculate the dot value of the given label .
calculate the numerical norm of the given angle .
calculate the probability of the measure of the
returns the angle of the matrix .
calculate the correlation coefficient for the given correlation id .
calculate the correlation coefficient for the covariance matrix .
returns the number of operands in the serial formula .
{
generate a string representation of the confusion matrix .
returns a new { @link } that contains the objects that are not the <em > / em > sum of the predicted splits .
{
gets the predicted category predicted predicted predicted predicted .
{

creates an injector that lazily creates a new instance of { @link } .
waits for the events to be invoked .
{

/ * ( non - javadoc )

parse the given map of values .
{
set the value of the recipe
/ *
calculates the histogram of the histogram .
saves the model to the model .
/ * ( non - javadoc )

--------------------------------------------
sets the inputs for the input name .
sets the inputs to the inputs .
returns the of the file .
read hml data from the stream .
writes the properties to the properties file .
returns the size of the type .
returns the symbol table for this symbol table .
returns the byte array with the length of the byte array .

called when the value is in the container .

process the next value from the current state .
writes the given type to the given offset in the buffer .

write the bytes to the end of the byte array .
truncates the large data at the given position .
waits until the shutdown mode is raised .
returns the next element in the stream .
checks if the next character is a regular expression .
returns true if the value is a valid double .
/ * parse the next character in the next token .
/ * ( non - javadoc )
handles a new class loader .
start the thread .
clears the cache .
shuts down the current thread .
returns a copy of this { @link bytebuf } with the given { @link } .
read compressed data from the given datainput .
write a string to the output .
read a string from the given input stream .
write a string to the output .

read string array from the given array of bytes .
read flv data from the input array to the end of the array
print the dbf file .
get the number of bits in the given byte .
read an enum from the given stream .
write the enum value to the given enum .
skip threading

create a new gene with the provided predicate
convert the writables to a byte array .
gets the type of the resource .
record a new token using the specified password .
creates a new request based on the specified password .
clear the response
/ * ( non - javadoc )
create a new gene with the given supplier .
return a new gene with the given predicate .
returns the relative path to the base base .
resets the location of the location to the system .
set base directory to be used .
get the directory of the given resource in the given directory .
load a list of data from a list of objects .
sets the encoding encoding .
adds a new byte to the end of this table .
adds character to the buffer .
read the character encoding of the next character .
read the next byte from the byte buffer .
add a new to the graph .
start the .
{
get the version of the database .
submits a task to the queue .
submit a new transaction to the queue .
quit for shutdown .
submit a task to the queue .


initializes the form .
get a tree of revisions from the document .
get local document from document
creates a new document document with the given revision id .
add a document to the document .
delete document from document
returns the identifier of the document .
adds the item to the list of existing items .
{
{

prepare attachment attachment .
retrieves attachment attachment ( mind that the attachment ) be open or null if the attachment is not found .
splice from revision to revision
{
returns the future that is not already completed .
shows the reporter with the given parameters .
loads the last window of the window .
adds a new listener to the {
creates a form form .
this method is called by the to dismiss the .
mid - disable mode of
/ * ( non - javadoc )
returns true if this node is a descendant of this node .
undo this undo .
sets the current value of the {
/ * ( non - javadoc )
{
delete a cassandra document .
{
asserts that two objects are equal .
asserts that two arrays are equal .
asserts that two arrays are equal .
assert that a matcher with a certain value is equal to the actual value .
fails if the matcher is a string that is a string that is equal to the given one .
{
{
reads the content of the { @link } from the given file .
create a new { @link } from the given { @link } .
creates a new http request .
init the request
get attribute of the current value .
writes the data to the stream .
reads the data from the specified byte array .
reads a number of bytes from the stream .


parses the filenames file from the given file .
parse the of the given .

/ * parse headers to the next header .
closes the current stream .
creates a reader for the given encoding .
returns the value of the specified resource .
add a new uri to the given uri .
put this to a { @link scheme } .
removes the scheme from the given scheme .
creates a new { @link streamex } with the result of applying the given result to the { @link } .
creates a new instance of this class from the source url .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
waits for the given timeout .
writes the given channel to the buffer .
write a short value to the given output stream .
create a copy of the given device .
returns the composite address of the specified user .
create a new instance of this class from the given address .
create a new instance of this class from the specified source url .
creates a copy of the specified <code > / code > .
create a new url for this address .
create a new instance of this class from the specified url .
returns a new url that contains the url that is the <code > url< / code > instance .
returns the parent of the current user .
returns true if the url is not seekable or not .
/ * ( non - javadoc )

this method splits the words in the given tensor .
this method returns the vector for the given vector for the given vector learning .
this method splits the given tensor into a vector of words using the predetermined for the given weights .
calculate the difference between arrays or the specified learning rate
this method assigns a to the given document
get the appropriate identifying event .
calculate the difference between two arrays
this method will return all the documents in the list of documents for the specified partition .

this method calculates the similarity of two tensors within the tcl expressions .



finds the label matching the given label .
splits the suggestions in the given text .
given a collection of labels return the first labeled matching the search
given a label in the array of labels and labels are aligned in the specified label ( 3d )
get the top left of the list of top - left common points in the tree .
this method returns a new f1 for the specified text .
returns a new similarity for the given document .
given a vocabulary convert the crystal vocab to a .
{
saves a sequence of files to the specified file .
saves a sequence of data in the given sequence to the given output file
restore the sequence of suffixes
saves a sequence of files to a file .
saves sequence file to a given output file
restore the sequence of suffixes
persist a file .
restore a data file in the given path .
saves the specified path to the list of files in the specified path .
saves the specified data file to the specified output stream .
saves the specified data to the given file .

creates a pairtree byte array with the given pos length .
creates a pairtree byte array with the given pos length .
returns a string representation of the block with utf - 8 length .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new { @code executor } from the given { @code } .
create a new { @code router } from the configuration .
creates a new { @code servicebuilder } from the given { @code resource } .
/ * ( non - javadoc )
transform a search string to a regular expression .
create a domain
freeze the table the block table is the grid .
recycle the page .
load the class from the cache .
transform the value of a type into a rollup object
get all domains in the list of addresses .
gets the { @link } instance for the given { @link } .
returns the list of domain type names for this domain .
returns the raw types of the given types . <p >
returns the domain domain access for the database .
adds a new element to the list of elements .
check if the state is a .
/ * ( non - javadoc )
this method will return the list of all the elements in the given store .
determines the error status for the given node .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the result of evaluating a {
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of nodes that are
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the value of the <code >
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > calculate the maximum of the whole region
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > calculate the of the element of
{
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > calculate the distance of the two nodes
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of nodes that are
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of nodes in the
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > calculate the number of fractional part of
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > sum of the result of this method
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > multiply the scaling ( i j )
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of nodes that are
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the current value of the given
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > calculate the distance between this matrix and
<div color = red style = font - size : 24px ; color : red > <b > <i > / i > < / b > < / ol >
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the value of the two chars
{
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > calculate the value of the <code >
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > calculate the length of the two polynomials
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of nodes that are
creates a reader from a given reader .
reads characters into a portion of the specified character array .
writes the given character to the output .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the null value if it is
returns the request for the request .
get the bearer token from the {
get the preferences for the current user .
build a schemata definition of from http request .
get the name of the output variable .
returns the actual type arguments for the given parameterized type .
/ *
generate a long - endian representation of a given { @code byte [] } .
generate a 64 - bit integer from the given 64 - bit integer .
generate a 128 - bit hash of a byte using the given key .
generate a 32 - bit unsigned integer using the murmurhash3 ( 64 - bit ) hash .
/ * ( non - javadoc )
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > set the query parameter .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the result of executing the expression
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / > < / div > <div color = red style = font - size : 18px ; color : red > <i > select a query string
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the result of executing the expression
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > select a query that will be used
given a query and predicate returns the results of the domain type .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > select a query that contains the result
{
sets whether or not the given value is changed .
returns whether the specified entry is the specified entry .
returns the version of the given version .
returns the evaluation context for the current user .
<editor - fold defaultstate = collapsed desc = generated code >
check the given { @link } .
init method .
handle the names of the init methods .
parse the given parameter value .
checks that the parameter is not present .
{
this method is called when the connection is reconnected to the connection .
upgrade a request to the cometd network
lookup the api key from the configuration
lookup the host name from the configuration .
locates the port from the properties file .
lookup the scheme .
reads the data from the source file into a { @link } .
{
gets the failure of all the statuses of this file .
returns the machine type of this jvm .
creates a new instance of the .
writes the specified buffer to the buffer .
{
writes a buffer to the buffer .
close the current browser .
read the channel from the socket .
logs a warning by a given throwable .
reads the entire file from the disk .
returns the output size of the given output .
returns the size of the page size .
get the output size of a convolution variable
returns the string representation of the image .
validates the given { @code } mode .
generate a square padding for the elevation of the given shape .
generate a random number of positions .
resolves entity from the dtd sheet .
initializes the for the given entity .
/ *
load the class name from the class hierarchy .
adds a new value to the set of values .
updates the stats update stats .
this method is used to create a jpa entity from the {
executes the query .
creates a new { @link } from the given query .
create a new query id entity for the entity id .

sets the search filter .
this method is called by the { @link } to search the search request .
search the search results for the search request .
search for search results .
search for a search form .
search for the search url and return the result as a string .
returns the lex url for the specified sling .
search for a query .
show party error for a given search query .
/ * ( non - javadoc )
/ * this method is used to retrieve the results from the results .
find the protein map of the faces in the given regexp .

search for a query by cache or search for a query .
/ * ( non - javadoc )
/ * ( non - javadoc )

get the value of the given name
invokes the {
write a string to the given file fsync the file system .
read a string from hdfs
write object to file .
read object from yaml file .
returns a list of paths for each path in the directory specified by hdfs .

splits a dataset into a single sequence of dataset splits .

/ *
splits a given array of { @link } s into a { @link } .

return a list of paths for each path in the path .
returns a list of paths for each path in the directory specified by the path .
determine if the two operator is a or not
/ *
implements the operation for the and .
/ * ( non - javadoc )
flush the queue of the queue and flush the queue .
{
generate aggregate aggregate

returns an instance of { @link } for the given layer type .
updates the current username .
checks if the collection of elements of the collection is equal to the given collection .

get the instance for the given
/ * @override public object ( string ) { saveresult ( ) ;
runs the specified task on the queue .
initialize the request body .
close the client connection .
get the tcp port port .
get the header for the given name as a string .
add a header to the list of guesses .
checks if the given array is a match or not .
returns the headers for a given name .


get the encoding string from the current encoding .
fill the cookie with the mask .
put cookie into cookie data
close the connection .
ends the request .
returns the {
checks if the header of the header is allowed .
get the header value for the given header .
sets the value of the flash header .
sets the header value of the header .
add a header to the list of keys .
check if the header is valid .
sets the value of the footer
add a footer to the table .
returns true if the current state is a
returns the content of the request .
disconnect the connection .
/ * ( non - javadoc )
retrieves the id of the user .
register a callback to be executed on the destruction of the current agent .
{
returns the type of the parameter type .
parses the given token .
adds a filter to the list of attributes .
/ * this method is called to read the event handler .

{
checks if this entity is a synthetic join . <p >
initialize the input stream for the given input stream .
decorates a view to the given application context .
/ * ( non - javadoc )
loads the { @link splitbrainmergepolicy } object from the source object .
performs the given path and writes it to the given path .
constructs a new synthetic taxonomy table and add it to the table .
merges the given symbol table with the same size as the first child .
/ *
/ *
find symbol for the given string .
calculate the hash of the buffer .
copies the array of all zeros to the bucket .

calculate the average distance of the histogram .
/ * ( non - javadoc )
configures the configuration .
returns the property name for the given property name . if the property is not found it returns the first one .
returns whether the cache has the last modified time .





returns the init parameter for the given parameter name .
this method returns the value of the named parameter or if the parameter is not found it returns defaultvalue .
handles cors preflight requests .
the cors request is used to request the cors cors request .
join join with the given string .
checks if the request is a valid {
returns the media type from the given content type .
/ * parse the form - and - params
/ * ( non - javadoc )
insert a row into the table .

gets the fill - offset and anchor for the current row .
returns the row for the row .
remove the row from the document .
find the first first consumed first in the current row of the .
returns the next key in the table .
fill the children of the row .
validate the current row .
fill the entries in the given row .
copy the data from a pep file .
write the current checkpoint to the output stream .
reads the next checkpoint from the inputstream .
returns the for the given row .
converts a {
returns the groups of the specified table group .
returns the serializer for the specified table .
/ * ( non - javadoc )
creates a new instance of .
method called to parse the start element .
init fxml by default .
converts a throwable to a sessionconfigurationexception .
converts a throwable to a sessionconfigurationexception with the specified detail message .
loads the properties from the given class .
register a service .
the given from the given .
creates a new instance of the .
set the .
fills the mapping of the columns from the map .
generate column values .
build the rows from the columns .
write the contents of the rows to the output stream .
opens a file or directory if it doesn t exist .
==========================================================================
returns the statement name for the given directory .
adds the to the .
creates and returns the list of for the current session .
close the file .
create a new value map with the values from the values of the list .
returns true if the map is empty .
/ * ( non - javadoc )
converts a { @link throwable } to a sessionconfigurationexception to the given { @link throwable } .
converts a throwable to a sessionconfigurationexception with the specified detail message . if the throwable is a sessionconfigurationexception it will be passed through unmodified ; otherwise it will be wrapped in a new sessionconfigurationexception with the detail message .
search for days in the given hebrew year .
creates a new block key store from the { @code } object .
create a new map map by combining a block and key mapping .
decrypts data from the inputstream .
encrypt the string using the aes encryption key .
encrypts the given { @link } object from the given { @link outputstream } .
this method is used to determine the for the
get the secure secure secure mode .
minimize the transition to finish .
/ * ( non - javadoc )
/ * get the timezone for the entity .
{
converts a { @link throwable } to a sessionconfigurationexception to the sessionconfigurationexception .
converts a { @link throwable } to a sessionconfigurationexception .
/ * [ deutsch ] <p > konstruiert ein neues kalenderdatum . < / p >
converts a { @link throwable } to a { @link } .
converts a throwable to a stalekbobjectexception with the specified detail message .
/ * [ deutsch ] <p > erzeugt ein neues kalenderdatum . < / p >
returns the year era year - 24 .
/ * [ deutsch ] <p > pr&uuml ; ft ob angegebenen wohldefiniertes about the iso - 8601 - time / range / internet / . a <b > note : < / b > method must be in the same calendar . this method is equivalent to : <ul > <li > the difference between the difference between the two days
/ * [ deutsch ] <p > entspricht { @code at ( plaintime . of ( hour minute )) } . < / p >
{
returns a new { @link } that contains ints of the specified number of hours .
this method gets the singleton instance of this class . <br > <b > attention : < / b > <br > please prefer dependency - injection instead of using this method .
/ * [ deutsch ] <p > konvertiert das angegebene zu einem . < / p >
{
recursively recursively recursively recursively recursively recursively append the source files to the destination directory recursively .
returns an instance that will accept the specified hour of the hour minute and second .
find the matching files in the given directory .
generate the own method for the given type .
returns the constructor for the given { @link } .
get the { @link } for the given type .
{
this method gets the singleton instance of this class . <br > <b > attention : < / b > <br > please prefer dependency - injection instead of using this method .

converts a list of string to a string representation of the form -
count the number of spaces in the specified string .
get the column column column of the .
find the column name for the column name .
~ methoden ----------------------------------------------------------
returns a list of channel chains .
/ * ( non - javadoc )
{
checks if the page is within the page boundaries .
/ * [ deutsch ] <p > erzeugt eine kalenderdatum . < / p >
/ * [ deutsch ] <p > erzeugt ein neues kalenderdatum . < / p >
/ * [ deutsch ] <p > ermittelt die daten von des angegebenen datums . < / p >
returns the month of the month .
/ * [ deutsch ] <p > pr&uuml ; ft ob die angegebenen parameter ein wohldefiniertes kalenderdatum beschreiben . < / p >
create a date from the given algorithm .
/ * [ deutsch ] <p > entspricht { @code at ( plaintime . of ( hour minute )) } . < / p >
returns the default week day for the given balance .
check proxy parameters .
resolves all values for the specified object .

this method returns the domains for the domains .
returns the interface of the given class .
removes duplicates from expressions .
this method is used to dispatch the data from the queue to the queue .
/ * this method is used to compute the decision for the threshold in the future .
updates the k - level entry for the given schedule .
transform a table into a map .
returns the map of the properties of the table .
convert the given { @code expression } to the { @code expression } .

creates a new { @link arraylist } containing all the { @link } objects .
returns the name of the language .
this method is used to compute the and returns the number of threads in the future .

/ * ( non - javadoc )
parse a string into a long value .
parses a variable number from the given timezone .
parses a timestamp set from the timestamp set in the zone .
parse time - zone - time string .
parse time zone .
parse time to milliseconds .
parses a time zone from a time zone .
parse time zone .
creates a new { @link } that will be used to create a new { @link } .
sets a new condition .
sets a new { @link } to the current node .
add a flow to the target node .
enable tls logging .
sets the name of the to the hostname .
set the plaintext key for the given key .
get a specific key from the specified key .
check whether the node is a valid vm .
redirects to the specified redirect to the redirect .
this method is used to retrieve the current uri from the request uri .
set the http verb methods for the current endpoint .
returns the node of the node .
{
clear the cache
{
/ * ( non - javadoc )
reads the contents of the given reader into a string .
/ * called by jsp method declaration .
renders the input image to html . <p >
/ * returns a string which is the same as the current scope .
initialize the configuration for the given .
create a new scope instance for the given scope .
returns the base64 encoded base64 encoded base64 encoded string .
returns the given for the given regexp .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
sets the value of the <code > / code > property .
{
returns true if this node is selected .
add the list of successors to the list of sources .
update the node of the current node .
check the tree and add to the list of descendents .
check whether the tree is a treepath or a rollback .
finds the content of the given content .
create a new
/ *
gets a request that adds a request to a folder
gets a request that retrieves the items in the specified folder
gets a request that will scan folders for a folder
gets a request that creates a request that creates a new resource
lists the folders of a folder
renames a request to a folder
gets a request that adds a request to a resource that will be updated to the existing item .
gets a copy of a file
deletes a request
gets a request that gets a request that retrieves the collaborations of a folder
lists shared relationships for a shared link .
lists shared apps for a shared link .
returned collection of collection of existing folders .
lists folders in a folder .
sets the background image to the specified url .
{
gets a request that retrieves a request that retrieves the collaborations of the specified id
gets a request that retrieves the items in the trash
deletes a request from a folder
lists the restore folder for a folder
gets the description of the slider .
sets the description of the slider . <p > <b > note : < / b > <b > note : < / b > this method will not be called on the { @link } . <p > <b > note : < / b > <b > note : < / b > this method will not be called on
retrieves the link for the shared link .
sets the link to the link .
get the tags for the tags .
sets the tags for the tag .
this method initializes the view .
this method initializes jscrollpane
get the caption html for the html editor .
append the message to the queue .
returns the code of the given type .
/ * [ deutsch ] <p > konstruiert eine neue instanz . < / p >
gets the value of the code as a string .
returns the format of the given <code > / code > . <p > this method is used to find the format of the specified <code > / code > .
check if the given string is a valid format .
check if the urlpattern territory is valid for the territory revocation .
convert a string to a string .
converts a string to a string .
returns the percentage of the number of milliseconds spent .
refresh the current {
{
sets the maximum allowed maximum allowed values .
returns a calendardate from the days between the days and days .

/ * [ deutsch ] <p > addiert den angegebenen zu dieser kalenderwoche . < / p >
returns a copy of this period with the specified years .
translate the fallback to the fallback message .
/ * [ deutsch ] <p > erzeugt ein neues kalenderdatum am . < / p >
/ * [ deutsch ] <p > erzeugt eine instanz dieser klasse f&uuml ; r die angegebenen . < / p >
gets the meta data for the user meta data .
returns a function that gets a list of { @link } instances .
/ * ( non - javadoc )

/ * ( non - javadoc )
/ *
reset the state of the map .
creates a filter value from the given operation .
creates a filter value from the given operation .
creates a filter that contains the tag value from the given tag .



/ * [ deutsch ] <p > pr&uuml ; ft ob die angegebenen parameter ein wohldefiniertes kalenderdatum beschreiben . < / p >
/ * [ deutsch ] <p > entspricht { @code at ( plaintime . of ( hour minute )) } . < / p >
create a new http method .
creates a new method call from the request .
{
creates a matcher that matches { @code element } .
creates a list of nodes that are contained in the given collection .
gets the user owner of the specified user .
the key is the last header of the bucket .
create a bucket bucket
check if the given maestrano request is azure repository .
get the bucket id
get the bucket location of the bucket .
set the bucket for the specified bucket .
deletes the bucket .
creates a url for the specified bucket and expiration key .
generate a url for a bucket .
this method is used to generate the presigned url .
lists objects from the bucket .
list objects .
returns a list of objects that contain the keys in the response .
gets the object key .
gets the value of a key .
get a single object from the specified .
gets the value of a specified { @link } .
get the content of the object from the request .
gets the value of the specified bucket .
gets the metadata of a metadata .
put a new object to the bucket .
put the specified bucket into the bucket .
put a new objectname into a new one .
put a new object to the bucket .
put a new object to the bucket .

copy a json object to a destination object .
copy the object object to the destination object .
fetches a key from a given bucket .
fetch the json from a
delete a object from the given object .
upload multipart upload to multipart upload .
initiate a multipart upload .
upload file upload .
the bucket id passed in .

upload a multipart upload to the bucket .

aborts upload multipart upload .
upload multipart upload .

populate the metadata metadata from the request .

ensures that the value is not null or empty .
adds the header to the response .
convert the request to the url .
append a key to the bucket .
serialize this object to the bucket .
append a key to the bucket .
append a key to the bucket .


/ *
returns a function that returns the fragment of the fragment s modifiers .
get the value from the cache
check if the object is in the array
get the cookies from the http request header .
get the parameters necessary for this controller .
this method initializes jpanel
this method initializes
creates a predicate that evaluates the predicate .
creates a predicate that evaluates to true if { @code predicate } is a predicate .
returns a predicate that returns true if the target is a target .
returns a predicate that returns true if the target object is not a certain target type .
composes a function with a function that applies a function to the given function .
returns a predicate that returns a predicate that matches the given regular expression pattern .


creates a option value for the given label .
populates the form of a form .
highlights the highlights in the highlights to classify the highlights .
highlights the highlighting in the text
registers a new { @link action } with the given { @link action } .
evaluate the given element in the given object .
creates a new .
create a log - to - { @link } .
returns the dialog object .
returns a { @link consumer } that is equivalent to this { @link flux } .
wrap a runnable in a runnable .
wrap a { @link consumer } that wraps a { @link consumer } .
converts the given throwable to a { @link runtimeexception } .
creates a .
decorate { @link } to { @link isvuecomponent } of { @link isvuecomponent } .

print an info message .
log message to an array of stack trace .
print a message with the given exception .
dumps a string to the console .
creates a new { @link printstream } for the given trigger .

collects all the elements in the list .
print out the console console .
generate a javafx component .
create a new { @link } instance .
creates a new property .
build the method .
adds a bulk scan scan to the scan .
removes a certain uri from the specified uri .
creates a new context service context .
creates a new instance of { @link } that will be used to create a new one for the given { @link } . <p >
print the message .
dispatches the specified method on the target object to the target object .
returns the list of the violations of the specified type .
suspend the callback with the given callback .
sets whether the { @link } is set to { @link } .
returns the exception if the cause of the cause fails .
sends a message to the response .
add a new listener to the list of listeners .
clear the user s authentication user authorization headers .
sends a new server to the server .
sets the maximum allowed maximum allowed maximum allowed maximum allowed maximum allowed values .
enables / disables the
sends a request to the provided { @link simplebrokermessagehandler } .
send a request to the server .
sends the http response to the annis server .
checks if the request is a request
extract the redirect location from the response .
sets the complete .
sets the full .
gets scripts for scripts scripts matching the given name .
get the integer value from the element .
opens a new object .
copies the specified { @link file } to the given { @code file } .
returns the names of the names of the projects .
the <code > / code > method of the <code > / code > method of the <code > / code > . the <code > / code > is the same as the <code > / code > . the <code > / code > is the same as the <code > / code >

creates a new {
returns a new stat of the stat of the specified .
sync the sync operation .
creates a new { @link } instance fluently for the given flags .
validate the type of the target field .
sets the theme .
sets the theme .
set the theme .
add a serializer to this class .
set the for the
set the for the axis
get the list of for the given key .
define the transform of this axis
set the dot of the y axes for the y axis
add a new point to the list
/ * --- private methods ---
add the spider scan .
add all nodes to the cluster .
adds a new { @link } to the list of threads .
adds a new seed for the given node .
adds all nodes to the given node .
add a historyreference to the message tree .
add a listener that will be used to add the listener to be notified when the spider scan is already in the listener .
this method initializes this
this method initializes
generate a class for the given input type .
generate default constructor for the { @link } .
generate source code for a given methoddescriptor .
generates source code for the given method .
check if the current context is available for the current class .
this method initializes
notifies the current recyclerview .
sets the { @link net . dv8tion . jda . core . descriptions } of a { @code string } as a parameter . <p >
sets the value of the specified { @code } with the specified description .
create a new instance of this class by reading the history of the { @link } .
get the icon of the .
binds the specified item source to the target item .
binds the given { @link } to the given { @link list } of { @link target } s .
convert the to a object .
load messages from the given {
checks whether the extensions are extensions .
get the timeout for the specified method with the given name .
invoke the method for the given parameters .
load a class by its name .
load a class from the class loader .
loads the toplevel file from the list of files .
returns the list of {
resolves the types of the given { @code } .
finds all classes in the scan .
creates a new {
check whether this address is a hidden address of this tzid .
sets the for the given .
visit an element . this method will be called for every node in the tree that is a descendant of a node .
returns true if the token is a session token .
returns true if the given session id is empty .
set the token to be used for the given session id .
remove the current session token from the given session .
tells whether or not the current user is authenticated . <p >
add a new http session token to the site list .
remove a token from the given site .
gets the http session token from the site .
get the http session for this session .
gets the http session .

get the list of all sessions in the current session .
create a new team tag
create a new player track
create a new { @link } from the given team
check whether the given string is a valid iban .
generates the content of the url template .
removes the trailing separator from the given path .
returns the name of the variable .
gets the folder for the given folder .
-------------
get presenter from view
get the viewstate state of the view
this method will be called when the swipe view is triggered .
equivalent to { @link ( view view view view view view view view view view view view view view view ) }
remove a view from the view .
{
{
remove the given value from the cache .
retrieves a <code > table< / code > object describing the visible <code > resultset< / code > object which is a <code > resultset< / code > object describing the <code > resultset< / code > <code > resultset< / code > objects . <p >
retrieves a <code > table< / code > object describing the accessible table columns . <p >
delete a custom variable .

converts the string to a byte array .

write the integer value to the stream .
read a biginteger from the input stream .
/ * ( non - javadoc )

get collection objects .
retrieves a jdbc retrieval of the specified <code > table< / code > object describing the user <code > resultset< / code > object of this <code > resultset< / code > object . <p >
check whether the is not already present .
format a message .
retrieves a jdbc driver for this view . <p >
validates the given string .
/ *
returns the list of all the files in the given endpoint .
delete a file deleting the file
create a directory for the given path .
{
resets this widget .
/ *
remove the css class from the list of links .
get the list of head .
{
insert links to the theme .
get the response from the response .
retrieves a <code > string< / code > object that represents a <code > resultset< / code > object describing the <code > delete< / code > object of the database . <p >
retrieves a <code > table< / code > object describing the accessible tables contained in this table . <p >
clamp the value of the given double value to the given coordinate system .
returns a new matrix with the minimum value .
calculate sum of two points

computes the
compute the offset from the circle .
computes the offset between two values .
interpolate the circle with the given fraction .
get distance from cube
build a jts graphics round from a given interval .
computes the length of the given
given a and a maximum of the compute the km on the plane .

retrieves the table of all bean objects meeting the given <code > class< / code > object . <p >
/ *
{

logs the system driver .
print command line arguments .


start the croquet game instance .
send response body to response .
returns a matcher that matches the given string with the given string . <p >
creates a matcher that matches the given matchers . <p >
creates a matcher that matches when the examined { @link searchresult } s are satisfied .
/ * ( non - javadoc )
a matcher that will ignore { @code equal } to { @code equal } .
returns a matcher that matches sequence by <u >
initialize the meta data from the data store .
get the meta data meta data from the server .
update the
returns a matcher that matches the examined {
returns a matcher that matches the given regular expression .
returns a matcher that matches the given regular expression .
returns a matcher that matches the given prefix and returns a matcher that matches the given prefix . <p > this returns a matcher that matches the start of the substring that matches the condition . if the start is not a substring it returns a matcher that matches the start of the substring before the start is followed by the matcher .
computes the initial state of the .
scan the result set .
finds the position of the key .
checks whether the given key is not already in the parent .
renders the schema of the given { @link } .
renders string to json string .
parse the parser parser from the parser .
create a log entry .
send error event error event .
puts the given key into the cache .
returns the successor of the cache .
waits for the specified cache waiting for the specified key to the specified timeout .
waits for the given timeout .
removes the cache from the cache .
initialize the endpoint dir for the given endpoint .
/ *
/ * private static dirs final >
get the client - side endpoint url for the specified endpoint .
recursively recursively deletes all files in the given { @code } recursively . the given directory must match the given path .
cleanup the running operation .
check the table tileset exists
remove the database entry from the database .
imports the file from the disk cache .
{ @inheritdoc }
returns the number of rows in the database .
get the count of rows that should be shown in the database .
returns the number of rows in the specified row where the requested zoom level is showing the requested zoom level .
return the first value of the table .
gets the index of the index .
delete materialized view .
read a object from the given network .
<p > . < / p >
persist the file
parses the given priority .
registers a { @link isvuecomponent } of { @link isvuecomponent } annotated with { @link } .
register the given { @link } annotation .
adds the default components to the builder .

clear the screen percentage .
shut down the application .
extract the keys of the property .
this method is called by the { @link } to find the tile { @link tile } object .
check if the source tile exists in the map .
get the coverage of the specified tile points in the specified zoom level .
get the coverage of the coverage of tiles that overlap the tile at the zoom level tile radius in pixels
get the coverage of the specified bitmaps within the specified zoom level .
get the rectangle which is a tile rectangle of the tile rectangle .
get the coverage of the given points
get the coverage of the
get a list of for the given
get the task for the specified
cancels all pending tasks that have been removed .
get the tasktracker for the given download .

zoom in the zoom level to the zoom level


creates a wrapper from a specific { @link com . google . api . api . api . ( string string ) } .
resolve the function for the given function .
returns the name of the function name .
start the environment .
returns {
{
returns a copy of this date - time with the specified duration . signs the result in a time - zone .
/ * parse a time frame .
check if the drawer area is scrollable
moves the items to the mru position in the wheel .
initialize the fxml file .
handle the root folder of the root folder .
generate the changed widget for the creation of the tab .
called when the view is changed .
this method is used to read a property of the { @link } annotation .
----------------------------------------------------------------
calculate the of the .
build the report to be used in the application .
build log log
build device data for the device .
build application data .
read the next exif data .
read the next portion of the stream .
check if the marker is a marker
write the block data to the output .
get the quality scores .
build a report report for a report .
clones the given node and returns it .
/ * ( non - javadoc )
{
initialize the .
computes the initial for the clusters .
update the graph with the given version .

add a partition to the graph .
registers a abstraction operator .

check if the given { @link selector } is visible .
delete the sql statement .
removes the vertex label vertex from the graph .
removes the vertex from the vertex tree .
returns the list of items in the list .
select all values from the select clause
select a list of objects from the specified select clause .






creates a { @link } for the given { @link } .
creates default response handler for the given {

update the given value with the given value .
delete a string
delete the given sql parameter
removes the tailing entries from the list .
handles a single response .
checks if the index is a global index .
helper method to get an input counter for a given key .
writes the given request to the current session .
executes the query .
queries the query .
get the class path .
get input stream to string
extract the class name from the classpath .

gets the file extension of the file .
queries the query to be invoked when the query is executed .
executes the query
executes the query .
executes the given query .
completes the operation .
{
{
acquires a stanza .
adds a new bug category to the list of { @link category } s .

find a for a full name
load a plugin from the project .
loads the plugin from the url .
advancing the token in the token
creates a new datastore instance .
deletes the meta data store .
opens a snapshot store with the given name .
delete a snapshot of the specified name .
{
delete log from file
switch to the current .
switch to the current .
sends a string to the list of characters .
sends the specified bit to the list of devices .

get the huffman bits of the .
send a to the server .
returns a new group of the specified address .
/ * ( non - javadoc )
scans the given instructions to find the { @link } .
add a point to the end of the map .
returns the points list .
updates the bounds of the bounds of the bounds .
updates the specified instant in the specified instant .
commits the commit to the session .
returns a new connection from the pool .
resets the connection address .
creates a new connection to the address .
closes the connection
add links for the requested indexes .
/ * ( non - javadoc )
sends a mail reply to the mail .
converts a string to a project .
converts the given { @link } to a { @link } .
check if the given buginstance is a valid error .
sets the minimum priority of the tooltip .
returns all set set category names for this set .
converts the current string to a string .
converts the string representation of the form to the current line .
get priority priority of the current user .
creates a new variable with the given index .
/ * ( non - javadoc )
/ * ( non - javadoc )
remove a list of from the list of topics .
add a new command description .

set the flag .
creates a { @link } for the given { @link serializer } .
returns a { @link } object describing the { @link } bean .
returns a { @code collector } which performs a reduction of the elements of this { @code fluentiterable } according to the specified downstream { @code collector } .
generate a { @link string } of the given { @link } .
/ * ( non - javadoc )
initialize the grid panel .
{
checks if the block is a block id .
copy this object to another .
traverses the block of blocks until the block is reached .
process instructions .
checks if the path is a prefix of the path .
/ * ( non - javadoc )
find code in the class path .
returns the code for the given path pattern .
create a { @link } from a list of { @link links } objects .
checks if the node is a mixin node .
add a query result to the query
add a to the stream .
check if the value is a valid value .
get the reports information from the
extract the from the given stream .
extract the texture tile from the image .
update the progress of the progress sheet .


check if the is not valid .
checks if the user has a password .
create a new

toggle pause .

returns a map of rdf namespaces that are present in the model namespace .
returns a new list containing all the values of the specified row .
add a new item to the list .
search the index of the array .
converts a json object to a bean


serialize the java object to a bean .

convert a bean to a bean
finds the target class for the class .
set a property to a bean
sets the value of the given key to the given value .
sets the value of the given object .



key .
key .

put a value from a jsonobject

put a value into a jsonobject .

get a property on a jsonobject .
get value as a double .
get the int value from the current key .
get a jsonarray of json objects .
get the json representation of a jsonobject .
get the value associated with the given key .
get the string value from the key .
returns the value of the given key as a string .
returns the value mapped by key if it exists .
get the int value as a int value .
get a value from the jsonobject .
returns the long value as a long .
produce a jsonarray containing the elements of this jsonobject .
write the contents of the current reader to the writer .
set a value to a jsonobject .
set a value to the map
convert the hash to a string .
set the hash method .
sets the hash of the hash .
/ * ( non - javadoc )
replies the given variable name .

compares this object to another .
creates a new for the given variable .
/ * ( non - javadoc )
check if the value is a file or not .

factory method for creating a new instance of .

finds the default value processor .
find the property name for the class .

find the property name for the class .
find the json that is a json object .

find the json string for a class .
returns the merged list of all the jars in the list .
returns the merged list of the specified target class .
register the default value processor .
registers a property to be used for the given processor .

registers a property serializer for the given class .
register the given class processor .
register the given serializer .
registers the given key / value pair .
register a json object from the given json string .
registers a new property for the class .
register a class property .
reset the current state .
set the mode .
sets the type of the collection type .
add annotation field annotation .
add a annotation to the cache .

remove a json document from the map .
remove a property from the target class .
remove a property from the target class .
returns whether the given file is a java file .
checks whether the given archive is a java file .
returns true if the class is in the same class .
checks whether the given artifact is a java artifact .
copy the content of the clipboard to the clipboard .

adds a new attribute to the attribute .
add a new attribute to the attribute .

creates a new task tree .
merge node list from the given node .
find the node that is the node in the given node .
merge the given node into the list of predecessors items .
returns the number of tasks that have been touched from the given node .
fire the event to notify listeners that the channel is fired .
get the count of items in the query .
get the number of

get the number of files that are currently in the watched file .
get the size average of the table size .
get the number of columns .
get the number of items in the table .
delete the number of rows in the table .
get the number of corrupt files
returns the total size of the file .
calculates the hash value of a given key in the given byte array .
converts a string to a hex string .
returns the number of bytes in the byte array .
returns a hash of the two byte - bit in - place .
returns a java class instance for the class .
get the class descriptor for the given class name .
/ * ( non - javadoc )
handle the error response .
handle the .
returns the server s list of servers for the given geoname .
compares this to another .
returns the for the current portable .
convert a string to a string representation of the type .
returns the { @link } for the given type .
returns the effective typequalifierannotation on this resource .
executes the mojo .
clears the meta data .
disposes the current .
/ * ( non - javadoc )
/ * register the super class for the specified . <p > this method is used to register the super class .
/ * ( non - javadoc )
build the instrumentation for the build path .
create a new { @link } instance .
analyze the current dropwizard resolution .
creates a new barrier for the given plan .
analyze the .
log exception if errors were found in the .

creates a map of methods from a factory .
execute the method .
returns an iterator of all blocks in the block s block .
create a {
{ @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } {
get the controller instance of the .
/ * ( non - javadoc )
calculate the score of the knn distances of the given study .
calculates the expected inter - rater agreement that is the distance in the .
{
<p > gets the json map that represents the specified map of <code > / code > . < / p >
----------------------------------------------------------------------------------------------------------------------
add a single element to the collection .
close the child resources .
handle the method signature of the method .
set the classpath for the class .
set the path of the class that is already of the path .
check the parameters of the plugin .
create the engine for the current build .

read the long value from the given byte buffer .
this method is called when the server is running .
sets the transport protocol .
/ * ******************************************************************** / * abstract methods ********************************************************************
gets the value of the specified fern .
calculates the pixel position of the slider .
/ * ( non - javadoc )
{
create a new { @link } from the given image .
this method is used to send a topic to the topic
/ *
return the length of the sequence that match the given pattern .
validate the schema and the given xml schema .
validate the given filename and returns the result as a { @link org . apache . json . } .
parse xml document from input source and parse it into xml document .
parse an xml document from an inputstream .
finds the types matching the given path .
finds the messages in the document .
handle an error message .
handle a warning .
get the value of a given attribute .
get the value of the attribute
get the value of the attribute with the given attribute name .
gets the order of the passed in order .
check if the given node is a valid name .
sleep for the given duration amount of time .
sets the typeface for the items .
initialize the .
/ * parse the parameter from the config .


{
sets the current rendering button .
{
checks whether the text is valid .
open the popup .
sets the date and time of the date picker .
setenabled this tooltip to enable or disable the jcalendar .
/ * ( non - javadoc )
set the minimum width field width in the current grid .
sets the popup popup popup to the specified popup location .

returns a pseudo - random uniformly distributed int value .
returns a pseudo - random uniformly distributed int value between { @code min } and max { @code max } min { min { max } .
returns a random long value .
returns a long - valued { @code long } value from the specified { @code long } . if the minimum value is { @code a } { @code long } { @code min } { @code min } { @code min } { @code min } { @code min } { @code min } { @code min } { @code min }
returns a random double between min and max inclusive .

generates a random string from the given length .

returns a random iban string .
generates a random alphanumeric string length .
randomly picks a random string from the given length .

generates a random length of { @code length } random number of random length .
returns a random length of random length .
/ * ( non - javadoc )
parse the query string .



attempts to convert the value to a <code > / code > .
apply a new large { @link packet } to the given { @link packet } .
retrieves the integer value of the given { @link java . sql . java . time . java . text . java . util . value } .
retrieves a long value from the database .
returns the { @link } represented by this <code > type< / code > .
add a new result hook to the statement .
returns the number of unique id matching the specified name .
returns a copy of this object to the specified { @code object } .

/ * ------------------------------------------------------------
{
serializes the given { @link writer } to a { @link writer } .
convert the specified serializable to the given { @code } .
convert a {
returns a future that is not necessarily the same as the original future .
execute the given target .
execute the given { @code } and { @code } .
runs the given runnable in the specified target .

the given { @code } from the given { @code runnable } .
runs the given runnable in the specified container .
verifies that the given target is contained in the given class .
verifies that the given target is contained in the target class .
returns the list of for the given .
get a list of completions .
retrieves a { @link list } of { @link } instances that are associated with the specified time units .
creates an instance of { @code } with the specified { @code name } and { @code value } .
create a new instance of { @link } .
creates a new instance of the specified { @code scheduler } .
creates a new instance of the specified target .
{
sets the current timers of the duration .
set the visible visible visible visible visible visible visible visible visible visible visible visible visible visible visible visible visible visible visible visible visible visible visible visible visible buttons .
sets the delay between the current time .
installs the current node .
{
{


register the mbean s mbean s mbean s registration .
unregister a mbean
retrieves the objectname object for the given type .

returns the absolute path of the given class .
get the list of media types of the given type .
returns the name of the template name of the template .
get the {
returns the template annotation of the given annotation .
returns the string array of the annotation of the specified annotation .
get the default encoding for the given string .
get base paths relative to the base path of a path .
gets the list of extensions .
returns the string for the given module .
returns the current configuration template engine dir .
get base path base for the given properties .
/ *
<p > creates a new { @code } with the given { @code } . <p > this method is overridable hook .
runs the given computation .
restores the original state .
reads a file from the input stream .
returns an input stream for the file .
{
{
returns a set of policies that are used by the configuration .
set the current date time
moves the hit information to the mru position .
increment the counts of the node .
evicts from the cache and then decrementing the values .
get the next candidate .
removes entries from the node .
throws an exception if the template is not accessible .
ensures that the template is not a valid state .
create a new { @link } from a { @link } .
create a { @link } from a string .
sets the initial capacity of { @link } .
sets the { @link } of this { @link } . <p >
gets the size of the map .
sets the weight of the preference s value to be used .
returns a new { @link } which applies the weight of the reduction .
sets the { @link } to use for the given key .
sets the current state of the .
sets the values of the values in the map .
sets the expiration time .
sets the value of the { @link } fires the { @link } .
adds an entry to the value .
refresh the refresh time .
sets the refresh time of the given duration .
add a new ticker to the builder .
creates a new { @link } with the given { @code } .
writes a { @link cacheconfiguration } to a { @link writer } .
sets the stats record .
sets the stats record .
creates a new learner entry .
creates a new cache entry for this cache .
creates a new cache key . <p > called by { @link } .
creates a cache entry for the specified cache entry .
creates a new cache entry for this cache . <p >
sets the maximum size of the cluster .
evict the window .
this is the main method of this method .
returns true if the k victim is greater than the threshold .
expire
discards the specified lock if it s already exists .
removes the item from the head of the queue .
write a node to the queue .
checks if the node is not present .
returns the value of the specified emitter .
reports a new nonce to the cache .
check if the distribution is available .
this method is called when the cache is reached .
grants the specified minimum and maximum size .
calculate the amount of time spent in the current window if it is not already visible .
reads the next record and notifies the listeners if necessary .
this method is called from the { @code node } method of the cache .
expireat increments value expiration from the expiration time .
sets the expiration time of the expiration before the expiration time .
write the remaining data to the writer .

schedules a pending task to terminate .

this method is called by the task manager to ensure that the task is complete .
drains the node to the specified key .
atomically deletes a new node .
if not already contains a new node the current time the oldest entry is updated .
updates the new node .

drains the buffer to the output .
evict the window for the window .
{
removes the mapping from the specified key to the specified { @code entry } .
/ * ( non - javadoc )
maps accumulator to a function .
maps the value to the sentinel value .
returns the order of the specified keys .
perform the given limit operation on the given values .
folds the iterator of the iterator into the map .
gets the shortest value from the current node .
/ *
returns a new proxy instance for the given cache .
returns the jackson { @link } of the given object .
sets the { @link } annotation .
set the default mapper .
add tsdb search options .
return the names of all the names of the names .
creates a new configuration instance .
{
append the xml content of the xml document to the xml document .
create a configuration for the given config
sets the value of the variable with the given value .


init document template .
/ * ( non - javadoc )
returns the first element in the map .
given a name firstname and a name .

returns a extension object that contains the given name and the parameters of the given name .

creates a constraint for the given constraint .
check if the given is empty .
get label label from the given full name
check if the given input is a valid key .
creates a constraint for the given constraint .
build a list of indexes from a map .
returns a list of keys that match the given prefix .
creates a map of bytes from the given json file .
{
find the class hierarchy for the given name .
load the class from the map .


/ * ( non - javadoc )
clear the .


{
{
reads the byte array from the byte array .
gets the class parameter for a generic type .
/ * ( non - javadoc )
解析反馈内容
append the item to the page .
call the callback to call the callback method .

{
{

returns the value of the given key as an integer .
returns the value of the given key as a boolean .
get the string value for the given key
get the string value of the property .
get the string representation of the application .
register the given atomix config
register the given { @link } from the given { @link } .
creates new { @link } with given parameters .
get all resources of the given list of resources .
returns the version of the file .
returns the output file of the given file .
check if phone number is valid .
get all the { @link } s in the list of .


computes the length of the two arrays .
reads the length of a data jpeg aligned offset of the given length .

{
handle the read event .
resume the response .
read the next chunk from the stream .
build urls for the server .
returns the key pair .
set a cookie value to be used .
get resource url for
get resource url for
get resource url for
initialize the validator .
remove the first page of .
get resource url for
get resource url for
get resource url for
get resource url for
get the asset from the asset .
get resource url for
{
get the response from the response .
add a response to the response .
remove a property from the response .
compares two strings ignoring case .
queries the specified query result considering the results of the specified query .


sets the field value to the given value .
get resource url for
{
attaches the view to the view .
detach view view .
check if the state is a restore state view .
set the view state to be used to view the view .
returns the root node of the specified { @link } .
get the { @link } for the specified delegate tag .
returns true if the current state is a .
returns the track size of the track .
method that will remove all the registered .
runs the gnuplot work in the graph .
runs the mojo execution .
add the system properties to the system properties .
{
returns a {
read a stream of readable text from the specified stream .
returns the value for the given key .
returns an array of all occurrences of the specified tag .
returns a configuration string that is a string value .
returns the integer value for the specified key .
{
returns a double object that is a key that is not present in the configuration
returns a configuration object that is a key that is not present in the configuration .
returns a boolean value for the given key .
{
{
returns the double value of the given key or null if not found .
{
returns the duration for the specified key .
returns the value of the specified key in the specified key .
returns the string array with the specified key .
returns a list of the keys contained in the given key .
/ * ( non - javadoc )
{
converts the given { @link } into a { @link } .
get resource url for
get resource url for
check if the given is a
handle the request .
handle a new request .
handle the given
handle a new .
this method is used to retrieve the { @link } instance .
calculate the for the metric

handles a metric change interval
get resource url for
get resource url for
get resource url for
get resource url for
get resource url for

compares the specified string starting at the specified position .

returns the { @link } for the given label .

get sms codecs .



delete a sms status .
check whether the phone number exists in the range [ openid ++ option ] .

/ * ( non - javadoc )
converts the { @link } to the map of parameters .
create a message for the flow execution .
removes all artifacts from the project .
delete a resource id from a resource id .
/ * public void ( string [] string [] args )
===========================================================
check if the memory of the memory of the memory is available .
{
this method is called by the event .
generate the final popup panel .
sets the method to the method .
get resource url for
get resource url for
get resource url for
get resource url for
get resource url for
get the for the given group id .
validate the job s schema and the user s key .
returns a jobconf that is not present in the given directory .
parse a select clause .
evaluates a variable - specific variable definition .
parses the next token .
read the list of attributes and return the list of objects .
update the catalog .
get the number format for the given element .
returns a {
write a byte to the byte array .
write block to the block .
writes the block pad to the block .
closes the file .
this method handles the complete status of the job status .
reads a {
execute a stream of the specified readable .
gets the list of topic .
<p > list of objects stored in a topic . < / p >
get the dependencies of the topic .
get the file name of the archive .
check if the current user has been set .
sets the currency pair for the currency entry .
sets the lexical date time of this builder .
sets the lexical date time of this builder .
sets the date of the datepicker .
initializes the job manager .
setups the job s default environment .
get the default password for the given classname .
cancel the current user s current user .
sends a job to the hadoop cluster .
/ * [ deutsch ] <p > erzeugt ein start des angegebenen . < / p >
checks if the token is publicly available .
retrieve a token access token for a user .
decrypts the parameters from the .
load a properties object from an inputstream .
{
{
returns a new object .
{
add a comment to a photoset . <br > this method does not require authentication .
delete a bulk comment .
get the list of comment filtered by a photoset . <br > this method does not require authentication .
serialize the buffer to the buffer .
deserialize a { @link bytebuffer } of { @link bytebuffer } into a single bytebuffer . <p > this method is used to parse bytebuffers to { @link } or { @link bytebuffer } . <p > this method is the same as { @link } or { @link } . <p > the returned wrapper is the same as
add a global {
/ * ( non - javadoc )
check whether the session is editable .
sets the current row of the row .
this method is called when the transaction is committed or deleted .
add a new queue to the queue .
merge the data from the current transaction into the database .
{

gets the row col action .
find the index of the row .

construct a new histogram from a bytebuffer ( or calculates of the histogram ) .
construct a new histogram from a bytebuffer .
sets the property to the specified value .
this method is called when the map is a map .
get the comment comment for the given key .
sets the value of the specified key to the specified key .
sets the comment of the comment .
/ * ( non - javadoc )
retrieves services for the given workspace .
get the list of the blog for the contact .
update the photo for a photo . <br > this method requires authentication with write permission .
atomically sets the value of the summary of the specified long .
gets the histogram of the histogram .
add a group member to the group .
adds a new point to this one .
calculate the start points of a given stop point .
the function is evaluated lazily .
calculate the value of the points .
returns the maximum value of the tensor .
normalize the y - vector of the y - major floating point value .

called when the user has been removed .
{
this method is called by the { @link } to be used for the current project .
returns the expression bearing from the expression .
get the expression representation of the expression .


setup the { @link } for the given .
setup a .

creates a new instance of { @link } .


create a for the given key .
this method is used to store the database cql3 the batch of rows .
process the adhoc - memory partition .
this method is used to update the ad - tuple .
checks if the given { @link } is a page of .

/ * ( non - javadoc )
calculate the table of the table .
calculate the value of the gauge
robert to
appends the current event to the list .

creates a fixed - size representation of the { @link } .
this method is used to generate the response for the given spout .
sends a hello - stream to the client .
appends the given event to the current context .
returns observable that returns the list of objects .
finish the job .
set the .

folds the matrix .
the method calculates the of the two chunks .
{
{
{
{
registers the given schema .
register a schema in the registry .
get the schema from the schema name .

build a schema from the given version .

generate a schema schema from the schema type .
{
encode a string into a string .
calculates the digest of the server .
creates a new instance of .
process the next n - phase sentinel .
register saturated processors .
this method is called from the current state .
this method is called when the phase is { @code } .
signal this node to the current node .
acquire the process block for the current barrier .
signal that the process is complete .
converts the given string to a string .
moves the current node to the next parties .
configures the file system properties file .
start the { @link } instance .
loads properties from inputstream .
start the configuration



/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
process a event .
/ * ( non - javadoc )
handle the given event .
check if the security manager is available .
add worker to the worker .
register a worker by a worker .
tries to acquire a worker pool from an internal worker thread pool .
handles a task to start the task .
/ * poll the worker thread to poll the worker in order to interrupt the worker .
run tasks in a task .
handles ctl browsing and queues a task to a task .
called to signal to the worker thread .
/ * this method is called to handle the task to steal a task to be executed .
tries to handle the queue for a given queue . if the given queue is empty then this method returns the result .
attempts to normalize the given task to the worker pool .
waits until the task is terminated or aborted .
forks and returns the result of a task to run the task if it is already suspected .
finds the steal queue for a given queue .
tries to join the tasks in the pool .
returns the number of active .
tries to terminate the current worker thread .
forks and executes the given task and delegates to the { @code executorservice } .
forks and starts the specified task . this method is called from { @code forkjointask . ( class ) } but allows the caller to pause the task .
returns total number of threads in queue .
returns the total count of the total count .
returns the total number of tasks associated with this task .
returns true if the queue is paused or not .
returns the task to act as dead and if it is already available in the pool .
propagates tasks from a collection to a running task .
waits for the queue to be drained .
kill the given worker by the given worker .
wrap a runnable in the given { @code runnable } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
defines if the tickmark labels should be visible .
calculate the parameters of a scaling matrix .


compute the data for the data grid .
calculate stats model model model model .
region >
/ * ( non - javadoc )
defines whether the gauge is enabled .
sets the locale .
/ * ( non - javadoc )
<p > optional . < / p >
<p > the namespaces that the namespaces was found . < / p >
/ *
/ *
configure the connector .

load the functions for the catalog .
sets the value of the given value .
sets the .
replaces the token with the replacement string .
write a message to the given message .
write field value to byte array .
writes a map of integers to the specified map .
creates a matcher that matches { @link } s .
creates a matcher that matches { @code } .
notifies the that the client is listening to .
creates a new instance of { @link } .
create a new instance of { @link } .
creates a new { @code } with the specified size .
register a new builder .
registers the given { @link } .
parse payload payload payload .
parse a payload string into a list of payload .
create a closeable from a closeable object .
executes a {
parse a closeable object from the given { @code closeable } .
create a { @link closeable } from the given blob specification .
creates a new closeable object from the given object .
closes the given {
creates a new tree node .
create a new child child child node .
create a new child child child child node .
find the files in the given directory .
appends the value of the given value to the stringbuilder .
append a key value separator string to the stringbuilder .
appends value to string .
append a string value to the stringbuilder .
compares two charsequences ignoring case .
ensure that the {
discard the internal table .
moves the data to the buffer .
{
/ * ( non - javadoc )
{
{
find the best guess for a particular column .
find the best level of the column family .
determine the maximum level notes .
print the subgraph of the board tree to the board .
/ * ( non - javadoc )
returns a new node representing the list of join results .
find the frame of forward for the frame .
find the next log matching the filter .
/ * ( non - javadoc )

returns true if the message is a or a replay message .
/ *
handle the .

handles the response message .
handle a task .
handle the heartbeat message .
this method is called when a is ready .

this method is called from the {
handles the of the response .
handles a fault message .
check if the wal is a
write a to disk
add a new repair message to the new one .
update the hub heartbeats to the migration leader .
send the heartbeat to the pending node .
/ * ( non - javadoc )
reset the state of the map .
resets the state of the statement to the list of children .

returns the statement to be returned from the session .
update the map of link to the map .
register the table with the given id .

remove the from the table .
remove the session from the cache .
compiles the sql statements to the database .
parse a value from a string .
<p > . < / p >
parses the input element and sets the properties to the properties .
gets the type of the cache .
get a property type name .
returns the value of the given object as a property .
get the setter type of the given property name .
set the value of the object property .
get a reference to a property reference .
checks if the property is a reference to the property .
set the property property value .
notifies the eventhandler for the current state .
notify the state of the .
invokes the { @link } to be called .
execute the listeners .

/ * ( non - javadoc )


crates new .
update the configuration of the .
get the configuration admin admin
convert the given table to the given set of objects .
retrieves a <code > table< / code > object describing the accessible routines if it exists or is not null .
retrieves a property for the database . <p >
retrieves a jdbc driver for the given <code > element< / code > . <p >
retrieves a <code > table< / code > object describing the primary keys in the table . <p >
retrieves a <code > table< / code > object describing the accessible routines . <p >
retrieves an <code > table< / code > object describing the accessible routines represented by this <code > table< / code > if this method is not available . <p >
retrieves a <code > table< / code > object describing the accessible routines or tables in the database . <p >
retrieves the <code > table< / code > object describing the accessible hooks . <p >
$antlr start eol
$antlr start
$antlr start
$antlr start
$antlr start
retrieves a unique structure of the <code > table< / code > object describing the accessible columns of the foreign side of the materialized view . <p >
retrieves a <code > table< / code > object describing the accessible resultset for the given <code > bean< / code > object . <p >
retrieves a <code > key / code > object describing the primary keys in this database . <p >
retrieves a <code > resultset< / code > object describing the primary keys of the foreign keys of the foreign keys . <p >
retrieves a <code > inputstream< / code > object that represents an <code > iterator< / code > that supports a <code > resultset< / code > object describing the <code > resultset< / code > <code > property< / code > object of <code > this< / code > object describing the <code > resultset< / code > object of <code >
$antlr start end
creates a {
$antlr start escape
$antlr start
$antlr start
$antlr start rparan
$antlr start
$antlr start string
$antlr start rparan
$antlr start temperature
$antlr start
$antlr start
$antlr start
$antlr start eol
$antlr start
$antlr start
$antlr start
$antlr start
checks whether the given plugin is a or not .
activates the current master .
shut down the current thread .
close all resources .
runs the socket .
get the for the given vector .
$antlr start
log a event
$antlr start
$antlr start greater
$antlr start bool
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start stringliteral
$antlr start select
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start eol
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start greater
create the indexes necessary to be used for generation .
$antlr start writing
$antlr start
$antlr start
$antlr start
$antlr start gt
$antlr start
$antlr start
$antlr start quoted_value
$antlr start rparan
wait for the cluster .
updates the index of the update .
initializes the index table .
adds a new index to the list of loaded dictionary to the specified index .
adds a mapping for the mapping to the given index .
check if the given resource exists .
search for the search type and search .

$antlr start ws
$antlr start
$antlr start
$antlr start
returns true if the current user has no fragment .

read a character from the buffer .
bulk publish workflow
enqueues a bulk of bulk publish of a bulk search .
send a workflow to a workflow tasktracker
get the class name of the class .
get the class class of the class .
get the field type from the class .
resolves a variable type variable type variable with the given type variable .
resolves the type variable type variable with the given type variable . <p > class . () .
return the position of the given type variable .
get the fields of the specified class .
find the field with the given name .
returns the type of the method .
convenience method to get a method from the specified class .

get all methods of the given class
returns the getter method for the given class name .
returns the setter method of the given field name .

{
applies the given event to the formatting .
checks if the field name is a field name .
get the value of the given field as a string .
returns the exception message for the exception .
wrap a { @link object } of type { @link object } to a { @link object } .
wrap a class instance of a class .
wrap a constructor with a specific constructor .
wrap a method with the given object .
returns true if the field is a simple class name .
create a new instance of this class from the given object .
wrap a wrapped object with given { @link object } .
create a new instance of the given class .
returns the method name of the given name .
returns true if the given name is a class name .
get the method name .
invokes the method with the given name and replacement . <p >
returns true if the field name is marked as field .
sets the field name of this field .
get the wrapped { @link java . lang . object } of type { @link nosuchfieldexception } and returns its value .
determine the directory with the given name .
decode the block .
creates a new text string from the given range .
checks that the given { @link icalendar } is not null .
--------------




checks if the given string contains a string .
converts a { @link integer } to a { @link } .

returns a range of { @link } instances .

loads the provider from the specified jar file .
initialize the singleton instance of the .

/ * convert the string to a string .
returns an unmodifiable list of the given values . <p > <b > note : < / b > this method is useful for implementing {
finds the {
returns a plan plan for a sql statement . the sql statement may contain fewer than the following criteria : [ a - z ] in the sql - way of a sql statement and a sql statement in the database .
get the interface name of the current interface .
find the path of the resource .
start the browser
display the activity
called when the activity is ready .
returns the handler that is the innermost handler .
handles the interceptor .
sets the outcome of the expectation for the given condition .
checks if the {
analog of


get the base resources for the given base name .
get the resources that are available for the given resource name .
loads the resource manager from the cache .
get the resource resource name from the given resource name .
get the resources that are contained in the given locale .
get the resource class for the given locale .
get the base name of the base package name .
returns the value of the given property as a string . <p >
get root element of the given input stream .
returns the child node of the given node with the given name and name .
returns the children of the given node with the given name and name .
get the value of the property as a string .
returns the attribute value from the given attribute .

normalizes a string
reads the row data from the dataset .

decodes a new fernet token from the given record .
decode the bigdecimal buffer .
read the string from the bytebuffer .
decode the data from the buffer .
get the value from the given byte buffer .
reads a { @link bytebuffer } from a { @link bytebuffer } .
synchronise the results of the list of features .
list story statistics for all features .

get the results of all features for a particular sprint and team ( if present ) .
create a temporary - directory .
get the
computes the for the .
check the status of the job .
check whether the current status is a monitored connection .
write data to the given type .
writes data to a data type . <p > example : <code > ( short [] ) < / code > is called by .
get the list of key - value pairs of keys .
gets the string from the given url .
get stream from http client
get the { @link } object for the given http connection .
execute the http response .
send a sig record to the response
update the last index of the transaction id .
returns the oldest message for the current queue .
removes all messages from the queue .

get the list of all the rings that are contained in the current line .
returns the value of the for the first line of the current line .
get the length of all bytes in this tensor .
returns the size of the given number of bytes .
serialize the contents of the buffer into the buffer .
reads a new { @link bytebuffer } from the given offset .

print a list of errors and warnings to be used in the given message .
parses the given from the given .
add a new to the list of .
sync the sync .
opens a file or open .
initialize the .
add a provider to the .

initializes the .
initializes the root site .
initializes the { @link } for the given { @link } .
initializes the .










returns the crl id for the specified certificate . <p >


creates a new ssl certificate from the given string .

gets the revocation object from the jcas

verifies that the certificate chain is not valid .
verifies that the certificate is not in the certificate .
print the information about the log .
binds the given { @link } to the given { @link serializer } .
get resolver serializer for type .
print the default values of the .
overrides the visitor to reset the opcode stack
implements the visitor to reset the opcode stack
implements the visitor to look for the value of the constant pool if it is a constant pool .
checks whether the field name is a valid field name .
check whether the given parameter is a class or interface of the given parameter .
checks whether the given { @code } is a { @code } .
checks if the method is a valid
find the value of the annotation for the given class .
count the number of occurrences of a string .
returns the number of arguments that are specific to the given number of arguments .
checks that the stack is not null or a valid resort or a collection of errors .
returns true if the file is modified .
/ * ( non - javadoc )
overrides the visitor to reset the method s modifiers to the super class .
check if the class name is a valid classname .
sends a gcm - line to the server .


returns the string identifying the given
overrides the visitor to reset the opcode stack
looks for methods that contain methods that are not already checked .
overrides the visitor to look for a field in the class hierarchy
{
implements the visitor to reset the stack
implements the visitor to look for the unconditional .
initialize reader state
{

returns the { @link segment } that is the same as the current storage .
returns true if the segments of the segments are the same .
returns the full segment id for the given segments .
returns the offset of the segment .
read the segment from the given segment .
read the segments from the given segment .
shuts down the .
execute jt and wait for the given root node .
execute a zookeeper connection .
opens the server - side .
create a global transaction for global transaction .
create a global transaction for the specified scope .
commit the creation of the specified stream in the transaction .
commit the commit to write the transaction to the counter - specific state .
this method increments the global transaction .
executes the given checkout - based asynchronous block .
reports a player to the stream .
release the internal buffer .
{
update the catalog .
extract the number of bytes necessary to use the next chunk in the list .
get the statistics for the specified stats .
exports the given stream to the output stream .
execute the block with the block hash block .

release blocks in the block
overrides the visitor to reset the opcode stack
implements the visitor to reset the opcode stack
implements the visitor to find the opcode stack and return the value of the stack if the value is a primitive or not .
finds the method for the given class .
add a new sample
/ * ( non - javadoc )
asynchronously resume a checkpoint waiting for a checkpoint waiting for the current task .
{
generates a new for the checkpoint id .
deletes a path from the list .
get data from a path into a new one .
modify the membership of three membership devices .
draw a link to the list of devices
/ * ( non - javadoc )
/ * ( non - javadoc )
validate the table .
returns metadata of all fields in this column .
builds metadata for row metadata .
build a column metadata metadata .
/ * ( non - javadoc )
create a command line command line .
<p > the list of db parameter groups . < / p >
<p > the ids of the documents in the simulation . < / p >
<p > the list of objects . < / p >
/ * private void ( string [] args ) { string [] { = new bufferedreader ( args ) ; // an { }
执行方法<br > 可执行private方法，也可执行static方法<br > 执行非static方法时，必须满足对象有默认构造方法<br >
<p > the active directory replication . < / p >
<p > the <code > / code > objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
add a single row to the list of contacts .
adds the specified attribute to the specified { @code filter } .

add the given { @code } to the set of addresses .
parse the json document to be parsed as a string .
moves the current file to the current one .
get the value from the { @link } .
/ *
executes the select statement .
adds a new count to the list of size .
removes the specified entry .
returns a new status of the specified .
returns the maximum edit block start .
this method is used to find the column for the table .
completes the complete .
invokes the callback method .
returns the row row - column heading values .
called by the { @link } search .
returns the column sums for the matrix .
creates a column of the columns for the given matrix .

creates a column of matrix multiplication .
returns the column width for the matrix .
returns the row - black - line coefficient for the given matrix .
creates a new matrix transpose . two matrix of the matrix is not required to be the same as the transpose of the matrix multiplication .
creates a qr matrix for the svd of the matrix .
transpose an eigenvalue for the row rows .

sets the values of the given component .
set the current component at the specified index .
sets the new set of values for the given indices .
computes the dot product of the other one by appending the dot product to the other .
add a vector to the vector .
assigns the entirety of the tensor to the other .
this method is used to compute the householder vectors and the entire map .
finds the value of the specified component at the specified offset .
returns the indices of the permutation .

fast - = concat ( = )
compares two values .
compute the maximum size of the .


write the column names to the writer .
extract properties from a task name
writes the specified channel to the specified channel .
get inputstream from a file
read a file from the file .

/ * ps public stuff
decode the filename of filenames .

convert a value to a number type .
closes the connection .
{
returns the index of the segment for the streamsegment .
lookup the .
start the xml document .
checks if a given string is a whitespace line .
renders the html page of html entity page .
renders node in a docbook page .

returns the css inline css inline css rules for the specified css path . <p >
recursively split the inode genome the image to the node .
compute the pairwise elimination of the nodes .
returns a dense variable with the specified lower - value threshold .
computes the column s centroids of a given 2d array .
a .
calculates the permutation of the .

<p > decomposes the x and y diagonal . < / p >
computes the entropy of the matrix .
add item to item .
convert the to a
/////////////////////////////////////////////////////////
add a new element to this element .

/ * /////////////////////////////////////////////////
/ * //////////////////////////////////////////////// ( string qname )
report an exception .

add a to the end of the target .
/ * ( non - javadoc )
/ * [ deutsch ] <p > ermittelt ob das angegebene zu dieser methode noch sie oder eine . < / p >
check whether the artifact exists
installs the artifact from the jar .
this method will be called for the group
read model data from the given { @link } .
/ * public object ( string string string string ) {
{
insert the item into the tree .
update the value of the node from the node .
returns the node to be used .
rotate the node from the dom node .
rotate the subtree .
find the node that matches the node .
finds the node that matches the given node .
/ * ( non - javadoc )
invokes the processor .
processes the result as a { @link } .
process the result of a task .
open the database .
close the database .
writes the {
checkpoints the current checkpoint .
opens a text file to the database .
returns the total intensity of the given image .
/ * ------------------------------------------------------------
clear the watchdog .
handle the peer peer .
add a peer to the server .
notifies all registered peer devices .
notifies all registered peers that are currently active .
notifies all listeners about the muc .
notify listeners that fired on the channel .
update the directoryconnection .
join join queue join to the join tree .
join the join list of the join - trees
recursive method to reconstruct the join join .
join the join - order join tree .
join the join tree rooted at node of the tree .
join the tree of join tree with the join tree .
join the bulk join to the join tree .
provisions a new for the given join node .
provisions a for a join node .
this method is used to generate a for the join node .
recursively append the descendants of the node recursively .
optimistically optimistically aggregate join join
join join plans to a join .
converts the specified {
check if the given expression is a collection of expressions that have not been seen as a potential expression .


returns the for the given transaction id .
ping the given ping message .
creates a new range for the segment .
decodes the given id from the given id .
decode a segment .
transform the { @link } from the { @link } object .
decodes the policy from the provided { @link } .
decodes a kinesis data stream .
creates a new uri for the given node .

get the value of the current thread to the current thread .
registers the future of cancellation packets .

returns a { @code } instance of the given { @code number } of { @code b } .
returns a { @code } instance of a { @code } .
creates a scaling policy from the given number of minutes .
sets the cache entry .
update the batch size for the cache .
an expectation for checking that the given element is not visible .
an expectation for checking that the given element is not present in the given observable .
returns the cache containing the cache entries .
returns the cache for the specified bucket .
sets the last indexed offset .
converts a {
returns a canonical form of the type name .
create a new instance of a class .
creates a new class interface .

add a description .
remove the group from the group .
eng - :
retrieves the list of session types .
lists all session types in the specified agent .
gets the session type .
retrieves the session type .
creates a new session entity type .
creates a new session entity type .
updates the session type entity type .
deletes a session type .
deletes a session type .
voltdb added method to get a instance for the given session .
creates a keystore object from the specified file .
create a { @link trustmanagerfactory } object from the pem file .
deletes the specified rule .
deletes the specified rule .
returns the specified resource . gets the list of available rules in the specified project .
returns the specified resource .
creates a forwardingrule resource in the specified project using the specified project and region .
creates a forwardingrule resource in the specified project and region .
retrieves the list of resources available to the specified project .
retrieves the list of resources available to the specified project .
sets the global target .
this method is used to dump the of the orb to the server .
sets the global target .
/ * ( non - javadoc )
retrieves an aggregated list of persistent disks .
retrieves an aggregated list of persistent disks .
returns the persistent disk type .
returns the persistent disk type .
retrieves a list of available disk types available to the specified project .
retrieves a list of available disk types available to the specified project .
use {
<code > . google . privacy . dlp . v2 . . . = ; < / code >
<code > . google . privacy . dlp . v2 . unwrapped = 3 ; < / code >
<code > . google . privacy . dlp . v2 . . = 3 ; < / code >
<code > . google . privacy . dlp . v2 . . = 3 ; < / code >
adds a new description . <p > <b > note : < / b > <b > note : < / b > you must have a chance to do it .
sets the policy of the routing policy to the specified policy .
creates a new { @link } .
{
{
{
draw the feature
draw the geometry and return true if the geometry is not a polygon
draw a geometry from the bounding box
draw a polygon
get the path of points in the polyline
draw the line
get the area of the polygon area .
draw the polygon
draw the circles

creates a { @code indexcolormodel } from the given image . <p >
get the data data structure of the argb pixels .
start the tag and return it .
checks if the value of the request parameter is set to the value of the request .
updates a glossary project with a project .
gets a trace .
lists the monitored resources in the project .
close the stream .
/ * package
set the flag flag to be used for this cdata container .
create a new { @link } instance .
close the frame .
get the format of the format of the format of the format of the format of the format of the input format .
get the value at the given index in the given buffer .
get the of the frame
/ *
converts the audio frame to the given frame .
get the coverage of the biggest
read jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg jpeg segment bytes

copies a file to the file .
copies a file to the file .
copy a file to another file .
copy file to file .
copies the given directory to the given directory .
copies the contents of the given inputstream to the given output stream .
returns the name of the file .
<p > returns the name of the file name of the file . < / p >
returns the string of the given path separator character .
get the filename of the given path .
devuelve true si si si si il
returns the temp directory .
reads a file from the file into a byte array .
read bytearray from byte buffer to byte array
write a file to the output stream .
deletes a file .
deletes a directory from the given directory .
renames a file .
renames a file .
renames a file .

converts a file to a file .
get the free space space for a given file .
converts the size of a file to a human readable size .
processes a directory .
validates that the format is valid or not .
checks if the given parameter is a valid parameter .
check if the function is a function or not .
checks if the string is a valid type of the string .
returns the { @link } of this { @code } .
/ * public list<string > ( string [] [] ) { return ( . ( ) ;
parse the given { @code } from the given { @code } .
returns { @link } { @link string } { @link string } { @link string } { @link string } { @link string } { @link string } { @link string } { @link string } { @link string } { @link string } { @link string } { @link string } { @link string } { @link string } { @link
returns the type of the given type .

returns the string representation of the given string .
parse an mpx time format string .
creates a new label with the given id .
factory method for creating the new { @link } .
{
returns the editor editor editor for the given class .
set the attributes .
{
lists [ google cloud cloud storage service .
lists [ google cloud cloud pub / i > .
gets log metric metric name .
gets a log metric .
creates a new metric that is a synonym metric .
creates a new metric that is a synonym metric .
updates metric .
updates metric .
deletes a metric .
deletes a metric .
parses the { @code namespace } and { @link } s .
reset the buffer to be read from the current session .
/ * ( non - javadoc )
sends a message to all listeners .
broadcast { @link } to all registered { @link } s .
invokes { @link net . dv8tion . jda . core . entities . messageembed messageembeds } to each { @link } and then invokes { @link ( object object ) } .
sends a { @link } to all registered { @link } s .
caches the specified key in the cache .
{
{

converts a { @code magickimage } to a buffered image .
cyclically permute the original image to be used in the class .
converts an image to a { @code bufferedimage } . <p > the following three three are simply { @code } and { @code } . <p > the { @code } is the { @code } of the image . the { @code } is the { @code } of the image . the { @code
creates a raster from the raster
parse the given file and parse it to the file system .
initialize the channel .
set the {
add a new listener to the list of affected versions .
sends the summary of connection packets .
/ * ( non - javadoc )
returns the value of the given resource name .
downloads the bom from the given mimetype resource .
copies the resources to the given resource .
checks if the given hash is available .
create a new index builder .
add a new index to this node .
get the index of the geometry represented by this geometry .
returns an edge from the geometry at the given index .
return true if this geometry is the top child of this node .
get the set of vertices in this polygon
get the set of edges from the geometry .
returns true if the given geometry is overlapped by the given geometry .
returns the number of triangle associated with this index .
returns a new index ring with the given location in the specified geometry .
{
------------------------------------------------------------------------
exports the [ google version ] [ google . longrunning . operation . response ] field when you want to store the response in the request .
validates the request and passes the request to the request .
validate the request .
registers the {
add a geometry to the geometry .
remove a geometry from the geometry
/ * ( non - javadoc )
stop the specified function .
merges the given {
factory method for creating new mail { @link imodel } .
creates a new object .
creates a new {
creates a new { @link } instance from the specified app id and app id .
sets the description of the user . <p > <b > note : < / b > <b > note : < / b > this method appends the previously { @code field } to the existing { @code item } object . <p > <b > note : < / b > <b > note : < / b > this method
sets the policy of the specified policy .
sets the app s { @link } .
/ * ( non - javadoc )
factory method for creating a new { @link } .
factory method for creating the new { @link label } . this method is invoked in the constructor from the derived classes and can be overridden so users can provide their own version of a new { @link } .
{
method called to write a response to the response .
sends a response to the response .
send a challenge to the client .
searches the web - agent of the web application .
----------------------------------------------------------
set the bar .
set the directive handler for the current location .
register a new handler that is the top level handlers .
hides the view .
lookup the { @link accessauditcontext } in the given { @code clientconfiguration } .
returns a new { @link builder } instance for the given project id and revision .
fire the activation of the {
fire a service to the server .
fires a session session to the server .
fires a session event .
retrieves the detail information of agent .
gets the detail summary of agent .
lists the agent associated with the specified project .
lists the agent associated with the specified agent .
starts a new agent in the specified agent .
starts a new agent in the specified agent .
starts a specified agent in the specified agent .
exports a device agent to your agent .
exports a device agent to your agent .
exports a agent in the agent exports to the specified monitored agent .
creates an import agent .
renames the specified agent .
create a new collection of objects from the given collection .
{
{
returns the namespace uri for the given node .
write the text to the output .
get the details of the error code .
get the details of the error message .
shows the dialog s dialog .
decodes a byte array from the given buffer .
decode the data from the input stream .
decode the given byte sequence of bytes ( parses the { @link } ) .
decode the given byte - number of bytes in the opaque decoding .
decode the input sequence of the input sequence .
decodes the sequence of bytes from the given sequence .
encode the value of the given bit value into the byte buffer .
encode the given date into a .

encodes the given biginteger into a 64 - bit integer using the specified encoding .
encodes an integer into a unicode character .
encodes an encoded sequence into a 64 - bit integer .
get the size of the given bit string .
returns the number of bytes in the string .
returns the number of characters that are equal to the specified number of characters .
{
factory method for creating a radio button .
factory method for creating the new { @link radio } . this method is invoked in the constructor from the derived classes and can be overridden so users can provide their own version of a new { @link imodel } for the component .
factory method for creating the new { @link component } for the new { @link component } .
{
closes the connection .
gets the tunnel identifying the destination .
opens the server .
/ * ( non - javadoc )

get all annotations from the list
returns all namespaces in this namespace .
returns all terms of terms of the terms .
returns all parameters of this query .
returns all members from the database .
returns all statements in the statement .
sets the current date and time of the request .


returns the namespace uri for the current namespace .
returns the count of all the number of rows in the statement .
{
{
creates a map of statements that support the query and group .
marshall the given parameter object .
build url for the given url
build the url for the given url .

checks if the given key is present .
returns a { @code c } whose value is { @code value } .
returns a new contextual instance of this class with the given key .
returns a new instance of this class by specifying the key and value .
parse the tree rooted at node or node and returns the node .
gets all annotation instances for the given module .
factory method for creating a new { @link } .

returns the next revision of the revision .
{
main method for running the .
creates a new { @link fielddeclaration } with the given type .
creates a builder for the type of the specified type .
converts a list of {
/ * ( non - javadoc )

{
delete the comments .
this method is called when a is encountered .
get the boundary type of a span .
returns the level of the span .
build the list of objects .
returns the link name of the target .
parses the images and parse them into a list of spans that match the link to the given link .
parse substring span .
parse the multiline format and print the span .
{
parse content element from an input text .
parse the content of a line and parse it into a new line .
links the list of links to the list .
sort templates .

serialize the given json document to a json string .
/ * ( non - javadoc )
rejects the given task and returns the result .
load classes from class .
load classes from a list of classes .
get the union of the classes .
get the intersection of this class .
get the list of classes that have the given list of classes .
get this list of classes .
get the classes that this method is to return the class names .
get the interfaces implemented by this class .
logs a warning .
logs an exception with the given level .
log a status message using the given time stamp .
logs the timeout in the logging system .
get all interfaces implemented by this class .
get the interfaces implemented by this class .
get the annotation of the annotation .
decode the block block into a block .
append a block to the given block .
get the annotation for this class .
get the list of classes that are specific to this class .
generate the graph dot for the alignment of the classifier .
generate a css file from the given class file .
create a new for the given size .
generate a css file for the grid file .
generate a css file for the given size .
generate a graph file
sets the input stream to the output stream .
set the input string to the input string .
validate the given block .
creates a new revision from the given block .
decodes a block from the block .
encodes a block into a new one .
get the input buffer for the given .
set the input input to the input .
validates the current frame .
{
applies the specified configuration to the new configuration .
sets the xml description of the panels .
returns the context of this word .
flushes the store .
checks whether the class is a persistent class name .
find the classpath entries for the given { @link class } .
setup the button .
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a queryparams to a string value .
compares this two annotation values .
/ * check if the given event is present in the current state .
analyze document type .
analyzes the document and returns the results .
returns sentiment relationships for the document .
analyze the document .
generate the annotation text for the annotation .
find the classpath entries for the given { @link classloader } .
creates a topic .
start a topic .
publish a topic to publish .
publish a message to publish .
gets information about a topic .
get a topic summary topic .
lists the response .
lists the response .
lists the suspension subscriptions for the specified topic .
lists topic subscriptions from the specified topic .
deletes the topic from the specified project .
deletes topic .
retrieves an aggregated list of available persistent disks .
retrieves an aggregated list of available persistent disks .
returns the type of available persistent disks .
returns the type of available type .
retrieves the list of available persistent disks .
retrieves the list of available persistent disks .
{
use {
returns a set of elements of the given type .
/ * ( non - javadoc )
logs a message at the info level .
init method .
parse the type of the { @link } annotation .
returns the catalog .
returns the { @code } for the specified name .
returns the { @code } that is a { @code } .
saves the database to the given database .
delete the given { @code } from the database .
finds the next schema in the table .
creates new { @link } instance .
creates new new { @link } .
use {
generate javadoc comment .
generate java doc .
generate a column of type set .
generate column .
removes the dynamic mapping of a list of .
validate the given value against the given position .
generate the doc documentation for the given method .
generate log for to
generate log for sql statement .
generate method code .
generate log for the content .
iterates through the list of listeners and all its superclasses .
search for method parameter by wild - level search .
counts parameter types of parameter .
generate sql condition for
generate log log
generate sql .
generate sql .
generate log for log content
retrieve values for the method .
{
{
{
{
returns true if the given string is a formatted string .
creates a new timestamp with the given timestamp .
creates a new { @link } instance that uses the given { @link } .
creates a timestamp from the given { @code } .
creates a timestamp from the specified { @code } .
generate the class definitions .
cumulative density function .
returns the cumulative probability of multinomial coefficients
gamma function .
quantile function to test quantile function .
returns the start of the string builder .
check if the value is a string .
converts a byte array to a hex string .
check if the given byte array is a hex encoded string .

check that the value is a valid value .
returns the first occurrence of the given string .
writes the contents of the source string to the end of the source .
read a string from the source string .


checks if the agent is not available .
binds the {

performs the intersection of the two vectors . the resulting iterator is the lexicographic order of the clusters are sorted .

/ * ( non - javadoc )
parse an attribute value from xml .
calls {
binds the specified observer to the specified observer .
retrieves an aggregated list of target resources .
retrieves an aggregated list of target resources .
deletes the specified vpntunnel resource .
deletes the specified vpntunnel resource .
retrieves the specified resource url for the specified resource .
retrieves a vpntunnel resource for the specified resource .
creates a vpntunnel resource in the specified project using the specified project and region .
creates a vpntunnel resource in the specified project using the specified region .
retrieves the specified vpntunnel list .
retrieves the list of vpntunnel resources contained within the specified region .
{ @inheritdoc }
returns the label for the given choice .
factory method for create a new editable text .
{


mapping between conll 54 german .
mapping between conll and lowercase characters .
mapping between two terminators .
mapping between sharp and ac .
mapping between conll and lowercase characters .
mapping between conll 54 convention .
mapping between sharp and ac .
init this .
returns the string of the first line of this text .
quote a character array .
{
{
reports a warning to the list of messages .
/ * ( non - javadoc )
close the current time .
adds the new row to the list of rows .
returns the indices of the rows in this term . this method is called from the constructor to obtain the indices to be returned . this method is called from the constructor to get the indices of the rows from the table . this method is called from the constructor to get the indices of the rows from the table . this method
{
{ @inheritdoc }
split this envelope into the specified split .
gets the name of the given item .
performs the bulk search on the specified structure .

removes the knn distance from the knn distances of the specified target node .
performs a neighbor knn distance from the given node to the given node .
performs a given search applying the given entry .
creates a new { @link java . util . map } of { @link } s .
returns the adapter for the given class .
creates a new adapter instance that is used to adapt the class to the cache .
returns a { @link } for the { @link } .
compute unscaled distance
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{

get the list of all the containers registered to the given list of containers .
add a progress bar to the list of recent counts .
run the algorithm .
main method .
use {
check if the given object is an object of the given type .

/ * computes the for the matrix .
symmetric tridiagonal ql algorithm :

checks if the given is a valid .
computes the differentiation between the two values .
/ * computes the real real - n - neighbors of the matrix .
calcola il deviation for underflow of cholesky decomposition .
normalize the permutation .
get the array of .
reads the value of the given class definition .
{
retrieve a jdbc driver from the drivermanager .
register jdbc driver
creates a new instance of the instance .
deletes an instance of the specified instance .
deletes an existing instance of the specified instance .
deletes a metadata .
returns information about the tier persistent persistent capacity .
performs the algorithm search for the given database .
serializes the content of the object into the { @link com . google . gwt . user . client . rpc . serializationstreamwriter } .
deserializes the content of the object from the { @link com . google . gwt . user . client . rpc . serializationstreamreader } .
convert a stopwatch to a chart .



加载类
load the class of the given class .
get a for a given title .
processes the tag .
invokes the method name .
parses a { @link document } from a reader .
parse xml document into xml .
parse a document into a dom document .
parse a text string into a document .

execute script script .
initializes the list of classes for this beanbuilder .
returns the next pseudorandom uniformly - distributed random number . <p >
algorithm .
serializes the content of the object into the { @link com . google . gwt . user . client . rpc . serializationstreamwriter } .
deserializes the content of the object from the { @link com . google . gwt . user . client . rpc . serializationstreamreader } .
create a new buckets and add it to the buckets .
gets the property value .
remove string from string
read the given file from the given file .
delete the page with the given id .
{
converts { @link org . apache . flink . api . . } to a { @link bytebuffer } .

adds the object to the vector .
subtracts the component vector from the vector .
sets the vector with the given vector .
clones the vector .
returns the length of this vector .
<p > this method is used to multiply the transform vector with the two vector . < / p >
returns the length of this vector in the current pixel .
returns the distance between this formula .
returns the squared euclidean distance between two points .
returns the angle of the other .
sets the vector of vectors .
multiply this factor with the other vector .
/ * ( non - javadoc )
sets the vector of this vector to the clusteringfeature .
determine if the specified range is in the range [ left right right ]
check if the point is contained in the sphere .
returns the vector of points in vectors .
returns the minimum intersection minimum point .
returns the maximal vector between two dimensions .
serializes the content of the object into the { @link com . google . gwt . user . client . rpc . serializationstreamwriter } .
deserializes the content of the object from the { @link com . google . gwt . user . client . rpc . serializationstreamreader } .
check the annotated dtd declaration .
generate the declarations of the phase .
print a error error .
print a warning and print the given id .
search for a key from the specified key .
get the servlet context for the current thread .
moves the two lists to the left and right
get the result of this { @link aggregation } that are contained in the specified relation .
write a file to the file .
returns the id of the path .
initializes the properties for the property .
returns the package name of the class .
returns the prefix of the specified property .
run the algorithm

traverse the medoids of and swaps the clusteringfeature .
the function to find the point of the points .
acquires the lock .

returns the element at the given index .
swaps the specified elements at the specified position in this matrix . <br > <br > note that i = i . e . sub - j is the same i . e . the one at most i j ( i j ) . i . j . i . e . sub - j . c . c . c .
/ * ( non - javadoc )
get the default value for a given path .
retrieves the default { @link } for a given path .

calculates the for the given node .
traverse strongly in the graph .
/ * search the next position in the contour of the convex hull .
extract the value of an annotation from the annotation .
get the audience name of the cassandra cassandra token .
token membership
get jsonobject for a path
delete a delete request
post post request
put a put http put request params
serializes the content of the object into the { @link com . google . gwt . user . client . rpc . serializationstreamwriter } .
deserializes the content of the object from the { @link com . google . gwt . user . client . rpc . serializationstreamreader } .
parse a plural expression .

performs the given database .
check if the given node is a longitude of the same distance .
plots the cluster state .
computes the dependency graph of a data point in the specified data .
pdf of pdf
pdf of rayleigh distribution
quantile function . <p >
creates a new leaf entry with the specified id .
run the naive algorithm .
determines the neighbor of the given list of clusters .
extract the right serial count .
compute the for the given database .
initialize units units .
update min max values .
find the coarse neighbors for a residue structure .
find the solution estimates of the subspace .
compute the for the compaction
computes the of the .
computes the polynomials of the gradients .
/ * ( non - javadoc )
returns the list of users for the given roles .
create a random model from a collection of roles . <p >
run the algorithm .
returns the predicted subspace of the given bdd .
calculates the full block of the polynomial .
calculate the factor of a in the specified .
calculates the full block of the given file .
returns a copy of this period with the specified period added . <p > this method returns a period representing the period in the period . <p > this method returns a period representing the period in the period . <p > this method returns a period representing the period in the period . <p > this method returns a period representing the
add this period to the maximum value of the years period .
register a plugin with the given .
checks if the given array contains the given array of types .
returns the number of types in this list .
returns true if the given condition matches the given condition .
returns the element at the specified index .
returns the root token for this context .
add children of this {
/ * ( non - javadoc )
process the end tag .
sets the value of the attribute .
get the value of a key from the map
retrieve the object at the given index .
returns the value of the specified property .
put the value into the cache .
returns the delay of the delay between the current computation and the delay .
put all the keys from the given map to the given value .
fires a new result to the list of registered children .
fires the result of the event .
removes the first child of the given event .
returns true if the given type is a perfect match .
add a set of values to the constant pool of this vector .
add a new value to the set of values .
create a new centroid .
create a new centroid of the specified vectors .
serializes the content of the object into the { @link com . google . gwt . user . client . rpc . serializationstreamwriter } .
deserializes the content of the object from the { @link com . google . gwt . user . client . rpc . serializationstreamreader } .
serializes the content of the object into the { @link com . google . gwt . user . client . rpc . serializationstreamwriter } .
deserializes the content of the object from the { @link com . google . gwt . user . client . rpc . serializationstreamreader } .
compute the node node size .
shrink the current node in the dfs .
{
/ * ------------------------------------------------------------
writes the node to the output .
read the next node from the graph .
{
get the session .
get the jms destination address from the jms destination
converts a string to a xml - string representation .
converts the given xml string to a string .
initialize the lock .
invoke the constructor for the given class . if the method is not found the method returns the class of the method .

the method to invoke the method with the given name and arguments .
set the property method to be used for the given property .
registers a property for the specified property .
registers the method for the given method .
get the list of methods that are allowed to be iterated .
register a static method call .
this method is called to update the and removes the method defintions for the given set of .
invoke a method on the given class .
invoke a method on the given object .
gets the property value .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the meta property meta property meta data .
checks if the name is a valid name .
check if the name is a getter name .
returns the property name for the given property name . if the property is not a string it is returned as a property .
get the property name for the setter .

creates a new { @link } .
creates a protobuf builder for the {
insert a new insert into the list

create a new map
build a list of filters .

this method is used to generate the for the given parameters .

transform a string to a list of .
compile compile - compile - compile - compile - units source .
parse log view to a file .
parse the given file and return it as a { @link } .
this method is used to compute the minimum difference between two partitions .
compile compile compilation files .
compile compilation files
compile compilation units .
build a new arraychar instance
parse the given { @link } from the given { @link file } .
write the physical log of the xml file to the given file .
create a new assignment expression .
create a new instance of the given type expression from the given variable type .
this method is called for a method of the class .
create a new .
adds a { @link } to the end of the map .
ensures that a given object is not a primitive type .
get the bounding box of the bounding box in the tile crs crs crs
get the bounding box of the bounding box tile .

this method resolves the current user s flow scope .
serializes the content of the object into the { @link com . google . gwt . user . client . rpc . serializationstreamwriter } .
deserializes the content of the object from the { @link com . google . gwt . user . client . rpc . serializationstreamreader } .
------------------------------------------------------------------------
returns the size of the jvms queue .
puts the indexes of the jvms to the output .
puts the indexes of the specified array into the given bytevector .
this method is used to compute the for the .
compute the differentiation from the camera .
merges the given size into a single one .
update the
updates the cache cache with the specified index .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the mode to be used .
sets the proxy server .
wait until the timeout is reached .

creates a view from the given url .
search for a page view .
add an event to the event .
adds an action to the event manager .
add a new event to the event .
/ * ( non - javadoc )
start the background thread .
stop the background thread .
this method is called from a class .
publish a message to the event .
publish the given record to the current position .




evaluates the default value if it is not null .
check if the given value matches the given value .
process the tag .
release the release resources .

checks if the given is a residue .
{
create a new resource resource
add the tag .

process the jsp documentation .
process the template .
renders the html tag id .
append attribute value to the end of the list .
compute the weight of gyration run .
estimates the centroids of the subspace .
persistencedelegate . instantiate ()
////////////////////////////////////////////////
called by the jsp page .
exports the html report to the html file . <p >
==========================================================================
transform a file to a w3c stylesheet . <p > the xslt transform is to set the xslt to the xslt stylesheet . < / p >
verify if the given is a valid .
parse a dom document and returns the { @link } .
parse the given input stream and parse it into a parse tree .
check if the document is a document
validate document validity .
updates the properties of the specified collection .
add the current tag .
render the tbody tag .
release resources .
generate the log for the suite .
release the resources associated with this instance .
release resources .
verifies that the given ping mode is not valid .
calculate ping and wait until the ping is available .
helper for ping .

confirms the current state of the given {

parse the given path to the given path .

serialize a json object into a json object .
get the direction of the direction of the direction
===============================================================
extract the port information from the server .
returns the host address for the given address .

traverses the node and swaps the node in the subtree rooted at the node .
render the given render state of the game state .
set the data set for the data set .
format the message using the given arguments .
add a resource to the provider .

process a new request .
set the selected element .
find the selected tree node .
find the selected selected elements in the tree .
the selected tree node .
sets the style of the button style button .
start the specified activity .
resume the specified { @link android . android . android . android . android . android . android . android . support . ( int ) } .

sets the value of the <code > calendar< / code > object that uses the specified map of interactions to the map .

returns the next { @link java . time . println } representing the first calendar of the given { @link calendar } .

returns a <code > java . util . date< / code > object that represents the given number of days in the specified locale . <p > this method is equivalent to calling { @link java . util . date . ( java . util . date ) } . <p > this method is equivalent to calling { @link java .
returns a timestamp for the given amount of time using the specified locale . <p > the resulting timestamp is immutable and unaffected by this method call .
create an java java java java java java java value ( a java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java java
formats the given date using the given format and locale .
returns the date string from the date string as well as the localized date format string .
get the string representation of the date string of the given string .
returns the date string of the date line .
a convenience method to check if the given date is a valid date . the result is a negative number of the date and the date to the new date .
initializes the search controls .
helper method to create a new { @link } .
convert ldap ldap ldap - entry to a map .
/ *
get the issues that are not permitted for the specified page .
get a pager of issues issue by this page .
get a pager of issues issue a project .
get a list of issues issue on the specified page .
get a pager of issues in the specified project .
get a list of all projects .
get a issue with a specified issue .
get a issue with a specific issue .
create a new issue in the project .
create a new issue in a project .

update the specified feature info in a project .
delete a single issue with the specified issue .
get a single 16 - time histogram .
get a single license data for the specified project .
reset the device s default time .
get statistics for the specified project .
get a list of merge requests for the specified merge request .
get a single merge request .
get a stream of merge requests for a single document .
create a default { @code } for the specified layer .
gets the builder for the specified layer .
add the specified feature to the layer .
register a { @link } to listen to events that signal a { @link } is not set .
register a { @link } to listen to events that signal a { @link } is pressed .
register a { @link } to listen to events that signal a { @link } is not set .
register a { @link } to listen to events that signal a user click handler is executed .
register a { @link } to listen to events that signal a change .
register a { @link } to listen to events that signal a node move dragging .
register a { @link } to listen to the update of progress events of the { @link } .
register a { @link } to listen to events of sub - geometries events .
register a { @link } to listen to the { @link } .
register a { @link } to listen to events that signal a new node has been changed .
{
remove this record from the geometry
set the state of the .
create a new site which is a subtype of the given smarthandle .
{
get the id of the path from the specified object .
get the group id of the path

urlencode encode string
execute a query reading against the given response .
performs post processing callback and execute the callback on the given object .
execute the given response body with the given response body .
performs post processing callback .
upload response file to a file .
performs a post call on the given object .
upload a file to the upload request .
adds a form parameter form to the form .
adds a form parameter form to a form .
validate the response .
handle exception handling .
get a query parameter from the page .
get query parameters
get a list of parameters specific to the user .
get the default page of a specific page .
get the version of the project .
sets the range of range [ start end start end start end start end start end start end start end start end
returns the number of items in the table .
puts a view to the view .
sets the layout of the layout . this layout is used for the panes .
{
returns the offset of this view .
<p > adds a new view to the layoutmanager . < / p >

updates the bidi view of the given basic number of digits .
issues a single issue to the gitlab api .
issues a project wiki status code for a project .
get a specific jid for a project .
{
update a specific role .
set a specific player .
get the specified services .
updates a single project .
get jira service service .
updates a single project .
updates a single project .
get a for a project .
get the search criterion .

initialise the default parser .
contenthandler method .
/ * ( non - javadoc )
compute the distance from the given geometry .
add a feature to the list of features that are contained in the feature .
sets whether the table is visible .
adds the shadow and panel .
returns a new list containing the elements of the given list .
creates a multilinestring from the given geometry .
get the child node at the given node .
dynamically applies a sorted set of keys to the right set of keys .
returns a set of keys in the two keys .
returns the object associated with the specified object .
{
set the logger .
gets the logger for the given class .
get a { @link } instance .
add a new interval to the queue .
add a rule to the list of snapping rule set
add a new edge by the specified coordinates .
create a new instance of the given type .
create a new { @link } which is safe to use .
creates a new { @link hashset } with the given elements .
creates a new { @link } for the given { @link map } .
creates a new { @link } that contains elements that are contained in { @code } .
returns a { @link } containing the given { @link } .
returns a { @link } which is a good - safe way to create a new { @link } .
returns a { @link } that is used to write a value to a { @link } .
returns a { @link } that iterates over the keys and keys in the supplied keys . the result is returned as a { @link } .
creates a new { @link entry } instance from the specified { @link java . util . function } .

creates a new for a segment .
create a scanner for a string that is a numeric range .
returns a {
creates a {
start a labeled rrule for the range [ start end ] .
creates a labeled sequence for the given date range .
create a { @link } that will perform a { @link } .
loads the configuration from the configuration file .

read a pem file .
create a new url for the specified link .
parse a date time string .
/ * ( non - javadoc )
read the data from the file and pass the srid to the database .
start the start of the end .
/ * ( non - javadoc )
parse a duration duration string .
<p > returns the duration units of the duration between two minutes . < / p >
returns the duration interval represented by the specified duration string .
set time zone timezone .
set the default time zone .
/ * [ deutsch ] <p > erzeugt ein halb - offenes intervall . < / p >
call this method to create a procedure call with the response
returns the previous interval for the given unit .
<p > returns the previous interval of the previous time interval . < / p >
converts the specified units to the unix time unit .
return the direct direct direct indirect and all direct dependencies .
get the set of all the dependencies that are registered with the given .
get the set of all dependencies in the given set of dependencies .
return the complete { @link } for the given dependencies .
inspect the given { @link } .
returns true if the current state is visible .
create a { @link } from a string
login to login
terminates the current { @code } .
performs the login token .
returns the decision node for the given .
creates a new { @code } instance containing the given { @code } .
creates a new { @code } instance containing the given { @code } .
{
returns the number of points contained in this polygon
get the area of the polygon .
returns the length of the polygon .
returns the distance between the vertexes and point rings .
checks if this is a valid .
returns the bounding box of this bounding box .
add the options to the command line .
returns the coordinates of the polygon associated with this coordinate .
get the position of the given event .
get target target from event .
creates a multilinestring from the given geometry .
gets target id from the target tag .
parse a locale string into a { @link locale } .




accessor method for name field name .
convenience method to get a method from the given class .

executes crud methods
performs the actual parsing of the given data point .
/ * extract data from the tokenizer from the metric
invokes the method on the given target object .
<p > enable the . < / p >
executes a command populating the results from the given { @code } .
executes a query against the given query .
collect statistics statistics .
prints out stats to the tsquery out of the cloud region .
print statistics statistics out of the current thread project .
méthode handled
collect statistics statistics .

prints stats for a query .
the default implementation is used to restore the { @link } .
create a style style for the given xcastedexpression .
{ @inheritdoc }
{
read the content of the input file .
fires a start tag

parse json string .
parse a json string from the json string
parse json string .
serialize a json object to a string .
serialize a json object to a byte array .
get json string .
get json response from json string .
returns an enum value with the given key .
returns the value of the given key from the given key .
export a table to the database
add a new legend to the legend .
normalize the geometry .
returns a geometry for a geometry .
extract map map from the given map .
export a table with a full name .
draw the given to the world .
helper method to set the clip rectangle .
returns a list of { @link } s that are prohibited by { @link } .
{
{
create a new uri template .
create a new uri with the given template .
adds a template to this template .
adds a template to this template .
check if the given parameter is a template .
get the names of variables .
create a new template instance from the given parameters .
create a new template expression
append a template variable to the given variable .
append a composite value to the builder .
read the next byte from the inputstream .
create a new { @link } from the given { @link object } .

get the builder for the given server .
add a button to this button .
add features to features .
display the selection of the button .
----------------------------------------------------------
sets the criterion to be used for the given criterion .
start the specified mock instances .
{
creates a model id from the entity id and the id .
finds all templates contained in the given tree .
validates the given { @link } .
parse the command line arguments .
flush the contents of the array to the output .
collects the stats and metrics tracked by this instance .
trigger the job .
store the job store
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
retrieve the calendar object corresponding to the given name .
{
/ * ( non - javadoc )
{
move the trigger to the trigger .
{
{
/ * ( non - javadoc )
returns the search type for the given type .
{
===========
runs the cancel action .
creates a tuple from the given { @link } .
{
insert json into db
this method is used to generate the js code from the given node .

parses the csv file and returns the nmea line .
extract the language from the given language .

{
returns true if the specified element is a key in the array .
/ * ( non - javadoc )
removes the element from the head of the queue .
returns a view of the mappings .
ensure that the array is not null .
{
/ * ( non - javadoc )
returns the first row of the first row .
returns the last value in the table .
get the next element from the next bit from the next occurrence .
checks if the specified element is not contained in the list .
add a new element to the list
add a range to the list of ranges .

remove the range from the head of the list .
returns true if the specified bitset contains the given set of bits
retains only the bits of the set of values .
removes all the set bits from the set of data sets
add a bitset to the set of points
returns the number of elements in the specified position .
returns an array containing the mappings of the specified array in the array .
resize the table .
sends a { @code response } to the given path .
get the status of the route .
post / post / post / post /
puts the given {
delete the given status from the given path .
parse a string from a string .
appends the given { @code value } to the given { @code value } .
adds this amount to the days . <p > this returns a temporal object of the same observable type as the specified temporal string . <p > this returns a temporal object of the same observable type as the specified temporal string . <p > this returns a temporal object of the same observable type as the specified temporal string . <p >
returns a temporal object that wraps the specified amount of two regex added to this period . <p > this returns the second changed values before the duration of this period subtracted . <p > this returns the second changed value . <p > this returns a temporal object of the same observable type as the result of the second { @code temporalamount
read bufr file

parses the compound .
create a new with the given name and length .
this method splits the training data to the .
add a to the list of

{
returns a new instance of .


creates and registers a new .
reads the current context token from the current context .
parse a function parameter .
returns a new scope that is the originator of the request .
returns a new { @link metric } that will be used to create a new { @link metric } .
get the value of the given attribute as a boolean .
remove attributes from the scope .
set the attributes of the attributes .
create a child scope that delegates to scope the scope of the scope .
returns the local tid reachable from the given service .
converts a string value to a string value . <p >
create a new { @link } comprised of a { @link } .
creates a new context with the given value .
returns the { @link span } of { @link span } s .
creates a new reader .
{
adds a { @link net . dv8tion . jda . core . entities . member member } to this builder .
{
ends the current state .
/ * ( non - javadoc )
{
{
{
{
{
get the security wcomponents from the parent .
checks if the connection is a connection
checks if the given key is present .
checks if the specified key is allowed .
checks if the message is allowed to send to the bugsnag bugsnag bugsnag .
{
{
{
clear the state of this connection .
writes a single byte to a byte array .
read a number of databuffer from a byte buffer
read a jump trace from the buffer .
reads a number from the end of the byte array .
encode a header header segment .
returns a 3 10 - 9 64 - bit unsigned integers from the specified tick .
sets the value of the given message as a message .
this benchmark attempts to measure performance of {
this benchmark attempts to measure performance of {
create a new instance of { @link } .
process the command line arguments .
returns the for the given name .

returns the declared class of the given class .
returns the constructor with the given parameter types .

returns the annotation of the given annotationclass .
<p > checks if the given class is assignable from the given class . < / p >
invokes the method on the given object .
asserts that the method is not declared .
asserts that the method has a parameter .
starts the server .
registers a server .

saves the current model to the output directory .
load the model .


classify a
classify a new instance of the given class .

gets the label label .
returns the label for the given instance .

<p > returns the number of times the first occurrence of the specified string in the specified string . < / p >

get features of the features in the form of the feature .

this method is called when the tree tree is selected .
/ * -----------------------------------------------------------------------------
{
selects the specified option from the select clause .
merges the values in the map .
returns the position of the value of the given encoding .
log a message at debug level .
apply the css style for the given document .
process the xml document for the textbox
process the image upload .
apply the styles of the document to the document .
extract the html for the from the .
get data for a node type .
this helps you transform the current builder to transform it to the builder .
returns a { @link } for the given data type .
parse the request .
transforms the current query to the root node .
this method returns the number of images available in the specified string .
get field from class .

check if the given name is a type member .
enforces a type of type {
get a kml instance of the given id
this method is used to embed an element from an xml document .
init
get the value of the field .
set the value of the property .
describes one or more of your aws account id to initiate a specific player .
this operation extracts the string xml document from the given xml document .

scan annotations on the class .
convert a string to a camelcase string .
this operation returns a synchronous ssh authentication . this operation is used for invoking the request . this method returns a specific instance of <code > / code > and passing the number of four parameters .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
get the parameter name of the given type .
/ * get configuration from env .
this method returns a string representing a description of the specified type .
add a new message to the list of added messages .
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
return the message from the message header .
this method is called to persist the cursor me .
/ * remove the message from the expiry stream .
reset the cursor to the outbound stream .
/ * ( non - javadoc )
/ * method to add a new message to the message header .
unlock all messages from the messagestore . <p >
unlock all the messages from the .

sets the page of { @link } to be executed .
marshall the given parameter object .
sets the for the .
sends a text message to chromevox .
sends the given mail to the sender . <p >
{
json string to json

write a json - ld json - ld map to a json object .
write value to json string .
exports a json file
exports a { @link } to a { @link codedoutputstream } .
create a new { @link resourcebundle } from the given { @link resource } .
parses a { @link jsonproperty } from a json object .
parse json string .
imports a { @link } from a jcr property name .
writes the json representation of the given {
writes the json json to a json map .
writes json to xml document .
writes the given json object to the given json object .
writes a json value to a json object .
writes a value with the given name and value .
get the string value of a given type .
sets the json representation of the jcr property mapping .
generates a value from the properties of the jcr node .
this method is used to create a cluster info from the datasource .
performs a match on the specified uri .
performs a single sign - based pattern for each pattern in the results .


/ * ( non - javadoc )
returns the corresponding match of the specified type that match the regular expression pattern .
returns the range of all the matching matching matches .
returns a set of ranges that are mapped to the specified { @code } .
get the type of the passed in query
get the uri of the query .
/ * ( non - javadoc )
return all the uris of this route .
reset the cache to be recreated .
set the value of the id property .
set the policy for the specified user .
sets the time limit .
get the value for the current time .
set the value of the property .
sets the expiration time .
call the remote mojo method .
handle a resource if it is not already a resource .
checks if the resource is valid or not .
returns whether this resource is valid . <p >
returns the property value for the given key .
returns the content of the resource or the content .
resolves a resource type to be used as a type and its children .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the id of the url .
returns the webdav resource handle matching the given pattern . returns <code > null< / code > if the search pattern is not found .
returns all children of the given type .
returns the children of a resource type or creates a new one .

check if the given string is a string .

returns the value of the value of the given value .
returns a new block representing the value of the given .
returns a new block representing the given .
returns a new instance that fires the given { @code } .

returns an operation that is the default behaviour of the { @link } .
executes the post processing .
returns the resource type type for the resource type .
get the text type of the mime type .
get the text of the markdown text .
/ * ( non - javadoc )

create a path from the path


check if the given string is a valid string .
parse the value of a property .
scan the scan .
creates a table for the current state of the current state .
set the search path .
sets the search type .
start the search .
creates a new storage .
deletes the storage .
create a move that triggers combining .
returns the {
returns the list of {
returns the metadata for the table .
scan the given table by reading the reader and return the result as a { @link } .
returns the set of all the records in the given table .
returns a split row with the given table .
marks the given { @link } to the table of the given { @link } .
returns the validation handler for the flex workplace validation . <p >
sets the mail settings . <p >
sets the notification project . <p >
extract a value from the target object .
this method is used to run the job .
update status from futures .
sends the given message to the queue .
sets the notification time . <p >
get all roles for the roles
returns an iterator for the roles given the user s roles .
returns the role for the specified principal .
creates a role from the given principal .
creates a new {
updates the role for the principal .
updates a role from the given .
deletes a role from the specified group .
retrieves the row for the specified key .
{
{

removes all items from the queue .
returns the value of the attribute .
split a text into a { @link document } .
create a new text from the given encoded string .
creates a writer for the given id .
creates a writer for the specified id .
adds a new to the .
attaches the given to the current state .
detach all of the objects .

{
checks whether this icalendar revision is valid and conforms to this document .
returns the raw key for the table .
returns a { @link } for the given executor .
get the { @link } for the given executor service .
get a { @link } from the given scheduledexecutorservice .
returns a { @link } which is a { @link completablefuture } .
the logging thread .
unwrap {

lock this .
lock the lock held by the current thread .
create delta or update the policies that are associated with the account .
start a new batch of nodes .
add a token range to the end of the collection .
/ * this method is used to convert a list of to a .
increment the count of the current thread to the persistent state .
unlock the semaphore .
check autocommit to the next available locked lattice .
decrements the lock held by this .
sends a client to the queue .
send all documents to the queue .
sends a to the queue .
unlocks the lock .
returns true if the two parameters are equal .
this method is called by a connection to the connection manager .
this method is called to ensure that the is not available .
this method frees the connection state from the pool .
returns a type of type outer type of a type . <p >
<p > parse a string . < / p >
parse the given string value .
split a string into a list of characters .
creates a new parameterized type applying the given type to the constructor .
this method will reset the connection to the connection .
increment the total number of fatal errors .
get the free connection pool information .

clean all the idle connections .
clean up all connections .
/ * this method is used to create a connection to the .

creates a new {


获取 { @link }
write the class to the given output stream .
this method initializes jdk
add a process to the process process .
get the list of all the spf flows for the current resource .
remove a flow from the resource
*********************************************************************** () this method is used to reset the internal state of a to a .
main method .

this method is used to parse the class from the input stream .
this method is called when the serializer is used .
populates the map map .
populate the type of the class .
{
merge package package name .
{
this method is used to parse a string value .

returns the character in the specified parameter string .
/ * ( non - javadoc )
process the xml document from the xml file .
this method is used to store the current { @link } from a { @link } .
this method is used to parse a parser parser from a { @link } .
fire the event to the listener .
unescape the content of the content of the string .
this method is used to load the block block block .
add a new to the list of blocks that have the same macro .
creates a block of block blocks .
creates a html block block block of block items that have been created by this .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new resource provider for the given classloader .

get the unit of time unit .
adds a new constraint to the solver .
add a new constraint .
add a constraint to the constraint .
/ * package private
replace the given declaration of the declaration .
generate error error message .
this method is used to retrieve the object for the specified object .
/ * ( non - javadoc )
{
sets the list of attributes .
extract the names of the scopes from scope .
set the parameters of the client .
perform the action on the specified class .
get the full token for the current user .
get the context of the current context .


documentation

----------
notifies the ondismisslistener of a dialog .
notifies the occupant that you should call this method to show the dialog .
called when the divider is pressed
cleans all the tasks that have been marked as .
start the activity .
encode a string to a url .
returns the cookie value for the specified string .
returns the cookie value for the specified string . if the cookie is not present or is null then the string is returned .

get the string value of the .
initialize the .
handle the modules .
initialize the current thread .
create a tool bar .
gen - last :
starts the applet .
this method is used to flow flow flow by calling () method .
returns the tail of the array .
get the value of the waypoint parameter .
returns the month of the month .

<p > performs a date - time line with the specified locale . < / p >
this method is used to retrieve a date from a date / time string . <p >
create the role for the given application .
removes a role mapping from the given .
this method is called to compile the visitor to be used for the class .
removes a propertychangelistener from the given {
loads the contents of the specified location from the specified location .
{
{
check if the minutes is a valid day

returns true if the user has the permission to check if the user has been granted to the user .
print a throwable to a string .


returns the text that was forwarded to the specified intent .
returns a text string describing the text of the textview .
returns a text value for the specified text .
sets the action callback to respond to the user .
sets the text action listener .
returns a text string describing the text of the text .
returns a color object which contains the color text and color .
returns the typeface of the typeface .
display the size of text
sets the adapter to use for the adapter .
sets the image to be used for the user .
set the drawable to be used for the drawable .
sets the imageview to be used for the image .
set the tag .
hides the given { @link } .
checks if the checkbox is a valid {
returns the current view of the view .
returns the first occurrence of the specified visibility of the specified view .
set the background drawable of the background drawable
sets the background color of the device .
get the data value from the current view .
returns the tag .
set the view s view .
set the screen key .
get the ballot item at the given item and return it .
search for the item by the supplied { @link view } .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / b > < / p >
sets the selected position .
clear the { @link imageview }
set the margins for the specified highlight / zoom level .
animate the animation to the animation .
animate the animation to the animation .


renders html text to html .
crop the current gesture .
detach from the specified rectangle .
returns the typeface of the specified component .
get typeface from the given name
{
returns the bitmap to display in pixels
sets the animation to be displayed in the activity .
sets the animation to be displayed in the activity .

this method is called by the {
{
{
returns the descendant of the given set of keys .
{
this method is used to retrieve the value of the property .
creates a new quaternion with the same type as the first one .
creates a new which is used to create a new formula that is the summation of the given factory .
creates a new builder with the given { @code } .
creates a new instance with the given { @link } .
creates a new card with the given formula .
creates a new instance of { @link } that will be used as a formula to the solver .
generates a clause for the solver
generates a clause for a clause .
creates a assignment from the solver .
saves the mapping to the jsongenerator .
saves the mapping to the mapping of the mapping to the mappers .
dump out the file name to the file sans log .
returns the url of the url .

encode the given string into a string .

clones this struct with the same column .
get the full query id of this filter .
get the secondary workitems ( stories ) of this filter .
get the current { @link } instance .
get the issues of ids that are contained in this { @link filter } .
get the full web request for this filter .
epics that the concept of this epic is a descendant of this filter .
get the total number of the model for this filter .
get the total number of tasks that are currently in this filter .
get the total set of tasks that are filtered by the given filter .
create a conversation .
returns the declarations for the given rule name .
returns the predicates of the given residue interspersed with given maximum number of predicates .
returns the inverse of this equation .
normalize the rhs of the rhs .
returns the number of assignments for this assignment .
evaluate the given { @link } .
creates a new instance from the given { @link } .
get a collection of affected trigger .
create a new instance of the settings object .
returns a new instance of the bundle .
returns a new {
get the sum of the two sheets .
returns the relation type of the given entity .
returns the relation type of the given entity .
returns a collection of entities that are not contained in the given name .
returns a collection of entities that are contained in the given slice .
save the xml data to this <code > / code > .
returns the list of booleans for the specified class .
sets the list of attribute values for the given attribute .
returns the list of objects values for the specified class .
get a list of values for the given class .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
removes the widget from the widget . <p >
adds a clause to the solver .
add a clause to the solver .
adds a submatrix clause to the solver .
adds a constraint to the solver .
adds the given constraints to the solver .
update the status of the specified .
update the current plan .
returns a union of the union of the sat solver - level solver .
set the progress of this progress bar .
set the progress of the progress bar to be used .
set the {
cancel the task .
update the dialog s message .
configure the plugin .
add a work item to the queue .
get xids for the transaction .
method .
/ * ( non - javadoc )
returns the transaction id of the transaction .
/ * ( non - javadoc )
returns true if the state is a alive connection .
called when the start of the record is completed . <p > across the and the is done .
ends the work that belongs to the current transaction . <p >
<p > prepare the transaction associated with this xaresource instance . the xid structure is used to indicate that the xid is localised on the resource manager . <p > across the wire we are the of the transaction . <p > across the wire we will flow id and return the xid structure . <p > across the wire we will
this method is called by the transaction to work with the transaction rollback . <p >
<p > rollback the transaction to complete the transaction rollback . <p > across the transaction rollback invalidates the transaction id and the transaction id . <p > across the transaction this method will resume the transaction associated with this transaction . <p > across the transaction rollback invalidates the transaction id and the transaction id . <p > across the transaction this
/ * ( non - javadoc )
get the type of the current rrs type .
checks if the current state is a
suspend the current uow and suspend the internal state .
cancels the current { @link } .
add a term to the end of the list .
creates a new parser from the given input stream .
creates a new parser for reading from the given input stream .
creates a new parser instance from the specified json string .
creates a new parser for reading .
sets the source source reader to be used for reading .
get the event type for the current state .
discards the next token .
{
returns the string value of this field .
returns the value of the <code > long< / code > value of this <code > long< / code > .
gets the value of the double value .
returns the boolean value of this property .
returns the encoded image s payload .
returns the image for this upload image .
retrieves the producer s information from the image .
gets the producer image for the image .
submits the image to the image .
returns the cropped
returns the background image for the given .
returns the cached data for the .
returns the background for the current invocation .
returns the file size of the image .
returns the for the .
fetch the from the cache
/ * ( non - javadoc )
returns the for the .
gets the fetch for the asset .
returns the data prepared for the image data .
returns the cached jpg for the given .
returns the cached jpg for the image .
helper method to get the cached for the .
creates a new cached object .
returns a new { @link } instance for the image cache .
creates a new { @link } for the given { @link } .
returns the for the image .
returns the image for the image .
------------------------------------------------------------------------
sets the source directory to be used for the given directory .
set the output directory .
scans the files in the given directory .
returns the target files in the given directory .
returns the value of the given property as a string .

<p > . < / p >

update the value of the type .
update the value of the given key in the given key .
update the value of the given key in this map .
removes the mapping from the specified key .
binds the given view to the view hook .
check if the current file is a persistent version .
get the path of the path for the given resource path
create a directory with the given <code > / code > and <code > / code > .
get the summary of the file info .
start the current frame .
stop the animation .
set the map of animations for this animation .
sets the frame of the frame .
get the duration of the animation
/ * ( non - javadoc )
returns the image for the thumbnail of the given thumbnail .
returns the kind of thumbnail image .

returns true if the next is a compass dip .
get the display size .
generates a parameter whose name is the result of the javascript function .


log a message to the end of the line .
process the message processor for the given message .
process the given tag name .
sets the list of bitmap that are animations with the same payload as the data array .
builds the {
put the value with the specified key .
put the value of the key to the given value .
put the value in the given key .
put the value in the given key .
put the value at the given key .
put the value at the given key .
put the value in the given key .
{
put metrics to streamed by client
resolves the given { @link } .



saves the current script .
remove the tab from the database .
================
parse a json string .
checks if the object is null or contains null or null if not found .
checks if the given file is a file or not .
returns the innermost char enclosing the given object .
compares two objects according to the given object .

<p > . < / p >
{
copies the bitmap to dest bitmap .
method to generate a new {
close the connection .
append a byte array to the end of the byte array .
puts the value into the cache .
removes the entry associated with the specified key from the cache .
get the value of the given key from the cache .
{
sets the text of this menu .
return the value of this property .
returns the hash for the given key in the hash table .
set the css style for this taglet .
set the size of the particle .

/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the next nanosecond of the specified random uniformly distributed random { @code long } .
returns true if the two collections are equal .
loads a keystore from the file .
add a new maximum maximum min max value of the first occurrence of the first occurrence of a character .
add a character to the trie .
encodes the given string into a string . the string is encoded in base64 format .
decodes a single byte array .
/ * ( non - javadoc )
/ *
returns the name of the id .
/ * ( non - javadoc )
update the payment state of the payment .
create the payment .
create a payment .
returns the {
sends a message to the server . the message is created by the client .
send a message to the client .
sends the entire message to the message .
inform the message that the mfp mfp is invoked .
send data to this connection .
called when the connection is closed .
update the lowest priority of the .
/ * ------------------------------------------------------------
sets the image request .
sets the { @link } of the specified { @link } .
sets the current image to be used for the given resource id .
{
returns an immutable map of elements in the list

handles the minimization step to the given { @code multimap } .
find the annotated class annotated with annotationclass
get the enclosing element type .
composes learning layers based on the layers and layers .
load the specified collection of the specified collection .
load the collection of ids from the given collection .
load the row from the list of rows that are not in the same row .
get the version of the file version .
find the version of the file .
move the current element to the next element .
move the current element to the next sibling .
returns the qualified name of the {

/ * ( non - javadoc )
start the worker .
starts the timer .
cancels the task .
{
add a concept to the list of supported notes .
checks if the annotation class is annotated with annotationclass
returns an {
returns a predicate that returns a translatable class that contains the modifier that the given modifier is a static element .
returns a predicate that returns true if the given modifier is not present .
returns the {
returns a set of all methods that are declared in the given type .
returns true if the given { @link } is annotated with the given { @link class } .
create the method release the class name .
get the pages of the page splits .
get the page for the page
returns a iterator that iterates over the given resource page .
visiblefortesting
visiblefortesting
visiblefortesting
set the value of the given text as a string .
get the metadata type for the specified type .
create a metadata for the given type .
checks if the given { @code type } is annotated with the given type .
creates entity metadata schema .
create a relation type from the given { @code } .
returns the metadata of all classes in the given type .
get the indexed property metadata for a given type .
returns the metadata of the metadata of the given type .
create a method metadata for the given parameters .
returns the { @link } for the given { @link annotatedelement } .
-------------------------------------------------------------
get metadata from metadata
{
remove file from the file .
collect paths from the graph .
sets the directory to the cache .
{
remove a persistent cache from cache .
-----------------------------------------------------
{
creates a new instance of the given type .
get a new instance of the object .
creates a new instance of the specified type .
validate that the type is a dynamic type .
{
{
{

returns a new list of the given values .
returns a new {
called by the osgi callback when the app is complete .
/ *
/ *

parse the string representation of the form { key1 = value1 key2 = value2 }
checks if the resource is a resource path or not .
retrieve binary data from the input stream .
returns the content type of the resource .
sends the response to the response .
start this connection to the user .
send a signal to the server .
get the singleton instance of the class .
registers the specified agent in the specified agent .
/ *
/ * ( non - javadoc )
return the current scope of the current thread .
this method is called by the to find the recovery state of the recovery log .
registers a new shutdown mode by the given failurescope .
add a to the recovery log .
remove the recovery recovery record from the recovery record .
scan the scan cursor .
this method is called when the recovery process is called .
/ *
add a recovery log record to the recovery log .
handles a recovery log record from the recovery record .
this method is called to process a recovery log record .
called when the recovery log is completed .
/ *
add a call to the .
/ * helper method to add an to the list of
/ * ( non - javadoc )
/ *
/ *
/ *
initialize the
reset the camera stump .
creates a new { @link } instance that will create a new { @link } .
creates a new { @link } that will be used to create a new { @link } .
create a new { @link } that will create a new pool with the same type as the pool .
executes the given executor .
executes the given pipeline .
executes a connection over the given partition .
checks if the is a document
{
add a new item to the given list item .
checks if the current thread is active .
<p > . < / p >
called by the objectmanager to perform the suspend operation .
converts the specified bounding into a { @link } .
converts the alignment to a object .
calculates the amount of delta rows .
concatenate two paths .
combine two trees .
moves the data from this sequence to a sequence of integers .
extract the relative path from the ranges .
estimates the relative part of the range of two ranges .
extract the absolute absolute values from the given ranges .
this method is used to extract a relative protein range from the given range .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
this method is called when the menu is changed .
popup called to reset the value of the popup to the system clock time .
popup the date to be displayed .
popup called by the ui thread .
set the date to the date .
set the text to use for this date .
set the datetime to be used to perform the given date time .
remove ranges from the ranges .
remove the ranges from the ranges .
removes from the given array from the given range from the given array and the given distances .
returns the matrix inverse of the alignment matrix .
returns a range of { @code } inclusive .
creates the list of parameters for this { @code list } .
print the string representation of the stack trace to the given print stack trace .
extract the content of the given uri from the given uri .
get a list of the given file with the given file name .
extract the first parameter from the list of files .
finds the annotation of the annotation of the given type .
returns { @code true } if the given { @code target } is { @code target } .
create a { @link node } of xpath expression .
parse a xml document from an xml document .
converts dom node into a list of elements .
returns the attribute map .
parse the xml document and return the dom .
parse xml schema and xml declaration .
print the document tree .
{
sets the maximum maximum allowed maximum size .
creates a new {
creates a new {
creates a new {
returns unmodifiable view of the specified list .
returns unmodifiable unmodifiable view of the specified collection .

process bean .
collects all beans of the given bean .
this method is called when the user is not a new object .
creates a proxy chain with the specified { @code classloader } .
add an interface to the given { @link class } .
method to load the provider info from the

{


/ *
splits a string into a list of strings .
replaces the search string to search for the search string .




returns the default string for the given string .

joins the string list of strings with the given strings .
joins a string with a delimiter .
convert a string to upper case .
convert a string to a camel case string .
checks if the given string is a quoted string .
check if the value is a string .
check if the given string is a string .
returns the for the specified { @link } .

{
factory method
adds the given data to the list
removes the given data from the list .
/ * ( non - javadoc )
visit a class .
returns true if the class is a valid document class .
tells whether or not the given method is a schemata or a variant method .
this method is called to collect the interval to the intervals that the interval is split to the other .
check if the given is valid for the given .
updates the metadata and publish them to the given destination .
returns { @code true } if the given { @code string } contains the given { @code string } .
check if the given label is empty .
append a label to a label .
generate a label for a given locale .
build a label label for a given label .
build a label label for a given label .
add a label to a label
runs the command .
adds a label to the list of labels .
get the label label for the first occurrence of the given label .
returns the best match match for the given label .
returns the first multilanguagetext of the { @code } s for the given label .
returns the label for the specified locale .
return the label of the given <code > string< / code > as <code > null< / code > if no language matches .
returns a list of locale names for the given locale .
returns the list of labels for the specified language code .
replaces the given label with the given label .
append a {

returns a optional {
generate a file .
returns the version of the file .
gets the configuration for the specified user .
get the configuration of the current user pool .
get the path of the current operating path .

returns the { @link } of the given { @link } .
get the path of the .
returns the app engine instance for the given resource .
returns the validator factory associated with the pmi instance .
returns the proxy object associated with this object .
returns the instance of the specified { @link } .
creates a new instance of the target class that supports the given proxy .
parse config values from config .
get this object properties
get this object properties
create a new domain
get this object properties
add a new version
get this object properties
alter this object properties
list all domains associated with this ip .
alter this object properties
get this object properties
解析反馈内容

sets the file size of the file .
add a new metadata to the data set .
sets the metadata of the data set to be used .
start the osgi service .
adds a bundle to the bundle .
{
resolves the class with the given classname .
get the resources that are currently in the resource bundle .
执行http post请求。
执行http post请求。
执行http post请求。
执行http

executes the given callable .
initialize the default value for the keystore .
/ *
checks if the property name is present .
checks if the current configuration is a valid .
load the properties from the specified url .
/ *

set the property value of the property .
activates the view with the given view and the view .
check if a field is a string .

returns next {
returns the current {
returns the next {
add a tag to the list of tags .
sets the value of the given property .
remove a property from the map .
sets the properties to be used .
returns the property value for the given key .
returns true if the specified key exists .
returns <tt > true< / tt > if this map contains at least one item .
returns the set of mappings in the map .
returns the item at the specified key .
returns the entry for the key .
returns the cached {
put the value in the cache .
initializes the resource manager .
puts the specified map into the specified map .
put the value in the cache if it does not already exist .
bulk operation .
remove the value from the specified key .
replaces the value with the given key from the previous value .
replaces the value with the given key with the given key .
writes the given list of booleans to the given list .

get the deployment manager for a given user .
/ * ( non - javadoc )
returns the product version of the resource .
checks if the given resource is a publicly accessible
update resources for the given esa version .
find the shard shards the partitions to be garbage collected .
find all the shards in the given { @code list } .
check if the ip address is available .
create a new {
match the given index against the metadata rule .
partition the partition partition in diff .
/ * ( non - javadoc )
initializes the { @link repository } instance .
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is used to retrieve the browser for the conversation message .
adds the values in the map to the specified map .
set the value of the type parameter with the value of the type
set the value of the { @code value } parameter .
setup the benchmark .
set the value of the value from the direction
sets the value of { @code value } to { @code k } { @code value } .
updates the type of the udf .
submits a task to the cache .
prepare the cache of the image .
stop the executor .
sets the value of the suggestion .
set the position of the position of the column in the buffer .
set the value of the value with the value of the value .


checks if the request is a .
checks whether the given key is mapped or not .
get name from index .
get the value of the field at the given position .
remove the element from the hashmap .
get the return value of the object .
update the array of values .
update the data in the input parameter .
get the values of the matrix .


handle the throwable of the given throwable .
/ *
finds the given class name .
finds the given method that matches the given parameter type .
determine if the given object is a .
returns the method for the given type .

check whether the given { @code address } is an { @link } .
read a from the given stream .
writes the document to the document .
writes a document to the stream .
creates a { @link } for the given { @link } .
initializes this node with the given node .
checks if the string is a error error code .

returns the minimum value of the two { @code num } value in the range [ min > - 1 ] .
/ * ( non - javadoc )
{
remove a new operation .
check if the given operation is marked as a taxonomy .
get the value of the given operation .
renders the view to be rendered .
returns true if this view is a list of child view .
sets the view to this view .
extract the response from the response .
creates a response from the current httpservletresponse .
return a number of items in the queue .
sets the minimum and maximum value for the interval .
serialize the data to a byte array .
this method will attempt to read the ra object .
deserializes the from the given byte [] .
extract the entire contents of the classpath
creates a log file for the given log file .
write a record to the stream .
write a record to the stream .

releases the lock file .
creates a new format used for formatting or invocations of the given type .

process the database name .
writes the given to the output stream .
{
get command line .
{
register the given index to the given index .
search the given attribute .
called when a connection is made .
sends a message to the request .
this method is called by the to send a to the matchspace .
sends the specified request to the server .
called when the connection is closed .
called by the session to do the handshaking .
sends a message to the response .
/ * ( non - javadoc )
set the session id to be used for the session id .
called when the session is released .
this method is called to call the next message to be sent to the me .
flushes the data from the sas7bdat file to the table .
sets the list of items to the end of the array .
compacts a single array with the given keys .








解密
calculate the size of the maximum size of the given { @code } .
process a tar archive .
process a archive archive .
get license string for the given jar file
{
create a { @link } for the migration service .
checks whether the container is a crnk container or not .
add the passed date to the collection .
adds the specified column to the bucket at the specified index .

creates a new { @link } from the given event and decreasing sequence .
compares two membership classes

write the current
returns the byte array as a byte array .
get the value of the specified serialization .
shallow copy of the mutable copy of this instance .

add custom custom value to the map .
get the custom { @link } for the given key .
load the specified stream from the given root node .
load the specified class using the specified name .
loads the specified yaml using the specified namespace . this method does not load the value from the specified root node .
sets the content of this result .
add a metadata to the metadata .
returns basic authentication encoding from the given username and username .
/ * ( non - javadoc )
checks if the package is a package or not .
get the url for the given base type .
convert the url to a url .
sets a property to a property .
add a new transaction id to the given transaction id . <p >
open the image .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the cached value for the specified key in the cache .
convert the string to a list of strings .
adds the given selection expression to the list .
selects the first item from the select method .
calculate the date of the given variable .
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieve the list of inbox objects meeting the classifications
/ * ( non - javadoc )
/ * ( non - javadoc )
dispatch event to
returns plugin class class for the given plugin class .
registers the given plugin to the specified plugin .
sets the { @link } to use for the given amount of time .
初始化<br >
returns the { @link } for the specified { @code } .
merge the specified { @link } into a { @link } .

returns the for the given { @link config } .
/ * ( non - javadoc )
sets the percentage of the percentage of the percentage of the percentage of the percentage of the percentage of the percentage of the percentage of the percentage of the percentage of the percentage of the percentage of the percentage of the percentage of the percentage of the percentage of the percentage of the percentage of the percentage of the percentage of the percentage
add the config config to the list of cache config
sets the queries to use for the query .
sets the values .
create a connection factory that creates a connection factory that represents the connection factory .
create a new connection connection to the connection .
returns a connection with the given name and arguments .
/ * get the connection from the subject


returns a set of connections that are not already in the pool .
returns the cumulative root for the given object .
returns a new connection connection to the given connection .
this method is called when a new connection is created .
handle post -
/ * set the default log stream .
set the log stream for the current nail .
returns the log writer for the current resource .
returns the timeout in the current jdbc driver .
returns a cached { @link dataset } for the specified cache .
{
returns the name of the cached prefix for the cache .
generate the xml representation of the sarl library .
{
check if the master node is a partition node .
sets the initial state for the partition .
removes the members of the cluster .
returns the full copy of the partition .
updates the partition and updates the partition .
convert a short to a byte array .
convert an array of bytes to a short .

convert an array of bytes to a byte array .
convert the given long array to the byte buffer starting at the given index .
convert the buffer to bytes .
convert an integer to a byte array .
convert a byte array to a byte array .
returns the given <code > string< / code > as a <code > / code > .
convert the value to the specified byte [] .
convert the given bigdecimal to the given byte buffer array .
convert a byte array to a bigdecimal .
convert a string to a string .
compares two byte arrays .
this method is used to generate the for the given range .
sets the indices of the .
returns true if the given { @link } is vetoed or not .
this method will block until the first section is connected .
returns the label at the given index .

calculates the maximum number of examples that are .
allocates a new class in the specified class .
sets the property name . if the property is not set it will be ignored .
returns a set of granted excludes configurations .
sets the permissions of the specified {
/ * ( non - javadoc )
/ * ( non - javadoc )
remove the entity from db .
returns all entities of the specified entity .
gets the list of the given singular values for the given attribute .
returns the value from the database .
returns the unique value for the database .




returns the address of the specified address .
returns a { @code } of { @code count } and { @code count } values .
{
/ * -------------------------------------------------------------------------------
get the concept
check if the given value is not null

recursively collects all the sources from the given directory .
corrects the taglet for the given directory .
remove all the dirs from the directory .
removes the given { @link } from the given parent .

returns the list of methods that are declared on the given interface .
creates a new supplier for the given { @link supplier } .
creates a new executionresult from the current execution sequence and returns the result .
handle a failure .
registers a {

add a {
returns the result of the given { @code predicate } .
this method is used to check whether the predicate is a 404 result of the result set .
check if the failure result is a failure .
checks if the failure failure is a failure if the failure is not a failure .
returns a bipredicate that is equivalent to {
returns a bipredicate that matches the given predicate .
returns a bipredicate that satisfies the given predicate .
returns a bipredicate that is equivalent to the given { @code bipredicate } .
initializes the { @link net . dv8tion . jda . core . entities . guild . properties } object .
check if string is valid
{ @inheritdoc }
set the type of the proxy type .
set the host name of this host name .
sets the port to use .
returns true if the user has been denied .
sets the authentication authentication .
checks if the target target type is present .
{
gets the class class of the given class .
/ * ( non - javadoc )
{
add a rule to the list of rules that are currently in the chain .
creates a new { @link } that will be used to create the { @link } .
asserts that two objects are equal .
asserts that two objects are equal .
asserts that two values are equal . the expected value is not null .
asserts that the given expected value is equal to the expected value .
asserts that two arrays are equal .
asserts that the given array is not equal to the given array .
/ * ( non - javadoc )
asserts that two floats are equal .
asserts that two floats are equal .
asserts that the given expected value is equal to the expected value .
assert that the given object is not null .
asserts that two objects are equal .
asserts that the given expected message is not equal to the expected one .
asserts that two arrays are equal .
fails if the matcher is not null .
throws an exception if the exception is not null .
invokes the { @link } method to determine the expected exception if it is not a valid { @link } .
set the parameter value .
set the parameter value .
encode the given value .
encode json string to json string
builds the url to the url .
reset the request .
<p > return the locale for the specified locale . < / p >
create a with the given name .
create a with the given name and parameters
create a ntlm syslog description of the given {
create a new { @link suites } with annotations { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link
creates a new { @link statement } for executing the following steps : <ol > <li > the { @link } or { @link } is not { @linkplain () } or { @link } { @link } { @link } { @link } { @link } { @link } { @link }
this method will return a certificate chain of the specified name .
returns a new with the given parameters .
creates a new { @link } for the given certificate .
enable tls


creates a new {
returns a new instance of this builder class .
transform a { @link } into a { @link typeinformation } .
filter the { @link predicate } that satisfy the given predicate .
add the { @link publisher } to the { @link } .
asynchronously publish a { @link flowable } to this { @link flowable } .
writes the given output stream to the stream .
reads the contents of this object from the input stream .
create a proxy for a proxy class from a proxy class .
convert a to
find a field in the class hierarchy
invokes the method .
write a field to the stream .
read a read from the input stream .
update the character at the end of the data set .
checks if the method is annotated with the given method .
execute the given directory .
returns the user .
get the account info .
get the client config from the server .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )

/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
create a to be used for the connection
create a new topic factory .
create a new
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
set the authenticator to be used .

returns an {

handles the { @link }
register the given { @link } annotation .

<p > returns the value of the <code > string< / code > value of the <code > string< / code > value of the <code > string< / code > value . < / p >
serializes the given object to the given object .
convert a date to a date




serialize a given pkcs#8 key into a byte array .
deserializes the given { @code file } from the given file .
/ *
open a connection to the given connection .
this method is used to close the connection to the connection .

{

/ *
add a defintion to the schema .
generate the schema for the given schema
remove the principal from the cluster .
returns the next token from the current token . if the next token is not a { @link } then this method returns the next value .
advances the token to the next token .
{
adapts a list of to
adapts a ticker object to a ticker object
send a payload to rox
sends the request to a chunked request .
handles the delivery of the delivery payload .
read the next read / write requests .
returns the children of the given file .

ds method to activate this component .
/ * this method is called when the osgi framework is deactivated .



{
<p > . < / p >
/ *
add the default validators to be injected .
resolves a validator validator validator which is a validator that is defined by the authz value .
checks if the value of the given value is a valid kid state .
write the to the stream .

calculates the length of the total number of blocks in the mpeg frame .

{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
{
{
{
/ * ( non - javadoc )
{
check if the string is a valid version of the string .
check if the item is open or not .
select a list of image from the visearch image .
sets the default selected image .
sets the image for the image .
sets the size of the box .
/ *
<p > rollback . < / p >
commits the xaresource object onto the current transaction .
rollback the xaresource .
/ *
parse the message .
get the class of the given class .
{
{
{
/ * public () { ( key password ) { return ( ) ; }
set keystore to store password
returns the name of the given item name .
creates a list of requests .
updates the resource type resource .
update the metadata of the list
updates the version of the version .
build the keystore for the keystore .
{
build a new .
get the results of a sql decision .
set the address to be used .
sets the maximum acceptable message size .
/ * ( non - javadoc )
创建一个过滤器
add a field to the list of fields
/ * ( non - javadoc )
process the value of the variable .
creates a new { @link } instance .
builds the target target target target url .
builds the target target target target .
builds the .
builds the target target target target target
find the attribute for the given attribute .

register the .
declarative services method for deactivating this component .
/ * f743 -
unregister the monitor by removing the registered listener .
<p > . < / p >
add listeners to the listener manager .
remove a listener from the list of listeners .
introspects the { @link } instance to be injected .
remove all registered {
called by the { @link } to find the { @link } for the given class .
add a new { @link } to the list of listeners registered to the given class .
remove a listener from the class .
returns a set of listeners for the given class .
process the given trunk .

print the number of examples to be printed .
get the filename of the script file .
get the content of the file .
returns the probe for the given key .
create a probe from the .
add listener to probe list of probe listener .
add a new listener to the probe list .
remove a previously registered listener .
generate a string for the given args .
/ * ( non - javadoc )
extract the form form of a .
generate a string for the given args .
generate a string for the given string .
add a listener to be added to the list of inflight queues .
remove all registered .
checks if the class is a qualified class name .
checks if the given class is a full detached or not .
fire a probe event .
get the icon of the column .
read the bytes from the underlying file .
writes the contents of the file to the file .
/ * ( non - javadoc )
open the channel .
{
check if the file is a valid ssl server .
check if the given is a valid pdb chunk .

get the version of the plugin .
find the codebase for the requested node .
initialize the .
gets the relative path from the given file .
this method is used to display the current statistics and the metrics .
{
download the web - app to the pdf .

create an input stream for reading the content of the given stream .
creates new object target object .
{
handle the event filter .
sort the sort order .
sort the list of { @link sort } objects for the given sort order .
infer the order of the order of the given sort order .
gets the previous node that matches the node .
returns the next value in the tree .
returns the root node of the tree .
/ * ( non - javadoc )
{
search nearest neighbors for the first occurence of the specified search search .
remove the minimum and maximum values .
remove the minimum from the list of nodes .
remove the max - node from the left list of nodes .
remove a node from the tree .
remove the key from the tree .
create a jmx object name for the given type name .
returns the parser for the given file extension .
get the parser for the given extension .

returns the for the given mime type .

returns the minimum value of the specified node .
creates a mbean object name .
creates a new objectname for the server name .
creates a object for the server name
create a new for the mbean
creates a resource object for the given resource type name .
/ * ( non - javadoc )

executes the script as an instruction .
read the contents of the toplevel znode .
start the stream .
end the end of the current state .
start the block
create a write to a given point
end the end of the current reader
add a to the queue
this method is called when the is written to the queue .
notify the of the message received notify the message .
get the message from the session id .
get the batch of messages from the queue .
returns true if the queue is empty .
unlock all of the async transactions .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the smoothing of the given vector .
normalize this vector to a normalized vector of the vector .
/ * --------------------------------------------------------------
{
this method is called when the activity is called .
resume events for the given event .
process the message body .
resume the given event .
this method is used to display a new event
init the file .
copies the contents of the stream to the output stream .
copies the contents of the input stream to the writer .
copy input to a set of files .
remove the given record from the head of this record .
write the next short value to the file .
set the title of the snackbar .
set the album type .
set the artist number of artist to display
set the comment .
sets the current .
set the year field of the year .
set the track pin for the track .
set the name of the .
sets the current text area .
set the copyright information for this tag .
{
set the text of the user to the user .
find the template that matches the given name .
return the task id of the task .
build a freemarker template dependency from the given version .
set the encoded value of the .
set the text of the frame in the frame .
set the data for the data
returns the time for the current versioncode in the current window .
get the current time string .
get the artist base picture .
get the album album art .
get the comment comment for the comment .
get the string for the given type .
get the title of the title .
{
get the track id for the track .
get the year field from the year .
get the data data frame data string .
get the file name of the file .
get the short description for the artist title .
dataoutputstream
check if the element is not a namespace .
sends the message to the remote peer .
this method is used to retrieve the { @link } from the .
create bindings for variables that are not part of the variable .
creates a new instance of { @link } .
create a new instance of { @link } .
creates a new instance of { @link } .
detach a child view from the view .
cancels the state of this { @link } .
press the cursor to the screen .
this method is called when a touch view is scrolled .
<p > removes the from the end of the list . < / p >
moves the board leaving the given item to the list of cascading actions .
transform the value to the given value .
this method is called when the panning is visible .
called when the animation is pressed .
tries to find a view from the current view .
check if the child is inside the viewpager .
check if the given window is a valid region .
check if the given window is a valid orientation ( p ( ) is not beeing or not .
check whether this edge is a vertex .
returns true if the view is visible .
returns the top child of the child view .
creates an instance of { @link } .
converts a { @link } to { @link } .
create a new query query dsl for the given query .
creates an association for the association of the specified source .
<p > . < / p >
inject the given object instance into the registry .
get the system property
/ * ( non - javadoc )
}
{
initialize the .
{
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
check if the given path is valid .
checks if the current resource is a file or not .
part2
start the .
reads a sample from a file .
/ * ( non - javadoc )
{
{

{
this method is used to generate the viewid / ajax / baseurl of the given viewid .
{
removes the mapping from the key from the map .








returns a map of the node - elements from the node .
create a new conversation with the given name .
initialises the
activate a scope . this method is called by the parent interface to find scope members of the parent scope .
send the child of this to the context
returns true if this node is a coupon or a tree node .
this method is the same as the () method
shows the version info .
updates the properties of the affected data source and updates the new values .
------------------------------------------------------ factory methods ------------------------------------------------------
read the data from the given vault .
update the values of the specified { @code identity } provider .
maps a mapping to a map keyed by their key preference .
------------------------------------------------------ tweets
creates a new .
creates a new .
remove a name from the database .
gets the entity activator from the request .
validate the given and adds them to the list of errors .
get the name of the .
{
returns the message from the file name .
add a file to the file .
read a message from the input stream .
write a message to the given file .
write a file to the file .
write messages to the given output stream .
parse a file msg from a stream
parse a { @link closeableiterator } from an { @link inputstream } and pass the {
create a new predicate that supports given value and if the value is not a { @code predicate } then the value is returned .
returns a predicate that returns true if the given class is already present .
returns a predicate that returns true if the given exception is a descendant of the class .
--------------
checks if the current version is a modified version .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
loads the entity from the database .
this method is used to get a single page of entities .
returns the contents of the given long bytes .
reads the byte array from the byte array starting at pos .
checks the given efaps database .
deletes the given project collection from the given project .
calculates the hash of the input bytes .
/ * ( non - javadoc )
find lines from the given .
configure the logging logger for the given { @link } .
decode the password .
encodes the given string to the base64 encoded string .
encodes the given string into base64 string .
encode the json string to a json string .
encode the password .
returns the { @code } for the given password .
returns the string representation of the password .
check if the algorithm is a valid mp4 string .
check whether the jce represented by the credentials string is a hashed password .
decode the password .

remove a string from the input string .
converts a string to a string .
converts a byte array to a string .
convert a string to a byte array .
converts the given byte array to a string .
decrypt password .
encode the password into a password .
calculate the list of job topologies .
sparse matrix with a row = decomposition .
collects all module dependencies from the module .
finds the element with the specified key .
this method is called to persist the given persist cql .
store the of the object .
evicts from the given key and returns the new object .
remove the specified key from the map .
remove the given object from the given object .
put the given key asynchronously
get the list of callbacks associated with the given type .
get the minimum value of the given values .
adds a { @link } to this bucket .
<p > set the bucket size . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
returns a new jackson mapper for the given field .
get the mapper for the given type .
set the default mapper for the specified type .
create a new jackson object for the given type .
create a new jackson object .
create a new jackson mapper for the given type .
creates a default {
creates a new { @link mapper } for the given field .
returns the specified named scheme .
<p > sets the parameter value of the parameter . < / p >
set the context variable .
sets the sort order .
the point to trigonometric the four - digit precision floating point .

/ * ( non - javadoc )
{
copy the contents of the given { @link inputstream } into the given { @link outputstream } .
copy reader to reader
set compression type .
update metadata metadata updating the image
execute the given object .
process the request .
get the next value as a string .
parse time - zone string .
{
/ * ( non - javadoc )
helper method to generate a new from the importerservice

returns the value of the sql query string that is a sql query string .

extract a string from the resultsetmetadata
extract the column value from the resultsetmetadata
<editor - fold defaultstate = collapsed desc = full related >
update metadata
searches for atoms in the given atomcontainer in order to find the search atom .
{
remove all plugins .
list of
add plugins to add plugins to add plugins to add plugins to add plugins to add plugins to add to the plugin .
parse the given { @code string } to the given { @code } .
get the profile profiles .
finds the current { @code } from the given plugin .
resolves plugin project dependencies .
get the list of plugins that are executed in the given project .
check if the given { @code source } is a valid version of the given { @code plugin } .
check if the given version is a snapshot .
this method returns all plugins that are not found
gets the lifecycle phase of the lifecycle phase .
returns the lifecycle lifecycle phase .
finds the {
find an esa for the given project and artifact
find the extension of the plugins that are registered with the importerservice .
installs the plugin configuration .
this method will list all the plugin entries from the given list of { @code project } .
{
sets the preference s preference .
{
read the file content type header .
returns a variable for the given variable value .
returns a set of all the affected steps that are contained in the specified user .

this method is called when the task is unblocked or not .
/ * returns the value of the specified key in the specified column .
{
{
checks whether the given { @code } is a { @code } .
evaluate the rule to be evaluated .
/ * ( non - javadoc )
<p > . < / p >
checks the state transition to be the transition state .
creates a default client . <p > the default behavior is to authenticate a common client and returns the default client . < / p >
creates a default .
creates a default { @link } .
creates a default .
list all users .
add user - defined user to the user .
get the user profile .
gets all the currently available email addresses .
/ * ( non - javadoc )
adds an email to the user who sends the entity .
add profile profile for a user profile image .
create an for the given execution execution execution .
resolves the event name as a string .

{ @inheritdoc }
extract the name of the request from the url .
creates a new { @link } with the given { @link } .
{
calculate the range of the radar
set the shape of the shape .
set the shape of the particle .
sets whether or not the number of dimensions is equal to the outer alignment .
returns the maximum of the specified dimension .
{
/ * ( non - javadoc )
paints the current rotation .
/ * calculates the rollupinterval for the current track .
paints the given graphic .
paint the values of the grid .
get the point at the given index .
/ * [ deutsch ] <p > liefert eine instanz mit der angegebenen maximalen im . < / p >
/ *

create a { @link } from a { @link } .
invoke a proxy method on the remote service .
called when the bean is called .
sets the exception to be returned by the exception .
obtain the index of the method .

get a task id from the given id .

{
{
creates a new
/ * ( non - javadoc )
process the request .
handle the request .
process the request .
update attributes .
invoke the response .
invokes the method .
returns the arguments of the request .
/ *
get the domain data for the domain .


/ * ( non - javadoc )
add a new transaction to the list of uninitialised transaction ids .
/ * ( non - javadoc )

remove a previously created object from the list of .
remove a new from the list
remove a previously seen from a given
add a persistent transaction to the transaction .
gets the total total count of items in this list .
output class
output class import
output class
sets the version of the version to the end of the list .
/ * ( non - javadoc )
returns the next version of the version .
returns the version of the version to the version .
returns the next version of the distribution version .
climb up to the base class and returns the root root .
checks if the given etag matches the given etag .
checks if the given { @code } is a { @code } .

checks if the given { @code etag } is present in the list of items .
checks if the subject has a value for the given etag and the subject .
checks if the given { @code } is a question mark .

checks if a { @link } is a list of { @link } s .
returns the next token from the token .
reads the contents of a single line and returns the result .
reads the number of bytes from the table .


read the next character from the stream .
reads the identifier of the given identifier .
create a text sequence that will be used to create the text for the given text .
apply the specified text to the current font .
apply text to the given text .
loads the input stream from the input stream .
this method returns true if the response header is not present .
<p > get from . < / p >
<p > get / cancel / get / get / / p >
<p > filter . < / p >
/ * ( non - javadoc )
this method is called by the to be called from the main thread .
set the flag to be used for the local file scan .
compare this record to find the record .
check that the field matches the given string field .
check whether the given exchange is available .
write the field to the class .
read this record from the stream .
set the state of this breakpoint .
compares this <code > / code > to the equivalent <code > / code > .
create a filter that matches the given iri .
create a predicate that can be used to filter out relations for a domain .
check if a given list of member constraints exist .
checks if the given { @link } is not { @link } .
constructor .
set the record that owns this listener .
called when the record is not a change .
handle the code from a {
reply to the sockjs reason for the reply .
handles the header value of the response .

returns a handler for the proxy .
registers a new one if it is already in the specified { @link } .
swap two elements of two arrays .
swap two elements with the same one .
swaps elements of elements from the array starting with indices in order .
swap two elements with another array .
swaps two elements of all elements of this list .
swap two lists
swaps elements from the list of elements from the list of elements from the list of elements from the list of elements from the list of elements from the list .
swap two lists of elements with the same elements .
swap two positions .
swap two elements at the specified positions .
swap two elements of two arrays .
swap two positions .
swap two elements at the specified positions .
swaps two arrays of char arrays .
swap two positions .
swap two bytes starting at the specified index starting at the specified position .
swaps two elements from the array starting at index 0 starting at index 0 .
swap two positions .
swap two short array at the specified positions .
swap two positions are in order .
swap two positions .
swap two elements in the range [ 0 - 1 ] .
swap two elements from this array in order to hold the two arrays of positions .
swap two positions .
swap the positions of the two positions .
swap two positions .
swap the positions of the two positions .
swap two positions .
swap two doubles .
returns true if the given path is a subpath of the given path .
swap two elements from this vector .
swap the elements of this array with the doubles in the array .
returns the of the given domain .
get the domain data for the domain
create a new instance
get a mbean object from the objectname


create a set of attributes for a given name .

invoke the given name and parameters .
this method will return the next available channel .
handles the last frame of the given { @link } .
flush the pending array .
adds a frame to the queue .
suspend the current thread until the pool is stopped or not .
close the connection .
notify the read - only case .
notifies the wicket thread until it is unannounced or eof .
resume the resume event .
/ *
get the list of user names for the given user .
search for a group of groups
search for the groups and search the groups .
search for the regular expression .
find the groups for the given .
start the search controls .
returns the nodeid for the .
return the scope of the current .
check if handshake is not finished .
{
creates a new { @link } for the given paths .
returns a new for the given paths .
creates a new predicate that matches the given regular expression pattern .
creates a new predicate that matches the given regular expression .
parse a string that is a predicate .
parse a { @link predicate } from a string .
check if the request is a web application .
converts a byte array to a hexadecimal string .
converts a byte array to a hexadecimal representation of the form <code > / code > .




/ * ------------------------------------------------------------
verify that the token is a valid token .
check if the header contains the header values .
returns the formated string .
get owner owner from the file name
get the group of the file with the given path .
convert a { @link string } to a { @link string } .
get the mode for the given path .
set the group directory by name .
set the current userpreferences .
sets the permission permission .
checks that the path is a directory or a directory .
get the character type of the given path .
create a new path from the path .
create a new path from the given target path .
returns the { @link } for the given { @link file } .
get the mode of the specified character sequence .
returns true if the given view is a file .
get the owner attribute from the given owner .
returns the attribute group by the given group name .
compile the source files .
sets the ip address of the request .
returns the hostname name of the host name .
get the host name of the host .
returns the host name port number of the host name .
update the request body .
/ *
sets the { @link } to this response .
sets the upgrade channel to the specified channel .
sets the upgrade channel for the given channel .
sets the http response to the response .
get query parameters from the query string .
get the path parameters .
sets the response cookie for the given cookie .
returns the channel for the current conduit .
returns whether the request is complete or not .
/ *
returns the response channel for the channel .

sets the status code of this response .
adds a new request to the request .
add a new response to the response .
sets the { @link responsestatus } to be used for the grpc operation .
/ *
this method will return the response . <p >
sets the response .
sets the maximum allowed value of this request .
adds a { @link } to the { @link } .
/ * called by the to gracefully gracefully stop the response .
transform a text to text .
transform text into a { @link transform } object .
transform a text into a list of users .
inject the specified property into the specified module .

returns the substitution value of the input string .
creates a { @link } instance from a sequence of sequence and combiner .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
builds the functional interface implementation and if previously provided calls the consumer .
ds method to activate this component .
ds method to deactivate this component . best practice : this should be a protected method not public or private
/ * set config properties
update the configuration properties .
/ * ( non - javadoc )

this method returns the default language for the given viewid .
<p > initializes the { @link uicomponent } instance for this view . < / p >
connect to the server .
determine if the parameter is not a valid .
gets the value of the property .
<p > <span class = changed_modified_2_0 > / span > the <code > / code > method of the <code > authentication< / code > parameter . < / p >
-------------------------------------------------------------------------------


/ * get the requesting me uuid .

{
returns the { @link } instance for the given { @link } .
add a {
{
start this engine .
{
returns the total number of bytes in the current unix time .
shutdown the {
/ *
find the { @link } instance for the given { @link } .
execute the command line terminating the stream .
find the socket port number of pid .
create a new file for the given pid .
*********************************************************************** () this method is called when the cache is flushed .
{
declarative services method for setting the .
lookups for the given type with the given name .
<p > add all settings to the game . < / p >
<p > process . < / p >
process the given args .
xml
parse the input data from the command line
set the default value
recursively unzip all the jars from the directory .

/ * completions
compare two versions of .
<p > wraps a class expression with the given message type . < / p >
matches a charsequence against the pattern .
returns a { @code iterable } that is automatically empty .
checks if the array is not empty .
shortcut for {
assert that a collection is neither { @link collection } or { @link collection } or empty .
check that the given { @link map } is not empty .
<p > validate the given string that is neither { @code null } nor contains any characters . < / p >
check that the array is not empty .


shortcut for { @link ( charsequence int ) } but throws an { @link illegalargumentexception } if it fails .
loads a class from a class .
assert that a object is not null .
assert that a object is null .
加载类
checks if a class is loadable in the given class .
加载类
print a value to the value .
validates that the value is a valid expression .
assert that expression is a string value .
<p > validate the given message value with the specified values . < / p >

<p > validate that the array contains elements that are not positive before the array are not reflected in the array . < / p >
<p > assert that { @code null } is returned . < / p > <p > if the array is <code > null< / code > the array is null . < / p > <p > if the array is <code > null< / code > the array is null . < / p > <p > if the array is
<p > evaluate { @code iterable } with { @code elements } . the <code > { return { @code } / { } { @code } ) < / code > and <code > { @link java . util . integer } < / code > .
finds the index of the index within the array .
helper method to generate a message with the given message and the given collection .

<p > <b > / b > <b > / b > <b > / b > .
helper method to generate a string with a string value .
helper method to validate the given string to a string .
returns the index of the index within the array .
validate the state of the given boolean value .
<p > matches ( { @link ( charsequence ) } ) . < / p >
validate that the value is between 0 and 1 is between 0 and 1 is greater than 1 .
helper method to check whether the given object is a value for the given object type .
<p > creates a new class for the given type . < / p >
attaches the specified virtual machine to the specified virtual machine .
<p > performs the following steps for advanced vertices . < / p >
returns a new comparable between two values .
/ * returns a long - calculated between start and end [ min ]
validate that the value is not between 0 and 1 .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
returns a for the given value .

/ * ( non - javadoc )


returns the fully qualified name of the class .
cleans up the cleanup .
{

checks if a field name is compatible with the given class name .

/ * ( non - javadoc )
returns { @code immutablelist } containing all elements of this { @code list } with the given { @code immutablelist } .

returns the xml representation of this xml file .

returns true if the node is not present in the tree .
{
returns a new portable object with the given value .
normal init level apis
get a {


encode a header value .
sets the property value to the specified prop .
restore a property to the personaccount object .
get the shared connection for a given subject .
set the shared connection shared connection pool .
remove a shared connection from the pool .
create a new instance of the .
executes the given executorservice .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link } for the given class name .
set the base directory of this { @link } .
builds the base directory of the { @link #store } .
get the object for the target object .
remove a { @link environment } from this manager .
add a record to this plan .
get the physical data bookmark .
find the next record .
grow the access list .
remove all elements from the array .
get the table name .
add this field in the record s field sequence .
this method is called by the to find the lock .
search for a field definition .
/ * search the lock on the cache .
find a type of a field .
check if a given is a cache
check if the field is a field of a field .
this method is called by the caller to ensure that the state is not held by the caller .
/ * ( non - javadoc )
invalidate the cache cache cache .
checks if the given method is a forbidden or not .
reallocate the message header and the message count .
the data in the buffer .
escape the xml escape string .
sets the chain of the given effects of the current .
set the field to the set of .
this method is called to ensure that the cache is not changed .
get the number of the of the cache .
this method will get called when the new instance is created .
get the full of the .
check if the cache is a
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
creates a new decorator { @link strategy } with the specified strategy .
{
{
{
{
clears the table .
populate the efaps - database .
search for the specified accessid - in - role .
find the roles in the given roles and returns the role .
get the user id for the user .
get the access id for the given group name .
/ * ( non - javadoc )
creates a new { @link } that will be used to create a new reactive - streams flow .
creates a new { @link } that will be used for execution .
/ * ( non - javadoc )
set the http route to be used for the http method
returns the current .
/ * ( non - javadoc )
creates a new { @code } instance .
filter the list of items in the list .
/ * ( non - javadoc )
this method is called when the cursor has been changed .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
one of ways of creating builder . this is useful for creating a potentially matching action .
allows to apply back to a specific implementation of specific type .
creates a new intent from the intent .
called when the activity is first created .
{
returns the default hostname for the given name .
creates a new decorator .
toggle the toggle .
add a reference to the list of accessors .
remove a reference to the
get the service reference for the service
returns the current resource type .
get the highest available for the current element .
returns the elements of the collection .
returns a { @link iterator } for the services .
returns a reference to the current { @code } . <p > this method is invoked in the constructor from { @code . () } .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
adds full new case for the argument that are of specific classes ( matched by instanceof null is a wildcard ) .
set the type of the .
add a dependency to the list of dependencies .
check whether the platform is available .
/ * ( non - javadoc )
/ * ( non - javadoc )
return the list of property names .
creates a new element .
creates the docbook link link .
create the link to the jcr page
processes the document .
this method will build the { @link } for the topic .
returns the actions of the actions of the action .
appends the given action to the queue .
clears the file .
initialize the watchdog
read the data from the file into the { @link } .
process the dtd declarations for the given xml .
process a { @link } .
process a single - centre .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is called from within the { @link } interface .
process the link .
process the given dtd .
this method is called when the user touches the ticket .
creates an html form from the specified endpoint .
encode a {
convert the message to a .


returns a { @link } instance for the given class .

read the next chunk of a data source .
creates a new {
creates a new { @code client } object with the specified default { @link } .
creates a new decorator { @link } decorator with the specified { @link circuitbreakerstrategy } .
creates a new { @code } decorator with the specified { @link } and the specified { @link circuitbreakerstrategy } .
creates a function that forwards the specified strategy to the specified service .
handle the command .
returns the index of the next character in the array .
handle the endpoint invocation .
get jwt sso token from the jwt token from the http request .
handle a request token from the request .
check if the request is a websocket server
handles the oauth of the response header .
handles the signature response .
add the header for the response
/ *
get the sql statement for the given statement .
a function that returns the inferred values of the { @code function } where the { @code product } is present .
use this method to perform a consumer on a consumer .

get the current
/ * ( non - javadoc )
/ * ( non - javadoc )
{
returns the list of permissions for the given permissions .
rethrows guard catching and reports it .
{
================
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
this method is used to initiate a jwt token from the server .

returns uri for the given uri .
converts a { @link uri } to a { @link uri } .
creates a uri from the given { @link string } .
init this method .
get the key of the key .
{ @inheritdoc }
returns the map of all operations .
convert a list of paths to a list of .
transforms a list of into a list of paths .
returns the set of names of names that are set in the set of parameters .
returns the names of the names of the data in this repository .
returns an iterator over the rows of the document .
calculates the results of the results
collect the list of { @link score } for the specified { @link solution } .
check if the node is a neighbor of the given node .
get the data source data source data source .
returns the default values for this property .
get the table name .
add this field in the record s field sequence .
add this key area description to the record .
>
gets the specified resource .
create a new linear canvas with the given data .
create a plot canvas with the given data .
create a plot canvas with the given graphic data .
gets the specified target .
{
constructor .
{
returns the version of the current node .
{
gets the result of an api resource .
gets the result of an api resource .
process the command . <br / > step 1 - process the command if possible and return true if processed . <br / > step 2 - if i can t process pass to all children ( with me as the source ) . <br / > step 3 - if children didn t process pass to parent ( with me as the
returns a <code > subject< / code > object that represents a subject of <code > subject< / code > or <code > null< / code > if the subject was not authenticated .
destroys the current connection .
/ * ( non - javadoc )
associates the specified object with the specified object .
/ *
<p > this method is invoked by the connection to the managedconnection . < / p >
removes a connection event listener .
this method is used to obtain the xaresource that is the same as the current thread .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
returns the current transaction for this transaction .
/ * ( non - javadoc )
inform the connection dispatchers the connection is notified .
/ * ( non - javadoc )
check if the subject is allowed or not .
check if the connection is a valid connection .
append the current sql to the buffer .
get the value of the field
returns the string representation of the subject .
sets the context .
set the location of the location to the location .
/ * ( non - javadoc )
bind binding binding .
{
validate a path parameter path .
binds the given options to the list of options for the given option .
read the next length of bytes from the stream .
returns the set of all nodes of the cluster .
{

{
{


computes the k - k product of two nodes in the given sequence of k - pairwise solutions .

{
{
{
{
{
{
set the timeout for the transaction .
return the character at the specified position .
returns the sub sequence of this start segment . the separators are not trimmed .
compares this string to another string .
perform the work for this ejb .
f743 - 506
f743 - 34301 . 1
f743 -
/ * ------------------------------------------------------------

/ *


one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
constructor .
called when the lock is released .
transform the x y into a vector of weights .
compute the y y coordinate of the y - coordinate of the x y and y axes .
compute the y - tensor of the y - axis y .
compute the y y coordinate of the y tensor .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
/ * ( non - javadoc )
set the text of the item .
clear the body of the message .
/ * ( non - javadoc )
get the payload document for the document .
add a sentence to the list of abbreviations .

/ * ( non - javadoc )
method to find the vertex ids for the given .
method to find the vertices of the given vertex .
compute the backbone for the given .

pushes a new to the log .
the following is a flow of the original tensor .
/ * ( non - javadoc )
/ * ( non - javadoc )
method to determine if the item is a valid document id .
computes the eigenvalue of the matrix x .
<p > creates a new array vector describing the elements of the matrix . the matrix is the vector of the matrix vectors . the first vector is the first vector of the matrix . <br > <br > b<sub > j< / sub > = 1 : n< / sub > x<sub > i< / sub > <br > where n is
merges the current workspace node .
init method .

get the raw data record .
this method is used to record the record data in this record . the record is read from the record and record it s read .
{
{
loads the cipher from the file .

/ * method to add an app .
returns the { @link } that is not available .
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
add the cache to the cache .

get the { @link } instance for the given { @code cache } .
sends a resume to the specified .
sends a backout to the output stream .
set whether the state is paused .
add the list .
add the toolbars that are not currently pressed .
set up all the screen fields .
process the command . note : do not pass as the command line override the command line .
move the screen .
get the hidden parameters .
returns the stats map .
returns the feature indices of the specified array .
this method is called to setup the table .
free this record .
get the value of the field from this table . this method is called from the constructor .
this method is used to retrieve the index of the record .
initialize the properties .
/ * ( non - javadoc )
{
merges the current item into the queue .
{

generate the .
this method is used to generate a new { @link } .
get the table name .
add this field in the record s field sequence .
initialises the remote commands .
add a listener to the group .
get the tree node .
{
get all property definitions for the given type .
get the node definition for the given node type
{
return the node definition for the given node type .
initialise the .
/ * method to add a new context to the toolbar .
create a new .
saves the current viewer .
save the file to the file .
calculate the householder vectors .
reset the state of the .
initializes the base index .
sets the margin of the margin .
returns labels for labels .
set the scaling label for the given label .
add the list of all the shapes to this frame .
remove all shapes from this list .
set the bounds of the given bounds .
set the font of the outline .
set the label of the given label .
set the font for the specified font .
draw a point in the outline of the given coordinates .
calculate the line of the line and the color of the outline .
calculate the magnetic plot of a data point .
plots the line to the end of the line
****************


creates a new with the given color .
compute the histogram of histogram .
calculate the histogram of histogram .
calculate the histogram of histogram surface .
get a histogram for the given histogram .
{
create a 3d canvas with the poly line plot of the surface .
returns the attribute summary for the given attribute .
main post - fetch
get the table name .
add this field in the record s field sequence .
add this key area description to the record .
returns the boolean value of the object as a boolean .
returns the int value for this instance .
/ * ( non - javadoc )
returns the value of the property .

/ * ( non - javadoc )
addmasterlisteners method .
/ * ( non - javadoc )
{
get target record from this record .
get the parseable properties file .
serialize the data to the node .
start the service .
this method will return the script object that is used to execute the script .
/ * ( non - javadoc )
{
remove the enum values from the cache .
remove a long from the cache .
remove a string array from the first or last occurrence of the specified name .
returns the value of the control type . this method is public because the method is not public but the result is a byte array .
sets the name of the name of the target log .
check the item message in the message .
init method .
init method .
check if the current node is a directory .
returns the directory for the given name .
get the names of all the files in the directory .
deletes the given { @link } .
renames the file to the given directory .
update item s theme .
appends the specified amount to the group .
create a consumer that can be used to persist the consumer .
creates a new cell builder based on the builder .

checks whether the current date is a valid record .
get the conversion map .
<p > process entity request . < / p >
get a class for the given container .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
updates the pipeline stage .
executes the given action on the underlying input stream .
/ * ( non - javadoc )
{
{
called when the node is ldif .
check properties of jcr node name .
retrieves the primary type of the node type .
parse values from the database .

returns a { @link } for the given function .
convert a function to a json object .
builds a json evaluator from a file .
registers all the in the current session .
initialize the .

log the response .
/ *
set the length of the log .
/ *
/ *
/ * end of the buffer
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
closes the underlying stream .
fill the contents of the underlying buffer into the buffer .
restart the current state .
{
check if the is alive .
calculate the duration of the mpeg frame in the given point .
calculate the duration of the given { @link } .
writes the contents of the given stream to the output stream .
select message if the message is not allowed .
returns the message for the hours of the current window .

generate a redirect url
/ *
calls <code > casexxx< / code > for each class of the model until one returns a non null result ; it yields that result . <! -- begin - user - doc -- > <! -- end - user - doc -- >
get the annotation annotation annotation annotation
{
{
{
{
{
{
retrieves workspace data for the given workspace .
retrieves the named workspace for the given workspace .
{
{
returns the quota of the quota for the given repository .
returns the { @link } of the repository .
returns the index of the repository .
returns the global size of the cluster .
returns the number of data size .
returns the { @link } instance of the repository manager .
/ * ( non - javadoc )
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<p > process entity request . < / p >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
loads the xml document from the xml document .
returns the timer associated with the current . <p >
/ *
/ *
/ * ( non - javadoc )
check the timer for the given business . <p >
creates a node representing the node s etag .
add all the screen listeners .
set up all the screen fields .

/ * ( non - javadoc )
check if the message is ready to be sent to the server .
mark the destinationhandler as a .
returns the consumer consumer discriminator
get the next message from this me . <p > this method will return the number of messages in the stream .

removes the file path from the file system . <p >
{
remove a node from the list of nodes .
set up the default screen control for this field .
get the language string to be used for the query .
{
<p > put bean getter into object . < / p >
<p > retrieve object from field name . < / p >
initializes the transient fields .
get the servlet context for this context .
get the uicontext context .
sets the value of the .
ds method to activate this component .
ds method to deactivate this component . best practice : this should be a protected method not public or private
declarative services method for setting the usertransaction service .
declarative services method for setting the method
/ * ( non - javadoc )
{
creates a node representing the node s content .
returns the list of logs that are the of the remote tracker .
add a {
add a new column
sets expectations that should be redirected to the mock
sets the url of the expectations .
sets expectations that should be used for the mock
sets expectations that should be used for the user to verify the response of the user .
add a new option

execute the connection on the connection .
call this method to clear the property .
/ * ( non - javadoc )
checks if the exception is an error or an exception thrown .
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
{
initialize the .
get the field name of the field .
/ * ( non - javadoc )
get properties set
dispatches a session to the session .
deactivates the mdb .
deactivates the messaging component .
closes the connection to the given messaging engine .
notifies the listeners that the given bus is enabled .
notifies the listeners that the given connection is not already open .
notifies the connection to the connection .
/ * private static >
the record reference .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new server socket server .
get the socket factory for the given id .
get the server socket factory id .
configure the server side .
this method is used to get the ip address of the .
{
receive notification of end end end event .
/ * ( non - javadoc )
dump out the default .
/ * ( non - javadoc )
validate parameters
check if the file path is valid .
checks if the url is a url
{
start the configuration .
add all the screen listeners .
this method is called when the main seek record is received .
this method is called to perform the main method .
method .
set up all the screen fields .
get the command string .
returns the number of locks that have been pushed .
returns true if the current node is a persistent node .
{
/ * ( non - javadoc )
returns the list of {
get the session manager for the session manager
saves changes to the persistent storage .
remove the expired from the queue .
{
get the hash of the token .
retrieves the node of the given node .
remove data from node .
{
{
{
<p > it creates a date / time that is unable to be used by using a { @link } . < / p >
<p > it converts a date / time string into a date using the given pattern . the input { @link date } is converted into a { @link datemidnight } that is converted into a { @link datemidnight } that is converted into a { @link datemidnight } that is converted into a { @link datemidnight } that is converted into a
<p > it returns the { @link date } converted to the given { @link date } using the given { @link datetimezone } < / p >
<p > it converts the input { @link date } into a { @link date } using the specified { @link chronology } it will be used to convert the result to a { @link datetime } . the input { @link date } is converted into a { @link datemidnight } and then transform it to a { @link date } using
<p > it creates a { @link date } using the given { @link chronology } it as the specified { @link chronology } it will transform the input to the collection . the returned { @link date } will be returned by the { @link ( java . util . collection ) } method . the resulting { @link date }
<p > it creates a { @link } that will transform the input { @link date } using the specified { @link chronology } < / p >
<p > it converts the input { @link java . time . zoneddatetime } into a { @link datemidnight } that is converted into a { @link datemidnight } using the given { @link datetimezone } . < / p >
<p > it converts the input { @link calendar } into a { @link datemidnight } with the given { @link chronology } < / p >
<p > it converts a string to a date using the specified pattern string . the pattern is converted into a { @link datetime } object that is converted to a { @link datetime } . < / p >
<p > it returns the specified { @link date } object from the input { @link date } object . < / p >
<p > it creates a { @link } and return the result . the input { @link date } is converted into a { @link datetime } object that is passed to the method it will be the same as the input { @link date } . the input { @link date } is converted into a { @link datetime } object
<p > it creates a { @link java . util . date } and then each time the date - time and end date is used . the returned { @link date } s returned by the { @link java . time . timestamp } will be used . the input { @link date } will be used to convert the input to
<p > it creates a new { @link } that is used to convert the input to a { @link date } . the input { @link date } is the date - time and the chronology of the returned { @link date } is added to the input { @link date } . the input { @link date } is the
<p > it returns the { @link java . time . timezone } representing the time of the specified { @link date } . < / p >
<p > it creates a { @link calendar } based on the specified { @link chronology } < / p >
<p > it returns a collection of { @link interval } that matches the specified { @link interval } with the given { @link datetimezone } < / p >
<p > it returns a collection of { @link interval } that is converted by the given { @link interval } using the given { @link datetimezone } < / p >
<p > it creates a { @link interval } based on the { @link interval } s .
<p > it returns the { @link interval } for the given { @link interval } using the given { @link datetimezone } < / p >
<p > it creates a { @link interval } based on the specified { @link chronology } it is used to convert the input array to a { @code } . the { @link date } is based on the { @link interval } and { @link chronology } < / p >
<p > it returns the { @link field } that is the { @link interval } that is the { @link interval } s between the two intervals s field values . < / p >
<p > it creates a { @link } that is based on the specified interval and chronology . this is the equivalent to { @link ( long ) } . < / p >
<p > it generates a { @link interval } that is used by the given { @link interval } . < / p >
<p > it creates a { @link interval } that is based on the { @link interval } s returned by { @link ( long ) } .
<p > it generates a { @link interval } that is used by the given { @link interval } . < / p >
<p > it creates a { @link interval } based on the { @link interval } s .
<p > it returns a collection of { @link interval } < / code > < / p >
<p > it creates a { @link calendar } based on the specified { @link chronology } < / p >
<p > it returns the { @link interval } for the given { @link interval } . < / p >
<p > it creates a { @link interval } from the specified { @link interval } . the { @link interval } is created by the { @link interval } s .
<p > it generates a { @link interval } that is the given { @link interval } s . < / p >
<p > it creates a { @link interval } based on the iteration iteration order of time - based timestamps . the { @link } is used to convert the { @link interval } s to { @link } .
<p > it returns the { @link interval } for the given { @link interval } . the { @link interval } is used to adjust the { @link interval } for the given { @link datetimezone } < / p >
<p > it creates a { @link interval } based on the { @link interval } s returned by the { @link ( date ) } . the { @link date } is based on the { @link interval } s returned by the { @link ( date ) } . the { @link date } is used to convert the
<p > it performs a function pattern using the specified pattern string . < / p >
<p > it performs a { @linkplain () } and performs the given { @link date } as the given { @link localdate } result in the given { @code localdate } < / p >
<p > it creates a { @link } using the specified { @link chronology } < / p >
<p > it creates a new { @link } that is based on the specified { @link chronology } it is used to convert the input to a { @code localdate } function . the local date is the number of elements in the collection . the local date - time is the part of the { @link date } s .
<p > it creates a new { @link } that is based on the specified { @link chronology } s . the input { @link date } is the same as the input { @link date } . the input { @link date } is the same as the input { @link date } . the input { @link date } is
<p > it performs a { @linkplain ( date ) } { @link } < / p >
<p > it creates a { @link calendar } that is based on the specified { @link calendar } s . the following are the following units : <br > < / p >
<p > executes a pattern using the specified pattern string using the pattern - pattern pattern . < / p >
<p > the given { @code this } is a { @link localtime } the given { @code } to be the given { @code localtime } result in the given { @code } result in the given { @code } result in the given { @code } result in { @code localdate } . < / p >
<p > the given { @link date } is converted into a { @link localtime } with the given { @link chronology } < / p >
<p > it creates a { @link } that is based on the specified { @link chronology } . the input { @link java . util . concurrent . } may be a non - empty { @link localtime } with the second { @code time } . the { @link } is based on the input { @link calendar
<p > it creates a new { @link } that is based on the specified { @link chronology } s . the input { @link java . util . date } stored in { @link } . the input { @link java . util . date } stored in { @link } .
<p > it returns the { @link java . time . } / { @link localtime } / target / { @code } } { @code } and { @code localtime } and the given { @code localtime } in the { @code localtime } using the specified { @link } . < / p >
<p > it creates a { @code } based on the specified { @link chronology } < / p >
<p > it creates a new { @link period } with a { @link period } that is based on the specified { @link period } . the { @link period } is then used to parse the { @link period } . the { @link period } is then used to parse the { @link period } . the { @link period
<p > the start timestamp of the specified { @link period } . the input stream is to be used as the { @link period } s returned by the { @link period } . the resulting { @code period } is the start and end of the date - year and end . the order of the { @link period } is
<p > it creates a new { @link period } with the specified { @link period } where the { @link period } is created . the input { @link period } is then converted to the { @link period } where the { @link period } is created . the input { @link period } is then converted to the { @link
<p > it creates a { @link } based on the specified { @link period } . the input { @link period } is then used to build the { @link period } using the { @link period } . the input { @link period } is based on the { @link period } s returned by the { @link period }
<p > creates years the number of years elements will be used to produce a period of years and months . < / p >
creates a new collection of years field from the given period type .
<p > it returns the result of {
<p > it creates a { @link mutabledatetime } with the results of the given { @link chronology } < / p >
<p > it creates a { @link } that is based on the specified { @link chronology } . the input { @link chronology } is based on the query - type { @link } and then drains the { @link chronology } that is returned by the { @link } . < / p > <p > the following
<p > it creates a { @link } that is used to convert the field collection to a { @code mutabledatetime } . < / p > <p > this method is equivalent to : <ul > <li > the { @link date } s are copied and the value will be converted into the same { @link } . <
<p > it returns the { @link java . time . timezone } of { @link datetimezone } < / p >
<p > it creates a { @link mutabledatetime } with the given { @link chronology } < / p >
sort the user s principal by compared by the user .

/ *
removes the substring from the string .
/ * ( non - javadoc )
create a iterator from the repository .
adds a tag class to the builder .
sets the serializer for the given serializer .
set the type of the field .
writes the given json to the output writer .
writes the fields of the specified object to the jsongenerator .
{
write value to a json string .
write value to a json string .
write value to a new value .
writes a value to a string .
creates a proxy for a given url and creates a proxy for the given url .
/ * ( non - javadoc )
/ * ( non - javadoc )
add links to the list of links .
links the embedded items to the embedded items .
links the embedded items to the embedded collection .
merge the proposed links from the given {
sanitizes the specified {
builds a new client with the specified {
build the { @link net . dv8tion . jda . client . client . client . client . client . rpc . client . } .
initialize wonderpush init
add the default constructor to the anchor .
add a new to the list of blacklisted .
adjusts the items in the heap .
log records in the log record .
writes the given header record to the end of the list .
returns the object of this object .
{
decodes a hex string into a byte array .
compares two bytes in the same order as the first one of the remaining bytes .
compares this <code > bytebuffer< / code > into a byte array .
calculate the center point for the points .
returns number of number of times in the machine .

checks that the validation fails with errors .
checks whether the validation chaincode is the same as the given validation .
throws an error if the error failed
initializes the query parameter with the injected api .

get the principal for the principal .
returns true if the user has permission to role .
log the error message with the given logger .
resolves the path of the path to the filesystem .
initializes the .

<p > . < / p >
write float .
write double value to byte array .
writes a long value to the byte array .
/ * ( non - javadoc )
process the request .
read a long from the tail .
writes an integer at the end of the byte array at the given offset .
read a number from the given byte array .
parse the given character sequence and return the string representation of the character .
writes a short value to the byte array starting at the given offset .
reads a short from the given offset .
parse a string from an end of a string .
add a new to the
add a list of member
remove a member from the list .
this method is used to reset the to be used as the method of the .
this method is called to reset the state of the consumer to be called by the asynch consumer
/ * ( non - javadoc )
this method is called by the to be used by the .
/ * ( non - javadoc )
set the consumerdispatcher to the idle state .
check whether the item is deemed as a filter .
return the matching member for the given
associates the message with the .
/ * ( non - javadoc )
finds the given char sequence of characters in the given charsequence .
finds the double value of the specified character sequence using the specified character sequence .
finds the best matching { @code } and { @code [ - 1 ] } as { @code [ 0 1 ] } .
encodes a long value
encodes a string into a string .
determine whether the given point is inside the given location .
determine if the given point is inside the given location .
returns true if the line is empty .

creates a new { @link } with the given ldap user .
/ * ( non - javadoc )
get the groups of the groups .
get this field name .
move the number of data to the document .
get the groups of the groups
search for a user - defined search query .
search for a single search object .
obtain a string of the given attribute name .
get attribute of string .
returns the value of the attribute as attribute .
returns the user s username .
checks if the given { @link } is not { @code null } .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
returns the dot product of the given vector .
<p > performs a scalar in a vector . < / p >


<! -- begin - user - doc -- > <! -- end - user - doc -- >
{
/ * ( non - javadoc )
puts all of the values in the specified map into the specified map .
remove all keys from the database .
{
get the cached value of the .
init
frees this table .
this method is used to retrieve the database name from the database .
create a table for this record .
create a table for the record .
this method will take a database record in the .
the screen table .
get this property .
get the user properties from the database .
commit the current transaction .
this method is used to decode the data from the database .
get the value of the property as a number .
returns the value of the property as a number .
set the database database for this database .
get the table record from the table record .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
writes the json to the json file .
get the size of the size of the passed {
get the size of the passed iterator .
get the size of the passed enumeration .
returns an iterator that combines the given elements of an iterator of two elements . the resulting iterator iterates over the resulting elements in the passed array . the resulting iterator iterates over the resulting elements in the passed array . the resulting iterator must be a single element of the { @code iterator } iterator . the resulting iterator must be a
returns a <code > / code > that recognizes the given character sequence in order to be able to be able to be able to be serialized .
returns an unmodifiable collection of the given arrays . the returned array will be ordered if the array is empty .
returned iterator for an unmodifiable element .
returns a new map containing the entries of the specified map .

get the parameter [] for a function
this method is called to commit the directory to be used for the given directory .
set the client info to the specified value .
set the client info to the client .
returns the client info for the specified name .
check if the persistence is a wrapper for this enterprise .
populate cache .
returns an awt instance of the given mime type .
/ * ( non - javadoc )
add a list of objects to the list of objects .
/ * ( non - javadoc )
set the matcher for the .
return the chr for the
get the value of the <code > / code > .
maps the data to a bytebuffer .
lock lock lock
lock the file at the end position .
creates the list of widgets for this dialog . <p >
get the string value of this property .
set the state of this field .
set the field of this field . move the field value to the field set .
read the map from the input stream and return the default value .
read the map from the given input stream and return the result as a json object .
write the content of the supplied document to the output stream .
returns the partial document that is the of the
returns the forward - number of the characters in the input buffer .
/ * ( non - javadoc )
loads the specified configuration from the given configuration .
finds the local context path for the given login context .
{
/ *
/ *
/ *
/ *
register the type converter for the class .

get a { @link } for the given class and type .
this method is called when the is not a modifiable list .
/ * public api .
write the contents of a file to a file .
write the contents of the given file to the file .
write the supplied node to the file .
write the supplied node to the file .
write a node to the given output stream .
write the supplied { @link modelnode } to the given { @link modelnode } .
write the content of the supplied { @link } to the given writer .
write the supplied { @link } to the given writer .
get the node as string from the passed node .
get the node as string .
get the node as a byte array .
add a new item to the given field .
{
<! -- begin - user - doc -- > <! -- end - user - doc -- >
returns the component of the .
get the component of the given link .
builds a description of the pix link .
/ * package
finds the element element of the .
handle the decoding program .
append a result to the buffer .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
iterate over all elements of this collection and all of them .
get a listing of all possible combinations of the given objects .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
create a new { @link } instance from the given { @link } .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
parse the given reader .
returns the base hash of the given object .
open the .
calculate the maximum of the .
/ * ( non - javadoc )
the log file .
/ * ( non - javadoc )
set the maximum file entry .

/ * ( non - javadoc )
mark the destinationhandler .
reserve a pointer to the .
this method releases the log file from the log file .
this method calculates the amount of working of the .
write the next record to the log .
write the next record to the log record .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * add a record to the buffer .
/ * ( non - javadoc )
/ * ( non - javadoc )
print the contents of the dump file to the dump file .
get the locale list for the passed locale .
get locale from locale .
check if the passed locale is a special locale .
<p > checks if the string is a valid locale . < / p >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
get the cache containing the cache cache
sets the cache for the cache .
returns a map of all the children of the current server .
returns the header .
returns an iterator for the given offset in the sequence .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
/ * ( non - javadoc )
sets the authentication authentication subject for the subject .
/ * ( non - javadoc )
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
builds the functional interface implementation and if previously provided calls the consumer .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
set the field that owns this listener .
move the current record to the current record .
compares two members :
sets the wait time for the specified number of seconds .
returns a list of { @code } objects corresponding to the given list of { @code } classes .
invokes the current thread and invokes the callable in the future .
queues the asynchronous execution of the future .

invokes {

execute a specific callback .
create a new command executor for the given name .
creates a new { @link } from the given { @code source } .
get schema from cache .
get schema for a { @link } .
create a validator for the passed schema .
get the validator .
method
remove a from the matchspace
method .
method
method to get the consumer
add a consumer to the list of .
add a consumer to the list of consumers that are registered with the consumers of the consumer .
add a consumer to the list
method
method
/ * ( non - javadoc )
create a new { @link } from the passed { @link ihasinputstream } .
remove the consumer from the list of consumers which are not registered .
this method is called by the to ensure that the callbacks are fired .
method
method
method
<p > . < / p >

/ * parse the step .
/ * this method is used to generate parentheses for the step .
/ * this method is called to find the last synced location for the last step step .
create a identifier for a given expression .
/ * ( non - javadoc )
---------------------------------------------------------------------------
/ * ( non - javadoc )
check if the next tag is not found .
/ * ( non - javadoc )
/ * called by to update the
/ * package
<! -- begin - user - doc -- > <! -- end - user - doc -- >
replaces the substring with the replace string .
this method is called to search for a step .
/ * ( non - javadoc )
/ * ( non - javadoc )
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
one of ways of creating builder . this is only applicable for most elements of degree .
allows to specify additional arguments to be returned by specific methods that are not necessary .
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the given writer .
writes a value to the output stream .
write the output of the output stream to the output stream .
writes attributes to the xmlstreamwriter .
escapes special special characters in the string .
this method is used to escape the requirements of javascript code to a string .
write children to the writer .
writes the object to the writer .
writes the given to the writer .
writes a complex object to the output stream .
checks if the value is empty .
get the resourcebundle that is the given resourcebundle in the given resourcebundle .
get the path of the given path in the mergepath .
checks whether the given class is a class path .
get an inputstream for the specified url .
get an inputstream for the specified url .
returns an inputstream for the given url .
get the cached inputstream for the specified class .
get the cached reader for the passed class loader .
get the class loader for the given class .
get a file as a file .
checks if the file is a file or directory .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
adds full new case for the argument that are of specific classes ( matched by instanceof null is a wildcard ) .
get the type of the passed array of the given array . the array must be a subtype of the corresponding array .

search the first index of the first array starting from the first item starting from the first item found .
returns true if the given array contains the given element .
return first very very very very very very very very very very very very very linear . note : not null . note : not null ; otherwise return null .
get the first ( or null ) value from the array .
returns whether the array is a size of the list .
returns the last n in array .
get the last slice .
returns a copy of this array with the specified array of floats .
get the array of ints for a given number of floats .
get the array of ints from the passed array
get a copy of the array .
get the array of all the elements in the passed array .
create an array containing all the elements of the passed array .
get the list of all the elements of the passed array .
get the array of all the elements in the passed array
get the array of all the elements in the passed array

creates a new { @link datasource } instance .
visit a tree of trees and the mixin s callback .
returns all the elements in the array array that the number of elements in the array are not sorted .
returns all the elements in the array .
returns a list of the first occurrence of the specified number of elements in the array .
returns all the the last non - zero array of <code > / code > .
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
create an array containing the elements of the given array .
create an array of elements of a class .
create a new array array array containing the array of arrays .
create an array array array containing the size of the array .

compares two objects with equal items .
check if the specified array contains the specified element .
returns true if the array contains only difference of the specified array .
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is called when the conversation is not currently in the conversation state .
/ * ( non - javadoc )
load the given { @link } from the given { @link } .
load the given class from the given class .
create a keystore key store from the given store .
load a keystore from the keystore
load the private key from the keystore @param private key @param private key @param private key store @param private key pair @param private key @param private key @param private key @param private key @param private key @param private key @param private key @param private key @param private key @param private key @param private key @param private key @param private key @param private key
load a secret key from the keystore .
load certificate from a keystore using the provided keystore and store the trusted certificate .
read the charset from the inputstream and return the charset as a charset .
check if the given byte array is a valid byte array .
parse the next character in the string .
set the bottom sheet s scrollable .
sets the title of this wizard .
set the encoding encoding .
set the output encoding .
set the stylesheet - level
set the title of the window .
add a new template to this node .
add a dataid to the data store .
add the given to the cache .
constructor .
set the record that owns this listener .
the field is not editable .
collect the path to the file .
adds an alias to the cache .
add a file to the file
create a kjar .
create the pool
reads the content of the object from the content definition .
returns the for this schema .
adds the specified token to the list of receivers whilst discarding transactions .
returns the first token in this transaction .
remove the first token from the database .
returns the index of the first token in this queue .
/ * ( non - javadoc )
{
overiding the method in the matchspace
get the next line .
execute the given consumer with the given consumer .

strips the whitespaces from the localconcept html string .
returns the iso - 8601 crontab ip address to the string .
returns the exemption mechanism for the .
returns the name of the word in the given string .
put a new value with the given name .
finds the first {
finds the next type in the list .
returns the cache of cache name .
returns a list of the given children .
returns a set of {
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
adds full new case for the argument that are of specific classes ( matched by instanceof null is a wildcard ) .
set the name of the paths of the list of filenames .
returns the named property with the given name .
get the registry entry for the given pid .
process the types of the registries .
get the registry entry for the given configuration .
get the table row for the table .
clears all meta panels
<p > <span class = changed_modified_2_0 > / span > a <code > / code > implementation . < / p >
register the specified blueprint .
this method is used to get the value of the <code > / code > object .
returns the innermost { @link class } of this { @link class } .
{
register the provided to the provided registry .
init the standard
creates a new { @link } from the given theme .
init method .
get the user .
get the property name .
returns the number of all the count of the given { @code filter } .
this method is called when the predicate is called .
set the property property .
set the properties to be used .
get the properties of this user s properties .
get the value of the field from the field .
method .
create a new keyvaluebag key .
create a new keyvaluebag key .
creates a new { @link } with the given name and type .
sends the specified log record to the current batch .

<p > process entity request . < / p >
check if the given channel is a sip connection .
initialize the .
update the properties of the properties .
creates a channel from the channel .
destroy all the and .
/ *
this method is called by the { @link } to find the { @link } .
validate the configuration of the project .
/ * called from
/ * called by declarative method to invalidate unlink all sessions
/ * ( non - javadoc )
gets the names of all attributes .
set the value of the attribute to the attribute .
/ *
/ * returns the session value .
/ * removes the session from the session .
/ *
/ *
get bean key from the given bean
get the bean for the given bean .
run a { @link runnable } to run on the given { @link runnable } .
schedules a successful completion of the specified task .
computes the specified time by the specified time window by combining the specified values in the specified order . note that this operation returns a new fixed value for each iteration in the order they were returned .
computes the specified period of the specified period in order to wait for each interval in the order in the order in the specified order .
computes the specified long by the given time - order by the given time - order starting at the given index starting at the given time .
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
executes the given { @code future } .
method to set the { @link } annotation for the mappers and jackson .
sets custom serialization serializer to default mappers
run the given runnable in this workspace .
executes the given callback on the given { @link } .
run the task execution execution execution completion .
combines two iterators out of objects .
returns the value associated with the given key in the map .
returns a collection of all members in the specified collection .
{
check if the given index is not present in the given index .
flush the input stream to the output stream .
loads the state from the given stream .
increments the last index in the {
updates the last indexed index .
start the server .
start the server .
stop the server .
builds description for the description of the given description .
this method initializes the painting .
{
inject the specified context class .
injects the given context into the given context .
retrieve a list of item from the given input and returns the history of the specified job .
this method will return a list of history items that are occuring in the current account .
this method is called by the to simulate the .
this method is called by the to ensure that the consumer has been set .
/ *
this method is called when the last time the last update is done .
/ * ( non - javadoc )
inform the of the .
/ * ( non - javadoc )
this method is called by the to be used for the .
this method is called by the to ensure that the buffer is not already in the persistent state .
this method is called to ensure that the is not available .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<p > creates a schema for a schema . < / p >
<p > creates a typed link . < / p >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
/ * ( non - javadoc )
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<p > returns the schema version information for a specified schema . < / p >
add a filter mapping filter to the
add a dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic dynamic runtime .
returns the context path for the context .
add a new mapping to the target table .
sends a error to the response .
<p > returns information about the directory associated with the specified amazon chime directory . < / p >
<p > gets the facet for the specified facet . < / p >
<p > gets the attributes associated with the specified attribute . < / p >
<p > gets information about the specified object . < / p >
<p > gets information about a schema . < / p >
<p > gets information about a link to which the specified link is a document . < / p >
<p > lists the schema names of the specified schema . < / p >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
calculate the circle circle of a circle .
calculate the model s x - oriented - oriented - oriented coordinate vector .
calculate the model for a given road segment .
calculate the of intersection of the given array of points .
<p > lists the document objects that are associated with the specified root object . < / p >
creates a {
creates a new { @link stream } containing the elements of the given stream .
returns a { @code stream } consisting of the elements of the given iterator .
reduces the accumulation of applying { @code accumulator } .
perform a reduction on the current single element .
returns a new { @code stream } consisting of the elements of this stream and returns { @code false } .
applies the given function to each element .
check if the predicate is satisfied .
returns a new { @link stream } containing the elements of { @code stream } .
<p > gets the root paths of a parent folder . < / p >
create a browser that will send the message to the client .
reset the session .
constructor .
handle this {
update this record ( s ) from this record .
gets the list of { @link } instances .
parses the cpe name .
initialises the .
start this .
/ * ( non - javadoc )
/ * ( non - javadoc )
initialize the engine component .
destroy the component .


finds the last index of the last occurrence of the given index in the buffer .
{
returns a bytebuffer suitable for use in a { @link string } .

sets the point between the x y and z .
set the line of this point .

<p > the intersection between two points .
<p > performs a deep copy of the input according to the segment . < / p >
/ * ( non - javadoc )
encode the message body to the payload . <p >
encode the message body .
encode the payload to the payload .
/ * ( non - javadoc )
/ * ////////////////////////////////////////////////////
encode a string to a string .
calculate the intersection of the transform .
display the main record .
display the screen layout .
adds a string to the evidence collection .
compares the { @code } to the { @code } .
returns the { @link java . util . list } of { @link } s .

print the header text in the frame .

serialize the object to byte array

serialize a byte array to a human readable string .
create a new file dword bytes from the file descriptor .
append a field value to the builder .
append a value field to the builder .
append a value field to the builder .
returns an iterator over the elements of the iterator .
collects all elements from the iterator into a {
read the file from the given file .
iterate over items from the given iterator .
returns an iterator that returns an iterator that returns iterators that are not the case an { @link iterable } is returned .
report an error message .
report an error report .
this method is used to interact with a { @link } .
--------------
lock the lock .
check the state of the lock
release the lock .

{
read flv file and return the value of the lock file .
get the age of the age of the file .
generate a report that is a report with a message .
initializes the {
check if the connection is not already opened .
{ @inheritdoc }
this method transfers the given { @link file } object into a database .
process files .
{
reads a raster from the given path .
extract the columns from the id3 / update request .
get the sql script for the sql script
returns the sql script for the csv file .
get csv file for a sql script
get the data from the given string .
returns the sql string of the columns that the specified column is the number of columns .

sets the value of the <code > / code > parameter .
execute the given object and sends it to the given object .

set the object to be used .







connect to the specified .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
returns the index of the column for the specified column .

returns a list of the columns that the specified column is the same .
returns a list of the columns that the specified column contains the columns .
returns the object represented by this column .
returns the column types for the column type .
returns the householder row headings in the column
return the number of columns for a given type .
returns the columns of the specified column in the given column .
returns the columns of the specified column in the given column .
returns a list of {
returns the html for a type .
{ inheritdoc } .

returns a copy of this monetary amount with the specified amount subtracted . <p > the unit is in the range of the period in the current date and the time .
/ * [ deutsch ] <p > erzeugt einen neuen auf diesem und &auml ; quivalent . < / p >
splits the columns into the table .
aggregates the results of the given aggregation function on each column .
aggregates the results of aggregate operations on the given output .

get the table s list of table names .
calculates the squared probability distributions .
calculates the probabilities of the radial radial sampling .
generate gaussian kernel kernel kernel .


get all methods of the given target target in the given set of methods .
get the method for the given target .
finds methods annotated with {
verifies that the given method signature is supposed to be performed .
retrieves the list of messages from the message .
/ * ( non - javadoc )
writes the data to the file .

create an empty header if necessary .

creates a shaped .


returns a reader that reads the contents of the input stream into a reader .
sets the root level of the root view .
handle exception .
gets the tokens used by the token format .
this method is called when the me is made .
creates a new builder .
/ *
/ * ( non - javadoc )
adds a dom element .
open the element .
close the close close close the element .
close the element .
writes text to a single line .
write a single line to the document .
init method .
initialize the properties .
process the command . step 1 - process the command line and return true if processed . <br / > step 2 - if i can t process pass to all children ( with me as the source ) . <br / > step 3 - if children didn t process pass to parent ( with me as the source ) . <br
get properties of the specified string .
create a new expression expression
<p > setter for itsid . < / p >
<p > setter for specifics . < / p >
<p > setter for item . < / p >

creates a new context for the given connection .
fires a exception thrown by exception .
get results
{
checks if the given file is a directory .
delete files from the list
deletes a file from the given file .
deletes all files from the file .
deletes all files in the given directory .
deletes files from the file .
deletes the files from the given source file .
the delete method .
deletes a file from the source file .
the delete file filter .
returns the last modified timestamp of the specified url .
<p > retrieves the last modified date of the specified { @code } from the specified url . < / p >
merges the {
validate the inifile .
dispatch a request to the request .
create a new { @link } instance for given input stream .
check if the response is valid .
get the string value of the property .
get the string value of this field .
convert the string to this field . set the value of the field .
this method is used to get the cipher suites .
returns the service associated with the url .
get the number of inputs for the given spfpersona .
calculates the grey value of a double .
compute the double - biased value of the matrix .
gets the current context properties .
calculate the expire date and time value for the expiration date and time .
returns the credit card number string .

{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
insert a new entry into the new one .
insert a new entry into the hashmap .
transfers the data from the queue to the queue .
creates a new {
init this instance .
free the panel .
this method is called to catch all the in the graph .
returns the value for the given key .
create a new { @link jedispool } with default { @value } .
creates a new { @link jedispool } with default values .
{
{
creates a new fileoutputstream for the given string .
main method .
{
calculate the for the given radius .
compute the center of points in the map .
removes the specified row from the circle .
calculate the value of a function
calculate the matrix length of the matrix
fill the matrix in the clusteringfeature
fill the matrix points in the matrix

create new instance of parser instance .
returns true if the given is already uninstalled .
this method is used to determine the architecture for the specified feature definition .
/ * package
parse select columns .
calculate the digest of a digest .
set the primary - most of the color for the user .
set the secondary color of the secondary .
creates a new color with the given color .
returns the value of the given string .
create a new context for the given {
computes the image centered in the image .
this method is called by the { @link ( graphic image ) } with the following colors : magnitude = [ [ 0 1 ] . exp ( [ 1 ] ) * ( 2 ) * ( 2 ) * exp ( [ 0 ] ) * ( 2 ) + exp ( 0 1 ) *
computes the rodrigues between the x and y values .
returns the value of the coordinate at the given location .
get the value of the from the given file .
/ * ( non - javadoc )




constructor .
method .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
add a timer to the timer .
write the class name .
write the record information .
this method is called to update the for the main class .
this method is called to write the record for this package .
this method is called to write the record to disk .
write the class record to the record class .

this method is called by the class to be used by the class .
write the file s contents in the file .
write the fields in this field .
this method is used to write the offsets for the record .
write the key to this frame .
write the free record to the output stream .
read the class record from the record .
.
.
/ * ( non - javadoc )
initialize this class .
destroy the servlet .
process the request .
/ * ( non - javadoc )
fills the buffer with the information from the buffer .
/ * ( non - javadoc )
called by the recovery process to perform this action .
region > autocomplete
connect to the specified executorservice .
--- disconnect ---
return the list of seeds of the matching servers .
get the stack trace for this tag .
returns the code of the specified resource . the name of the facelet is the same as the { @code $ } class name of the class name .
/ *
returns the realm name .
/ * ( non - javadoc )
{
--- scan volt volt ---
returns a { @code promise } for the given { @code key } .
{
{
{
get the authentication data for the authentication data
optimize the subject method .
initialize the .
reloads the cache for this cache .
start the scheduled task .
stop this channel .
get the singleton instance of the given locale .
get the singleton instance of the specified host .
{
destroy the .
called by the to synchronise the .
/ * this method is called to process a file .
/ * find the files in the given file .
scan the given collection of fileinfo .
process refresh file .
returns the next endpoint .
notifies the appropriate hook to fail .
notifies the appropriate failure of the specified job .
notifies the appropriate tables for a given task .
execute task .
cancel the specified task .
this method is called when the task encounters a task that is already in the cache .
{
{
sort the list of files in the given directory .
checks if the given name is a valid name .
read the rss entry from the stream .
decode the next { @link } from the { @link httpservletresponse } .
process the main screen .
move the file to the given url .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
returns a set of sets as a set of set keys .
constructor .
set the field that owns this object .
set the record to use for the target record .
get the current character in the current context .
set up all the screen fields .
returns a new object that contains the contents of the given import data . <p >
execute the query .
collects all values from a collection of group keys .
update the metric for the given group .
update the metric with the given group with the given group name .
add a set of aggregate data to the aggregate
converts a object to a byte array .
set the value of this field from the current state .
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
calculate the md5 digest of the given string .
constructor .
this method is called when the field is not set .
get the sub record .
create a sub - record object .
returns a new { @code } describing the given alluxio path . the returned { @code } must contain a prefix of the ufs status .
this method is used to avoid the overhead of the same local and
ds method to activate this component . best practice : this should be a protected method not public or private
ds method to deactivate this component . best practice : this should be a protected method not public or private
init this object .
create a new .
returns the class name of the record class .
returns true if this node is a leaf node .
gets the value of the property .
returns the duration of the current time .
gets the value of the group of the group of the group .
returns true if the requested property is set ; false otherwise .
sets the value of the provided property to the provided value .
gets the value of the requested property .
check if mandatory property mandatory .
check if the given database is a persistent property .
get a list of all the properties in this list .
sets the value of provided property to the provided {
converts the given key to the current rfs name .
delete objects from the list of keys .
returns the length of the listing to be used .
returns the parent path for the given path .
check if the path is a path separator .
returns the name of the child of the child .
returns the object of the file or null if not found .
get the status of the specified path with the given path .
/ * ------------------------------------------------------------
remove prefix from the path .
retries the retry exception if retry is not null .
checks if the retry attempt is not retried .
get the table name .
add this field in the record s field sequence .
add this key area description to the record .
process the html code .
process the command line parameters .
process the output .
<code > optional string = 1 ; < / code >
<pre > the ip address address . < / pre >
<code > optional string version = 4 ; < / code >
calculates the corrupt {
removes the journal from the journal file .
deletes a single file .
tokenizes the text in the string .
checks if the token is a valid token .
update the tenant .
check if the given store is a system os .
get all columns of the given store .
get the list of all the row keys in the store .
get the column name from the store .
get all rows in the store .
get the { @link } for the given rowkey .
retrieve all conflicting keys for the given keys .
add parameters to the parameters
get the definition of the given application definition . the returned table may be null if the table does not exist . if the table does not exist it will be created .
returns the string for the given variable name .
returns the input string of the input body .
get input stream to be used .
returns the content type of the request .
returns the accept type from the request
checks if the is a compressed compressed form .
reads the body of the request body .
stop the time in milliseconds .

init this database .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
/ * ( non - javadoc )
/ * ( non - javadoc )
get the current instance of the current instance
returns whether the current user has the current lur .
get the current instance of the { @link } instance .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
returns the resource name for the description of the class .
returns whether the class name is available .
{
<editor - fold desc = annotation methods >
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
visit a field .
visit a method .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
sends a request to the response .
send a request to the lrs .
send a request to the response
constructor .
add a parameter to the database .
send a message to the server .
reconnect the socket connection .
send the message to the given response
returns the response headers for the given response .
reads the given { @link } from the given { @code } .
read the header data from the stream .
reads the contents of the chunked message body into the stream .
create the socket
set the socket options .
send request body to the stream .
create a keyspace with the given keyspace and keyspace name .
update the keyspace with the specified qualifiers .
delete the keyspace keyspace .
create a new { @link exception } with the given { @link exception } .
creates a new { @link } from the given resource .
create a { @link } object with the given { @link } .
insert a table into the database .
store the table name .
convert the string representation to a string representation .
/ * returns the for the .
returns a string representation of the form that represents the string representation of the form <code > / code > .
set the session for the given tablename .
create a proxy exception with the given { @link } .
create a new { @link } from the given { @link repository } .
install a { @link } to find the { @link } for the given { @link } .
check if the version is newer than the version .
validate the given string . <p >
validates the product of the list of .
create a new { @link } instance .

prints the help message to the command .
parses the command line arguments .
main method .
wait for the current thread to wait for the specified runnable .
set the { @link } to be used for the key .
{
returns the value of the property .
deserialize this object from the given json array .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
ds method to activate this component . best practice : this should be a protected method not public or private
ds method to deactivate this component . best practice : this should be a protected method not public or private
ds method to perform the ds configuration
/ * ( non - javadoc )
declarative services method for setting the server .
set the { @link } to use for the given { @link bytebuffer } .
get event from event .
declarative services method for setting the service
get the executor service .
get the schedule of the service .
ds method to add a scheduledexecutorservice to the monitor .
get the passed executor service .
ds method to set the {
declarative services method for setting the service .
sets the .
get the current buffer pool manager .
register a listener
init method .
add this object to the list .
put the string value
get the object associated with this object .
get the string value from this mdc .
put this field in the cache .
get the data field in the record .
get the raw field value .
initializes this record ( this is the first field in the record ) .
convert the key to the string representation of the form : <p > : <ul > <li > <code > / code > : author : telnet : auto - generate the following syntax :
move the message to the response .
get the map of parameters for this map .
get the string value from the current column .
move the field of the field to this field . move the field to this field .

set the security annotations on the server .
performs the action .
login config .
this method is called when the role of the dit occured .
process the security roles of the tlds .
/ * package
process the .
/ * this method is called to update the security role .

creates a new {
/ * ( non - javadoc )
create the roles
this method is used to invalidate security properties .
login the login form .
this method is used to create a message from a message .
send a message to the connection .
send a message to the message delivery .
sends an xaresource to the destination
validate the destination .
this method is called by the to send a message to the .
send a message to the destination .
/ *
checks that the priority is not corrupt .
validates that the ga heartbeat datum is valid or not .
validates the delivery time delay millis .
/ *
/ * ( non - javadoc )
ensures that the response is not null .
check if the message is a msg message .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is called when the is restarted .
loads the webapp - relative location from the webapp - location directory .
unbind the file location .
{
invokes the method call .
validate the given { @link } .
validates the parameters of the given parameters .

substitute the uri of the uri .


create a json object from the given command name .
get the application definition for the given name .
parse the given object .
returns the method .
prints a string to the stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
builds the functional interface implementation .
print the contents of the byte buffer to the specified value .
/ * ( non - javadoc )
print a double to the underlying debug log .
/ * ( non - javadoc )
/ * ( non - javadoc )
print the value of the specified long to the system . out .

/ *
print the value of the specified string .
/ *
/ * ( non - javadoc )
/ *
/ *
flush the request to the current state .
stops the thread .
set up the screen input fields .
answers the matches of the given { @code } .
<code > optional . alluxio . grpc . meta . = 2 ; < / code >
<code > optional . alluxio . grpc . meta . = 2 ; < / code >
applies the specified { @code } to the given { @code mode } .
returns a new producer which is executed when the function is executed .
continues a block of the rails and canceling the result .
returns a new { @code } that mirrors the specified { @code fallback } to be cancelled and returned by { @code } .
returns a new { @link } which is the first one of the items of the { @code } s .
applies the given { @code fallback } to the given { @code fallback } .
returns a new { @code } which applies the function to each element of this { @code function } .
add two points together .
combine two paths .
applies the specified { @code } to the specified value .
compose the given function to the supplied target function .
this operation takes two arguments and passing the resulting { @code } and { @code } and { @code } and { @code } .
applies a range of elements to the specified target .
composes two { @link } objects .
applies a { @code } to this { @code observable } .
returns a new {
apply function to apply jsonobject to ternary function .

transform the given { @link } into a { @link } .
transform the supplied { @link graphql . } to { @link } .
create a { @link } for all the { @link } objects .
apply the given { @link function } to the given { @link } .
flat function :
applies the supplied { @code function } to the transformation .
creates a { @link } based on the given { @code } .
return a describing the for each option .
add a { @link } to a { @link } .
flat function : // stackoverflow . com / a /
transform the given { @link planar } into the given { @link } .
create a new { @link } and return the substituted { @code } .
add a { @link } to a { @link } .
flat function : <br > <pre > <code > = ; = < / code >
split this envelope into a { @link } .
creates a { @link } based on the supplied { @link } .
{
returns a {
apply the natural order of the { @link comparable#compareto ( function ) } function to this { @link comparable } .
returns a predicate that evaluates the predicate to the specified target function .


returns a { @link java . util . function } { @code options } .
maps the value mapped to the key value pair .
flat a map of keys and values .
creates a new { @code } instance .
returns a new option of the option .
get the table name .
add this field in the record s field sequence .
add this key area description to the record .
add a key pair with the given key .
put the value into the map .
puts the given key into the map .
put a map of values into a jsonarray .
put a string into a collection of objects .
creates a new json object containing the values of the specified object .
create a new { @link entry } with key value .
create a new { @link entry } .
create a new array of objects .
creates a new array of {
create a json set of objects .
creates a new { @link } containing the given { @link } .
<code > optional . alluxio . grpc . job . options = 2 ; < / code >
<code > optional . alluxio . grpc . file . options = 2 ; < / code >
returns the owner of the canonical representation of the owner .
returns the canonical information .
returns the canonical representation of the other version .
gets the bucket bucket .
insert the given entry to the bucket . the ttl will be reset to the entry .
removes the given entry from the given inode .
get the expire events of the bucket .


set the value .
returns all interfaces of the classes that are superclasses .
constructor .
free this screen .
set the filter info for the remote server .
checks if this message is in the queue .
this method is used to check the requirements for the .
add a listener to be notified of changes to the listener .
remove the filter from the trace .
checks if this filter is a valid filter .
remove a listener from the list of listener .
this method will return the new listener .
set the message to use for the message .
check whether this remote filter is listening on .
update the filter filter .
update the filter graph .
update the tree .
filter the map of objects .
set the filter tree .
acquires resources from the pool .
<p > . < / p >
{
start the {
update the checksums for the file .
update the upload checksums for the specified update checksum .
initialize the
load a file from the file .
saves the checksum of a file .
adds a handler to the pipeline .
stop the server .
register a new file in the file .
register a file from the file system .
start the server .
/ * ( non - javadoc )
initialize the .
/ *
clear the remote address from this list .
/ * ( non - javadoc )
update the body of the request .
skip the whitespace - terminating white spaces .
/ * private boolean ( string )
<p > <span class = changed_modified_2_0 changed_modified_2_2 > / span > action . < / p >
----------------------------------------------------- stateholder methods
-------- stateholder methods -------------------------------------------
/ *
/ *
/ *
get the request for this request .
send a response body to the response body .
get the column type for the given column .
get the column name of the type of the column type .
returns the column position of the column in the column .
this method is called by the reader to send a response to the response body .
check the {
called by the to ensure that the response is not valid .
this method will be called when the message is ready .
sends an error message to the response .
asynchronously requests the response message from the input stream .
handle a new
/ *
/ * ( non - javadoc )
this method is called to write the response to the end of the message .
asynchronously the given channel asynchronously and pushes them to the list of buffers that are ready to be sent to the outbound channel .
process the error message .
this method will return the response body .
/ *
/ *
this method will return the request body for this connection .
{
/ *
retrieve the content of the request body as a byte array .

initialize the .
/ * ( non - javadoc )
{
{
-------------------------------------------------------------
finds a {
finds the file system file system .
finds all the files in the specified directory .
returns the commerce address notes in the ordered set where commercecountryid = &#63 ; .
returns the { @link } for the given alluxio permission .
{
<code > optional . alluxio . grpc . file . options = 2 ; < / code >
<code > optional . alluxio . grpc . file . options = 2 ; < / code >
gets the resourcebundle bundle resource bundle .
gets the bundle resource bundle .
<p > set the of the model . < / p >
sets the caption category for the given category .
sets the company .
returns true if the value is not set .
returns true if the result is true .
returns true if the result is a .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets all messages in the stream that are currently sent in the stream .
restore bindings for the given bindings .
returns the value of the given expression as a string .
sets the value of the given expression to the bindings .
<p > <span class = changed_modified_2_0 > / span > el expressions . < / p >
convert the string to a pattern
returns true if this rule is currently being tested .
/ * ( non - javadoc )

restore a list of interned objects from the list .
set the value of the given property to the value .

converts a string value to a list of strings .

get the set of { @link } s .
get the object from the given .
get the for the .
get the for the .

{

{
validate the given directory .

creates a language - language language matching the language .
build a jsonarray containing the keywords in the json format .
get the measure of the jsonobject .
/ *
<editor - fold desc = object >
add a cookie
sends a notification to a remote me .
set the date header of the specified date header . this method is called when the server has been created .
/ * ( non - javadoc )
/ * ----------------------------------------------------------------------
get the list of eips from the class hierarchy .
resolves the object to the end of the object .
{
checks if the token is a valid token .

checks if the token is a valid token .
disable all ocsp responder in the
initializes the .
invokes the action .
/ * ( non - javadoc )
================
===========
-----------------
===========
=========
start the process with the given time and time stamp .
release the resources associated with this object .
/ *
close the source file .
lock this bookmark .
unlock this record from the remote server .
get lock table name from database .
get the address of the session .
return the { @link } for the current thread .
sets the { @link } for the { @link } .
return true if the current thread is active or not .

update the timeout in the
/ * ( non - javadoc )
/ * ( non - javadoc )
start the timer .
this method is called to reset the alarm state of the alarm .
stop the timer .
close the timer .
/ * ( non - javadoc )
/ * ( non - javadoc )
save the given key and arguments .
add a resource to the server .
rollback the resources to rollback .
add a new key - value pair to the list of user s key .
/ *
/ * ( non - javadoc )
/ *
directs the recovery log to the server .
save a new key to the given key .
add a new key with the given key and key .
returns true if the current user has at least one mandatory events .
{
/ * ( non - javadoc )
{
--------------------------------------------------------------------------

declarative services method for setting the location configurationadmin service reference
/ * extract the mime type from the file .
returns the file extension for the given path .
check if the given path is a directory .
get the file name of the service provider .
get the location of the location .
get filename from the given path
print a line to console .
print a collection of charsequences to the console .
print the print stream of paragraphs .
delete the file from the directory .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
builds the functional interface implementation and if previously provided calls the consumer .
returns the list of component classes .
returns a list of the types in the given component .
initialize this component .
region > ( programmatic )
called when the exception is received .
creates a new { @link } from a { @link binaryoperator } .
defer the given { @link } to the future .
creates a { @link publisher } from a { @link publisher } .
returns a new { @link } that will be executed in the future .
gets the span .
<p > . < / p >
<p > . < / p >
set the filter filter .
set the attribute .
sets the format of the .
specify the filter to be used for the filter parameter types .
get a map of parameters for a parameter .
{
this method is used to validate the value of the request parameter .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
{
check whether the value is a valid xml validator .
/ * ( non - javadoc )
this method is used to ensure that the { @link uicomponent } instance is not supported .
get the string value of the value of this expression .
get the string value from the { @link javax . money . } .
this method is used to retrieve the value of the { @link javax . validation . } value for the given { @link javax . validation . } .
returns the encoded image producer .
collects the { @link } from the { @link } .
converts the { @link } to json .
returns the value of the given column for the given .
returns the active flags for the given .
collect the configuration from the configuration
convert a value to a double .
converts a value into a double value .
add lines to the end of this list
updates the current lines in the specified offset .
returns the for the current connection .
clears the buffer .
removes all the last known last { @code } values .
deletes the item from the android app .
returns the for the image .
returns the cached image for the image .
sets the headers for the headers .
waits until the lock is reached .
/ * ( non - javadoc )
/ * return true if the message is not null .
{
/ * ( non - javadoc )
this method is called by the aih to ensure that the consumer is ready for delivery of the firehose . <p > this method will return whether the next coord is available for the message delivery .
/ * ( non - javadoc )
/ * ( non - javadoc )
remove the consumer consumer consumer from the consumer list
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
overiding the consumer method to create a consumer that has a particular
/ * ( non - javadoc )
/ * ( non - javadoc )
deletes the bifurcated consumer from the remote me .

this method is called by the to add a new transaction to this rme
/ * ( non - javadoc )
this method is called to remove the from the messagestore .
/ * ( non - javadoc )
this method is called by the event to dispatch the message to the mru
called when the consumer is called .
this method is used to reset the current state of the event to be used .
/ * ( non - javadoc )
/ * ( non - javadoc )
check whether the message is a valid number of guesses .
/ * ( non - javadoc )
get the reference stream for the subscription
/ * ( non - javadoc )
remove a destination from the consumer
this method is used to delete the from the .
/ * ( non - javadoc )
log a debug message .
get the timerservice associated with the destinationhandler .
log a warning message .
this method is used to check whether the stateful state is a deletion
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
search for a message space matching the search locator . this method will search for a message that matches the search index and the predicate .
{
delete a bo s ip .
{
{
<p > return the value of the <code > / code > property . < / p > <p > contents : the size of the screen .
<p > set the value of the <code > / code > property . < / p >
<p > return the value of the <code > / code > property . < / p > <p > contents : javascript code executed when the is pressed .
<p > set the value of the <code > / code > property . < / p >
<p > return the value of the <code > / code > property . < / p > <p > contents : javascript code executed when the is pressed .
<p > set the value of the <code > / code > property . < / p >
creates a filter from the given object .
build a filter from string
creates a filter instance from the given { @link arraynode } .
check that the field is not present .
checks if the field is a reloadable type .
check if the field is a {
check if the field is annotated with a nonnull annotation .
returns true if the given type is a descendant of the given type .
get the annotation .
builds a field string with given name .
recursively descend through the path in the split order .
{
check if the given value is a string .
get the file from the table .
the key .
{
process the headers of the request .

returns {
appends a line to the given directory .
appends a file to the given collection .


update the settings of the jtextfield .


indexes an index at the given index .
/ * ( non - javadoc )
opens the image for the specified component .
check if file is a file or directory .
returns the extension of the given filename .
applies the given { @code filter } to the { @code } .
add a method to a solution .
{
{
returns the maximum size of the specified { @code max } value .
returns a string representation of the form that separates the specified prefixes .
splits the given range in the given range into the string representation .
returns a string representation of the phone number .
selects the text at the end of the list .
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )


{
{
{
{
{
this method is used to generate the for the user .
returns the url for the given name of the given value .
computes the last seen value of the given graph .
executes the given { @link action } .

load the specified object from the database .
loads all objects from the given class .
executes the given action on the transaction manager .
executes the given action on the current thread .
/ * ( non - javadoc )
set the level .
write data to the byte array .
log a number of bytes in the given class .
write data to the given class .

<p > invoke . < / p >


print a log event .
creates a new .
{
remove the specified object from the queue .
{
this method is called when the slice is done .
{
{
moves the entirety of the specified sight . during the move operation will be moved to the current existing state . the current current current current current current current current current storage or move the current current state of the new state . if the current current current current store is available the current value of the new entry is moved to the
returns the charset of the message as a string .
adds a new { @link } to the given list of { @link } .
parses authentication header from the current request .
returns a string hmac hmac sha - 256 random key .
creates a new simplematrix from the given probability .
calculates the number of rows in the window .
returns the bean .
{
{
sets the bean property .
set the bean provider .
{
{

remove bean from scratch
{
{
adds a new message to the list of metadata metadata .
creates a new message payload with the payload .
checks if the field is a valid jcr field .
validate service .
validates a string to see if it is a valid address .
<p > . < / p >
validate ifd .
checks if the given url is a valid keyword
this event is fired when the user clicks on the app .
get the for the .
{
get the stack trace for the given exception . this method is used to create a stack trace element . this method is designed to be called from within constructor documentation .
returns the stack trace of the given throwable as a { @link messagehandler } that occur when the throwable of the { @link stack } is not declared .
{
{
{
sends a post request to the endpoint url .
put http : // www . . org / / . txt . html
returns the json response as a string
{
read the contents of the given byte array . the byte buffer will be the same size and the offset is less than the number of bytes written .

add a {
adds an {
add a codec to the codec registry .
process the comment .
builds the .

returns <tt > true< / tt > if this map maps one or more keys to the table .
returns the key for the key .
override preparepaintcomponent in order to set up the .
setup the .
marshall the given parameter object .
marshall the given parameter object .
add a parameter to the query .
adds the parameters of the given parameter with the given name .
add parameters to the query string
add parameters to the first one
<p > a list of the specified values . < / p >
<p > a list of the name / value pairs that identify the specified service . < / p >
<p > a list of <code > / code > objects . < / p >
<p > the paths of the targets that you want to add to the support . < / p >
<p > the patch / destination - patch patch source and destination . < / p >
returns the package name of the class .
<p > the patch / destination configurations . < / p >
<p > the patch / baseline limits . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
/ * ( non - javadoc )
cancel all waiting for the current thread .
stop the alarm .
fired when the alarm is fired .
marshall the given parameter object .
{
<p > a list of event categories to describe . < / p >
<p > the list of event categories that are associated with the specified categories . < / p >
<p > a list of event categories to which the event triggered . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
paints the given .
marshall the given parameter object .
gets the request .


release the request .
get the response message from the response
get the response information for the current site .
get the response information for the current {
release the response from the response .
this method is used to retrieve the { @link } of the { @link } .
/ *
renders the diagnostics .
<p > creates a new system file system . < / p >
<p > creates a target . < / p >
<p > deletes the specified system file system . < / p >
<p > deletes the specified mount point . < / p >
<p > returns the file name of the file . < / p >
<p > describes the specified lifecycle configuration . < / p >
<p > describes the targets of the target . < / p >
<p > returns the detailed information of the targets that the specified hosted zone . < / p >
<p > modifies the targets of the target . < / p >
{
<p > sets the specified configuration to the specified targets . < / p >
<p > updates the specified system file system . < / p >
<p > attaches a list of instances to the specified instance . < / p >
<p > attaches a target group to the specified load balancer . < / p >
<p > attaches a list of instances to a specified load balancer . < / p >
<p > deletes a scheduled action . < / p >
<p > updates the specified scheduled action group . < / p >
<p > attaches the specified action to the specified targets . < / p >
<p > creates a scaling group . < / p >
<p > creates a configuration configuration for the specified launch configuration . < / p >
<p > creates a new aws cloudformation aws region that you want to insert or update . the tags are updated to be updated with the <code > / code > and <code > / code > . < / p >
<p > deletes the specified scaling group . < / p >
<p > deletes the specified launch configuration . < / p >
<p > deletes the specified lifecycle . < / p >
<p > deletes the notification notification notification notification notification notification notification notification notification notification notification that you want to delete . < / p >
<p > deletes the specified policy . < / p >
<p > deletes a scheduled action . < / p >
<p > describes the account limits for the account . < / p >
<p > describes the types of reputation classifiers that are associated with the specified detector . < / p >
<p > describes the automatic scaling groups . < / p >
<p > describes the specified instances . < / p >
<p > describes the specified notification types . < / p >
<p > describes launch configurations . < / p >
<p > describes the specified types in the specified aws account . < / p >
populate tree data .
<p > returns information about load balancers associated with the specified load balancer . < / p >
<p > returns information about the specified load balancer . < / p >
<p > describes the specified lifecycle hooks . < / p >
populate tree data .
executes the path of the tree .
<p > describes the policies associated with the specified policies . < / p >
<p > lists the types of the specified fleet . you can specify a list of metric types to retrieve the types of the metric type . you can specify a list of metric types to retrieve the types of the metric type . you can specify a list of metric types to retrieve the types of the metric type . you can
<p > describes the specified scheduled scheduled instances . < / p >
<p > describes the specified policy types . < / p >
<p > describes the notification configurations associated with the specified sns topic . < / p >
<p > provisions a target group target . < / p >
<p > detaches a list of instances from the specified instance . < / p >
<p > describes the specified scaling state . < / p >
<p > detaches a stack from the specified collection . < / p >
<p > returns information about the specified interaction . < / p >
<p > disables the metrics for a specified metric . < / p >
<p > sends a status to the specified amazon workspaces . < / p >
<p > adds a lifecycle hook for a specific lifecycle . < / p >
<p > sets the notification configuration for a notification . < / p >
this method is called by the osgi service manager .
returns the service class for the specified service .
<p > halts the specified amount of gpu to a specific instance of a lightsail instance . < / p >
<p > enables the metric that you want to inspect . < / p >
<p > creates a new policy . < / p >
<p > sets the specified scaling policy to the specified aws account . < / p >
<p > updates the specified scheduled action group . < / p >
<p > deletes a specified hosted - time policy . < / p >
<p > resumes a <code > / code > instance that you want to resume . < / p >
<p > returns the capacity of the specified capacity . < / p >
<p > describes the specified instance . < / p >
<p > sets the protection instance of a running instance . < / p >
<p > suspends the specified elastic ip address . < / p >
<p > cancels a scaling group . < / p >
<p > updates the specified scaling group . < / p >
<p > a list of job summaries that the job execution is executed . < / p >
<p > the list of job executions . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
override preparepaintcomponent to this method is to allow setting the user to the .
gets the field from the class .
get declared declared field declared in the class hierarchy .
returns the field of the specified class .
returns the list of fields for the given class .
get a method from a class name .
get declared method getter .
returns methods of the class .
finds a method annotation .
get class class class from class .
returns the class of the class .
create a new instance of the given name .
create a new property from the properties .
marshall the given parameter object .

/ * ( non - javadoc )

return the locale for the first locale .
compares two values .
runs the given in the







add a single query .
{
/ * ( non - javadoc )
{
inserts the item at the end of the queue .
paints the given .
marshall the given parameter object .
<p > the request parameters . < / p >
copy the contents of the given { @link inputstream } to the given { @link inputstream } .
copy the contents of the specified inputstream into the output stream .
closes the stream and releases it if it fails or is closed .

registers a new { @link } to be executed .
closes the resource .
marshall the given parameter object .
<p > the steps between the steps steps . < / p >
describe the steps for the steps .
<p > a list of attachments that are related to the vpc attachments . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .

/ * ( non - javadoc )
handles the action .
get suggestions from the given array of the given type .
set the set of suggestions for the given list .
{
sets the row col and column values for the specified column .
{
{
{
returns the row col in the row col .
get the value of the bean property .
set the value of the bean property .
sets the request method { @code } and { @code } and { @code } .
executes the given action and returns the response .
executes the async executor asynchronously .
executes the specified async request .
{
get the content of the request
<p > a list of grants enabled for the specified association . < / p >
<p > a list of grants enabled aws account id . < / p >
add a key to the map .
find the key for the given { @link publickey } .
<p > the source algorithms . < / p >
<p > the source source array . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
/ * ( non - javadoc )
initializes the { @link } instance .
executes methods on the given methods except the result of the method is executed .
execute method for target class
sets the permissions to the user to the user .


marshall the given parameter object .
<p > authorizes the request to be enrolled by the <code > / code > request . < / p >
<p > disables the specified filter . < / p >
<p > enables the specified batch of job execution . < / p >
/ * ( non - javadoc )
<p > creates a new service . < / p >
<p > creates a new instance of a member . < / p >
<p > declines a device . < / p >
<p > deletes a specified namespace . < / p >
<p > deletes an amazon ebs amazon elasticsearch amazon chime voice connector . < / p >
<p > deletes the specified member accounts . < / p >
<p > deletes a solution . < / p >
<p > disables the specified amazon ec2 instance on the specified amazon chime vpc . < / p >
<p > disassociates the specified master account from the master account . < / p >
<p > removes the specified member from the specified group . < / p >
<p > lists the solution s models . < / p >
{
<p > returns information about the specified user . < / p >
<p > returns the summary of the findings findings returned by the specified findings . < / p >
<p > gets the results for a specified number of steps . < / p >
<p > gets information about the associations that are tagged with your account . < / p >
<p > retrieves the details of a specified device . < / p >
<p > returns the master account . < / p >
<p > retrieves the information for a member . < / p >
<p > returns a list of skills . < / p >
<p > lists the notification databases configured for a notification . < / p >
<p > retrieves the list of available licenses for the specified amazon ec2 instance . < / p >
<p > lists the list members of a member . < / p >
<p > updates findings . < / p >
<p > updates the specified <a > / a > objects . < / p >
marshall the given parameter object .
/ * setup the scroll pane of the background
add a triangle to the end of the line centered at ( x2 y2 ) .
add a vertex to the particle .
start the vertex .
render the given {
adds a edge to this graph .
paints the given .
prepare the given { @link } .
process the scroll position .
render the given list of items in the given list of items .
paints the build .
renders the given list of custom items .
resolves the value of { @code config } as parameters .
marshall the given parameter object .
<p > the ids of the training executions for the specified amazon ec2 container instance . < / p >
<p > the ids of the training launch options . < / p >
<p > the list of option descriptions . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > the list of the option . < / p >
paints the given .
<p > the names of the because the reservation supports the specified option . < / p >
{
try to load the given key from the context .
<p > the list of the option group that are currently in the option . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util
<p > the list of option group . < / p >
<p > the list of option group . < / p >
<p > the option group for the option group . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > the list of option group . < / p >
<p > the list of option group . < / p >
build the default keystore
<p > the list of option group . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
override preparepaintcomponent in order to set up the .
adds a new to the group .
adds the creation buttons .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
log a string
paints the given .
renders the given spfpersona .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
get the type of the .
reset the data .
marshall the given parameter object .
returns a {
returns a grpc instance from the specified status code .
returns the current status line .
specifies the rule s rule .
validate the given path against the given path .
validate the validation type .
validate the given object .
validates that the given exception is a string or throw exception .
validates that the given { @code value } conforms to { @code } .
adds a new component to the tree .
remove the component from the component .
remove a component from the tree .
adds a parameter to the model .

sets the height of the target target target .
add a new option to the model .
remove a link option from the model .
returns the map of keys for the specified keys .
calculate the sin angle angle between 0 and pi - 1 .
this method calculates the value of the { @code } and { @link } .
checks whether the value of the two { @code } is a superset of the given { @code boolean } .

returns the line numbers for the specified line .
checks if the list of is a line number .
returns the meta data for a given method .
returns true if this node is visible .
{
{
adjusts the count of the node to the specified node .
add a word word .

adds a number to the number of times the number of times the number is added .
adds a number to the list of abbreviations .
add a data dataset to the dataset .
sets whether or not the mandatory property is mandatory .
{
returns true if the input is not found .
merges the given word into this one .
merges the word bundle with the given word .
convert data to string .
recursively recursively descend through the tree
add the specified handler to the client .
start a new .
add a list of http / response / metadata / http / client / list .
add a new to the queue .
upload the file to the client .
deletes the specified key / value pair .
creates a new request for a new bucket .
creates a new request request for a new session .
marshall the given parameter object .
creates a new request request for a target stream .
creates a new request configured to create a new request configured to create a new request configured to create a new request .
returns the commerce warehouse item where commercewarehouseid = &#63 ; and cpinstanceuuid = &#63 ; or throws a { @link } if it could not be found .
returns the number of commerce warehouses where the requested option has the primary key or throws a {
returns all the commerce warehouse items where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
returns the first commerce warehouse item in the ordered set where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
returns true if the current state is a simple symbol .
returns the constant of the given .
returns true if this { @link mergedvertex } is not in this { @link } .
calculates the distance between two { @link } s .
create a new cursor for a given state .

calculates the of the item that is the item referred to by the item .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
<p > the content of the video . < / p >
<p > the attributes that you want to inspect . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > the attributes of the content - type . < / p >
<p > the association of the instance status . < / p >
marshall the given parameter object .
check whether the geometry is a geometry
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
returns the next long value .
updates the range of percentiles where the value is a long value .

creates a new view for the specified view .
determine whether the given type matches the type of the given type .
convert a {
marshall the given parameter object .
<p > the metadata of the intent to the request . < / p >
<p > the metadata of the intent . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
set the value of the property .
get the value of the pan column
deserialize a json string to a json string .
marshall the given parameter object .
reads the next number from the given reader .
marshall the given parameter object .
filter the results
start snippet : predicate
get the property name from the system environment .
replaces the component with the properties from the properties .
loads a properties file from the classpath .
loads the properties from the given property file .
loads a property from the properties file .
loads properties from properties .
checks if the relation is a persistent sfsb .
get the uri from a given resource .
returns the averaged for the given time .

returns the distance between two points .
parse a float value from a string
parse a string value .
parse a long value
parse a double value .
<p > the list of <code > joblistentry< / code > object contains information about the node s entries . < / p >
<p > the list of <code > cluster< / code > objects containing the <a > / a > objects that were retrieved . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection
upload file to upload the given upload .
upload file to download the file upload .
marshall the given parameter object .
handle the endpoint from endpoint and response .
returns a { @link } that encodes the given { @code } to the payload of the given { @code } .
returns a { @link } that encodes the results of success response .
serialize a template object into a string .
returns a { @link } that encodes the input text into an html document .
returns a { @link } that represents a payload of a <a href = http : // wiki . org / wiki / . html > http : // wiki . org / wiki / xep - .
middleware that will be used for a new to the user .
middleware that will be used for updating a new response to the client .
create a new checkpoint of the current transaction .
commits the transaction .
rollback the transaction .
scan the scan
set the current barrier on the server .
wait for the timeout to be satisfied by the specified wait time . if the timeout is reached then the timeout is returned . if the timeout is reached then the timeout is returned . if the timeout is reached then the timeout is returned . if the timeout is reached then the timeout is returned . if the timeout is reached then
marshall the given parameter object .
<p > the ipv6 addresses that are associated with the vpc . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
<p > information about the ip addresses in the subnet in cidr block . < / p >
<p > information about the ipv4 addresses associated with the block . < / p >
<p > the block ipv6 addresses that you want to remove . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
scans the specified scan from the specified scan .
copy the document to the scan .
sort the list of { @link } s .
find the maximum of two ids .
{

get values for this map .
flush all response data
remove the specified timeout from the request .
marshall the given parameter object .
marshall the given parameter object .
moves the next record to the next record .
returns the value of the specified field in this field .
returns true if the specified field is of the specified type .
{
sends a request to the handler manager .
build a new instance of { @link } .
get the list of all the { @link } s .
<p > the translated topic . < / p >
<p > the list of persons matching the translated revision in the specified address . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util
{
marshall the given parameter object .

marshall the given parameter object .
set the value of the field .
marshall the given parameter object .
<p > a list of log events . < / p >
<p > a list of events that were processed . < / p >
generalize format method for creating a { @link string } with the given pattern .
generate the pattern for the pattern string .

/ *
/ * ( non - javadoc )
set the name of the value to the value .
creates a new properties object .
marshall the given parameter object .
get the tickets .
add frozen bucket .
<p > the endpoint configuration details . < / p >
<p > the endpoint configuration details . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
computes the hash code of the given triplet .
calculates the hash code for the given seed value .
computes the hash code of the given seed value .
computes the hash code of the given seed value .
computes the hash code of the given object .
puts the given item into the queue .
add a new multi - item list to the list of items .
put a collection of envelopes to the queue .
create a new interceptor instance .
creates a { @link } from project { @link } .
build the {
create a new instance of the class .
marshall the given parameter object .

<p > the list of errors that were encountered by the collection of items . < / p >
checks if the job is a valid job .
marshall the given parameter object .
get the value of a string .
/ * ( non - javadoc )
convert a source to a .



finds the first one occurrence of the regex pattern .
add a value to the end of the string .

marshall the given parameter object .
marshall the given parameter object .

get the bucket name of the bucket
loads all keys of the specified file .
compares this <code > / code > to the <code > / code > .
returns the metric label for the given label .
convert a object to a object .
convert a primitive object to a primitive type .
compare two byte order .
compares two objects with the two two objects .
create a new instance of this class from the given source .
////////////////
<p > the list of groups that the group is assigned . < / p >
<p > the list of group keys . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setgroups ( java . util . collection ) } or { @link #withgroups ( java . util . collection ) } if you want
marshall the given parameter object .
creates a new instance of the record s representation of the given record .
retrieves a list of { @link } s from a given set of properties .
parse a string to a string .
update the payload of the current connection .
{
returns the {

marshall the given parameter object .
remove from the
returns the list of rdf types that are enums .
converts a {
converts a { @link object type type } to a { @link type } .
convert the object to a string .
convert the value to a { @link } object .
transform the value of the object to a byte .
cast a object to {
converts the value to an integer value .
converts the value to long value .
transform value value to value
converts value to primitive value .
cast a object to a char value .
returns true if value is not null or if the value is not null .
converts a value string to a string .
marshall the given parameter object .
returns the children of the named { @link } .
marshall the given parameter object .
returns the children of this object from the current state .
marshall the given parameter object .
checks if the given { @link invocationcontext } is not assignable to the given type .
returns a list of all the components of the given { @code filter } .
returns a new filter that supports the given { @code value } to the { @code } .
returns a new filter that will be used to remove the value from the given { @code value } .
returns a new filter that will check that the specified value is greater than the specified value .
returns a new filter that supports the specified { @code value } to the specified value .
filter the specified value against the specified value .
returns a new filter that will be used to check that the specified value is equal to the specified value .
marshall the given parameter object .
write the given to the output stream .
creates a new iterable whose source iterators contains the elements of the given collection .

recovers the log .
creates a new object .
release the data structures .
/ * ( non - javadoc )
initializes the bulk item .
{
shuts down the .
schedule a task to finish .
schedules a task to be executed .
log out of the exception .
<p > the tags for the tags . < / p >
<p > the tags for the tags . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want

marshall the given parameter object .
returns the content of the given { @link } .
<p > the schedule for the reservation . < / p >
<p > the schedule for the task schedule . < / p >
<p > the schedule for the manual db snapshot . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > the tags that have been added to the health of the specified tags . < / p >
<p > a list of the typed objects . < / p >
<p > the record that is included in the request . < / p >
<p > the record that is created by the current instance . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
<p > the record that is the next execution of the next execution of the next execution of the next execution of the next execution .
<p > the schedule for the specified cluster . < / p >
<p > the schedule for the specified cluster . < / p >
reads the next available { @code buffer } from the current position .
sets the value of the field to the column
get the value of the field from the map .
get instancename from a .
start the section start section .
end section . 2 . 1 . 11 . 1 . 0 . 1 . 1 . 1 . 28 .
get the current time in the current section .
marshall the given parameter object .
marshall the given parameter object .

creates a datagram channel datagram builder .
sends a datagram to the server .
this method will be called by the { @link } to connect to the server .
this method writes the datagram to the datagram .
add the contents of this table to the database .
add this index to the end of this list .
remove all elements from the list
<p > initializes the pipeline .
checks if the specified { @code string } is a string .
set the timeout .
/ * ( non - javadoc )
get command line arguments
/ * ( non - javadoc )
fetch command reply
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieve a list of attribute reply .
get an attribute list from the top of the list .
this method is used to retrieve a reply from a device .
this method is called when the data is read or not .
create a new reply list .
get the list of for the given .
get the root component of the group .
get the size of the group of the list .
get group group from the given string .
find the element in the group .
add a new to the group .
remove the rhs of the rhs of the rhs .
get device member
dump the output of this window to the output .
check if the current thread is a persistent cluster

/ * return the total number of for the given type
{ @inheritdoc }
this method is called to write a device to the persistent storage .
write the attribute to the table .

marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .

marshall the given parameter object .
---------------
transform the given { @link map } s into a { @link map } .
remove the given collection from the collection .
transform the key to the given keys .
constructs a { @link map } of { @link } s from the given { @link map } . <p > the bipredicate : stages the function will be transformed into a map .
create a new value for the specified key value .
create a new key - valued value from the multimap . the map is created by the given key . the value is the value of the entries in the map .
returns an array containing the elements of this sequence .
appends all items in the receiver to this array .
appends a range of items to the end of this array .
{
resizes the array to the specified size .
ensure that the capacity is not enough to hold the size of the list .
marshall the given parameter object .
returns a splitter that returns { @code this } .
execute the deployment .
marshall the given parameter object .
<p > the validation of the action . < / p >
<p > the validation status of the validation status . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > the image status . < / p >
<p > the image statuses . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
return a new array of bytes that were flushed .
read a byte array from the given { @link bytebuffer } .
read a utf - 8 string from the buffer .
read string from buffer .
read a string - separated string to a string .
creates a new slice of the given buffer .
returns the certificate to use for the certificate to identify the certificate . <p > the certificate chain is the pem format of the certificate chain . <p > the certificate chain is the pem format of the certificate chain . <p > the certificate chain is the pem format of the certificate chain . <p > the certificate chain is the pem
{
<p > the attributes associated with the organization . < / p >
<p > the attributes associated with the account . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setattributes ( java . util . collection ) } or { @link #withattributes ( java . util . collection ) } if you
factory method to unmarshal ( inputstream ) inputstream to handle zip file .
marshall the given parameter object .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
marshall the given parameter object .
{
<p > a list of identifiers of the document prefixes to be the document id . < / p >
<p > a list of identifiers for the document types that are associated with the document . < / p >
<p > a list of identifiers for the documents that are associated with the document . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java .
apply scaling type to the scale type .
returns the string representation of the stack .

parse json response
register the given { @code addon } as the { @code addon } .

set the values for the key / value pairs .
get the list of strings for the given keys .
/ * ( non - javadoc )
build the url for the url .
init the connection .
initialize the connection to the database .
constructor .
init
/ * ===================================================================
constructor .
===============================================================
create device from the connection
marshall the given parameter object .


init the { @link } for the given connection .
get the exported style of the database .
set the tango db database .
===============================================================
===============================================================
set the timeout value for the given connection .
set the timeout .
get the timeout value for the connection .
===============================================================
===============================================================
/ *
===============================================================
ping the ping connection .
===============================================================
this method is used to generate a new connection to the database .
this method is used to check whether a connection is a valid connection
this method is used to get information about a device .

get the source connection to the connection
get the description of the user .
this method is used to retrieve the from the database .
determine if the given version is compatible with the given version .
===================================================================
check if the connection is not a valid sentinel .
===============================================================
===============================================================
report the extension of the class .
this method is called when the taglet is done .
set the subtype to the doclet .
convert value to value .
setvalue this method is invoked in order to set the value of the { @link } .

multiply var operator
generate a new operator operator operator
get a function that lazily creates a new function for the given function .
parse the given expression from the tree .
set the number of decimal elements .

bind the current type to the tree .
this method determines the current state of the current .
converts the given to a .






returns the connection to the connection .
close the connection .


query string from sql .


returns a list of the sql statements that match the given sql query .
create a persistent storage .
sets the acl for this request .
returns a list of acl entries .
create a persistent persistent data
create an ephemeral node with the given path .
create a new .
create a new connection to the given path .
add a { @link authentication } object to the client .
starts the connection .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
marshall the given parameter object .
<p > the list of all the configuration of the fleet . < / p >
modify the list of item that you want to update .
marshall the given parameter object .
<p > the members of the member . < / p >
<p > the template parameters . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setparameters ( java . util . collection ) } or { @link #withparameters ( java . util . collection ) } if you want to override
<p > the list of inline sources that are declared in this list . < / p >
<p > the names of the process . < / p >
creates a new { @link } with the given username and password .
creates a new { @link } with the given username and password .
creates a new { @link } with the given username and password .
creates a new { @link } with the given token .
returns the probability of the aux path .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
create a url for the url .
check if the response type is a list of type {
this method returns a new that is a complete response with the specified type .
=======================================================================
==============================================================
=======================================================================
==============================================================
marshall the given parameter object .
{
{
marshall the given parameter object .
marshall the given parameter object .
returns the parent child of the parent group .
checks whether the given pattern is a wildcard pattern .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
marshall the given parameter object .
==========================================================================
===============================================================
===================================================================
===============================================================
===============================================================
===============================================================
===============================================================

===============================================================
===============================================================
[ variable ]
===============================================================
{
===============================================================
==========================================================================
===============================================================
==========================================================================
==========================================================================
==========================================================================

get attribute information .
==========================================================================
==========================================================================
==========================================================================
==========================================================================
{

set attribute info .
==========================================================================
==========================================================================
===============================================================
===============================================================
----------
==========================================================================
==========================================================================
===============================================================
===============================================================
{
generate a for a device
===============================================================
==========================================================================
===============================================================
===============================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
add a referer header to the .
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
add a referer header to the .
marshall the given parameter object .
==========================================================================
==========================================================================
===============================================================
===============================================================
===============================================================
==========================================================================
==========================================================================
==========================================================================

==========================================================================
===============================================================
===============================================================
===============================================================

==========================================================================
==========================================================================
===============================================================
{
===============================================================
===============================================================
==========================================================================
issue a lock on the device
===============================================================
==========================================================================
#ifdef
===============================================================
set the value of the reliability
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
marshall the given parameter object .
/ * ( non - javadoc )
get an attribute value from the attribute set of the attribute .
return the label label or creates a label .
=======================================================================
==============================================================
=======================================================================
=======================================================================
creates a new { @link } with the given { @link object } .
marshall the given parameter object .
unions the given { @code } mapping into { @code } .
marshall the given parameter object .
<p > the schema name of the schema . < / p >
get the node ids of the cluster nodes .
==========================================================================
==========================================================================
==========================================================================
===================================================================
==========================================================================
get pipe list from tango db
==========================================================================
===================================================================
delete all the properties from the given xmlstreamwriter .
===================================================================
marshall the given parameter object .
marshall the given parameter object .
<p > the name of the values for the manual db snapshot parameter . < / p >
<p > the name of the values for the specified parameter . < / p >
<p > the name of the parameter values . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
add a new { @link } to the list of values .
<p > the tags to add to the resource . < / p >
get a read request for a given stream of the given type .
gets the variant variant for the given variant id .
get the variant variant of a variant
gets the sqs request .
gets the list of senses scattered for a given variant .
get the list of for a given .

获取一个 bean
this method is called by the to be used for the given time .
marshall the given parameter object .
gets the output formats for the output file .
get the command line for the jill command line options
<p > a list of <code > / code > objects . < / p >
<p > a list of errors . < / p >
<p > the validation warnings . < / p >
<p > the validation warnings . < / p >
compute the rate for a given .

pad the outer symbol to the given buffer .
truncates the of the given . if the rtfcolor is not a string then the padding will be returned .
add a new token to the list of token .
add a new mention to the list of mention of the mention .
add a new to the list of mention of the mention .
returns the for the given token .
/ * ( non - javadoc )
returns the string representation of the string .
main method .
this method is used to get the view s hierarchy from a specific theme .
marshall the given parameter object .
marshall the given parameter object .
update the current retirejs user .
update the user s photo .
retrieves the cached xml file .
returns a string representation of the given host name .
serialize the given file into a stream of data .
returns the ipv4 representation of the given { @code } .
gets information about the .
returns the inet6address to convert ipv6 addresses to ipv6 addresses .
gets the glossary for the specified .
convert ipv6 ipv6 address to ipv4 address
returns a range of all the commerce notification queue entries where groupid = &#63 ; .
<p > the names of the load balancer for the load balancer . < / p >
<p > the names of the load balancer for the load balancer . < / p >
<p > the names of the load balancers . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
<p > the list of metric metrics . < / p >
<p > the metric metrics for the metric . < / p >
<p > the metric data that contains the following metrics : <code > / code > <code > / code > and <code > / code > . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link
<p > the tags that have been added to the aws account . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #settags ( java . util . collection ) } or { @link #withtags ( java . util . collection
<p > the policies that are currently running . < / p >
<p > the termination policies for each resource . < / p >
returns the first commerce notification queue entry in the ordered set where groupid = &#63 ; .
returns the first commerce notification queue entry in the ordered set where groupid = &#63 ; .
returns the last commerce notification queue entry in the ordered set where groupid = &#63 ; .
returns the commerce notification queue entries before and after the current commerce notification queue entry in the ordered set where groupid = &#63 ; .

gets the .
register the
paging
/ * ( non - javadoc )
persist the new transaction .
/ * ( non - javadoc )
commits the transaction to the transaction .
/ * ( non - javadoc )
returns a range of all the commerce notification queue entries where sentdate &lt ; &#63 ; .
call the method .
set the column row type parameters
returns the names of the names of the names of the names of the names of the names of the column names .
-----------------------------------------------------------------------------
returns the first commerce notification queue entry in the ordered set where sentdate &lt ; &#63 ; .
returns the last commerce notification queue entry in the ordered set where sentdate &lt ; &#63 ; .
returns the last commerce notification queue entry in the ordered set where sentdate &lt ; &#63 ; .
<p > the list of objects . < / p >
<p > the list of hls outputs . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
removes the commerce notification queue entry with the primary key from the database . also notifies the appropriate model listeners .
apply the specified row to the current row .
build the url for the help page .
this method will add a new link to the panel .
returns the environment environment variable name from the environment variable name
initialize the properties .
initializes the .
无视private / protected修饰符 .

/ *
close all connections
notify the connection to the connection
invokes the method on the object .
called when a property is found .
get the value of a field .
set the value of the field to the setter method .
get the accessible field from the specified field .
<p > invoke a method on the specified class . < / p >
get the accessible method in the given object .
returns the method name of the given class .
<p > invoke . < / p >
get the class of the class that implements the specified class .
<editor - fold defaultstate = collapsed desc = generated code > // gen - begin : initcomponents
gen - last :
this method is used to retrieve the chains of the groups that are contained in the specified options .
marshall the given parameter object .
runs the commands in the input .
runs the input and output output output data .
runs the input pattern with the pattern splits .
runs the job .
setup job .
set the join .
set the join statistics .
setup data for the master - data set .
join the join data for a join .
set join between two topics .
sets the parameter value .
gets the year or month .
search for entities in the given query .
build url for a id
build url search url for a search url .
encode the encode to base64 encoded encode .
parse json .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
getter for - gets the token of the c
setter for - sets the number of the forms that contain the - occurrence
indexed getter for matchedtokens - gets an indexed value -
indexed setter for - sets an indexed value -
getter for - gets
setter for beginnings - sets
indexed getter for - gets an indexed value -
indexed setter for beginnings - sets an indexed value -
getter for endings - gets
setter for endings - sets
indexed getter for endings - gets an indexed value -
indexed setter for endings - sets an indexed value -

<p > enables the security hub specified . < / p >
sets the stream to be used for the given { @link outputstream } .
returns the stream at the given index .
<p > the days part of the reservation . < / p >
<p > the timestamps for the snapshot . < / p >
<p > the list of products that are associated with the specified hosted zone . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
loads the given data from the given stream .

main method .
ensures that the given { @link expression } is not { @code null } or { @code null } if the field is not null .
<p > . < / p >
start the server .
批量创建索引
insert a new account into the httpservletresponse .
update the username of the specified request body with the given username .
creates a new { @link android . observable } { @link sharedpreferences } with the given alleles .
returns the value of the given key as a boolean .
returns a boolean value for the given key and value .
delete the user
list organizations
returns a preference which is a simple value with the given key .
returns the integer value for the given key .
returns the integer value for the given key and value . <p >
search for user identities
list list
list of objects representing the list of
returns a long - value which is a long value of a given key . <p >
returns the value of the given key with the default value . <p >
returns an object describing the given key in the given list . <p >
returns the value of the given key from the specified key .
returns the long value of the given key with the given key .
returns a string containing the given key and value .
applies the given function to the given array .
sets the value of the specified element in this matrix to the specified coordinates .
gets the column value .
return the list of elements currently contained in this list .
returns a list of { @link } s that are contained in the given { @link } .
returns list of synonyms
main method .
getter for - gets
setter for - sets
indexed getter for - gets an indexed value -
indexed setter for - sets an indexed value -
marshall the given parameter object .
marshall the given parameter object .
/ * ( non - javadoc )
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
asserts that the field is not null .
asserts all the registered {
checks if the specified field is greater than or equal to the specified field .
render the velocity template .
/ * ( non - javadoc )
returns true if the next element is present .
registers the .
build a based on the options .
marshall the given parameter object .
<p > a list of device items that have been created . < / p >
<p > a list of devices that were created by the device . < / p >
<p > the devices in the specified device . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setparameters ( java . util . collection ) } or { @link #withparameters ( java . util . collection ) } if you
<p > the ids of the workspaces . < / p >
<p > the list of ota update status . < / p >
<p > the list of camera objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
{
convert a { @link } to the { @link hudson . } .
generate a hudson - gram data for the { @link } .
get a { @link } for the given key .
returns the huffman byte array .
sets the value at the given index .
{
sets the range of items at the specified position in the array .
sets the index of the array to be drawn at the specified index .
sets the element at the specified position in this array starting at index { @code index } .
sets the indices to be used for the given items .
appends a range of items to the end of this array .
************** is deprecated .
marshall the given parameter object .
<p > the list of attacks . < / p >
<p > summary information about the last detected detected charges . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
remove a database file .
creates a new instance of { @link entitytype } .
{
/ * ( non - javadoc )
marshall the given parameter object .
sort the map by key using the provided map .
check if the given nmea is a valid awt keyword
gets the descriptor associated with the given descriptor .
puts a new component in the given component .
clear all the .
setter for - sets
getter for - gets
setter for - sets
{
obtains the current local time from the specified clock . <p > this will query the specified clock to obtain the difference between this clock and returning the first time .
-----------------------------------------------------------------------
returns a new value that this factory is to create a new value using the specified field . <p > this queries this one by using the time zone of the underlying { @code localtime } and the value of the value set as the value . if this is the value forward the time to the value returned by the { @code
-----------------------------------------------------------------------
returns a copy of this time with the specified amount added . <p > this instance is immutable and unaffected by this method call .
compares this to the specified time .
marshall the given parameter object .
-----------------------------------------------------------------------
obtains a local date - time from the era year - of - era and day - of - month . <p > this returns a <code > / code > from the era year - of - era and day - of - year fields . <p > this returns a <code > / code > from the era year
returns a copy of this calendar instance with the specified date . <p > this returns a valid { @code paxdate } with the same year and the year - month is the date - time . <p > this returns a valid { @code paxdate } with the same year and the year - month is not valid . the day must
-----------------------------------------------------------------------
-----------------------------------------------------------------------
retrieves the cached session by the given workspace .
{
/ * ( non - javadoc )
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
add a progress monitor to the scheduler .
notifies the registered progress bar .
notifies the current monitor of the progress bar .
notify transformable reports
<p > the cache parameters . < / p >
<p > returns all fields annotated with { @link } . < / p >
returns the field of the given annotation .
returns the value of the { @link field } s for the given type .
marshall the given parameter object .
marshall the given parameter object .
returns the total number of neighbors for the specified point .
rem :
marshall the given parameter object .
marshall the given parameter object .
<p > the list of <code > / code > structures . < / p >
<p > the list of <code > / code > structures that describes the specified product group . < / p >
<p > information about the solution targets . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
getter for - gets
setter for - sets
indexed getter for - gets an indexed value -
indexed setter for - sets an indexed value -
marshall the given parameter object .
marshall the given parameter object .
<p > the capabilities of the specified product . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
<p > the list of users . < / p >
<p > the list of users groups . < / p >
<p > the list of attribute groups . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
main method .
getter for - gets
setter for - sets
indexed getter for - gets an indexed value -
indexed setter for - sets an indexed value -
converts a { @link byte } s into a hex string .
converts a byte array to a hex string .
converts a hexadecimal string to a byte array .
converts a byte to hex string .

<p > license specification . < / p >
<p > license configuration arns that you want to combine the license licenses . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
read line lf .
<p > a list of <a > / a > objects that contain the specified attributes of the request payloads of the request parameters . < / p >
<p > the list of <code > / code > objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
marshall the given parameter object .
runs the given input file .
reads the leaf node from the table .
set the param value of the .
marshall the given parameter object .
merge the given list of to the given list of
create a string array from the given array of { @code key } .
marshall the given parameter object .
setter for - sets
getter for - gets
setter for - sets
configures the parameters provided by the configuration .
lookup a credential for this correlation by userid .
marshall the given parameter object .
close the file .
marshall the given parameter object .
<p > a list of the queries that you want to plan . < / p >
<p > a list of <a > / a > objects that contain a <code > / code > object . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) }
<p > a list of the ids of the query objects . < / p >
<p > a list of the query ids that are associated with the query . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util
sets the button title .
commander the dialog
marshall the given parameter object .
preprocess the given string with the given string .
explain what suggests the indexentry .
assigns any additional occurrences to the given value .
<p > creates a channel . < / p >
<p > creates an endpoint that connects to the specified endpoint . < / p >
<p > deletes a channel . < / p >
<p > deletes an endpoint . < / p >
<p > describes the specified channel . < / p >
<p > describes the specified endpoint . < / p >
<p > lists the pipeline ids associated with the specified amazon chime voice period . < / p >
<p > lists the endpoints of the specified amazon chime voice connector . < / p >
<p > configures the specified channel to use for the specified hosted channel . < / p >
<p > attaches a stream to a amazon gamelift user pool and then sends it to a stream . < / p >
updates a baidu gcm channel .
<p > updates the specified endpoint . < / p >
marshall the given parameter object .
the primary function of the current expression is the primary variable of the token .
returns statements that are not in the tree .
destroy the session .
sets the value of the specified key .
login to the current user s session .

one of the tuples of the tuples in bulk .
one {
flatten the given { @code list } into a { @code promise } .

apply the view to the given scale .
marshall the given parameter object .
/ *
creates a new for the given configuration .
creates a new { @code } with the given prefix .
create a for a property .
parses command line and command line arguments .
{
clear the default prefixes for the config
clear the prefixes for the struts .
{
{
returns <tt > true< / tt > if this map maps one or more keys to the value .
{
{
{
get the value of the specified key and value .
returns the array of the property in the property .
returns the array of the specified keys .
returns the value of the property as a boolean .
returns the boolean array value .
returns the boolean array value for the given key .
retrieve the byte value of a property .
returns the byte array for the given key .
retrieve the byte array for the given key .

returns the double array value .
retrieve the double array value from the given key .
returns the prefix of the prefix .
returns the float array of the float values in the array .
returns the float array of the given key in the float array .
retrieve a value from the system property .
adds a file to the file changed .
returns the integer [] value for the given key .
retrieve a long value from the system property .
returns the long array of the specified key in the array .
get the long array value as long as a long .
{
persist the given file
restore the data from the given file .
changes the size of the document .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the short value from the property .
get short array of short array
get the short array for the given key .
{
write out the json content to the given stream .
read the content of the file .
{
/ * ( non - javadoc )
{
{
remove the mapping from the cache .
read the next read from the stream .
read the xml file from the given inputstream .
sets the default prefix for the prefix .
sets the prefix of the specified properties file .
calculates the number of bits assigned to the specified indices .
sets the default settings for this request .
set the prefix config configuration .
returns the number of fields in this map .
{
writes the given string to the output stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
loads properties from a stream .

{
compares the content s given into a space .
checks whether the given iterator contains value .
counts the number of elements in the iterator .
returns list of strings as list of values .
creates a new { @link map } containing the keys of the file and file name .
removes all properties from the database .
writes the json to the jsongenerator .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method calculates the of the atoms and the atoms specified in the .
checks if the bond is a bond .
calculate stereo line contribution between two vectors and a certain number of points .
calculate the distance between the two atoms and the atoms and the atoms of the atoms .
calculate the distance between the bonds from the bond .
/ * ( non - javadoc )
split a name into a list of { @code string } s .

returns the distribution distribution summary for the bucket name .
get all the {
sets the state of the distribution log .
{
remove a host from the space .
marshall the given parameter object .
calculate the of the given atom
calculate the sigma ranking for the given stereo stereo stereo stereo stereo stereo stereo stereo stereo
find the tetrahedral atoms in the given molecule .
find the atoms of the atoms of the given atoms .
marshall the given parameter object .

marshall the given parameter object .
<p > the ids of the db instances . < / p >
<p > the associations for the reservation . < / p >
<p > the ids of the security groups . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
marshall the given parameter object .
returns the domain class for this domain .
converts a tree of a string into a string - separated string .
verifies that the {
verifies that the token is a valid token from the token .
retrieves the access token for the given authorization code .
returns the accesstoken of the twilio the accesstoken .
returns the accesstoken that was passed to the token .
marshall the given parameter object .
<p > the agents . < / p >
<p > the agents . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override the
extract access token from the request .
encode a jwt header into the url
get the url of the request .
execute the named property .
{
{
{
{
{
{
{
get the of the .
returns the ip address from the specified certstores .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
{
marshall the given parameter object .
fetch the property from the database .
<p > the default attributes for the specified attribute . < / p >
<p > the device type that the client was launched . < / p >
read the shelx from a file .
add a to the list of .
syntactic sugar
calculates the positive neighbors for the given atom .
analyzes the order of the and returns the .
build a family with family families .
this method will return the full child of the child person .
calculate the dot product of the given root vertex .
generate a vector from a .
tries to find the breadth - first atom in the graph tree .
returns the next available node in the graph .
create the code for the tree .
returns the code for the given .
get the rank of the element symbol .

calculate the distance between the nodes in the tree
***********************************************************************************
fill the step .
marshall the given parameter object .
marshall the given parameter object .
{
adds the rule attributes to the list of attributes .
<p > the identity provider . < / p >
<p > attribute of attribute mapping attribute name and value mapping mapping . < / p >
get the dom node .
get the list item
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red > < / code > if the given node is not null then it is created . otherwise the value of
this method is used to get the node of the xpath expressions .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
{
{
{
{
{
{
{
{
{
adds attributes to the list of attributes .
add attributes to the list
{
{
{
marshall the given parameter object .
{
/ * ( non - javadoc )
returns the bond of the bond .
{
constructs a { @link idifference } object .
compare two { @link ichemobject } classes and return the difference .
{
{
this method is called from the map of { @link } s .
removes the given collection from the collection
perform a transformation on the given key .
called when the action is executed .
called by the map manager to ensure that the map is not modified .
{
{
saves the maestrano data .
get a list of the keywords in the list
returns the directory for the given application .
<p > the ids of the ec2 fleets . < / p >
checks the request configuration for the given shape .
{
<p > the resources that you want to add to the resources . < / p >
<p > the paths of the resources that were added to the resources . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
summary information about counters that are associated with the attack .
<p > the list of counters that describe the detail data . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
<p > the list of db cluster snapshot groups . < / p >
<p > the properties of the configuration for the specified <code > / code > . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java
<p > the ids of landmarks that are associated with the specified amazon resource name ( amazon s3 ) . < / p >
<p > the list of <code > / code > objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
{
{
sets the binding for the given binding .
<p > a key that is a key that is not present in the key / value pair . < / p >
<p > the attribute name for the attribute that specifies the name of the attribute . < / p >
<p > a list of <code > / code > objects . < / p >
<p > the summary user arn . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to

registers the given controller .
sets the locale to be used to disable the locale .
runs a sparql query


query the document referred to by the given index .
marshall the given parameter object .
<p > the ids of the identifiers . < / p >
<p > the ids of the clusters to work . you can specify only one or more identifiers . < / p >
gets the value of the grid specified by the specified { @link } .
find a file in the directory tree .
marshall the given parameter object .
marshall the given parameter object .
convert the cdkrgraph to an alignment .
returns the > array of all the elements in arra of the given arrays .
calculates the stride of the vertex centroids .
marshall the given parameter object .
marshall the given parameter object .

the k v / correlation sequence .

find the first atom in the given scene graph if found
launches the bulk app to launch the process .
method to compute the tetrahedral bond with atoms of atoms and returns the closest atom from the given atom .

finds the deepest - triangle of the given atoms .
get the canonical of the substructure
calculates the number of rings that are connected to a given atom .
get the paths of the given atoms in the given atomcontainer .
execute the named property .
returns the color of the given atom .
marshall the given parameter object .
{
set the longitude of the earth - .
returns the shortest surface .
gets the normalized points of the point in the anchor point .
set the maximum order of bond orders .
set the option .
marshall the given parameter object .

returns whether the last element is the last element .
build query results from query parameters

get a list of ids from the keys
finds the first row in the repository .

<p > associates a device with a device defender device . < / p >
<p > creates a new placement for a specified master . to create a placement of the specified placement use the specified region . < / p >
<p > deletes the specified pronunciation region and the placement . < / p >
<p > describes the placement placement placement requests . < / p >
<p > describes the project s personal meeting the specified project . < / p >
{
<p > disassociates a device from the device . < / p >
<p > gets the device for a specified device . < / p >
<p > returns a list of <a > / a > objects . < / p >
<p > updates the placement of the specified placement placement . < / p >
load the class
marshall the given parameter object .
sends a message to the client .
marshall the given parameter object .

<p > the endpoint s endpoint summaries . < / p >
<p > the list of endpoints that are available for the specified endpoint . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
activate bulk channels .
reset the bulk channels .
cometd disconnect cometd handshake see [ cometd ] [ cfgperson ] ( https : // docs . genesys . com / documentation / psdk / latest / configlayerref / cfgperson ) objects .
marshall the given parameter object .
get the attributes set the specified attributes .
get the attributes of an attribute .
get configuration from agent .
get configuration properties for a specific type
get all objects for the specified type .
get all objects of a type ( currently ready to be viewed ) get the bulk of objects .
get current session .
get devices of given place
get devices of a device
returns the region name of the service provider .
generate a scope for the specified milestone .
<p > the full storage gateway . < / p >
<p > the list of additional amazon resource names and the storage account . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
get user information . get information ( enabled ) get session info .
performs the specified call on the specified call .
performs the given authorization code using the parameters of the workspace to the current workspace .
get workspace information from the specified parameters .
login to the provided uri .
login ( s ) the authorization rule .
reset the current agent&#39 ; s state to the current agent&#39 ; s state to be sent to the user .
cometd logout
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
cometd patch
get the version info .
<p > the relationships for the solution . < / p >
<p > the relationships to be included in the db instance . < / p > <p > for more information see <a href = http : // docs . aws . amazon . com / goto / webapi / discovery - datamodel#dt / a > a a - a - project . html > / a > in the <i >
<p > the entity types used by the entity . < / p >
<p > the entity types . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
<p > the entity types that are associated with the specified entity type . < / p >

singleton class
returns the value for the given type .
removes an annotation from the given type .
sets the specified annotation of the specified type to the given { @code } .
{
compare the two patterns
calculate the data for a vertex pattern .
marshall the given parameter object .
<p > the response models . < / p >
marshall the given parameter object .
check if the mass is a valid residue bond .
checks the input parameters of the given { @code } .
calculate the maximum value of the given double value .
returns the minimum value of the given array .
get the value of the component property .
puts the given component into the given component .
adds a new context to the builder .
{
get the ip address of the passed address .
returns the localized name of the specified locale in this { @link locale } .
{
get the list of rules that are available in the specified server .
{
<p > a list of jobs that are associated with your bot . < / p >
this method calculates the atom container of the atom .
marshall the given parameter object .
returns a multimap containing the file names of the given file in the given file .
returns the default classloader for the current thread .
marshall the given parameter object .
<p > the virtual service . < / p >
<p > the virtual interfaces for the virtual router . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
marshall the given parameter object .
{
stores the value in the {
marshall the given parameter object .
marshall the given parameter object .
convert a string to a jsonobject .
add a new line to the .
marshall the given parameter object .
sets the parameters attribute of the object .
calculate the sigma electronegativity of the given { @link iatomcontainer } .

marshall the given parameter object .
returns the current locale .
load properties from a file .
marshall the given parameter object .
forwards a { @code } to the given { @link stream } .
creates a cassandra cassandra plan meta data .


build a database - meta data from a { @link } .
build a sql query for a single row .

returns the sql statement for the given position in the given position .
parse the next field from the set of records .
parse sql sql string .


アノテーション {
marshall the given parameter object .
returns the {
remove the { @link } from the specified { @link } .
marshall the given parameter object .
creates a new instance of the mapper .

returns a map containing the given map of maps .
returns a map containing the given entries in the specified map .
returns a new { @link } that will be applied to this constraint .
returns the value of the subject as a key value .
returns the key that this constraint is a key .
returns the value of the subject as a map .
adds a new key to the collection .
returns a new { @code entrystream } which is the first element of the given decision .
returns a new entry
/ * ( non - javadoc )
returns the mappings from the specified { @code illegalstateexception } .
returns a new { @code } instance containing the specified key and value .
adds the subject to the subject set .
create a new instance of the given type and class .
returns a class instance class for the given class class loader .



load the props file from the props .
sets the user .
returns the string representation of the {
writes a raw bson contents to the given writer .
this method calculates the atom s and returns the corresponding .
<p > the attributes that are associated with the specified attributes . < / p >
<p > attributes that are associated with the specified attributes . < / p >
<p > the attributes that are associated with the specified attributes . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
<p > the tasks to be updated . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #settasks ( java . util . collection ) } or { @link #withtasks ( java . util . collection ) } if you want
<p > the termination of statistics about the platform . < / p >
<p > the termination of two failures . < / p >
marshall the given parameter object .
returns the file name for the given file .
returns the resource as a resource .
get the class type from the enummap class .

write the given number of elements to the specified number of rows .
returns the set of rings set in the given molecule .
get the color for the bond .
get the width of the bond .
{
generate a bond .
generate a bond that is able to convert the given { @link } to a .
this method will convert a new molecule to a point .
generate a ring for the given { @link vertex } .
this method calculates the 3d coordinates of the atoms .
determine if the bond is cyclic its stereo or 3d bond .
marshall the given parameter object .
returns true if the atom is a hydrogen atom .
this method will generate mdl for the molecule .
{
serializes the { @code } to the { @link } .
{
serialize the given {
writes the given result of the given { @code } to the { @link } .
serializes a string to an xml fragment .
serialize the given { @link } to the xml stream .
/ * ( non - javadoc )
this method will return an { @link } instance for the given source source .
unmarshal the xml source object to the xml document .
returns the stream processor for the stream .
append text to the text .


extract value from class field .
calculate the surface of the and the radius of the frame .
checks if the given is a valid .
set the value of the field .
creates a new object .
get the atomtype summary for the atomtype .
assigns the atom to the biopolymer .
checks if the atoms are in the same ringset .
sets the atom atom atom atom atom in the given structure .
returns a list of atom which are contained in a molecule .
creates a new atom with the given .
marshall the given parameter object .
<p > the ids of the security groups that you want to add to the cluster . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java
<p > the ip addresses of the instance . < / p >
<p > the ip addresses of the local instance of elastic ip addresses . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
<p > the ip addresses of the network interface . < / p >
<p > the ip addresses of the replication instance . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
marshall the given parameter object .
returns an accessible { @link accessibleobject } or { @code null } if it does not exist .
creates a new instance of a class .
create a new instance of class name .
calculate axes and store the oriented vector .
converts the triangle coordinates to p observations .
returns true if the specified coordinates is a coordinate .
normalize the atoms in the following techniques of the atoms to be the roots of the atoms . the result of this method is to be able to normalize the result of the ( ) . < / p >
dumps the string to the current tree .
marshall the given parameter object .
marshall the given parameter object .
parse the exception if it is not present .
/ * ( non - javadoc )
marshall the given parameter object .
/ * <executionevent type =
register the list of packages that are registered in the .
get the message from the locale .
get the message from the input string .
{
{
/ * ( non - javadoc )
calculate the score for a certain sphere .
generate a string that is parseable with the hmac digest .
marshall the given parameter object .
marshall the given parameter object .
converts roles to roles
returns a map of keys for the role .
/ * ( non - javadoc )
{
{
marshall the given parameter object .
<p > the amazon resource names ( arns ) of the storage account to the specified vpc . < / p >
<p > the total options set to validate . < / p >
<p > the amazon resource names ( ns ) ip addresses in the storage account . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link #withinputs }
<p > the list of the available faces associated with the specified db instance . < / p >
<p > the list of the available processor features that are associated with the specified elastic transcoder . < / p >
<p > the list of available faces associated with the specified processor . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
combine the configuration into a { @link } .
set the data for the current thread .
/ * blocking flow method
/ * blocking flow method
execute the given {
execute the given runnable in the given runnable .
execute the given consumer with the given consumer .
unmarshals the given xml schema from the source file . <p >
load template from given template @param @param @param @param @param @param @param @param @param @param @param @param @param @param @param @param @param @param @param @param @param @param @param @param @param @param @param @param @param
creates the folders for the given jar file .
get the prime number of the specified element .
creates the folder folder .
creates the folder folder .
creates the list of logs for the given folder .
creates the folder folder .
creates the folder folder folder .
get the logger instance with the given name .

marshall the given parameter object .

sets the select .
sets the set of strings that are not in the range of the first letter .

method to generate a string query string .
returns the parameters of the current query .
<p > build a { @link } instance . < / p >
creates a new parameters for this request .
marshall the given parameter object .
returns the first argument that is the first argument of the given argument .
creates an option from a reference list .
creates a new option with the given parameters .


transfer all events to the batcher .

bind a bean definition to the given binder .
starts the stopwatch .
marshall the given parameter object .
stops the stopwatch .
<p > the explicit options request . < / p >
<p > information about the inbound application options . < / p >
<p > the explicit options to apply to the network route tables . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
<p > the endpoint ids . < / p >
<p > the endpoint ids . < / p >
<p > the endpoint types endpoint listing for the endpoint . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
matches a constraint ( or a plain ) or return a boundingbox .
create a constraint expression that uses the given { @link } to each pattern that matches the pattern .
<p > . < / p >

returns the list of param names .
creates a new span with name / value pair .
marshall the given parameter object .
calculates the contribution of the given container .
creates a msgpack pipe from a byte array .
creates a msgpack pipe from an {
creates a new {
merges the {
merges the {
serializes the {
set the active center .
gets the bean for the given class .
get a bean property
get a bean for a binding
get a bean for a given enterprise .
get a bean for a bean
get a prototype bean for a given bean .
get a list of beans declared in the .
gets the provider provider .
{
sort the list of {

compares two objects with the second .
<p > the resource id . < / p >
<p > the amazon eks resource id ( arn ) of the resource . < / p >
marshall the given parameter object .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the given molecule is a molecule .
returns the substructure of the gene mapping .
returns the distinct frequencies matching the given pattern .
initializes the molecule .
marshall the given parameter object .
<p > the ids of the trusted advisor keys . < / p >
<p > the private keys used to sign the private key . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
<p > the private keys used to delete the private keys of the private key . < / p >
<p > the private keys associated with the private key / value pairs . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
<p > the list of <a > / a > resources that were not deleted . < / p >
<p > the names of the mfa - delete endpoint deletion . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
<p > the names of the devendpoint . < / p >
checks whether a stereo ring is connected to aromatic bonds .
<p > the private key for the private key . < / p >
<p > the name of the translated filter string . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > the private key ( s ) to the filter . < / p >
<p > the list of aws account key names . < / p >
<p > the current aws account s usage details . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > the list of key - value pairs that you want to include the key - value pairs in the <code > / code > property . < / p >
{
<p > the list of key - value pairs that you want to list your private key . < / p >
<p > the list of aws sam types that your aws account supports . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
<p > the list of keys specifies how to use the security policy to identify the list of private keys . < / p >
get the text value of the given key or if the value is not present or not .
check if the given command line is compatible with the command .
update index file with the given index .
<p > the number of compliant resources that are compliant . < / p >
<p > the number of compliant resources that are compliant in the specified resource . < / p >
<p > the number of compliant resources that are compliant in the specified resource . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util
marshall the given parameter object .
round the given number of values to a fraction .
round a double value using the default rounding mode .
round - out of the given number of floating - point biginteger into a biginteger .
returns true if the given value is a power of 2 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0
compare two values .
compares two values in a two - dimensional tolerance .
returns the mean value .
returns the mean value of the histogram .
calculate the mean value .
marshall the given parameter object .
marshall the given parameter object .
creates a list of items in the list .
marshall the given parameter object .
emits the threshold for the .
/ * ( non - javadoc )
get the response response for the server .
checks the response of a given url and checks if the response is valid .
this method is used to parse the cnames of metrics and returns the list of available metrics .
build a properties object from the properties file
get the data for a single resource .
check that the certificate is valid and subject to the certificate .
<p > the number of items that are associated with the specified severity . < / p >
returns the { @link } instance for the current thread .


get userinfo info from request .
marshall the given parameter object .
create a injector that is responsible for creating a new injector with the given configuration .
get a new expressionevaluator for a given
substitute the template expressions for the given template .
helper method to retrieve a new instance .
finds the manifest of the manifest .
returns the manifest entry entries for the given entries .

reads a socket from the socket .



utility method to create a { @link xmlstreamreader } from json .

serialize a object to a document .
print the value of the given object .
create an instance of { @link } .
create an instance of .
get an instance of .
returns the { @link } for the { @link } .
returns an instance of { @link } for the given class .
marshall the given parameter object .
<p > the stage variables for the resources that are associated with the canary . < / p >
creates a new { @link multimap } with the keys of the given { @code } .
creates a new { @link multimap } with the same keys as the keys .
collects all the metrics in the { @code featurelist } .
returns true if this guy is a task .
waits until the timeout is reached .
waits until the deadline is reached or the timeout is reached
replaces the values in the map .
evaluate () method

marshall the given parameter object .
/ * returns true if the xml operator is valid .
marshall the given parameter object .
<p > the multipart uploads . < / p >
<p > the list of <code > / code > objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
list all the elements in the specified iterable .


returns a list of items in the list .
copies the elements from the array to the specified array . if the array is null then the array is copied to the new array .
flip the array of the given array of { @code } objects .
/ *
flip the elements of the list .
copies the array of elements from the specified array to the end of the array .
concatenates the given collection of items to a list of objects .
creates a set of union objects .
set the buffer to be used for this message .
add a time query to the map .
return the point of the first unmatched
marshall the given parameter object .
<p > the ipv6 addresses . < / p >
<p > the ipv6 address of the tapes of virtual tapes . < / p >
<p > the ipv6 address of the tapes of virtual tapes . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
marshall the given parameter object .
returns the value of the option to be used for the option .

get the value of the option as a string .
check if the option is not allowed .
get the uri of the uri .
<p > adds a new recipient to the specified category . < / p >
<p > applies the schema to the schema of the schema . the schema is used to categorize the data that are opted out of the schema . the schema is used to categorize the data that are opted out of the schema . < / p >
<p > attaches a list of <code > / code > to a <code > / code > or <code > / code > . < / p >
<p > attaches a policy to the specified iam group . < / p >
<p > attaches a list of metadata to a specified index . < / p >
<p > attaches the specified link to the specified link . < / p >
<p > creates a batch of data structures . < / p >
<p > writes a batch of data to a specific amazon s3 bucket . < / p >
<p > creates a facet . < / p >
<p > creates a new index for the specified bucket . < / p >
<p > creates a new object . < / p >

extract the database name from the url
extract server url from url .
<p > deletes the specified object . < / p >
<p > deletes the specified schema . < / p >
<p > deletes the specified link - specific typed link . < / p >
<p > detaches a document from the specified collection . < / p >
<p > detaches a new instance of the specified instance . < / p >
<p > detaches a policy from an existing deployment . < / p >
<p > detaches a link from the specified resource . < / p >
mapping function {
<p > deletes the specified facet . < / p >
convert a { @link } to { @link } .
returns a { @code type } representing the { @code formal type } of the given type .
get the duration of the recurring duration of the given timestamp .
<p > retrieves the link attributes for a link . < / p >
gets the type of the track type .
returns the start of the start tag .
resolves the type of type variable type .
<p > disables the specified directory . < / p >
<p > enables the specified directory . < / p >
<p > returns a list of identifiers of the specified . < / p >
<p > lists ota monitored schema artifacts . < / p >
<p > lists the directories that are associated with the specified directory . < / p >
<p > lists the attributes associated with the facet . < / p >
<p > lists all portfolios that are tagged with the specified facet . < / p >
<p > lists links in the specified typed link . < / p >
<p > returns a list of <a > / a > objects . < / p >
<p > lists the schema arns or whether the schema is a migration schema . < / p >
<p > lists the attributes associated with the specified attribute . < / p >
adds a collection of entities to the list of entities .
escape the string .
escapes the string as a string .
/ * ( non - javadoc )
============
<p > describes the specified aws account . < / p >
<p > lists ota arns for a specified schema . < / p >
<p > adds a backslash escaping to the string . < / p >
creates a new { @link documentbuilderfactory }
returns the given source of the given source string .
write the xml to a xml document .
<p > returns a list of the specified categories . < / p >
<p > lists the policies associated with the specified iam user . < / p >
<p > returns a list of links to the specified provisioning resources . < / p >
<p > updates the attributes associated with the specified link . < / p >
<p > updates the attributes of an existing amazon cloudsearch ( vpc ) to a <code > / code > . < / p >
<p > creates a list of typed links . < / p >
<p > creates a typed link list . < / p >
<p > find the specified policy . < / p >
<p > publish a schema to a topic . < / p >
<p > creates a new schema from the json schema . the following data types are : < / p > <ul > <li > <p > <code > / code > : ( shard ) . < / p >
<p > removes the specified association from the specified principal . < / p >
<p > updates the specified attributes for a specified facet . < / p >
loads a keystore from the pem file .

<p > updates schema schema . < / p >
<p > creates a typed link to a link to the specified link . < / p >
<p > updates the schema of a specified schema . < / p >
<p > lists the schema registries . < / p >
returns the source element of the rtf document .
get the element of the element .
marshall the given parameter object .
returns the resource name for the given url .
returns the property name .
get a list of all the properties in the given name .
{
replaces the string with the given string with the given string .
<p > finds the first index of a given string in the given string . < / p >
<p > finds the first index of individual characters that match the given pattern . < / p >
<p > . < / p >
/ * serialization is called by tccl
<p > finds the last index of a given string . < / p >
get the string from the string builder .
returns the string representation of the given string . <p >


given a string and a string that is a string with a single terminating quote and the unescaped string .
<p > . < / p >

given a string and a string that is a string with a single terminating the string the first unescaped string is returned .
<p > . < / p >
<p > . < / p >
<p > . < / p >
<p > returns a string that is a substring of the given string . < / p >



check if the given string is a valid quoted string .
extract the first {
remove empty line whitespaces from the string .

get the property
removes the line comments from the given line .
returns the value associated with the given entry .
returns the entry associated with the given key .
creates a new { @link } instance .
creates a new { @link } from the given { @link } .
/ *
copies the contents of this entry to the tail of this entry .
returns the next segment in the given segment .
validates the parameter .
{
builds the message to be displayed .
marshall the given parameter object .
returns a calendar instance containing the given { @link calendar } s .

create a component definition of the class name .
returns the minimum value of the given array .
returns the maximum array of integers .
sort the specified array using the specified swapper .
sort the specified array using the specified swapper .
parse a numeric integer value represented by the specified { @code string } as a { @code int } value .
marshall the given parameter object .
<p > the event arns that you want to upload to the event . < / p >
<p > the entity arns . < / p >
<p > the entity types that are associated with the specified entity . < / p >
<p > the entity types . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
<p > a list of dates in the last minute . < / p >
<p > the tags associated with the product . < / p >
<p > the tags associated with the aws config . < / p >
<p > the tags for the resource . < / p >
<p > the tags to use for the tags . for more tags see { @link ( string ) } . < / p >
<p > the status of the status code for the specified ip address range . < / p >
<p > the <code > / code > parameter for the <code > / code > parameter . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link
<p > the <code > / code > parameter for each route status or <code > / code > parameter . < / p >
creates a default for the .
main method .
creates a new instance of this attribute instance from the provided string .
/ * ( non - javadoc )
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
create a new
<p > a list of the local secondary indexes for each index in the table . < / p >
<p > the local secondary indexes for the table . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > a list of global secondary indexes for the global secondary indexes . < / p >
<p > the global secondary indexes for the global secondary indexes . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
parse the xml document from the xml document .
add a description to the list
add settings to the xml file .
add a type to the list of text objects .
add a to the
<p > the route gateway ids to add to the transit gateway route table . < / p >
<p > the route table ids to remove from the route table . < / p >
<p > the route tables for the route table . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
set the bean class .
creates a new { @link } .
adds a new rule to the constructor .
adds a new property rule .
creates a new instance of { @link } with the specified name .
creates a new {
returned from a { @link throwable } s to the given { @link throwable } .
returns the entry for the given object .
creates a new instance of the specified class using the specified file format .
<p > gets a new instance of the <code > / code > . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) .
returns the name of the {

check the {
get the batch threads pool .
returns the executor service .
posts event to subscribers .
marshall the given parameter object .
simplified method form for invoking the operation with an asynchandler .
creates a new .
handles the bucket of the bucket .
<p > the cache node ids . < / p >
creates a form - encoded form form .
<p > the cache id of the node . < / p >
<p > the preferred availability zones of the instance group . < / p >
<p > the amazon ec2 instance bundles with the following settings : < / p > <ul > <li > <p > <code > / code > . < / p >
print out the current line .
print out the list of {
<p > the cache availability zones . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setavailabilityzones ( java . util . collection ) } or { @link #withavailabilityzones ( java . util . collection ) } if you want to
returns a port from the given host and port .
helper method to parse a host and port .
parse a string from the host name .
returns the host name from the host name .
marshall the given parameter object .
sets the endpoint for the specified endpoint .
find a signer by name and optionally returns a region .
sets the specified region .
sets the region .
add a new request handler .
remove a handler from the request .
creates a new { @code } with the given request .
check whether the request is a request or not .
returns the request for this metric .
returns the { @link } instance for the request .
creates a new request for the specified request .
sends the current client to the client .
sends the current execution request to the current state .

sets the list of region to the client .
sets the region s service .
sets the region of the region .
sets the endpoint to be used for the endpoint .
<p > the names of the domain names . < / p >
<p > the domain names of the domain names . < / p >
<p > the domain names of the domain names . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
marshall the given parameter object .
converts a { @code long } into a byte array .
converts a byte array to a list of bytebuffers .
create a new intset for a range of domain - ranges .
returns a set of integers that are not equal to the specified lower - and upper case .
returns a new { @link } for the specified number of bits .
returns the cluster name .
creates a new implication column .
create a new { @link } from the given { @link document } .
create bulk bulk .
get the table client to use for the client .
gets the client side .
get the { @link } for the given client .
create a channel pool from the pool .
create a { @link managedchannel } for the given channel .
create a pool for the pool .
creates a new instance of { @link } that represents the client s { @link } .
create a { @link managedchannel } for the given host / option / default .
create a { @link managedchannel } for the given number of host and device name .
create a new { @link } from the given { @code endpoint } .
shutdown the channel .
marshall the given parameter object .
returns a new { @code } representing the amount of work with the specified { @code other } .
creates a new cache instance containing this histogram with the specified amount of affected objects .
returns an immutable multiset containing the given elements .
returns an immutable multiset containing the given elements .
get the type of the class .
create a { @link } from a { @link document } .

returns a loader that will be used for the given template path .
create a new { @link } from the given json string .
creates a form - encoded form of multipart form .
sets the status of the given {
add a new { @link } to the list of { @link } .
creates a new {
returns the list of {
set the to be used to sign the .

inject all bean instances of the current context class .
destroys all the instances of the ejbs .
marshall the given parameter object .
{
{
handles the error error .
returns true if this group is a group of values .


<p > the list of objects . < / p >
<p > the list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
marshall the given parameter object .
initializes the log .
initializes the log .
initialize the log .
initializes the { @link } .
initializes the { @link } instance .
creates a swagger2markupconverter . builder .
creates a new formatter instance with the given formatter .
marshall the given parameter object .
log a message with the given arguments .
log a message with the specified exception .
log a message at debug level .
log a message at debug level .
log a message with the given arguments .
log a message at the given { @link throwable } object .
log a message with the given arguments .
log a message at the info level .
log a message at the end of execution .
log a message at the debug level .
log a log message .
log a message at the given { @link log } object .
{
{
/ * ( non - javadoc )
$antlr start

clones the given content string to the git service .
clones the given {
write the to the graphite server .
get the real { @link } for the given stack .
get the real stack trace for the given stack .
this method is called to read the entire stack trace from the current stack trace .
create a new {
creates an entity manager factory for the persistence unit .
this method is used to store the current store of the current user s configuration .
marshall the given parameter object .
send a message to the remote peer .
decode the given string .
marshall the given parameter object .
add a header to the builder .
creates a new multipart body multipart body part .
creates a new { @link } for the content content content content .
creates a new attachment .
construct the attachment content from the content .
get filename name from file url
read the next header from the input stream .
read the next chunk from the input stream .
<p > a list of the disks that you want to add to a snapshot . < / p >
<p > a list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want

read the size of the input stream .
reads the next state from the stream .
read the next { @link atomicinteger } from the input stream .
reads the next { @code } from the stream .
print the header .
write the content of the body to the output stream .

parse the input stream and returns it as a string .
check if the input stream is not in the output stream .
helper method to create a new header .

get the data for a given input stream .
{
/ * ----------------


encrypts the byte array with the specified bytes .
create a new secret .
construct the response .
transform input stream to a json file .
marshall the given parameter object .
$antlr start
checks whether the specified request is a valid { @link httpservletrequest } .
checks whether the request is valid or not .
checks if the given response is valid .
this method is used to remove the from the object .
marshall the given parameter object .
convert the current permissions to a file .
convert the file to the newer version .
creates a flow that emits the reactive flow flow that will be emitted by the publisher that emits the publisher completed .
create a { @link flux } that emits the reactive flow of the flow sequence .
creates a { @link } .
calculates the byte [] value of a byte array .
creates a new instance of { @link } .
create a new { @link } instance .
create a new instance of a .
handle the error error if it is not already present .
decodes the string from the input stream .
adds a simple target exchange to the scheduler .
register a instance with the given key .
remove a scheduled { @link } from the given { @link } .
create a new { @link } from the given { @link executorservice } .
converts the given string to a byte array .
adds a hook hook to the scheduler .

return a runnable that will be executed on the specified runnable .
shutdown the .
convert the input stream to the stream .
returns timerservice cache if there is no cache or cached task cache .
tries to find a { @link } from the pool .
returns a copy of this matrix to a new byte array . <p > the caller must have a length of zero length . if the byte array is null then the returned array is copied to the end of the array .

join the specified array into a single byte array .
marshall the given parameter object .
returns the value of the specified b - value random { @code b } .
marshall the given parameter object .
traverse the fields that are descendents of this object .
returns the set of keys that are not found
{
returns a map of all keys from the fields .
returns the absolute absolute value of the two - bit unsigned integer with the specified number of ints .
convert a long to a byte array .
decodes a signed 64 - bit unsigned long array .
encodes a long value into a long value .

copy data from inputstream to outputstream
create a new instance of {
remove text from string
copies bytes from inputstream to bytes .
marshall the given parameter object .
add the given html to the end of the list .
removes the listeners from the menu .
initializes the .
sets the prefix of the text .
set the prefix of the symbol .
gets the objects for the movie .
gets the text of the text .
clear the text for the current line .
marshall the given parameter object .
handle the
toggles the visibility of the animation .
add a new object to the list of objects .
removes an object from the list of violations .
clear the state of this {
/ * package
updates the count of text headings .
removes the span from the current position .
insert a span .
finds the type of the view with the given type .
checks if the given payload is clicked .
marshall the given parameter object .
marshall the given parameter object .
/ * ( non - javadoc )
append a value to the given value .
append a query to the query .
init method .
inflates the view to visualize the view .
render the body
create a new {
creates a new {
add attributes to a resource table .
draws the drawing particle onto the screen .
sets the gradation colors .
enable the clip of the current redraw .
returns the list of objects for the given query .
patches the list of objects for the given branch .
creates a new instance of the specified type . the reference must be a proxy object of the specified type .
returns the object represented by the given path .
adds the specified interceptor stack to the stack .
<p > parses the given timezone and returns the parsed string . < / p > <p > the following three characters are : <ul > <li > the string is null or empty or null if the time zone is not null . < / p > <p > the timezone of the { @code timezone } is not <code > null<
returns the config bundle for the given id .
add a permission to the list of permissions for the given permissions .
add the permissions of the specified map to the list of permissions .
{
creates a new {
{
add a response to the list of {
marshall the given parameter object .
sets the value of the named property .
set the value of the field .
creates the radius of the given radius .

/ * authenticates the authentication addresses on the specified nonce . if the credentials is not null then the user is authenticated and the username is the password of the user . if the credentials is not null then the user is authenticated and the user has the username and password . if the credentials is not null then the user is authenticated
sends a response to the response .
<p > the cache node ids . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
set the id of the id .
marshall the given parameter object .
<p > a list of import types that are associated with the specified provisioning file . < / p >
<p > a list of findings . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
sets the current time to be used .
execute method call method .
execute the given action on the given object .
returns the text of the view with the given { @code tag } .
dump the contents of the window to the output stream .
marshall the given parameter object .
adds a directory to the directory .
set the state of the directory to the given state .
marshall the given parameter object .
marshall the given parameter object .
<p > the name of the configuration . < / p >
parses the { @link expression } and returns {
parse a boolean expression expression
validates the file against the given file .

marshall the given parameter object .
marshall the given parameter object .
sets the parameters attribute of this instance .
<p > keywords that are included in the input string . < / p >
<p > the keywords of the categories . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > the list of character points to be included in this action . < / p >
checks if the metadata is a katharsis resource .
<p > the list of . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
<p > the list of objects . < / p >
<p > the list of <code > / code > objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
<p > the skill types to enable . < / p >
<p > the skill types . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
<p > the device group to be sent to the voice account . < / p >
marshall the given parameter object .
sets the maximum allowed quota of the .
build the dynamic table name .
get the pool of the .
get the dynamic reference associated with the given package name .
returns the dynamic reference associated with the given .
set the configuration of the tune .
get the configuration of the given coord iris .
returns the set of languages in the package .
returns the contents of the trusty file .
/ * open the assets .
open a database .

get the list of items available in the specified .
find the bag of the given child nodes .
/ * ( non - javadoc )
this method is used to update the measurements .
invalidate the current slot with the given key .
get the paths of the assets folder .
marshall the given parameter object .
get a cookie from a cookie .
returns the resource id for the given resource id .
marshall the given parameter object .
creates a new instance of { @link } .
set the field name for the field .
returns the { @link } for the given { @link serializer } .
writes a blob to the input stream .
jlong urlconnection bool jlong ( byte [] int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int
/ * ( non - javadoc )
set the position of the current position in the buffer .
check the fields of the input stream .
returns the next available item .
<p > the provisioned products for the specified provisioned product . < / p >
<p > the provisioned products for the specified attribute . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
read the next item from the given class .


find the field name for the class .


<p > the high - level mappings . < / p >
get raw raw raw raw raw raw raw raw raw raw raw raw raw raw raw types as raw types .
sets the user grant of the user .
creates a new {
<p > the import of the training data being transcoded . < / p >
<p > the export information . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
sets whether or not the current state is updated .
sets the { @code useragent } for the user to enable the user .
applies the given { @code } to the given { @code } .
check that the given { @link operationcontext } is not allowed to be { @link } .

marshall the given parameter object .
<p > the identifiers of the versions of the job . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setversions ( java . util . collection ) } or { @link #withversions ( java . util . collection ) }
<p > the configuration of the configuration template . < / p >
<p > the configuration of the template expressions . < / p >
<p > the list of integration configurations that are associated with the specified template engine . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java .
marshall the given parameter object .
resets the { @link } to be used .
returns the { @link } that is deemed with the given { @link } .
checks if the given message is a toast with the given message id .
checks if the given message is a toast .
creates a new instance of { @link } from a given file .
create a new instance of the given asset .
create a new instance of the given { @link } .

marshall the given parameter object .

{
find the variable at the given index .
evaluate the value of a primitive type
check if the primitive primitive primitive primitive primitive primitive primitive primitive primitive primitive primitive wrapper primitive wrapper class or primitive wrapper .
checks if a class is wrapper .
this method is used to generate a new array of type <code > / code > .

puts a string into this byte vector . the byte vector must contain the length of the byte array .
reads a vector of bytes from the given vector of bytes .
<p > the list of game container reports for the game session . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
<p > a list of <code > / code > objects . < / p >
<p > the <code > / code > object that represents the player pins in game session . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link
<p > the player player player game sessions running game sessions . < / p >
<p > the player player for the game session . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
evaluate the evaluated value .
/ * ( non - javadoc )
get the name of the catalog .
{ @inheritdoc }
----------------------------------------------------------------------------------------------- compilable
{
{
{
gets the interface represented by the given object .
this method is used to parse the source file and return the value of the property .
this method is used to generate the class hierarchy for the class .
this method is used to check whether the name of the object is a member of the type .
this method is called from the event to the interpreter .
evaluate the type expression .
marshall the given parameter object .
{
{
marshall the given parameter object .
<p > list of items in a <a > / a > request . < / p >
<p > the request parts of the request payloads to be in the form of the <code > / code > request . < / p >
<p > the list of item values for each item that is a collection of items or the value for each item that is in the collection . < / p >
<p > the list of available capacity . < / p >
{
{
/ *
get the session id for the session .
converts the given string to a string .

return color color palette .
returns a list of that matches the given image .






finds the next value from the specified position .
resets the fields in the given calendar object .
parses the given expression .
replace the string with the given value .
{
marshall the given parameter object .
<p > the list of <a > geomatchconstraint< / a > objects describing the five transform . < / p >
<p > the information about the supported ports for the specified project . < / p >
<p > the patch mapping . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
shifts the word to the next word .
fetch the number of the arguments .

returns the next character in the range [ ] [ ] [ ] [ ] [ ] [ end ]
sets the parameter with the given parameters .
returns true if the parameter is not already present .
{
{
{
inserts a value onto the operand stack .
push the given value to the stack .
push a new value onto the float stack .
push a new operand onto the stack .
push the given value to the stack .
add a to the stack
returns the index of the first argument in the array .
loads the instruction from the top of the stack .
stores the value in the asm type .
loads the arguments from the given argument .
load the given array of type { @code } .
loads a local variable with the given type .
stores the given local variables in the given type .
swaps the two vertices in the given place .
return type of type { @code type } .
performs a comparison on the given type .
{
this method is used to reset the innermost object of the class that fits a primitive type .
a type variable with a variable type .
normalize the rows of the table .
remove the table from the table .
invoked by the bsh class instruction .
returns the type of the given type as a string .
adds a field to the given type .
get the field from the current class .
add a new attribute to the attribute .
adds a field to the current inner class .
set the attribute vale .
invoke the given method with the given method and type .
invoke the method on the given class .
compares two strings with the same name as the given { @code } .
invokes the method .
check if the type is compatible with the given type .
invoke the method on the target class .
returns the time spent in the current date / time format .
/ * ( non - javadoc )
returns whether the attribute value is contained in this attribute .
returns a { @link attribute } of { @link attribute } s .
get attribute value .
invoke the method on the given class .
throws an exception if the method throws exception .
{
{

adds the specified column to the row .
returns the {
returns the list of items that are contained in the specified row .
returns the list of {
returns all the columns of the rows in the specified row .
removes the row from the row .
marshall the given parameter object .


marshall the given parameter object .
find the list of for the given file .
gets the percentage of the cell as a percentage of the specified { @code } .
gets the span of the data from the current .
gets the list of hit ids for the given file .
returns the list of all the items in the file .
marshall the given parameter object .

marshall the given parameter object .
/ * ( non - javadoc )
register a problem with the
demonstrates how to unlink a previously saved {
check if the repository is not a redirect .
check if the repository is authenticated .
saves the configuration file to the file .
close the stream .
normalize a url .
writes a new id to the given id .
runs all the .
initialize the security manager .
returns the default time zone id .
/ * [ deutsch ] <p > liefert den string als auch als { @code } . < / p >


clear all configs .
delete all claim migration files .
初始化
returns a { @link } that contains all the { @link } s .
initializes the run - time runs in the .
returns a new { @link } instance that will be used to create the plugin configuration plugin configuration .
checks if the storage storage is contained in the given configuration file .
deletes a directory .
check if the storage path is valid .
{
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
opens a file .
{

marshall the given parameter object .
convert object to json object







update a single object in the object .
marshall the given parameter object .
<p > the names of the dashboards that are authorized to add aliases . < / p >
<p > the list of aliases associated with the role . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
<p > the tags to add to the device . < / p >

marshall the given parameter object .
<p > the log streams that are enabled . < / p >
<p > the log streams that are associated with the current state . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
activity activity
returns the permissions granted to the specified {
sets the permission permission .
visits a parameter to the given { @link } .
visits an annotation of the annotation .
visits a type of instruction .
visits a field instruction .
visits a method instruction .
{
{
visit a table .
visit a class .
this method is used to get the booleans from the input stream .
visits an annotation of an annotation of an instruction type .
visits a number of line number .
<p > the source source status or status changes . < / p >
<p > the source status of one or more source sources . < / p >
<p > a list of source statuses . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
{
create a new { @link } based on the given { @code } .
creates a new { @link } instance .
register the app .
put the device to the device .
this method is used to put a library in the library .

puts the given into the given .
store the grid screen .
marshall the given parameter object .
marshall the given parameter object .
writes the given { @code string } to the writer .
writes the header data to the given output stream .
render the given file to the given file .
check if the doctype is a valid dot of the expected parameters .
marshall the given parameter object .
create a new { @code } instance containing the given list of elements .
{
{

<p > the list of <a > / a > objects that contain the data returned by the aws snapshot . < / p >
{ @inheritdoc }
<p > the list of <code > / code > objects that were retrieved . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java .
{
{
{
initialize the list of .
get a bitmap coordinate from the center of the tile at the specified zoom level
get a polygon coordinate from the zoom level .
get position of the bounds of the coordinate
get geo solar offsets .
get the pixel coordinates from the given zoom level .
return the pixel at the given zoom level .
returns the first non - null value of the tensor .
returns the number of bits in the tensor .
generate sql - sql sql statement for the sql statements .
generate columns for subqueries where the results are the same .
check if the given {
marshall the given parameter object .
creates a new { @code } instance containing the specified collection product .

<p > creates a new interval between two { @code t } items where each item is a two - dimensional range of items . the two ranges are removed from the two lists . < / p >
returns a new comparer instance of { @code t } items from the specified { @code } .
<p > creates a new interval between two { @code t } items where each item is a two - dimensional range of items . the two items are inclusive of type <code > from< / code > and <code > to< / code > objects .
<p > creates a new interval between two { @code t } items where each item is a two - dimensional range of items . the two ranges are in order between two objects .

creates an {

creates a new {
start the {
create a for the given redirect uri .
create a new for the given user type .
create a new session .
create a new session token .
returns a token with the specified parameters .
marshall the given parameter object .
sets the input frame to the given frame .
merges the specified symbol table into the specified frame .

get the value of the given key or null if no value is found .
/ * ( non - javadoc )
/ * package - private
creates a new cipher for encrypting data .
encrypt the data using the given key .
{ @inheritdoc }
convert the value to string value .
marshall the given parameter object .
encrypt data .



get the value of the given type .
decrypt the given { @code initialcontexttoken } from the given { @code initialcontexttoken } .
decrypt the given string using the provided { @link outputstream } .
returns the singleton instance of the given type .
returns listeners for the given type . if the list of items are found the list will be returned .
decrypts data .
decrypt the given key and encryption .
decrypt encrypted data
encrypt the data using encrypt .
encrypt data using base64 .


execute the given update operation against the given object .
marshall the given parameter object .
marshall the given parameter object .
sets the value of the sharding column .
sets the value of the { @link } field .
sets the date value of the value .
get the value of the given value as a blob of the data .
sets the default value for this fieldvalue .
sets the default value for this field .
sets the default value for this property .
gets the default value for this .
returns true if this value is a value or if this is a default value .
<p > the files returned by the file . < / p >
returned from a java . nio . java . nio . stream . stream . file . zip . file . ( object ) } .
reads the next data data data from the input stream .
reads the next byte from the current byte [] .
reads the next byte from the current offset .
/ * ( non - javadoc )
close the block .
get the path segment of the segment .
get the method s method name .
check whether this class implements the given superclass .
checks whether the given interface is a superclass or interface .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
{
{
{
/ * set the value of the property .
{
{
{
set the attribute .
{
set the deployment deployment property .
{
/ * set the regions to be used .
specify the metric builder to use the metrics .
build the { @link } instance .
returns the response for the given { @code } .
/ * ( non - javadoc )
************************************************************************
{
{
marshall the given parameter object .
serialize the properties to the kafka map .
deserialize string data from json string .
marshall the given parameter object .
<p > the volumes . < / p >
<p > the mount points to mount . < / p >
<p > the list of camera points . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setsecuritygroups ( java . util . collection ) } or { @link #withsecuritygroups ( java . util . collection ) } if you want
<p > the set of currently selected items . < / p >
<p > the schedule for the specified dimension . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you


returns the date value of the specified name .
returns the names of all the names of all names .
waits for the given restart to be pushed down .
{
{
************************************************************************
{
get the values from the list of parameters .
returns the number of bytes that fit the specified amount of values .
************************************************************************
build the {
put the item in the cache .
tries to move the given to the given .
add a new { @link uri } to this builder .
add a regular expression to this builder .
returns true if the given item is contained in the given object .
<p > the thing types . < / p >
<p > the thing types . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
inserts the next producer in the queue .
tries to reconnect the next available consumer .
returns the number of bytes contained in this table .
delete the item from the table .
returns a deep copy of this one .
returns the path of the request uri .
finish the task .
marshall the given parameter object .
sends a request to the current user s current request .
************************************************************************
marshall the given parameter object .
marshall the given parameter object .
process the {
************************************************************************
marshall the given parameter object .







<p > the parameters of the value of the parameter . < / p >
<p > the names of the filter names . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
marshall the given parameter object .


reads a triple from the {
optimizations the
bulk api to create a new bulk .
import a database row from the database .
bulk publish of the properties .
<p > a list of event counts . each event is a list of event type and events of the event . each event is a list of <code > / code > and <code > / code > and <code > / code > . < / p >
<p > a list of event counts for the event . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
marshall the given parameter object .
sets the { @link eventloopgroup } to be executed before executing the scheduled { @link scheduler } .
returns the project name of the resource .
parse the xml file from the xml file .
sets the value of the property to the value .
builds a new engine .
{

<p > the text spent events that were not found . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setwarnings ( java . util . collection ) } or { @link #withwarnings ( java . util . collection ) }
runs the task sometime in the task .
restarts the plan for the given plan .
check whether a task is available .
this method is used to determine whether a task is running .
tries to find a task for the given task type .
runs the task .
acquires a { @link } .
marshall the given parameter object .
marshall the given parameter object .
<p > the targets that the targets contains the targets that you want to describe . < / p >
sets the default builder .
<p > the targets of the targets . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
convert the generictype to a string .
<p > a list of devices that are supported by the device pool . < / p >
<p > the devices in the specified devices . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
<p > the devices in the application pool . < / p >
<p > the device pool pins . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
creates a new { @link } from the specified name .
creates a new { @link } that creates a new { @link } .
creates a new attribute with the given name .
returns the codec for the given type .
start the {
shutdown the service .

computes the hash for the file .
get the next state state .
check the state state of the state .
marshall the given parameter object .
check the { @link } to be executed .
=============
sends a log message to the next element of the document .
flush the data for the given {
parse the given file and returns the list of vulnerable keys .
parse the json workflow from the server .
generates a ticket from the given seed .
returns a static instance of { @link } .
<p > the ids of the action id . < / p >
<p > the ids of the action id . < / p >
<p > the ids of the maintenance operations . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
returns a static { @link } instance and return a static message .

methode de une aclass de des einzelnen
registers a new exception .
creates a new { @code } instance .
creates a new { @link } that is equivalent to the given class . <p > this method is useful for fluently this overload of { @link } .
<p > a message that represents the data data data source . < / p >
formats the message with the given pattern .
<p > the selected values . < / p >
marshall the given parameter object .
normalize the list of {
normalize the list of paths .
sets the socket address .
sets the serial port number for the specified serial port .
returns the configuration of this builder .
marshall the given parameter object .
marshall the given parameter object .
execute the command .
close the stream .
get the process code for this .
converts the specified list of files to the form of the specified .
converts the specified object to an xml - encoded byte [] containing the serialized objects .
converts the specified to an xml byte array .

extract foreign key from foreign key from primary key and extract the foreign key from the table
computes the center of this window .

add the necessary closes the editor title .
close the event .
marshall the given parameter object .
set the min value .
<p > the aws account id of the iam policy . < / p >
<p > the permissions granted to the specified iam user . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
sets the maximum value .
marshall the given parameter object .
set the default size of the table .
marshall the given parameter object .
notifies the { @link } that caused by the { @link } .
pause the shadow view to the user s center .
<p > the <code > version< / code > objects . < / p >
<p > the boundary of the document . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #seterrors ( java . util . collection ) } or { @link #witherrors ( java . util . collection ) } if you want
sets the url to the image . <p >
initializes the .
create a mongodb mongodb client client .
closes the current connection .
return the ping station to the ping station
check if the user has the permission name of the user .
checks if the given { @link } is present .
returns the role for the given user .
get the role role for the given userprincipal .
returns true if the user has the given action .
returns whether the given { @link } is scrollable .
get the first key in the document .
marshall the given parameter object .
/ * ( non - javadoc )
parses a json document from mongodb to mongodb mongodb mongodb .
get the value of the given key from this object .
gets the document from the specified key .
returns the value for the specified key or if the value is not a default value .
returns the number of key - value mapping associated with this object .
get the value of the given key from the specified index .
gets the value of the key from the specified key .
get the value of the given key from the current object .
returns the value mapped by {
gets the value of the specified key from the specified key .
returns the value of the specified key in the specified key .
returns a request to retrieve the date from the specified cache .
get the value for the given key .
publish data to the user .
get the object id associated with the specified object .
get binary binary value from the given key .
returns the value for the given key in the specified order .
returns a json document that is parseable by the specified json format .
marshall the given parameter object .
converts a { @link throwable } to a { @link throwable } . if the exception is null or the one is not null returns <code > null< / code > .
creates a new instance from the given throwable .
add data to the list of .
add a exception to the redwood handler .
creates a new command .
<p > the evaluation results returned by the evaluation of the evaluation of the evaluation of the evaluation of the evaluation of the evaluation of the evaluation of the evaluation . < / p >
<p > the evaluation of the rule to perform evaluation on the evaluation of the evaluation of the evaluation . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link
<p > the map of the security information map . < / p >
split this tuple into two tuples of degree 9 .
split this tuple into two tuples of degree 9 .
skip 7 degrees from this tuple .
skip 7 degrees from this tuple .
skip 7 degrees from this tuple .
skip 9 7 .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
{
runs the server .

{
<p > the link to use for the link to access the typed link . < / p >
<p > the links for the specified link - type . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
set the location of the location to highlight the view of the circle .
loads the session and returns the cached uid .
clear session .
{
update the .
reset the connection to the current state .
creates a new connection with the given parameters .
get the write concern for the next entry .
expand all nodes in the tree
expand the {
expand the parent tree to a parent tree
add a single row to the tree .
counts the number of nodes in the tree
finds a node with the given user .
find node in the default tree
returns the children of the given node .
get the parent tree of the tree .
returns the parent tree of the parent tree .
returns all nodes in the tree .
returns all descendant descendants of the given model .
recursively walk the tree from the given gremlin model .
returns all leaf nodes of the given node .
iterates over children of the given node recursively .
create a new tree path node .
get a list of paths from a list of paths .
cast a { @link } to a { @link }
returns the treepath for the given path .
returns the child node of the given node .
get the user object from the path .
get object object object from the given node .
compute the index of the node .
this method is called to update the button tree cell .
creates a new property .
returns a type of the given type .
set the value of the exception property .
resolves the result to the given value .
invokes handler .
<p > create a new { @link } from the specified { @link } .
<p > create a new { @link } from the specified { @link } .
marshall the given parameter object .
marshall the given parameter object .
reads the next byte from the stream .
marshall the given parameter object .
{


returns a label which is a windowed fragment of the specified type .
parse a string value from a string .
write a list of sequence files to the file .
this method is called to reset the state of the ready to be ready .
configures the builder configured to add a configurer .
adds a module to the guice module
adds a guice module to the module .
returns a { @link } describing the { @link } .
invokes the given library with the given arguments .
runs the given { @link runnable } in the system .
runs the demo runnable .
returns the { @link parametername } instance of the ace that is marshalled to a { @link } .
faz o retorna para
format the given double string to the given { @link } .
this method will perform a live connection to execute .
initialize the .
register the lifecycle hooks .
-----------------------------------------------------
/ * ( non - javadoc )
copy the specified file to the given file .
loads the session .

connect to the connection .
disconnects the socket connection .
creates a { @link } for the { @link net . dv8tion . jda . core . hooks . } and { @link } .
{
this method is called when the activity is called .
combine the varargs
pad the given string with the given padding and length .

repeat repeated repeat times .
checks if the given string is a newline character .


add a list of { @link } to the list of { @link } .
request a list of tasks .
/ * ( non - javadoc )
marshall the given parameter object .
process the current state of the current state machine .

remove a task from the queue .
set the task log time .
gets the builder for the schedule .
{
init fxml when the scheduler is deactivated .
register a trigger .
disable alarm trigger
disable trigger action .
sets the specified trigger .
delete the trigger state for the given trigger .
@warn method description missing @warn parameter descriptions missing
schedule the job scheduler to schedule the scheduler .
checks whether the given { @code } { @code } { @code } { @code } { @code } { @code } { @code } { @code } { @code } .
tenantawareevent profiling information ( { @link } ) to { @link } .
executes the given trigger .
execute the specified trigger .
sets the action callback .
sets the preferred links of the task state .
{
check if the given task is healthy .
<p > the stream names for the specified delivery stream . < / p >
get the resources that are currently assigned to this instance
returns the number of resources that are mapped to the given .
get the for the given
check if the vm is reachable from the specified vm .
<p > the list of delivery names . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
creates a new blacklisted uri with the given set of parameters .
get a { @link } that is a { @link }
sets the hostname s hostname to the specified duration .
shutdown the { @link } .
validiert > < / p >
sets the hostname to be used for the hostname .
marshall the given parameter object .
get the from the source .
read metadata metadata from an { @link inputstream } .


apply the specified window row to the current row .

marshall the given parameter object .
marshall the given parameter object .
<p > ip address blocks that belong to the platform . < / p >
<p > the ids of the trusted advisor launch addresses . < / p >
<p > the ids of the trusted advisor launch addresses . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
check if the path is a file path
validates the given string representation of a particular class .
marshall the given parameter object .


gets the file class for the given class .
load all the classes in the class .
get the byte array for the given class .
send a response to the list of .
marshall the given parameter object .
sends the current connection to the connection .
reset the connection state .
sets the shared attribute for the given task .
get the flash id of the request .
marshall the given parameter object .
marshall the given parameter object .
get the resource from the given location .
converts the class to the classloader .
<p > the tags to add to the resource . < / p >
marshall the given parameter object .
encode the encoded bytes to a sequence of octets .
decodes a sequence of bytes from the given sequence .
decodes a byte array .
encodes the given byte array to a byte array .
encodes a byte array to a byte array .
encodes a byte array to a byte array .
write the current oid to the stream .
<p > a list of job objects . < / p >
<p > a list of job execution status . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
marshall the given parameter object .
loads properties from a string .
returns a { @link duration } which is a number of times the last { @link } is emitted .
returns the value of the previous value in the given range .

remove all occurrences of a from the given
wait for the current poll condition .
{
marshall the given parameter object .
<p > the details about the specified aws cloudformation aws cloudformation aws cloudformation aws cloud directory . < / p >
<p > a list of source source types that aws cloudformation updates the cloudformation source . < / p >
<p > the details of the <a > stack< / a > to be returned . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java .
marshall the given parameter object .
get url url from the given file .
marshall the given parameter object .
marshall the given parameter object .
calculate score for the pruning .
returns the best score for the given .
marshall the given parameter object .
search for the segment hashes .
marshall the given parameter object .
marshall the given parameter object .
runs the given credentials in the specified region .
marshall the given parameter object .
positions the recyclerview in the view position .
finds the view with the given index .
check if the item is a subtype of the given position .
animate the view to the view .
restore the current restore view for this animation .
reset the state of the .
<p > performs the following feature actions : <br > < / p >
marshall the given parameter object .
get the message s value from the message .
marshall the given parameter object .
returns an iterator for the literals .
calculates the sha1 hash of the given input .
estimates the n - th chunk of a single word .
get the bits of a single bit in the table .
returns the pq index of the geometry .
marshall the given parameter object .

open a new connection
factory method for creating a new { @link } instance .
create a { @link } using the given parameters .
create a friendship to a neo4j object
run the operation .
add a converter to the list of converters .
transform the given { @code } into an { @link extractor } .
persist the provided { @link list } of { @link copyentity } s
delete all values from the model leaving the id
delete a batch of objects from the model .
delete model id
/ * ( non - javadoc )
/ *
create a virtualmachine policy for a blueprint .
authenticated resource that handles the given certificate selector .
{
marshall the given parameter object .
marshall the given parameter object .


handles the field - type .
-------------------------------------------------------------

{
{

read the json object from the specified object .

get the raw type of the type .
returns the name of the given attribute name .
returns the name of the type name of the given type name .
convert the json to json string
formats the command line arguments .
writes the content of the given writer to the output .
writes the given object to the given output .
{
write a custom class to the writer .
returns the custom gson class for the given class .
returns the custom for the specified class .
writes the object to the persistent store .
reads the contents of the input stream into a bytebuffer .
transfers the data from the given stream to the given stream .
transfers data from the given channel to the given dst offset .

write json to json .
ensure that the map contains a json string .
serialize the collection of objects to the end of the collection .
writes the json string to the output .

write a single object to the underlying stream .
writes a json object to the list of objects .
marshall the given parameter object .
{

<p > the container definitions . < / p >
<p > the container definitions . < / p >
<p > the containers for the container definition . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
<p > the attributes that are associated with the specified elastic ip address . < / p >
<p > the attributes that are associated with the specified elastic ip addresses . < / p >
<p > the attributes of the container instance . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
<p > the placement indexes for each reusable cluster . < / p >
<p > the placement policies of the metric type . < / p >
<p > the names of the instances that are associated with the specified elastic transcoder . < / p >
<p > the names of the resources that are associated with the specified elastic transcoder . < / p >
<p > the paths of the task executions . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
<p > the list of task executions . < / p >
<p > the list of containers in the list . < / p >
<p > the list of execution of the execution of the task executions . < / p >
<p > the list of task executions . < / p >
gets the person information .
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
gets the value of the property .
marshall the given parameter object .

deletes the specified key from the bucket .
marshall the given parameter object .
returns the approximate count of the buckets of the bucket .
{
returns true if the given inputstream is a valid source .
aborts the { @link } .
<p > the entity recognizer . < / p >
<p > the entity types . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
sends a upc - off - to -
init the application bar .
create the admin menu .
creates the link necessary to create the link necessary to display an html document .
marshall the given parameter object .
creates a new description .
marshall the given parameter object .
check the java policy to the { @link } .
main method .
check if the threshold is exceeded .
initialize the .
create a new .
this method is called by the to be executed .
waits till the next slot is received .
check if the block is in the same block .
remove all blocks from the block .
parse the command line options .
/ *
close the close event .
mark the current address and marks it as a new one .
altitude time for a time interval
gets the value of the property .
gets the value of the property .
gets the value of the property .
gets the type of the column .
marshall the given parameter object .
prepare the log file for the command line .
get jobs that are not in the .
get the interval of the given list of tasks .
check if the command is a valid identifier

returns the absolute absolute absolute absolute value of the absolute value of the specified int .
calculate the absolute vale for the given number of numbers .
<p > the actions of actions . < / p >
creates a new security action .
sets the string value of the string .
sets the value of this { @link } .
skips the specified { @link } .
compares two objects with two bytes .
returns the bytes of the given string .
read a string from the given input stream .
writes a string to the output .
this method is used to get the longest byte of the first byte in the string .
start the server .
associates the specified object with the specified object .
returns true if the server is a windows os .
starts the emulator .
attach a new to the .
tries to find the { @link } for the given { @link } .
checks if the given device has a bluetooth permission .
writes the fault start and stop the .
writes the script to the script .
marshall the given parameter object .
unregister the cas service .
extract the port from the device .
check if the command is a non - recoverable .
/ * ( non - javadoc )
returns the executable type of the current environment .
returns the wait time for the current node .
returns the options for this agent .
/ * ( non - javadoc )
marshall the given parameter object .
returns the location of the location .
returns the method that is used to create a new method from the given class .
copies dependencies from the source file to the given file .
collects files from the given directory .
adds resources folder to the given folder .
copies all bytes from the inputstream to the output stream .
copy the given directory to the destination directory .
get the default meta - inf .
marshall the given parameter object .
returns the jar lib directory .
get the jar artifacts for the jar file .
build the trust store for the directory .
returns the main class name for the nfs file .
get the path of the client .
returns the jar file that is the jar file that is the jar file .
returns the location of the target resources in the target directory .
*********************************************************************** () this method will load the properties from the properties file .
unzip the package name .
returns true if the given file is a package package package package name .
start the upgrade operation .
adds a codec to the list of codec configurations .
get the source blocks of the blocks .
get the list of parity blocks in the sequence .
check if the block is corrupt .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
add a new entry to the cache .
/ * ( non - javadoc )
returns the last item of the data .
checks the content of the edit text box .
display the current text to display the text to display to the builder . <p >
{
{
displays the text for the given text .
disables the edit text .
updates the editor seek button .
set the for the text .
set the visibility of the animation .
marshall the given parameter object .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
marshall the given parameter object .
<p > a list of notifications that were added from the notification . < / p >
<p > a list of notifications for the specified budget . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
/ * ( non - javadoc )
get the sort rate for the current time .
/ * ( non - javadoc )

marshall the given parameter object .
returns whether the given service is a service registered service .
verifies that the agent is responded to the agent .
register a service in a {
register a service .
registers a new vm with the specified name and the service instance .
registers a script .
add a service to the server .
this method is used to register a specific from the .
removes the from the url
registers a new { @link } with the specified id .
register a script .
registers ttl for given id and ttl .
register a ttl in the database .
checks if the given is a valid iri .
get messageid .
remove a from the response .
get agent info from json string
returns the list of of the kie form .
get the members of the gitlab api .
removes a journal from the node .
check if the uri is a valid uri .
check the ttl ttl .

warn the log of the given message id .
check the specified endpoint and the given endpoint id
this method is used to retrieve the critical advertisement .
marshall the given parameter object .
marshall the given parameter object .
registers a worker to load metrics .
{
{
{
{
{
marshall the given parameter object .
sets the horizontal vertical alignment for the alignment .
sets the alignment options for the alignment .
removes the name from the constant pool of this name .
validates that the node is a superset of the task .
validate tracking - alive .
write the ncml data to the block .
read the fields from the input stream
validate reference type and sets the remote type .
sets the mode .
extract the java - child job from the job conf .

adds a job jar to the job jar .
append a hadoop classpath to the system properties .
delete dir dir
sets the jvm - specific jvm job .
set the task branches to be ended .
handle the request .
marshall the given parameter object .
remove a connector from the
{
{
handles this request to the given { @code value } .
extract the code from the request
extract headers from the httpservletrequest .
marshall the given parameter object .
marshall the given parameter object .
/ * ( non - javadoc )
************************************************************************
shutdown the close stream to the server .
{
creates a new { @link } instance for the given { @link serializer } .
check the state of the input stream .
flush the buffer to the output stream .
creates a new { @link } and registers its serializer .
creates a new { @link } and registers its serializer .
marshall the given parameter object .
checks whether the string is a valid identifier for a given string .
check if a character is a valid identifier id .
converts a string to a bitset .
<p > the attributes of the <code > / code > . < / p >
marshall the given parameter object .
gets the datanode nail statistics about the dead tasktracker .
{
returns an iterator for each space in the database .
deletes the given space and removes space space space .
read properties from a database and returns the content .
compares properties to the source map .
{
remove a property from the map .

/ * ( non - javadoc )
load a file from the input stream .
{
/ * ( non - javadoc )
converts the fields into a thrift object .
convert a field value to csl field .
converts a value to a string .

<p > a list of <a > / a > objects that contain the specified status information about the endpoint . < / p >
<p > the ids of the documents in the db cluster . < / p >
<p > the ids of the manual db snapshot . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
copy the contents of the given { @code snapshot } into the given { @code } .
returns the code for the current .
marshall the given parameter object .
check if the current cell is a valid removable .
marshall the given parameter object .
skips over the input stream starting at position { @code skip } value in the end of the iterator .
check that the source file is writable .

copy the job to the hadoop cluster .
read the csv file from the given job .
get the chunks of the file that contains the given chunk of the given file path .
{


delete the directory

create a new conf conf configuration for the given hadoop configuration .
create a new jobconf for the given job .


checks if the given { @link file } is in the given directory .
recursively splits the given file with the given paths .
<p > the key - value pair list to be used . < / p >
check stereo tasks and also set the file name of the file .
<p > the server groups . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
check if the given path is a string .


create a new serversocket from the given port .
creates a new instance of .
parse the list of chains to the list of matches .
marshall the given parameter object .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
calculates the maximum of the {
{
{ @inheritdoc }
this method is called from the { @link ( ) } method .
{
creates a pseudo - hypergraph and returns a weight of the hypergraph .
{
marshall the given parameter object .
execute the command .
get the classloader for the current classloader .
add dependencies to the classpath .
add a project dependency .
resolves the class of the pom .
marshall the given parameter object .
{
get from conf
adds a mapper to the { @code } map .
sets the reducer function to the reducer .
{
returns the jackson mapper for the given output mapper .
/ * ( non - javadoc )
closes this {
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
<p > a list of rows that you want to insert to the table . < / p >
<p > a list of rows that are required to execute . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
get attributes set of the attributes .

execute the given { @link } .
exit the agent .
computes the mean value of the given quantile .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
returns true if the given node is a bill ancestor .
update the style .
shows the scroll pane .
shows the scroll box to select the scrollable surface .
get the current context .
returns the current context .
get the current context node .
returns the { @link } for the given { @code } .
document me!
paint the scroll area .
<p > the stage id of the pipeline . < / p >
document the tab position of the tab .
document me!
fill glyph line .
document the font font for the font and paint the font interior pane .
paints the content of the horizontal screen .
ensures that the current layout is visible .
updates the tab bounds .
checks if the current scroll position is visible .
get the highlighting height for the specified tab .
{
<p > the id of the pipelines . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
marshall the given parameter object .
write the contents of the given <code > / code > to the output stream .

{
paint the border around the circle .
paint the border of the progress bar .
paint the interior shape .
paint the vertical crop with the given crop .
checks if the current window is a parent of this panel .
/ * ( non - javadoc )
marshall the given parameter object .
marshall the given parameter object .
remove the specified block from the list
remove a block from the list
get the list of nodes that are contained in the block
returns true if the specified node is a replica block .
initialize the configuration for the given uri .
get the size of the blocks of the block .
{ @inheritdoc }
check the file to find the file
{

compute statistics for the bucket .
adds the quaternion to this matrix .
add c + * ( x y ) * y * x + * y .
sets the current quaternion .
equivalent to { @link #ortho . ( . float float ) }
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the quaternion of this matrix .
multiply this quaternion with the components of quaternion values .
/ * ( non - javadoc )
/ * ( non - javadoc )
divide this quaternion using the supplied vector .
divide the quaternion by the quaternion components .
multiply this quaternion by the quaternion values .
computes the dot product of this matrix .
rotates the triangle of the given x .
rotate the plane .
/ * ( non - javadoc )
{
returns a new complex instance of this complex type .
creates a new quaternion from the given radians .
creates a new quaternion from the current quaternion .
create a spherical x - y angles .
creates a new quaternion from the given radians and the rotation of the rotation function .
returns a quaternion from radians from the specified radians .
computes the angle between two angles .
creates a quaternion from the quaternion axes .
given a quaternion - d quaternion then returns the quaternion <code > / code > .
given a quaternion - d quaternion vector of the float components of the quaternion <code > / code > and the <code > angles . min_value< / code > quaternion and casting the components to <code > ( x y z ) < / code > .
creates a rotation matrix that computes the product of the complex quaternion .
creates a new direction randomly drawn from a random rotation .
creates a new direction phi phi .
creates a direction of the theta phi
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
<p > the rule - related verification rule . < / p >
<p > the rule - related verification rule . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setrules ( java . util . collection ) } or { @link ( java . util . collection ) } if you
<p > the attributes that you want to update . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
check if the current user has the same rights as the current displayer .
checks if the given {
marshall the given parameter object .
<p > the value of the manual db snapshot . < / p >
<p > the value of <code > / code > field . < / p >
<p > the value of the manual db snapshot . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > the ids of the user - id associations . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
reads the header data from the disk .

returns the next record in the record .
start a job .
get the list of companion raid files that are the codec trackers .
get the list of files that are currently in the source directory .
this method returns aggregate status of the newer topology .
resolve the given symbol declaration as a symbol .
analyze the type of the given symbol .
transform ray to a array .

load model data from the given reader .
find the leaf node at the given rootpath .
returns the leaf of leaf nodes of leaf root node .
marshall the given parameter object .
checks if the given { @link } is not present .
<editor - fold defaultstate = collapsed desc = component identifier fold > facet )
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
===================
{
paint the foreground maximized state .
paint the mouse - over state .
paint the pressed state of this graphics context .
paint the menu .
convert a list of interior card header to a new shape .
set the shape width of the shape for the x axis .
check if the character is valid .
check if the given name is a valid file name .
get the size of the buffer size .
get the buffer size .
encodes the string as a string .
calculate the integer value of the next n - by - n - 1 .
marshall the given parameter object .
<p > a list of the typed events . < / p >
<p > a list of the typed events . < / p >
<p > the days set to the specified time . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
add a text to the text
add a new text to the builder .
marshall the given parameter object .
creates a new { @link keepassfile } for the given parameters .
<p > filters the detected values for each device type . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setfilters ( java . util . collection ) } or { @link #withfilters ( java . util . collection ) }
marshall the given parameter object .
reads a line from the current line .
reads the next line from the buffer .
reads the next line from the text . if the specified text is <code > null< / code > then <code > true< / code > is returned .
reads a line from a text string .
returns the job state for the given state .
returns true if the job is not complete .
////////////////////////////////////////////
returns the new state of a job state .

resolves the title of a string .
print the given { @link } to the given { @link outputstream } .
create a new interim backup file
converts a temporal object to a datetime object that is a date - time that is in the chronology .
adds a domain to the list of domain - domains search .
marshall the given parameter object .
{
marshall the given parameter object .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
writes the current { @link bytebuffer } to the current stream .
checks if the given { @code } is available .
checks if the given destination is a fedora - time date - time .
checks if the given date is a valid destination .
copies the content of a { @link file } to a file .
checks if the given file is a file .
verifies that the given resource is a file or not .
{
copies the given entry to the given destination .
creates a new { @link } that combines the input { @link path } to a { @link filesystem } .
creates a new { @link } from a { @link } .
creates a new { @link } instance from the given { @link io . netty . channels . stream } to the given { @link } .
get the parent location for the location of the location .
check if the location is a directory .
the entry to the target jar .
<p > a key - value map specifying key - value pairs that are associated with the integration . < / p >
marshall the given parameter object .
<p > the expressions returned by the grant . < / p >
<p > the expressions associated with the current status or <code > metadata< / code > if <code > / code > is <code > true< / code > . < / p >
<p > the expressions in the specified expressions . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
marshall the given parameter object .
marshall the given parameter object .
{ @inheritdoc }
<p > creates a new . < / p >
<p > creates a new amazon chime user account . < / p >
<p > deletes a specified db cluster . < / p >
<p > deletes the specified id . < / p >
{
{
{
<p > describes the specified db cluster . < / p >
<p > describes the customer master . < / p >
<p > describes the job id . < / p >
<p > returns information about the configuration of your aws account . < / p >
<p > lists the ids of the available availability zones . < / p >
<p > lists the results in a list of thumbprints . < / p >
<p > lists the licenses for your image . < / p >
<p > returns the list of available amis machine ids that you want to retrieve the list . < / p >
<p > modifies the specified schedule . < / p >
<p > modifies the specified amazon redshift hsm instance . < / p >
<p > modifies the specified amazon redshift resource group . < / p >
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
<p > the tags to add to the robot . < / p >
creates a new < / code > {
creates a new < / code > {
creates a new failure failure .
report an exception .
asserts that the given { @code file } is not { @code null } .
asserts that the given file is not equal to the given one .
asserts that the given directory is not { @code null } .

/ * ( non - javadoc )
/ * ( non - javadoc )
<p > lists of resources that have been created for this task . < / p >
<p > the arns that were arns . < / p >
<p > the assessment action . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
<p > setter for the desktop . < / p >
marshall the given parameter object .
convert a { @link bigdecimal } to { @link bigdecimal } .
convert the given value to a json string .
marshall the given parameter object .
ends the current { @link } .
marshall the given parameter object .
process the value of the current .
start the .
start the new element .
the method will generate a new element .
called when the key is not initialized .
create the rehash .
initialize the .
get the available services .
/ * ( non - javadoc )
get the features of a particular id of the specified group .
get the features of a particular category in the specified category .
get a rectangle from a latitude longitude .
get the features of the features given in lat / lon coordinates .
get the list of features that have the given category .
search for a particular id within the given range of interest .
get features of feature
get the features of features whose category of features .
build the request for the given request .
downloads a service file .

get the number of in the bounding box
destroys the current connection .
get the error message for a given id .
register the service .
/ * ( non - javadoc )
find the attribute value .

compares this { @link } to a { @link } .
marshall the given parameter object .
marshall the given parameter object .
get attribute of attribute .
get the template for the specified template .
marshall the given parameter object .
check if the current value is encrypted or not .
add a new value to the map .
get the value for the given key
marshall the given parameter object .
generate the metadata for a group of members .
clear the backup files .
marshall the given parameter object .

this method is called when the thread is running .
read block and tail of data .
append data to the block .
writes the block block to the block .
reads metadata from metadata .
/ * write data to the block .
read data from the block store .
fill block data
/ * update the block block of blocks .
sends a hello - rpc request to the given output stream .
read a contiguous block of and stores the data in the block
marshall the given parameter object .


remove the element at the given index .
returns a new { @link iterator } that will return the number of shards that were retrieved . this is the equivalent to { @link ( object int int ) } . the { @link () } is used to obtain the shard iterator . the { @link () } is used to obtain the shard iterator . the {
print the current list of variables .
compute the capacity of the normalization .
this method is called from the {
given a condition determine the name of the { @code } .
compares two { @code selector } and { @code selector } and whose value is { @code null } .
get the string representation of the xml document .
get the value of the author condition .
get the condition for the current user .
get the current jcr value from the current context .
{
returns the string representation of the current context of the given condition .
returns the string representation of the cron expression that is evaluated by the condition specified by the expression .
determines the range of expectations that are compared by the given condition .
simplified method form for invoking the operation with an asynchandler .
simplified method form for invoking the operation with an asynchandler .
simplified method form for invoking the operation with an asynchandler .
marshall the given parameter object .
<p > the endpoint names . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
<p > the names of the endpoints associated with the devendpoint . < / p >
<p > the names of devendpoint . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
<p > a verification request . < / p >
<p > a map of key - value pairs containing the attributes that are associated with the given key . < / p >
marshall the given parameter object .
returns the boundary of the two vertices .
show the background image chooser .
initialize the graph editor .
/ * ( non - javadoc )
setup the .
export the given file chooser to the file .
creates a new system { @link } .
load the particles from the current location .
save the system data
set the viewpager state .
update the mode .
start the stand alone particle .
returns a resource resource
check if the resource exists .
get the resource url for a given url .
adds a new hml - only element in the opencms vfs to the given class . <p >
adds a mime type to the given mimetype . <p >
adds a relation type . <p >
<p > a list of <code > / code > objects . < / p >
<p > the results for your application . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
adds a resource type to the resource type . <p >
find the struct for the given name .
write rest to the data .
read the next tag from the input stream .
read a type info
returns the for the given tag .
returns the default type for the given resource type . <p >
<p > the <a > sdktype< / a > objects describing the <a > sdktype< / a > . < / p >
<p > the parameter name of the database that the specified database parameter is defined . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setparameters ( java . util . collection ) } or { @link #withparameters ( java .
returns a new { @link } instance . <p >
get mime type of the mime type .
<p > the reserved nodes that are associated with the node . < / p >
<p > the reserved instance listing . < / p >
<p > the node offering . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
get mime type from filename . <p >
create the points .
find the space for the space .
find the path of the source space to a given path keeping the space and the given color .
returns true if the given ray is a rectangle with the given angle and the line segment .
estimates the edge layers .
marshall the given parameter object .
returns the resource type resource type . <p >
returns the template loader for the given resource . <p >
refresh cached data for the current session .
copy meta files into the storage directory .
write the image to the current image .
checkpoint the current state of the .
download the image from the journal .
update the current image .
write the journal data to the journal segment .
method called by the to update the journal .
remove the journal log entry .
marshall the given parameter object .
recovers the journal .
recovers the image to be displayed .
downloads the current node .
close the stream and releases the close state .
create a new for the given epoch .
check whether the current request is a valid {
checks if the expression is not a valid expression .
start segment .
log the segment and update the segment .
/ * package
log a new object .
a segment .
open the journal entry .
marshall the given parameter object .
/ * /////////////////////////////////////////
insert image to image file .
extract the data from the given .
persist the data in the .
find the index of the specified substring in the dictionary .
find the byte - array of the two byte byte array .
find the nth occurrence of the given length in bytes .
splits the given key into the string .
read a line of text .
<p > describes the job id . < / p >
<p > cancels a job id . < / p >
<p > creates a deployment job . < / p >
<p > creates a new container . the robot groups are copied to the robot . < / p >
<p > creates a new application application . < / p >
<p > creates a new version of a robot . < / p >
<p > creates a new application . < / p >
<p > creates a new version of a application version . < / p >
<p > creates a new job result . < / p >
<p > deletes the specified aws region . < / p >
<p > deletes the specified application . < / p >
<p > deletes the specified ec2 instance . < / p >
<p > deregisters a specified master group . < / p >
<p > describes the deployment job . < / p >
<p > describes the specified fleet . < / p >
<p > describes the specified robot . < / p >
<p > describes the specified robot . < / p >
<p > describes the specified simulation application . < / p >
<p > describes the job artifacts . < / p >
<p > lists the deployment jobs that are associated with the specified deployment . < / p >
<p > lists all your account models . < / p >
<p > lists the current aws region that are associated with the specified amazon chime account . < / p >
<p > lists the amazon ec2 resources that are associated with the specified amazon chime voice web resource . < / p >
<p > lists the list of jobs associated with the specified search request . < / p >
<p > registers a new master robot . the list is empty and the status of the instance is not recommended . < / p >
<p > launches a new job . the job id is used to track the job id . < / p >
<p > sends a job to a deployment . < / p >
<p > updates the specified robot application . < / p >
<p > updates the specified application . < / p >
initialize the data for the dbase file .
seeks to the given offset in this buffer .
<p > the findings of the findings of the findings . < / p >
<p > the findings of the findings . < / p >
read the next byte from the stream .
write the next integer to the stream .
return next free space in this polygon .
returns the number of bits in the specified position .
returns the number of bits in the res .
/ * ( non - javadoc )
returns the string representation of the file .
read the next character from the file .
get the bytes from the given offset .
marshall the given parameter object .
report an exception with error message .
report an exception with a message .
marshall the given parameter object .
populates a { @link } with the given parameters .
sets whether or not the music should be played .
sets the current music volume .
initializes the .
/ *
performs a stereo sound of cameras .
checks if the current position is visible .
find the free source .
pause the animation playing around the source player .
set the .
creates a new resource type .
creates a new { @link } object that represents a <code > / code > .
creates a new resource type .
creates a new object .
creates a new resource type .
gets the audio stream .
gets the audio status .
get the for the given input stream .
sets the current sound .
sets the current stream to the current state .
poll the supplied time and returns the current state .
check if playing or upgrade .
marshall the given parameter object .
saves the data to the output stream .
<p > returned response . < / p >
<p > the <code > / code > response validator . < / p >
<p > the validation rule validation errors . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
checks whether this tune is a descendant of this { @code } .
sets the bounds of this rectangle to this rectangle .
sets the bounds of the specified viewport .
scales the image
sets the width of the sprite .
sets the height of the height .
checks whether this circle touches another
check whether the given ray is a quad with the given values .
marshall the given parameter object .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
marshall the given parameter object .
dump the given file to the file .
marshall the given parameter object .

main method .
returns the value of the given type casting to the current class .
returns the taskstatus status of the task .
returns a new { @link } for the { @code } .
converts the specified { @link exception } to { @link } .
creates a new { @link } for the given status .

<p > a list of <code > / code > objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
<p > the list of <code > currentmetric< / code > objects describing the <code > / code > parameter . < / p >
<p > the list of <code > currentmetric< / code > objects each of the <code > / code > object represents . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection )
print usage usage usage for the usage of the command .
upgrade the upgrade policy to the upgrade .
add a metrics to the list of metrics
set the text to this string .
set the current position in this buffer .
sets the maximum length of the maximum length of the given length .
this method is called when the text is rendered .
ends the current prompt .
get the file path of the job .
marshall the given parameter object .
<p > the list of <code > attribute< / code > objects . < / p >
<p > the indices of the data . < / p >
<p > the stats for the hit . < / p >
defines the stats for the stats .
marshall the given parameter object .
returns a unique unique list containing all the in the list
returns a list of the controls - 1 .
binds the command to the command .
clear the command .

fire the event to enter a notify event .
fire a new event to the list
marshall the given parameter object .

increase the layout of the diagram
set the position of the position of the skeleton .
set the position of the animation .
set the minimum size of the textview .
<p > the supported values for the support character . < / p >
<p > the supported values for the specified hosted zone . < / p >
<p > the character set to include . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > the target status to upgrade . < / p >
<p > the target and target output targets . < / p >
build a { @link } .
builds a { @link } that will be used to build the { @link } of the { @link } .
build the {
check if the task is closed .
<p > the time zone serial providers that aren t specified in the specified time zone . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java
<p > the log log types that comprise the <code > / code > parameter . < / p >
<p > the log types . < / p >
<p > the log types . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
<p > the name of the simulation engine to use for the reservation engine . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util
<p > the names of the names of the names of the reservation types that the reservation supports the specified hosted zone . < / p >
<p > the names of the names of the names of the supported db engine types that are described by the db engine . < / p >
<p > the names of the trusted advisor identifiers for the db device . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
marshall the given parameter object .
marshall the given parameter object .
writes the to the persistent store .
create a new pool - info {
create a new pool
create a new instance of the pool manager .
create a string from the pool
checks if the pool is a valid shortcode pool .
returns the module configuration for the plugin .
returns the size of the size of the size of the size of the size of the size of the size .
store a configuration of the data in the given { @link } .
processes the fields in the target object .
processes the field .
join values from string separator to a string .
transform the results of applying the given collection to a collection .
creates a new { @code immutablelist } from the given { @code list } .
returns a list of the results of the given predicate .
create a dom node from a node .
checks that the given value is not null .
assert that the collection contains only the given name .

add headers to the { @link } .
marshall the given parameter object .
this method is called when the dialog is not available .
marshall the given parameter object .
generate a new tag .
set the address to be used for the host .
/ * ( non - javadoc )

this method is called when the is received from the .
/ * ( non - javadoc )
sends a unicast message to the given request .
sends a transaction to the server .
this method performs a request to send a message to a message . make sure to override this method to perform validation on the server . <p > this method is equivalent to : <code > ( http 2 ) once this is invoked from the ( http ) method . < / pre >
alter this from the given and sends it to the given .
send a transaction to a transaction .
/ * ( non - javadoc )
perform the operation using the jain - sip operation from the given request body . this method will perform the following headers :
this method is used to send a response to the given .
this method is used to get the request for the request .
sends a request to the remote address .
sends a request to the server using the specified request .
this method is used to initiate a event on the server .
sends a reply to the received message .
this method performs basic authentication of a basic message . this method is equivalent to calling this method with a different way to perform the basic authentication .
this method is to call this method to perform the actual sending of the message .
sends a response to the outbound response .
/ * this method is used to initiate a request for the outbound response .
get the authorization header for the given request uri .
returns the string representation of the value of the .
marshall the given parameter object .
sends the given metric to the given server .
/////////////////////////////
marshall the given parameter object .
the given {

create a phone with sig .
create a new with the exchange .
/ * ( non - javadoc )
process the request .
/ * ( non - javadoc )
method called by the { @link } method .
write the message to the client .

<p > the scripts that are associated with the realtime script scripts . < / p >
<p > the scripts that are associated with the realtime script . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
<p > a list of network acl about the specified gateway . < / p >
<p > a list of network acl about the gateway . < / p >
<p > the list of network acls . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
escape a string to the given objectname .
main method .
update the zk id of the cluster .

gets the value of the property name .
gets the value from the given configuration parameter .
returns the value of the given { @code name } from the specified settings .
returns the boolean value of a { @code string } as a boolean .
returns the string value from the given configuration .
returns the string value from the given settings .
get the version of the agent .
check if the current interval is in sleep seconds
build a message from a string .
builds a metric path .
<p > the permissions for the specified iam user . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
marshall the given parameter object .
build a for the option .
process the command line options
get all jars from hdfs .
check if the file is valid .
parses the command line arguments .
prints the command usage .
<p > the categories associated with the instance . < / p >
<p > the categories to include . < / p >
<p > the categories to include the service . < / p >
<p > a list of destinations . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setdestinations ( java . util . collection ) } or { @link #withdestinations ( java . util . collection ) } if you want to
<p > the media type . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
marshall the given parameter object .
reads unicode bidi character .
add a websocket listener to the session .
remove the websocket listener from the session .
check if the given message is a valid pe file .
returns the html for the html code .
{

removes the from the context
checks if the tag is inside the tag .
get the tag of this tag .

get the node node of the node
marshall the given parameter object .
<p > the list of <code > / code > objects . < / p >
<p > the list of <code > / code > objects that contain the specified event . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link (
returns the for the given .
get the document node from the xpath node . xpath expressions are supposed to be used in xpath of the xpath .
same as {
marshall the given parameter object .
find the for a particular

returns the character set for the character in the given range .
returns true if the given resource name is not null .
returns true if the given resource is a file or not .
register a { @link modifier } for the modifier modifier .
register the action on the specified { @link } .
delete the action .
registers scan scan for the scan .
get the current status of this pool .
get the value for the given class .
returns the entity object associated with this object .
returns the entity for the given key .
this function is called by the map to pass the lookup for the specified attribute .
/ * ( non - javadoc )
put the action to the put operation .
associates the specified entity with the specified entity .
associates the specified entity with the specified entity .
this function is used by the { @code } to be used for the specified amount of time .
delete this object from the passed object .
delete the action .
delete the specified partition key
deletes the specified partition .
returns the builder for the entities for the specified entity .
create a batch of objects from the specified collection of entities .
marshall the given parameter object .
start the singleton .
add a { @code } to the list of { @code } objects .
add a { @code } to the list of fields .
creates a { @link iterator } for the given name .
marshall the given parameter object .
<p > the resource identifier for a resource type . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > the list of available containers . < / p >
/ * ( non - javadoc )
sets the list of children .
validates if the given cssvalue is valid for the given cssvalue .
{
returns a filter that accepts all the documents matching the specified logical or filter .
returns the class of the specified storageexception class . <p >

returns true if the data is in the range [ i ] is [ ] .
read the value from the stream .

converts a field name to a string .

无视private / protected修饰符 .
invokes the given { @link object } on the given { @link object } .
invokes the given method on the class hierarchy .

copy object to object .
writes the item to the given item .
marshall the given parameter object .
get a view of the dataset provided by uri .
creates a view of dataset uri with uri dataset dataset .
get a view of the given path from the given path .
{
marshall the given parameter object .
check if a type is a type of a type .
checks that the field is not null and not a primitive type .
checks that the schema is a schema field .
creates a new partition schema schema for the given schema .
checks if the given schema is a field name .


constructs a schema schema from the given schema .
creates a superset of a schema for the specified schema .
merges two schema types into a new schema .
add the given class factory to the class .
marshall the given parameter object .
marshall the given parameter object .
returns the private key for the given key and password .
returns the class of the given class descriptor .
finds the deployment class for the given class .
get the class of a class .
returns the name of the deployed class name .
<p > the attachments . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override the
marshall the given parameter object .
this method is used to parse the values in this { @link } .


marshall the given parameter object .


<p > the ip addresses of the regions in this list . < / p >
<p > return a new vector that is backed by the given byte buffer { @code b } < / p >
<p > return a new vector that is backed by the given byte buffer { @code b } < / p >
marshall the given parameter object .
process the request .
{
/ * dagger the mbean is fragile .
create a generator initialized with a default component generator .
create a generator initialized with a default component generator that produces values in the range { @code [ - 1 . 0 65536 . 0 ] } .
create a generator initialized with a default component generator that produces values in the range { @code [ - 1 . 0 1 . 0 ] } .
factory method for { @link } .
add the specified view to the view .
handle a new request .
creates a connector from the given { @code } .
prepares the user environment .
returns whether the request is a path of the request .
check if the url is valid .
parse the given type into a string .
parse the given string to a string .
splits the given string into a list of substrings .
splits a string into a list of key - value pairs .
check if string is null or empty .
<p > return a new vector that is backed by the given byte buffer { @code b } < / p >
/ * ( non - javadoc )

marshall the given parameter object .
<p > the list of <code > aws - identity - configuration< / code > objects . < / p >
<p > the list of <code > parameter< / code > <b > status< / b > to <code > / code > . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection
marshall the given parameter object .
checks if the user has a password .
<p > information about the instances . < / p >
<p > information about the instances . < / p >
<p > information about the credit data . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
marshall the given parameter object .
returns a value indicating the number of times the number of times the number of two types are the same as the result .
returns the value of the <code > int< / code > value of the <code > i< / code > value . <p > this method is typically used by { @link ( string ) } to throw an exception .
returns the value of the <code > string< / code > as a string .
returns the value of the current date - time at the current date .
tag ( s ) to add to the search .
returns a list of the given type as a list of <code > / code > .
/ * ( non - javadoc )

returns a new array containing the specified type . if the result is not a new array it will be returned .
returns the bucket metadata for the bucket .
returns a region that extracts the region from the uri .
loads metadata from an existing resource .
load metadata from an { @link } .
loads metadata from an { @link classloader } .
performs the given { @code uri } and { @code uri } .
{
{
{
marshall the given parameter object .
{
creates a new array with the specified size .
<p > trace segments in the current apns server . < / p >
<p > the stream information . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
convert the value to a type of the type .

returns true if the parameter is not present .
returns the html for the given output .
get the json representation of the json object .
init parameters



checks if the device is connected to the device .
<p > the attributes of the attributes . < / p >
returns a string for the specified url .
checks whether the wifi state is a wifi state .

checks if is mobile or equal to the device is not enabled .
check if the connection is alive
check if the connection is a server connection
{
/ * ( non - javadoc )
stop the osgi service .
<p > getter for the http basic authentication method . < / p >
/ * method to get the configuration for the .
/ * dispatches the event to the current event .
set the total number of items in the particle system .
marshall the given parameter object .

{
{
marshall the given parameter object .
marshall the given parameter object .
<p > a list of attributes that are associated with the specified iam policy . < / p >
<p > a list of attributes that are associated with the specified iam policy . < / p >
<p > the policies associated with the policy . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
encode a signed string to base64 .

checks if the http method is allowed .
/ *
handle a request .
check the given request .
handle incoming commands from command .
encode a list of encoded outputs from the codec .
writes the output of the response to the output .
create a new { @link } instance .
main method .
get the request uri from the request .
run the command
/ * ( non - javadoc )
/ * create metadata for the metadata
convert a base64 encoded ecdsa signature to the encryption metadata for the object .
gets the encryption metadata for the encryption metadata for the encryption .
convert json string to jsonnode
convert a base64 encoded rsa private key to a json string .


decorates a { @link delegate } instance .
returns { @code null } if the { @link completablefuture } is not present .
build the {
adds a global global {
add a template to this engine .
adds a new resolver to the resolver .
set the value of a property .
specifies the { @link } of this { @link } .
register a new callback .
adds a new { @link } to the list of { @link } s .
registers a { @link } to be used for the given name .
register a with the given name .
register a { @link } to be used for the given key .
add a converter to the list of converters .
adds a new { @link converter } to the order of the context .
creates a { @link } for the given { @link } .
creates a new { @link } based on the provided parameters .
creates a new instance of { @link } with the given encryption and default values .
creates a new { @link } with the given parameters .

pushes a new container to the container .
add segment to the segment .
check the root level to the root node .
returns true if the given variable is a valid pdb identifier .
marshall the given parameter object .
adds a new expression to the expression .
marshall the given parameter object .
the tags to be used for the update .
marshall the given parameter object .
marshall the given parameter object .
checks if the given keyword matches the given jpql query .
returns a set of atoms that are of the given atom type .

creates a new triple from two { @code } instances .
join two components together into a single join using the supplied join tree .
join two geometries together .
find join branches

main method .
this method is used to parse the substitution of the conjunction of a datype lhs ( expr ) expression .
stores the given record in the given record .
{
returns the full list of all the elements in this lattice .
gets all objects matching the given criteria .
encodes the given properties into a .
returns an infix iterator of the given { @code } and { @code } .
get a single object for a given property
returns a triple for the given type .
/ *
trims the string of the given string .
removes the first forward slash from the string .
add a node to the node .
/ * ( non - javadoc )
{
iterates over all nodes and collects all nodes in the graph .
<p > the current page of elements from this collection . < / p >
<p > the list of <code > / code > objects containing the <a > / a > element for each individual build . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setitems ( java . util .
returns the number of plaintext charged addresses .
<editor - fold defaultstate = collapsed desc = generated code > // gen - begin : initcomponents
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :
insert array of object [] into the array .
[] array
append a string array to the array array .

<p > the results of the results for each time period . < / p >
<p > the summary statistics for each time period . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if

this method is used to determine the jca name of the drivermanager .

<p > the list of db cluster group to use . < / p >
returns the list of {
returns the address of the user s address .
<p > the sort order of the current aws region . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
{
{
{
factory method for { @link } .
/ * this method is used to check the rhs of two .
todo : refactor this
/ *
/ * ( non - javadoc )
todo : refactor this aaa this bbb is not a representative of the representative of the commutative version of the commutative function .
copy the given map to the target map .
/ * remove the from the
<p > the route settings for the route . < / p >
<p > the stage variables for the resources that are associated with the pipeline . < / p >
returns the component that is visible in the dialog .
returns the component component of the given interaction .

marshall the given parameter object .
marshall the given parameter object .
returns true if the result is a result result .
$antlr start
$antlr start id
$antlr start
$antlr start
$antlr start writing
$antlr start leftparen
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start id
$antlr start
marshall the given parameter object .
$antlr start
$antlr start ws
/ * ------------------------------------------------------------
adds a subject to the search .

prints the string value of the subject .
{
report the given dtd declarations .
{

marshall the given parameter object .
<editor - fold defaultstate = collapsed desc = generated code > // gen - begin : initcomponents
this method is used to select the tree node from the list of .
add the current user to the popup .
gen - last :
gen - last :
fires a drop query with the given parameters .

gets the message from the resourcebundle .
get the message from the bundle .
apply the constraint to the current query .
timezone
/ * [ deutsch ] <p > interpretiert den angegebenen als angegebenen neuen zu sie daten . < / p >
creates a year - based formatting and time zone with the specified values .
todo : explain
{
convert the to a .
parse the data values for the ajax request .
{
execute the callback .
validate the field violations .
evaluate the expression to retrieve the .
validates the form and ajax report .
check if the current user has tabbed in the panel .
gets the form of the tab - level form of the current focused tab .
method that shows the dialog page .
make the request to the twilio api to perform the read .
{
attributes to set on the generated xml element
add a new
<p > adds a list of attributes to the specified amazon ec2 container group . < / p >
<p > creates a target target group . < / p >
<p > creates a new assessment template template for a specified amazon chime compute template . < / p >
<p > creates a new pronunciation of a dl4j - list of layers . < / p >
<p > creates a resource group . < / p >
<p > deletes the specified assessment <code > / code > . < / p >
<p > deletes the specified target target target region . you can delete the target target target . < / p >
<p > deletes the specified assessment template . < / p >
<p > lists the amazon assessment console tasks that are available for the specified assessment job . < / p >
<p > describes the specified assessment targets . < / p >
<p > describes the specified assessment templates . < / p >
<p > describes the iam role role associated with the iam role . < / p >
<p > returns the list of <a > / a > <a > / a > < / p >
<p > lists the findings that you want to describe . < / p >
<p > describes the specified resource groups . < / p >
<p > describes the specified packages . < / p >
<p > returns information about the assessment assessment report . < / p >
<p > returns the descriptions of the specified dimension . < / p >
<p > returns the metadata of the specified amazon s3 resource . < / p >
<p > returns a list of arns that are associated with the specified amazon chime voice connector . < / p >
<p > lists the termination of the assessment workflow engines that are returned by the specified assessment search engine . < / p >
<p > lists the assessment targets that are associated with the specified assessment targets . < / p >
<p > lists the assessment templates that are authorized to the specified amazon chime cloudformation template . < / p >
<p > lists the event subscriptions that are associated with the specified sns topic . < / p >
<p > lists the models that are associated with the specified amazon sagemaker accounts . < / p >
<p > lists all rules that are associated with the specified project . < / p >
<p > rejects a device farm . < / p >
<p > registers a private role . < / p >
<p > removes the specified attribute from the specified distribution . < / p >
<p > sets the tags for the specified resource . < / p >
<p > starts the specified assessment run . < / p >
<p > stops a running workflow instance . < / p >
<p > subscribe to receive notifications from the specified sns topic . < / p >
<p > unsubscribe from the specified sns topic . < / p >
<p > updates the description of the specified target target . < / p >
<p > the fleet id . < / p >
<p > the list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
returns a list of the specified values .
replace the string with the replacement string .
get all files in the specified path .
scan the given path for the given path .

calculates the run id of the given run id .
make the request to the twilio api to perform the read .
make the request to the twilio api to perform the read .
<p > the number of times the value is included . < / p >
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / > < / div > <div color = red style = font - size : 18px ; color : red > <i > specify a list of
marshall the given parameter object .
sets the { @link } to be used for the { @link } .
{
{
{


publish a type and its type .
marshall the given parameter object .
create a to execute create .
create a to execute update .
<p > the tags for the specified tags . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #settags ( java . util . collection ) } or { @link #withtags ( java . util . collection ) } if you
make the request to the twilio api to perform the read .
attributes to set on the generated xml element
marshall the given parameter object .
get the {
returns the emodb configuration for the job conf .
add the requested post parameters to the request .
{
marshall the given parameter object .
create a to execute update .
marshall the given parameter object .
add the requested post parameters to the request .
returns json string to xml .
dispatches a service to the service .
send a { @link } to the { @link } .
/ * ( non - javadoc )

attributes to set on the generated xml element
sets the visibility of the progress bar .
callback that the user has no effect on the ui .
json string to xml .
create a to execute fetch .
create a to execute delete .
create a to execute update .

this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
invokes the method on the invocation of the invocation of the invocation of the invocation .
marshall the given parameter object .
marshall the given parameter object .
converts the object to a json string
marshall the given parameter object .
installs a default { @link } instance .
/ * ( non - javadoc )
make the request to the twilio api to perform the read .
retrieve the next page from the twilio api .
retrieve the previous page from the twilio api .
add the requested post parameters to the request .
make the request to the twilio api to perform the read .
<p > the client vpn endpoint . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
add the requested post parameters to the request .
process the packet .
sends a packet to a batcher .
add the requested post parameters to the request .
marshall the given parameter object .
creates a proxy for the given invocationhandler .
creates a proxy for the given { @link invocationhandler } .
/ * ( non - javadoc )
registers a certain type .
render the block with the given render
callback method called by the {
called by the ui thread to register callback .
registers a block with the given { @link } .
register a new item in the { @link item } .
register the last scan .
renders the last { @link } to render .
register sound sound id
append path to path .
add a query parameter to the query .
add query parameter to the query string
add a query parameter to the query .
replace the parameter values from the query parameter with the given value .
reset the connection .
creates a url for the given encoding .
decode the given encoding .
create a new query with the given name and value
{
create a new instance of .

get the url of the url

create a to execute create .
add the requested post parameters to the request .
create a to execute fetch .
create a to execute create .
marshall the given parameter object .
encode a string into a url .

returns true if the given uri is a port of the default port .
extract parameters from a string .
append a baseuri to the given path .
splits the string with the given string .
split a string into substrings .
splits a set of strings into a set of substrings separated by commas .
append a uri to the given path .
/ * ( non - javadoc )
returns the <code > / code > object that represents the information of this file .
creates a resource from the given file .
creates a resource from the root folder .
creates a resource from the given directory .
returns a set of currencies that are registered for the given { @link monetaryamount } instance .
returns a currency unit .
returns a currency unit in a unit . <p > this method will not return { @code null } .
returns the elapsed time of the minute .
returns the elapsed time of the current event .
{
{
sets the content of this content to the html .
marshall the given parameter object .
<p > summary information about the job allocated training jobs . < / p >
<p > a list of jobexecutionsummary objects with each of the job status . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
returns the rounding for the specified rounding query .
/ * ( non - javadoc )
marshall the given parameter object .
<p > the list of objects . < / p >
<p > the list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
adds a comment to the given root node .
deletes a comment from the current user context .
adds comment to the .
retrieves the comment for the given id .
gets the comments for the given id .
returns the comment for the user .
returns comments from the given entity .
returns the comment for the given start pos .
show comment to the user .
<p > a key - value map specifying request parameters that are associated with the desired page . the method call is a map of key - value value or field . the maximum value parameter is not set . the method call is a request to add or update the value of the value request . the key parameter is a method
<p > the template expressions . < / p >
<p > the devices in the application . < / p >
<p > the address of the request . < / p >
<p > the slot name for the reservation . < / p >
authenticate the user
clear the row .
<p > a <a > / a > to the <a > / a > or the <a > / a > parameter . < / p >
<p > a <a > / a > objects . < / p >
<p > the dashboards to be added . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
serialize an iso8601 date ( serializes it ) .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
open the connection to the server .
/ * ( non - javadoc )
add nodes to the cluster .
find the partition ids for the cluster .
marshall the given parameter object .
parse the request .
parse the given { @link httpservletrequest } from the { @link httpservletrequest } .
marshall the given parameter object .
check if the current context is enabled or not .
creates a new instance of the { @link } .
registers a port for a given name .
checks whether the given name starts with the given name .
add a handler to the server .
returns true if this is an iteration of the current scan .
returns the next element in this list .
close the open graph .
/ * ( non - javadoc )
marshall the given parameter object .
/ * ( non - javadoc )
/ * ( non - javadoc )

sets the current { @link webelementfinder } for this request .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new jobspec graph containing a given { @link } .
/ * ( non - javadoc )
marshall the given parameter object .
<p > the targets of the targets . < / p >
<p > the name of the provider . < / p >
/ * ( non - javadoc )
marshall the given parameter object .
<p > the identity provider . < / p >
<p > the mapping of the <code > attributename< / code > attribute of the <code > attributename< / code > . < / p >
<p > the identifiers of the security provider type . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
parse the inputstream and parse it to the given inputstream .
------------------------------------------------------------------------------------- ||
render the given text with the given arguments .
creates a new user .
creates a new user .
create a new user
/ * ( non - javadoc )

encodes the given byte array into base64 notation .
decodes four bytes from array <var > source< / var > and writes the resulting bytes to <var > source< / var > and destination . the source array must be a four - byte array of length 4 . 0 .
decodes a string into a byte array .
decodes four bytes encoded in base64 format .
shuts down the task .
marshall the given parameter object .
initialize version .
returns the version string for the given language .
read a { @link file } from a { @link file } object
get the { @link } from a { @link inputstream }
returns a { @link } instance from the given reader object .
extract the client provider from the given filename .
get the client credentials from the given request .
encrypt data .
get the signature of the request
encrypt data
compare two strings ignoring case .
{
returns the value for the given property .
returns a reference to the named reference group .
/ * ( non - javadoc )
returns the string representation of this {
returns the query string parameter .
returns query parameters .
returns the relative string to be used .
build a { @link url } for the given { @link url } .
build a { @link url } from a { @link uri } .
return the uri of the specified uri from the current request uri .



marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
transform a map of { @link urlmapping } s .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
creates a new { @link } instance from the given class and arguments .

returns the class for the given relation type .
find the class that matches the given type name .
the method to add an entity to the downstream .
registers a property .
registers the given property type .
scan the resources .
returns the resources for the given lib libs .
parse a path from the given resource .
merges the resource type and return the resource .
marshall the given parameter object .
gets the global variable .
/ * package
compile the given class names .

marshall the given parameter object .
compares this object to the given object .
<p > the record type . < / p >
<p > the record type . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
<p > creates a new <code > / code > object that describes the specified group . < / p >
<p > creates a new group by specifying its subnets . < / p >
/ * ( non - javadoc )
<p > deletes the specified parameter group . < / p >
<p > deletes the specified subnet group . < / p >
<p > describes the default parameters for the specified fleet . < / p >
<p > lists the groups that you want to inspect . < / p >
<p > returns the description of the specified parameter . < / p >
<p > describes the specified subnet group . < / p >
<p > increase the maximum number of steps for the specified replication . < / p >
<p > reboots a node . < / p >
<p > updates the parameters of a parameter . < / p >
<p > updates the subnet groups associated with the specified subnet group . < / p >
----- interface ----- -----
retries the retry attempt .
check if the given id is valid .
retrieve the class for the class .
register a class class with the service provider .
returns true if the service is ready to be executed .
parse a string value .
checks if the service is already visited .
@param keydeserializer { @link keydeserializer } used to deserialize the keys . @param valuedeserializer { @link jsondeserializer } used to deserialize the values . @param <k > type of the keys inside the { @link } @param <v > type of the values inside the { @link } @param <v > type of the values inside the { @link }
marshall the given parameter object .
----- private methods -----
exports the given { @link } to the { @link } .
exports the specified {
serializes the given data to the given output stream .
main entry point for the test runner .
creates a new json object .

{
logs a new error trace .
writes a new error message .
print the value of the given object .
add an object id to the registry .
returns the id of the object .
add a generator to the registry .
returns an object id for the given id .
writes the contents of the block to the output stream .
marshall the given parameter object .
invokes the { @link } implementation .
get the column
get the columns of the columns
{
retrieves the primary key from the database .
returns the schema for this table .
invokes the { @link } method in the catalog schema .

extract the type of the first object from the given type .
extract the type of the given type from the given type .
builds a new constructor from the given class .
creates a new method that implements the specified type .
builds a new method serializer .
{
marshall the given parameter object .
{
<p > the parameters of the simulation application . < / p >
@param keydeserializer { @link keydeserializer } used to deserialize the keys . @param valuedeserializer { @link jsondeserializer } used to deserialize the values . @param <k > type of the keys inside the { @link } @param <v > type of the values inside the { @link } @param <v > type of the values inside the { @link }
<p > the ids of the pull request ids . < / p >
<p > the ids of the pull requests . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
find the query for a given id
creates a new namespace .
{
the method to retrieve the member members from the list of users .
@param keydeserializer { @link keydeserializer } used to deserialize the keys . @param valuedeserializer { @link jsondeserializer } used to deserialize the values . @param <k > type of the keys inside the { @link setmultimap } @param <v > type of the values inside the { @link setmultimap } @param <v > type of the values inside the { @link setmultimap }
marshall the given parameter object .
a simple code : a single record is used to build a single record .
returns the string value for the given type .
{
/ * ( non - javadoc )
<p > newinstance< / p >
{
optimistically s complete got complete

returns a new future that is then sent in the given executor .
returns a future that supports the given function and return the result as a result of the future .
returns a future that is asynchronously transformed by the executor .
{
returns dashboard of all the dashboards
returns the dashboard name for the current user .
creates a new object containing the given type .
{
returns all dashboard that the user has granted .
marshall the given parameter object .
returns the user s id .
updates the user s contacts in the given media .
delete the dashboard revision id from the database .
<p > newinstance< / p >
creates a new object .
/ * ( non - javadoc )
reduce the values of the values in the stream .
<p > newinstance< / p >
get the list of offline entity for the given entity id .
get audit devices from a request .
{
marshall the given parameter object .
<p > the dimensions of the metric is reporting or not . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setdimensions ( java . util . collection ) } or { @link #withdimensions ( java . util . collection )
verifies that the actual { @code value } is greater than or equal to the given one .
verifies that the given { @code double } value is equal to the expected value .
verifies that the actual value is less than the given one .
verifies that the actual value is greater than the other .
verifies that the actual { @code value } is less than the given one .
{
{
asserts that the given { @code type } is not present .
/ * ( non - javadoc )
verifies that the actual { @code type } is not equal to the given type .
verifies that the actual { @code string } is not { @code null } .
verifies that the actual cause of the actual cause is not null .
{
{
{
marshall the given parameter object .
<p > the name of the classifier . < / p >
<p > the <code > / code > parameter to be used . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
init icons
updates the policy of the role updated policy .
get the postmethod method for a post request .
sends a message to a given attribute .
notifies the notification of the bookkeeping of the notification .
<p > the job id that the job is associated with . < / p >
<p > a list of job definitions . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
marshall the given parameter object .
get the data for the current concept
get the { @link } instance for the given type .
{
marshall the given parameter object .
{
<p > the snapshot information about the snapshots . < / p >
<p > the snapshot information for the specified node . < / p >
<p > the list of <code > / code > structures . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
<p > the elastic ip addresses in the specified elastic transcoder . < / p >
<p > the elastic ip addresses in the specified elastic transcoder . < / p >
<p > the elastic ip addresses in the specified elastic transcoder . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
reset the current date and time .
marshall the given parameter object .
get the modification date of the last modification date .
{
{
{
{
{
returns the list of all the organizational units .
gets the entity metadata .
adds the metadata to the class .
gets the entity name from the map .
assigns the given types to the given { @link map } . this method is used to update the types of the { @code entity } . this method is used to update the types of the { @code entity } . all types are used to determine the type of the entity type . this method is used to update the type
assigns the given to the list of .
set the mapping for this class .
returns true if the persistence unit is a .
gets the attribute attribute .
gets the string representation of the string .
returns the capabilities of the given file .
invokes the runnable on the given queue
reads the capabilities from the given file .

read the next character in the input array and convert it to an array of the given length .
read a int value from the given location .
returns the glass window of the window .
returns the modifiers for the modifier .
/ * ( non - javadoc )
called by the .
{
sets whether the cache is enabled .

this method grabs the last log in a bill user group .
this method grabs office pin votes .
this method grabs office key with office and predicted information .
resolves the directory to use for the current directory .
ensure that the class is not supported .
ensures that the given class is not supported .
build the classpath for the classpath .
creates a new logger instance .
creates a new { @link properties } object .
creates a context context .
create a new compiling class loader .
create a new resource loader .
creates a new code chunk code that will be used for the given source code .
creates a new closure that is a closure that is a closure that is a closure that is a closure that is a closure or a closure that is the same as the original object . the target object is created as a new object .
create a new value from the given context
bind a binding to a map .
create a new { @link } that can be used to connect to the given { @link uri } .
marshall the given parameter object .
marshall the given parameter object .
assert that the given message is not null .
assert that a single test is equal to the specified message .
check that the value is not null .


check that the passed array is neither {

assert that the list is not null .
checks if the given message is a valid empty set .
check if the given message is not null .

this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
<p > changes the visibility of a <code > / code > object that is a <code > / code > object that is the <code > / code > field . < / p >
<p > removes the visibility of the specified <code > / code > . < / p >
<p > deletes a message from the specified amazon chime account . < / p >
<p > deletes a specified batch of items . < / p >
<p > retrieves the attributes of a queue . < / p >
<p > retrieves the information of a queue in the specified queue . < / p >
<p > returns a list of unique source source source source or the source source . < / p >
<p > lists the tags that are associated with the specified queue . < / p >
<p > deletes a queue of data from the specified queue . < / p >
<p > creates a new receive message from a specified elastic ip address . < / p >
sends a message to the specified destination .
<p > sends a message to the specified destination . < / p >
<p > sets the attributes of the queue to be updated . < / p >
<p > adds a queue to a queue . < / p >
<p > removes the specified tags from the specified queue . < / p >
marshall the given parameter object .
execute the command .
finds a host .
finds the node that matches this node .
returns all nodes that are contained in this node .
add a new event to the node .
remove a node from the node .
mark the node of the node type .
mark the node s children .
sends a node to the event .
marshall the given parameter object .
builds a list of aclass objects .
sets the property to the target object .
creates a map of property values for the property .

{
marshall the given parameter object .
computes the membership function evaluated at x .
marshall the given parameter object .
{
marshall the given parameter object .
this method will validate the current value of the .

loads the metadata from the keymanager .
add a new edge to this graph . <br > <br > this method is called by { @link ( object ) } to add a new edge to the graph .
add lines to the current line
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
returns a reader for the reader .
waits for the given message to be able to print the given message .
marshall the given parameter object .
<p > the current page of elements from this collection . < / p >
<p > the items in this request . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setitems ( java . util . collection ) } or { @link #withitems ( java . util . collection ) } if you want
===============================================================
returns the name of the enclosing .
{
adds an event to the list of errors .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
sets the value of the query parameter from the query .
sets the value of the property .
//////////////////////
sets the {
sets the retry policy for the current retry .
sets the current interval for the given interval .
sets the {
sets the template to use for the current user .
/ * ( non - javadoc )
returns the next available object .
/ * ( non - javadoc )
add a cluster event .
create a {
creates a new instance of the { @link } for the given { @code } .
creates an instance of { @link } for the given object .
creates a new instance of { @link } .
executes the given dml script .

execute the given {
build the tree node from the given node .
injects the given { @link } to the given { @link barrier } .

enforces the configuration of the specified method and the given configuration .
apply a { @link } to this schema .

get the relative path of a file .
returns the parent directory of this file .
add a new directory to the files .
commits the document to the git commit .

unimplemented .
convert the given { @link string } to an enum type .
visits an annotation of the parameter type .
visits a frame of instructions .
******************** initialization ************************************
******************** resizing ******************************************
{
dump the children of the node to the given output stream .
prints spaces to stdout .
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
returns a list of status files that are contained in the repository .
/ * ( non - javadoc )
build a list of command line commands from the given file .
******************** initialization ************************************
******************** methods *******************************************
******************** resizing ******************************************
******************** initialization ************************************
******************** initialization ************************************
resize the area centered horizontally .
******************** initialization ************************************
******************** methods *******************************************
judges whether the given file is a file or directory .
parse a json type string to a geojson type
{
build a list of command line options .
returns the set of matching rules .
convert a byte to a byte representation .
get the filename of the artifact file .
returns the file extension for the given artifact .
convert a byte to a address .
returns the version of the version file .
returns join join table name .
returns whether the relation type is a collection of transactions .
returns true if this relation is a business result .
call this .
returns true if the object is evicting .

fetch object from the given object .
log a log level of { @link logger } s .
check if the level of the given logger is enabled .
log a string with a level of { @link logger } level .
parse this { @link } .
start a new xpath expression with the given pattern .
creates a criterion with the specified path .
creates a criterion using the specified key .
creates a new criterion with a common between two keys .
returns an instance of two lists .
returns an { @link } of the grants of the disjunction .
creates a new with the specified values . the returned values are the values in the specified array and the new one will be created . the resulting values are the values in the array .
returns a new instance of {
create a new { @link } that is used to create a new one specifying a variable value .
creates a new { @link } that contains the given { @code value } .
scan the list of files
captures the file in the file .
/ *
returns the values of all values .
creates the editor text editor .
create the .
saves the page text .
init method .
/ * ( non - javadoc )
show the page show dialog .
renders the { @link } to the specified frame .
checks if the given exception is a valid { @link } .
set the timeout .
returns the image of the specified image with the given parameters
get the document identifying the ontology
convert a dom document to a dom tree
convert a document to a document
creates a { @link } for the schema schema .
creates a { @link } for the schema .
creates a { @link } for the schema .
compare two ints .
check if two sets are equal .
compute the euclidean distance between the two points
adds edge to the edge graph .
write the edge to the edge of the edge .
remove the edge from the edge from the edge .
check if the value is a numeric number .
validates all values in the given object .
validates the given args args args args
add a data point to the cluster .
creates a new { @link } which will be used to create a { @link } .
executes the prepared statement .
checks whether the threshold is greater than or equal to threshold .
runs the minimization function and returns the threshold .
runs the command line .
read commands from the classpath .
calculates the distance from a to a lat / lon coordinate .
calculates the edge weighted distance between the two points .

check if the given { @link } is a filter .
write the contents of the file to the output file .
the function is called from the .
returns the latitude for the id .
checks whether the given { @code } is a list of uris .
returns the for the given node .
ensures that the given edge id is a link between the previous node and the id .
adds the specified barrier to the cluster .
adds a { @link } to the { @link } .
create a new relation for the given relation .

check whether this wizard is a sarl installation .
merge the transitive dependencies of the current model .
{
translates a list of criteria to a query .
persist the data row .
returns the uri of the given uri .
creates a new { @link class } instance for the given class .
create a new type instance for the given class name .
quote a string with a backslash .


find the setter method name from the given class .
<p > find getter / setter method for the given <code > / code > .
get address from location
get all fields of a class from a list of fields .
remove all the from the list
split a list of hosts to the host .
returns the instance of the class .


creates a new { @link } for the given queue size .
{
returns a new {
returns a sequence of { @link } s that represent the configuration of the given configuration .

extract data from
returns the text for the given configuration .

{
{
{
/ * ( non - javadoc )
collect dependencies from the given collection of projects .
called when the view is called .
called when the view is clicked .
called when the view is clicked .
called when the notification is clicked .
called when the view is clicked .

{
this method is called to handle textview bounds
/ * ( non - javadoc )
returns the version of the given package name .

returns all the properties of the service .
returns the system property for the system property .
notifies the listener that the listener is not being sent .
adds a listener to the list of tag callback .
set the capsule .
add a triplet to this node .

checks whether a filter is compatible with the filter .
add a mapping from a map to a column
add a mapping to the meta data .
returns the index of the parent of the parent .
add a table to the table
shorthand for { @link ( string map ) }
this method will create a new { @link } that will create a new { @link datasource } with the given data source and tables .
create a new {
creates a dynamodb instance .
creates an observer for the specified {
/ * ( non - javadoc )
rollbacks the throwable and rethrows it if it is not already a call .
/ *
returns all the { @link } s for the jar file .
convert the given name to a camelcase name .
converts the given string to a human readable label string .
returns the label formatted for the given string .
check if the given name ends with a string .
returns whether the given sequence matches the given name .
checks whether the given { @code name } contains the given name .
checks if the given { @code string } is a case insensitive pattern .
returns whether the given string is a valid alternative for the given value .
creates an observer for the specified { @link observable } .
adds a new element to the tail of this list .
iterate over all elements of the given { @code predicate } .
accepts the specified { @link subscription } .
{
iterates over the elements of the given { @code predicate } and returns the result .
get the ssl configuration file .
completes the current progress and returns the result as a { @code } .
report an error if the error is shown .
completes the work for the current task .
/ *
initialises the given channel with the given parameters .
creates a new { @link } with the given { @link object [] } for the given type .
returns a set of all the of the user .
get permissions from {
registers a dialect for the dialect . <p > <b > note : < / b > this method appends the class to { @link } . <p > this method is <strong > not< / strong > this method is called when the dialect is used . <p > <b > crest< / b > this method will not be used
finds the scope of the given wildcard wildcard matches the given wildcard wildcard .
check if the value is a valid xml value .
get the name of the value from the given value .
get the value of a variable with the given name .
get the value of the cookie value from the string .

{
get the value of the specified distance from the target string . the substring is not advanced .
returns the distance between the target distance to the target .
set the request to the request .
called by recyclerview gestures .
called when a recyclerview is clicked .
returns an instance of the client . <p > the client is responsible for closing the client . <p >
initializes the client .
add a event to the event .
add a event to the map
add a new event to the list of .
add a event to the event .
add a collection of event to the event .
add a new event to the builder .
add event to collection of event .
add event to event .
add a new event to the list of receivers .
publishes the { @link } to the { @link hudson . . } and then publishes the { @link } to the { @link hudson . . } .
sends a { @link } to the current thread .
sets the base url of this server .
set the proxy .
validate the given event and the given event .
merges global properties into global properties .
validates the event to be used in the event .
validates the event .
validate the value of the given event .
build a map of maps from the given collection of events .
publishes a new event to the list of published events .
publish all events to the server .
publish a workflow execution to the given { @link } .
handle response events from the response .
handle the given event and register them to the user .
handle a failure handle .
handle a failure failure .

get the number of responses for the given collection of the given job id .
set the status of the user to the user .
creates a new percentile for the given percentile .
creates a new { @link } that lasts for the given percentile . <p > this method is equivalent to { @link ( period ) } . for example the <code > / code > is used to compute the maximum value of the { @link } .
queries the query to be executed .
get count of records from the given event .
returns a property of the given collection of examples .
returns a scalar value for the given event id .
returns a regex for the given sql query .
generate heat data value .
executes the specified query .

sends request to response stream



/ * ( non - javadoc )

{
builds a message and returns the keepassfile for the given expression .
check whether the given guard is a subtype of the given guard .
validates a tree of the tree .
try to instantiate the given {
lookup the class
returns true if the expression is a subsitemap .
returns the token for a season in the catalog .
initializes the handler for the given { @code } .
creates a new { @link } that will be used to create the { @link } .
gets the list of notifications for the given observable .
/ * this method is similar to {
returns a description of the given assignment .
returns the token for the given claims .
returns the name of the currency name for the currency code . the currency code is not used .
returns the currency symbol for the specified currency .
parses the given { @link } instance .
this method is used to generate the types of types .
resolve the type of the given type with the given name and type .
set the {
add a filter to the list of accept - accept order .
this method will process the current { @link } and the { @link securityconfigurer } instance .
/ * ( non - javadoc )
validates the http redirect url
extract the array of strings from the xml document .
find the web context
find the web application context for the given web context .
returns the index of the specified entry .
/ *

returns the array of children .


lookup a user by id .
get the user details for the user .
method to get all available headers that are present in the request .

creates a new clientid for the client id .
creates a { @link } for the given authentication method .
creates a { @link } from the httpservletrequest
creates a new instance of { @link } .

computes the input of a bitmap from the input bitmaps .
computes the difference between bitmaps in the two bitmaps in the two bitmaps - > 4 . 2 .
verifies that the payload is not equal to the given { @link } .
calculate the container container for a given array of container .
convert a bitset to a sequence of bits .
check if the given class is a fake .
{
{
{
retrieves the for the given channel .
{
gets the { @link } responsible for the given { @link } .
{
retrieves the attachment .
{
{
retrieves the attachment .
gets the { @link } responsible for the rtp message .
returns the { @link } of the { @link } .
validate the given response against the given interaction .
computes the cardinality of the bitmap .
fill the array with the specified shape .
returns the next set of bits from the current x - 1 .
returns the average of the word in the histogram .
returns the number of runs in the given subunit .
returns the set of bits from the current position in this vector .
method to get the
returns the current buffer .
adds an action to the listener .
build the tld for the given class .
add a frame to the reply .
execute the .
{

<p > computes the householder - 1 . 0 is implemented as long as the first dimension of the second array is returned . < / p >
generate a new bitmap from rangestart ( inclusive ) rangeend ( exclusive ) .
<p > checks whether two bitmaps two bitmaps are equal . < / p >
add a number to the array
generate a new bitmap from a bitmap
complements the bits in the given range using the given range rangestart > and then return the result . <p > if the given range is not a valid sql bit then a new bitmap is created and returned . <br > <br > <b > note : < / b > the behavior of the bitmap is not modified . < /
complements the given range of bits from rangestart ( inclusive ) to rangeend ( exclusive )
generate a { @link bitmap } object from the given bitmaps rangestart and xor .
complements the given range rangestart ( exclusive )
add the value to the container .
complements the value and the first pair of the second .
add the value of the variant to the given .
remove the value from the container
deserialize data from input to extract data .

update the value of the <code > / code > . the <code > / code > is the <code > / code > of the <code > / code > or <code > null< / code > if the <code > / code > flag is set to true .
reduces the specified range of the specified range . <p >
retains only the remaining range of the range of this range .
this method is used to store the value of the <code > comparator< / code > bitwise or operation . a bitmap is between two bitmaps .
remove the value from the container
decrease the size of the slot .
remove the specified range from rangestart ( inclusive ) to rangeend ( exclusive )
remove the run file from the container .


invoke the { @link } method .
create a { @link } for the { @link } .
returns the full rfs name for the given parameters .
sets the current authorization request .
sets the { @link } for the { @link dsn } or { @link } .
add a new element to the stack .
set the x y and z components to be between vectors .
set the x y and z vector of the vector .
set the y - vector vector vector .
set the y coordinate of the vector to the given vector .
set the y c - vector vector .
set the z - vector component of this vector .
set the current position in this vector .
set this vector to the specified current position .
set the value of the specified component .
/ * ( non - javadoc )
/ * ( non - javadoc )
return a new quaternion from the current polygon .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add a point to this vector .
/ * ( non - javadoc )
add two vectors .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
multiply this vector to a certain y - vector vector .
/ * ( non - javadoc )
rotate sphere of radians around the specified radians .
/ * elliptical quaternion components
/ * ( non - javadoc )
divide this vector by the given z .
/ * ( non - javadoc )
/ * computes the top - left line of the top - left corner of the image .
calculate the image .
compute the cross - side of the cross product of this vector .
/ * ( non - javadoc )
euclidean distance
returns the dot product of the given vector .
calculate the rotation of the transformation .
/ * ( non - javadoc )
computes the number of radians of the length of the given y .
/ * ( non - javadoc )
calculate the spline of the specified fern .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
return a vector of x * c
/ * ( non - javadoc )
/ * ( non - javadoc )
multiply this transform by the given coordinates .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the maximum value of the ellipse .
/ * ( non - javadoc )
creates a new { @link } from the given { @link authentication } .
init the .
creates a {
initialises the persistent revision .
returns a new database record record from the given start revision .
{
this method is called when a late of lock is released .
append a journal entry to the stream .
check if the database revision is a valid revision of the file .

get the next record record .
fetch the record from the current connection .
close the record .
returns the path of the path to the path .
check whether this request is authenticated or not .
get the file name of the file .
get input stream to stream
put the http request
put this request into the response .
----------
sends a response to the response .

/ * - paste =
creates a random { @link biginteger } with random secret .
generate random probable for the secret .
returns the secret responsibility for the user .
check if the plaintext modulo number is not a number .
split a given secret into a single { @link } .
combine two paths together with the combine operator .
randomize the given random 64 bits .
this method is used to generate a random number generator .
combine two .

resolves the resource of the resource .
resolve the address of the given {
verifies the given and .
returns the number of unread transactions in the current transaction .
get the information about the block info .
initializes the preference .
obtains all attributes from a specific attribute set .
obtains the color typed color from a specific typed array .
obtains all attributes from a specific attribute set .
obtains the number of decimals digits that will be used to parse the preference from a specific typed array .
creates a listener which is scrollable by the { @link } .

returns the maximum number of digits in the given number of digits .
sets the number of digits allowed to the number of digits in the number .





returns a new matcher that matches the specified token .

returns a new matcher that matches the specified key and returns a new cookie with the given flag .
returns a new {
/ * ( non - javadoc )
{
configure the { @link } to be configured .
returns the default charset for the content type .
/ *
returns the { @link } for the given contenttype character set .
returns a default contenttype or creates a new { @link } object for the content type .
returns the content charset for the given charset .

get the value of a cookie

creates a new instance of the given {
creates a provider for the specified class .
{
set the state of the request .
set the state of the request to the request .
removes the given { @link } from the request .
sets the raw value of the cookie .
find the cookie value for the given name .
handles the user authentication request .
authenticates the user and returns the user .
write the radial video radial enrollment to chart
find the first matching id of the given id .
<p > . < / p >
adds a binding binding to the list of binding .
<p > . < / p >
finds the component that is responsible for acquiring a new { @link invocationcontext } .
build the view with the given { @link org . apache . wicket . } .
{
creates a user from the specified app id
returns the line number member .
write a to the stackdriver
adds the query parameter to the query .
create a string from the ast node .
create a string from a node position .
returns a string representation of this tree node .

create a new for a given target type .
get the name of the { @link field } for the given type .
returns the field name for the given class type .

create a new function fragment for the given function .
this method is used to extract the join - ed from the query string .
append the given { @code query } to this { @code querybuilder } .
append a single field to the list of fields .
append the default {
append time to the current builder .
append a field name to the statement .

returns the minimum value of the { @code double } value as a double - value .
get the maximum value as a double .
delete the feature indices
returns the last indexed element .
query for features within the bounding box
process the given .
returns the index of the feature index .
{
{
gets the custom serializer for this serializer .
{
{
{
{

cast result object to json string
returns the exception as a throwable .
send a message to the console .
create a for the given source files .
parse address address address .
parse address of a channel .
get the ip address from the duracloud address .
parse address name to string .
get the ip address of the given channel .


parse the address from the address string .
this method returns the address of the given address .
parse a string representation of a string .
generate the html code for the package .
add a listing clause for the class tree .
add the class listing the listing .
compile a script source .

handle the given object .
sets the parameter value of the request .
generate the contents of the receiver .
process the keystore .
/ *
returns the class code for the given source code class code .
get the class entry for the specified class .
{


returns the class of the specified class .
create a new instance .
create a new
create a new from the given map .
create a new { @code chaiprovider } from the specified name .
creates a new { @code } instance that will be used for the specified class .
log a message with the given message .
log a message with the given message .
log a message at the debug level .
log a debug message with the given arguments .
log out a message with the given message .
write debug information to the given error message .
logs a message with the given message level .
logs a message with the given message .
write a message to the error log .
log a message with the given message .
warn the log message with the given message .
log a warning message with a message .
error等级日志<br >
error等级日志<br >
error等级日志<br >
add a new constraint validator to the validator .
create a new validator for the given class and factory .
display the user id
creates a new message with the given text and message .
returns the namespace of the namespace .
add a class node to the set of importdeclaration
add a class node to the bytecode tree .
returns the covering array of candidate annotations .

{
{
{
{
gets the date time value from the year . <p >
gets the date time value from the interval specified by the specified year - value . <p >
gets the date time at a specified instant .
validates that the fields are valid .
returns the value of the specified instant as a int array .
sets the partial instant of the partial instant . <p >
returns the next period of days in this instant .
returns the next period of this duration in this period .
adds the period period from the instant to the instant .
/ * [ deutsch ] <p > addiert den angegebenen scalar : <br / > <br / > what ( a ) + o ( 1 ) <br > <br > if the field is already in the same instant then it is also implied by the specified instant . <br > <br > for example : <pre > datetime [ a
create a flow that emits the flow flow execution flow by combining the flow state from the flow flow .
create a flow that emits the current flow state of the flow type .
returns true if the current file is a directory .
-----------------------------------------------------------------------
specifies the period type of this period .
creates a new period of years as <code > / code > .
returns a new period that is backed by the specified field using the default period added .
add this period to the field .
creates a new period of years years to the years field .
returns a copy of this period with the specified precision .
returns a copy of this period with the period period .
returns a copy of this period with the specified period in years . <p > this method is equivalent to calling { @link ( period ) } to add to the interval .
returns a period of years to the end of this period .
returns a copy of this period with the given period period .
/ * [ deutsch ] <p > erzeugt eine kopie mit den start . < / p >
returns a copy of this period with the specified period . <p > this method is equivalent to { @link ( period . ) } . <p >
creates a new period representing the new years and months .
creates a new period representing the years from this year .
add a set of classes to the list of classes .
get all classes in this classdoc .
decrypts the plaintext { @link secretkey } .
returns a new period of this period with the period period periods .
gets the number of elements in the current position .
/ * [ deutsch ] <p > subtrahiert den angegebenen zu dieser instanz . < / p >
add years to the interval .
returns a copy of this period with the specified number of millis . <p > this method is equivalent to calling { @link #minus ( temporalamount ) } .
returns a new instance of this monetary value using the specified period . <br > <br > this is equivalent to { @link #minus ( double double ) } .
this subtract the amount of years from the days .

/ * [ deutsch ] <p > konvertiert das datum zeit relativ und utc . < / p >
returns the timestamp for the specified time zone .
gets the time zone timezone .
/ * [ deutsch ] liefert eine instanz auf den angegebenen @link } um der fall - bis zum angegebenen datum um aus dem angegebenen datum um . um um bis aus den aus dem bis bis die daten und bis des angegebenen datum um . um bis die klasse zu . aber nur
/ * [ deutsch ] <p > wandelt diese instanz in einen um . < / p >
converts a { @link } to a standard instant .

gets the chronology from the specified instant . <p > the chronology from the instant is not null . <p > the chronology from the instant is not null . <p > the chronology from the instant is not null . <p > the chronology from the instant is not null . <p > the chronology from the instant is not null .
gets the chronology from the chronology from the chronology . <p > the chronology is used as the chronology .
process the data source file .
populate data members .
clear member data .
this method is called from the {
this method is called when the view is restored .
this method is used to parse the data from a { @link } .
update the base calendar name for the given base calendar .
this method is called from a { @link } .
set the notes of the data task for the data task .
this method is called to update the data in the task .
this method extracts the constraint data from an mpp file .
read data from a data structure from a planner file .
this method extracts data from an fsimage - data assignment .
process the data view .
read table data table .
write the string to the given stream .
splits a string into a list of strings .
returns true if the given resource matches the pattern .
check if the given archive matches the given archive .
checks if the given artifact is a valid artefact of the given name .
{ @inheritdoc }
returns the integer value from the byte array .
returns the short data in the specified byte array .
returns the string from the given offset .
retrieve the finish date of date from the given offset .
<! -- start generic documentation -- >
returns the first occurrence of the specified character in the given string .
check code for missing code of the given type .

check if the given list of errors exist .
returns the definition for the given { @code } .
checks if the given string is a string .

validate the errors and their results .
/ * ( non - javadoc )
converts the value to array .
parse the given source string to the current node .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
/ *
/ *
///////////////////////
add a new { @link } to the list of { @link } .
returns true if this key is not present .
syntactic sugar
syntactic sugar
syntactic sugar
syntactic sugar
creates a new instance of { @link } .
populate the given { @link } object from the given resource .
/ * this method is used to update the .
validates the given resource
convert a primitive type to boolean .
convert a value to boolean .
returns the value of the given value as a boolean .
converts a integer to a integer .
converts the given value to a integer value .
returns the value of the given value as an integer .
convert the value to a long .
returns the value of the given object as a long .
convert value to a long value .
convert a { @link object } to a float .
converts the given value to float or returns a float value .
transform the value of the given object to the float value .
convert a double value to a double .
convert a double value to a double
transform the given value into a double value .
convert a value to primitive .
convert the value to a short .
converts the given value to a short value .
convert a string to a character .
convert a character value to a character .
converts the given value to a char value .
convert a byte to a byte representation .
returns the value of the given object as a byte .
convert the value to a byte .
converts the given { @code long } into a long array .
convert an object to an array .
converts the given { @code class } to a class type .
convert an object to a biginteger .
converts the value to a biginteger .
convert the value to bigdecimal .
returns the { @link bigdecimal } value for the specified { @code bigdecimal } .
this method is used to parse a calendar exception to a { @link calendar } .
syntactic sugar
syntactic sugar
adds the specified component to the component .
extracts the prefix from the given string .
encode the given text into a string .
returns the string value of the given key or { @code null } if this map is not specified .
returns the integer value as a integer or integer .
returns the value associated with the given key as a long .
returns the double value of the given key as a double .
returns the float value as a float or null if not found .
get json object from jsonobject
get the json array from the jsonobject .

get the value of the given key as a json object .
get the string value from the map .
get the integer value for the specified key .
retrieve a long value from the specified key .
get the double value of a double .
retrieve a float value .
returns the value of the specified key as a boolean .
get json object with key
get the json array from jsonobject .
get binary binary binary value of the binary data .
get the value of the given key from the current object .
sets the value of the given key in the jsonobject .
put a new value into the map .
sets the value of the given key with the given key .
checks if the activity is a valid region .
checks if the activity is a valid region .
sets the value of the given key in the map .
sets the value of the given key in this map .
this method returns a new subtask of the task activity .
return the task id for a task .
read the relationships from the current relationships .
tries to find the relation for the relation .
returns the helper for the given activity .
get the next .
returns the uuid of the uuid in the given uuid .
update the finish date .
read a set of metadata from a ganttproject file .
this method is used to retrieve the { @code assignment } from the given resource assignment .
get the list of children of the given component .
add a child of the given component to the given .
process the given file and returns the results .
creates a new { @link net . dv8tion . jda . core . entities . message } object from the given string .
appends the address to this address .
create a new recipient address from the given personal address .
sets the reply to reply to reply to the email addresses .
reply reply to reply
sets the reply to the reply .
---------------------------------------------------------------- cc

----------------------------------------------------------------
sets the subject encoding .
add a message to the message .
performs text on the given text .
upload a text message to html .
sets the value of the specified header .
sets the http headers to use for this request .
sets the headers to be sent to the request .
puts the items into the list .
returns attachment attachments .
attachment attachment .
returns the target object for the given class .
sends a message to the attachment .
sets the attachment .
returns the array of { @link internetaddress } that is copied from { @code array } .
returns the instance type instance for the given type .
/ * ( non - javadoc )

===============================================================
generate the string definition for the given definition .

generate a type - ref type .
create a new pseudo - union of the given type and return the corresponding pseudo - mapper .
generate a string for the generation of a single entry .
generate a choice for the given id .
generate the js entry for the given id .
generate a inner class definition for a class .
this method will build the reference information of the type of the reference .
returns the type name of the given type .
parses the given { @link } from the given { @link } .
this method opens the file chooser chooser and open the file chooser .
set the filter of the file .

creates a new query which is a method that is the same as the type of the given { @code } .
escape a string to a stringbuilder
find the index of the index annotation of the given method .
unescape the string by unescaping dealing with a backslash unescape

build proxy information from proxy credentials .
build proxy proxy for a proxy for a proxy .
returns a qualified resource bundle from the given resource .
add a tag .
add a custom tag to this tag .
check the tag name .
check the taglet to see if it is a taglet .
check if the tag tags are present .
initializes the taglet custom property taglet .
inits the . taglet .
adds a property .
returns the taglet attribute .
{
{
{
{
{
{
{
{
/ * ( non - javadoc )
{
syntactic sugar
syntactic sugar
{
{
{
{
add summary summary for the summary member .
get summary table header .
add the summary summary member summary for the summary member .
{
{
returns the list of that are contained in the given .
this method will return the union of the union of the union of the unsatisfied lists .
this method is called by the { @link #transform ( functor ) } method to create the { @code } and returns true if the parameter is not a valid externs .
add a directory to the directory .
add a jar file to the jar file .
find the class name of the class .
returns the next element .
sets the options for the command option .
checks if the option is not null .
returns the result of the next character in the given list .

reads the next token from the stream .

return the task that is used to display the task to the last push task .

get the time difference for the given time range .
get the number of operations that are in the range [ 0 1 ) .
start the task .
appends the given string to the end of the list .
formats a week number in days .
syntactic sugar
read the class definitions .
read calendar data from the calendar .
read the next hours month from the current working weeks .
returns the number of times the hour hh reaches the specified hours .
read a recurring trace .
read resources .
read the data structure of the task .
creates a new http request .
get the for the given .
returns the project writer for the given name .
print the text to the given text .
creates a new instance of the specified { @link dsn } .
/ * ( non - javadoc )
create a project instance for this calendar .
convert a calendar object to a calendar instance . <p > this method is equivalent to calling { @link ( calendar . weeks . weeks ) } .
create a calendar instance for this calendar .
convert a calendar object to a calendar .
create a new instance of { @link calendar } instance in a { @link calendar } instance .
create a new { @link calendar } object representing a { @link calendar } instance .
create a new calendar object representing the information in this project to this calendar .
create a new calendar object from the local calendar object .
create a new resource instance from the project resource .
create a new { @link } instance that will create a new { @link } .
create a project instance for this calendar .
list of folders
copy the contents of the given folder to the given folder .
loads a file from the classpath .
create a new instance of this { @link calendar } representing a calendar instance . <p > this instance is immutable and unaffected by this method .
returns the version of the .
convert calendar data to calendar object .
create a project instance for a project .
create a new { @link } instance that creates a new <code > / code > object representing the current { @link } instance .
create a new calendar object representing the month - field amount of weeks in the current local date - time unit .
create an attribute value for the attribute value .
create an instance of { @link } .
create an instance of a { @link } .
append a single buffer to this buffer .
----------------------
parse a event .
parse the page contents .
print out information to a print writer .
write the region to the stringbuilder .
{
adds all elements in the collection to the end of this collection .
returns the element point to the specified index .
sets the mail system property .
/ * ( non - javadoc )
returns the jsongenerator .
////////////////
performs the given { @code interop } { @code metadata } .
extract the data from the given { @code } .
returns the reader at the given offset in the given byte offset .
computes the next occurrence of the specified tag .
extract data from the given { @link document } .
extract the data from the given array and puts them to the given array .
add a new chunk of this route .
returns a child matching the given string .
checks if the given string is a valid value .
convert value to primitive type .
converts object to collection type .
{
/ *
set the bean array .
returns the index of the first line of the search string .
extract the index of the property from the given bean .
creates a new bean property .
extract the component type from the getter .
convert the object to a map .
extract the type of property from the javabeans bean .
returns the number of in the drawer
calculates the brute force - cpu mode for the given tab mode .
binds the given { @link } to the navigation bar .
sets the background popup .
main method .
runs the command line arguments .
returns the path of the given file to the given root class .
{
returns a set of integers from the given set of elements .
{
applies the given { @code } to the given { @code plugin } .
gets the value of the property .
{
execute the method .
returns true if the given target matches the given target .
generate the unicode code for the given .
generate the index of the file index and parse the header file .
{
process the content of the xer file .
process the file type .
processes the project properties file .
populate the { @link } .
process resources .
process tasks .
processes the rows of the row .
check the table to be used .
join rows join join .
returns the table row name .
find the cache for the given class .
inserts the object into the cache .
finds the first { @link class } for the specified { @link class } .
find the class for the given key .
sets the value of the { @code value } argument for the value of the { @code value } parameter .
checks if the given { @code } is a proxy wrapper .
creates an {
{
{
load a file .
add tasks to a pm node .
add resources to a conceptdraw project file .
add project to project file .
add a calendar to a pm file .
add a day to the parent node .
add a tzid hours to the versionable node .
add a calendar exception to the node list .
add groups to a node group .
add custom fields to a pm node .
add views to the current node .
add a table to the list of .
add columns to the table .
add a custom filter for the list .
add a task to a task .
saves the file to the given file .
returns a set of all the names of all the methods that are excluded from the given list of names .
checks whether the target matches the given { @link target } .
/ * ( non - javadoc )
start the scanner .
register the class { @link } annotation .
sets the random digest of the specified random latin random bits .
creates a new file for the given bundle id .
/ * ( non - javadoc )
{
registers a bundle for the given path .
this method is used to generate the digest digests .
create a new bundle for the given path .
reset the current state of the current file .


{
set the value of the attribute .
set the value of the attribute .
{
adjusts the given to be used .
get the { @link } instance for the given variant .
creates a new instance of { @link } .
create a new instance of { @link } .
creates a new searcher instance .
search for the intent from the activity s intent .
search for the search query .
performs a single search for the given .

resets the current state of the reset .
cancels the pending {
adds a facet to the list of values .
sets the attribute to be facets .
adds a string to the list of datatypes of the given facet .
add facets to the list of selections .

set the value of the slider attribute .
/ * ( non - javadoc )
gets the list of facets that can be used to sign the attributes .

gets the numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric value .
adds a single justification expression to the aggregate of the query .
returns a numeric value for the specified attribute .
count the numeric value of a numeric operator .
returns an iterator over the vertices of the graph contained in the given collection .
{
add a facet attribute .
remove the facet attribute .
delete the facet assignments .
registers a listener .
registers a new listener .
check if the jsonobject is present .
sets the query .
sets the index of the index to be displayed .
get the stats for the next record .
set the labels for the total number of labels .
update the given { @link } from the { @link } .
returns the path of the path .
get relative path relative to path .



returns the number of bytes in the specified path .
build the matcher for the given tag .
decreases the priority of the entry .
get the options for a given class .
adds a new entry to the list of entries .
returns the first element of this node .
merges two histograms together with another circularly - > one .
returns a list of entries that are contained in the given node .
merges the two sortedmap .
updates the root node .
sets the parent ancestor entry .
consolidates the tree structure .
removes the entry from the list .
return the path for the given class .
return the path to the given type .
get the jcr path for the given package .
get the jcr path for the given package name .
return the path for the given package .
return a path from the given root node .
converts the byte array to bytes .
finds the first element in the given array .
returns the { @link } for the given artifact .
use this to create an actor from the actor actor .
get the { @link } for the specified { @link class type } .

requests a new object to the server .

returns a instance that mirrors the { @link transport } protocol negotiated connect requests that are registered to the { @link } .
create a new transport chain for the given child definition .
returns an address of the specified { @link } .
returns a new { @link } that is represented by the specified address .
returns a new { @code } that matches the given address and address .
dumps the data in the gui to the console .
{
perform the given {
get the protocol for the protocol invocation .
create a new tcp connection .
returns a new instance of {
create an actor from the pool .
create an actor object .
try to get the supervisor from the given virtualhost .
handle the current state of the current request .
start the scanner . <p >
unregister a specific address .
returns address for a given address
creates a new mailbox
create a new actor .
{ @inheritdoc }
check if the given regular expression is valid .
this method is used to create a new instance of the { @link } that is used to create a new instance of the { @link } .
check if the given string is a valid
{

{
<! -- begin - user - doc -- > <! -- end - user - doc -- >
validate the color of this { @link } . <! -- begin - user - doc -- > <! -- end - user - doc -- >
validate the given color . <! -- begin - user - doc -- > <! -- end - user - doc -- >
start the .
stops the server .
adds a namespace to the global namespace .
removes the namespace from the namespace .
returns the list of events for the given namespace .
returns a publisher that is asynchronously reading the event from a document .
this method is called by { @link ( runnable ) }

/ * process the process instance
stop the given task .

synchronise the parm
increments the value of the metric .
set a value to the provided history .
record a duration in the current stopwatch and the number of records in the history of the specified duration .
calculates the average statistic for the given values .
returns the statistics of the statistics for the statistics .
execute action .
execute the method call .
returns the top - level tree of trees .
/ * this method is used to collect the classes of the given classes .
recursively visit the flow data
parse the given type and convert it to a type .
creates a new apikey object with the given key .
returns a user key object from the given key id .
<p > creates a list of { @link } objects . < / p >
deletes the fluo key key object from the specified { @link } .
sets the api key to be used .
disables user key / alias .
returns the milliseconds value for the hour minute .
add a date to the date

sets the number of misses / runs .
returns the julian span of the specified {
returns the notes for the given trunk .
set the { @link channel } for the channel .
reset the reader to the given { @link preparedstatement } .
called by { @link } to retrieve the { @link } .
invokes the { @link } for the { @link } .

build the {
setup the deployment for the given .
process resources .
scans the given container .
adds the classes to the class .
claim a sequence of spans to a human - readable form .
append a padding amount to a stringbuilder .
append a new message to the buffer .
append a fragmented offset to the given offset .
gets the parameters of the current date .
notifies the listeners that the given term is clicked .
notify the listeners that the node was clicked .
process the bulk of invalidations and transitions to the .
decode a single fragment header .
returns a { @link } representing the number of months representing the years .
obtains an instance of { @code } from a temporal amount . <p > this returns a single { @code } consisting of the months and days from the specified amount . <p > this returns a single { @code } consisting of the months and days from the specified amount . <p > this returns a single { @code
obtains the specified text from the text string . <p > this method will parse the text from the start and end instants of the text using the iso - 8601 period ( e . g . { @code pnw } ) . <p > this method will return the localized string of months which are in the range of months and the
returns a copy of this quaternion consisting of the given period consisting of the given date and returns the end of this period . the end date is the end of this date and the end date . <p > the start date is not included .
adds this amount to the specified temporal object . <p > this returns a temporal object of the same observable type as the input with this amount added . <p > in most cases it is clearer to reverse the calling pattern by using the custom { @link temporal#plus ( temporalamount ) } . <p > this returns a temporal object of the
subtracts this amount from the specified temporal object . <p > this returns a temporal object of the same observable type as the input with this amount added . <p > this returns a temporal object of the same observable type as the input with this amount added . <p > in most cases it is clearer to reverse the calling pattern by
compares this amount to the specified { @code years } . <p > the comparison is based on the total amount of less than the specified amount .
{ @inheritdoc }
parse a charsequence address from the given { @link } .

method called by the application context .
convert a short flags to a char array .
/ * package
converts the given sam type to a { @link } .
-----------------------------------------------------------------------
sets the amount of time between the field and calendar fields .
{ @inheritdoc }
get the snapshot map for the journal key .
print the header of the current line .
get the length of the value of the property .
define a byte [] that is rounded to the target capacity .
adds the given size to the list of .
writes the current state of the given { @code outputstream } to the output stream .
resets the state of the initial state .
sets the byte array to be used for the given byte .
sets the class of the inputformat .
{
returns the value of the given property with the given properties . if the property is not specified the default value will be returned .
{

check if the given { @code } is a valid .
get the state of the
{
update the state of the current velocity .
updates the current values of the current component .
render the .
append a display string to the list of display fields .
{
merge the fields of the fields
creates a new { @code } instance for the given { @link bytebuffer } .
initialize the list of all the elements in this array .
returns true if the set of neighbors are in the set .
returns the number of elements in this tensor .
returns the permutation that is the row of the given set
checks that the reference is not null or throws an { @link illegalargumentexception } if it is not null .
get the list of for the key .
solves for a general matrix .
solves a symmetric symmetric matrix .
computes the solution of a general matrix .
solves a solution of a symmetric matrix .
<p > creates a singular vector with the given singular indices .
solve a * x = b
solve a general * x * y * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x
solve a * x * y * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x *
creates a singular matrix from a matrix .
get all fields for the given class .


{
loads a new from the given xml file .
loads the specified { @link } from the specified xml file .
loads the two geometries from a given { @link } .
loads a { @link } from a full - compressed file .
read the geometry from the given geometry .
builds the id id .
execute the command .
executes the given command .
read lines from given { @link geometrycollection } .
read a {
create a new host from the host .
update the current item .
sets the field of this node .
binds the given text to the given text .
clear the current text value of the text tag
creates a new { @code } with the specified layer and the layer .
<p > sets the { @link } for the specified { @link } . < / p >
add a key to the map .
add a value to the hash table .
returns the result of this element .
marshall the given parameter object .
add a mapping for the given { @code } .
finds the route within a given location .
build a { @link route } object from the given { @link directionsroute } .
/ * this method is used to escape the characters from the input string .
this route is used to create the route .
parse the given text from the current component .
searches for the { @link } s { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link
fills the content of the dialog . <p >
returns the export handler for the given module . <p >
reads the opencms module from the given import file . <p >
reads the module from the manifest . <p >
imports the modules and their resources . <p >
report the report to report the report . <p >
returns the file name of the file . <p >
adds a data item from the current item . <p >
collects the module dependencies from the opencms modules . <p >
prepare the request .
sends a response to the response body .

submits the publish to the given window . <p >
returns the comparator for the table row alias . <p >
gets the value of the alias entry table . <p >


process a single bulk record .
handle error .
get the column hash function .
set the current group level .
creates a menu item .

add the option to the option .
enables or disables the scroll scroll panel . <p >
select the value of the given value .
sets the value of the form property .
closes the popup menu . <p >
returns the popup popup popup to the popup height . <p >
initializes the list of to use for the given widget . <p >
called when the picker is played .
opens the popup window .
returns the position of the popup window . <p >
adds a new {
adds the hover activity to the popup panel . <p >
initializes the select cell .
sets the popup panel . <p >
helper method to retrieve a list of { @link workunit } s .
get partition values from given record .


creates a new { @link } instance . <p >
set the date of the datepicker

this method is used to retrieve the statistics from a single - application .
this method is used to retrieve the report for the user s data .
writes the content of the opencms content to the opencms server . <p >
changes the edit content of the xml file . <p >
inserts the context menu entry to the menu editor context menu entry . <p >
shows the publish dialog . <p >
initializes the map . <p > the field name must be the form name of the field name .
performs the creation of a table creation . <p > the default behavior is to modify the tables for the table . <p > <p > if the new table contains a mapping for the key the value is returned . < / p > <p > if the new table contains a mapping for the key the value is returned . <
preload the given instrumentation of jvm instrumentation .
returns a set of properties that are contained in the given directory .
returns the list of files for the given directory .
returns classpath urls for the given class .
updates the configuration file .
evaluates the given expression tree into a list of paths .
check if the given record record matches the given expression .
load the given target from the input stream .
load from inputstream .
load from reader
sets the overlay .
/ * ( non - javadoc )
/ * update the mbean .
reads the next character from the header .
reads the next line numbers .
build query parameters from the query parameters and returns the results .
returns the condition for the given partition .
get the columns from the last column of the last column of the given offset .
get the format of the columns from the table .
returns the offsets from the source string .
validate the given table .
{
{
validate the configuration parameter list .
update the configuration for the configuration
create a signature signature for the specified signature and the id .
check that the field is not in the source .

check that the input record is valid and not in the input format .


this method decrypts data for the input field in the input field .
get the feature table
get the extension for the extension
check if the table is a table name
create a new table with the given name .
create a new feature table
create a new geometry extension
this method is used to retrieve a kml description from the table .
set the feature table

create a feature table
create a new
create a new insert insert update
create a new table
create a new table with the specified name .
create a new table
create a new table
create a new delete notification for a given table .
delete the column
delete the extension
drop the table .
this method is called when a table is a table .
{
drop the table and drop the table to the table .
{
/ * this method is used to update the table column name .
@warn method override
add a controller to the controller .
returns the sql - column name of the sql column
get envelope
get the sql table name from the table name
create the table columns .
intersect a bounding box by using the bounding box of the bounding box and return the overlap of the bounding box
build a boundingbox from a bounding box
calculate the overlapping bounding box
check if the point fits in the bounding box of the given bounding box
determine if the point is a point within the bounding box
calculate the bounding box of the bounds of the bounding box
get longitude latitude from lat lon pixel coordinate
get the information for a record type .
/ * generate schema for generated class schema .
generate the column definition for the given column .
get the longitude of the longitude
calculate the percentage of the center point of the bounding box
get the latitude and returns the latitude pixel values for the bounding box
get latitude latitude from lat / lon coordinate tiles
get the bounding box of the specified zoom level with the specified zoom level
get the bounding box of the given zoom level
get the bounding box of the tile bounds
get the bounding box of the current zoom level
get the bounding box of the given { @link }
get the bounding box for the x y and zoom
get the bounding box in the tile projected pixel
get the bounding box of the given groupid .
get the bounding box of the tile at the requested zoom level
get the approximate zoom for grid coordinate resolution .
get the tile grid grid grid .
get tile grid tile
convert the bounding box to the wgs84 bounding box
returns the zoom level for the given zoom level as a tile .
returns the distance between the current zoom level and the zoom level .
returns the distance between the zoom and maximum corners .
returns the number of tiles that should be used to draw the pixel in pixels .
get the tile grid tile values .
get the tile column of the bounding box
calculate the tile row entries in the given { @code matrix } .
get the bounding box of the bounding box tile crs
main method .

get the bounding box of the projection x y coordinate .
create longitude bounding box
get lat / lon longitude . crs . zoom .
calculate the lat / lon bounding box
returns the zoom level for the given bounding box .
given the boundingbox of scaling the boundingbox specified in the equation the vertical direction is east and the lower bounds are applied .
calculates the boundingbox of the bounding box

get the grid tile zoom level .
get the tile zoom level for the given zoom level .
get the tile zoom level for the given zoom level .
delete the table idx .
retrieves document from document
delete all tables cascading
add the specified {
delete the index of the query cascading
delete the column id from the database .
************************************************************************
get geometry index dao
delete all table indices
returns the next element of this object .
returns the next item from the list of the members .
write the to the wallet
converts a wallet to wallet balance .
wallet the


read wallet and wallet and return a wallet for the wallet .
attempts to create a wallet for a wallet .

check if a string is a valid .
shows the error dialog for the given error message . <p >
displays the given throwable with the given error code .
creates a new editable file . <p >
encodes a byte array into a base64 encoded string .
encode a byte [] to the base64 version .
decode the input string to a byte array .
returns the first byte array that is forwarded to the given input .
creates a new byte - precision polynomial in the base 64 .
register the operation
returns true if the base unit is in the same format .
returns the script object for the script .
sets the script to be used .
retrieves the for the given transaction . the stream is ordered by the current transaction id . the caller is responsible for inspecting the transactions in the transaction .
this method is called by the { @link transactionmanager } to obtain a new { @link } .
<p > this method is used to initiate a transaction from the <code > / code > . < / p >
this method is used to initiate the transaction .
returns true if the current is not connected to the wallet .
verifies the current verification of the current transaction .
verify the output of the block .
positions the top of the top of the top of the top - bottom - top bottom - down .
<p > this method is used to obtain a { @link } instance from the current { @link } instance . < / p >
load all providers from the provided classloader .
reads the attribute name and attributes of the given { @code name } .
reads the value of the { @code attribute } of the { @code attributes } .
reads attributes from the stream .
{
{
create a security context
set the security context for the
sends a transaction to the server .
sign the encryption input
returns the of the specified .
/ * ( non - javadoc )
register a in the
this method is called by the ejb class loader to find the class hierarchy .
find the persistence unit definition
get the name of the persistence unit name .
get the from the wallet
gets the balance for the balance .
returns the distinct expiration time for the period .
returns the { @link } for the given channel .
returns the channel for the given channel .
get the channel map for the { @link } .

returns the for the .
adapt proposals to .
get a orb instance from the server .
creates a new jni profiling instance from the properties object .
initialize the method .
remove a channel from the channel .
register the specified resource to be processed by the operation .
check if the list of the given parameter is a valid default values .

get the classes that are annotated with a certain class .
check the type of the given type parameter .
looks up the default value for the annotation annotation .
check base type and class name .
check if the given attribute is a attribute .
{
/ *
gets the timers that was registered for the given id .
get the directory name for the given id .

patch the given list of filenames .
/ * ( non - javadoc )
/ * ( non - javadoc )
add a new xds config to the list of stages that the user is running .
installs the file .
set the reader to be used for the user .
/ * ( non - javadoc )
/ * ( non - javadoc )
get configuration from arquillian
returns the place groups in the array .
/ * ( non - javadoc )
inspects the plugin s plugin and plugin all servers in the plugin .
/ * ( non - javadoc )
add a configuration parameter to the given list .
return the { @link } for the given { @link } .
deletes the principal from the opencms user . <p >
initializes the login dialog . <p >
returns the category for the given resource . <p >
returns the leaf descendant of a tree . <p >
returns a map of { @link } s that the category is selected . <p >
returns all top top items which are included in the categories . <p >
this method is called from the jar file to the vm .
get the payment
{
returns the for the
returns the channel for the given id .
returns a map of all channel servers that are registered with the map .
put a channel to the channel .
sets the { @link } that will be sent to the payment .
sets the amount of the user to the payment .
/ * ( non - javadoc )
/ * this method is used to load the { @link } from the { @link } .
/ * ( non - javadoc )
returns the { @link } for the given { @link extender } .
parse a string into a string .
convert the name of the name to a name for the name of the name of the name of the array .

convert a name to a name of the name of the .
returns a new string where the first character is a string with the first character of the string .


/ * checks if the user has a username and password .
predicate to filter members for predicate .
method allow to filter name name filtering by name . filtering will be case insensitive .
method allow to filter metrics by name .
specifies whether the predicate is filtered .
{
{
get the name of the bean for the given name .
create a new service from the given bean .
inject prettyfaces from persistence with an processor .
search for the search id string .
generate a unique object id from the given prefix .
/ * this method is used to convert the identifier to a string representation of the form c - ( i think ) .
this method is called when the signal is a signal or a signal or the signal . <p >
initialize this filter .
get the service implementation for the specified name .
get the component instance from the specified <code > string< / code > object .

get container instance from the httpservletrequest
{
get the session object .
rollback the transaction .
create a new object .
localirobject implementation ---------------------------------
containedimpl implementation ----------------------------------

calculate the ip address for the given latitude / id pair .
returns the integer value of the specified address .

format the string into a string representation .
moves the value to the specified .
convert a string to a .
close the connection .
creates a prepared statement .

get the user model .

get the arguments of the command invocation .
/ * ( non - javadoc )

displays the dialog dialog . <p >
adds the buttons to the button .
creates a new button for the button . <p >
create a {
returns the cms object . <p >
returns all the schema data for the given resource . <p >
returns the list of available providers for the given resource . <p >
get the resource type from the properties .
returns the internal state of the given object . <p >
gets the search parameters . <p >
collects all resources in the given publish list . <p >
get the state of the object .
returns the index of the index in the cursor . <p >
get the service object for the service .
authenticate user to authenticate user .

/ * ----------------------------------------------------------------------
resets the settings settings to the given { @link widget } .
binds the specified binding to the target target target object .
localirobject implementation ---------------------------------

containedimpl implementation ----------------------------------
returns the member members of the member .
get the members members for the type .

check if the settings parameter is a valid filter .

returns the entities metadata for the entity .
returns the report for the entity .
checks if the request is a url .

put the value into the cache .
set the query parameters .
extract the column from the table
check whether the given address is a drive - sensitive manner .
checks if the given { @code method } is { @code null } .
check if the transaction is alive
ensures that the method throws an exception .
call callback when the method is called .
returns a new instance of {
returns a {
returns a {
{
convert a list of { @link } s to a {
closes the database .

get the default view class for the given class .
/ * this method is used to filter out any interfaces implemented by the class .
construct a new deployment service name from a .
returns the index of the index in the histogram .
/ * add a payload to the document
gets all loggers .
returns the parent logger name for the given name .
<p > the values of the cached grant key . < / p >
this method will process a deployment for the deployment .
<p > the key - value pair that contains key protection . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
add a factory to the list of factories .
setup the context of the current contextfactory .
version&schema - specific filling .
starts the croquet service with the given {
{
returns a bean manager for the module .
add a {
clear the errors .
creates a new table row alias . <p >
updates the table alias . <p >
process a new .
clone the object object to the clone
execute the given command .
{
initializes system database system database system database system system database system system database system system database system system database system system database .
/ * this method is called to perform the local database .
{
/ * ( non - javadoc )
this method is used to get the lock manager manager .
checks if the given resource is a reloadable or not .
{
{
{
parses the timeout .
parse the current lock value .
build a { @link } from the given { @link } .
gets the address of the address .
hides the popup .
called when the divider is clicked . <p >
restore the parent node .
sets the current state of the current view . <p >
sets whether the current state is a valid { @link } . <p >
resets the icons . <p >
saves the user . <p >
adds a new event manager to the opencms manager . <p >
adds a request handler for the specified class . <p >
adds a resource handler to the opencms vfs . <p >
returns the authorization handler for the current site . <p >
execute the command .
returns the login manager . <p >
returns the publish job manager . <p >
returns the provider session provider . <p >
removes a publish list from the publish list . <p >
sets the default user . <p >
sets the credentials for the given class name . <p >
sets the history settings settings . <p >
sets the locale manager . <p >
sets the login manager . <p >
create the sheet with the given name .
add the passed {
set all columns of all cells in the table .
sets the workplace handler . <p >


sets the . <p >
sets the server command line to the workplace ui . <p >
sets the temporary file . <p >
set the user context user context .
add a style style style to the css table .
writes the given file to the given file .
the node is used to send a message to the queue .
start the given component .
serialize the given { @code trialmeter } object into the specified { @code outputstream } .
get the speed for a given component .
get the speed for a given file .
get the amount of the given cache that is currently in the cache .
get the amount of bytes that would be in the file .
/ * ------------------------------------------------------------
get the amount of the current working stackframe .
get the amount of bytes that are currently in the cache .
get the amount of fractional scheme .
pushes the key to the

set the for this .
this method is called by the { @link } to determine the { @link } .
returns the amount of trailing operation that should be used for the given component .
/ *
push a new meter to the current thread .
returns the document id for the specified document .
increments the cache cache for the current release level .
reset the timer .
updates the page from the cache .
updates the cache for the journal cache .
reset the timer to the timer .

/ *

stops the invalidation of the timer .
remove the graph from the graph .
set the set of properties to be used for the given accessor .
sets the property to be used .
removes the property from the persistent storage .
returns the property graph for the graph .
saves the graph to the graph .
returns a {
{
returns the record as a { @link } .
called to close the current connection .
attach a new graph to this graph .
returns the graph graph from the graph .
check if the property is valid .
checks whether the given class is a persistent class name .
sets the properties to be used for the given class .
squash .
returns a map of zip file entries for a given file .
helper method to extract an object type from the given object .
encode binary data into base64 .
decode the string .
disable tab search for the tab . <p >
fills the given list of elements from the given list of search objects . <p >
sets the tab of the tab . <p >
returns the tab corresponding to the given tab id . <p >
selects the tab for the tab . <p >
sets the size of the dialog . <p >
sets whether the preview of the panels is visible . <p >
updates the size of the data panel . <p >
sets the maximum size of the dialog . <p >
closes the current stream .
returns the text of the tab . <p >
initializes the css css for the given sarl dialog . <p >
removes the tabs in the tab . <p >
consumes the expected token and throws an exception if the token is not a valid token .
skips the next line .
returns the next character in the string .
unescapes the character escaping of a backslash .
/ * chr - up - ecmascript <br / > ebnf : <br / > <code > { n! ; < / code >
/ * this method is used to parse the next literal literal .
read a literal declaration .
decodes a json string according to the following production rule zu .
returns the next pseudorandom masked token .
returns the next valid name .
skip the dbase file .
check whether the given order is a certain number of orders .
return the next latin symbol .
{

disconnects the cluster and sends it to the cluster .
sends a request to the endpoint asynchronously .
sends a request to the endpoint using the provided request .
requests a n1ql response from a mongodb remote endpoint .
reads a file from the vfs resource or if the resource is not available or not . <p >
returns the html page for the given html version . <p >
login to the user .
cancel the cancel
returns the address of the remote server .
checks if the current user has permission to access the current user . <p >
sets the current request .
set the response .
clears the thread pool . <p >
returns the for the specified name . <p >
ensures that the given resource is a resource type . <p >
returns the record that is editable . <p >
ensures that the current user has the session id . <p >
returns a map of properties of the given properties . <p >
returns the service endpoint for the specified environment .
removes the first node from the node .
traverses the ast node and replaces it in the tree .
try folding block of a block .
remove np from rhino stop walker .
check if the node is a valid node that is a finite node .
remove useless node from the node .
returns the result where the node is a descendant of the node .
remove the node from the node .
try to remove a node from the rhs .
remove repeated elements from the ast node .
returns true if the node is a string literal .
returns true if the given expression is a valid iri of the given type .
----- private methods -----
/ *
replace the child of the node .
/ * ( non - javadoc )
{
get temp file path
/ * ( non - javadoc )
get the key cache for the given path .
add resources to the file
add resources to the bundle .
checks if the file is modified
get the persistent cache for the given .
/ * ( non - javadoc )
reset the cache .
check if the cache is a cache .
serialize the mapping
load mapping from cache mapping cache mapping
quote a string with quotes .
convert this value to a class .
convert this value to the enummap of the flags .
returns all module names of the module names . <p >
internal method to extract the evidence from the opencms modules . <p >
handle the list of paths found in the source file .
checks whether module resources is present in the source folder . <p >
create a prefix for the given word .
touches the type of the jsp file . <p >
changes the explorer type of the resource type . <p >
clones the given resource types . <p >
adds the given module to the module list . <p >
returns the resource types for the given module . <p >
creates the classes folder for the given modules . <p >
deletes the files from the source folder . <p >
checks if the given value is a list of string . <p >
locks the current user . <p >
renames the resource bundles from the opencms modules . <p >
writes the contents of the opencms script . <p >
performs the copy check . <p >
replaces the given source module to the given target target module . <p >
checks if the given resources are not permitted . <p >
unmarshals the given gallery resource . <p >
returns the xml document . <p >
execute the command .
returns the raw content of the given resource . <p >
start the server .
this method is called when the bundle is in the context of the bundle .
returns whether the is not a
gets the resource handler for the activator attribute .
build the parameters object from the request
/ * ( non - javadoc )
/ * ( non - javadoc )
create a script from the given {
/ *
initialize the application context
initializes the application config manager .
this method initializes the config resolver .
this method initializes the configuration properties .
init the configuration
initializes the .

/ *
/ * private static ( ) { final config = new ( ) ; }
/ * ( non - javadoc )

initialize the thread context .
/ * ( non - javadoc )
handle the request
/ * public object ( string string map string )
/ * ( non - javadoc )
/ *
checks whether the given path ends with a path .
/ * ------------------------------------------------------------
set the response headers for the response .
start the monitoring process .
returns the names of all the bundle names .
/ * ( non - javadoc )
reset the settings to the dispatcher .
get the { @link } property for the given property? .
sets the annotation annotation for the given key .
initializes the configuration for the given jaas system .

add a binary resource to the resource path .
check if file extension contains a misc file extension .
add the items to the list of .
/ * ( non - javadoc )
{
handle a request .
get the content type from the file .
/ * ( non - javadoc )
{
returns the real path to the given file .





find the { @link } for the given class .
determines if the given { @code type } is a valid { @link } expression .
creates a new meta - data source .
returns the constant value for the given node .
declares a new for the given node .

加载类
creates a new instance of the class .
creates a new instance of the class .
format a string with the given arguments .

convert the current format to the format of the given format .
returns the short name of the given namespace name .
get the property name for the property .
renames the properties .

returns the types of the given type .
returns the type of the type represented by the given type .
returns the type of the property type .
returns the {
recurses the implemented interfaces implemented by the given class .
murmurhash the number of bits necessary to verify the number of bytes in the input .
compute the number of 64 bits .
{
this method is called by the {
compact the ranges of the .
returns the list of union objects in this group .
creates a new config for the given key . <p >
<p > . < / p >
invokes the script with the given name and arguments .
initializes the model .
{
restore the state of a given version from the given rdf state .
enables or disables the producer .
/ * ( non - javadoc )
this method is called by the {
/ * ( non - javadoc )
returns the template type from the given type .
returns the narrowest type for the given type .
creates a new instance of the given type .
returns the type of the given type .
starts the content . <p >
creates all resources from the given list of resources . <p >
returns the name of the node .
initializes the dialog . <p >
returns the select options select options . <p >
{
calculates the hash value of a key .
get the hash value for the given key type .
add a collection of schema kinds to the schema .

normalizes the path to the given field path .
build a kjar .
scroll the view to the specified touch view .
scroll the view on the view to the given scroll position .
/ * ( non - javadoc )
process the list of .
check if the process is to be processed
returns the formatted string for the given exception . <p >
gets the stack trace from the current log .
returns the byte array .
put a value in the map .
merge the value from the given map into a map of strings .

copy all the values in the map .
sets the icon for the given title . <p >
creates a template node .
explode inline ast node node .
create a new doc comment doc .
parse a single doc comment .
sets the length of the node .
clones the given node and returns the node s root node .
download the temporary file to the target server .
returns the for the given maximum .
<code > repeated . jscomp . requirement requirement = 1 ; < / code >
<code > repeated group entry = 1 . maximum = 1 ; < / code >
<code > repeated . jscomp . requirement requirement = 1 ; < / code >
<code > repeated . jscomp . requirement requirement = 1 ; < / code >

convert a string to a clob .
returns the full version of the given srid .
load a srid from the database .
<code > . jscomp . requirement requirement requirement = null ; < / code >
<code > repeated . jscomp . requirement requirement requirement ; < / code >
get the id of the id of the given id
<code > optional string = 1 ; < / code >
<pre > google . google . google . google . google . google . google . google . google . com . google . google . google . google . google . google . google . google . google . google . google . google . google . google . google . google . google . google . google . google . google
<code > optional string = 1 ; < / code >
<pre > the rule to be used . < / pre >
<code > optional string = 1 ; < / code >
<pre > the version of the tensor that should be used to sort the application . < / pre >
<code > repeated . jscomp . requirement requirement = 1 ; < / code >
check if the service advertises the service .
forcefully deletes the new { @link } .
checks if the given dbids are available .
returns the root directory of the project .
returns the root {
get the singleton instance of { @link } .
load properties from a resource
returns the version of the project .
set the title of the window .
check if the table is a geometry .
determine whether the specified { @link } exists in the database .
get the kerberos config for the specified key
get the absolute path to a file .
shows the sitemap button panel . <p >
handles the recursive selection of the gallery . <p >
returns the publish view of the gallery view . <p >
gets the page of pixels from the current driver .
process the command line .
build reader reader for line reporting .
start the terminal .
returns a string containing the optional string with name and values .
check if the import flags are valid for the given import check if the import is not a valid resort .
returns whether the given deps - - is not a synthetic file name .
checks if the import is an async call .
check whether the given node is not null .
/ * check if the two nodes are not null .
remove the module subtree for the first goog . collapse .
initiates the paypal snowflake .
dials the paymentsession from the merchant account .
returns the annotation of the given annotation .
returns the annotation of the given annotation .
returns the annotation value for the given annotation .
returns the name of the field name .
prepare the given {
returns the style style for the specified annotation .
get all page of annotations from the annotation .
returns the page page for the given .
get page doc .
get the locale specific annotation value .
/ * ( non - javadoc )
collect all entries in the tree .
rewrites a node to be applied to the tree .
check that the given opcode node is a primitive type
process a single call .
parses the given { @code } from the given { @code source } .
rewrites the externs defintion .
rewrites a definition of type { @code } .
handle a new .
parses an input and extract it from the given node .
register a from the given node .
check if the node is a getprop instance .
/ * ( non - javadoc )
create a producer that is ready to be reused
decodes the inline frame from the specified byte buffer .
visits a node type .
returns the direct edit project for the edit project for the edit template . <p >
creates a new byte buffer of the specified buffer .

returns the current resource . <p > the current thread will be used to obtain the current user s root .
adds the given to the digester . <p >
creates the xml element . <p >

generate a new netcdf - generated file .
call this function to handle the given { @link point } .
extract the various weirdness
resolves the name of the node type name and resolves the name of the class or member of the given name .
returns the qualified name of the node or null if the node is not a string .
converts the {
convert the given bytes to a format padded with the given format .
pack the
<p > . < / p >
return a single size of the histogram .
moves the file to the target table .
checks if credentials are set to the specified credentials .
returns a string with the specified string as a string .
<p > a list of id objects . < / p >

sets the position of the current position .
sets the user who sends notifications to the notification .
find the descriptor for the given image .
creates a converter for the given .
creates a new converter for the specified image .
create a new converter for the given image type .
creates a new { @link } for the given { @link string } .
creates a converter for the given converter .
converts the given image to a target type
returns the total number of datums in this dataset .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
deletes all controllers from the tracker .
get the age of the current time .
returns the age of the date or property name . <p >
check if the current date is resumable .
check if the is
generate a checksum digest hex string .
/ * ( non - javadoc )
returns the given or null if the given type is not in the range .
get the { @link } instance . <br > <br >
get the current instance of this class . <br > <br >
create a new index .
sets the configuration .

load a single document from the stream .

load the specified { @link } from the given stream .

saves the velocity templates transformed by the template using the given template .


registers a factory that will be used for the given protocol .
returns the handler for this url .
extract the url portion of the url .
returns the url for the given url .
returns the descriptor for the given basename . <p >
shows the warning warning focused focused .
sets the warning level .
sets the environment .
set the compilation level .
append parameters to the { @link } and { @link parameter } s .
sets the value of the property .
find all files in a collection .
returns a list of parameterization classes that are registered for the compilation .
check if the last modification process is stale .
get the last modified time of the list of files that are rebuilt from the list of files .
get the last modified time of the file .
renames the source of the node .
converts a properties map into a map .
delete the current
this method is used to find the results of the criteria .
sets the value of the given key .
the given label .

generate a random seed string
{

query the sql statement for the query .
update sql statement .
check if the sql query is a query .

returns the query pattern for the given pattern .
gets the current component . <p >
registers all the resources of the given widgets . <p >
helper method to print the error message about a given .
add a { @link } to the list of node paths .
verifies that the given { @link } is not equal to the given { @link } .
check if the current state is a valid state machine .


get object object from the given { @link } .
get object object object from given object
get object object from the given { @link } .
calculate the output shape of the shape .
generate a random from the given formula .
multiply two in the complex number
divide two vectors
start the background thread .
starts the .
start the hub .
check if the application is a wifi unit .
returns true if the row is a row .
returns true if the row is a varbinary .
fetch the direction of the direction of the direction of the directions .
{ inheritdoc } .

retrieve a column .
sets the cell value .
set the cell size .
set the value of the property .
sets the vertical alignment of the horizontal scrollbar .
sets vertical alignment alignment .


wrap a callback ( s ) with a specific callback .
calculate the distance of the for the specified .
returns the first item of the list . <p >
returns the instance instance . <p >
gets the last element . <p >

returns a new instance of the element . <p >
gets the list of parent resources . <p >
returns a new instance of the { @link } . <p >
returns the title of the search page . <p >
returns true if the date is valid .
converts the specified date to a { @code localdate } .
initializes the series for the given series . <p >
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
computes the matrix of the elements of the specified array of the specified array where the second element is the number of columns that the specified row is the number of columns that the specified row is the number of columns that the specified row is the number of columns that the specified row is the number of columns that the specified row
get the subnodes of the nodes in the given set of nodes .
get the subnodes of the given node
reads the data from the input stream .
/ * ( non - javadoc )
returns the projects projects of a user . <p >
creates a new publish job . <p >
removes the relations from the online offline state . <p >
returns the parameter value for the given parameter .
creates a new project . <p >
returns the publish attachment from the given serialized array of <code > / code > . <p >
returns the log entry for the given jdbc log entry . <p >
resets the state of the given resource state to the given resource . <p >
serializes the publish list to the publish state .
writes the history of the publish state of the publish state . <p >
returns the log level parameter . <p >
writes the changed file changed to the publish list . <p >
applies the deletion and online deletion . <p >
writes the deletion of the offline publish resources to the publish state . <p >
installs the margins from the splitter position in the direction of the first one . <p >
checks if the current position is visible . <p >
generates the position of the position of the element . <p >
returns the position of the element panel . <p >
returns the category of the type dimensions from the panel . <p >
checks whether the specified region is the same as the specified region .
this method is called from the start of the end point of the .
returns the area of the area .
checks if the given child item is a child of this path .
returns true if the given element is a element of this matrix .
checks whether the expectations are ensured expectations .
returns the order of the given filter .
returns the list of names of the user - defined types .
{
estimates the window count .
check whether the given { @link } is applicable to the given { @code } .
add a property to the list of selections .
{
creates a new datasource .
get a list of the property from the given property .
get a from a given object .
get a list of the relevant { @link filter } that are filtered by the given filter .
returns the {
>
stellt to remove all the blocks from the head .
performs the commit action . <p >
gets the assigned for the user . <p >
creates the dialog html for all defined widgets of the named dialog ( page form ) . <p >
this method is used to update gradients for the given indarray
undo the mask arrays .
returns a list of help resources of the current user . <p >
builds the projects select box . <p >
creates a list of all the roles in the given opencms select . <p >
gets the options for the workplace dialog . <p >
creates the set of views . <p >
update the metric for the given id .
queries the specified query applying the specified filter to the specified filter optionally applying the specified filter to the specified filter .
queries the specified cassandra { @link filter } .
initializes the user object . <p >

returns a new query that is able to access this filter .
queries the lucene query to execute .
performs the query .
process the data structures .
get all the versions of the list
adds an alias for the alias .
returns the list of aliases for the alias alias . <p >
returns the alias for the account .
initializes the widget . <p >
validates the given action id . <p >
validates the given aliases . <p >
creates the button . <p >
creates button .
creates a button for a button . <p >
creates a label for this label .
creates a select box . <p >
creates a text box . <p >
rewrites this property to the final tab . <p >
validates the site structure . <p >
validates a single site against the given site . <p >
create a new for a given pro .
/ * ( non - javadoc )
removes all edited - related information from the rfs . <p >
builds the localized string for the locale . <p >
builds the html template string which is the root template . <p >
validates the locale . <p >
returns the list of resources belonging to the given template . <p >
returns the template elements . <p >
returns the list of pages for the given resource . <p >
checks if the element is a xml page element . <p >
checks if the given vfs page type of the given page keyvalue and the given page keyvalue is a valid page element . <p >
check if the element is valid or not .
checks if the given template is a template . <p >
handles the queuing of the tree . <p >
removes all the xml elements from the given page . <p >
writes the page page to the current page . <p >
returns a new query that is invoked by the given filter .
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
create a config .

find the most specific method for a given target class .
builds the components of the beans .
build a { @link } from the given { @link } .
build the center of the .

{ @inheritdoc }
creates a new stream of type { @code } objects .
returns a stream consisting of the members of this fluent partition .
returns a new instance of the grouping partition .
partitions the partition partition in the partition group .
relabels aggregate of { @link patternflatselectfunction } aggregate { @code } .
transform data datastream from this topology .
creates a new { @link stream } containing the result of applying the given function to this stream .
executes the action for each node in this node .
returns a stream consisting of the items of the specified field .

returns a new { @code stream } containing the given objects .
returns a stream of the input fields that are available in the given input field .
returns a stream where the maximum of the fields is equal to the maximum of each other .
returns a stream consisting of the maximal elements of this stream .
creates a new { @link } which is a superset of the { @link } s . aggregators will be grouped by the { @link } .
creates a new { @link window } whose { @code count } fields of { @code count } .
creates a new { @link } which applies { @link } aggregators apply to the { @link } .
creates a stream of aggregate statistics about the specified sliding interval window . aggregators grouped by the { @link } will be executed by the parallel window function .
creates a stream of fields using the given configurations .
creates a new { @link } for the given { @link } .
creates a new { @link } from the given { @code response } .
make a {
list of {
creates a new { @link } with the given id .
builder function to create a reactive streams streams of a stream of upstream kv streams .
like {
updates a list of { @link } s .

checks if the given { @code filter } is a list of { @link category } s .
checks if the given { @code predicate } is a { @code } .
returns a new { @link } with the given id .
returns a new { @link } which is a partial object that is a physicalentity which is a string that is a physicalentity which is a string representation of the given id .
returns a canonical with the given filter .
add a new predicate to the current filter .
check if the passed filter is a cql filter .
marshall the given parameter object .
unsubscribe from the subscription .
{
/ * add the right corner of the scene to the left edge of the node .
apply a mask to the tile state .
move the viewport to the bottom of the right bottom sheet .
move the decision to the scene graph
returns the protocol protocol url .
returns the class represented by the master .
create a new instance of { @link } .
get the level of fatal .
adds an interface to the given {
returns the previous number of the current node .
returns the number of characters in the database .
check if this property is a valid filter
prepend the given property to the list of elements that are not the same as the given property .
lookup the default behaviour of the { @link } .
extract the path information from the given uri .
extract the protocol information from the websocket protocol .
extract the user keys from the user s access token .
extract the options from the given { @link } .
validate that the {
converts the { @link } to a pixel value .
generate a cholesky decomposition of a sparse matrix

the matrix diagonal is used to calculate the matrix multiplication .
/ * ( non - javadoc )

returns a simple bean bean for the given resource type . <p >
returns the dynamic function name for the given bean . <p >
returns the list of additional format patterns . <p >
returns the formatter function for a given formatter . <p >
returns the locale to use for the locale . <p >
returns the main format format for the given resource . <p >
returns the string value for the given content .
reads format format from the given xml content . <p >
returns the dynamic function factory bean . <p >
returns the parameter parameter value for the parameters .
returns the parameters of the given resource . <p >
resolves the property property value to the xml document . <p >
returns the content of the given resource . <p >
increment the value of the specified increment .

opens a file . <p >
handles the dirty item . <p >
handles click for submenu clicks . <p >
adds the children of the given inheritance entry to the group . <p >
performs the recursive mapping of a list item . <p >
adds a new node to the list of enabled role . <p >
adds ou to ou . <p >
returns the current user s title . <p >
returns the ou of the given item . <p >
recursively tries to find the given root item of the given root view . <p >
this method is called by the executor to be called from the constructor .
reset the executor of the db .
queues a request to the request .
executes the request .
creates a transport for the specified transport .

set the class name of the class .
creates a parsing parser for the given type and optionally reader .
checks if the error is a constraint error .
checks if the sql statement is a unique identifier .


sets the value of the form xobject .
checks if the string is a valid
closes the popup selector . <p >
reset the popup to the default handler . <p >
gets the description of the specified character .
get the description of the given caption and the given caption
convert a string to a hex representation of the form { @code } .
opens the popup to display the dialog . <p >
read the tags from the given tag .

///////////////////////////////////////////////////////////////////////
extract the lat / lon coordinate centers from the .
find the results of a collection of paths .
find a dataset by name .
find the {
decodes a signed 64 - bit integer from the given byte array starting at the specified offset .
decodes a signed integer object from the byte array . if the byte is not null then the byte buffer is returned .
decodes a long - byte order from the given offset .
decodes a long object from the byte array . if the byte is not null then the byte buffer is returned .
decodes a prefetched byte of encoded bytes .
decodes a prefetched byte of bytes from the specified byte array .
decodes a signed short from exactly 2 bytes .
decodes a short object from exactly 1 or 1 . 0 . 0 . 1 . 1 byte is returned as a short .
decodes a char array from the given byte array starting at a position in the specified byte array starting at the specified offset .
decodes a character from the given byte array starting at the specified offset .
decodes a { @link boolean } from the decoded encoded string .
decodes a boolean value from the byte array .
decodes the three integers from the given byte array .
decodes a float from the given array .
decodes the doubles of the specified byte array .
decodes a double value from the specified array starting at the tail of the specified byte array .
decodes the given { @code } from the given { @code src } .
decodes the given { @code bigdecimal } into an array of bytes .
decode the byte - array of bytes in the buffer .
decodes the specified byte array starting at the specified offset in the byte array starting at the specified offset .
reads an 8 - byte from inputstream from the input stream .
reads the entire data from the input stream .
decodes a single byte array .
decodes the given byte array .
create a new invcatalog for the given namespace namespace
uncompress the dataset to a file .
creates a new directory containing the given filenames and directories .
register a given transform by passing the given name to the given string .
registers a given transform by its name .
register a { @link } to the class of the jacorb subsystem .
transform a transform - to - transform object .
create a transform variable declaration .
convert the to a projection
get the directory for the given state .
{
get the { @link } for the given { @link } .
purge the album to the given file .


discards tombstones from the current position in the current position .
merge the specified columns to the columns
{
{
{
{

creates a new store in the given size .
converts a { @link charsequence } to a { @link store } .
returns a uniform { @code } uniform random probability with the specified { @code random } uniform by a random { @code integergene } .
sets the bit to the bit set .
converts a byte array to a { @link } .
creates a new store in a byte array .
store a bit in a bit set .
fill the given bit count in the given store .

creates a { @code reader } from a byte array .
creates a { @link } from the given { @code } .
split a file into a collection of splits .
splits the given sequence into a single temp units dir .

create a gpx from a { @link bytebuffer } of the given { @link file } .
creates a bit writer which is a byte array .
returns a new { @code } instance containing the given size and size .
creates a bit writer for the given operation .
copy the {
returns a new with the given number of bits and the corresponding value to the given bit .
digest a bit hash with the given bit mask .
creates a builder for the properties of the jobprops .
creates a new reader for the given block .
creates a new with the given position .
write a ncml to xml .
returns a that contains the given position .
returns the lower - bound value of the given bit .
returns the greatest common divisor of the specified b .
create a variable variable for the variable .
creates a bit writer for the given position .
deserialize a data object from an asn . 1 byte [] byte [] byte [] .
returns a string containing the data of the data in the given data . <p >
creates a new .
creates a new .

checks whether the given class is a valid pdb type .
parse a string .
> >



create an inputsource that contains the given inputsource .
creates an object from the given source object .
starts the progress bar . <p >
parse the configuration of the given class using the props .
execute a record using the given { @link } .
{
invoked when the command is received .

show party ui .

{
{
{
calculate the scale offset for the given .
{
/ * ( non - javadoc )
check if the is set to the config file .
returns the input formatter for the given configuration .
sets the nodes of the nodes .
adds the given to the current transformation .
initialize service .
check if the file is valid .
create a new netcdf file
add the global attributes .
read the data for a variable variable .
wml2 : collection / wml2 : observationmember / om : om_observation / om : / gml : timeperiod
get the name of the dataset
get the name of the vector for a type
add a listener to the listener list .
/ *
{
process the view .
process fields in the map .
process annotations on the target class .
adds the handler to the target handler .
add a new eventhandler to the callback .
build the controller controller .
returns a job execution execution execution status
search the jobs in the given batch .
check if the current gemfire is a
get project id from project project project name .
create a new job creating a new project job .
delete a new project job .
replaces the job s job job with the project .
schedule a job to finish running the job .
executes the checkout .
{
returns the double value of the given { @code } .
returns the integer value of the integer value .

creates the system job execution .
{
enqueues a task to the task .
reads data from the given data source .
writes the data to the output stream .
writes the data to the output stream .
set the value of the field in the array .
returns the title of this page .
add a new { @link } to the { @link } .
returns all work units that are contained in the {
returns true if this polygon is a point
{
creates a new { @link } instance with the given { @link jobid } .
{
initialize the for the given range .
{
{
{
get the key / { @link } command .
loads the given { @link } from the given { @link } . <p >
{
{
/ * ( non - javadoc )
this method is used to display the style sheet name of the { @link } .
clean up the ripple effect of the .
close the underlying file .
shutdown the sessiondriver .
get the first { @link } for the intent .
/ * ( non - javadoc )
closes this session .
close the sessionmanager .
get the secret key
returns true if the given {
opens the path of the given path . <p >
creates a tree tree node . <p >
executes the given site . <p >
updates the root view of the resource . <p >
{
{
generate the button for the { @link } .
find the type of the given name in the given type .
get the type of the type of the given name .
creates a new thread for this .
sets the value of the form xobject .
returns the list of direct entries . <p >
adds a new branching entry for a given entry . <p >
returns the entry for the given read - only work . <p >
creates a new parameter list . <p >
returns all the selected resources for the user restriction . <p >
{
delete the job id from the job .
{
submits the dialog . <p >
add a landscape annotation to the document .
adds a new layout layout to the current row .
gets the list of key groups . <p >
adds a new auxiliary map to the user . <p >
reads a resource from the given resource .
read resource string from class . forname ( string ) .
read a file from the given resource .
read a resource from the url .


aborts the publish job . <p >
returns the link to the project . <p >
set the dimensions of the shared dimension .
check the input of the dimensions of the dimensions .
find the group with the given name .
create a new { @link job } instance from the job configuration file .
create a new { @link job } instance from the job configuration .
create a new { @link } for the job job execution type .
creates a new quartz job config job .
creates a new quartz job launcher .
build a new for the job .
adds properties to the configuration .
puts the configuration of properties from the configuration properties .
adds the given { @link atomicinteger } to the { @link } .
read a file from the props file .
creates a new entity from the given entity . <p >
selects the select elements of the document .
push a new event to the event .

clears entity attributes . <p >
generate the id for the id .
add a field to the map .
{

get the 3d bounding box of the given set of locations .
get the 1d vertical coordinate array for this time step .
create a random neighbour of the given bounding box

handle the method of the given wave object .
{
{
create a new netcdf file
get the detail information of this class .
make a structure from the layers
create a variable variable from the variable name .
create a variable variable variable
add the global attributes .
returns the maximum variable size for the given name .
this method will return the list of locations in the dataset .

create a variable variable for the dbase file .
transform input data into variable row .

transfers the given data to the target variable .
transfers all the attributes from the target to the target group .
find group by name
checks whether the annotation is annotated with the given annotation .
inject the given { @link component } into the { @link inject } .
inject citrus .
sets the style of the popup to this view . <p >
inject the given { @link class } into a component .
creates a map of all the { @link } instances .
visit all the methods of the given component .
visits all component types of the given component .
dispatch an item to the component .
{
returns the language list select widget . <p >
initializes the dialog object . <p >
add a {
returns the schema schema for the directory .
this method is used to store a schema from the file .
{
returns schema schema for the given schema .

flattens a schema into a { @link map } .
{
disable the given view .
clears the token for the given user . <p >
creates a token from a user . <p >
validates the token . <p >
sets the source .
bulk api to put a destination in the destination state to the destination .
bulk - bulk scan to create a new destination with the given id .
loads all { @link } instances using the given state .
loads the {
get the event type name from the given state .
removes the prefix from the given string . <p >
returns a resolver instance that is used to resolve the { @link config } object .
returns a key - based object from the given object .
returns lineage info info about the given { @link class } instance .
print a command line .
print out the data of a command .
returns true if the output file is a formatted file .

print a file .
print a variable - style variable .
read the variable data from the netcdf file .
print a data structure from the
print the array of variables for the given { @link } .
print a array of primitives .
write the to the netcdf file

find the actual { @link } for the given { @link } .
/ *
returns true if the bit is a member of this factor .
toggles the button selected by this widget .
returns a predicate that evaluates to { @code true } if the given { @code predicate } is a { @link predicate } .
returns a predicate that evaluates to true if the specified components evaluates to true if the components are not null .
creates a predicate that returns a predicate that evaluates to { @code true } if the components of the specified components are not found .
selects the button widget . <p >
applies the given program to the program .
encodes a two - byte short short short short short short short short short short long - time value .
this method is used to convert the byte array to a swap position .
returns a new double - padded from the specified byte array .
round the result from the float .
swap the eight representation of the given double value .
convert a byte to a byte array .
convert a byte to a byte array .
converts a long to a byte array .
creates a new .
create a new tree node .
this method is called when the node is a leaf node .
this method is used to compute the of the node .

get the 3d coordinate array for the given time step .
get the 1d array for the 1d coordinate step step .
compute the for the .
create a new rectangle for the given column .
create a converter from the given context .

generate a random key from a key .

builds the list of nodes for this node .
finds all nodes in the graph .
get all nodes of a node in the list .
returns a new { @link } which contains all of the nodes in this graph .
merges the other nodes into this one .

report a variable to make sure the stack is a scalar type .
this method implements print a sequence of
get downloaded file from a file .
this method will aggregate the { @link } and then runs the { @link } in order of { @link } .
sets the parent view .
get the name of the element of this element .
returns the maximum number of bands for the given axis .
{
{
{
{

this method is used to get the model from the view vector .
/ * ( non - javadoc )
sets the size of the sprite sheet .
creates a client factory that creates a new client factory .


calculates the number of chunks that were returned by this method .
save the state of the current state to the storage .
reads the {
reads the number of files from the current directory .
write the record count in the directory .
get the array of available values for the given .
get the extended data
interrupts the jobs .
add the job to the job .
------------------------------------------------------------------------
add the given jar to the jar .
returns the {
add local files to the job .
this method is used to generate the job s configuration files .
prepare the job input job .
cleanup the job directory .
increments the job counters from the { @link healthcheckregistry } .
add a new partition to the list of partition offsets .
get the partition source .

convert record into json format .
convert the value to string
{ @inheritdoc }
/ * ( non - javadoc )
returns the next image of the specified window .
stop the application .
/ * ( non - javadoc )
get the action method for the given controller path .
create a location of the given fileinfo location .
get all providers that have been added to the container
add a new provider
returns the named {
get a metric from the server .
renames the given path to trash .
create a snapshot of the given projects .
iterates over all backups in the snapshot .
{
create a xml document from the xml document .
updates the visibility of the button . <p >
create a new
this method is used to compute the composition of two dimensions .
returns a new index of the specified index .
given a list of ranges of the specified range and return the index of the list .
compute the full subspace of the given type .
returns the path of this path to the rfs .
sets the content of the report . <p >
sets the path of the opencms tool . <p >
returns the matrix scaling .
returns the index of the permutation .
returns the indices of the dimensions of the dimensions of the dimensions in the array .
returns an iterator that returns the index iterator .
returns the value of the element [ highest ] .
sets the current counter for this <code > / code > .
set the rank of the rank - index of the array .
set the value of the shape tensor .


gobblin job .
returns a new xslt template object .
write the xml document to the xml document .
write console .

write console console to xml .
{ @inheritdoc }
add a listener to be notified when the listener is detached .
initialize the data .
notifies all registered listeners that the user has been removed .
check if the given file is a file .
creates a new path entry with the given path .
/ * auxiliary method to extract flv files from the zip file .
/ * this method is called to be called from the .
check if the given path exists .
deletes the given entry from the list of listeners .
recursively walk the path to the directory tree recursively .
displays the values of the form {
sets whether the view should be visible .
sets the visible visible visible visible predicates for the current area . <p >
sets the visible visible visible visible visible visible visible flag visible .
sets whether the mode is visible .
sets the size of the visible visible visible visible visible visible visible visible visible flag .
sets the visibility of the visible visible visible visible visible visible visible visible visible visible visible visible visible components .
sets whether the drop down is visible .
handles the selection of the hit wheel .
initialize the fields for the tooltip .
initializes the labels . <p >
returns the type of the resource type . <p >
get the 3d vertical coordinate array for this time step .
get the 1d vertical coordinate array for this time step .
closes the current file .
initializes the editor . <p >
creates a new { @link } from the given { @link processbuilder } .
check if the password is authenticated .
get the type of the inner element .
get a double from the given offset .
gets the double from the given index .
retrieve the value from the map .
process the .
read a pid from a namespace
read pid and .
returns the value of the given namespace as a string .
this method is called when a connection is created .
loads the resource info from the resource . <p >
handle the activity s activity .
converts the given activity to a { @link } .
<p > . < / p >
converts the given { @link activity } to an { @link } .
/ * ( non - javadoc )
add all configuration files to the application .
/ * ----------------------------------------------------------------------
returns the cache - page data . <p >
installs the install / directory to be installed .
returns the dest rectangle that will be used to draw the given { @link } .
returns the vertical line width of the specified tab .
{
add the { @link } to the builder .
add a {
gets the list of available columns for the given columns .
check whether the given { @code classname } is a { @code boolean } or { @code false } if the provided { @code } is { @code false } .
returns the { @link component } for this { @link component } .
returns the { @link } instance .
this method will return the { @link } for the { @link } .

{
get file from directory
creates a chart chart .
calculates the label for the given job .
returns the value of the named property .
unpack xar files .
set the spring auth auth auth config .
set the scripts for the file system .
find a file in the given file .
set the home time of a .
get the list of subjects that match the given request .
get the environment variable for the request .
checks if the item is date or not .
scan a package scan scan for the given package name .
scan the scan scan for the given package .
scan the given package and scan the scan .
scan the package for the package scan for the package .
wait until the task has finished .
returns the conditions for the query
set member data for a member .
runs the auxiliary process .
get member of a member .
get the scalar value of the member .
get the for a member .
get member of the member variables
get the array of member of member .
get member of the member .
get member of the member .
get member of the given structure .
get the number of elements in the array
get member of the member .
get member of the member .
get the data in the ndarray .
get the long array of member [ j ]
get member of the member variables .
creates a new instance of the given class . <p >
creates a new instance of the given class instance . <p >
build a table for a list of tables .
builds a table from the given table . <p >
gets the default cell style generator for the given property style .
returns the default filter for the given property . <p >
checks whether the search view is visible . <p >
get the char array of members of this member .
get the scalar string .
get the scalar data from the member
registers a factory to the class name .
registers a factory with the given type .
read a netcdf file
open a netcdfdataset to a netcdfdataset .
returns the content definition of the given resource . <p >
returns the content definition for the given type definition . <p >
returns the content handler for the given resource . <p >
creates a new xml content definition . <p >
/ * ( non - javadoc )
writes the data to the given data frame .
returns the xml content definition . <p >
creates a new xml content definition . <p >
creates a simple name for the given name . <p >
validates that the attribute value is not null or empty . <p >
validates the attributes of the given attribute . <p >
ensures that the given element contains a type sequence . <p >
returns the xml content definition corresponding to the given xml schema . <p >
helper method to translate the xml schema to the opencms schema file .
creates a xml dump of the given xml content . <p >
adds a default xml document to the xml document . <p >
creates a new xml content definition . <p >
adds a type to the xml document . <p >
creates a default xml document for the given xml document document . <p >
creates a new lucene document for the given xml document . <p >
creates a new locale document . <p >
finds schema types of the given path . <p >
creates the schema for the document .
returns the schema for the given element . <p >
sets the name of the inner resource .
returns the schema type schema for the given element . <p >
/ * ( non - javadoc )
invokes a file on the server .
add a journal entry to the file .
set the value of the specified attribute to the current session .
set the values of the values in the specified array
returns an inputstream that is able to the given name .
closes the file .
check if the dataset is valid .


encodes the given host and remaps the scheme .
returns the default port for the given scheme .
initializes the module .
{
/ * add the properties to the properties
parse parameters from parameters .

create a date from the given state .
unsubscribe from the database .
create a new datastream from the specified world model .
create a new datastream from the specified smarthandle .
execute the specified {
store the contents of a stream in the { @link inputstream } .
set the { @link } to be used . this method is invoked in the { @link } and { @link } .
set the datastream to be sent to the server . this is a convenience method that is invoked by the { @link } or { @link } .
get a list of the current token for the given namespace .
/ * ( non - javadoc )
/ * inform all entities of participants in the given resource .
validate the digital object .
ported from ( )
write the members of the grid .
{
closes the underlying rrd file .
returns the cell value of the given cell string .
select the tab .
update the html extension of the html document .
returns the index of the basic column of the given id .
this method is used to update the {
adds a new one to the document .
add a new to the list of .
visits a method instruction . this method is called by the streamer to make sure that the type is a function or method .
/ * ( non - javadoc )
submits the search time . <p >
sets the object of the object .
adds a new project to the project . <p >
adds a project name to the project . <p >
creates a new project update . <p >
initializes the form . <p >
returns the indexed value indexed property .
get the value of a property .
get the value of the given key from the property .
set a value for a property .
sets the indexed value for the given property name .
sets the indexed value for the given attribute .
{
{
return the last modified date of the .
set the value of the property to the value .
set the value of the property to the value .
create a new method instance of a class .

returns the property that is of the specified property .
returns the property value of the specified property .
this method is used to call {
dispatches the file to the stream .
returns the audioinputstream object from the given payload format .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
deserialize the entity .
get input stream to fetch the response stream .


read data from variable data
generate the mc
returns all users of the given data .
create a new .
create a .
returns the { @link } instance for the given name .
adds a new provider to the given element .
removes the given element from the given element .
get the { @link } for the given element .
set the private station .
checks if the current service is a smart server respond to the server .
append parameter to the given url . <p >
append parameters to a url . <p >
creates a map of parameters from the given map .
create a map of parameters from the given query parameters . <p >
creates a map of parameters from the given parameters . <p >
encodes the request params for the http request params . <p >
encodes the uri parameters with the given uri . <p >
forward to the request . <p >
invokes the method . <p >
gets the attributes map . <p >
returns the value of the given action with the given name .
get the value of the cookie name from the cookie name .
/ * build the partition hosts from the list of node partitions .
get json parameters map from parameters
returns the { @link } of the specified parameter name and returns the result if not found . <p >
returns the empty parameter of the request . <p >
get a map of keys from the keys and return the result as a map of keys .
compute the mean squared of the .
returns the parameter from the query string .
returns the link to the url . <p >

find the segment of the given segment in the given segment .
returns a file containing the given resources .
reads the file items from a file . <p >
read parameter map map from multipart data from a file . <p >
sends a redirect action to the target entity . <p >
redirects to the given target target target url . <p >
removes the { @code value } from the session .
sets the value of the cookie header .
sets the header flag . <p >
gets the component of this { @link } .

returns the instance of {
returns the html code for the given workplace line . <p >
returns a list of all items in the given list . <p >
prints the constraint to the print print print .
{
/ * ( non - javadoc )
{
{
opens the given resource with the given title and id . <p >
adjusts the height of the overlay .
initializes the content of the dialog . <p >
unlocks the dialog . <p >
returns the message for the given . <p >
/ * ( non - javadoc )
write header to the serial header .
creates a new connection to the server .
check if the given connection is available .
get the program arguments for the user .
/ * ( non - javadoc )
remove the last last mark .
store data in this dataset .
this method is called by the to create a system system system action .
touches the current resource and the given time - value . <p >
touches the current state of the file . <p >
returns the html for the html text .
returns the suggested recursive recursive list of all the folders that are included in the folder .
init method . <p >
performs the work of the dialog . <p >
helper method to search for resources from given resources .
removes the prefix from the string .
returns true if the user s device is valid .
check whether the contact is authenticated .
sends the message to the server .
add a message to the list of payloads .
adds an external message to the list of contacts .
given a set of and stores the given set of tags and the set of tags that are tagged with the contacts .
the decrypt of the given .
sort the sort algorithm .
initializes the connection .
requests that a response is a complete response .
wait for the response to be sent to the response .
wait for the current status to be sent to the response .
wait for the exception thrown by the exception thrown by the exception .
report the evolution stream .
reports a new to the current connection .
report the error report .
waits for the current poll state to be thrown .
checks if response is not available
/ * ( non - javadoc )
{
returns the previous value of the block .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
this method is used to get the block information from the block block block block block block block block .
get the file cache for the specified file .
get the file cache for the given file .
set the debug log .
returns all files in the list .
close the file .
seeks to the next available buffer .
returns the length of the file .
flush the block to the stream .
reads the next byte from the file .
read len bytes from the given byte array starting at the specified offset .
reads the next available { @link readablebytechannel } readable bytes from the input stream to the given offset .
reads the entire file .
reads the contents of the byte array starting at offset <code > b< / code > .
writes a byte to the stream .
writes bytes to the stream .
reads the next short from the stream .
reads a single - connected address from the stream .
read the next n bits from the subrange of the array .
read the long array .
reads the number of bytes from the subrange of the specified array .
read the bits from the stream .
read string from string .
read string representation of the given { @code string } .
write the boolean flag to the output stream .
write a short to the stream .
write the character at the end of the array .
writes the specified int array to the specified array .
writes the specified long array to the specified long array .
writes the float value of the specified float array to the float array .
writes the double precision to the specified value .
write the string to the stream .
write the bytes to the stream .
writes a string of characters to the characters in the string .
writes the contents of the string to the stream .
performs the given search .
{
main method .
/ * ( non - javadoc )
serialize the specified short to the output
get the current message from the input stream
serialize the contents of the specified object to the output stream .
get uri string from uri
{
/ * ( non - javadoc )
/ * ( non - javadoc )
get the next message from the given byte array

returns { @code true } if the specified string is a substring of the specified string .
returns true if the given string is a valid character .

finds the index of the first occurrence of the given number of characters in the string .
checks if the given text matches the pattern . matches the pattern string and the pattern .
capitalizes the first letter of the text .
format the size of the format of the given size .
initialize the .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the mode is a or not .
clones the given target object and returns the current clone .
add a new {

checks whether the given string is a valid identifier .
/ * authenticate .
this method is used to create a new { @link } from the given chat erlang { @link } .
fire the event to be removed .

close the resource . <p >
this method is called by the web application to ensure that the frame implementor is not null .
called by the site .
opens the resource manager for the given id . <p >
opens the resource bundle for the given resource id . <p >
reloads the page .
sets the current frame .
parses the resources from the given resources . <p >
this method is called to load a single image from the image .
this method is called by a file to load the image .


trigger a notification that is ready to be sent to the cluster .
this method is used to create a new for the simulator .

returns the string representation of the image .
<p > . < / p >
set the status code for the scalablepicture .
add a new operation to the tail of the list .
remove the first unlocked node from this list .
queues the queue .
convert a latlonpoint to longitude latitude
convert projection coordinates to a latlonpoint note : a new point is not applicable to the resulting projection .
loads the { @link } from the given { @link } .
returns the enabled set of for the given namespace .
returns true if the given service connection is not a service namespace .
returns the list of supported protocols ( if any ) .
executes the given .
returns a string representation of the given { @code } .
/ * ( non - javadoc )
rotate the coordinates of the given vector .
/ * ( non - javadoc )
/ * ( non - javadoc )
brings a .
start the dialog .
set the parameters for the gds smoothing .
get the name of the type name of the type .
generate a fatal error message .
get stations from station range
get station station
get data for iosp
get data for iosp
generate the given object .
{
returns the key reader that the saga is a key or a message .
finds the {
create a collection of reader objects .
adds a name to the prefix list .
retrieves a list of all the shared groups of a given connection .
adds a symbol to the symbol .
returns the prefix for the given prefix in the given string .
creates a new
add the content to the list of outgoing contents .
returns the hash of the specified user .
/ * ( non - javadoc )
this method is used to get the subset of for the
/ * ( non - javadoc )
/ * ( non - javadoc )
evaluates the logical polish of the message .
/ *
add a parameter to the map .
add a parameter to the map .

writes the xml element content . <p >
add a parameter to the map
get the param value from the key value .
compare two geometries .
add a message to the list of message keys .
adds a message to the list of message attachments .
returns the mapping of the outputs .
get the type of the .
generically encodes a string with a specific error message .
returns a hashmap which contains the keys of the map .
adds a new value to the end of the array .
initialize the dialog .
removes the current site root url from the current site . <p >
initializes the locale manager . <p >
set the value of the gauge .
gets person id from person .

sort the members of a group
creates a buffer from the given buffer data .
connects to the specified {
disconnect the agent from the hub .
send a message to a given channel .
registers an observer listener .
registers the given listener to notify the disposable decisions .
registers a { @link } to wrap the given { @link } .
clear the map of {
validate signature .
generate a signature for the hmac hash .
subscribe a channel to a subscribed channel
subscribe a channel to a subscribed channel .
parses the given message type and returns the result as a byte array .
subscribe to a channel .
disables the presence of the user s confirmation .

set the proxy for the ftp server .
loads a factory from the given type .
fetch a connection on the specified token .
enable a connection to the player .
sets the minimum value for the maximum number of seconds .
sets the time in milliseconds .
/ * ( non - javadoc )
writes headers to the response .
creates a new server .
{
{
decode the input codec into a list of encoded encoded encoded octets using the codec . decode the codec .
create a new {
reads the input string from the input stream .
draw a tile pixel pixel pixel value .
get the pixel value of the image at the given coordinates .
get the pixel values of the image .
validate the image using the image data .
converts the specified pixel to the image coordinates of the image .
draw a image data pixel image coordinates to the image .
{
create a pre - populated image of the given tile
set the value of the <code > / code > value .
set pixel value as integer value
get the coverage tile for the geopackage
merges the given values in the list of booleans .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
ends the given activity . <p >
/ * ( non - javadoc )
compute statistics for the worker .
computes the id for the given type .
adds a new item to the list of the item .
get the value of the given id attribute .
add extension to the list of extensions
get or create a new geopackage
calculates the for the given start and end dates .
get the value of the property .
{
{
{
{
{
{
{
{
query the sql statements for the database .
{
adopt the given cursor .
fills attributes from the given { @link } .
set the {
decode the bytes of the byte array .
get the image s bytes .
flush the image to the stream .
get the pixel pixel coordinate of the image .
read the next red from the table .
returns the link to the specified image . <p >
creates a member with a member of a member .

this method is used to retrieve the values for the specified type .
this method is designed to be called from the { @link ( list ) } method .
sets the order of the order of the .
sets the index of the feature location .
set the table to be used for the table .
returns the index of the feature index for the feature index in the specified index .
get the index of the index of the index .
returns true if the feature row is not available .
get the index of the feature row .
deletes the given { @link featurecollection } from the given { @link collection } .
deletes the feature row indices
deletes the features from the feature list .
creates a new {
returns true if this list is contained in this tensor .
adds a loader to the project . <p >
returns true if the index is indexed .
returns the list of indexed types .
this method removes all the types in the list .
query for features across all points
count the total count of features
set json jsonobject
create a configuration with the given key and port .
create a new from the given url and port with the given string .
get the bounding box of the bounding box
returns the set of configured contexts . <p >
set the string to be used to sign the string .
set the string to be used .




set the host name of the host .
returns the resource type resource type for the given resource . <p >
returns the resource type resource type . <p >


returns a template loader that is a template that represents the template base template . <p >
checks if the given resource name matches the given id .
sets the name of the current configuration file . <p >
sets the resource translator for the given resource . <p >
shuts down the search manager . <p >
returns the template name for the resource . <p >
initializes the html code for the mission init phase . <p >
register the { @link } for the given type .
initializes the mime types of the {
initializes the resource type . <p >
initializes the resource types for the given resource type . <p >
returns the template name for the given path . <p >
publishes the given category to the given category . <p >
creates a javascript property . <p >
fill the item configuration item . <p >
fills the index for the given item id . <p >
reads the next byte from the cache .
solves q . x = x * y overwriting x = y [ i ] .
creates the configuration string for the option . <p >
parses the embedded gallery options . <p >
get the button bar bar for the button bar . <p >
returns the html for the search button . <p >
returns the option of the button bar . <p >
returns the list of items for the given button . <p >
init the configuration .
returns the name of the button . <p >
parses the options . <p >
handle the change event of the cluster .
helper method to create a new { @link } .
bootstraps the cluster .
executes the batch of operations .
get the batches of the given from the given .
returns url of the resource url .
add a new to the list of .
factory method to unmarshal ( read ) a xml page from a content type . <p >
returns the templates of the resource template . <p >
helper method for creating a new template bean using the given cms . <p >
set the current position of the adapter .
initializes the configuration . <p >
/ *
initializes the opencms cms configuration . <p >
method called to print the function .
/ * ( non - javadoc )
/ * ( non - javadoc )
loads the resource content from the given resource . <p >
/ * ( non - javadoc )
return the list of actions for the given action .
finds the first action with the given path pattern .
checks if the node is a visited node .
returns the approximate approximate approximate available level for the given category .
binds the given bootstrap to the given { @link serverbootstrap } .
binds the given { @link } to the { @link } .
creates a new instance of { @link } .
create a new instance of { @link } .
returns an iterator for iterating over the input elements .
convert a jts geometry to a geometry object
converts the given { @link } to a { @link polygon } .
converts a { @link } to a { @link }
converts the input to a object .
converts the given input to a new transfer .
converts the given { @link } to a { @link } .
converts the given { @link } to a { @link } .
convert a { @link } to a { @link } .
transfer the json to { @link } .
converts the given { @link } to a polygon .
transform a collection of into a geometrycollection
converts a { @link } to an array of jts objects .
visualize a multilinestring to the coordinates of a multilinestring .
converts this { @link } to a { @link } .
convert the input object to a point object
transfers the data from the given point into the given point .
creates a polygon containing the coordinates of the given polygon .
creates a point sequence of observations .
this method is used to compute the value of a point in the input image .
returns the points points in the geometry .
this method extracts the crs from the crs .
sets the state for the current state .
shows the report . <p >
sets the list of commands that are currently in the form of the query .
sets the last applied entry in the list .
register a sequence of {
register the given index in the list of indexes .
clears all resources in the pending commands .
register a sequence of operations .
clears the list of all the blocks that were processed by this sorter .
commits the event to the event .
returns the last completed completed snapshot .
clears the events from the given index .
sends events to the client .
start the server .
adds a new additional info to the list of available categories . <p >
adds a new annotation info to the list of categories . <p >
convert a comma delimited string to a string array .
convert a list of string to string .
set the name of the .
sets the .
***********************************************************************************
adds a property to this node .
returns the properties of this <code > smbfile< / code > .
returns whether the current state is a valid webdav call to this method .
set whether the current state is alive .
set the dav - type .
fill the contents of the given { @code file } into a { @code file } .
deletes a file .
ensures that the given directory exists .
ensures that the specified { @code file } is not null .
deletes a file .
creates a new file for the specified file .



creates a new for the given length .
check if the file name exists in the file .

mostly copied from streamex :

/ *
sends the internal state of the dialog . <p >
prepares the failover tracing of the node .
***********************************************************************************
get the default value for the given function . if the map is not present or the value is not a map it will return the default value .
sums the function with the given function .
removes all elements from the given list of values .
overloaded to simplify the set of keys .
returns <tt > true< / tt > if this map maps one or more keys to this map .
overloaded increase method { @link map#get ( object ) } because the implementation is not guaranteed to be used in the cache .
add a new { @code key } to the { @code key } .
overloaded increase this converter .
clear the value from the map .

write data to output stream .
write the metadata to the stream .
unregister twitter application .
get the data data source .
/ * decrease the coefficients of the substructure in order to interpolate the maximum values .
checks if the current user has visible to the tab . <p >
this method initialises the viewer and initialize the viewer .
this method is called when the connection is finished .
{
start the error message .
log error error error error
creates the table . <p >
creates the temp table for the given uuids . <p >
/ * create a new context for creating a new <code > ( resource ) < / code > . if the given <code > / code > is <code > null< / code > the new <code > / code > is returned .
enable the scheduled profiling .
removes the tag from the tag . <p >
validate the current state of the end of this passage .
search for the last line of the text .

get the list of the {
performs the device on the specified device .
{
decrypts a password using a salt
decrypt encrypted data
base64解码
encrypt data .
encrypt the given key and encryption key to the aes key .
encrypt data using the provided password .
adds a binding to this new link .
return the bindings for this node .
creates a webdav prop with the given document .
returns whether this propstat is a specified property .
sets whether the property is not set .
sets whether the property is a valid property name or not .
sets the property to the prop of the prop .
transform input transform




search for a frame in the specified url .

returns the style sheets for the current context . <p >
returns the list of available app configurations . <p >
returns the settings for the given type . <p >
returns the default action for the given action . <p >
gets the default launch configurations for the current app .
returns the editor editor for the given resource . <p >
returns the editor editor editor for the given type . <p >
returns the list of configurations for the given configuration . <p >
initializes the workplace css css css css css specifications . <p >
loads the resources from the application .
stores the current settings of the current user . <p >
returns the user configuration for the admin user . <p >
sets the current user s apps for the current user . <p >
adds the given configurations to the app . <p >
gets the folder . <p >
loads the resources from the current app . <p >
collects the categories for the gallery . <p >
loads the default apps . <p >
collects the list of available indices . <p >
create a tag mask from the given token .
returns the number of clusters in the cluster .

returns the size of the clusters in the specified list .
validate the packing plan plan for each instance in the container .
get the packing
get the current packing plan given the plan .
start the options .
check if the user has a withdrawal user id .
get username from the given esa id .
add a new to the list .
main method .
creates a new for the specified .
get the current peer from the current earth

pause the event on the
process the action action .
/ * ( non - javadoc )
reset the data for a .
print a gauge value to a .
sets the {
inserts items from the specified item into the specified group .
convert a to a .

this method is used to reconnect a metric to the sentry server .

{
mirrors the source publisher that the publisher emits a items in a way that it emits the items emitted by these items . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl >
calls the provided { @link publisher } on a publisher that emits a sequence of items emitted by an array of items . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = >
concatenates the items emitted by the items emitted by the most recently emitted values from the source observablesource and delays any errors till all inner values are routed to each other . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
returns a flowable that emits publishers that the resulting publisher emits the items emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . png alt = > <dl > <dt > <b >
returns a flowable that signals that a { @link throwable } is bound to a { @link nosuchelementexception } or throws a { @link nosuchelementexception } if the source publisher doesn t have any error signal . <p > <img width = 640 height = 320 src = https : // raw . github . com wiki / reactivex / rxjava / images
converts an array of items into an array of items . <p > <img width = 640 height = 195 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < /
converts a { @link completable } into a { @link flowable } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromcallable . png alt = > <dl > <dt > <b > backpressure : < / b >
converts a { @link publisher } into a { @link flowable } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . png alt = > <p > note that the resulting publisher is subscribed to eagerly .
converts a { @link publisher } into a { @link flowable } asynchronously into a connectable publisher . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . ts . png alt = > <dl > <dt > <b
converts a publisher into a publisher that emits the items emitted by the publisher that encounters an publisher that is newer than the resulting publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . png alt =
returns a flowable that emits the items emitted by the resulting observable to be a { @link flowable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / generate . png alt = > <p > this is a
returns a flowable that emits the items emitted by the specified values . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / generate . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a cold synchronous or completes . <p > note that the returned publisher will be visible to the upstream . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / generate . png alt = > <dl > <dt >
returns a flowable that emits items that are available to the specified item . <p > <img width = 640 height = 385 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source publisher that are the specified time window to the specified time a specified delay . <p > <img width = 640 height = 195 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt =
returns a flowable that emits the items emitted by the resource instance to the upstream . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . concatwith . png alt = > <dl > <dt > <b > backpressure
returns a single that emits all items emitted by the source publisher and then each inner pair of items emitted by the source publisher and emits the remainder . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / .
returns a flowable that emits the items emitted by the source publisher that are emitted in the source publisher . <p > <img width = 640 height = 385 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b
returns a flowable that emits the results of invoking the specified type on the current time until the source publisher completes normally the returned publisher signals an error signal to the upstream . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
collects items emitted by the finite source publisher into a single { @code single } object . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / items > <p > returns a single object that applies a specified accumulator to the first item
returns a new publisher that mirrors the source publisher and then flattens the sequence till inner values . <p > note that the returned publisher emits only the resulting observable sequence . <p > <img width = 640 height = 195 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
maps the upstream items into {
returns a flowable that emits items that the item emitted by the source publisher and non - positive inner publishers and delays the corresponding sequence of these publishers . <p > <img width = 640 height = 195 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single .
maps the upstream items into {
maps the upstream items into {
maps the upstream items into {
returns a flowable that emits a default item emitted by the source publisher that are emitted in the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / defaultifempty . png alt = > <dl > <dt >
returns a flowable that emits items that the item emitted by the source publisher signals a success value . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . delay . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher shifted forward or after a delay . <p > <img width = 640 height = 457 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . delay . png alt = > <dl > <dt >
returns a flowable that emits items that the specified item is emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > backpressure :
returns a new { @link publisher } that multicasts to { @link notification } { @link notification } or { @code onerror } . <p > <img width = 640 height = 195 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt =
modifies the source publisher that will be notified when the source completes normally normally normally or the item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt =
returns a single that emits only the first item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits items that are the results of applying the source function to the source publisher and then flattens the resulting sequence into a {
returns a flowable that emits items that are the results of applying the source function to the source publisher and the corresponding iterable transformation calls { @link observer#onerror ( object ) } to combine the result of this operator using each item in the resulting collection . <p > <img width = 640 height = 305 src = https : // raw .
returns a maybe that is items that the upstream { @code flowable } completes whenever a item emitted by the source observablesource doesn t arrive before the other source completes . <dl > <dt > <b > backpressure : < / b > < / dt > <dd > this differs from a sequence of { @link } each item emitted by
returns a flowable that emits the items emitted by the source publisher each time the specified time runs the first time a publisher is emitted by each of these items emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a single that emits the items emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / last . . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source publisher that are emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt
maps the upstream values into a { @link publisher } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < /
merges the items of this flowable with another one . <p > note : this method is called by the source observable to perform any items that are emitted by the finite source publisher . <p > note : tracks are not available . <p > note : this method is called by the source observable to use the source observable to consume
modifies a publisher that emits the items emitted by the specified scheduler . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / dooneach . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits a item in the specified order of the resulting items . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / ignoreelements . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher that are emitted by this observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / bp . . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher that are emitted by this observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / bp . . png alt = > <dl > <dt >
returns a flowable that emits items emitted by the source publisher that are emitted by the resulting observable . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / bp . . png alt = > <p > you can
instructs a publisher to pass through an operator or publisher into an unbounded buffer . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . png alt = > <p > note that the resulting sequence is not emitted
instructs a publisher to pass upstream . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorreturn . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd >
returns a flowable that emits items emitted by the source publisher that are emitted to the upstream items . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorreturn . png alt = > <dl > <dt > <b >
instructs a publisher to a { @link cancellationexception } that encounters a error of these values until the upstream completes normally emits normally normally normally normally normally normally normally or to signal a single item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a flowable that emits the items emitted by the source publisher that are emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits items that the specified source completes normally emits the first item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeatcount . o . png alt = > <dl
returns a flowable that mirrors the source publisher that runs the { @code notificationhandler } on a publisher that emits the resulting publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / dooneach . png alt = > <dl
returns a maybe that emits items the first emitted item emitted by the source publisher and the corresponding value from the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . o . png alt =
retries the retry count until a predicate or completes . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . o . png alt = > <dl > <dt > <b > scheduler : < / b > <
if this { @code publisher } emits retries then this method returns a publisher that is less than or equal to the current item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt
print the given prefix .
/ * flatten the children of this node .
instructs a publisher to a { @link connectableflowable } that is emitted by the resulting { @link publisher } . <p > note that the resulting publisher is not propagated into a { @code nosuchelementexception } . <p > note that the resulting publisher is not propagated into a { @code nosuchelementexception } . <p > note that the resulting publisher is not
returns a flowable that emits items of each item emitted by the source publisher that are emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / result . png alt = > <p > note
returns a flowable that emits items of each pair of items emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / just . png alt = > <dl > <dt > <b > backpressure :
returns a single that emits the items emitted by the source publisher and emits the resulting items . <p > <img width = 640 height = 320 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b
find the class name of the current context class .
returns a flowable that emits the most recently emitted item ( if any ) emitted by the source publisher and then completes the resulting publisher before complete . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / skiplast . ts
returns a flowable that emits the items emitted by the source publisher that are the first items emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / takeuntil . png alt = > <dl >
instructs a publisher to emit a new item from the source publisher . <p > <img width = 640 height = 385 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / startwith . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the values emitted by the source publisher that are contained within the specified range . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / startwith . png alt = > <dl > <dt > <b
subscribes to the source and notifications of the subscription in the source publisher and then subscribes to the reactive streams publisher . <dl > <dt > <b > backpressure : < / b > < / dt > <dd > the operator subscribes to the source and wait until the reactive notification . < / dd > note that you can use this
subscribes to the current observable and the reactive scheduler observer subscribes to the specified time window . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . event . png alt = > <dl > <dt > <b >
maps the upstream items into {
maps the upstream {
returns a flowable that mirrors the source publisher except that it drops items emitted by the source publisher that are followed by items emitted by the source publisher and then then completes the resulting publisher . <p > <img width = 640 height = 195 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a flowable that emits items that are currently emitted by the source publisher the source publisher is measured on the specified item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . timer . png alt =
returns a flowable that mirrors the source publisher that emitted from the source publisher before complete the specified time . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . next . png alt = > <dl > <dt
returns a flowable that mirrors the source publisher that emitted from the source publisher . the emitted { @code publisher } allows the operator to complete the running { @code other } and notifies the current { @link cancellationexception } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki /
returns a flowable that emits items emitted by the source publisher that are emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / gson . ts . png alt = > <p > the source
returns a list of all the items emitted by the finite source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : < / b
returns a { @code single } that emits the items emitted by the source publisher and emits the result as { @code false } if it encounters a { @code flowable } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns an { @code single } that emits the items emitted by the source publisher and emits the resulting { @code single } from the result . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / mergemap . r .
returns a flowable that emits windows of items it collects from the source publisher . the resulting publisher emits connected non - overlapping windows each of items that are emitted in the source window that the source window is reached . the { @code publisher } completes the window and the size of the window is emitted . <p > <img width =
returns a flowable that emits windows of items it collects from the source publisher . the resulting publisher emits connected way the source publisher as a sequence of items specified by the { @code timespan } argument . the resulting publisher emits connected non - overlapping windows each containing the window size and the { @code count } items in the source publisher
returns a flowable that emits windows of items it collects from the source publisher . the resulting publisher emits connected non - overlapping windows that are emitted to the specified source window that emits the source publisher . the resulting publisher emits connected non - overlapping windows that are emitted to the source window that is available for each publisher that is subscribed
creates a container page xml container page and returns the container page . <p >
returns the container page page bean for the given container page bean . <p >
saves the page container page . <p >
get the client side provider .
saves the page container page page . <p >
writes the container page container page to the current page . <p >
checks the link for the workplace . <p >
returns a container instance that should be used to print the appropriate page container . <p >
returns the resource for the given resource id . <p >
removes empty container instance . <p >
saves the container page container to the container page . <p >
sets the label .
gson invokes this call - back method during deserialization when it encounters a field of the specified type .
returns the rfs parent folder for the given module . <p >
returns the module folder for the given module name . <p >
creates the xml parent xml element .
sets the dialog . <p >
submits the dialog . <p >
adds messages to the opencms vfs . <p >
adds the messages to the vfs . <p >
adds a resource to the module .
adds the given modules to the workbench . <p >
rewrites the module configuration file . <p >
adjust the schema to be displayed . <p >
creates the resource type for the resources . <p >
fill the fields in the current schema . <p >
returns the string for the given locale . <p >
returns the free state of the resource type . <p >
returns the publish message bundle name . <p >
returns the name of the form .
initializes the configuration page . <p >
checks if the current expression is a valid or valid text for the current schema .
locks the current user . <p >
check whether the domains are valid .
returns true if the specified string is valid for the specified { @code } .
checks if the specified { @code } is valid for the { @code } .
check whether the string is valid or not .
checks whether the given { @code } is valid for the given { @code } .


{
restart the db .
runs the process execution command .
/ * helper method for debug
/ * find the result of the directory to find the result .
construct a options .
start the
gets the maximum resources for this plan .
clones the given resources belonging to the given resource .
get the total averaged count for the given containers .

returns the set of entities with the given query parameters .
returns the collection of applications that were added to this application .
returns the application with the given id .
updates the { @link } for the given application .
check if the given child node is a branch .
search for a relative path relative to the path .
get the root path of the .
check if the string is a valid string .

helper method to calculate the retry value of a given action .
invokes the action on the given action and returns the number of items that will be returned by the action .
get the default length of this note .
creates a new from the given file .
{
transform a resource into a { @link } .
process resource - specific template .
find base folder for the current resource .
create a esa for a plugin .
/ * extract asm documentation for the type of synthetic class .
verifies that the given { @link type } is a public key .
verifies that the type is not compatible with the given type .
finds all methods that are the method name .
checks if the given {
returns the {
adds data to the builder .
returns the name of the generated externs for the given type .
determines the macro for the given method name .
applies the given { @code } to the given { @code } .
decorates a { @link } to wrap the given { @link } .
/ * method to add an image to the docker container .
/ * create the .
gson invokes this call - back method during deserialization when it encounters a field of the specified type .
gson invokes this call - back method during deserialization when it encounters a field of the specified type .
---------------------------------------------------------------- put
gson invokes this call - back method during deserialization when it encounters a field of the specified type .
gson invokes this call - back method during deserialization when it encounters a field of the specified type .
returns a {
initialize script builder for script evaluation .
/ * ( non - javadoc )
finds the file that matches the given uri and uri . <p >
initialize script builder for evaluation .
validates the given data .
creates a new { @link } instance .
/ *
merge the current state of this one .
----------
create a response from the configuration
parses the header value of the header .
add a cache to the cache
sets the headers for this request .
{
sends a http response to the given url .
connect to the ovh api .
fluent method for fluent building .
create a new subject for a given subject .
log the given args .
creates a new instance of .
creates a new instance of the { @link } for the given { @link } .
builds the document .
creates a new dom element .
creates a new element representing the jcr document .
/ * create a .
sets whether the current document is visible .
sets the selected text item .
set the text of the document .
returns an immutable bimap containing the given { @code } .
find the logging level for the given resource .
/ * ( non - javadoc )
returns the list of for the given id .

creates a new based on the specified account id .
updates the for the given account id .
deletes a specified record .
convienence method that builds the request .
returns a string representation of the given iterable
returns a {
returns a string representation of the given iterable
checks if the given iterable is a collection of items .

returns the list of regular specs for the given type .
adapts the { @code list } of elements to the end of the list .
create a kjar .
create a new ejb server using a module loader .
create a new host controller that implements the specified location .
write the generated dtd to the given {
prints the result of {
clones the given array and return the array .
returns the string representation of the form . <p >
checks if the given object is a member of the given object .
returns the result of the given method that invokes a managed object .
returns true if the two objects are equal .
returns the list of methods that are annotated with the specified {
computes the hash code for the hash code .

convert the given class to a class type .
process the cache .
validate the .
initializes the bucket .

/ *
remove a directory
load the specified graphic .
this method is called when the animation is finished .
returns the bitmap to be used .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the result of the <code > construct< / code > of the annotation of the specified class .
check if the method is a valid parameter .
extract body data from the request .
writes the resource to the resource .
{
{
extract a from the segments

returns a list of ranges boundary ranges .
this method returns the highest version version of this version .
returns true if the given operation is vetoed .
returns the address of the given node .
get the element at the given index .
returns the last element of this list .
create a new resource address on the address .
append a new address to the list
this method is to find out the path of the element .
remove the node from the graph .
returns the value of the node s path .
checks whether this { @link address } matches the given address .
/ * ( non - javadoc )
initializes the bitmap with the specified offset .
remove the current content of the current session .
////////////////
collect the list of { @link installable } instances from the list of { @link } objects .
get the installed
get a logger instance with the given name and type .
get a logger instance to trace .
init the layout .
set the model .
update the image .
update the label of the image .
sets the position of the position of the skeleton .
returns a string describing the specified type . this method is used to get the bundle bundle from the specified type . this method is used to get the bundle bundle from the specified type . this method is used to get the bundle bundle from the specified type . this method is used to get the bundle bundle from the specified type
register the remote server .
{
resolves the given list of prefixes to the given list of resolvers .
add a list of {
{
ends the current state .
this method is called when a { @link } is thrown .
tears down the connection to the connection .
creates a new instance of the .
parse a byte array
parses the data from the tail of the given buffer .
returns the list of direct lists .
sets the ip address of this ipv6 address .
add a new key to the set of existing properties .
serializes the transmission .
returns the content types for the content type .
build a list of component from the given realms .
remove the sbb entity entity from the sbb entity .
returns true if the current user is allowed to be prevented .
get the job for the specified task .
sets the {
closes the database .
returns the {
enable accessibility - pause navigation . this is used to temporarily disable navigation .
convert a string to a { @link } .
display the result of the command line .

updates the state of the targets for the specified staging state .
create a web socket on a websocket connection .
create a new { @code router } from the given url .
create a new { @link } from uri .
/ * ( non - javadoc )
installs the install components of the current deployment .
uninstalls the given isotope component .
called when the container is started .
fired on the
/ * ( non - javadoc )
shutdown the current thread .
parse the given semver pattern .
creates a new atomix builder .
build a new { @link } from the configuration .
main method .
execute the command .
returns true if the sql statement is a full - statement .

await until the worker is not available .
waits for the current task to be waiting for the specified number .
{
/ * ( non - javadoc )
/ * ( non - javadoc )

draw the given shader zoom level .
returns a { @link } for the given {
draw the transform to the radius
/ * ( non - javadoc )
gets the for the given slee .
resume suspended activity
/ * ( non - javadoc )
convert a byte array to a array of primitive array .
/ * ( non - javadoc )
writes a message to the message .


returns a configuration instance from the configuration .
creates a new instance of { @link } .
/ * ( non - javadoc )
returns the available organizations .
{
restore the data from the backup file .
restore the backup data for a journal entry .
starts the server .
adds a filter to the filter .
add a filter to the response .
create a proxy connecting to the address .
filter the request
filter response filter
/ * ( non - javadoc )
returns the descriptor corresponding to the slee bus
{
iterates over all registered {
returns the resource for the resource .
this method determines if the domain is a valid for the .
add a set of paths to the path .
creates a new string array of string values .
creates a new string representation of the given char array .
gets a distribution summary for a bucket .
returns the value of the .
gets the for the given .
{
creates a placeholder for the given {
creates a new { @link } instance
/ * ( non - javadoc )
validate the current connection .
check whether the device is a reloadable interface .
validate the class .
check the field of the accessors .
validates the expression from the query expression .
creates a matcher that matches when the given { @link } is a dotted matcher .
build a dynamic name - local variable name

get the name of the service interface for the given service type .
get the service name for the specified type .
{
get the identity of the specified .
get the installed models of the slave .
transformers to deserialize a concept
--------------------------------------------------------------------------------------------------------------------
get the axioms in the ontology .
schedule a new record with the given delay .
schedule a procedure to stay in the given executor .
fires a { @link } event on all registered handlers in the source subsystem .
{ @inheritdoc }
sets the url to be used .
call to reset the logical command to the current site .
/ * ( non - javadoc )
create a scrollable panel for the given child element .
sets the time in milliseconds .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the banner banner policies .
get the descendants of the given class name .
paints the specified tab .
{
{
sets the theme for the current theme .
/ * ( non - javadoc )
fires a { @link } event on all registered css classes .
converts the to gain
/ * ( non - javadoc )
/ * adds services for the deployment .
{
{
{
this method is called to update the for the given announcement .
/ * ( non - javadoc )
creates a new {
returns the default port for the given directory .
set the query string to be executed in a query .
/ * ( non - javadoc )
notifies the listeners that the data is being received .
adds a new listener to the given file .
removes the given { @link } from the given { @code file } .
[ argument ]
process a deployment .
convert a gis scale to a scale number .
converts a { @link } to enu .
converts a { @link scale } object to enu .
converts a { @link } to enu .
converts a { @link } to enu .
convert a color value to a .
convert a tin to a
converts the extrinsic type to enu .
converts a { @link } to enu .
set the {
build the map for the given .
{
add an { @link } to the { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
generate the class info for the given profile
creates a new instance of the class represented by the <code > / code > .
this method is used to verify the class hierarchy of the given class .
returns the class of the given class .
/ * ( non - javadoc )
set the for the .
set the analog analog analog video data in the
set the analog analog analog image at the given analog analog pin .
set the analog analog hardware emitter .
calculate the position of the duration of the given duration .
{
/ * ( non - javadoc )
get the first value of the specified locale .
merges the current { @link } into the { @link } .
add new to the file .
set the system system system property .
returns a float array containing the given property values .
add a new value to the list .
{
get the element at the given index .
get the index of the element at the specified index .

computes the value of the given function with the given name .
this method is called to process a graph .
get the values of the values from the annotation .
set the y - factor for the quaternion y .
returns the maximum value of the grid spinner .
updates the minimum values for the value of the .
computes the minimum angle of the radial radial fiducial .
calculate the y - coordinate of the radial plot of the grid .
calculate the y - coordinate of the skeleton
updates the children of the panel .
add the fields to the map . <p >
creates a new instance of the constructor with the given constructor .
delete the column
find the column with the given id .
find the {
inserts the specified entity into the database .
checks if the entity pk is not present .
更新
registers a new parameter with the given name .




/ * update the compound relations .
/ * this method is used to generate the glyph mapping glyphs .
-----------------------------------------------------------------------------
this method is called from the constructor to create the .
sets the weighting to be used .

initializes the .
checks if the glyph is a glyph .
returns true if the leaf node is a leaf node .
find the nearest entry .
find the nearest entry nearest entry entry entry entry .
returns the free table entries .
add this node to the current node .
returns the last position of the current position .
returns the entry for the given threshold .
merge the two entries .
sets the color of the specified chart .
{
sets the error text to display the dismiss text .


/ * this method is used to decrypt the number of lines in the { @link } .
parse the given value .
returns the inner indices of the outer inner matrix .
returns the elements of the given collection of biopax elements .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :
{
returns the features of the features in the tensor .
{
returns true if the value is a subtype of the constant .
compiles the given pattern and returns the regex pattern .
checks whether the related element is present in the .
extract all the removable names from the map .
gets the set of names of all the names of the names of all the names of the given set .

checks the preconditions for the given { @link } .
checks the preconditions for the given { @code apielement } .
{ @inheritdoc }
check if the given field is a valid .
/ *
/ * set the value of the object to the .
main method .
create a new instance of the class rethrowing the constructor with the given arguments .
computes the probability of the polynomial windowsize .
adds the specified serie column to the dataset with custom label .
adds the specified serie column to the dataset with custom label .

returns a list of resources that are contained in the given path .

returns the current tenant name .
set the data source for the given type
sets the data source for the given expression .
sets the data source for the data source .
set the map of parameters for the map
<editor - fold defaultstate = collapsed desc = generated code > // gen - begin : initcomponents
/ * ( non - javadoc )
returns a map of the specified values of the specified type with the specified type .
returns a method instance that is used to parse the given { @link string } according to the given { @link string } .
returns the string representation of the string .
copy the contents of the specified inputstream to the output stream .
generate a signature for the specified key and method arguments .
generate a signature for the specified user key and secret key .
generate signature for a jwt .
returns the {
returns the squared distance between the two points .
returns the squared distance between the two points .
distance between two points .
compute the euclidean distance between the two points .
computes the distance between the two points .
returns the dot product of the two vectors .
<p > creates a new product of the product product type .
multiply two points in a vector .
returns true if the value of the {
returns the object represented by this resolver .
creates a style rules for the given style .
parse the style of the specified style .
creates a line of the line and the style of the line .
create a polygon symbolizer with the given style .
creates a new text box with the given style .
handle the post - post - interactive structure .
calculate the for the given .
calculate the transform for the given .
gen - last :
gen - last :
{
returns all ancestors of the given class .
returns a new { @link } instance which contains the layer s tile .
converts a h matrix into dmatrixrmaj
converts a rigid matrix to a matrix .
this method is called when the connection is closed .

print the client config
gets the template with the given name .
get the style of the style .
get the default style default style for the given type .
set the default style for the feature .
validates the given { @link } .
set the access flags for the given access control .
sets the value of the property .
sets the angle of the .
finds the point of points that are currently in the plane .
computes the points in the polygon projected by the clusteringfeature .
computes the point space in the plane .
sets the directory to be used .

sets the attributes of this attribute .
get the processor dependency graph for this processor .
get a style of the style for the given style .
sets the keywords .
encode the string to encode / escape sequences .
adjust the bounds of the circle by the specified rectangle .
create a new graphics graphics graphics graphic .
saves the svg file to the file .

/ * ( non - javadoc )
release the .
encodes the given long value into the lzencoder .
{
{ @inheritdoc }
parse a coordinatesystem / value pair from a geojson string .
returns suggestions of pixels of pixels .

compute the angle of the line .
{ @inheritdoc }
{ @inheritdoc }
finds the distance between the two points .
finds the distance between two points .
finds the distance between two points .
finds the distance between the two points .
distance is the line of points in the line .
finds the euclidean distance between a line segment and the line segment .
returns the distance between the two points .
find the squared euclidean distance between the line segment and the line segment .
computes the distance between the two points .
finds the euclidean distance between points and p1 .
finds the point of points in the fiducial .
finds the euclidean distance between the points and the second segment point .
<p > returns the distance between two lines lines . < / p >
{
{
{
{
add a new to the list
{
updates the minimum and maximum values of the node .
merging the specified node into the list .
deletes the successor node .
{
delete the node from the tree .
finds the closest point for the given point .
compute the perpendicular to the ellipse .
populate the { @link } annotation .
sets the default annotation .
get the hostname name of the host
update the annotation of the action .

update the annotation of the action .

returns title of { @link } .
{
returns the severity level of the given severity .
get the issue key for the given issue .
returns the feature labels for the feature labels
returns the issue for the given issue . <p > the resulting { @link } is the { @link } and { @link } .
returns the annotation of the annotation .
returns the labels regarding the names of all labels that have the same label .
this method is used to convert a list of to a .
returns the of the given node .
returns the variable represented by the specified identifier .
parse a concept .
check if the field is a valid operation .
sets the repair end time .
returns true if the given type is a valid type .
runs the given {
this method is called by the query to create the inventory object . the method returns the index of the first entry in the query object .
log issue to abort
finds the minimal points that are the minimum corner coordinates .
sets the intersection of the drop rectangle .
returns true if the polygon is within the polygon .
flips the given to the given .
checks if the polygon is convex and the start of the line is convex .
checks if the two points are the same .
{
check if the given is a
check if the vertexes contains the given element .
/ * ( non - javadoc )
release the resource .
create a temporary directory .
remove temp files from temp directory .
get level level .
/ * ( non - javadoc )
get the text value of the response as a string .
get the json text from a json document
get the bytes as byte []
returns the headers of the headers .
gets the list of header values for the given name .
get the first header value
/ * ( non - javadoc )
/ * ( non - javadoc )
poll the poll queue for the queue .
get the last step .
create a new step step for the given sight .
performs a batch update index .
reset the .
evaluates expressions with the jstl expression .
returns the distance between the start and end points .
copies the texture with the given target id .
returns the distance between this node and all points in this tensor .
sets the response to the response .

execute the task .
add a field to the map .
returns the string representation of the class .
{
join random number array

set the target number of lines in the target
sets the target value for the given parameters . <p >
sets the value of the property .
splits a list of integers from the given array of { @link } to a single { @link } .
replaces the map of variable values .
replaces the variable with the variable with the specified variable name .
add a variable to the target
sets the value of the <code > / code > parameter . the variable name must be in the form - separated string .
splits a given number of elements into a random number .
sets the http request .
sets the digest authentication saving .
sets the amount of live recording encryption .
sets the ssh key / ip pair in the specified local path .
{
{
{
get the jcr type of the field type .

compute the size of the field .
write a single byte to a stream .
returns the field value for the given field .


returns the enum value as a {
returns the descriptor corresponding to the given class descriptor .
/ * set the name of the for the pe file .
convert a set of to a .
convert a list of { @link list } to a list of { @link list } s .
get all services from specified resource .
get the current .
get a list of { @link deploymentunit } for { @link cloudtask } .
schedule a trigger to show the job .
get a list of the available credentials for the specified resource .
start snippet :
associates the specified value with the specified key in this map .
{
this method is responsible for parsing the { @link } and { @link } .
this method will process a { @link } from the { @link } .
{
access the list of { @link rule } s .
use this method to load the lookup of the given model from the given provider .
sort the relationships to the selected graph .
adds a namespace to the namespace .
add the provider relationships for the {
this method is called when the edge of the edge is connected .
creates a new instance of { @link } .

returns the boxed class of the given primitive type .
returns a string representation of the given vertex with the given vertex .
returns a new { @link } instance with the specified name .
get the project { @link } of { @link } .
finds a resource with name .
find a resource with name .
copies the contents of the given { @code outputstream } to the output stream .
copies the contents of the specified { @code writer } to the given output stream .
reads the contents of the specified { @code trialmeter } from the given { @code inputstream } .
read a string from the stream .
read lines from url
cancels all the subscribers in the orderbook .
cancel a group by probing in case of cancellation - level group .
cancel a cancel cancel cancel cancel cancel cancel cancel cancel tasks .
cancel a task by its id .
cancel a cancel event
load tags for the given tag .
log a debug message .
log a tag message .
log a message at a time . this method is intended to log issue .
{
this method returns a new { @link } that combines the { @link } s .
returns a copy of this { @code } with the given { @code separator } .
encodes the given byte array into a string .
decode the base64 encoded data .
decode a string to a byte array .
returns true if the given file is a file .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is called by the to add a new message to the list of synchronized references .
reads the tags from the input stream .
returns the tags for this tag .
returns the list of tags that are tagged with tags .
returns a tag that is not a tag name .
returns the tag name .
get the ( ancestor ) of the { @link tag } .
returns the tags for this tag .
returns true if the tag is a tag .
writes the tags to the given writer .
sets the current { @link set } of the current { @link } .
add a new metadata to the schema .
add a new metadata .
add a new metadata to the list .
get the object for the given name .
add metadata to the metadata of the metadata .
sets the title of this request .
returns the { @link } of this textview s { @link } .
sets the label to be used for the given label .
returns a new { @link } instance for the specified class .
shortcut for quickly creating a dialog
creates a new { @link } from the given coordinates .
flush the internal buffer .
fill the buffer in bytes .
seek to the current position in the buffer .
/ *
create a new { @link } for the given { @link provider } .
adds a new to the list of { @link rule } s .
adds the given comparators to the list of comparators .
add <key tags .
sets the tags for the tags .
returns a set of sets of the join type .
fetch a from the given .
animation : 1 . 0 animation adjustment duration .
stop the animation .
check if the given tolerance is a valid
{
returns the extension of the given decoder .
generate a file name for the given file extension .
{
this method is used to parse a remote node from the remote server .
{
this method is called when solving the search criteria .
get the value at the specified index .
returns a prefix of the named { @link } prepending the specified upper bound .
{
write a short value into the stream .
write a integer value into the stream .
/ * ( non - javadoc )
write the portion of the header .
put the value of the given float value .
write a double value to the stream .
create a new collector by the collector id .
creates a segment of the collector keys that are timestamps in this dataset .
/ * ( non - javadoc )

execute the given topology
invokes the synchronization behavior when the target is a target member .

/ * ( non - javadoc )
{
executes a command with the given key and returns the result .
/ * ( non - javadoc )
invoke the given <code > method< / code > if the <code > / code > parameter is a parameter or the value of the <code > method< / code > parameter . the <code > method< / code > parameter is <code > true< / code > for the <code > method< / code > parameter for the <code > method<
/ * public object ( string [] ) { return () ; }
if the base object is a valid value for the given base object is returned .
executes a command with the given failure xid .
executes the given command and executes it if necessary .
executes the transactional command .
this method returns the value of a specified evalutationtime - by - location . the current product of the operation is not modified .
compile a { @link } to a { @link terminals } .
compile a pattern expression with given pattern .
get the number of for the given identifier .
create a new remote remote remote remote cache manager .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
iterates over all solutions in the current solution and the next move is returned .
the merge of the union of the two segments .
gets the children of this document .
main method .
extract the whole data structure from given text .
resolve the variable name for the given name .
add a validation validation to the validator .
get zoneddatetime from a local date or duration .
returns the value of the specified date - time from the given date - time .
returns the julian date in the given point .
returns the validation validation of the given key .
start the execution of the current execution .
stops the server .
/ * ( non - javadoc )

removes the current criterion of the list .
sets the usage period of the specified period .
add a listener to the search .
removes the listener from the list of receivers .
notifies the appropriate solution when the new solution is created .
notifies the listeners that the status of the data is updated .

updates the best solution to update the best solution .
updates the solution estimates of the solution
returns the jdk .
returns the time for the current time .
returns the current state of the current step .
computes the delta between the two sets .
resolves the principal name for principal .
this method is called by the step to get the search time .
returns the list of all the direct tag libraries .
get the tag file for the given name .
compile the tld .
returns a list of biopolymer variables for the given .
returns the product of the two symbol .
calculate the forward - rate schedule for a given forward exchange .
returns the cache of the specified data stores the average of the mutations in the cache .
/ *
add a time to the cache .
adds a new jsp page to the jsp page .
get the class loader for this loader .
set the bytecode value for the current storable .
returns the numeric value of the named rrset .
write the bytecode class to the output .
this method is used to compile the files from the vdm ast ast to the .
/ * this method is called to load the class path .
/ *
start the thread .
stops the progress .
runs the () method .
this function returns the model of the given matrix .
{
{
{
{
{
{
executes the commit action .
<p > creates a new event source event . < / p >
/ * --------------------------------------------------------------
/ * ( non - javadoc )
get the exception from the request .

creates a typed array of values for the given property .

create a forward curve from given times and given discount factor .
create a forward curve from given times
create a forward curve from given times
create a forward curve from given times and given forwards .
create a forward curve from given times and given forwards .
create a forward for a given {

get context relative path to the path of the given path .
/ * ------------------------------------------------------------
{
main method .
print the entire node .
get the node value from the exchange interval .
returns the value for the specified interval .
add the value to this node .
returns the node value .
returns the result of evaluating the two nodes .
removes the item from the list .
search for the smallest item that matches the given node .
search the node according to the search search criteria .
search the satisfies operation .
increase the threshold for the first time the second node is returned .
/ * ----------------------------------------------------------------------------
returns the value of the first node of the node .
<p > the target url to the upgrade target . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
/ * ( non - javadoc )
<p > the time zone that the time the cache contains the specified hosted zone . < / p >
reads the byte array from the given byte array .
decodes the given octets into a byte array .
<p > the time zone that the time is in the specified period . < / p >

solves for solution of sparse matrix
this method returns the value of the for the given measure .
return the ( administrative ) valid for the given model using the given velocity model .
traverses the rhs and returns the updated children .
constructs a { @link } for the given { @link projection } .
merge src into dest .
flush the flush flush to the flush .

----------------------------------------------------------------------------------------------------------------------
returns the interceptor chain for the interceptor chain .
parse properties from the string .
add interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain interceptor chain
add interceptor interceptor to the interceptor chain interceptor chain .

returns true if the array is not in the collection .
update the object .
/ * ( non - javadoc )
invoke the interceptor chain with the given command and invoke the interceptor if the interceptor chain is not a call to {
get the interceptor which is the list of interceptor interceptors .
get the interceptor for the specified class .

returns true if the given string is a string .
highlight a text in the header .
verify the given name and the given target id
dispatch a payload to the payload
handle the { @link } that is the { @link } .
sets the activity fragment .
called when the user has tabbed the action .
{
-----------------------------------------------------------------------
get the message from the resource .
get the message from the given string .

gets the message from the system .
{
return the configuration of the given level .
reset the state of the cache .
/ * ( non - javadoc )
convert the given text to a text file .
convert the source to bytes to a stream
convert source to string
convert a { @link readablebytechannel } to a { @link java . nio . } object .
create a header from the array of bytes .
convert a text to a java text .

create a new instance of the specified photo .
create a list of anchors with the specified photo .
parse the given expression .

this method is used to escape the html for the penn treebank crontab characters .
/ * parse a quote character .
set the parent .
/ * ( non - javadoc )
get command group for the given command group .
check if command command is executed .
check whether the group is a group of the given command group .
registers the command with the given command .
notifies the registered listeners that the command has been registered .
set the command option .
/ * ( non - javadoc )
/ * ( non - javadoc )
check whether the command is a command .
get command .
get the type of the command .
checks if the given command type is a type .
sets the views of this eventset .
set the rotation
retrieves the original image from the stream .
returns the url to be used for the image .
loads the image from the given image .
retrieves the image and returns the image for the given image .
retrieves image file from the image .
set the sizes of the sizes of the size of the list .
build metrics for the server .

sets the .
creates a new token for the specified authentication token .
check if the file is a directory .
put a { @link } to a { @link } .
get the { @link com . datastax . io . locator . locator } function for the specified column family and the locator .
finds the { @link table } matching the specified column family family .
add rollup metrics to the list
find locator for matching family family .
find the results for a given column family
{
initializes the rules for the current user .
check the user to retrieve the user .
get the location of photo associated with the photo .
get the permissions for a photo .
set the location of photo .
set the permissions for a photo .
issue a new location for the user .
lists the photos for the specified photo .
set the current context id for the photo .
serialize the given byte array to the given byte array .
deserialize a byte [] .
get the transactions for the transactions .
get the transactions for the transactions .
commit the current transaction .
calculate the number of clusters .
marks the current transaction s transaction if any .
add a property to this context .
set the configuration properties .
creates a new page of widgets .
starts the server .
stops the running instance .
adds the current state to the current state .
suspend the current state .
resume the current thread .
returns the time elapsed before the current state is running .
sets the title of the title . <p >
gets the title of the page .
shows the dialog dialog .
this method will generate the initial dialog .
get the window window .
init the standard commands .
get the current played timeline .
get the current played title .
add a to the .
create a new instance of a singleton instance of the given class .
add an action key for the action key .
add an action to the action key .
adds the given components to the dialog window .
creates the button bar with the given command .
a group that is a command .
returns the window window .
get the name of the table .
return the name of the column name
return the column type for the column .
returns true if the command is a command .
get the name of the column name .
get the column type from the database .
get the name of the timestamp of the timestamp .
return the timestamp of the timestamp of the timestamp in the fluid display .
sets the column name of the segment .
sets the column type .
returns the member of the member with the given id .
returns a { @link } for the given { @link rpcendpoint } .
returns the annotations for the method .
returns the rollout parameter for the given method .
creates a new { @link java . util . illegalstateexception } .
ensures that the given number of mismatches are not supported .

delete objects from entity
delete all objects from the database .

create a object based on the settings of the given connection .
sets the strategy to be used for the acquisition of the job .
sets the maximum size of the cache .
set the type of the bookkeeping of the type
populate the cache cache with the cache .
sets the value of the property .
gets the value of the property property .
checks if the document is a valid { @link document } .
creates a new document from a { @link document } object .
creates a { @link document } from the current state .

sets the security controller method of the map .
get the security controller object .

returns true if the parameter is not present .

/ *

/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
set the of the .
sends a list event to the event type .

{
{
creates an event type from the given type .
add the event to the audit event notifier .
initialize the .
returns the binding for the given .
sets the form of the formmodel .
add a new form tag to the form .
sets the default default default default default default default default default default default default default default default default .
creates a new command command command command command .
this method will return the id of the form of the given id .
creates a new { @link } that will report the given { @link } .
check config config for the context .
initialize client application .
sets the value of the property .
saves the document to an exception .
upgrade an openimmo document from version 1 . 2 . 2 . 2 . 2 .
downgrade &lt ; ; elements to openimmo 1 . 2 . 2 .
downgrade &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ;
downgrade &lt ; ; elements to openimmo 1 . 2 . 2 .
/ * merge the france - disposition packing .
handles a web application .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
sets the page descriptor .
initialize the .
unregister the { @link tcpserver } .
register the .
{
lookup the service locator .
returns the list of with the list of strings
build the endpoint .
{
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
process the start event and sends it to the event .
process the endpoint and sends it to the endpoint .
create a new event event .
{
get alliance get a list of loyalty points for a set of points specified in the data warehouse item ( including a number of points ) return true ; a list of solar systems return a list of loyalty points for a structure --- this route expires daily at 11 : 05
get alliance get information on a dogma > set of a character --- this route expires daily at 11 : 05
get alliance contact get information on a character --- this route expires daily at 11 : 05
get alliance contacts ( asynchronously ) get a set of all in faction warfare ( asynchronously ) notes ( asynchronously ) get one wing only specific ids ( asynchronously ) get four [ cfgperson ] ( https : // docs . microsoft . com / psdk / latest / configlayerref / cfgperson ) objects that contain the following settings : <ul >
get alliance get a list of npc corporations belonging to the set of public members ( s )
get alliance contacts get a list of the alliances only the number of alliances if the given character is issuer acceptor or assignee .
get alliance contacts ( asynchronously ) get a list of public contacts --- this route is cached for up to 3600 seconds
get alliance layout information
get alliance layout get a label from a set of structures
get alliance layout ( asynchronously ) get a list of the versions of a character --- this route is cached for up to 3600 seconds
{
{
check if the agent is connected to the agent .
{
/ * ( non - javadoc )
creates the {
get constellations get a list of constellations --- this route expires daily at 11 : 05
get constellations kills get a list of npc corporations
get a list of all the alliances a c skill from the set of ship pod for kills . --- this route is cached for up to 3600 seconds
update the oauth token .
gets the value of the property .
gets the value of the property .
runs the given arguments .
/ * ( non - javadoc )
/ * ( non - javadoc )



puts a new file to the file system .

puts a new file into the specified keystore .



/ * ( non - javadoc )
/ * ( non - javadoc )
sign the signature .
schedule the time measurements
marshall the given parameter object .
/ * ( non - javadoc )
backward compatibility
get a list of ship ( s ) of a set of ids --- this route expires daily at 11 : 05
get item list return ; s status --- this route is cached for up to 3600 seconds
get current agent&#39 ; s properties
get a list of the agent owned by the specified id --- this route is cached for up to 3600 seconds
get a list of the versions of a dogma server --- this route expires daily at 11 : 05
get a list of available assets folder ( asynchronously ) get information on a specific graphic --- this route expires for 11 - overview ** ** https : // docs . microsoft . com / / / / / / / / / / / / / / /
get a list of all the open kills ( s ) return a list of your kills of a txt compliant bookmark --- this route expires daily at 11 : 05
get a list of all the ship kills all the tasks in a particular auction --- this route is cached for up to 3600 seconds
get a list of available assets folder ( asynchronously ) get information on kills and get all kills and return the number of ship pod and npc kills or get a list of the objects .
returns the cleaned system of the system file system .
extract the contents of a file from the tar file
this method is used to get the results of determining the graph - oriented
/ * ( non - javadoc )
execute audit .
check if the runmode runner is active or not .
get user object
/ * ( non - javadoc )
read a { @link inputstream } into an { @link } .
print some content of an { @link sqlexception } { @link } s .
downgrade an openimmo document from version 1 . 2 . 2 . 2 . 2 .
upgrade an openimmo document from version 1 . 2 . 2 . 2 . 2 .
downgrade &lt ; ; elements ( &lt ; ) &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ; &lt ; ;
remove all child elements from the dom node .
upgrade a &lt ; energiepass&gt ; elements to openimmo 1 . 2 . 3 . <p > the &lt ; mieteinnahmen_ist&gt ; &lt ; mieteinnahmen_soll&gt ; elements .
upgrade the xml content in the xml document .
<p > sets the value for the element . < / p >
get the headers in the properties .
get the headers specified in the request scope .
get all headers ( asynchronously ) get all headers ( asynchronously ) get the headers for all headers ( asynchronously ) get the headers for a request
get the ping state of the current agent .
get the status of a ping event .
get status of a specific version
get status of all status of the specified version
get status for a bulk get get get status
get a json bulk of authorization --- this route is cached for up to 3600 seconds
get your attachment by id --- this route is cached for up to 3600 seconds
get the bulk ( asynchronously ) get a token ( asynchronously ) get a token ( asynchronously ) get a token ( asynchronously ) get a token ( asynchronously ) get a token ( asynchronously ) get a token ( asynchronously ) get a token ( asynchronously ) get a token ( asynchronously ) get a token ( asynchronously ) get a token
get the versions of agent ( s ) of the agent .
get versions of agent ( s ) by list ( s )
get versions of all versions of a user agent .
sets the value of the property .
gets the value of the property .
read a { @link inputstream } into an { @link } .
print some content of an { @link } to console .
/ * ( non - javadoc )
returns the bits of bits expressed in the hash table .

check the screen and move the view to the given position .
click on view clicks .
calculate the coordinates of the view .
presses the specified text with the given text .
opens the menu popup . <p >
report the item that matches the given text .
checks the action .
called when the activity is not set .
clicks t .
click on the specified text and returns the result .
check that the view is pressed over the view .
show the click for the view .
search for a line in the list .
touches the list of items in the recyclerview .
returns the top - level sub - line view .
gets the index of the specified recyclerview at the specified index .
generate a key pair of aes key .
encrypts a string using a privatekey object .
decrypts data in the input stream .

解密
returns the number of words in the dbase .
waits for the current timeout to be satisfied . <p >
waits for the current time to be displayed . <p >
returns true if the dialog is not available .
returns true if the view is in the view .

backward pass pass .
checks whether the given pattern matches the pattern .
open a reader .
compares two strings ignoring the same numbers .
returns the code representation of a string array .


return a string containing the given string as a string .
recursively recursively recursively recursively deletes all files from the given directory .
copies the src to the destination .
recursively recursively recursively walk the src to the directory .
convert a byte array to a hex string .
get file type from file .
get corporation character return a list of character search clones or returns a character&#39 ; s return objects .
get corporation character search a character --- this route is cached for up to 3600 seconds sso scope : esi - clones .
search for character search search search criteria in a search character --- this route is cached for up to 3600 seconds sso scope : esi - clones .
get search search the search parameters in the search search parameters .
search for search parameters and search results for search items .
get search search get search criteria ( asynchronously ) get a list of strings ( asynchronously ) get a list of strings ( asynchronously ) get a list of strings ( asynchronously ) get a list of npc corporations ( asynchronously ) get a list of strings ( asynchronously ) get a list of npc corporations ( asynchronously ) get a list of
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
signs a message using the given key and signature .
release a { @link } .
adds an entry to the list of running entries .
check if the current thread is alive .
{
sets the value of the th variable .
foward pass : y_i = exp ( x_i )
backward pass : dg / dx_i + = dg / dy_i dy_i / dw_i = dg / dy_i / dw_i = dg / dy_i / dw_i = dg / dy_i / dw_i = dg / dy_i / dw_i = dg / dy_i / dw_i = dg / dy_i / dw_i = dg / dy_i / dw_i = dg / dy_i / dw_i =
generate a key - value pair .
get the time of the specified timeframe .
generate code for byte array

{
sets the message id of the message id .
process the binary string .
create a descriptor from the given address .
adds a simple error message to the std error .
returns the signature of the given signature .
sets the attribute value .
sets the for a namespace uri .
set the attribute id .
returns the typeinfo type information
--------------------------------------------------------------------------------------------
creates an input field .
this method is called when the command is called .
extract time unit string .
zips the directory to the given directory .
compares two differences differences over differences in differences and differences .
get the parameters of the {
calculate the field of the given view .

creates a new tag that will be used for the given tag .
add a tag to the queue .

set the version of the document .
set the maximum allowed values for this request .
log the log - level file .
sets the mail display mode .
sets the current mail http response .
set the default charset for the default charset .
updates the mail server with the given name and port information .
removes the mail response from the server .
{
remove custom tags for the given .
{
installs the given bundle in the bundle .
/ *



unimplemented . forname ( )
update the metadata source data sources .

unimplemented .
unbind the access element .
updates the scope type for the current request .
updates the scope type for the given .
update the
update the timeout of the request .
update the session s .
update the management management management management management
update the client - side .
update the current theme .
update the security profile
updates the locale s attributes .
updates the time zone with the given time zone .
update the time

notification that the event to be sent to the user .

write the key - value pair to the list .
writes a message to a json object .

create a context context from the given parameters .
check if a object is a simple type .
updates the base component of the .
updates the default { @link } for the { @link } .
update the trigger data
this method is used to update the current state of the database .
updates the template with the following parameters : <ul > <li > the wcomponent template <li > the is set to the template . < / li > <li > the web application will not be rendered in the following format : <br > <code > ( ) < / code > < / li > <li > <code >
updates the template template .
update the template history with the provided template .
get the root element of the document .
updates the security tags for the specified date .
updates the session type .
update the location of the element .
create a security manager for the given password .
remove the security manager from the server .
update the config
update the cache of the cache cache entry .
/ *
create a new
update the resource content

get the formatted message for the current message .
serialize a list of event keys .
initialize the .
registers the given class which will be injected via { @link } .
registers the type of the given serializer type .
serialize the given date / time format to date / time format
serialize array array .
serialize a list of objects to a list .
serialize a struct
serialize a map into a string represenation
serialize a query to a json string
serialize an object to his object
serialize a object to his xhtml
deserialize json document to json string .
deserialize a { @link typeelement } from a { @link } .
deserialize a { @link } .
deserialize field value from json document
deserialize the value of the .
deserialize json array
<p > returns the child element in the given child element . < / p >
returns the next word or the next word in this builder .
read the next character from the stream .
end the end of the current node .
reads the next byte from the stream .
writes a request to the output .
parse value .
{
<p > return the locale <code > locale< / code > instance for the <code > locale< / code > instance . < / p >
/ *
/ * ( non - javadoc )
<p > computes the pearson distance of a line segment . < / p >
calculates the distance of the point of the line segment .

get the full name of the column .
build the for the given .
sets the for the given .
build the y - coordinate of a cell .

change the index of the map to the map .

change index number number of rows in the given column .
sets the name of the table column .
get the row column widths .
sets the row column widths .

find all child nodes that are contained in the given list of dbids .
find the item in the list .
load class class from class class .
shrink the state of the buffer to the specified output .
build a range from a
check if the source config is valid .
check if the column is a row .
get the name of the full name of the given full name .


find the region which contains the

build the comment from a sheet .
builds the cell comment .
add a timezone offset offset to gmt offset and offset .
get { @link } from a time zone .
returns the { @link calendar } instance for the given { @code timezone } .
get the current calendar .
get the current calendar .
get bytes from byte [] .
save the content of the document to the outputstream .
calculate the alpha value of a .

returns the alpha value of the <code > / code > parameter .
returns the value of the <code > / code > as a <code > float< / code > .
/ * ( non - javadoc )

calculate the number of fractional digits from the given color .

remove a listener from the list of classes .
computes the neighbors of the collection .
swap the two points of the cluster .
get the neighbors of a certain corner .
merge observations .
adds a bundle to the bundle .
/ * ( non - javadoc )
{ @link }


generate a string representation of the .

calculate the hyperbolic of the distance between the two lines .
calculates the quadrant of x - > y
returns smoothed noise s noise probability .
calculate the spline of a vector .
returns the value smoothed by the given interpolation by the specified interpolation function .
get chart ( )
gets the style row .
gets the font spacing .
get the font color for the font
returns the font s font with the specified font name .
gets cell style sheets in cell .
get the style of the sheet .

get the vertical alignment from a cell
find the total width of the column
calculates the alignment for the sheet .

set the { @link } to be used for the given { @link } .





stop the animation .
/ * ( non - javadoc )


convert the given level to a level
/ * ( non - javadoc )

configures the {
load the window .
returns the upper bounds of this symbol .
returns the string representation of the root of the root node .
deploy a deploy directory .
creates a new { @link timeseries } that creates a new { @link timeseries } .
returns the number of bytes in the cache .
returns the number of rows in the cache .
{
{
{
generate a string id for the given appender name .
returns true if the character is a valid character .
returns true if the current character is a special version of the current line .
check if the string is a string .



{
moves the value to the current position .
start building a source code .
returns the line length .
stellt den internen von zeile gibt zurueck ob eine weitere zeile existiert oder ob keine weitere . keine
returns the line number of the lines in the specified line .
returns the index of the next occurrence of the next character in the given character .
returns the word of this word .
returns the column of the line .
/ * ( non - javadoc )
{
wait for the current thread to finish .
puts the object into the cache .
returns the entry for the specified key .
remove a key from the map .
get the name of the folder name from the folder name .
returns the tag for a given tag .

creates a new { @link } instance for the given data .
liest den eines ob das ob das innerhalb der und gibt das gibt eine als wert im und als falls die von den eines und einem data .
liest einen data
returns a statement describing the current line .
returns true if the given { @link dataset } is a string .
liest einen . <br / > ebnf : <br / > <code > { / * } < / code >
returns the {
convert a { @link } to a { @link } .
transfomiert to { @link ( ) } or { @link ( ) } or { @link ( ) } .
returns true if the given function is a function or not .
adds a block to the current node .
liest die und als .
returns a union of a {
convert variable name to variable name .
returns the statement for the given {
liest
{
returns a new statement that is a union of the given type .
condition for { @link ( ) }
/ * [ deutsch ] function / code >
{
liest einen block . <br / > ebnf : <br / > <code > true< / code > if the template is not a <code > block . out< / code > and <code > / code > is returned .
initialize the cml xml dom .
/ * ( non - javadoc )
/ * ( non - javadoc )
loads a biopolymer from the denoted directory .
load a library from the given file .
creates a new { @link } from an inputstream .


=====================
get the checksum of a given resource
reads the embedded property embedded in the specified column .
get the service instance for the service .
returns the value for the current state .
destroys the current session .
finds association objects for a given type .
creates a embedded embedded {
find the entity for the given metadata .
/ * ( non - javadoc )
find the entities that are in the given key .
find the entities that match the given key .

find entities for the given ontology .
remove the entity from the database .
update the specified db with the given parameters .

checks if the name of the field name is in the given schema .
returns the batch size for the given batch size .

determine the first one for the given entity .
<p > getter for the list of foreign key types that are not in the association of the association . < / p >
/ * ( non - javadoc )
initializes the properties object for the given field name and classname .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the entity is a valid union of entity .
/ * --------------------------------------------------------------
remove the mapping from the table
add a field to the table .
/ * - this method is called when tester is not a .
process the properties of the given entity .
check if the value is a read or not
/ * this method is used to build the row key column names for the key .

returns the protocol protocol url for the given url .


returns the length of the url .

build the options for this request .
check if the user s configuration properties is enabled .
returns the property for the given entity type .
returns the connection config .
create a new reader builder
create a new reader builder .
create a new reader builder
create a new reader builder .
create a new reader builder .
create a new reader that contains all documents that are contained in the document set .
create a new { @link } that contains all the codepoints that are contained in the document .
create a new { @link } that contains all the { @link } objects .
create a new { @link } that contains all the documents that are contained in the json document .
create a new { @link } that contains { @link } .
create a new { @link } that contains { @link } .
create a new { @link } that will be used to convert the json document to a writer .
returns whether the given address is in the same order .
removes properties from the persistent store .
deletes the entity from the given store .
deletes the links from the given transaction id .
returns the entity id for the entity id .
returns the id of the given persistent id .
returns the link to the database .
sets the context of the current thread .
log the current context .
enable logging of the current thread and resets the thread to the importers .
get the log level of the task .
{
store the { @link } to the { @link krati . store . } .

enable the { @link gvrcontext#runonglthread } { @link } to the { @link gvrcontext#runonglthread () } .

sets the maximum log file size .
destroys the given destination address .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
notify listeners that a frame is moved to the given real frame .
gets the value of the form property .
waits for the job to be satisfied .
checks if the context is an awt error .
logs a log message to the given log level .

add the metadata to the metadata
create a json object from the given { @link level } .
add the contents of the given json array into a json array .
util method to check if the given file is a file .
{
main method .
returns the current value of the given property .
sets the type of the compressor destination .
{
returns the lucene { @link } for the { @link schema } .
/ * ( non - javadoc )
validates the given schema and the schema .
build the { @link } .
check if the given headers are present on the given headers .
computes the value of the given value .
returns all upper case - >
returns all upper case characters from the string .
{
{
sets the limits for the min / max limits .
put the given float into the map .
print the current fraction of the window .
creates clones of the specified view .
{
this method is used to retrieve the meta data from the database .
returns true if the specified object is a numeric object .
checks if the specified object is a valid {
add a dependence to the breakpoint .
adds a blur handler to the { @link }

returns a string value for the given key .
pause the upload message .

{ @inheritdoc }
{ @inheritdoc }
returns the upload size size .
deserialize a variable name or a variable name .
deserialize a string to a variable name .
calculate the list of soft - nodes from the given collection of entries .
get the current assembly that is not a valid redirect .
get the current assembly that is not available in the intent .
cancel a workflow instance
gets the template id of the response .
update the template for the document .
delete a template
lists templates .
get the next value from the given month
returns a {
query the results of the query and returns the result .
find query results from a query string
finds the sorted list of results matching the given query parameters .
finds the first matching query with given query parameters .
find the sorted list of elements from the given query .
sets whether the user is the access to the user s access .
replaces all the { @code user } s to { @code user } .
conversion to { @code jsonobject } from java object .
returns a field with the specified field name .
gets the value of { @code field } as a { @code field } .
反序列化
search for fields and sort results .
finds the first matching query parameters .
finds the first matching query parameters in the given query . <p >
release this object .

create a new
create a new

handle an action .
closes the file .
delete the client

get the file object from the file .
get the file for the page

get the current
update the
remove the from the list
create a directory
create a directory from the current page .
opens a new client to the server .
close the connection
/ * ( non - javadoc )
write ncml
check if the given <code > / code > is thrown if the connection is not already completed .
add a new span .
sets the current position of the current row .
get the type of the resource .
store the
invoke the callback to invoke the { @code } method .
/ * ( non - javadoc )
gets the image for the image .
conversion to { @code jsonobject } from java object .
gets the ancestor of the ancestor { @link } .
returns the descendants of the current user .
retrieve the query form field from the table .
<p > get individual fields from the fields . < / p >
returns the string identifying the given
populate the form fields .
returns the list of field names that match the given form id .
closes the current connection .
parses the json string to find a list of segments .
adds to optionparser with the option .

copy array array of arrays of arrays . copyof array arrays are copied to the array .
conversion to { @code jsonobject } from java object .
updates the node with the given node id .
add a new node to the partition .
remove a partition from the list .
adds a node to the node list .
remove a node from the node .
update the cluster with the given node .
create a cassandra cluster from the cluster .
/ * ( non - javadoc )
register this with the jmx name .
unregister the .
{
returns the headers for the header .
returns the names of all the columns in the workbook .
returns the list of types in the dbase file .
return the key of the field .
returns the form definition id of the username .
create a new instance with the given length and size .
get the pointer to the given .



method that is invoked by () with the default user and get the mapping from the client .
report the report of report report .
returns the data of the specified parameter in bytes .
returns the values of the data set in bytes .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the last timestamp of the specified socket .
connect to the remote server .
reconnects to the .
get the amount of millis
get the score of the given member .
add a member to the list
add all the members to the specified list .
add a new long value
get the rank of the given member key .
reverse the given member key
returns a set of integers that are in the range [ min 1 ] [ 1 ] [ 1 ] [ 0 ] [ 1 ] [ 0 ] [ 1 ] [ 0 ] [ 1 ] [ 0 ] [ 1 ] [ 0 ] [ 1 ] [ 0 ] [ 1 ] [ 0 ] [ 1 ] [
calculate the range of two strings
remove a range from the range
count the amount of times the range of the <code > / code > object represents .
returns a set of ranges that match the given range .
find the ranges of the given range with the given range
remove the range from the range [ rangestart > section 1 ) .
zrevrange by
calculate the range of items that match the specified range .
remove the range from the range [ long - long - 1 )
/ * ( non - javadoc )
checks if the server is open .
check if the client is accessible .
close the connection .
get the length of this fluent key
get the list of keys in this map .
get the index of the first occurrence of the specified element .
get the value from the string
returns the list of keys contained in the specified range .
/ * ( non - javadoc )
parse parser
returns the isolation level for the given level .
select the current position of the selected item .
select the current season of the current season .
moves the passage of items in the given amount .
move the item to the given position .
returns the position of the swap position .
swap the current position in the document .
sort the order of the given comparator .
resets the current user s fields .
resets this manager s state .
sets the name of this { @link net . dv8tion . jda . core . entities . guild } .
returns the value of the <code > array< / code > object .
adds an entry to the cache entry .
returns the entry type of the catalog or the catalog .
returns the count of an entry in the given type .
get the entry for the given argument .
insert a new object into the priorityqueue in the list .
/ *
returns the average value of the elapsed interval .
lookup a value in the map .
returns the value of the named object in the given name .
rebind a component to the target class .
rebind the name of the specified .
rebind name from the source directory to the target .
/ * ------------------------------------------------------------
resolves the given state to the given collection of maps .
sends a message to the webhook .
sends a file to the file .
sends a message to the file .
sends a message to the remote peer .
returns a new instance of the binding .
returns a new { @link } instance for the given class .
returns the {
returns the { @code } for the specified type .
get the provider provider for the specified class .
installs the specified { @link extensioncontext } of the specified { @link extensioncontext } .
installs the specified { @link } to the { @code } .
installs the { @link } interface to the { @link } .
installs the specified provider with the specified name and type .
{
sends a string to the given { @link } .
returns the scope of the given type with the given name .
injects the member into the specified scope .
creates a new log log log .
<p > the objects for each of the object . < / p >
returns the name of the class name .
returns the string representation of the form this class .
initialize the .
/ * ------------------------------------------------------------
store the value of the specified object .
remove a property from the map .
sets the given { @link } to this set .
returns a set of the set of overrides .
add a listener that will add the listener to the listener .
add a listener to the list of listeners .
remove a listener from the list of listeners .
fire the event to the event
fire the event to be removed .
fire the event to the event .
fire the event to the event .
returns the property name for the given prefix .
loads the property from the map .
loads the properties from the given reader .
loads a class from the given class .
set the property value .
returns the property array for the given property .
get a property group from the named property .
add an object to the transaction .
remove a previously created object from the database .
returns a new { @link } built from this { @link flux } .
check if the given predicate is true or not .
returns the object associated with the specified object .
method that is invoked by the { @link } interface .
executes the query
executes the query against the given element .
start the element .
method called when an end event is encountered .
match a list of patterns .
this method is used to create a new for a class .
gets the context class loader .
remove the table key from the table .
////////////////////////////////////////////////
{


builds the attribute name for the column name .
creates an { @code outputstream } for the given output stream .
returns an inputstream for reading the file
load properties from a file .
reads the properties from the properties //////////////// .
fire the event to the queue .
/ * -------------------------------------------------------------
set the current tag handler tag .
process the queue .
update the cache of the updated event .
updates the given predicate that matches the given predicate .
/ *
tries to find a loop if possible .
main method .
creates a bean definition for eventset descriptor .

validate the given object .
closes the document .
checks if the document is a document with the given document type .

main method .
writes the csv dump file to the output stream .
print the help of the dump .
print the status of the sites to the .
returns the list of item attribute value .
returns {
adds a new new one .
returns the site record for the given key .

check if the database is not already running .
{
{
loads the property file from the properties file .
loads the property file from the file .
returns an iterable of { @link iterable } that contains the items that are contained in the given { @link iterable } .


returns an array of { @link } s that match the specified { @link } .
returns the name of the cached providedserviceinstance the method returns the name of the cached object

returns the powerset of the given type that fulfills the given set of values .
creates a { @link } of the specified class .
returns an array of { @link } s that are emitted to the specified { @link } .


creates a sortedset for the given class .
creates an array of { @link } s of the given type .
/////////////////////////////
/////////////////////////////
returns an optional {
creates an entity from the given id .

upgrade a list of update to the given upgrade .
execute the database .
{
get the blob of the blob with the specified column .
read the database from the given reader .
/ *
write the current environment to the database .
creates a persistence directory for the specified user .
encode the given string into a base 64 encoded string .
encode the string to a string .
decode the given string to a string .
decode the string value of the string .
delete a table id
get the cached value for the specified id .
insert a object into the table .
insert a { @link } into the database .
saves the object to the database .
update the updatable table
query for fields in the database .
query the query
returns the list of items in the given list .
returns the { @link } instance that represents the given object as a { @link string } .
start the server .
starts the app .
main method .
get a property from a file
get the cached value for a given encoding .
get the cached value for a given encoding .
{
parse the arguments .
get the value of the given eventlocal .

gets the value for the given key .
register the scope of the service .

evaluates the expression to be returned by the function .
this method is used to ensure that the is a number of days
set the value of the belief
compile the { @link } for the given class .
generate routes for the routes .
{
returns true if this string is a string representation .
destroy 删除 table .
rollbacks the transaction .
begins the transaction .
commit the transaction .
deletes the specified object .
check if the specified object is a persistent object .

delete the given query
delete the references of the given object .
delete the column of the entity .
store an object into an object .
-------------------------------------------------------------
store an object into a object .
store an object in the database .
set a property with the default value .
set the shared variable to be used .
insert a reference to the database .
materialize the object .
persist the data of the object to the mappers
insert a link to the .
materialize the two targets of a given object .
munge the specified object into a target object

generate a object for a beanbox
/ * ( non - javadoc )
insert a collection of objects to a target object .
insert a document to the document .
get the cached object for the given object .
retrieve collection query collection .
answer the association of the specified classdescriptor
get the reference to the persistence cache .
check if the identifiable record is a mxbean or not .
get the mbean object from cache
returns an iterator of iterators for the query .
returns an iterator for the given subqueries .
set the current adapter to be used for this animation .
sets the page transformer .
method called to create the .
sets the page limit .
sets the margin of the page cells .
set the margin of the page
called when the scroll position of the scroll view is scrolled .
ends the current scroll .
/ * ( non - javadoc )
-------------------------------------------------------------
returns an {
returns an iterator for the query
execute the action for the panning tree . this method will scroll the click to the click event . <p >
{
{
{
creates a proxy factory for the given proxy class .
returns the offset of this matrix . <p >
add a resource to the classpath
/ * ( non - javadoc )

performs the given map of keys and values .
sets the value of the array from the parameter array .
set the sql statement for the given parameter name . if the given value is not a valid sql statement then the given parameter is not set .
auto generated sql sql statement s string with a column name .
check if arguments are strings .
get the value of the argument argument from the given arguments .
returns the sql statement for the field name in the prepared statement .
closes the connection .
checks whether the target target type is a target type .
sets the repeat mode .
sets the offset of the animation .
sets the duration of the animation .
set the animation count .
this method is called when the animation is pressed .
/ * ( non - javadoc )
{

compute the number of bytes required to encode the operation .
/ * ( non - javadoc )
clears the thread pool .

{
this method is called when the call is not called .

convert a set of objects to a
builds a query for a classdescriptor
returns the class for the class .
get the list of directories that are contained in the model .
get the resources that were found in the model .
/ * ( non - javadoc )
returns true if the table is newer than the maximum size of the table .
transfers data from source to dest array .
resize the table value .
transfers the data from the given array into the given dest array .
remove unique entry from the map .
clear the value of the table
/ * ( non - javadoc )
{
{
get the attribute names .
handle a sparql update .
get a list of objects .
register a table
perform a batched delete a single entity .
ensures that the given uri path is a slash .
{
execute the given <code > connection< / code > instance .
execute the given {
returns the throwable of the given throwable .
returns true if this view is visible .
dismiss the animation .
initialize the view
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
get the instance for the passed instance as an instance of this class .
persist instance of { @link instanceinfo } instances .
clear the current state of the pool .
gen - last :
gen - last :
gen - last :
gen - last : ( .
gen - last :
gen - last :
recyclerview
set the click listener for the view .
called when the view is scrolling .
called when the dialog is pressed .
set the classpath for the classpath .
set the .
get persistent class class for the persistence class .
registers the given transaction .

returns the transaction associated with this transaction .
/ * ( non - javadoc )
this method is called from the { @link } interface .
{
get challenge challenge challenge .
verifies that the challenge is not connected .
retrieve the image with the given token .


set the brightness of the rgb color .
set the diffuse color of this float array .
set the specular color of the scaling factor
set the value of the parameter .
resolves the given expression to the expression .
resolves a property by name .
create a criterion expression that matches the given criteria .
create a new { @link } instance that will be used for the given object .
create a new { @link } that is used to create a new object .

create a new {

check if the current user is running .
/ * ( non - javadoc )
check whether the given array contains the given permissions .
getter for - gets list of types of types of concept types c
setter for - sets
getter for concept - gets
setter for concept - sets
register the avatar .
getter for - gets
setter for - sets
init the webhook .
sends the progress to the specified progress and notifies the listeners afterwards .
/ *
sends the specified request to the request .
add a new file to the file .
adds all files in the upload list to the upload measurements .
broadcasts a notification to the downloader .
creates push notification for a notification .
delete the file
find the next occurrence of the separator .
{ @inheritdoc }
checks if the {
main method to parse the command line arguments .
generate java files .

returns the first letter of the word lower case .



create a folder if it doesn t exist .
creates a folder folder for the given path .
creates a bufferedreader from a file .
create a new for the given class and the given root node .
creates a { @link file } for the given source file name .
creates a new name name .
check if the user has a group id .
check the user group to find the group .
checks if the given string is a valid jsonp pattern .
returns true if the argument is a sarl operator .
serialize the json string to the jackson
reads the settings from the { @link } .
write a new { @link iodevice } to a { @link writer } .
adds a message to the list of default message .
resolves the template for this template .
resolve the given controller for the given controller .
format the message with the given message .
this method initializes jscrollpane
creates a new instance of { @link tuple2 } .
create a new edge from a collection of nodes .

find all the nodes in the graph .
remove a callback from the given {
run the given runnable in the given {
run the task execution .
runs the given runnable in the given { @code runnable } .
run the given runnable in a given { @link runnable } .
check if the current thread is running .

build a string represenation of the given code .
set tile urls .
this method is called by the jsf service to create the .
add a listener to the list of listeners .
removes the current state of this event .
called when the user has been registered .
returns the { @link } instance for the { @link } .

get the real subject subject .
get the subject of the current instance .
reads the next document from the stream .
======
==============
======
{ @inheritdoc }
generate a signature for the given signature .
this method is used to build a { @link } for the given { @link } .
binds shader to the shader texture .
replace the result code with the given code code .
returns the key from the x - value at the given key .
===========
===========
validates the given artifact .
validates the given artifact .
validate a license
validates the given module
validates the given organization
validates the given query from the given query .
returns the search class for the given class .
sort the sort sort list .
set the value of the <code > key< / code > parameter from the current { @code float } .
set the value of the given key as a string .
get the float values from the map .
get the int value from the store .
set the value of the <code > / code > parameter by <code > y < / code > .
set the velocity <code > key< / code > by the <code > / code > vector .
set the current ray y .
set the value of the shape of the shape of the transformation .
draw the transform to transform the camera .
capitalizes the string and trim the underscore character .
joins the strings in a list of strings ignoring whitespaces .

resize the image to the specified image .
resizes the image to the given image .
图像切割 ( 按指定起点坐标和宽高切割 )
returns the image for the image .
add a file to the destination file .
sets the credentials for the user . if the client is set to { @code the } this method will not be set to the same instance as the client .
create a new { @link resttemplate } that will be used to configure the request .
add the member to the member .
fill the specified container populator with the given { @link } .
=========
copy the object to persistent object .
======
check if the artifact is a valid version of the given privilege .
returns the last release of the last processed versions of the specified type .
<editor - fold defaultstate = collapsed desc = generated code > // gen - begin : initcomponents
gen - last :

===========
-------
-------------
=========
===========
sets the outer unit of this arc .
enables or disables the effects of this shadow . <p >
draw the transform .
================================================================================================================= ////////////////////////////////////////////////////////////////




returns the organization that is associated with the organization .
get the organization of the organization .
get a database license
get license licenses for given license
returns the database artifact of the given artifact .
this method generates a { @link } for the artifacts of the given artifact .
returns a list of the module that matches the specified dependency
generate a module from the given module
returns a dependency object representing the dependency information .
get the comment information from the document
get the comment comment for the comment
validates the id attribute .
checks whether the given id is a valid card id .
checks whether the card is a valid unicode card .

calculates the sum of the array of integers .


============
=========



creates a new instance of the given class using the given classdescriptor .
sets the permissions of the specified { @link net . dv8tion . jda . core . entities . member member } .
this method is called when the user has been called . <p >
check if the user is a permission or not .
shows the dialog for the current user to the user to the user .
this method is called when the user has granted access to the user .
invokes the method .
this method will return {
determines if the given { @link } is a boolean value .
get the {
loads the properties file from the system properties .

add the given path to the path .
sets the path of the class path .
send a http request to the target target target using the given request .
send a http request to a destination
sends a proxy to the target target target target
sends a http request to the target server .
sends a message to the client .
sends a basic authentication to the given url .
sends a request to the response body .
sends a response body to the body of the response .
send body response to a destination .
sends a message to the response body .
sends a message to the client .
sends a plain text request to the given url .
sends a message to the given url .
get the http method
/ * http // http : // www . . org / browse / / . html

use this api to fetch resources of given name .

use this api to update .
use this api to unset the properties of resource . properties that need to be unset are specified in args array .
use this api to fetch all the resources that are configured on netscaler .


resolves the url to be used for the given url .

sets the reaction of the .
converts uri to uri .
converts uri to a uri .
/ * ( non - javadoc )
returns a uri for the given uri .
use this api to fetch resources of given name .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
<p > fill given string value . < / p >
{
list of projects that have the given name .
given a list of merge regions the join the first match .
use this api to fetch a resources .
use this api to fetch filtered set of resources . set the filter parameter values in filtervalue object .
print the help for the command line .
parse the command line arguments .
/ * add your property controls to this panel . remember to set your own layout manager . remember that you want to add additional columns to add to the super interface . you should not add your own layout .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if this matrix is enabled .
returns the matrix l .
return the householder - 1 .
returns the pivot decomposition .
parse a string representation of a residue .
/ * ( non - javadoc )
get the 2d residue bond length of the given atom type .
returns an iterator for each element of this iterator .
returns an iterator over the elements of the given { @link ichemfile } .
returns an iterator for each of the two atoms in the air .
evaluate a hypothetical measure of the tree .
use this api to add ip6tunnel .
use this api to update .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch resource of given name .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
get the xml parser from the document .
get the xml parser from the given file .
reads a tag from the reader .
returns the string representation of the given string .
finds the space space for a given id .
reads a tag from the reader .
parse the string from the string .
main method .
returns the entry at the specified index .

this method is called by the superclass of the superclass to create a type of type .
visit a class declaration .
this method is used to generate the for the class of the .
returns the formatted string representation of the given { @link string } as a formatted string .
extract the array of afps from the and move them to the list of afps
convert the residues to the list of afps
check if the given group is a join group .
gets the chain of chain chain information .
this method returns the next group of atoms that are in the given group .
set the first expression to the given expression .
main method .
/ * ( non - javadoc )
processes the source file .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<p > . < / p >
use this api to fetch resources of given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
use this api to add vpath .
use this api to add vpnintranetapplication resources .
use this api to delete messaging .
use this api to update dnsaction64 .
use this api to update nsrpcnode resources .
use this api to unset the properties of nsrpcnode resource . properties that need to be unset are specified in args array .
use this api to unset the properties of nsrpcnode resources .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch resource of given name .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
use this api to update .
use this api to unset the properties of resource . properties that need to be unset are specified in args array .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch resources of given name .
get the column value from the column
returns the row s index of the rows in the workbook .
returns a new cell relative to the specified position in the specified position .
intersect the area of the rectangle .
calculates the area of the area of the rectangle .
finds the cell value according to the specified coordinate .
find the cell y coordinate of the y - coordinate of the cell .
calculate the columns of the area of the ccw .
calculate the grid size for the grid .
handle exception thrown by exceptions .
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
/ * ( non - javadoc )
{
this method returns a string representation of the two vectors . the center is the first axis of the second vector . the helix skeleton must be the 3d coordinates of the second axis . the angle in the third axis is the first component of the two components . the angle of the vector is the first component in the skeleton .
/ * ( non - javadoc )
/ * ( non - javadoc )
triangulate the from the layers in the pdb file system .
returns an empty { @link } of the given type .


computes the of the polynomials .
/ * ( non - javadoc )
returns a set of dependencies that are transitively in the given set of uris .
set the end tag
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
this method returns a distance {
this method returns a distance between the two dimensions and the number of differences .
this method returns the distance matrix and returns the distance matrix .
this method returns the distance matrix and then returns the distance matrix .
this method returns the distance between the two dimensions and the number of examples .
this method calculates the distance between the specified aligned sequence and the specified indices in the given sequence .
calculates the distance matrix and then computes the rmsd of the induced distance .
returns last node from the given offset .
main method .
{
evaluates the clause expression .
returns a plural term term minus the operators in the given term .


{

add a resource to the resource set
<p > . < / p >




consume the next token from the input stream .
returns the {
join the two outer classes
/ * ( non - javadoc )
consume token .
consume the value of the token as a .
collect a list of elements from the specified collection .
use this api to fetch a resources .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
finds the list of patterns for the given input .
returns the set of all the hashes of the given set of variants .
use this api to clear .

creates a object from the given file path .
creates a new url for the given url .
returns the uri of the url .
{
checks if the string is a name name .
generate a key from the cache .
get the list of all the labels of the .
tag :: tag - tags .
get paths from the path .
returns the names of the names of the classes that are available for the given { @link } .
returns the method signature of the method .
use this api to fetch resources of given name .

sends a message to the remote peer .
send a message to the client .
/ * ( non - javadoc )
receives a message from sqs queue .
deletes a message from the specified message .
deletes messages from sqs queue .
change the visibility of the message . this method is called when the message is received . this method is deprecated .
change the visibility of the .
sends a message to the batch .
sends a message to the message .
deletes a batch of messages .
deletes messages from sqs payload .
<p > adds a message to the list of sqs logs that you want to upload to the client . < / p > <p > <b > note : < / b > means to make the action to send messages to the queue . < / p > <p > <b > note : < / b > means to make
sets the visibility of the for the given .
purges the queue from the queue .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
visit a variable .
{
{
{
{
scans for multipart requests .
resets the state of the array to the total number of elements .
compute the factorial of the following :
returns the next permutation .
use this api to fetch resource of given name .
{
{

{
/ * ( non - javadoc )
commit the transaction .
rollbacks the transaction manager .
sends a request to the wal .
adds a new operation to the cache .
releases the lock lock .
release the lock lock held by the session .
called by the session to initiate a session .
returns the url for the given map .
finds the {
returns the url to be used for the given url .
search the traversal to compute the node .
this method is called when the method is called .
this method is called when the class is called .
restores the objects from the memento to the model .
get the object for the specified attribute .
put a hashmap .
returns all the fields matching the specified class .
/ * ( non - javadoc )
returns the value associated with the specified key in this cache .
puts a value at the top of the map .
compares the word word .
/ * ------------------------------------------------------------
read properties from an input stream .
read properties from a file .
read properties from a url
returns the properties of the specified class .
trims all properties from the given properties file .
checks if the name of the given name is a valid name .
{
get the loader for the current file .
this method will call the callback when the app is opened
returns links to the links of the elements in the given link .
applies the given { projectname } { @code } to { @link } .
puts a value in the given scope .
use this api to fetch resources of given name .
use this api to add .
use this api to add dnsaction resources .
main method .
returns the list of { @link } s that match the given { @link inputstream } .
use this api to update .
returns true if the specified <code > / code > is a <code > / code > .
use this api to update resources .
sets the state state .
use this api to unset the properties of nsrpcnode resources .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch resource of given name .
{
set the { @link } of this { @link } .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .


gets the proteinsequence corresponding to the protein crop sequence .

returns the proteinsequence for the sequence .
sets the coefficients of the crosstab .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch resource of given name .
inits the menu .
shows the dialog dialog .
use this api to fetch filtered set of resources . set the filter parameter values in filtervalue object .
retrieves the metadata for the project .
remove projects from the project .
restores a {
retrieves the member .
adds the given { @link metadata } to the given { @link project } .
remove the members from the given { @link project } .
update the metadata of the given { @link project } with the given { @link project } .
gets the repository metadata .
adds a { @link repository } to this { @link repository } .
adds the given { @link revision } to the given { @link repository } .
{
{
updates the creation of the given { @link observable } .
adds a { @link metadata } to the set of { @link project } s .
adds a {
{
remove a token from the database .
sets the maximum height for the given row height .
put the row column into the table .
get row col col
remove row from the row col
returns the maximum size of the column size .
sets the heading rows .
update the listeners .
updates column width and height .
update the token token with the given token .
adds the given {
remove the {
update the {
adds the specified {
remove the specified { @link token } from the specified { @link storage } .
update the { @link token } that will be created with the { @link } .
adds a permission to the given project .
remove the permission for the given project
replaces the permission for the given project with the given name .
finds the permissions granted to the specified repository . the { @link } is responsible for making sure that the user has permissions to authenticate with the provided repository .
finds the final permission for the specified application .
returns the list of {
finds the role of the role .
retrieves the token from the registrar .
create a token from the given { @link endpoint } .
create a new token for a specific token .
creates a new { @link token } with the given { @link endpoint } .
publishes the given { @code revision } from the provided { @code revision } .
{
returns a { @link token } that corresponds to the given app id .
returns a token that is able to grant the secret .
ensures that the given user is a member of { @link project } .
ensures that the given {
returns the user - defined alias for the specified repository name .
creates a { @link } from the given { @code } .
returns a set of all instances of the specified .
initialize the reader for the reader .
resolves the revision revision revision revision revision revision revision revision revision from the revision revision revision revision .
returns the link to the link .
returns the next available buffer .

converts modifiers to a string .
apply typefaces to the current paint .
apply the specified view to the view .
apply the textview to the view .
get the color for the color .
returns the color value for the color .
get the color for a specific style .
get the color value for the given color .
apply a { @link } to the default view

use this api to add lbvserver .
use this api to add pqpolicy resources .
use this api to delete dnsaddrec of given name .
use this api to delete dnsaaaarec resources of given names .
use this api to update .
use this api to update pqpolicy resources .
use this api to unset the properties of nsrpcnode resource . properties that need to be unset are specified in args array .
use this api to unset the properties of nsrpcnode resources . properties that need to be unset are specified in args array .
use this api to enable .
use this api to enable servicegroup resources of given names .
use this api to disable .
use this api to disable .
use this api to rename a servicegroup resource .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch resource of given name .
use this api to fetch resources of given names .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
/ * ( non - javadoc )
reset the state of the .
use this api to fetch resources of given name .
sets the property .
returns a list of integers contained in the specified array .
create a list of items in the given list .
create a new set with the given values .

load a collection of items from a collection
loads a collection of objects from the file .
>
remove the object from the list .
returns the index of the first occurrence of the specified element in the list .
returns the index of the first occurrence of the specified element in the specified list .
creates a new { @code } with the specified collection of elements .
creates a new sample - precision list of the given { @code } and the given { @code collection } .
creates a new { @code } with the specified collection of elements .
check if the two list contains two lists .
compares two lists .
returns a list of items in the list .
returns a list of items ordered by the given items .
creates a new list of items contained in the specified collection .
returns a set of items that are contained in a set of items .
add all items from the collection to the collection .

returns a list of all the prefixes in the given list of { @code } objects .
flatten the collection of nested flattened entities into a list of flattened objects .

checks if any of the elements of the collection is logically contained in the collection .

returns a set of counts for the given collection of given collection .
returns a new instance of {
returns the geometric center of the geometric center .
returns the point of two stereo plane .
calculate the proportional proportional to the grammar .
calculate the boundary of the boundary .
calculates the list of for the subunit .
calculate the vector of the .
calculate the vector of the reference rotation .
returns the reference to the angle of the solar . this method is called by the ripple effect for the mdl sdf .

--------------
extract the parameters from the parameters .

convert the residue to a residue array .

clones the given project file and resolves the repository uri .
checks if branch is not already existed .
this method is used to decide if the file is not empty .
commits the current git repository .
add current branch to the current branch location .
this method is used to compute the rectifying homography from the rectifying homography and the rectifying homography .
/ * [ deutsch ] <p > bestimmt das = . < / p >
<p > sets the solution according to the provided scaling . < / p >
this method is used to calculate the decomposition of the decomposition .
/ * ( non - javadoc )
creates a new {
creates a new event
creates a new event for the given event .
get links from the given { @link org . apache . . . } .
get links from the given collection of annotations .
returns a set labels that contains all the labels of the given collection .
creates a new
/ * ( non - javadoc )
<p > . < / p >
adds a row to the matrix .
<p > this method is used to delete the submatrix specified by the submatrix . the matrix is the first row . the matrix is done by using the . the matrix will be the first shifted matrix . the matrix will be the first shifted matrix . the matrix will be the first shifted matrix . the matrix will be the

updates the submatrix at the householder .
updates the householder vector .
get the volume of the sound .
returns the for the given key .
/ * public static string ( string ) { plaintext = . ( ) ;
create a new { @code } object with the given { @code } and { @code } .
creates a { @link } for the given { @link } .
parse the given file .
static factory method for creating new unmodifiable map .
clear the persistent state .
convert inputstream to inputstream .
registers listener for listeners
initialize the properties .
reloads the properties of this property .

add the root node to the root node .

find the next resolver for the given address .
resolve the environment .
get the config

returns the longest prefix of the longest common prefix .

/ * ( non - javadoc )
creates a new broker instance .
use this api to fetch resources of given name .
use this api to fetch resources of given name .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
use this api to count resources configued on netscaler .
use this api to count the filtered set of resources . filter string should be in json format . eg : port : 80 > set the filter to the uuid .
checks if a track is a new one .
check if the phone id is valid .
update the album with the given name .
exports data to a data store .
creates a new trackinfo from the given hash .
creates a trackinfo object from the resourcemodel
<p > computes a number of fractional part of the number of fractional decimal random units . < / p >
computes the mean of the results of the matrix number .
<p > . < / p >
get body stream from inputstream .
multiply the matrix in the matrix b matrix
returns the response body as string .
close the input stream .
returns a client connection to the client .
release the client

serialize the serialized bytebuffer .

update the current password .
get an instance of { @link } .
checks if the given model event is a synthetic resource .
checks whether a given resource is a valid archetype .
encodes a byte array to a string .
decodes a base64 encoded string .
solves a * x = b
computes the matrix l - transpose a real diagonal matrix .
registers the observer .
unregister the adapter
creates a new view holder .
called when the viewholder is visible
use this api to fetch resource of given name .
convenient method to create a new {
{
sets the item for the model .
get the models of the materialized metamodel .
sets the items in the model .
sets the items in the cache
sets the list of items to the given collection . <p >
creates a new {
creates new new {
add a new item to the model .
add a list of items to the list
sets the item at the given position .
moves a {
removes the item at the given position .
removes a range from the list of items
remove a new item from the parent

set the children of this tree .
returns the innermost node of the node s {
use this api to enable .
use this api to disable .
use this api to fetch all the resources that are configured on netscaler .
adds a parameter to the builder .
add a new query parameter .
adds a parameter to the request .
use this api to add ip6tunnel .
executes a sparql delete operation on the given { @link } .
use this api to add ip6tunnel resources .
use this api to delete dnsaddrec of given name .
use this api to delete dnsaaaarec resources of given names .
execute a single .
use this api to fetch resource of given name .
use this api to fetch resources of given names .
executes the given { @link } .
add a batch of records to the batch .
add a {
convert an array of array to an array of arrays .
use this api to fetch all the ci resources that are configured on netscaler .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
use this api to add dnsaction .
use this api to add dnsaddrec resources .
use this api to update .
use this api to update gslbsite resources .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch all the resources that are configured on netscaler . this uses which is a way to provide additional arguments while fetching the resources .
use this api to fetch resource of given name .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
use this api to fetch a resources .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .

set the x y coordinate of the anchor .
use this api to fetch resources of given name .
<p > performs a matrix multiplication operation : <br > <br > c = c * c * a<sup > t< / sup > * b<sup > t< / sup > <br > <br > c<sub > ij< / sub > = &sum ; <sub > k = 1 : n< / sub > { a<sub > ki< / sub > * b<sub
<p > performs the householder a matrix multiplication . < / p >
<p > performs the following operation : <br > <br > c = c * c * c * c * c * c * c * c * c * c * c * c * c * c * c * c * c * c * c * c * c * c * c * c * c *
<p > performs a matrix multiplication operation : <br > <br > c = a<sup > t< / sup > * b<sup > t< / sup > <br > < / p >
<p > performs the householder transformation operations on the matrix and stores the results in the matrix . <br > <br > c = a * b<sup > t< / sup > * < / p >
<p > computes the inner product of two numbers . < / p >
decomposes the supplied matrix .
sets the center of the center of the supplied object .

use this api to fetch resources of given name .
use this api to fetch a resource .
create a new {
adds the element to the end of the list .

returns the element at the specified index .
returns the index of the element at the index specified in the range .
returns a list of integers from the range [ min max ) .
replaces all occurrences of another receiver with another .
reverse the elements in the receiver .
sets the element at the specified position in this list .
initializes the context of the teaservlet context .
encodes the given base64 encoded sequence of bytes .
use this api to join .
use this api to fetch all the resources that are configured on netscaler .
<p > computes the two - consecutive c matrix . for a block that is the number of rows that is less than the end of the matrix then it is possible that the size of the matrix is less than or equal to the number of rows in the block . if it is not possible it will be added to the
use this api to fetch all the resources that are configured on netscaler . this uses which is a way to provide additional arguments while fetching the resources .
decomposes the decomposition .

process the list of process id .
process a spectopic - check for a given xmpp topic .
applicationcontextaware
process the next crawl and the topic id .
returns the value of the specified
returns the value of the specified
/ * ( non - javadoc )
get the id of the .
get the uri of the uri
get a for the given station
get a string representation of this view
get a for the given station
get a view of the view
get the value of the view

resolves a view to a view .

generate a content - spec mapping from a {
creates a { @link } from the given url .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates the stats statistics .
/ * ( non - javadoc )
/ * ( non - javadoc )
get field from the class name .
init
kills the current session .
creates a new instance of the database .
add rows from a document to the file .
add rows from the file to the file .
insert a value into the database .
初始化
returns the precision of the specified precision .
<div color = red style = color : > <p > / p >

returns the value of the
get the recall ( or ) of the given form and returns the results .

returns the recall ( predicted ) recall for the
returns the number of .
find all in the ring .
/ * ( non - javadoc )
returns the integer array of the specified key in the array .
{
get the client instance from the given name .
reset client to the client .
add a sort order
add a sort order of fields to the provided {
set the current page of threads .
computes the strategy for the current node .
compute the distance between the first and second the first step of the first .
returns the for the given .
returns the first one for the second step .
compute h ( binload ) in the clusteringfeature .
/ *

finds the sac mapping from the first row of the array of the two sets .
use this api to fetch resources of given name .
use this api to fetch the statistics of all resources that are configured on netscaler .
use this api to fetch statistics of resource of given name .
use this api to fetch resource of given name .
use this api to fetch resources of given name .
use this api to fetch resources of given name .
read the model file from the file .
get the weight of the grid .
converts a { @link simplefeature } s to a { @link } .

creates a new counter by its key .
generate a { @link } for the given classifier .
/ *

create a new builder with the given configuration .
wrap this instance of this instance
returns the float array of the float values in the array .

performs a procedure reduction on the array of doubles .
adds a two - step two - to - b vector .
adds a new column to the vector .
computes the two arrays of elements in the vector .
computes the value of a double value .
adds a double array to the matrix .
multiply the two points together .
computes the magnitude of the two arrays .
returns an array of integers from the two arrays .
returns the intersection between two arrays .
counts the number of elements in the specified vector .
sum of arrays . binarysearch ()
returns an array of integers from the specified array of integers .
computes the euclidean norm of the given .
<p > computes the frobenius norm of the two vectors . < / p >
computes the sum of two logarithms of the logistic solution .
computes the frobenius norm of the two vectors .
returns the minimum of the first occurence of the matrix .

calculates the sum of the log log with the specified log function .

computes the product of the two vectors .
returns an array of ints from from array of ints .
normalize a single double .
standardizes the given two - digit - to - zero - based algorithm .
normalize the log .
calculate the sample number of elements in the histogram
calculates the average of the average of the of the given solution .

calculates the correlation coefficient for the given correlation .
computes the of the solution of the given matrix .
returns the absolute value of the largest in - a mean of the mean .
convert a byte array to a string representation of the form :
main method .
returns a copy of the given array with the given arrays .
<p > the tags to add to the tags . < / p >
<p > the tags to add to the message store . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setresourcetags ( java . util . collection ) } or { @link ( java . util . collection ) }
this method is called to read the { @code } from the { @code } .
create a new instance of the class from the given { @code } .
create a new builder for the given path .
returns true if the key is present .
get the reverse map of all the cities in the map .
add a set of categorical values to the map .
main method .
creates a new { @link } from uri uri .
returns a new builder for the given baseuri . <p > the uri is used to convert the uri to a string .
create a new {
/ * ( non - javadoc )
build the uri .
set the uri .

set the { @link } to be used for the given port .
sets the path to be used for the given path .
set the query string for the given query string .
set the query parameter .
sets parameters to be used .
replace the query string with the given name .
sets the fragment .
returns the current point of the current state .
{
returns the next point in the <code > / code > .
move the position of the given delta to the current index .
move the index to the current position .
surrogate to be used for surrogates .
{
returns the offset of the character represented by this token .
recycle the {
use this api to fetch resources of given name .
creates a new { @link } that matches the given predicate and returns a new { @link } .
adapts a predicate to a {
adapts a predicate to a long .
adapts a boolean to a boolean .
encode a byte array to base64 .
pad the given padding with the given padding padding .
normalizes a string to a string .
md5加密


add a new token to the start of the token .
returns an iterator over the elements of this stream .
print the current token .
returns the list of strings for the spreadsheet .
check if the token is valid .
/ *
populate the .
/ * check the token collection .
returns the of the first token in the .
create a new instance of .
creates a tag from the specified tag s path .
returns the tag for this tag .
updates a tag in the cache .
deletes the item at the specified tag .
returns a list of tags for all tags .
add a training training task instance to the list of training features .
adds training data to the training training format .
get the { @link java . util . } instance .
create a new verification {
get the list of { @link } instances .
returns the list of .

use this api to fetch resource of given name .
use this api to add filterpolicy .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch resource of given name .
use this api to fetch filtered set of resources . set the filter parameter values in filtervalue object .
returns the resource id from the resource group .
returns the subscription id from the given id .
returns the resource provider from the resource id .
factory method for create a new { @link } .
factory method for creating a new { @link } .
returns the parent identifier from the resource id .
returns the relative path from the resource id .
returns the relative path of a resource id .
extract the id from the resourcename .
returns the name of the resource id from the resource id .
returns the type of the resource type from the resource id .
creates a new resource id from the specified resource group .
use this api to fetch the statistics of all resources that are configured on netscaler .
use this api to fetch statistics of resource of given name .
validates the given parameter type parameter or { @code null } if the parameter is not present .
get all the data structures that are returned by the user s id .
/ * ( non - javadoc )
deletes the specified bucket .
returns an input stream for the given key .
retrieve an input stream for downloading the data from s3object .
write the xml to stdout

returns the node representation of the node ( except the node ) of the node .

the tree of child nodes ( latest taxonomy )

the dependency tree for the tree .
returns the descendant tree of wordnet tree .

set the file name of the .
returns the field value for the specified name .
get the field name from the header .
sets the value of the property to the request .
adds a property to this node .
returns the property value for the given key .
returns the list of properties for this request .
sets the factory factory to use . this method is used to set the value of the { @code handler } method .
returns the content handler for the given content type .
returns the {
find the content handler for a given type .
convert the content of the given type to a package name .
returns the for the package of the current user .
reads the content type from the given stream .
read the next from the inputstream .
read len bytes from stream
skip the forward - length number from the input stream .
use this api to create .
use this api to fetch resources of given name .
run the connection .
closes the connection .
use this api to fetch a resources .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
gets the definition of the node type .
returns the named property for the named node .
check if the node is child node type .
check if node is not set
checks if the node type is open or not .
determine if the given type is a namespace node or mixin .
{
{
adds a list of nodes to the list of descendants of the given type .
{
unregisters the node type from the repository .
{
{
/ * ( non - javadoc )
this method is called to generate a field from the given field .
get the values of the given object and return the values of the given object .
returns the offset of the entry to the given offset .
returns true if the bits of the file is a binary file .


create a bean instance from a bean
use this api to fetch resources of given name .
returns the default value for the given type .
remove the last entry entry .
{
iterative heapify down to the tree entry entry .
iterative - area / sup > - demoting trees .
returns the object associated with the given key .
returns the priority of the entry .
adds the specified key to the list of contained key .
adds the specified priority .
returns true if the key is not present .


resolves the value of { @code } to the given { @code } .
finds all matching matching matches .
creates a new context for the given {
adds instructions to the summary instructions .
add a class type .
checks whether the given { @link } annotation is annotated with the { @link } annotation .
/ * method to set the name of the for the field name .
initializes the default scope for the given annotation type .
creates a new instance of { @link } .
reload the resources from the disk .
adds all elements to the target collection .
concatenates the given { @code iterator } into a single { @code iterator } .
use this api to fetch a resources .
use this api to fetch filtered set of resources . set the filter parameter values in filtervalue object .
returns the sample sample of the specified sample .
update the value of the given stochastic value .
use this api to fetch resources of given name .
checks if the class is annotated with the given class .
creates a new instance of {
returns a {
use this api to fetch resources of given name .
this function is called by the {
add a new attribute to the list of attributes .
add a literal attribute to the list of variables .
set the xml pull for the given datapoint type .
returns the attribute of the given namespace .
return the representation of the namespace .

use this api to clear .
get the value of the attribute as a string .
use this api to renumber .
returns true if the uri contains the prefix .
resolves the prefix to the namespace .
checks if the prefix is not valid .
/ * ( non - javadoc )
get the extension prefix for the given extension .
checks if the prefix is a prefix of the given uri .
this method will return the content of the xsl : type attribute .


creates a localdatetime .
creates a new { @code localdatetime } from a local date - time .
obtains an instance of { @code localdatetime } from a temporal object . <p > this instance is immutable and unaffected by this method call .
obtains an instance of { @code } from a temporal object .
create a new { @link localdatetime } that will set the time to use for the given date and time .
returns a value for a field . <p > this queries this time as the field value for the specified field . the returned value will always be within the specified field . the field is cached for the field or the value returned by the { @code date } . if the field is not supported by the field such a time
returns a copy of this date - time with the specified adjuster strategy . <p > this returns a new instance of this instance with the time adjusted . <p > this returns a new instance of this instance with the time adjusted . <p > this returns a new instance of this instance with the time adjusted . <p > this returns
returns a new value for the specified field . <p > this returns a new instance of the field with the specified field . <p > this queries this one by one or more the field s values . <p > this returns a new instance of the field with the specified field . if it is not possible to return a new
returns a copy of this { @code localdatetime } with the given hour and year and offset .
returns a new { @code localdatetime } instance with the specified date - time as the time of the specified time period .
returns a new { @code localdatetime } that will be updated to the second time .
returns a copy of this { @code localdatetime } with the second { @code zoneoffset } .
returns a copy of this datetime with the specified amount added . <p > this returns a { @code localdate } based on this one or more days than this period . the calculation will subtract the specified amount in terms of the specified amount added .
returns a copy of this datetime with the specified period in years and then the date - time .
returns a copy of this datetime with the specified period in months . <p > this method is equivalent to calling { @link ( date temporalamount ) } .
returns a copy of this datetime with the specified period in weeks . <p > this localdatetime is equivalent to calling { @link ( date ) } .
returns a copy of this datetime with the specified period in weeks . <p > this method is equivalent to calling { @link ( date date object ) } .
returns a copy of this datetime with the specified amount subtracted . <p > this returns a single { @code localdatetime } that will be converted to this period . note that this returns { @code money1 - > minus } ( the period of the period of the { @link period } is { @link period } or { @link period }
returns a copy of this { @code localdatetime } with the specified number of years subtracted . <p > this localdatetime instance is immutable and unaffected by this method call .
returns a copy of this { @code localdatetime } with the specified number of months subtracted . <p > this instance is immutable and unaffected by this method call .
returns a copy of this { @code localdatetime } with the specified number of weeks subtracted . <p > this localdatetime instance is immutable and unaffected by this method call .
returns a copy of this { @code localdatetime } with the specified number of days subtracted . <p > this is equivalent to calling { @link ( temporalamount ) } . <p > this method returns a single { @code localdatetime } instance where the day is less than the second and then returning a new object which is then converted to
/ * ( non - javadoc )
calculates the amount of time between two values . the start and end points are { @code this } and { @code zoneddatetime } and { @code zoneddatetime } . the result will be before the end date - time . <p > this calculates the amount of time between two values . the start and days between two start date is the
format the given date and time string .
/ * ( non - javadoc )
compares this local time to the specified instant .
/ * ( non - javadoc )
sets the value of the { @link } annotation .

/ *
use this api to add filterpolicy .
use this api to add dnsaddrec resources .
use this api to update .
use this api to update gslbsite resources .
use this api to fetch all the resources that are configured on netscaler .
initializes the .
update the font chooser for the font .
process the operator detecting the rule .
ends the text .
returns whether the given { @code } is a bidi substructure of the given { @code } .
/ * private void ( double ) { = . ( ) ;
transform the transform .
transform the given coordinates in the document .
returns the value of the given value .


use this api to fetch resources of given name .
add a window to the activity .
compares two numbers .

clear the file .
checks if the specified parameter is a null empty or empty or empty or empty or empty or empty or empty or empty or empty or empty or empty or empty or empty or empty or empty or empty .
creates a new { @link } .

returned query parameters -----------------------------------------------------------------------------------------------------
use this api to update .
use this api to unset the properties of resource . properties that need to be unset are specified in args array .
use this api to fetch all the resources that are configured on netscaler .
{
resets the queue .
find the first match .

enter a block of the current stack with the given name and type .
get the current xaresource connection
gets the for the given access token .
{
checks the given type .
returns whether the given {
process the {
-------------------------------------------------------------
-------------------------------------------------------------
-------------------------------------------------------------
toggles the widget tab .
get the list of {
returns a list of objects from the given list of values .
get the cursor indexes for the given list of .
/ * ( non - javadoc )
returns the transaction info for the given <code > / code > .
check if the given node exists .
wait for the future to be processed .
get the total number of cache versions .
get the cached value for a given
get the total number of cached versions
get the cache for the given entry .
get the total size of the cache .
get the meta type from the meta interface
get the applicationname .
verify that the application name is valid .
sets the connection timeout .
gets the timeout timeout .
returns the name of the password .
add a new { @link } to the builder .
add { @code } to { @code } .
clear the {
set the transaction isolation level for the specified time unit .
print the value of the <code > / code > .
check if the current user has the password .
check if the table is valid .
check if the connection is valid .
get the configuration of the client .
sets the default configuration .
get jobs for the given history
parse nodes to extract nodes .
<p > . < / p >
returns the generic types of the given { @link } .
sets the description of the description .
generate the hardcoded part of the .
generate a multipart line from the .
generate a list of data data type from a dataset of data type .
get the data types for the current user .
returns the set of data types that are currently in the given set .
get the view pageid for the given view
get the view at the given parent position .
returns the resource status of the xhtml resource .
return the current .
returns the image for the image .
execute the function . the function must return a valid object . @param xctxt the current execution context . @return a valid xobject .
returns true if the given interval is not a longitude of the given interval .
deserialize this object from the pof stream .
{
clones this hstring .
apply a new particle onto the circle
apply the specified number of blocks to the specified { @code position } .
calculate the ellipse between two points
get the number of particles that should be used for the given velocity and radius .
creates a object .
adds a list of entities to the list of entities that have been added to the list .
adds a new list of to the list of mappers .
removes the casts from the list of protein objects .
builds a build rule .
returns the collation element that matches the given source .
resets the current release .
{
sets whether or not the current matrix is composited to the other .
sets whether or not the current state is not greater than the current settings .
sets the default default default default value .
compare two types .
sets the default default level .
sets the default default font to use for the current settings .
sets the default default size .
sets the default .
set whether or not this control is a .
sets whether the compressor should be displayed .
sets whether or not this control is enabled .
/ * ( non - javadoc )
{
set the maximum variable .
returns the class for the given models .
loads the models of the given model class .
checks if the bundle is a model model model .
extract the class name from the url .
sets the variable name .
set whether or not this is a boolean .
sets the .
returns the rule for the current user .
{
this method will be called to add the top - level variable to the top - level methods .
add a new representative element to the top of the top of the top of the top of the top of the top of the top of the top of the top of the top of the top of the top of the top of the top of the top of the top of the top of the top of the top of
gets the version of the mpeg version .
get the version information .

/ * ( non - javadoc )
/ * ( non - javadoc )

compares two strings against the given character sequence .
returns the locale for the given type .
convert the input string to string representation of the given type .
checks if the url is a valid .
read a { @link } file from a file .
writes the given { @code instrumentation } to the openfst { @code } .
return the host name of this host .

check if the given { @link denominator } is present .
converts the given { @code } to a string builder .
converts the given { @code } to a string .
converts the given prefix to a string representation of the prefix ( e . g . ) .
/ * ( non - javadoc )
returns the longest subsequence of the first n gene in the given sequence of the given .
returns the prefix of the block prefix .
{
deserialize this object from the pof stream .
check if the address is valid .
validate length of the given .
compares this <code > / code > to this <code > / code > . <p > this method is designed to be modified by the same order as the { @link #equals ( object ) } method . the comparison is performed by the { @code } . < / p >
returns true if this set is a prefix of the given { @code } .
checks if this relation contains this address this method is not public or not .
returns the address of this address .
/ * ( non - javadoc )
convert this address to a { @link address } .
adjusts the prefix of the segment .
adjust the prefix to be used for the address .

parse a delimited list of strings and returns a delimited string .
returns the prefix of the cidr address of this ipv6 address .
update the domains of the update .

dump the contents of the dump .


dump the data to the output stream .
generate the row col .
dumps the levels of each of the group - > - - - :: :: = ( | | | | | | | | | | | | | | | | | | | |
/ * lookup classcastexception class .
set the date format .
sort the list of elements in ascending order .
sort the list of {

transform the given { @code } into a { @code list } .
returns true if easter dates in days .
append the given string to the end of this one .
add this client to the target table .
appends the specified object to the end of the list .
append the append to the end of the object .
append the string to the string builder .
appends a string to the end of the string builder .
append the current colour to the specified output .
append the value of the specified object to the stringbuilder .
append a string to the end of the list .
append segments to the end of the list .
appends the given {

returns the content of the segment .
split a text line into a list of lines .
replies the double value of the two given double double double .
the binary <code > / code > operator . this is the equivalent to the java <code > / code > operator .
the binary operator to convert a value to a double .
the binary <code > / code > operator . this is the equivalent to the java <code > / code > operator . this is the equivalent to the java <code > / code > operator .
left - multiply { @code left } - and { @code right } .
returns true if the left - handed or - right value is { @code left } or { @code left } and right .
a left - to - right - one or - strict - 1 .
loads the keystore file from the given file .
persist the store file to the storage .
returns true if the left - handed and greater than or equal to <code > &gt ; &gt ; < / code > .
create a right - handed java <code > / code > operator . this method is the reverse of the left - &gt ; this operator is left to the right - hand side .
initialize the .
sets the value of the specified index in the specified vector .
pushes a new value to the top of the list .
this method will perform instructions and propagate the view to the top - level frame .
merges the specified frame with the specified { @link } .
gets the organization .
gets the organization .
get the organization of the organization .
gets the event from html .
get a json object from the given url .
gets the configuration from the given html .
get a configuration instance .
reset the current position .
reset the current position to the start position .
resets the characters to the specified char array .
resets the character to the beginning of the character .
resets the given string to the given number of characters .
reset the internal string to the given string .
returns true if the block is a line or line number .
returns true if the script is reshaped .
returns the lowest index of the first occurrence of the token .
throws exceptions if the exception is null or throws exception .
execute the mojo .
get the uri from uri
returns the network type for the specified {
checks if the device is connected to a wifi connection .
read the given url from the given url .
read string string from url
read string list from stream .
read string list of filepath
returns an input stream to read the given encoding .
converts a inputstream to base64 .
writes the given collection to the specified output stream .
skips over the input stream and pushes the given input to skip .
read a string from the input buffer .
reads the specified length from the input stream .
reads the next byte from the input stream .
reads a number of bytes from the given array .
read the entire input buffer from the given reader .
read the entire contents of an array of bytes from the input stream .
reads a string from the database .
read string representation of the data from the input stream .
read string from string .

write a stream to a stream .
write a stream to a stream .
writes a stream to a stream .
write a stream to the file .
get the filename of the file path .
returns the file name of the file .

returns whether the file path is a directory or directory .
check if file is a file .
check if the given path is a folder .
delete a file
get content digest .
check if the configuration file is a valid selenium configuration .
encodes a string into a string .
decode the string with the given string .
this method is called to implement the super method to implement { @link ( int int ) } .
returns all methods of the given class .
tag :: [] []
get the encoder for the given media type .
check if the character is a valid character .
returns a filter that matches the given filter .
/ * ( non - javadoc )
/ * ( non - javadoc )
appends the specified character sequence to the tail of this class .
returns the number of nodes in the given node .
returns the last element of the tree .
extract the escaped escape sequence from the sentence .
add a cookie to the url .
get the nonce for the given time .
/ * returns the string base name of the specified request .
returns the string value from the given key or { @link } .
get a boolean value from the given key .
returns an integer value from the string representation of the string .
retrieve a long value from a string .
returns a list of {
update key value value .
check if the value is a valid value .
this method will process the given namespace and returns the corresponding namespace .
this method is called to write the current namespace to the namespace .
this method transfers the character at the end of the buffer .
replaces the text of the specified text with the given text .
replaces the characters in the string with the given indices .
copies the specified range of text to the end of the target object .
sets the current node owner .
validate this node .
returns the name of the field name .
shut down the running application .
check if the given activity is a valid activity id
get the for the given .
get the for the given .
get the list of projects that are available for the given platform .

returns the decimal digits for the given integer .
advance to the next char of the next token .
set the attribute value .
get the attribute value .
delete the attribute value .
return an enumeration of names of attributes existing within this attribute .
creates a string for the given .
this method is used to get the ntlm proxy for the server .
check the configuration to be used .
activates the service - only service provider .
generate a report for the given .
create a new for the given file .
creates a new for the given suite and .
create results from the file .
creates groups for the given set of groups .
create log log for a file .
sorts the keys in the map .
recursively recursively recursively recursively adds resources to the given directory .
creates a new instance of { @link } .
creates a deployment context .
returns the string representation of the string .
evaluate the given expression .
returns true if the search is a descendant of the end of the tree .
this function is used to fixup variables from qnames to stack frame indexes at stylesheet build time .
creates a new deployment .
create a deployment for the given url .
create a new path for the given packages .

add a new property to this node .
remove a property from the specified property .
sets the value of the values in the collection .
updates the properties of the db .
get the { @link partition } for the given partition .
generate build module .
find manifest file .
check manifest path to
this method returns the dictionary for the specified .
sets the method to the method .
sets the variable names for the variable names .
invokes the given { @code } .
adds the specified result handler to the result handler result handler .
adds the result handlers to the results .
builds the stage of the validator .
initialize the builder .
gets the path of the module classpath .
extract the version of the given string in the form of the string .
/ * ( non - javadoc )
send a { @link net . dv8tion . jda . core . webhook } to be sent to the client .
load the icon from the given class .
sends a message to the client .
check if the operator matches the query .
remove the query parameter list .
creates a filter that uses the given date query to the filter that the provided field is a collection of documents .
checks if two values are equal . <p >
generate the output file for the given file .
updates the status of the given update .
show a select box .
add a extra info to the sharedpreferences .

convert a string to a json string
{
converts the given { @code } to the beam { @link } .
writes the output of the channel to the output .
/ *
sets the value of the attribute to the value of the specified value .
{


update the repeat number of the number of mismatches in the given sequence .
update the repeat number
this method is called by the to make sure that the is not already in the response .
update the code
remove a new from the database
this method will be called when a group is created .
creates a place holder from the given place holder .
disables the for the given
disable all in the
returns the list of endpoints that are not a list of endpoints
get the current method index of the given id .
get the endpoint information from the endpoint
get the id id for the method
perform the advanced actions on the specified activity .
rbac
this method is called when the user clicks on the session s subtrees .
checks if the given intent is allowed to be installed .
checks if app is a valid package signature .
calculates the size of the size of the specified size .
calculates the amount of days between the given skip and size .
creates a { @link } from the given { @link } .
creates a new { @link } from a { @code } .
invokes the method .
start the dialog . <p >
request an occupant auth token from the ccow app .
alias for { @link ( string accesstoken ) } .
create a new instance of sitemapgenerator
performs a request to the specified path .
sets the session .
returns the session id . if the token is not authorized it returns null .
returns the access token .
get the access delivery to the remote expiration .
set the access timestamp to the timestamp of the current epoch .
set the access to the current expiration time .
sets the app id .
sets the token cache .
set the access token .
returns the for the given index .
/ *
hashes a given station id
get list of servers from a group
get the redirect redirects
get a list of servers from a group
add a server profile to the server .
add a server to the server .
add a server group to the database .
set the group name of the sql statement
{
set the url of the url
set the host header
delete the given
delete the
get the profiles for a server
check whether the given server name is active .
add a length of the given length to the list of interfaces .
add a new length for the given length .
<p > get / update / / / . 1 . 1 . 1 / / /
<p > get part of this fragment . < / p >

/ * method that will generate the uri for the pattern .
/ * method that serves simple controller methods .
generate a string with the given id and controller .
get controller path .
get the controller path of the controller .
this method returns the name of the part - specific variable name .
/ * returns the package name of the package .
splits a string into a string array .
returns the attributes of the session .
get the stream as string .
register a tag with the specified tag name .
opens a file descriptor for the given path .
reads the number of bytes from the stream .
writes the byte array to the underlying stream .
this method is used to parse the contents of a node and optionally its children .
this function is used to validate the value of the metric .
execute the given node with the given source .
find the first element of the given node and return the list of nodes .
return the first one or the result of this method or the result of the search expression .
returns the number of nodes in the given node . <p > the resulting iterator must be encoded as a string or a node which is returned . <p > the returned iterator must be a string or a descendant of the node . <p > the resulting iterator must be encoded as a string or a node which is returned as a
get the number of occurrences of the given string .
return the previous node that matches the given position .
<p > find the target node of the target node . the target node must match the target node or the target node is the target node .
return the first matching of the given node .
get the locale .


extract the formatted number of strings from the string .
get the number of occurrences of a numeric value .

calculate the number of days in the face of the given .
find the index of the c ++ c .

checks whether the regex matches the regular expression pattern .
splits the given input sequence into substrings .
quotes quotes and quotes .
get the selection type for this annotation .
gets the selection selection .
returns the list of annotations in the annotations .
get the action action .
returns the action action .
returns the tag .
returns the action action list .

returns a new instance of this class .
creates a new instance of the class name .
returns a list of all instances of this instance s collection .
process the selection map and return the results for the columns .
serialize the fields of the given object to the list of objects .
{

creates a new thread to create a new thread .
create a new instance of the given object .
returns the number of for the given element .
invokes the identifier for the given stax operation .
<p > . < / p >
get the results of the node .
returns an instance of the { @link } for the given infix - iterator .
returns an iterator that converts the result to <code > / code > .
returns an instance of the .
makes a graphql operator for the given operator .
returns a typed object represented by this object .
tell if two other circumstances are equal .
check if the two converters are equal .
/ * ( non - javadoc )
log a warning message .
<p > log a message with the <code > error< / code > operation . < / p >
cast a string to an array of strings .
/ * ( non - javadoc )
{
creates a new mina channel .
creates a new mina packet .
handle a new { @link } .
called by {
called when the {
this method will process a { @link } from a { @link } .
called by the { @link } to handle the { @link } .
handles a close event .
called by {
called when the input is received .
called when the input input is available .
sends the given output to the output file .
writes the output to the output output stream .
close the close event . closes the close event .
closes the input stream and sends it to the end of the list .
{
get the node of the node at the given index .
{

find the index of the first index in the table .
find the node index for the node at the given index .
find the node at the given index .
inserts the node at the given index .
traverses the node and returns the index of the node .
find the smallest common common ancestor of the given index .
adds a new to the tail of the data .

find the number of nodes in the tree

returns all resources of the given class .


/ * ( non - javadoc )
get the metamodel of the tree .
returns the distance between the two values .
replies if two points are equal .
replies if the given point is inside the two - order .
replies if two terms are equal to another .
replies the value of the two - occurrence whereas the two steps decrease .
compare two values .
replies the identifier of the segment .
replies the identifier for the given point .
replies the id of the lead id to be used .
add listener to registered {
removes the listener from the list .
notify listeners that the listener is notified about the event .
replies the id of the given shape .
this method is used to retrieve the value of the property .
encode a string into a string .
checks whether the target type is assignable to the target type .
called when the object is deserialized .
set the child node .
set the child node .
replies if the child node is child .

log a message at the info level .
returns an object of the object that is identifying the specified key .
{
returns the object associated with the specified key .
restore the contents of this object .
constructor .
set the record that owns this listener .
parses the options from the given { @code options } options .
/ *
check if the given charsequence contains a valid xml string .
links the link to the front .
links the current node to the end of the list .
inserts node to the given element .
unlink the first element from the tree .
unlink the last element from the list .
unlink the first element in the tree .
returns the first item of this element .
returns the last item in this list .
remove the first node from the list .
remove the last node from the list .
remove the first item from the list .
inserts all nodes of this node into the specified collection starting at the specified position in this collection .
clears the topmost element .
replaces the element at the index of the element at the index of the element at the index .
adds the element at the specified position in this list .
returns the index of the first node which is the first one .
finds the first element of the first item in the list .
finds the last occurrence of the specified element in this list .
returns the index of this node .
returns the first item of this node .
returns the first item of this node .
returns the last item in this list .
returns the first item of this node .
returns the last item in the deque .
removes the last occurrence of the specified element .
returns an array containing the elements of this node .
returns a new array containing the specified values . the returned array is that the sequence of the specified array is not empty .
serialize the state of the given object to a stream .
reconstitute the <code > / code > instance from the stream .
open the file at the specified path .
dissociate this temp block .
returns the position of the data .
checks if the shared table is a shared table entry .
associates the specified value with the specified key . this method is equivalent to calling {
inserts the specified value into the specified map .
removes the mapping from the specified object .
clears all entries from the queue .
returns whether this map contains a mapping of this key .
returns a set view of the mappings contained in this map .
replies if the given string is a regular expression .
encodes the given number of characters to a string .
replies the value of the property .

replies the text of the document .
replies the string representation of the text .


replies the character .
replies the current character of the specified text .
replies the translation table of the current anchors .
remove the specified text from the current translation .
transform the string into an array of strings .
split the given string into a single line .
transform the given string into a list of { @link } .
split a separator around a separator .

replies the uuids for the right character .

merges the given string into a single string .
join the given string with the given separator .
join the given text into a single string .
join the given { @code throwable } to a string .
join a string containing a single string .
joins the given string to the given string .
the first parameter is the first occurrence of the given string .
the <code > / code > operator .
convert the text to lowercase .
transform the time to a { @link } .
the length of the string to the unix - time range .
returns a simple width of a given double .
finds the of the two parameters .
convert a text to a java string .
convert a text to a json string .
returns a { @link spliterator } for the given { @link spliterator } .
returns the current context context for the given context .
get the instance for the free state .
get the singleton instance of the .
get the current { @link } instance .
registers a new channel to be satisfied . <p > this method will be called by { @link } and register it to the channel .
register a new session .
visits a type declaration of type declaration .
{
report a single expression which is not a boolean .
{
{
condition for true< / code >
{
{
{
get the coverage data data data structure .
this method is used to parse project id from project project .
process the version of the configuration .
set the connection datasource .
scan packages for the given packages .
checks whether the filter predicate is true or not .
/ * ( non - javadoc )

load the options from the given { @link option } .
replies if the passed file exists .
get the document root level for the given node .
returns the root node of the node .
start the document .
/ * ( non - javadoc )
add the value to the .
move the current sliding window to the current state .
creates a new using the given path .
compares two objects .
compares the given one against the specified object .
adds a { @link } to the database .
add a { @link } to a { @link }


calculate the color of the green pressed color
/ * ( non - javadoc )
{
replies if the current wms is a temporary layer .
replies the value of the values of the values .
replies the values of this field .
replies the values of this list .
pushes the current context onto the current stack .
pushes a new cdata section onto the dom .
clear the password of the password .
returns all profiles of the given project .
create a new { @link } from the given maven project .
reads the given filename from the given filename .
get the name of the file name .
quote the string with the given string .
quote a string .
replaces the characters of the given string with the replacement of the replacement string .
generate a string representation of the class name of the class .
sets the point to the point .
sets the position of the element .
set the point to the capsule .
set the point to the point .
set the z coordinate of this bezier segment .
sets the normalized point of the envelopes .
set the properties of the capsule .
this function calculates the orientation of the element in this group .
replies the pivot pivot mesh .
sets the pivot pivot point .
{
sets the proximity .
create a new file in the given project file .
registers the consumer for the given { @link } .
compile the input files .
/ * get the list of unread resources in the given type .
gets the compiler .
send a message to the client .
checks the options of the given .
checks the proxy parameters of the given proxy .
/ * processes the given .
resolves the key for this key .
get the key for this key .
{
set the y - coordinate of the plane .
set the second points of the box .
set the value of the matrix
gets the pivot number of the values .
parses the string and returns the string value .
encodes the given string using the utf - 8 encoding .


the given url to the given url .
replies the url of the file .
get the jar file containing the given url .
get the url of the jar file .
this method returns the { @code url } of the given jar file .
replies the url to be the given url .
replies if the system is a valid filename .
replies the url of the file .
replies the url of the file .
replies the unicode string for the given filename .
replies the string for the given filename .
replies the unicode basename of the given file .
replies the basename of the file .
replies the current xtext of the given filename .
replies the basename of the given filename .
replies the short name of the file .
replies the dot of the given filename .
replies the extension of the file extension .
define a class .
define a class .
this method returns the protection domain for the codesource .
replies the sarl content of the given file .
replies the list of filenames for the given filename .
replies the path of the file .
splits the given filename into a single string .
join the given directory to the specified directory .
join the specified file to a directory .
create a vulnerability from the path .
a general method to traverse the given url of the given url .
replies if the given filename is a file extension .
remove the extension from the file .
replies the extension extension of the given filename .
replaces the extension of the file to the given filename .
replaces the extension to be used as a filename .
add a file extension to the file .
creates a new url extension for the given extension .
deletes the file from the specified file .
copy the given file to the given directory .
copies the file to the given file .
copies the contents of the specified inputstream to the specified output stream .
replies the file name of the user directory .
replies the user - agent name of the system .
replies the file name of the file .
replies the user name of the directory .
replies the system configuration file .
replies the system filename .
replies the system os system os system name system .
replies the filename of the file to the given filename .
replies the xml representation of the given url .
replies the url of the given url .
replies the url for the given url .
replies the file name of the file .
creates a new absolute url to the given file .
create a new absolute path from a file .
replies the absolute path to the given file .
replies the url to the given url .
replies the path of the path to the given filename .
replies if the file name is a windows .
replies the filename of the file s path .
replies the url of the file .
replies the file referred to by the given path .
create a relative path from a file .
replies the file referred to by the given filename .
replies the url of the given url .
zips the given file to a file .
zips the file to a file .
unzip a zip file to the given output stream .
unzip a file to a file .
create a temporary directory with the given prefix and suffix .
creates a temporary directory .
fills the list of nodes with the specified node .

convert a string to a json string .
execute the function . the function must return a valid object . @param xctxt the current execution context . @return a valid xobject .
defines the entity for the entity name .
get the output string for the given character .
replies the array of listeners .
add a listener to the list of listeners .
remove listener from the list .
writes the specified object to the stream .
get the character info for a given file
<p > . < / p >
set the word to be in the given order .
get the next word .
checks if the given output is not present .
set the mapping of the given input string .
get the uri of the uri .
create a response for the http request .
returns the result of the response .
this method will update the of the and updates the .
create a new solution that is a right - handed instance of the left - t .
multiply the result of the two - step operands on the left .
multiply a dot product with the right operands .
computes the left operand of the two given two three values .
performs the right - side transformation of the two matrices .
clamp the value of the given range to the minimum value .
the value is normalized to the given value .
the value of the value { @code double } is equal to { @code value } .


compares two doubles .
compare two doubles .
get the maximum value of the given double value .
/ * ( non - javadoc )
grants certificate constraints .
performs the upgrade policy .
returns true if the inputed extension is installed .
/ * ( non - javadoc )
checks if the certificate is authenticated .
adds the cert certificate from the certificate to the { @code x509certificate } .
get the maximum value of the given float .
get the maximum value of the given <code > i< / code > .
get the minimum value of the given double value .
get the minimum value from the given values .
the trigonometric function .
the trigonometric color of the trigonometric function .
the trigonometric function .
clamps the value to the min value to be centered from the given interval .
helper to check if the given value is closer to the closest bounds .
/ * computes the code of the given .

calculate min max max value .
static method to convert a signed point value to a y .
{
/ *
add a new to the list of .
counts the number of occurrences of a node .
/ * search for a text in the given text array .
convert a tuple to a real quaternion .
parses a literal literal .
returns the next occurrence of the specified character .

returns the value of the nth character in the specified position .
set the container to be used for this container .
get the top container container for this container .
replies the uuid of this person .
compute the final { @code } and { @code elevation } for the given { @code } .
{
{
{
{
{
returns the index of the row in the column .
/ * ( non - javadoc )
set the .
gets the pivot pivot pivot move from the pivot .
sets the pivot point of this quaternion .
{
ensures that the given length is the same as the given offset .
reads a byte array from the serial data .
reads a buffer from the buffer starting at the tail of the buffer .
read a line of bytes from the buffer .
returns the comment at the end of this comment .
returns the entry for the specified entry .
returns an input stream for the given zip entry .


returns the zip entry entry entry entry entry .
close the underlying stream .
li2281 . time
main entry point for debugging .
execute the given { @code printstream } .
/ *
removes the mapping from the head of this deque to the specified key .
{
sets the strength of the given value .
get the attribute value for the attribute .
get the attribute value for the attribute .
gets the comment of the specified image .
add a rule to the transition .
/ * ( non - javadoc )
{
{
get the raw offset of this timestamp .
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
compares this rules to another
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * this method is called from the implementation of this method .
finds the offset of the given time and sets the time to the given time .
finds the rule for the rule .
returns the transition time for the given time .
gets the delta of the given time - in - sequence .
/ * ( non - javadoc )
sets the http headers for this request . if the headers are not specified this will be the request headers .
add a new request to the request .
sets the parameters of the parameters .
adds a jsonobject to the request .
sets the request body .
sets the request body body . this method is overridable instead of the request .
sets the basic auth authentication scheme .
send a new request to the server .
sets the current user s account .
find the for the
sets the list of all the resources to the specified list of .
{
defines the package - name and the package of the package .
find the resource that matches the given name .
finds the resources that are resources that are contained in the given <code > url< / code > .
/ * ( non - javadoc )
create a new instance of the specified class .
print the stack trace of this stack trace .

/ * package
removes the first element from the list .

adds the specified element to the list .
checks if the given element is the first one .
finds the first index of the first quantile .
returns the index of the first point of the given element .
determine the index of the index to the given sort level .
returns iterator array containing iterator of the given list of reverse iterator .
generate a list of report for the report .
wait until the current device is not a valid docbook .
returns a predicate that returns true if the predicate evaluates to true .
returns a {
list elements that are comparable according to the rules of the item .
returns a new that provides examples of lists of items in this list by using the specified comparators .
returns a { @link } containing all items in the list .
returns a { @code } which is a topological sort of the two { @code ordering } and { @code } .
returns an immutable map of the elements of the { @link } .
sets the value of the given key .
returns the value of the given key as a string .
call a service callback on the given url .
call a service callback on the given url .
perform a post request on the specified url .
sends a http post request to the http response .
sends a file to the wsapi
uploads the http response file .
adds a template to the response .
adds a put request .

<p > . < / p >
redirects to a string
execute the http response .
{
redirects to the given url .
put head to the http response .
delete the given url .
performs a delete request .
returns the html for the html for the html for the html .
handle error .
forks a program with the given parameters .
get the url of the file
gets the path of the url .
add a cookie to the client .
encode the data from file to hdfs .
creates a binary file with the given name and filename .
redirects to the specified url and sends it to the given file .
put the http response into the wsapi
build a httpentity of multipart / file / file
build the httpclient .
execute the function . the function must return a valid object . @param xctxt the current execution context . @return a valid xobject .
transfers the model to the given value .
parse a properties string into a string .
convert properties to properties .
return the value of the character specified by the character set .
returns html html for the specified html string .
this method is used to get the red red / sub - document literal .
dispatches an xml comment to the specified handler .
dispatch a string to the end of the string .
replaces the characters in this string array .
compares two strings lexicographically .
.
returns whether the specified submatrix is at a specified index .
/ * this method is called to check if the string is a whitespace or a string .
set the list of field that will be used to interpolate the value of the field .
set the value of the object to the value .
set the value of the field to the timestamp of the given field .
set a property to be used to determine the value of the field .
set the value of the field .
set the value of the field .
set the value of the field to the date .
set the value of the field .
set the value of the field .
set a double value to the list of field that is equal to the given value .
set the session to be used .
get the value for the passed session .
returns the session scope .
get the session scope .
invalidate the session .
create a new { @link } instance from a { @link httpservletrequest } .
create a new { @code } from an arbitrary { @code observer } .
create a new { @link } that will be used for the given action .
creates a new { @link } that combines the given action and returns the resulting { @link } .
create a new double from an arbitrary { @code } .
add a request to the request scope .
remove a single request from the request .


check if the passed string is a valid email address .
check if the specified string is a valid .
parse the given request from the request .
get an iterator that contains the given request .
the trigger method .
set the state state of the trigger .
store the specified calendar .
remove a calendar from the given calendar .
get the <code > / code > objects from the <code > / code > object .
<p > get all the trigger keys whose keys are the <code > values< / code > ( <code > / code > ) . < / p >
get the current state of the given trigger .
pause the trigger .
recovers the group to be used for all the group .
pause all jobs
resume the trigger .
resume the trigger .
resume the job identified by the given <code > / code > .
returns the next character in the code point .

/ * constructor - get the compiler operator .
clones the given cloned object .
returns the clone of the given type .
detach the root object from this context .
set the root element of the treewalker .
get the next node in the tree .
get the next node in the tree .
get the last part of the search
call a function call .
escape the characters in the given string .
set the custom path to the user
get the context path for the current context .
clear the context path .
reads the next byte from the stream .
read the boundary of the packet .
set the boundary of the boundary .
returns the header for the given multipart request .
read the data from the stream .
check if the input stream is not already in the stream .
finds the byte array with the given value .
find the index of the first half of the longest boundary .
/ * ( non - javadoc )
/ * ( non - javadoc )
skips over the given number of bytes .
add the passed rule to the model
/ * ------------------------------------------------------------
add a new rule to the passed in string .
add the passed css rule .
add the passed prefix to the rule tree .
handles the request multipart / form of the request .
get the number of filenames for the given string .
splits the line into the specified string .
gets the offset offset of the delimiter starting at the given offset .
trims the string of a string to a string .
trims the string to a string .
method to convert the line to the
check if the character is a multilinestring or a char array .

strips the string out of a string .

returns true if the given list contains empty elements .



get the request path for the request
get the request path for the request
get the value of the request
get the request for the request
get the string representation of the passed in request .
get the request path for the request
get the request cookies
get the base path of the servletcontext .
parse a reader from a reader .
converts a string to an integer attribute .
parse the json data from the input stream .
read the file length and calculates the file length .
get the full fp - count for the next .
returns the value of the specified {
get the next codepoint from the current row .
this method is used to compute the number of bytes necessary to be used for the given number of bytes .


writes the private key to the given file .
write the given { @link privatekey } to a { @link outputstream } .
finds the file with the given name and the file name .
find the file in the directory recursively .
write pem - pem file using rsa private key and pem format .
write the given { @link } to a { @link } .
main method .
<p > . < / p >
sets the resources of this jar .
returns the inputstream for the file .
fills the buffer with the specified buffer .
reads the next 1 - byte from the next byte from the stream .
/ * ( non - javadoc )
skips the specified number of bytes starting at the end of the stream .
closes the input stream and releases any resources .

dequeue the queue by browsing its index .
iterate over the elements in the array and upwards by the given array .
collapses the specified element and returns the index .
performs the given comparator .
inserts the specified element into this queue starting at the specified { @code target } . if the queue is empty then the queue is returned .
removes the item from the queue .
removes the element from this queue if this deque contains no more than one of the specified element .
removes all of the elements from this queue if it is present .
returns true if this queue contains only the element .
this method is called by the { @link } to honor the remote bundle context .
returns the registry for the given port .
clears the queue .
returns an array containing all of the elements in this queue .
returns an array containing all of the elements in this queue where the specified array is the size of the specified array . if the queue fits in the specified array it is returned therein . otherwise a new array is allocated with the runtime type of this deque . if the queue fits in the specified array it is returned therein .
serialize the state of this object to a stream .
readobject is called to restore the object .
get an entity manager .
copy the contents of the given stream to the given destination stream .
copy the contents of the specified file to the given stream .
{
write the contents of the given { @code inputstream } to the output stream .
normalize the path to a string .
returns the path of the authority to be used .
returns the prefix of the scheme .
find first char in the string .
checks if the request is enabled .
creates a new { @link cipher } with the given parameters .
creates a new { @link cipher } for the given algorithm .
factory method for creating a new { @link cipher } from the given string . <p >
factory method for creating a new { @link cipher } from the given model .

this method returns the list of intervals for the given interval .
sets the start rule .
sets the start rule .
set the end rule set .
sets the end ending end of a day .
/ * [ deutsch ] <p > ermittelt die zum angegebenen . < / p >
compares this time to another zone . <p > this method compares the { @code localtime } to { @code false } . <p > this method compares the { @code localtime } to { @code false } . <p > this method compares the { @code localtime } to { @code false } . <p > this method compares the { @code
<p > . < / p >
decode the rule data .
this method is used to update the rules of the current day .
/ *
this method is called from the visitor to work properly .
/ * ************************************************************************* writeobject methods = generated / pc / struct / / serializable / / serializable / / frame serialization
/ * readobject
read the csv file .
initializes the list of blocks in the list .
add a block to the list of folders .
read the csv file from the input stream .
this function is invoked during the template .
find the extension for the namespace decl .
executes the given schematron phase .
get the value of a variable .
{
{
linearly interpolates a double in scale .
execute the function . the function must return a valid object . @param xctxt the current execution context . @return a valid xobject .
creates a from the channel .
this method is called by the ajax api to execute a single call .
creates a new { @code } instance .
create a new client that connects to the passed in server .
create a tokenizer instance from the tokenizer builder .
returns a web socket http response for the given input .
writes a { @code } to a { @code } .
creates a new instance of { @link } .
creates a new { @link } that will create a new { @code } .
print string .
prints the comments comment for each line .
converts a comment into a string representation .
checks the critical value if the hypothesis is a critical that is a critical value .
print string representation of the string representation .
returns the string representation of the specified { @code string } .
returns the argument for the given argument .


returns the string representation of the string representation of the specified type .
returns the string representation of the given primitive type .
generate a string representation of the argument .
returns the words of the given indent .
the main method .
method that returns the expression that is translated to the expression .
create or update a policy definition .
creates or updates the policy definitions in the specified account . the policy definition of a managed policy definition or replaces a policy definition .
creates or updates the specified policy scan policy definitions .
get the specified policy definition .
get the specified policy definition .
gets the specified policy definition .
get the list of available environments for the specified service plan .
gets a policy definition of a policy definition .
creates or updates a policy definition .
creates or updates the policy definition in the specified application .
creates or updates the policy definition in the specified application .
creates or updates the policy definition in the specified subscription provider .
deletes the specified entity definition from the specified tenant .
extracts the text from the page .
deletes the specified management group from the management group . this operation requires the delete permission for the management policy definition .
deletes the specified management group from the management group .
deletes the specified entity definition .
retrieves the policies for the given tenant .
gets the specified management policy definition in the specified tenant .
gets the specified management group for the management group .
gets a policy definition of a policy group .
get all the policy definitions for a subscription .
get the definitions for the specified resource definition .
gets all the policies definitions of the specified services providers .
gets all the policies definitions of the specified services .
gets all the policies definitions for a subscription .
gets all the policies definitions definitions for the specified entity group definitions .
gets all the policies definitions definitions in the specified subscription definition .
gets all the policies definitions of a resource definition .
gets all the policies definitions definitions in the specified subscription group .
gets all the policies definitions of the specified type definition .
get a list of text lines of string
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / > < / p >
add the { @link } instance to the list of lines . <p > this method is equivalent to calling { @link ( consumer ) } for each line .

returns the next token in the token .

overiding the method to create a view to the given view .
returns the mean bar for the given cluster id .
creates a new data subset of the given cluster .

estimates the variance of the mean .
calculates the mean value of the gaussian distribution .
set the key value pair for the given key .
set the number of dimensions to be used to set the number of rows in the specified number .
set the value of the template
set the passed css property as a header field .

calculates the p - p - p -
set the footer of the footer .
set the value of the
set the value of the parameter .
get the display name for the user name .
get the name of the user name .
get the name of the user name .
check if the critical value is .
create a new
{
{
{
load the object from the file .
{
{
{
{
create toolbar for all the given objects .
set the conversion settings for the given { @link } .
inline a css file .
set the inline mode for the script mode .
set the style spacing mode .
set the base directory of the base directory .
appends the given { @link string } to the output stream .
escape the string to escape characters .
creates a new dns network connection .
creates a new dns connection from the specified vm .
creates a new network from the specified vm .
gets the properties of the specified resource group .
returns the properties of the specified resource group .
returns the properties of the specified resource group .
updates an existing network tags .
updates the specified network tags tags .
updates a network tags tags .
lists all network endpoints within the specified resource group .
lists all network interfaces in a service .
list all the bulk deployments .
lists all network interfaces in the specified subscription .
retrieve the topology ethernet by the specified vm .
retrieve the topology ethernet topology associated with a specified vm .
retrieve the topology ethernet topology associated with a specified resource group .
recovers the agent from the specified vm .
recovers the ip address from the specified vm .
retrieve a vm connection from an agent .
recovers the ip address from the specified vm .
visit a class annotation .
recovers the ip address from the specified vm .
retrieve a vm connection from an agent .
retrieve the next hop from the specified vm .
returns the next hop from the specified vm .
returns whether the text of the pattern is a text pattern .
gets the next hop from the specified vm .
gets the next hop from the specified vm .
returns the next hop from the specified vm .
gets the next hop from the specified vm .
gets the specified resource .
gets the specified target .
gets the specified resource .
scrolls the element at the end of the list .
this is a recursive method that is able to display the element of the scroll box .
scrolls horizontally .
scrolls down the element .
gets a network sign for the specified resource .
returns an input stream to the specified specified connection .
returns the specified resource disposition .
gets the detailed content of the specified resource .
retrieve a specified network watcher .
gets the specified resource .
gets the specified network interface .
gets a network sign for the specified resource .
gets the result of an api resource .
gets the result of an api resource .
gets the result of an api resource .
gets the result of an api resource .
sets the log log entry for the specified resource group .
sets the log entry for the specified job .
sets the log log entry for the specified private key .
configures the flow logs .
configures the flow logs of specified job .
configures the flow logs .
gets a flow log entry .
gets a flow log .
gets a flow log .
gets the log entry of a specified resource .
gets a flow log .
gets the log log recorded information .
checks the given player holds the given resource to the given vm .
checks connectivity to the given vm .
gets the log log recorded links for the specified resource .
gets the logs for the specified resource .
checks the possibility of a specified vm connection is connected to the vm and then sets the current state of the specified vm to the vm .
checks connectivity by scheduling on the specified vm .
checks connectivity by running the vm resources .
checks the possibility of a specified resource group .
gets the details report report .
gets the details of a specified player reports .
gets the details for a specified location reports .
gets the details report report for the specified network watcher .
gets the azure dns report report for the specified file .
gets the details for a specified agent .
lists available provisioning of a specified vm .
lists all available provisioning resources available to the specified vm .
lists available provisioning of the specified vm .
gets the specified network snapshot .
returns all available azure policies providers to the specified trusted network .
gets the list of available provisioning resources providers .
determines the type of the agent type from the given { @code list } of type { @literal } .
get the program arguments of the program .
get the node arguments for the given node .
get the port number of the specified type .
get the agent number of the sre .
get the host name from the host name
get the path of the {
set the type of the snackbar .
set the radius of the radius .
set the registry .
set the current user s constructor .
set the for the passed in question mark .
set the current element of this builder .
validates the given map of approved .
returns a list of bytebuffers that are encodable in the given bytebuffer .
check if the request is a valid .
get the logged - in user name .
get the password for the passed udo object .
get the user name for the user .
set the login info level .
login
updates the transition with the value of the animation .
sets the current value of the current slider .



set the type of sql to sql .
method to select a select option .
select multiple option into a list of areas .
select the value of a select function .
select text to display label
select the cell at the given index .
select the values of values .
selects the labels in the labels .


returns the select options of the select box .
returns the label selected label .
returns the selected value .
returns highlighted labels .
returns the selected values .
returns the html for the element .
returns the content value of the document .
deselect the selected cursors .
deselect the select widget .
deselect the item at the given index .
deselect a new select box .
get the name of the probability of a list of datasets .

sets the status of the given task to the given message .
returns all rows in the sheet .
get sheet s data

returns the row row .
returns the row index for the row key .
resets the reset pointers to the table .
reset the cursor cursor .
creates a new parser instance .
read file content from the stream .

/ * ( non - javadoc )
add a level of the specified type .
move the current token to the next chunk .

read the data from this buffer into the specified position .
adds a subnode to the tree .
adds a new anchor .
remove anchor .
get the anchor of the anchor .
/ * ( non - javadoc )
write the slot for a single signal .

returns the next available queue or not .
/ * -------------------------------------------------------------------------------
generate the name of the iban .
initializes the announce announce announce announce response to the torrent .
/ * ( non - javadoc )
replace the given object to the given object .
sends the and to the .
{
multivaluemap .
{


/ * ( non - javadoc )
{
add a new element to the table .
assigns the specified object to the specified index .

returns the first one of the nodes in the tree .
returns the node - node representation of the node .
create a new instance of the given { @code } .
creates a new { @code } with the given object .
creates a new instance of the given object .


/ * package private
this method parses the input string and return true if the input is not found .
decodes the remark levels .
/ * check the character of the next { @code } .
handle the { @link } of the { @link } .
{
{
{

validates string string .
retrieve the identified type of given type .
retrieve a list of field types .
retrieve a list of named resource types .
gets a connection from the current resource .
gets an extended ip instance of the specified express route circuit .
gets a connection from the current express route circuit .
creates or updates the specified express route circuits in the specified express route circuits .
creates or updates the specified express route circuits in the specified express route circuits .
creates or updates the specified express route circuits in the specified express route circuits .
creates or updates an express route circuit connection .
creates or updates the specified express route circuits in the specified express route circuits .
creates or updates the specified express route circuits in the specified express route circuits .
gets all the express route information of an express route in a resource .
gets all the express route information .
gets all the express route data from a subscription .
gets all the ip addresses in the specified account .

close the server .



/ * ( non - javadoc )
/ * ---------------------------------------------------------------------------- - - - - -

/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
update the model for the current interaction
update the model for the supertoast .
format a string to a byte array .
converts the given { @code } to the current { @link } .
generate a new instance from the given class name .
this method is called from the constructor to create the entity from the given entity .
marshall a { @link } to the given entity .
this method extracts the entity from the given entity class .
marshall the entity .
/ * ( non - javadoc )
/ * ( non - javadoc )
delete a metadata metadata
delete a metadata metadata recording metadata
get the list of locations for the specified region .
get the list of locations for the specified directory .
get enabled status of the current user .
get locations of the locations in the current user .
get device status
update moh .
/ * ( asynchronously )
set the json data for the specified bucket .
set the signer level for the specified elasticsearch api .
post
update the cache of chat data .
refresh the specified media bucket .
send a metadata to a file .
send a metadata log record to the specified destination table .
set the agent s status to the user .
set the settings for the current user .
set the status of all devices ( asynchronously ) get ( asynchronously ) update the device
get status from database .
set the revocation status of the specified status .
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the user s value in the specified field .
get the { @link } for the given options .
update the options for the specified options .
update the preview of all values in this agent .
generate a password for the given length .
computes the inner product of the given { @code } with the given { @code } .
{
creates a new { @link } which is the ccg set for { @link } .
parses a list of { @link } s according to the { @link } .
returns the category map of all the points in the given collection .
returns the partition function for the given .
/ * ( non - javadoc )
parse text from text to text .
/ * ( non - javadoc )
add a list of argument types to this type .
constructs a new {
constructs a { @code } from a variable { @code } .
set the time the request was issued . client libraries typically set this to the current system clock time ; set it explicitly if you are calling the rest api directly .
set a timestamp indicating the last modified time of the resource known to the client . the operation will be performed only if the resource on the service has been modified since the specified time .
set a timestamp indicating the last modified time of the resource known to the client . the operation will be performed only if the resource on the service has not been modified since the specified time .
register the object for the specified mbean object .
/ * ( non - javadoc )
initializes the socket .
stop the
{
encode the byte array to the output .

set the phone number number .
sets the parameter value .
sets the value of the preference .
sets the phone number .
parse the given string to the given number of digits .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
gets the call id from the request .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the current iiop encoded base uri .
returns true if the transaction is locked
set the attribute vale with the attribute .
set the handler interface that is used to handle the .
add a transaction to this transaction .
removes the transaction from the current transaction . <p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )

activate this component .
/ * ( non - javadoc )
set the outbound interface .
get a list of the given string that is the same name as the given tag .
retrieves the of the given .
add a new to the
/ * ( non - javadoc )
remove a subscription from the current session .
set the ack to be sent to the ack state .
/ * ( non - javadoc )
cleans up the { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )


this method replicates the given { @link } to the given { @link } .

sets the time of the plaintext payload of the plaintext chunk .
generate a random key pair from the specified key .
returns the byte buffer of the bytebuffer .
append a value to the current position of the character set .
add a short value to the buffer
append the value to the position of the column
add the value of the value to the buffer
set the value of the field in the current position of the buffer .
set the value of the field in the current position
append the value to the store value .
append the value to the tail of the given value .
append a string to the map of the hex string value .
add the collection of the elements to the collection
add the given key to the map
/ * ( non - javadoc )
get value of integer value .
get the long value from the byte array .
returns the value of the unsigned integer value .
get the value of the unsigned integer value .
returns the bytes of this buffer .
returns the bytes of the bytes .
returns the string representation of the character at the end of the buffer .
/ * public string tostring () { bytearrayinputstream ( ( string string ) ) { return . ( string ) ;

returns a collection of strings as a collection of strings .
returns a collection of the elements of the given class .
returns a map of string values for the specified map .
returns a map of key - value pairs of objects .

/ * this method is used to retrieve the data from the input data payload
/ * this method is used to parse the input string from the given { @code } .
/ * this method is used to get the for the hmac

computes the hash of the specified byte array starting from the specified offset .
returns the dh mac of bytes .
/ * public * * * *
decrypts data in the given array .
reallocate the buffer to the buffer .
compares two substrings in bytes .
{
converts a hexadecimal string to a hexadecimal string .
/ * convert the given string to a string
inflates the payload of the data .
////////////////////
gets all the load balancer load balancer .
gets load balancer frontend load balancer .
gets load balancer frontend ip load balancer .
gets load balancer frontend load balancer .
lists all addresses of the stats for the specified subscription .
encodes the given string into a base64 encoded string .
decode the uri .
{
get the details of a pattern .
deletes the specified virtual network from a vm scale set .
gets a virtual network .
gets a virtual network rule .
returns virtual network .
/ * ( non - javadoc )
creates or updates a virtual network .
creates or updates the specified virtual network .
creates or updates a virtual network .
creates or updates a virtual network .
creates or updates a virtual network .
creates or updates a virtual network .
updates a virtual network tags .
updates an existing tags .
updates a virtual network tags .
updates a virtual network tags .
updates virtual network tags .
updates a virtual network tags .
add listener to the listeners .
/ * ( non - javadoc )
lists all virtualnetworktaps in a subscription .
lists all virtualnetworktaps in a resource group .
gets the virtual network links .
gets the specified virtual machine associated with the specified virtual machine .
retrieves the ip address from the virtual virtual virtual network .
lists the virtual network virtual network virtual network in the specified redis cache virtual network image .
lists the usage stats for a specific image .
lists the azure cosmos virtual network virtual network in the specified virtual network .
lists the azure cosmos agents and virtual network interfaces the virtual network network usage includes .
lists all virtualnetworktaps in a subscription .
lists all virtualnetworktaps in a resource group .
lists the usage usage in the specified storage account .
lists the usage usage in the specified storage account . this operation requires the certificates / lists / list .
lists the usage stats usage stats for the specified expressrouteport resource .
lists the usage usage in the specified subscription .
lists the usage usage in the specified subscription .
{

replace the character with the given index .
returns the log record of the dependency category .
/ * ( non - javadoc )
parses the given { @link } from the given { @link parser } .
add a chart entry to the list of categories .
assigns root to the map . this method is called by the { @link } .
calculate the start of a single for the given chart .
/ * ( non - javadoc )
checks if the subject is a valid cve object .
assigns the given { @code indexes } to the { @code set } of indices { @code k } .
logs the given message to the given object .
enable debug tracing .
/ *
add all timers to the server .
get the innermost method that matches the given class name .
returns the instance of the class that implements the specified method .


get the class name of the class
initialize the class cache class loader .

/ * ( non - javadoc )
/ * register the class from src to the given class .
{
add a new occurrence of a to a .
load the type of a type .
this method returns the device certificate for the given device type .
/ * ( non - javadoc )
get a { @link } from the repository .
/ *
add a module to the module .
sets the { @link } to use for the { @link } .
handle crud parameters .
/ * ( non - javadoc )
sets the value of the specified long value .
returns true if this is a number of values .
this method gets the data payload for the review proposal .
set the kid breakdown for the
sets the for the .
sets the column name .
this method is used to set data .
sets the authenticationinfo of
/ * this method is used to set narrative / / / / / / / / / / / / / / / / / / / / / / / / / / /

sets the .
get instancename from annotation .
returns the name of the method name .
this method is used to get budget informations such as dunsid organizationname budgettype budgetyear and budgetsummary .
writes a file to a file .
writes a text to a file .
analyze the method .
set the time the request was issued . client libraries typically set this to the current system clock time ; set it explicitly if you are calling the rest api directly .
{

returns an iterator over the elements of this stream .

this method is called when the method is called .
create a lep resource method .
adds a response to the list of response objects .
updates the method s parameters .
adds media types to the media type .
set the string representation of a { @link } .
create a new context for the given attribute .
registers a new style .
finds the panel for the given container and container .
returns the panel for the given element .
recursively search the children of the given parent child .
returns the { @link } for the given element .
adds an event to the event manager .
returns an action listeners .



set the name of the .
registers the specified string using the alias .
{
set the application context .
loads the aliases from the application .
registers the key alias .
read all the messages from the list of all the .
reads the next icalendar object from the current position .
gets the properties of a connection .
gets the connection shared stats connection .
gets the details of a connection .
creates a connection to extended encryption .
creates a connection to the specified resource .
creates a connection to a virtual connection .
creates a virtual wan vpn gateway .
creates a virtual wan vpn connection connection .
creates a virtual wan vpn connection connection .
gets all the vpn encryption connection for a specified gateway .
lists the vpngateways in the specified resource .
lists the vpngateways in the specified resource .
lists all the vpngateways in the specified resource group .
gets all the public gateways in the specified resource .
gets all the azure gateway connection links .
gets all the virtualnetworktaps in a virtual machine connection .
lists all the vpngateways in the specified subscription .
lists all the vpngateways in the specified subscription .
lists all the vpngateways in the current subscription .
computes the dot product of this vector with the other vector .
sets the values of this vector to the other values .
computes the sum of all elements in this vector .
gets the entrywise difference of two vectors .
gets the entrywise product ( i . e . hadamard product ) of this vector with the other .
applies the function to this vector .

build the options .
parse the given command line arguments .
/ * ////////////////////////////////////////////////
close the document .
<p > newinstance . < / p >
<p > . < / p >
gets the value of the property .
<p > getter for the field <code > / code > . < / p >
<p > marshallize . < / p >
/ * [ deutsch ] <p > gibt eine den von des dem daten um r und das und daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten daten
compares this object to a given object .
compares two objects to a logical or list if it is not a certain reference .
returns the property value associated with the given type .
returns a list of properties that are not already registered .
sets a property to a list of property property .
sets a list of property type .
removes a property from the specified property .
remove a property from the specified class .
removes a component from the specified component .
removes a descendant from the given class .
get the property name .
returns a list of the given name that is the same as the given name .
add a property to the list of property property names .
adds a property to the property name .
sets property property for the property .
set property property .
removes the given property from this list .
returns the component class of the given class .
creates a new instance of the specified class .
sets the current data type .
sets the specified component to the given component .
returns the for the given name .
returns the list of components of the given name .
add a new name .
removes the given { @code name } from this { @code list } .
validates the given { @link } .
check whether the given { @code list } is not present .
check status if the error is enabled .

execute the computation of the current execution .
invokes the method .
this method is called from the constructor to create the data model .
init method .
{
returns the element of the given element .
processes the properties of the property .
load the consumer summary for the given partition id .
destroy the database .
saves the last one id to the database .
{
{
{ @inheritdoc }
{
{ @inheritdoc }
{
generates instructions to enhance the super class .
generates instructions to differentiate instructions to a stack .
create a new { @link } from the given { @link } .
lists the compute service operations .
lists the compute services registries the subscription .
{
{
{
/ * checks if the user has the permission granted to the user .
{
/ * ( non - javadoc )
get a runner for the given identifier .
get all runners have been registered for the given identifier .
start a runner for the specified runner .
update the runner .
remove a runner runner .
{
/ * ( non - javadoc )
remove a repository from the repository .
get a set of projects for the given identifier .
{
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
{
{
{ @link } defines the specification of the given specification .
{
/ * ( non - javadoc )
renames a reference to a new reference .
{
{
returns the lucene { @link document } for this repository .
execute the given action with the given name .
lists all the workflow activities run on a workflow run .
gets a workflow trigger .
gets a workflow trigger .
gets a workflow trigger .
reset the workflow state to the workflow trigger .
reset an existing workflow trigger .
reset an existing workflow trigger .
/ * ( non - javadoc )
reset the workflow response to a workflow instance .
executes the workflow .
executes the workflow .
executes the workflow .
gets a workflow .
creates a workflow .
gets a workflow schema .
gets a workflow entity based on the specified workflow trigger .
executes a workflow .
sets the workflow state .
sets the workflow state state for the workflow .
disables workflow state .
get the workflow callback callback workflow callback .
get the workflow callback callback .
gets all the workflow workflow run workflow queue .
sets the workflow state state for the workflow .
reset the state of the .
closes the current stream and releases it if it is not already available .
create a new {

this method returns a {
creates post method for a post .
/ * ( non - javadoc )
execute the command and returns the response
get the context of the wordnet sentence .

{
sets the backup policy value .

initialize the
initialize the .
creates a single expression expression from the given expression .
creates a { @link } expression
create a new instance of the constructor with arguments .
creates a new instance of the specified class and returns it as a new instance .
<p > returns the substring of the given separator . the separator is returned . < / p >
gets the database advisor .
gets a database s recommended rule .
gets the value of a database advisor .
lists the data lake store data lake store available compute if available .
gets all the data lake analytics item in the account .

<p > . < / p >
interpolate the last value of the leg and return the last value expressed in the .
/ * ( non - javadoc )
send a { @link } to the { @link } .
send a { @link } to the { @link } .


sets the current number of protein .

<p > . < / p >
getter for - gets
setter for - sets
create the job execution .
create the creation job .
create a new instance of the
{
{
<p > marshallize . < / p >
create the runbook job .
retrieve the compilation job for job execution .
retrieve the dsc job job identified by job id .
retrieve the job job configuration for the job id .
retrieve the job stream identified by job id .
retrieve the job stream identified by job id .
retrieve the job stream identified by job id .
list environments in the specified data .
creates a new instance of the specified { @code } .
<p > getter for the field <code > / code > . < / p >
<p > getter for the the version . < / p >
<p > execute a sparql query . < / p >
<p > marshallize . < / p >
sets the property name .
turns a {
checks if this object is empty .
create a new { @code copyright } object with the given { @link } .
returns a list of the entries in this list .
get the security context .
returns the authentication associated with the current authentication .
<p > generates a { @link flowable } from the given { @link inputstream } . the { @link inputstream } is not set as { @link } .
<p > . < / p >
/ * --------------------------------------------------------------
this method is used to set narrative data to .
create a new { @link } from a { @link string } .
create a new { @link } from the given { @link string } .

creates a new { @link } from a given { @link } .


factory method to create a new instance of this instance based on the provided locale .
add a new value to the map .
puts a new value into the mapping of this { @link string } .
puts a string into a new string .
returns the format of the text of the given string .
return the next token in the given string .
the key token as a key .

consume the next token . this is the generic method for { @link ( string ) } .
/ * ( non - javadoc )
initializes the service .
this methods receives the current value of the <code > uicomponent< / code > value . <p > the default implementation simply stores the values in the current { @link facescontext } .
this methods generates the html code of the current b : . <code > encodebegin< / code > generates the start of the component . after the the jsf framework calls <code > encodechildren () < / code > to generate the html code between the beginning and the end of the component . for instance in the case of a panel
renders the <code > / code > to the <code > uicomponent< / code > attribute .
<p > generate the for the error . < / p >
generates the error code for the given input .
get the error message for the given error message .
gets the value for the mpeg - cast attribute .
returns a converter for the given value .
get the parameter value for the given parameter name .
gets the type of a component .
renders the component to its .
gets the form of the given { @code element } from the given string . <p > this method is deprecated .
{
destroys the context

get the singleton instance of the class .
create a new xslt file from the given resource name . <br / > <br / >
the main method .
returns the for the given command .
print status .
verifies that the given program supports ping and returns them .
get the name of the channel name .
returns the name of the channel .
publish event .
subscribe a { @link subscriber } to { @link } .
unsubscribe from a channel .
encodes the given string with a default value .
get the size of the size of the size of the size of the size of the size .
returns the size of the specified size .
<p > . < / p >
returns a size of <code > string< / code > that is equal to the given size .
parse resources .
parses the user - defined information .
parse the properties of the bean definition .
parses the configuration of the configuration .
get the resource type from a resource .
returns the size of the range of the specified range .
splits a tokenized token into a list of substrings .
returns the label class for the given class .
checks whether the { @link uicomponent } instance is contained in the form of the { @link } .
this method runs the main function for the given test .
provisions / post / update / update the specified resource .
downloads the details of an image to download .
downloads the specified image to download download .
gives the encryption of the specified virtualwan .
gives the encryption of the specified azure resource group .
gives the status of the specified resource to download .
gives the encryption of the encryption information for the specified azure resource group .
<p > . < / p >
get the value of the given class .
broadcast events to the event to the event manager .
<p > <span class = changed_modified_2_0 > / span > el expressions ( el el etc ) to obtain a method expression that represents the given expression object which is the same as the caller . < / p >
<p > parse the value of the { @code } parameter . < / p >
extract the value of the given value from the given source string .
this methods returns the value of the { @link component } s .
this methods generates the html code of the current b : group . ( this is the start of the component . after invoking this might be a html - > c . c . c . c . c . c . c . c . c . c . c . c . c . c . c . c .
add a list of to this component .
handles the inherited .
add a list of strings to this component .
renders the select tag .
renders the html document to the client .
this method is used to check whether a task is not available .
return the selected item for the given component .
renders the options .
renders the option to the provided list of validators .
renders the rows of the select .
renders the attributes of the document .
start the start date and call the appropriate sql method .
handles the of the xcastedexpression .
get the value of the value of the slider .
set the value of the widget .
get the row selection .
set the value of the rendered row .
get the locale name for the passed locale .
get the locale display name for the passed locale .
get all locale names for the given locale .
bootstrap the server . <p > this method is called by { @link ( eventlistener ) } .
shuts down the and notifies all resources of the same running shutdown .
decomposes the lu matrices .
returns the field with the specified name .
returns the setter class for the given name .
returns the methodnode method for the given name .
get all methods declared in the given method name .
sets the environment .

insert group name into a group .
delete group .
returns all groups that this group belongs to .
insert user into user .
deletes a user .
get all users of this user .
add a new user to the user .
queries for entities with query parameters . query entities are compared using the given query . query parameters are executed in the response .
query for entities with the given query .
query the document for the query .
query the query for the given project query .
returns true if the user has permission to access the user .
adds the list to the array list .
returns a list of servers for the specified server .
returns a list of integration resources that are associated with the specified server .
updates the server advisor .
updates server recommended result detection of a server .
updates server recommended result detection of a server .
retrieve a resource .
decomposes the matrix and returns the matrix scaling .
get an arbitrary long .
gets the details of a job .
gets the information for the specified job .
create or update a new storage account .
creates a new storage account .
updates the specified job execution .
sets the specified transform .
sets the specified transform .
call this method to invoke the { @link () } method .

returns the address type of the specified person type .
get the for the given .
set the time at which the resource was last modified .
{
<p > retrieves the time of the current fire time . < / p >
/ * ( non - javadoc )
creates a new instance of the document .
returns true if the hour day second is updated .
returns the time of the day of the date .
returns a copy of this time with the specified number of hours .
returns a new hour day hour minute and second time .
{
transfers the data from the input stream to the output stream .
adds a { @link } to the uri .
select the list of candidates from the selected items .
apply a new rank - in - predicate to { @link } .
check that the two elements are the same .
calculates the population of detected population for each of the population population of each group of values that appear in the population of specified group .
calculates the population of aggregate of projects .
this method returns a list of { @link } s that produce the offspring population population population population .
notifies all registered observers of a { @link } .
evaluates a compiler expression .
set the time at which the resource was last modified .
check that the given { @code value } is { @code null } .
check that the given value is not null .
check that a given variable is not equal to the given value .
check that a value is a valid { @code double } value .
check that the given condition is a predicate .
check that the predicate evaluates to true .

check that an argument is a boolean .
check that an object is not equal to the given condition .
checks whether the given array is a valid double .
check if the condition is a member of the given type .
check if the given predicate holds a given predicate .
check if the given predicate function is a function that is the predicate function that is the value of the predicate function .
check the given long value .
/ *
checks if the given predicate evaluates to {
checks if the given condition is a value which is the value of the given condition .
check that the value is a { @code double } function { @code double } { @code double } { @code value } .
checks if the given { @code value } is { @code double } .

converts the byte array to bytes .
returns the hash code for the given range .

creates a new minibatch of matrix
create a new measure
create a new solver with a hardcoded factor .
<pre > generate a linear addressing solver .
setup the device device .
<pre > -------- tensor - instructions that correspond to a .
create a new solver with the given pointer .

compute the composition of - packed - - linear addressing .
create a pointer to a .
<pre > cublasstatus_t ( pointer ) linear - batch -
<pre > -------- tensor - transpose for compatibility .
<pre > -------- linear linear system op .
commits the current state of the current buffer .
/ * ( non - javadoc )
{
returns the operator type for the given type .
/ * bnf in
creates a new connection to the given target .
update the response header .
registers the given <code > / code > .
sets the { @link } to be used .
returns the register from the tail of the given index .

read data from the input stream to the given input stream .
getmessage
parse a boolean value from the charsequence .
parse a boolean value from the parser .
connects the slave .
disconnect the connection from the database .
parse a integer value from a charsequence .
parse a string from the charsequence .
parse a long value from a charsequence .
parse a short value .
parse a numeric integer value from the string .
finds the first occurrence of the specified character sequence in the given radix using the given character sequence .
extract basic basic authentication from the authorization header .
retrieves the value of the <code > / code > .
gets the bucket id .
----- public methods -----
returns the relationship between {
returns the relationship between the jcr id and the association of the given id .
update the given source node .
get the { @link sslcontext } of { @link } .
get the { @link sslcontext } of { @link keystore } from the given { @link keystore } .
creates a new {
build a keystore with the given keystore and the keystore .
build a { @link sslcontext } from a { @link keystore } .
creates a new { @link sslcontext } .
sends a request to the client .
connect to the specified { @link } .
connect to the client s connect and initiate a new sentinel . the connect mode is used to initiate a new sentinel .
sends a line to the pipeline .
creates a new {
closes the connection .
creates a new builder .
extract the string array from the list .
continue command to consume messages on the command .
handle the selected messages .
this method returns a list of messages received from the given message .
process a message batch . the messages are notified when the message is selected .
send a message to the end of the list .
dispatch a batch of messages to the destination .
this method is invoked in the manner of the document to get the list of messages received from the destination .
process a batch of messages .

{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the name of the destination name .
this method is called by the jfap message processor to consume packets .
get the timeout for the current connection .
creates a new { @link } .
returns the class for the specified class .
lists the user - defined credentials for a notificationhub .
the operation to remove the existing resource .
the operation to remove the recovery storage virtual machine .
returns all <code > icon< / code > elements
if not already created a new <code > / code > element will be created and returned . otherwise the first existing <code > - property< / code > element will be returned .
returns all <code > / code > elements
if not already created a new <code > / code > element with the given value will be created . otherwise the existing <code > / code > element will be returned .
executes the given callback .
commit the session .
returns the list of excluded classes for the given annotation .
validates the given name and value .
create a new instance of the given target connection .
/ * ( non - javadoc )
returns a connection to the pool .

/ * ( non - javadoc )
if not already created a new <code > named - parameter< / code > element will be created and returned . otherwise the first existing <code > named - one - parameter< / code > element will be returned .
returns all <code > named - parameter< / code > elements
if not already created a new <code > converter< / code > element will be created and returned . otherwise the first existing <code > converter< / code > element will be returned .
returns all <code > collection&lt ; < / code > elements
create a new netcdf file system
initialize the given file .
initializes the given { @link path } .
check if the vault is a valid vault .
change the modifiable information of a given file .

creates a new channel file with the given { @code options } .
initialize the size of the ciphertext .
gets the value for this .
gets the value for this .


gets the value for this technologytargeting .
gets the value for this technologytargeting .
set the time at which the resource was last modified .
sets the value for this .
gets the reason errors value for this .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
runs the example .
gets the value for this .
gets the value for this .
creates a new .
creates a new instance of { @link } .
returns a new instance of { @code target } with the given value .
gets the value for this .
validiert die laenge des uebergebenen wertes .
get the current locale .
get the string representation of this string .
sets the columntypes value for this .
invokes the {
loads data from the file .
get the data data data from the given collector .
returns the set of all the elements in this set of all the keys in the list .




creates a pair of integers from the given object .

if not already created a new <code > handler - chain< / code > element will be created and returned . otherwise the first existing <code > handler - chain< / code > element will be returned .
returns all <code > { @link org . . } < / code > elements
runs the example .
runs the example .
update the time for the given time in the given future .
wait for the expiration time for the given time in milliseconds .
wait time for the seconds in the interval [ 0 - 1 ] .
check if the request is a valid kid rate limit .
calculate wait time for a certain number of seconds .
if not already created a new <code > config - property< / code > element will be created and returned . otherwise the first existing <code > config - property< / code > element will be returned .
returns all <code > config - property< / code > elements
if not already created a new <code > authentication - parameter< / code > if any or the given <code > null< / code > element will be returned .
returns all <code > authentication - parameter< / code > elements
if not already created a new <code > security - permission< / code > element will be created and returned . otherwise the first existing <code > security - permission< / code > element will be returned .
returns all <code > security - permission< / code > elements
get the list of field names .
parses the given { @link } .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
update a kusto cluster .
update a kusto cluster .
if not already created a new <code > persistence - unit - metadata< / code > element with the given value will be created . otherwise the existing <code > persistence - unit - metadata< / code > element will be returned .
if not already created a new <code > sequence - generator< / code > element will be created and returned . otherwise the first existing <code > sequence - generator< / code > element will be returned .
returns all <code > / code > elements
if not already created a new <code > table< / code > element will be created and returned . otherwise the first existing <code > table - generator< / code > element will be returned .
returns all <code > table - generator< / code > elements
returns all <code > / code > elements
if not already created a new <code > sql - text / code > element will be created and returned . otherwise the first existing <code > sql - text - text - text - tuple - property / code > element will be returned .
returns all <code > sql - text - size< / code > elements
if not already created a new <code > mapped - / code > element will be created and returned . otherwise the first existing <code > / code > element will be returned .
returns all <code > oracle - plugin - graph< / code > elements
if not already created a new <code > entity< / code > element will be created and returned . otherwise the first existing <code > entity< / code > element will be returned .
returns all <code > entity< / code > elements
if not already created a new <code > / code > element will be created and returned . otherwise the first existing <code > / code > element will be returned .
returns all <code > / code > elements
start the watch point
/ * ( non - javadoc )
gets the value for this technologytargeting .
returns all <code > / code > elements
returns the value of the timetolive property .
if not already created a new <code > / code > element will be created and returned . otherwise the first existing <code > access - ref< / code > element will be returned .
returns all <code > / code > elements
if not already created a new <code > portlet - ref< / code > element with the given value will be created . otherwise the existing <code > portlet - destination< / code > element will be returned .
if not already created a new <code > portlet - config< / code > element with the given value will be created . otherwise the existing <code > portlet - resourceadapter< / code > element will be returned .
if not already created a new <code > / code > element will be created and returned . otherwise the first existing <code > / code > element will be returned .
returns all <code > / code > elements
if not already created a new <code > / code > element will be created and returned . otherwise the first existing <code > / code > element will be returned .
if not already created a new <code > container - option< / code > element will be created and returned . otherwise the first existing <code > container - option< / code > element will be returned .
runs the example .
runs the example .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
if not already created a new <code > / code > element will be created and returned . otherwise the first existing <code > / code > element will be returned .
returns all <code > / code > elements
if not already created a new <code > exclude< / code > element will be created and returned . otherwise the first existing <code > / code > element will be returned .
returns all <code > / code > elements
creates a new listener which is a union of the given values .
gets the reason value for this .
gets the value for this .
sets the time value for this .
gets the value for this .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
runs the example .
creates a header for the given descriptor .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
runs the example .
exports a server to a vault .
exports a managed vault .
exports a server to vault provisioning . this is a list of for the vault .
gets the integration account security rule .
gets the integration account s security rule .
gets the integration account s security rule .
creates or updates an integration account s account .
creates or updates an integration account identity .
creates or updates an integration account identity .
gets a list of integration account accounts . gets the integration account information .
gets the value for this buyerrfp .
sets the value for this buyerrfp .
runs the example .
runs the example .
runs the example .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
sets the value for this .
gets the columns value for this .
sets the columns value for this .
gets the value for this lineitemsummary .
sets the startdatetime value for this .
extract the value from the node .
extract the descendants from the given node .
sets the value for this sourcecontentconfiguration .
gets the value for this .
sets the value for this sourcecontentconfiguration .
sets the value for this .
gets the direction value for this campaign .
gets the value for this .
sets the value for this .
gets the value for this .
sets the value for this .
gets the value for this .
gets the value for this .
gets the value for this .
sets the value for this .
gets the appstore value for this .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
gets all the rules in the specified load balancer .
gets the load balancer for the specified load balancer .
gets the specified rule .
gets the specified load balancer rule .
gets all the rules in the specified account .
runs the example .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
creates a html image that will be used to render the image data .
if not already created a new <code > / code > element with the given value will be created . otherwise the existing <code > / code > element will be returned .
if not already created a new <code > / code > element with the given value will be created . otherwise the existing <code > / code > element will be returned .
if not already created a new <code > partition / code > element will be created and returned . otherwise the existing <code > partition / code > element will be returned .
check if the given object is a instance .
invokes a method on the given object .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
gets the value for the requested resource value .
sets the value for this baseflashcreative .
given a list of interfaces and the return interface types that the interfaces implemented by this { @link } are not included .
runs the example .
sets the value for this proposallineitemconstraints .
gets the value for this baseadruleslot .
sets the value for this proposallineitemconstraints .
sets the value for this proposallineitemconstraints .
gets the value for this lineitemsummary .
gets the value for this proposallineitem .
sets the value for this producttemplate .
set the time the request was issued . client libraries typically set this to the current system clock time ; set it explicitly if you are calling the rest api directly .
gets the value for this .
gets the value for this devicecategorytargeting .
sets the value for this .
sets the value for this .
/ * ( non - javadoc )
gets the value for this .
sets the value for this .
gets the value for this .
gets the value for this .
if not already created a new <code > form - config< / code > element with the given value will be created . otherwise the existing <code > form - config< / code > element will be returned .
returns all <code > named - parameter< / code > elements
if not already created a new <code > { @link } must be set where { @code false } is returned if the first element is not created .
returns all <code > converter< / code > elements
creates a new node representing the name of the given values .
sets the value for this proposallineitem .
runs the example .
runs the example .
gets the value for this .
sets the rule value for this .
runs the example .
gets the value for this baseadruleslot .
sets the value for this .
gets the value for this sourcecontentconfiguration .
sets the value for this sourcecontentconfiguration .
use this operation to get the value for the .
use this api to fetch filtered set of resources . filter string should be in json format . eg : vm_state : down name : [ a - z ] +
<pre > converts api response of bulk operation into object and returns the object array in case of get request . < / pre >
<pre > performs generic data validation for the operation to be performed < / pre >
sets the value for this .
runs the example .
gets the value for this .
gets the value for this .
gets the value for this .
set the time at which the resource was last modified .
suspend the action .
merges the { @link multimap } from a { @link multimap } .
execute request request .
invoke the api request .
executes the query .
call this method to invoke the api call . returns the result of the result .
execute the request .

set a class loader to a new class .


/ * ( non - javadoc )



add task to log
this method is used to transfer the task to the task queue .
writes the given { @code task } to the given { @code } .
flushes the given collection of errors to the writer .
closes all the resources .
retrieve the module identified by module name .
retrieve the module identified by module name .
retrieve the module identified by module name .
retrieve a list of modules .
retrieve a list of modules .
append a js message to the given stringbuilder .
retrieve a list of modules .
retrieve a list of modules .
retrieve a list of modules .
gets all the modules captured by their application .
gets all the data lake store links for the specified subscription .
gets all the modules in the specified subscription .
gets all the modules in the specified subscription .
gets all the application web services resources .
translates a { @link } to a { @link level } .
get the object of the object represented by this object .
refreshes the instance of the object .
returns object affiliation of given query .
obtain the primary key from the database .
<pre > use this operation to get audit informations . < / pre >
use this api to fetch filtered set of resources . filter string should be in json format . eg : vm_state : down name : [ a - z ] +
<pre > converts api response of bulk operation into object and returns the object array in case of get request . < / pre >
<pre > performs generic data validation for the operation to be performed < / pre >
store the persistent object .
build a query from a query
creates a stereo encoder for encryption .
writes the header information .
writes the specified {
//////////////////////////////////////
<pre > use this operation to upgrade the upgrade upgrade operation on the . < / pre >
<pre > use this operation to upgrade the virtual private batch of virtual machines in bulk . < / pre >
<pre > converts api response of bulk operation into object and returns the object array in case of get request . < / pre >
<pre > performs generic data validation for the operation to be performed < / pre >
loads the classpath for the given input stream .
creates a new .
returns a object .




generate the string representation of the form { @code } .



query the query for the specified device .
query the query for the specified device .


get the string representation of the path .

<pre > use this operation to add snmp trap normal device . < / pre >
<pre > use this operation to delete snmp trap destination . < / pre >
<pre > use this operation to get snmp alarm . < / pre >
<pre > use this operation to modify snmp manager . < / pre >
use this api to fetch filtered set of resources . set the filter parameter values in filtervalue object .
<pre > converts api response of bulk operation into object and returns the object array in case of get request . < / pre >
<pre > performs generic data validation for the operation to be performed < / pre >
{
creates a new { @link } instance that creates a new { @link node } with the grants .
finds the label that matches the given pattern .
returns the { @link } for the given error .
parse the given error string .
prints the error message for the given error message .
prints a message error message .
extract instructions from the { @link } .
extract the fields from the given group .
/ * package
check if the given string is a regular expression .
returns whether the given string is a list of strings .

<pre > use this operation to add device profile to repeater in opengl . < / pre >
<pre > use this operation to delete xva interface . < / pre >
use this operation to get the .
use this api to fetch filtered set of resources . set the filter parameter values in filtervalue object .
<pre > converts api response of bulk operation into object and returns the object array in case of get request . < / pre >
converts the incoming http request to a url .
{
builds a new { @link } .
{
{
parses the name of the signer class name to the userregistry .
<p > convert entity to entity dao mapping dao entity . < / p >

sets the for the given type .


the same as {
<p > . < / p >
<p > deprecated . use { @link ( string ) } instead . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( object ) } instead .
search for a given search query by the given search query . <p >
add a property to the property
sends the request to the resource .
changes the script to the specified hdinsight cluster .
changes the specified hdinsight cluster to the specified service edge .
changes the specified hdinsight cluster to the specified cluster .
disables the specified compute node .
decode the data in the form of a base64 encoded char array .
encode the data in bytes array to base64 .
constructs and initializes a new { @link } with the given { @link string message } formatted with the given { @link object [] arguments } .
constructs and initializes a new { @link } with the given { @link throwable cause } and { @link string message } formatted with the given { @link object [] arguments } .
constructs and initializes a new { @link } with the given message and constructs and initializes it with the given message and converts it into a new { @link string } .
constructs and initializes a new { @link ioexception } with the given { @link string message } formatted with the given { @link object [] arguments } .
constructs and initializes a new { @link } with the given { @link object [] } with the given { @link object [] arguments } .
constructs and initializes a new { @link } with the given { @link object [] } and { @link string message } formatted with the given { @link object [] arguments } .
/ * ( non - javadoc )
set the menu item .
execute the given { @link } .
returns a list of server usage usages of the server .
deletes the specified network interface ip .
gets the network interface .
gets the specified network interface .
gets the details of the specified network interface .
creates or updates a network interface .
creates or updates a network interface .
creates or updates a network interface .
creates or updates a network interface .
creates or updates a container instance in the specified storage account .
creates or updates a network interface .
creates or updates a network interface .
gets all network interfaces in a resource group .
gets all network interfaces in a subscription .
.
typevariable the type variables for the type variable with the type variables .
retrieve the stats for the tenant schedule .
retrieve the stats for the requested schedule .
retrieve the stats for the requested schedule .
update the schedule of job .
update the metric value for a post .
update the metric value for a post .
update the properties of the plan .
retrieve the dsc groups in a specified account .
retrieve all hybrid containers in the account .
get metrics for a worker pool of a appserviceenvironment ( worker pool ) .
infer the tree of cfg assignments of a given context .
returns the name of the class name .
{
get the message from the server .
get a list of { @link } s that have registered { @link service } s .
configure the for the given token .
crates new { @link } with the given { @link } .
/ * ( non - javadoc )


{
this method is used to check if the given is a .
set the input paths .
initialize the efaps .
stop the .
{
this method is used to parse the given class and sets the result .
<p > newinstance< / p >
returns the outer type of the rhs .
produce a simple inner declaration using the rhs outer type .
convert the value to a { @code value } .

parse the given string to the given string .
returns the path of the path .
join the specified join path .
lists the scan resources .
gets all apps that the specified subscription is available .
get the link to the link .
get relation link .
checks whether the given type is a type .
returns the type of the type of the given type .
<p > this is a convenience method that combines two substitution matrices . < / p >
converts the given value to a string .
execute the given transaction .
/ * ------------------------------------------------------------
start a task .
get command command .
get information about the specified task . the command line arguments are : <ul > <li > &lt ; ; / &gt ; &lt ; / ; &lt ; / ; &lt ; / ; &lt ; / ; &lt ; / &lt ; / h4&gt ; &lt ; / ; &lt ; / ; &lt
get information representing a command . the tasks resource is a single resource . the returned task will be used as the task . the returned tasks may be used as a task . the returned resource will be obtained from the source . the returned resource will be obtained from the current resource . the returned resource will be downloaded as a
returns a map of untagged data which are members of the data set in the given data point .
adds a data point to the list of data points .
adds a data point to the list of datapoints in the dataset .
serialize a json array
{
set the time at which the resource was last modified .
create a new instance of this class .
creates a filter instance that will be used to create the shiro application .
{
{
.
{
<p > validate the given keystore . < / p >
validates the object to be encoded in the keystore .
validates the certificate and subject to verify that the certificate is not a valid certificate .
lists the check top for the data box edge / gateway device .
list all the compute actions in the specified data box edge / gateway device .
gets the details of the specified trigger .
creates or updates a new cloud with the specified data lake store data lake store type .
creates or updates a new cloud data .
creates or updates the specified data lake store the data lake store the user account .
creates or updates a new cloud data trigger event .
creates or updates the specified data lake store delivery data .
creates or updates the specified data lake store account information .
lists the data associated with the specified data box edge / gateway device .
{
{
{
creates an {
{
{
{
{
{
/ * ( non - javadoc )
{
{
set the report report to the report .
returns the value of the for the given stage .
returns the class of the given class .
add listener that will be notified when the registration is undeployed .
/ * ( non - javadoc )
register model type .
{

gets the component component of the current thread .
creates a new component for the specified class .
create a view view of the view .
helper method to create a view for the given view .
called when the bundle is already registered .

prepare the delete key .
{
{
{
sends a publisher to the server .
initialize the jpa .
{
{
{
/ * ( non - javadoc )
{
{

resolves all the package packages .
adds a collection of files to the given class .
prepare the attachment of { @code attachment } to the attachment of the attachment .
returns the error message part of the form .
creates a temp part of the upload part of the request .
creates the part of the .
convert parts to json .
send message to the message .
creates a new object .
create a new message event .
/ * ( non - javadoc )
create the for the given code
creates a new instance of the class .
add a tag to this tag builder .
remove a tag from the list
returns the root package of this package .
get the proactivedetection information for an application insights component .
returns a { @code collector } which applies the given function to the input elements .
set the time the request was issued . client libraries typically set this to the current system clock time ; set it explicitly if you are calling the rest api directly .
set a timestamp indicating the last modified time of the resource known to the client . the operation will be performed only if the resource on the service has been modified since the specified time .
set a timestamp indicating the last modified time of the resource known to the client . the operation will be performed only if the resource on the service has not been modified since the specified time .
/ * ( non - javadoc )
submits a message to the remote me .
create a new session from the session .
get the session .
reconnect the connection to the address .
{

collect metrics for each thread pool .
start a task to run on the given task .
start a {
<p > process entity request . < / p >
<p > make request entity for entity data . < / p >
<p > make warehouse entries . < / p >
<p > process entity request . < / p >
format the label of an aws account .
get the x - key - value pair in pem format .
generate an ip issuer or encrypt a crl key from an aws account .
convert a string to a { @link } .
checks whether the given node matches the given node .
<p > process entity request . < / p >
<p > process entity request . < / p >
<p > process entity request . < / p >
<p > process entity request . < / p >
<p > reveal faces and store totals from the . < / p >
<p > . < / p >
<p > . < / p >
<p > . < / p >
<p > . < / p >
<p > . < / p >
<p > . < / p >
<p > . < / p >
<p > . < / p >
this method is used to determine the for the given { @link } .
finds the line for the intersection of two targets . <br > <br > if the source line is not found it will return the new one .

get the context context for the current context .
push a new context to the context
pops the current context and restores the current context stack .
check if the current thread is not running .
sets the current thread context .
set the template to use for the template .
set the engine for the current engine .
returns the value of the given key or defaultvalue if the key is not present .
get the value associated with the specified key .
set the filters for this filter .
set the current directory name .
set the directory to be used for the compile - directory . this method is called from the directory .
applies the specified { @code } to the events of the given { @code stream } . <p > the event is lazily created by the wrapped events . the returned stream is lazily created via the <code > / code > method on the event .
installs the current state of the current controllers .
execute the given request .
opens a connection to the given url .
opens the connection .
用sha1算法生成安全签名

create a patch request
create a post method for the given path .


create a put http put method on the given input stream .
/ * ( non - javadoc )
creates a copy of the specified destination .
creates a new move for the specified destination .
translate a to a human - readable string .
<p > process entity request . < / p >
read a list of messages from the list .
read json data from json stream
read the object from the serialized object .
returns true if the keys are equal .
/ * ( non - javadoc )
returns the value of the specified argument .
verifies that the given { @code value } is not null .
verifies that the given { @code value } is { @code null } .
adds a wildcard subtype to the array type .
returns the type of the given variable as a variable type .
returns the type of the specified type .
this method is used to create a new { @link variableresolver } that returns { @code resolvabletype } for the { @code type } variable .
gets the type name of the type of the given type .
returns the upper bound of the given type .
builds the upper bound of the given type .
<p > make save preparations before insert update . < / p >
<p > make upgrade to the . < / p >
<p > . < / p >
<p > fill the structure . < / p >
<p > fill the structure . < / p >
/ * ------------------------------------------------------------
handle the request .
usage : java twitter4j . examples . .
checks if a double value is a double .
main method .
/ *
/ * package
usage : java twitter4j . examples . .
usage : java twitter4j . examples . .
<p > process entity request . < / p >
{
{
{
create a new { @link } that will be used for the given { @link } .
create a new { @link } .

add longitude to latitude longitude
add a proximity - coordinate of corners to the latitude longitude .

this method returns the bounding box of the specified coordinate system .

set the set of filters .


set the query string to the current list .
cast a object to a double .
returns the time at which the arrival of the time the time elapsed after .
returns the hmac sha - 256 hash of the given string .


reads from the input stream .
reads the contents of an input stream into a document .
creates a new instance of xstream factory . <p >
reads the first and populates it and returns it .
parse a bean from xml .
parse an event from the stream .
parse the given string to the appropriate type .
advance the start of the start or end of the document .
parse the next text in the buffer .
read the next event .

build sql statement for sql query .
deal with the values for the given json object .
update the given { @link } with the given json object .
sets the properties .
get the json object that represents the jsonobject of the jsonobject .
remove a unique name from the table
append a sql statement to the table .
/ * this method is invoked in .
build select select clause for the select clause .
build the where filter .
build the order by sorting the order of the order by the given order .


/ * ( non - javadoc )

process the filter filter property from the filter property .
process the filter filter .
deal with all the expressions in the database .
{
invokes the method on the given target class .
{
returns the for the given event .
returns the key - value pair .
parse key - value pairs .
reads the next string in the string .
reads next token from the input stream .


<p > process entity request . < / p >
get the data model for the data model .
sends a redirect to the given location .
get the parameter name from the request .
sends a error message to the response .
<p > process entity request . < / p >
sets the json response to be sent to the json object .

sets the json response to be used to render the json response .

======
render the result of the response .
renders the {
sends a message to the end of the message .
renders a data object to a { @link } .
renders the document to the given { @link } .
sets the value of the given property as a request .
handle the error .

convert the byte array to a char array .
get the class name of the given class .
extract the formal parameters type from the given type .
{
looks for the generic type parameter with the given type .
generate the signature for the type signature .
extract the name of the {
this method is used to convert the type signature to a class type signature .
check the field type signature .
returns the method signature of the given method .
find a child of a collection of objects .
get all results of the transactional functions .
encode the account
writes the parent element to the writer .
////////////////////////////////////////////////
returns the map of variables .
reads config from the classpath .
creates an email intent . intent must be a string .
creates an intent which will be used to identify the email address .
intent that you want to view the email address .
creates a new for the specified rate .
deserialize the object from the input stream .
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
traverses the method and passes them to the list .
lazy evaluation .
generates a code chunk of { @code } .
returns a sortedset version of the given version .
returns a new sortedmap that is used to remove the value from the map .
returns a boolean indicating whether the external entity is not .
use the supplied function to add the mapping function to this map ( or null ) if not present .
registers a property id .

creates a new instance of the specified json object .
returns a new { @code c } object from the specified object .
use the supplied function to add the value of the specified function to the current row of the mapping .
executes a <code > / code > .
returns the object represented by the given object .
get results from a given object
<p > {
<p > unwraps the class to be the same as the java wrapper class . < / p >
<p > performs an element in the xml schema . < / p > <p > if <code > a< / code > is <code > null< / code > the returned array will be returned . < / p > <p > if <code > a< / code > is <code > null< / code > and the returned array is a
<p > returns the value of the <code > name< / code > property . < / p > <p > example : <code > a ( 1 ) . < / li > <li > <code > a ( char [] ) < / code > <code > ij< / code > if <code > a< / code > is <code >
<p > performs a binary operation on a single byte array . < / p >
<p > performs a short array of <code > a< / code > elements . the method is not null .
returns a new array of <code > a - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 9 - 3 - 3 . 3 . 3 . 3 . 3 . 3 . 3 . 3 . 3 . 3 . 0 . 0 . 0 . 0 1 . 0 . 0 1 . 0 .
returns a non - null array of <code > a< / code > elements . <p > an array of <code > a< / code > is returned . <p > an array of <code > a< / code > is returned . <p > an array of <code > a< / code > is returned . <p > an array of <code
<p > returns the values of <code > float< / code > s with the specified <code > float< / code > . a <code > float< / code > is a non - zero magnitude of <code > float< / code > .
<p > returns a new array of <code > a - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 - 3 -
returns true if the given value is not null .
returns the value of the given char array as a char array .
returns the byte array representing the given byte array .
returns the array of primitive values of a short value .
returns the array of integers in the specified array .
returns the array of primitive values of the specified primitive type .
returns the array of primitive values of the given float array .
returns the double [] value for the given array of primitive values .
constructs a message with the given message id and arguments .
get payment rpc service
get the hash of the api key
set the status of the .
initialize the gui .
displays the text tooltip
shows the dialog s scrollable dialog .
hides the soft keyboard
hides the keyboard hiding the keyboard hiding .
lazy evaluation .
returns a { @link java . util . list } of { @link short } instances .
returns whether this bloom filter is compatible with this bloom filter .
puts the given values into this bloom filter .
creates a { @link bloomfilter } with the specified number of insertions and contains the specified number of insertions .
computes the optimal hash of the given number of tuples decrementing by k hash .
sets the header value .
add a header to the header .
get the { @link } for the venmo pod
cancel the cancel action .
{
remove a mapping from the cache .
replaces the value of the given key to the value associated with this key .
{
open a new .
{
returns the value of the given key in this map .

put the value at the given index .
gets the storage component from the storage .
copies the source file to the target file .
delete a file from the directory .
reads a byte array from the given file .
check if the agent is connected to the agent .
calculates the operating system .
calculates the hash of the given bytes .
get inline tag tag that contains all tag tags .

sets the hint for the given resource .
sets whether the error is enabled .
returns a new { @link map } containing the mappings identified by the key s mapping functions .
check if the passed country is a valid country .
get the country locale for the passed locale .
set the country code for the passed language .
create a new card source for a card card .
create a new source of the specified source revision .
helper method to create the dialog .

finds the first matching { @code filter } and { @code filter } .
find all elements of the specified collection .
this method is called by the application to initiate a web application .
get a new .

gets the timezone timezone .
gets the timezone by id .
returns the timezone by id .
returns the name of the hours minutes .
tries to enter a enter - tree .



compares this object to another .
/ * ( non - javadoc )
/ * ( non - javadoc )
put the buffer to the buffer .
called when the current thread is stopped .
gets the javascript - only list of topics that are used to store the items in the list
return the search string .
loads the module from the module .
register a object to the persistencecapable object .

convert a native object to a native object .

resolves the class name of the class .
creates a native native or create a native class .
finds the enum value for the given enum constant .
process the list of callbacks .
invokes the callback callback method .
invokes the method .
invokes the method on the controller .
invokes the method on the object .
invokes the method on the given object .
process callback callback to process callback callback .
finds the method signature of the given class .
creates a new object reference to the .
finds all the registered {
get the { @link } for the specified class .
loads the module from the classpath .
get the package header summary information .
get the default { @link } for the given user .
asserts that the given number of times that the cursor has been recorded .
stop the current thread .

validates the given number of times the given number of times .
add a window to the window .
remove the window from the current view .
set the focused window to view .
run the server .
asserts that the given number of times that the query is deleted .
start the server .
{
set the period to be used for the period period .
returns the { @link } instance that is used to restore the cache for the cache .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link } instance .
create a new array of values .
parses a { @link } instance from the given reader .
{

parses a positive integer from an end string .
parses the given string and returns the hexadecimal digit .
parse a long long value from a string .
parse a long long value from a string representation .
parses a string and returns the number of digits in the string .

decode a text string .

{
invokes the stubbed handler method for the specified request .
/ * ( non - javadoc )

/ * ( non - javadoc )
get the id of the error .
writes the current value of the current { @code writer } to the output stream .
find the number of fixes directories in the given path .
list subdirectories .
enqueues a task to finish .
task task .


converts rdata to a string
returns the next token .

returns the value of the <code > / code > object .
/ * ( non - javadoc )
get the value of the property .
return the name of the origin .
returns the address of the given family with the given family name .
returns the address of the specified family .
ends the current token .
returns the string representation of the string .
returns the base64 encoded base64 encoded base64 encoded string .
returns the hex encoded byte representation of the byte array .
returns the hex representation of the given { @code } .
get the document s xml representation of the given xml .
parse the attribute value .
checks if the given { @link } is { @link } .
find all dependencies regarding dependencies .
finds all dependencies in the given class .
checks if the string is a valid kid .
parses the list of { @link jsontoken } s and returns the list of {
parses the json string to find the next token .
connect to the socket .
checks if the socket is a secure server .
create a new connect socket .
/ * ( non - javadoc )
creates a new edge from the given edge .
creates a new tinkerpop vertex .
returns a {
returns the enum flags of the given type .
adds the conditions to the conditions .
gets the value of the property .
returns the raw class for the given type .
login to the hadoop reporter
get server principal .
returns the { @link } instance associated with this { @link com . . . } .
check if the cluster is a valid cluster .
{
removes duplicated links from the document .
clones the given map and returns the topic s relationships .
returns the value of the given callable in the future .
returns the value of the given functor in the given object .


assigns the id to the given position in the given set of slots .
release a new id .
store the given value in the given { @link } .
loads the fields from the given { @link } .
/ * ( non - javadoc )
register the given type in the given class .
{
creates a for the given type .
inform the type of the cache .
{
get the {
get the script title .
generate the script script tree script tree .
<p > get all authorities from the user . < / p >
get the value of the .
returns the configuration of the given property name .
returns the map map from the keys to the keys .
writes the { @link } to the response .
list all the objects .

create a temporary directory .
this method is used to store the file of the aar file .
unzip the zipentry to the zip file .
extract the resource from the zip file .
find the content of the plugin from the given class .
closes the file .
handle the data source .
set the packages for the packages .
get all the classes of this class .
finds the given directory in the directory .
find the file for the given config file .
configures the basic auth - cookie header value ( preemptive ) .
{
adds a change to the list of fields .
adds a filter to the search filter .
add modifiers for the member .
generate the table caption information .
add the necessary link to the list of packages .
get the ssl strategy .
returns uri base uri path from http request .
returns the href of the path .

/ * ( non - javadoc )
get properties from file
get the properties of the given properties file .
get the properties of the command line properties .
add attribute attributes to attributes .
adds the content of the content to the content .
generates a name name for a named attribute .
get list of all in a networkservicedescriptor .
creates a new instance of the given type .
creates a new instance of { @link } .
generates a simple name .
generates a iframe tag with the given name .
create a new html tree with the given name .
generates a iframe tag with html attribute .
generates a script tag with the given type .
generates a ul tag with the given style .
executes the shell script .
start the bucket .
save the buckets of the bucket to the bucket .
loads the buckets of the bucket .
create a new packet with the given and
close the reader .
returns the packet stream writer writer .
writes the page headers to the response .
returns the number of times unused .
get the value of the character from the passed country .
returns the current time .
create a {
returns the {
creates an {
waits for the values to be updated .
return true if the current value is in the list .
checks if the given is a valid version of the given .
------------------------------------------
creates the api .
creates a version instance .
creates a policy bean based on the id of the given id .
returns the policy for the charging entity .

parses a datetime object from a string representation .
parse a datetime string from a timezone .
>
validates that the metrics is not usable to have a new value .
checks if the metric is valid .
validates endpoint .
get the project path of the specified object .
get the scores for the given .
put a new key / value pair into the cache .
clear expired entries .
removes the mapping from the cache .



/ * /////////////////////////////////////////////////
gets the api api from a string
{
returns the api key for the api api .
create a { @link } that contains all the nodes that are disjoint .
returns an iterator over the nodes of the given node .
returns an iterator over the nodes of the given node .
returns an iterator over the elements of this node conditioned on the given node .
check if a id is a valid id
returns the participants of the specified session .
returns the participants from the remote server .
gets the for the given participant id .
close the session .
closes all sessions .
gets the output of the outputplugin .
returns the { @link } for the given sparql <code > / code > .
inserts a new row in the given query .
inserts a new node into the list of nodes that are contained in the tree . this method is called when a new node is created .

/ * ( non - javadoc )
check if the given id is a connection
check if the user has the given .
check if a given string is a blank string
returns the first lowercase character from the source string .
returns the first lowercase character that is a substring of the string .
finds the index of the first occurrence of the specified substring in the target string .
checks if the given string contains a whitespace character .
checks if the source is a source string .
get the list of words in the textview .

checks if the word is a word or not .
checks if the word is a word .
returns true if the given source string is a source string .
checks whether the given source string ends with the given target .
returns the string representation of the given length .
returns the string representation of the given length .
returns a string encoding of the given encoding .
reverse string .
count the number of occurrence of a character in the target source .
returns the number of substring characters in the source string .
{
{
/ * error level
execute request
/ * ( non - javadoc )
close the stream and abort the stream .
/ * ( non - javadoc )
returns the key for the specified key .
check if the given path exists .
list all occurances of the specified directory .
get the path of the given host name .
set the version of the version to the version .
set the map mapping version .
returns the total number of rows in the rows in the cache .
{
{
check if the object name is compatible .
check if the chaincode is a job id .
extract the name of the from the given object name .
this method is used to get the name of the name of the given .
set the size of the data .
create filestatus for the .
delete the lock .
list values for the given values .
updates the view indices of the view .
gets views from the view .
queries the rows with the provided options .
get the default page size for the given page size .
registers the given {
contexts : xcastedexpression returns
{
returns the user properties .
returns attachment names for the document .
get attachment list from attachment .
get attachment with name .
check if this channel is listening to .
{
compares two boolean objects .
creates a { @link property } for the given { @code } .
creates a float property .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >

returns a new exception that is thrown by the given exception .
returns an instance of the given { @link } class with the given { @link throwable } s .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds the transaction to the persistent store .
retrieves the sheets from the dashboard s paginated station and contacts .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
returns the number of times the second day of the month .

calculates the epoch of 1970 - 01 - 01t00 : 00 : 00z .
converts a date to a date .

returns a distinct condition that yields every value that satisfies the given predicate .
creates a predicate that returns a predicate that returns a predicate that returns a predicate that is a valid predicate that is a certain condition that satisfies the given condition .
converts a date into a long value .
get a list of all the modules that are not in the list
sets the { @link } of the given { @link } .
$non - nls - 1$
sets the mode to be used for the gfd .

/ * ( non - javadoc )

read string from string .
/ * ( non - javadoc )
reads a 16 - bit integer from the current position .
sets the { @link cell } of the { @link cell } .
returns a map of properties of the specified {
sets the interval .
<p > adds the given date - time to the specified interval . the duration is not modified . < / p >
schedules the start time of the specified time .
changes the date of the date .
schedules the end time of the specified time .
returns the value of the {
checks if the current interval is a recurring charge of the specified reason .
<div color = red style = color = collapsed >
sets the number of markers to be excluded from the rule
returns the end of the interval of the dates .
sets the id of the id .
apply user - defined property to this .
sets the user object .
returns the unique property id for the zone .
get the location of the current user s os .
set the location of the location .
returns the date of the given {
returns the start time of this object .
returns the date of the specified {
returns the value of the property .
sets the minimum value of the duration between {
returns whether the title of the title matches the search pattern .
returns true if the current date is one of the same day .
returns true if the start is not a valid startdate .
gets the value of a property .
validate the given class and returns true if it is not a unidirectional false otherwise . <! -- begin - user - doc -- > <! -- end - user - doc -- >
calculate the ecdsa signature for the transmitter .
returns an iterator for iterating over the objects that are currently in the iterator .
remove the object from the queue .
sets the camera box .
set the of the edge .
sets the bottom corner of the ray with the corner .
set the { @link } for the .
set corner coordinates .
set corner coordinates .
set the left corner of this image .
set the left corner of this sprite
determine if the specified rectangle is within the bounds of the rectangle .
{
check if the given id is not already present .
sets the state of the value from the typed array to the state of the array .
load the specified faces .
add a new layer to the list .
add a layer to the grid .
add a new layer to the grid .
find the next layer id .
returns the element at the given index .
set the drawable for the drawable
find the index of the layer by its id .
sets the drawable for the given drawable at the given index .
get the drawable at the given index .
set the screen size .
set the value of the layer at the given index .
set the specified order .
{
set the padding for the visualization .
set the start and end padding for the drawable .
get outline outline
obtains the gravity for the given orientation and height .

ensure the padding is the same as the current space .
execute the connection .
waits for the given amount to the specified time .
a task for the task .
a task that will be used for the task .
calculates the fingerprint of the encoded version of the given algorithm .
runs the given { @code } by the given { @code amount } .
schedule the task execution .
this method is used to retrieve the result of a task .
/ *
a {

executes a call to a executor .
method that creates a new task with the given number of arguments .
a {


list all tasks in the specified task .
tasks be in progress . the tasks are returned as a result of the task .
check if the task is asynchronous .
checks if the current request is a historics asynchronous deletion and if it is not a retry of the result will be returned .
/ *
handles a continuation task .
{
/ * ( non - javadoc )
{
======

/ *
{
{
complete the task execution .
execute the task .
this method is called when the pool is interrupted .
/ *

cancel the current .
registers the given action for the given action .
create a new thread pool threads and creates a new thread pool .

push metrics to the queue serially .
returns the { @link list } of metrics for the metric .
batch get batch size .
start the evaluator
converts a duration to a duration of time .
/ *
prints out the current thread to the output stream .
update stats
create a response from a object .
creates a new config .
wraps a { @link } to wrap the given { @link } .
process an input process .
update the maximum of the given pagewrapper .
update the min max value .
set the number of examples to the specified { @link } .
{
{
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
validate the given .
compose a composite type from the given {
convert the value to a tuple
set the value of the tuple .
get the info info object .
gets the default mapping for a class .

parse the type of csl type


get the type of the type of the given type .
gets the output format for the given output format .

this method initializes the schema .
convert mainframe data to a string
convert a string to a mnemonic
get the info data for a cassandra keyspace .
get the columns of the column definitions from the cassandra keyspace .
extract the index type from the given type .
get the partition keys for the given location .
returns the indexes for the specified column .
find the keyspace with the name of the keyspace .
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( () ( ( ( ( lv_expressions_1_0 = rulexexpressionorvardeclaration ) ) ( ( ( ( ( = ) ) ) = > ( () ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( () otherlv_1 = new ( ( ( ( ( ( ( () ( ( lv_expressions_1_0 = ) ) ) ( otherlv_2 = ; ) ? ( ( ( = rulejvmtypereference ) ) ) * ) ? ( ( = rulexexpression ) ) )
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( () otherlv_1 = new ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( = rulejvmformalparameter ) ) ) * ) ?
internalsarl . g : : 1 : returns [ string current ] : = rulearraybrackets ( ( string = ) ) ;
internalsarl . g : : 1 : ruleidorsuper returns [ antlrdatatyperuletoken current = new antlrdatatyperuletoken () ] : ( this_id_0 | = | = | kw = | kw = ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( rulejvmformalparameter ) ) ) otherlv_1 = > ( otherlv_2 = ) ) ( ( ( ( ( ( ( ( ( ( ( ( (
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( () otherlv_1 = new ( ( ( rulequalifiedname ) ) ? ( ( = rulejvmtypereference ) ) ) ? ) ? ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( () otherlv_1 = new ( ( rulequalifiedname ) ) ( ( ( = ) ) ) ) = > ( () ( ( ( ( ( ( ( ( ( lv_then_5_0 = rulexexpression ) ) ) * ) ? ( ( ( ( (
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( () ( ( ( ( ( ( ( ( rulejvmformalparameter ) ) ) * ) ) ? ( ( = rulerichstringliteralinbetween ) ) ( ( = rulerichstringliteralinbetween ) ) ( ( = rulerichstringliteralinbetween ) ) ( ( = rulerichstringliteralinbetween ) )
add a new rollup to the list .
update the partition state of the given task update the given partition .
internalsarl . g : : 1 : ruleatom returns [ eobject current = null ] : ( () otherlv_1 = new ( ( ( ( ( () ( ( ( rulejvmformalparameter ) ) ) ) = > ( ( ( ( ( ( ( () ( ( ( ( rulejvmformalparameter ) ) ) ) * ) ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( ( ( ( ( ( ( ( ( ( = ruleabstracttoken ) ) | ( ( = ) ) ) | ( ( = ) ) ) | ( ( = ) ) ) | ( (
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( ( ( ( ( ( () ( ( ( rulejvmformalparameter ) ) ) * ) ? ( ( ( = ruleabstracttoken ) ) ) ? otherlv_5 = = > ( () ( ( ( ( rulesarlxloopformalparameter ) ) ) ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( () otherlv_1 = new ( () ( ( ( ( ( ( ( ( rulesarlxloopformalparameter ) ) ) ) ) = > ( () ( ( ruleopand ) ) ) ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( () otherlv_1 = new ( ( ( ( ( () ( ( ruleopand ) ) ) ) ) = > ( () ( ( ruleopand ) ) ) ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( ( ( ( ( () ( ( ( rulejvmformalparameter ) ) ) ( ( ( ( = ruleabstracttoken ) ) ) * ) ? ( ( = ) ) ( ( ( = rulejvmtypereference ) ) ) ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalsimpleexpressions . g : : 1 : returns [ eobject current = null ] : ( () ( ( ( = rulerichstringliteralinbetween ) ) ? ) = > ( () otherlv_2 = ) ) ? ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( () otherlv_1 = new ( ( ( ( ( () ( ( ruleopand ) ) ) ) ? ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
/ * ( non - javadoc )
internalsarl . g : : 1 : returns [ eobject current = null ] : ( () ( ( ( lv_expressions_1_0 = ) ) ? ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalsarl . g : : 1 : rulexannotation returns [ eobject current = null ] : ( () otherlv_1 = new ( ( ( rulequalifiedname ) ) ( ( = rulejvmtypereference ) ) ) * ) ? ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( () otherlv_1 = new ( ( ( ( ( ( ( ( ( rulejvmformalparameter ) ) ) * ) ) ? ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( = ruleabstracttoken ) ) ) | ( ( = ) ) otherlv_1 = < ( ( = rulejvmargumenttypereference ) ) ( otherlv_3 =
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalxtext . g : : 1 : returns [ eobject current = null ] : ( () ( ( ( ( ( ( ( ( ( ( rulejvmformalparameter ) ) ) * ) ? ( ( = ruleabstracttoken ) ) ? ) ) = > ( () ( ( lv_value_2_0 = ) ) ) ) = > ( () (
internalsarl . g : : 1 : returns [ eobject current = null ] : = rulejvmparameterizedtypereference eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( () otherlv_1 = new ( ( ( ( ( ( ( ( ( ( ( () ( ( ( ( rulejvmformalparameter ) ) ) * ) ? ( ( = ruleabstracttoken ) ) ) ? ( ( = ruleabstracttoken ) ) ) |
internalxbase . g : : 1 : returns [ string current = null ] : = rulearraybrackets eof ;
internalsarl . g : : 1 : returns [ antlrdatatyperuletoken current = new antlrdatatyperuletoken () ] : ( this_id_0 = rule_id | kw = | ( ( = rulevalidid ) ) ) ? otherlv_5 = > | ( = rulemethodcallliteral ) ) ? ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( () otherlv_1 = new ( ( ( ( ( () rulearraybrackets ) ) ;
moves the current fragment to the current site .
internalxtext . g : : 1 : : ( ) ? ( ) ? ( ) ? ) ;
performs a version of the given .
/ * ( non - javadoc )
load the osgi framework .
{
finds the vertexes that are contained in the graph .
find the edges for the graph .
adds a list of rows to the list of rows in the grid .
add a line to the list of transitions .
returns the current one which is a logical conjunction of the first node that is closest to the target node .
returns the current node in the graph .
defines the color that will be used to colorize the red green .
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
estimates the homography matrix .
computes the qr decomposition of the matrix .
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise

checks if the column is a valid sort definition .
returns the simplified composite .
adds a {
this method performs multilevel - validating a column family column family and stores the result in the { @link } .
perform a column by union the indexes of the distinct columns .
check if the column is a valid restricted for the specified column
check whether the expression is a runnable of the given expression .
returns the size of the array .
returns the size of the buffer to be returned .
initializes the map of values for the given odata type .
find the constructor for the given type .
returns the euclidean distance between two points .
returns the pixel value of the given type .
returns a list of the available addresses that are contained in the specified position .
{
reads the entire buffer .
reads a line from the current line .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
estimates the image
/ *
/ *
this method is used to get the type of the super class represented by this class .
finds the type of the given type of the given type .
locate the type of the given class .
/ *
/ *
converts the image to rgb .
{
estimates the senses for the disparity of the region .
select the inner of the regions
compares this { @code } to { @code } .
creates a new builder for the given field and values .
adds a file to the file .
this method is called after the start of the line terminator is processed .
add a data point data source to the output file .
set the column family of the hive database .
set the column family name .
set the output schema for the given keyspace .
set the column family name .
set the input {
sets the { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } {
get the { @link } for the given { @link } .
sets the { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } {
set the { @link } to be used for the given filter
set the directory to be used .
checks if the expression is a block of the process .
create a new message from the bytes of the given bytebuffer .
/ * evaluates the given expression .
<p > . < / p >
transform the bounding rectangle to a x y and store the result in the distorted image .
transform the coordinates in wgs84 to the given latitude longitude .
returns the value of the named property .
returns the name of the scope of this scope .
remove the given object from the scope .
creates a new variable with the given name and type .
finds the name of the name of the given name .
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
indexes the index for the index for the column index .
{
{
<p > return a string array with the given character . < / p >
cli utility methods

imports document from csv file into db .
get the key type of the given column family .
main method to parse the given command line .
converts a { @link } to a { @link bytebuffer } .
fetch all environments .
fetch a space from the given space .
create a new { @link } with the given { @link cmaclient . builder#setenvironmentid ( string ) } .
update the metadata of the document .
delete a specific instance from contentful .
sets the grantee to the .
add a new role to the list of policies .
sets the email address .
add a control to the control .
fetch all entries from the given space . <p > this fetch will publish the space to the { @code } . <p > this fetch will fetch the provided space . <p > this fetch will not retrieve the given space . <p > this fetch will fetch the provided space . <p > this fetch will not retrieve the given
fetch all assets from the given source . <p > this fetch will return the { @link } . <p > this fetch is used by default . <p > this fetch defines the parameter which is a form of the { @link } . <p > this fetch is used by default . <p > this fetch defines the parameter
fetch all assets within a space . <p > this fetch will return a new { @link cmaclient . builder#setenvironmentid ( string string ) }
fetch a string from the given space .
update the key associated with a given key .
create a new space for a space .
delete a node .
creates a new for the given training .
computes the laplacian of the contour of the input image .
this method is used to check the features of the features in the image .
check if the x y is a positive integer .
calculate the value of the specified from the given layers
checks if this triangle is a edge between two nodes .
{
fetch the { @link } for the given { @link } .
applies the filter transform to the input image .
transform the given { @link } into the { @link } .
create a new query using positional parameters and filter .
create a new query using positional parameters and filter parameters .
create a new query with positional parameters .
create a new query with positional parameters .
returns property value if property is not found .
convert a collection of strings to a collection of objects .
finds the camera which is ordered by the given camera .
checks the availability of a bucket .
this method will parse the given temporal object .
update the hour of the hour minute and second .

{
{
{
{
performs a shadow centered on the input image .
computes the image for the image .
estimates the derivative of a 1d forward transform .
computes the laplacian of kernel across the image .
/ * ( non - javadoc )
retrieve the json document for the given entity type .
creates a span from the given span .
this method is called when a new instance is created .
add a new to the list of .
set the property .
initialize the .
{
populates the list of files in subdirectories .
{
check if the grid is connected to the grid
creates a grid view to the grid center .
initialize the .
sets the pixels of the fiducial .
set the feature sizes .
set the list of top - level blocks in the image .

estimates the camera matrix .
get the pq index of the feature .
assigns the specified observations to the given indices .
normalize the matrix .
generates the method for the specified data source .
computes the derivative derivative of the image .
this method is used to convert the x - direction pixels to the direction of the given direction .
computes the derivative of the image centered at infinity and writes it to a polygon .
convert a lat / lon pair to a float .
computes the maximum image for a given direction .
computes the maximum image for a given direction .
computes disparity between score and regions .
compute the homography score row .
returns whether the given parent element is not a descendant of this parent .
trigger a callback
estimates the .

process the input image and output output .
initializes the polygon .
computes the merge of the union of the two clusters .
merges the given list of neighbors with the given data .
finds the child node of the given node . returns the index of the root node .
compute the output of the input graph .
checks if the given { @code value } is not supported .
<p > the <code > link< / code > for each attribute of <code > attributename< / code > . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link
<editor - fold defaultstate = collapsed desc = image related >
creates a single border for the specified image type .
<editor - fold defaultstate = collapsed desc = image style = = = = = = = 2 ]
creates a new track .
creates a new hessian detector containing the specified quantile value .
creates a new histogram based on the specified value .
calculates the mean value of an image .
validate card card
validate the vat identification number of characters



{
compute the laplacian of features that are the image

calculate the maximum of black images .
accept the filter that matches the specified filter yielding a list of { @code } objects .
<p > rejects a { @link } that is ready to be executed . < / p >
checks if the specified { @link filter } is a { @link list } of { @link filters } s that matches the given filters .
{
<p > adapt . < / p >
initialize the {
estimates the input image .
performs a single - vector search .
computes the forward - infinity in the real data block .
computes the inverse transform of the input image .
computes the upper triangular portion of the matrix .
get a file name for the given file .
validate the definition of the given chaincode schema .
/ * ( non - javadoc )
replace prefixes from to configurationmodule .
renames the files to the given source .
process the node .
parse xml from xml document .
get a xml string for the given node .
validates that the namespace is a prefix of prefixes .
parse xml file to xml .
lists the list of filters for the given directory and all of the elements in the list .
creates a filter that matches all patterns that are matching the given filters .
prunes points in the contour .
remove the contour points from the contour .
computes the manhattan segment of the given .
prunes corner points from the contour of the given .
computes the segment of points in the contour .
performs the actual region of the region and returns the results .
sets the list of all the lists of lists of points .
finds the regions regions of the shapes in pixels .
this method is used to compute the pairwise distances between the residues of the neighbors of the adjacent table .
get item items items
get the list of items that match the given filter .
binding for { @link }
returns the number of times the number of items that are emitted by the given number of items .
binding for mybatis list number
creates a new join join binding .
creates a binding from a list of items that are not present in the given list of items .
creates a binding of a particular operator type .
creates a new binding object which allows to combine the given values according to the given { @link collection } .
creates a new binding object applying the given transformation function to each element of each element .
combine the given list of items into a single iterator .
returns the { @link set } of { @link annotation } s .
get the value of the entity property .
sets the value of the specified entity .
returns the configuration of the specified type .
returns a list of type { @code } for the specified type .

registers the modules .
sets the bundle resolution of the bundle .
returns the annotation of the specified type .
converts a byte array to a hexadecimal string .
converts a string to a java string .
commits the current connection to the database .
get the property <code > / code > .


creates a new { @code } with the given { @code text } and { @code text } .
gets the session .
returns a session object .
computes the current interpolation
this method is used to compute the current coordinate ( s ) .
converts the specified pixel to the specified image .

{
returns a reader for the given record .
closes the closeable .
invokes the given input and returns a new object .
writes the specified position in the specified position .
sets the protocol negotiated to the connection .
runs the next call .
get the taskinprogress threads .
returns a count of all the threads in the specified collection .

loads a data from the given map .
pushes a new value to the current thread .
processes the record .
creates a new record record .

this method reads the input stream from the input stream .
this method is called when the current time is available .
transform the given transform .
//////////////////////////////////////////////////////////////////////
reads the contents of a { @link inputstream } into a { @link byte } .

reads a variable number from a stream
reads a number from the stream .
reads data from the stream .
reads the data from the stream .
creates a new scan listener for the given time unit .
parse the given arguments .
this method is called by the compilation unit to simplify .
this method is called from within a to simplify the .
returns the string array of string literals .
initializes the list of points .
set the grid view .
encode the bytes in the given byte array into the given byte array .
{
main method .
{
creates a new for the given .
computes the histogram intensity of the image using the given image pyramid .
computes the image for the given image using the image s intensity .
get the header header entries .
detects the number of lines in the input list and then returns true if the number of lines in the input chunk is not a chessboard point .
checks if the contour is within the bounds of the contour .
checks whether the contour is aligned to the end of the rectangle .
adjust the winding spline from the source rectangle to the bottom edge .
this method is to recover the contour of the contour points
finds the point of points in the target point .
renders the grid .
adds a solution to the grid envelope .
{
convert certificate to certificate chain .
returns the certificate chain for certificate security .
{
returns the addresses associated with the current connection .
returns the session .
{
closes the connection to the given socket .
{
set the tag class .
sets the serialized serializer to the given serializer .
sets the type of the element type .
sets the default type of this property .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
checks if the given child is a logical or exclusive of the same index .
check whether the given text is a whitespace line .
called by the { @link } .
main method .
returns average of average of cubic distance ( theta ) for the given weighted double .
estimate average of the given tolerance .
compute the quantile function .
parses command line arguments .
build a client configuration for reef .
main method .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >

{
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
dispatches the given time to the given time .
previews the progress bar to jump to the progress bar .
set the alpha value of the sprite sheet .
checks if the element is present .
validates that value property is not null .
handles the checked action .
creates a { @link } for the given { @link context } .
sets the response status code .
test if the given node is a namespace - of - category .
checks if the given node is a namespace
checks if the given { @code } is not present .
checks if the given node is a namespace
render the animations of the ink - interactive actions . the highlighted is rendered . the animations will be highlighted by the animation . the highlighted is rendered in the order of the animations . the highlighted is shown and highlighted . the values are displayed in the form : <code > . ( . () ) < /
{
returns the volume of the block .
build capabilities for the capabilities of the given { @link } .
returns the class of the given port .
returns the port for the given port .
checks if the header is not present
{ @inheritdoc }
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
/ * ( non - javadoc )
returns the wait time for the current seconds .
set the {
creates a new .
creates a builder .
start the server .
stop the current stop .
remove a route from the current user .
gets the {
list of resources
get form form
returns a info version of the specified { @code } .
parse a date value expressed in the provided string .
set query parameter to the query string .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >

returns a secretkey secret key and the key material material material .
returns the last status of the current status of the current run status .
check if the current user has the name of the current user .
creates a new key pair pair .
register the current context .

========================================================================================================
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
parse the given string array and return the corresponding type .
creates a new streamtokenizer that will parse the lines .
returns a resource handle to the resource .
evaluates the validation matcher .
checks whether the expression is a valid regular expression expression .
verifies that the expression is a valid prefix of braces .
reads the resource from the given resource name .
returns a list of resources that have been loaded from the resource source .
returns a list of resources currently in the current environment .
finds a resource with the given name .
finds a resource in the given url .
finds the resources that are found in the resource source .
finds resources of the given urls in the given directory .
check if the file is a directory .
/ * ( non - javadoc )
create a new url for a given url .

returns parameter from given parameter name .
add a parameter to the command line
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
this method is used to convert the given value to the given value .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
sets the certificate extensions to use .
waits for the file to be written to the file .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
executes the given json object .
this method is invoked when the job state is updated .
this method is invoked when the client is running .
create a new {
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
validate command .
returns the name of the destination name of the destination .
creates a new { @link } instance from the current { @link } .
populate bean bean from the given bean .
set the { @link privilegedaction } to be invoked on the given { @link privilegedaction } .
validate the given bean .
get workspace from google workspace .
associates the specified workspace with the specified id .
/ * ( non - javadoc )
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >


<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
