returns the options for the given field
returns the members of the given type
returns the model conf entries
initializes the cell
returns the cell editor value
returns whether the source cell has been added
returns the model conf entries
creates a new page
returns the preview panel
draws the scene
draws the targets
process the scene
returns the display mode of the specified component
this method is called when the game is about to be processed
this method is called when the is closed
dump the file to the dump
loads the given file
reads a file from the given file
load a texture from a resource
draws the scene
plays the targets
this method is called when the user selects a banner
loads the configuration file
saves the configuration to the file
handles the key released event
called when the display of a change has been changed
encodes an object
return the object representing this object
encodes an object into an object
decodes a type object from the given type
constructs a new dice
constructs a new dice
returns the next pseudorandom uniformly distributed value
returns the current value of the current value
returns the current value
sets the current value
adjust the value of the current value
returns the maximum value
sets the maximum value of the field
sets the description of the
receive notification of character data inside an element
sets the maximum value of the slider
called when the user selects a character
evaluates the xpath expression
test method get registration in period
login page to the user
sets the name of the class
returns the attributes of this element
returns the elements array
delete the database record
read by a certain amount of the post
creates a new database object
updates the database
creates a new database object
read a count back from the database
delete the database record
creates a new
updates the database
returns the number of available
read a count recipe from the database
this adds a property descriptor for the auto increment factor data feature
this adds a property descriptor for the editable feature
this adds a property descriptor for the desc field size feature
this adds a property descriptor for the name feature
this adds a property descriptor for the pk field name feature
this adds a property descriptor for the desc field type feature
this adds a property descriptor for the desc field name feature
this adds a property descriptor for the name db feature
this adds a property descriptor for the entity feature
this adds a property descriptor for the depends feature
this adds a property descriptor for the entity feature
this adds a property descriptor for the use as filter feature
this adds a property descriptor for the pk field name feature
this adds a property descriptor for the sample data value feature
this adds a property descriptor for the subtitle feature
this adds a property descriptor for the visible form feature
this adds a property descriptor for the visible list feature
this adds a property descriptor for the default value feature
this adds a property descriptor for the documentation feature
this adds a property descriptor for the expanded feature
this adds a property descriptor for the group name feature
this adds a property descriptor for the primary key feature
this adds a property descriptor for the to string feature
this adds a property descriptor for the not null feature
this adds a property descriptor for the size feature
this adds a property descriptor for the type feature
this adds a property descriptor for the is password feature
this adds a property descriptor for the documentation feature
this adds a property descriptor for the is identity feature
this adds a property descriptor for the id feature model feature
this adds a property descriptor for the menu feature
this adds a property descriptor for the row item feature
this adds a property descriptor for the id feature
this adds a property descriptor for the base package feature
this adds a property descriptor for the label feature
this adds a property descriptor for the database feature
this adds a property descriptor for the documentation feature
this adds a property descriptor for the table name feature
this adds a property descriptor for the entity feature
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the pattern constraint of em pattern em
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the pattern constraint of em pattern em
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this just records the information
create a new model
returns the label for the specified feature name
handles activation of the editor or its associated views
returns a diagnostic describing the errors and warnings listed in the resource
this accesses a cached version of the property sheet
initializes the annotations for b http
make the selection
returns a string representation of this hash
a
this method initializes this
this method initializes scr
this method initializes tbl produto
this method initializes btn novo
this method initializes this
this method initializes btn salvar
this method initializes btn filtro
this method initializes scr cliente
this method initializes tbl cliente
this method initializes btn consulta
this method initializes this
this method initializes btn
this method initializes btn cancelar
this method initializes pss senha
this method initializes this
this method initializes txt usuario
this method initializes scr empresa
this method initializes this
this method initializes tbl empresa
this method initializes this
this method initializes
this method initializes tbl cliente
this method initializes this
creates a button
sets the text
called when the list is changed
returns the first occurrence of the given term
writes an error
write the given attribute to the given element
returns the path to the file
writes a to a specific element
this method is called when the output stream is forwarded to the
forward to the input stream
print the output stream to the output stream
initialize the registry
kill the game
returns the value of the node
sets the preference node for the node
this method initializes
this method initializes
this method initializes men arquivo
this method initializes mni
this method initializes pnl
this method initializes menu item produto
adds a new image to the list
adds a line to the message
this method is called by the subject
returns the name of the server that this server is being created
sets the declared server
adds a recipient to this message
sets the sender of the sender
sets the message body
sets the flag indicating whether or not the message is complete
pop the message
returns the sender of the message
pop a message from the queue
returns the set of email recipients
returns the message body
sets the headers
listen for incoming tcp socket
outputs the given message to the console
pojo pojo pojo pojo for a pojo
gets html list from result set
returns the parameter argument names
returns the parameter argument for the parameter
get the sql query to be used for querying the query
gets the select list attribute of the object
returns the hue of the given
getter for property location content
adjusts the percent of the
adjust the color of the
adjust the color of the image
power of the tone
returns the color
returns the hue of the
returns the
returns the color used to draw the color component
returns the saturation of the saturation value
returns the type of the question
adds an item to the list of items
initializes the options for the current question
adds a new frequency to the frequency
initializes the options for the current question
returns a short description of the servlet
this method is called when the server is initialized
called when the servlet context is destroyed
p this method is called when the server is initialized
called when the servlet context is destroyed
sets the message table class
returns the name of the home
adds a set of steps to the set of values
register a view to the given view
sets the content of the panel
returns true if the given view is available
returns true if the given view name is active
returns the view associated with the given name
returns the current view name
returns the current view
returns the view name
returns the name of the view
validates the email
validate the subject
adds a hit to the hit
removes a hit from the list of hit hits
removes all hits from the given collection
returns the hit of the hit
checks if the hit hits the hit contains the hit
filters the mappings of the given collection of occurrences of
gets the value of the property
filters the filter mappings according to the filter
filters the score by the given score
this method is used to determine the best match for a concept
sets the delete value for this delete project
returns the value of deleted
add a chemical to the list
returns the name of the component
write the concepts to the given collection
returns the version of the application
returns the accession number
returns the ambiguous flag
returns the cv type
returns true if the receiver is required
prints the path to the file
sets the tag
returns the tag
returns the name of the component
returns the version of the application
returns the name of the component
adds a new accession to the list
returns the string representation of the string
returns the version of the application
returns the number of in the string
returns the higher higher higher higher higher nr of the given
returns true if the protein id is a protein
adds a protein id to the registry
returns the protein id
adds a gene to the registry
returns the gene
checks if the given chromosome id is already in the chromosome
add chromosome to the cache
returns the number of the given chromosome
starts the
returns the graph
adds a citation to the publication
copy the given to the given
returns the node object
add a protein to this group
clears the cache
adds a link to the
add a cat object
sets the to the given one
fixes the type of the text
populates the mapping from the given file
adds a description to the comment
add an organism to a given
add an organism to a list of
find the data source for the given string
returns the data source for the entity
copy the given to the given
get the meta data object for the metadata
writes the given string to the output stream
returns the concept class with the given key
returns the path to the next node in the path
resets the cursor to the next position
search for all the components in the list
add a new to a list of
adds a new entry to the publications list
adds a db link
returns the value of the given key
prints the number of vertices in the graph
adds a new accession to the list
returns true if the given string is a accession number
build a file for the given subset of the given types
compares this score to another
compares this to another
returns the name of the component
returns the version of the application
returns the name of the
returns the version of this
add a string to the
add a collection of to the list
adds an annotation to the end of the annotation
add a string to the
add a list of names to the list
sets the id of the player
checks if the key is a key
adds a new to the collection
set the key
returns the concept class name
set the concept class
copy the given values to the given set of values
adds a string representation of the clause
adds a new entry to the set
composes an object with the given identifier
adds a string to the clause
compose a compatible uni
returns the local name of the given element
quote a single quote
copies a file to the destination
returns the value of the given class
returns the source relation of the given type
returns the target of the given type
returns an representation of the given attribute
parse the tree
write the notes to the given
returns the number of in the registry
returns true if the given id is already in the registry
adds a new id to the registry
returns true if the given gene exists
checks if the chromosome contains the given chromosome
adds a chromosome to the cache
returns the number of chromosomes
writes the given string to the output
corrects the given string to the given string
convert a concept into a class
this method will return the string representing the given value
this method is used to validate the argument
checks if the given string is a constant
add a new code code to code code
logs the info of the event
returns a pretty printer string representation of the given class
build the go str str str
returns the name of the component
returns the version of the application
returns the name of the component
returns the version of the application
returns true if the receiver is required
returns the db object id
returns the go id
returns the aspect
returns the db object type
gets the assigned by attribute of the ticket object
returns the text of the input string
adds an alternate coded alternative to this component
adds a reference to the list of ref
adds a synonym to the list
returns the name of the
sets the definition refs for this definition
returns the version of this
calculate the log likelihood of the
clones the subtree rooted at the given parent node
sets the parent of this cluster
returns the cluster
returns the child node at the specified index
make a key node
returns the of the
sets the child node at the specified index
registers a new node
this method is called when the operator leaves the state
checks if the is in the
returns the number of consensus clusters
returns true if this node is a leaf
returns the feeds
returns the key of this bit set
calculate the threshold for the given
returns the node that is the given node
replaces the old node with the given old node
returns a clone of this node
set the value of leaves
build the output of the node
computes the of the node
returns the name of the component
returns the version of the application
returns the name of the component
returns the version of the application
returns the name of the component
randomly generates a random index
returns the version of the application
returns the name of the component
randomly generates a left right random number
returns the encoding of the gene gene
adds a molecule to the molecule
sets the encoding of the gene gene
sets the sequence
adds a molecule to the molecule
setter for property species
adds a molecule to the molecule
adds a new to the list of
sets the authors name
adds a molecule to the molecule
sets the source
adds a new to the database
adds an alternative alternative to the list of accession
returns the relation type for the given relation type
adds synonyms to the synonym list
adds a publication to the list of publications
parses a line
parse the string value from the string
parses the type string
adds an alternative alternative to the list of accession
sets the matrix
adds a new to the database
adds synonyms to the synonym list
parses the acc accession
adds a publication to the list of publication
parses the site name and returns it
parses the encoded asn
sets the location
sets the
returns the id of the
sets the sequence of the sequence
add an to the
adds a gene to the
adds a new matrix to the matrix
returns the name of the
returns the version of this
returns the name of the component
returns the version of this
sets the element id
gets the value of the element property
sets the target id value for this
sets the entry id1 value for this
sets the element id1
sets the entry id2 value for this id2 result
set the endpoint address for the specified port name
sets the query nodes
sets the components components
sets the target nodes
returns the element type of the element
sets the element type
sets the value of the property
sets the entry id value for this
sets the id1 value for this
sets the genes allele records value for this gene
returns the value of the em em score em calculated by
sets the sw score value for this ws profiling score
sets the id value for this
returns the current bit score of the
sets the id value for this
adds a new element to the list
sets the value of the bit score property
adds a new element to the list
sets the
set the identity of the joint
sets the overlap
returns the start
sets the start
returns the end
sets the end
returns the start position of the start of the track
sets the start time
returns the end position of the
sets up the data for the
sets the end position
returns the element of the element
sets the element of the element
returns the graphical x coordinate of the graphical object
sets the graphical x coordinate of the viewport
returns the best flag
returns the graphical y coordinate of the viewport
sets the graphical y coordinate of the viewport
sets the best flag flag
sets the id of this object
gets the value of the of fk property
search for a concept in the search
sets the fk of the fk
returns the best flag
creates a regular expression for the given
sets the best flag flag
sets the value for this
sets the value for this
returns the of the
sets the
returns the length of the hessian
sets the length of the hessian
returns the key
gets the fk fk property value
returns the accession number
gets the sequence type fk attribute of the dtl object
sets the fk property value
sets the fk type
sets whether or not the is ambiguous
sets the element of the element
adds a new concept to the context
returns true if the given id is a
gets the concept id from the concept
returns the unique identifier of this object
returns the relation type
checks whether the given code name code is a valid
gets the concept id
returns the of the
returns the value of the is self context property
search for a concept in the search
sets the
sets the structures
returns the concept
checks if the string is empty
insert a concept with the given name
registers a new component parser
returns the name of the component
returns the version of the application
clean up the database
returns the name of the component
returns the name of the component
sets the cancelled
returns the name of the component
set the value of the ignore attributes attribute
returns the name of the component
checks if the given id is a valid space
checks if the given is a concept name
returns the name of the component
check if the is a concept name
returns the version of this
returns the next path in the path
search for all the components in the list
creates the relations for the given map
starts the thread
insert an array of objects into the queue
returns the of the given concept
logs the specified event to the log file
returns the size of the list
resets the state to the state
checks the state of the given object
this method checks if the given object is a valid state
returns the last id of the concepts of the concepts
returns the code concept code at the given index
returns the relation for the given index
returns the number of edges in the graph
returns the number of nodes in the graph
returns the name of the component
returns the concept prototype object for the given string
returns the name of the component
returns the name of the component
returns the version of the application
compares the score to the given score
returns the longest sequence of the target
returns the coverage of the sequence
returns the coverage sequence of the query
returns the coverage sequence of this sequence
make the current state of the
maps the given map to the given map
initializes the error rate
adds a new node to the graph
returns the b
adds all nodes in the given network to this queue
checks if the node contains the given node id
initializes the map with the given set of key maps
returns true if the given edge is a set of edges
updates the graph
reads sample error rate
this method is called to collect the edges of the graph
returns the falling back
returns true if parsing sequences are used
returns the lookup file
processes the java script strings
returns a reader for the current file
write the probabilities to the file
returns the name of the component
returns the version of the application
returns the name of the component
returns the version of the application
returns the name of the component
parses the properties file
returns the version of the application
returns the name of the component
returns the version of the application
returns the name of the component
returns the name of the component
returns the version of the application
returns the version of the application
returns the name of the component
prints the value map
sets the print stream to use for this
flushes the output stream
returns the string representation of the given attribute
create the output properties
returns the name of the given attribute
returns the name of the component
returns the name of the component
returns the version of this
returns the version of this
returns the name of the component
returns the version of this
calculate the concept directory for the given concept
returns the name of the component
returns the name of the component
returns the version of the application
creates a new
creates a new concept
returns the name of the component
returns the name of the component
returns the version of the application
returns the name of the component
returns the version of the application
returns the version of the application
returns the ith element in the order
set the value of a single element in this matrix
generate a key for the given key and the
returns the next instance of the current
set the value of a matrix
return the term
returns the name of the component
returns the name of the component
returns the weight of the given weight
returns the version of the application
returns the version of the application
checks if the reference is a reference to a db
applies the graph to the graph
start the graph
returns the links text
returns the opposite concept
returns the weight of the given weight
this method is used to set the value of the
displays the about box for a missing evidence
this method is used to generate the event
set the species map
returns the id of the tax
returns the gene type id of the gene gene
returns the id of the gene gene id
returns the id of the tax field
returns the accession reference at the given id
opens a dialog to choose a file
sets the string input
sets the home directory
sets the input strings
adds a listener to the list of listeners
starts the process
this method is used to deliver the log to the server
sets the home directory for the application
get the value of the run info
returns true if the home is ok
sets the uri of the
returns whether the data viewer home is ok
returns the output of the task
the
sets the input file
returns the first value of the given string array
returns true if the value is a valid value
returns true if the inputs is an input gate or not
clean up the
adds a listener to the list
fires an event that the event has been changed
compares two objects
compares two
compares two objects
compare the two names of the names of the
fires an event
checks if the concept is a concept class
returns the relation type of the relation
this method is used to check the data source
returns the evidence type
returns the name of the attribute with the given name
returns the unit with the given id
fires an event
scan classes to include zip file
loads a new export from the given name
loads a filter from the plugin
loads a mapping from the given name
loads a parser from a given name
loads a transformer
loads a validator
adds a plugin to the configuration
checks if the given name exists
returns true if the given name exists
returns the number of values for the argument
returns the value of the named property
returns the file object for the
returns the arguments
removes a listener from this
distributes the event listener to the event handler
called when the event is fired
returns a file download object from a url
returns true if the argument is required
returns true if multiple instances of the list of
cleans up the test directory
checks if the specified object is valid
deletes the file
returns the lower range
returns the upper limit of the upper limit range
parse a string
download a file from the given download
parse a float value
checks if the specified argument is valid
checks if the specified argument is valid
parse an argument
parse a string
sets whether the directory is a directory
returns true if this node is already existing
sets whether this node is already existing
parse an argument
called when the event is dispatched this event
returns the parent of this node
deletes the given object from the database
returns the parent of this node
returns the parent of this node
returns the score of the entity
initializes the component
returns the of the
returns the of the
returns the position of the given bit in the buffer
this method is called when the is caught
returns the exception caught in this
adds a concept to the list
adds a relation to the list of relations
removes a concept from the list
inserts a new data object into the database
clone all the meta data
remove a relation from the list
remove all the components from the graph
clones the given tuple
inserts a new data object into the database
close the connection
sets the of the given graph
closes the index file
adds a list of to the list of all concepts
adds all the relations to the list
add a new type to this instance
adds a new
adds a relation type to the list
add a tag to the graph
shutdown the executor
returns the value of the code code property
search for a concept
search for a set of seeds
adds a class to the list of inner vertices
adds a new concept data source constraint to the data source
add a constraint to the table
adds a new step to the transition
checks the state machine state machine state machine
returns the relative rank of the given method
removes a concept from the list of composing to the list
returns true if the order is inverted
returns true if the modulus is a modulus values of the
returns the go term
parses a id
add a new entry to the tree
initialize the
returns the number of entries in the list
returns the entry with the specified id
returns the shortest entry for the given id
returns the depth of the shortest path between the activations
returns the distance between two terms
returns the directed distance between two terms
sets the domain
sets the parents value
returns the namespace of the term with the given id
returns the trace of the term
removes the relation from the relation
returns true if the queue has no more elements
returns the parent path node
considers the path for the given node
removes the first element from the queue
returns the content of the given
returns the evaluation of the given
returns evaluation of the given set of values
removes the relations from the given array of indices
compares its two arguments for order
called when the event is dispatched
adds a listener to the list
removes a listener from this component
returns the precision of the given point
returns true if the given class is already registered
returns the message that is complete
returns the log4j level for the log4j level
returns the recall of the given
set the log4j level for the log4j level
sets the
returns the score of the given
fires an event
returns whether the is preferred
sets whether the is preferred
gets the of the
sets the of this to the specified value
sets the id of the
gets the value of the id property
returns true if the is
sets the is
returns true if the is
sets the is
returns true if the is
sets the is
returns the element of the element
sets the element of the element
returns the is ambiguous
sets whether the is ambiguous
returns the from concept id
returns the from concept name
sets the from concept id value for this concept
sets the from concept name
returns the to concept id
gets the to concept name attribute of the concept object
sets the to concept id
sets the to concept name
fires an event that the event has been changed
delete the user
decodes the given term
returns the lucene index of the given graph
calculate the next concept
calculate the relations for the given concepts
recursive method to the a node in the tree
returns whether the source has a parent of the
sets the scaling mode
returns true if the contents of the contents of the current
returns true if the option is shown
builds the menu
displays the contents of the given code viewer code
show the options dialog
returns the viewer
sets the to the given layouter
this method sets the to the layout
this method is called when the user selects the visualize button
returns the length of the given
this method is called when the slider value is changed
shows a dialog with the given file name
calculates the delta of the distance from the graph
calculates the energy of the
this method is called when the user selects the
transforms the input to an input
invoked when an action occurs
returns true if the user has been created
sets the icon map
returns the minimum size of the node
returns the maximum size of the node
add a column to the table
adds a row to the buffer
sets the column pressed column
sets the highlight column
returns the value for the cell at code column index code and
set the probe
sets the probe
returns the ratio of the given probe
this method is called when the user presses the dm
description of the method
sets the cells editable state
insert the data into the table
adds a new table row to the table
description of the method
invoked when an action occurs
description of the method
invoked when an action occurs
returns the node transformed by the given node
returns the color of the given edge
calculates the dimension of the roots
calculate the x dimension x coordinate of the top level
recursive method that builds the graph
returns the depth of the tree
this method is called when the graph selection changes
sets the current position of the camera
returns the largest point of the rectangle
populates the combo box with the values
adds the attribute names to the list of
sets the current position of the camera
sets the radial locations
this method is used to determine the error message
annotates the nodes of the graph
description of the method
invoked when an action occurs
description of the method
returns the maximal value of the range
returns the minimal value of the field
invoked when an action occurs
called whenever the value of the selection changes
returns the number of relations in the current graph
returns the concept class
returns the number of relations visible in the
returns the number of concepts in the current concept
returns the number of visible concepts of the current concept
returns the relation type of this relation
returns the stroke for the given edge
returns the node as a transform
returns the meta data for this metadata
updates all the vertices
updates the color of the given node
updates the color of the given node
returns the color for the given edge
update all the types in the graph
updates the given color type
updates the color of the given edge
sets the size of the shape
returns the shape of the node
updates all the shapes in the list
recreates the graph data
updates the shape of the shape
make a maximal length of the text
returns the label of the given relation type
updates the label of the given edge
updates all the types in the graph
returns the edge of the given edge
populates the list of attributes name attributes
populate the list of relations
sets the state of the
updates the chart with the chart
adds a vertex to the graph
description of the method
returns true if the given edge is already in the graph
checks if the given vertex is contained in the graph
returns the edge that is the intersection of this edge
notify all listeners that have registered interest for
returns the destination edge of the given edge
returns the edge type of the given edge
returns the source of the given edge
returns true if the edge is a destination vertex
returns true if the edge is a source vertex
removes an edge from the network
removes a vertex from the graph
returns the label of the given concept
updates the label of the node
updates all the classes in the concept
returns the transform for the given node
sets the graph
returns the center of the graph
adds the attribute names to the list of attributes
creates the properties table
show the legend window
adds the value to the graph
compute the color table for the selected
returns the value of the mp
scan configuration file
scan configuration file
select the node
load the configuration file
load the configuration from a url
converts the given class to a class name
converts a class name into a class name
separates the trailing files
delete the file
returns the item
finds min max
clears all filters
calculates the average and tally for the given collection
adds a new cc header
returns the standard deviation of the deviation
removes a single concept from the list of
add a new to the list of
creates the swap panel
creates a button for the specified button
removes the given from the list of
configure the taglet
set the attribute name for the request
remove an attribute from the request
set the value of the variable
returns the parameter value of the given parameter
initializes the icon
adds a filter to the list
returns the variable name
creates a sample chart
sets the average number of pixels to be displayed in the
removes the row at the specified row
sets the value of the needle
set the number of
set the number of relations in the
add a filter to the table
returns the full name of the current user
extends the table with data from the table
returns the description of the text
returns the unit of the selected unit
returns the selected item in the list
sets the concept accession
flushes the changes to the output stream
clone this object
copy the values of the given em copy em to em em
copy the context to the given copy of the current
this method is called when the is changed
clones a new
clones a new
clones a new
updates the relation in the graph
copy the values of the given copy into the current copy
updates the concept editor
copy the given to the given
returns the required color of the
copy the of the given to the given
initializes the icon
copy the names of the given to the given
displays the specified frame centered on the desktop
set the help broker
builds a button panel with the given name and
add a new attribute to the list
show the node labels
returns the custom icon
returns true if the graph is shown
show the edges of the graph
returns true if the edges are shown on the graph
returns the node size
sets the node size
returns the size of the edge
sets the edge size
returns the font size
sets the font size
updates the menu bar
forces the size of the given component to exact exact size
creates a menu with the given key
creates a menu with the given key
creates a menu item for a given action
creates a menu item with the given key and its key and
returns the meta graph object
populate the menu menu with the menu item
hides the selection
initializes the icon
sets the font of the font
sets the mouse mode to the specified value
sets the on resize
show all relations that are currently selected
scale the image to the scale
returns the selected menu box
returns the mouse mode
returns the concept classes
returns the data sources
returns the search mode
returns the text of the search text field
returns the tags
returns true if the regex is a regex
adds a listener to the pick listener
returns the annotation manager
checks if a regular expression is a valid regular expression
removes all the popup windows
checks if the molecule is a
fires a pick event to all registered listeners
returns the url of the given parts
sets the selection to the given string
removes a picking listener
sets the selection to the given string
initializes the connection
submits the issue
initializes the list of
sets the selection to the given string
initializes the tree
initializes the tags
returns the viewer
this method is called by the struts configuration object
initializes the evidence types
returns the menu
sets the selection to the given string
this method initializes the desktop
initialize the component
creates the gui
adds a new units to the list of items
initializes the
returns an image icon or null if the path is not null
returns a jcombo box with the specified name
populates the list of components
initializes the tag
setup the menu bar
creates a menu item
this method initializes the data source
returns the name of the meta data object
extract the name from the given concept name
write the contents of the array to the output buffer
compiles a string into a string
setup the panels
this method sets the to the layout
updates the panel with the values in the panel
creates a check box
runs the action
returns the index of the rectangle that is the smallest rectangle
registers a frame to the internal frame
updates the display of all listeners
returns the index of the border at the specified position
returns the frame visible or null if it is active
sets the process running process
this method is called when the is started
returns the process running process
determines the maximum state of the graph
accept all directories and all extensions
returns a description of the filter
adds a concept to the list
clear the list of the current concepts
called when the process is finished
returns the concept at the specified index
add a new evidence type to the list of evidence
adds a data source to the database
clears the list of all the elements in this list
add a relation type to the list
remove all the data sources
returns the data source for the given index
returns the evidence type at the given index
removes all the relations
returns the relation type relation for the given index
adds an object to the list
clears the list of objects
returns true if the relation is empty
adds a concept class to the list
adds an attribute to this object
removes all the elements from this list
returns the concept class at the specified index
removes all the elements from this list
returns the attribute name at the specified index
updates the menu bar mode
returns true if the concept is empty
returns true if the attribute is empty
scales the viewport to the scale
sets the current clipboard
sets the label transformer
sets the edge label
sets the graph fill graph shader
returns the draw paint object
sets the draw paint
returns the paint for the given node
sets the graph paint graph
returns the fill paint
updates all the labels in the graph
sets the fill paint selection
updates the color of the given node
returns the node with the given node
updates the color of the given node
update the alpha value of the node
updates all the labels
writes the graph to the given xml writer
p get the code boolean code property
writes the node to an xml document
writes the data keys to the xml writer
writes the xml representation of the object
packs all columns in the table
returns the stroke for the given edge
updates the cache
returns the edge color selection
sets the selection color selection
returns the color for the given edge
updates all the edges in the graph
returns the node shape
updates the color of the given edge
sets the node aspect of the graph
updates the color and returns the color
sets whether the arrow is visible or not
returns whether the arrow is shown
sets the node shape
returns true if the vertex is visible
returns the shape of the node
returns the edge of the given edge
returns the id of the node
updates all the labels in the cache
returns true if the given edge is visible
updates the label and label
returns the label for the given edge
updates all shapes in the tree
sets the visibility of all the visible objects
update the shape of the graph
updates the shape of the shape
sets the shape of the shape
returns the edge shape
sets the visibility of the given edge
update the shape with the given shape and its value
invoked when an action occurs
sets the visibility of the incident edge
populates the list of all the
returns true if the state has been set
returns true if the is
updates the last state of the current state
sets the
restores the last state of the state
returns the label for the given node
updates the label of the node
sets the visibility of all graphs
this method is invoked by the command handler
sets the interpreter order
adds a custom function to this class
resets the internal state to its initial state
adds a collection of code code to the code
returns the root of the given class
adds an object to the
adds a collection of code code to the code collection code
returns true if the given class is resolved
adds a new rank to the root graph
adds a root object to the tree
add a function to the class
adds a new root object to the root
adds a method to the collection
add a function method with the given name and name
clears the cache
adds a new class to the class
process the http request
this method is called when the is
returns the concept with the given node
this method is used to calculate the index of the graph
shows a file chooser dialog to show the file chooser
initialize the window set
setup the content pane
sets the ui
registers the actions for the actions
set the enabled state of the action
search for a region with a list of
enables or disables the menu menu
returns a list of all the
creates the pane for the content pane
adds an action to the menu
embed the menu action for a given menu
displays the screen to the screen
returns the current meta data window for this window
deregister the window
creates a meta data window for the given data
load the graph
the thread run method
fires the event to all listeners
invoked when a key has been typed
returns the default name for the given concept
returns the next color in the color
get the file chooser for the file chooser
creates the components
adds an action to the menu
adds a new action to the menu bar
creates the button panel
make a node for the given tree
returns the root of the tree
tree tree
this method initializes j
enables the button if the button is pressed
creates a jbutton
check if the file exists
centers the current frame in the screen
saves the selected file to the users
creates the main panel
creates the main panel
save the file to the file
make the button panel
create the split panel
create the profile panel
called when the user presses the ok button
creates the gui component for the
sets the tree
the action to be performed when the user clicks the approve button
dispose of the window
returns the tree listener
make a component for the given field
displays an error message
creates a new panel
creates a jbutton that will be used to display the buttons
parses the path and stores them in the list
checks the existence of the file
compares two edges for to by their respective types
refreshes the contents of the panel
returns the node type
returns the path to the file
creates a panel to show the dialog
builds a panel with the given inner panel and its components
restores the state of the session state to the given list of
this method returns the radio button
saves the list of file state to the given list of sessions
returns the graph
sets the graph
this method is used to set the value of the
returns the graph file
sets the graph file to be used for the graph
creates a button for the given button and its components
shuts down the application
stops the timer
sets the focus to the given code concept code
runs the thread
prepares the monitor
returns true if the status is an
called after the stat is done
saves the model to a file
gets the title of this view
initializes the list of all objects
indicate whether the label is a clash
returns the text of the object
checks if the graph is valid
returns the mapping of the descriptor
this method generates a string from the graph
extracts the temporary file from the input stream
destroys the remote device
extract the name of the
displays an error message
helper method for creating a
returns the meta data object
performs operation on the given operation
undo the action
displays the prompt
redo the last undone action
closes the dialog
disposes the editor
corrects file name
save the selected file in the file chooser
saves the current state to the file
sets the modified state of the dialog
executes the given script file
returns a short description of the servlet
stop the plug in
returns the token associated with the request
returns the cached object for the given class
returns the extended token factory
returns the java
returns the node factory
returns the recognizer for this resource
sets the recognizer for the recognizer
check the commands to be the given code
returns the version of the ide
shutdown the navigator
returns the controller of this controller
this method is called when the user interface is called
returns the version of this
initializes the properties
returns the value of the text field
initializes the dialog
returns the value of the given property
sets the value of the given property
description of the method
invoked when an action occurs
returns the value of the given property
returns whether the project should be used for the project property override
sets the value of the given property
set the row editor model
description of the method
returns the value of the cell editor value
returns the row editor model
adds a row to the given row
sets the value string
remove the editor from the table
returns the editor for the given cell editor
returns the cell editor for the cell
returns whether the file is a file or file
this method initializes j panel
returns the value of the cell editor
sets the file name
check if the node is a node
initialize the global property for this instance
returns the
reads values from the text field
returns the default value of the property
returns the global property
returns a message from the message view
writes the values of the current values to the output stream
show the message view
returns the property value
print a message and exception to the debug stack trace
sets the value of a property
called when the audit has been started
called when the audit event has been completed
this is the project activated
called when the file has started
reset the default value
called when the file has finished
adds an error message to the event view
this is called when the browser is opened
reads the
initialize the model
returns the properties of the current project
returns the global properties for this property
get the properties file
this method is used to print the debug message
print an error message
creates a branch with the given key and its value
adds a new branch to the branch
draws the tree
called when the application is received
auto generated axis2 error handler
auto generated axis2 error handler
returns the label of the error
auto generated axis2 error handler
auto generated setter method
test the persistence of a new choreography
auto generated setter method
test the get service method
returns the plugins resource bundle
auto generated setter method
auto generated setter method
validate the array for custom component
load the ontologies from the ontologies
this method is called upon plug in activation
returns the value of the specified id
returns the top entity in the collection
saves the model of the editor
this method saves the model about the current
auto generated getter method
saves the model about the model
auto generated setter method
this method saves the model to the database
auto generated getter method
returns true if the property is editable
this method is called upon plug in activation
auto generated setter method
validate the controls
checks if the resource name is valid
initialises the service
auto generated getter method
moves the location to the specified location
auto generated setter method
auto generated setter method
disconnects the connection from the server
returns the source of this node
returns the target node of this node
reconnects to the network
reconnect to a different source and or target
sets the line style
removes a bendpoint from the list
verifies that the command can be executed
verifies that the command can be executed
verifies that the command can be executed
disconnects the connections from the endpoints
reconnects all connections in the graph
check if the is allowed to create the source
return true if reconnecting the target instance to new target is allowed
sets the target of the target
reconnect to the source and target terminal
sets the new connection state
sets the target endpoint for this connection
undoes the last change
verifies that the command can be executed
disconnects all connections from the endpoints
verifies that the command can be executed
returns the location of the rectangle
upon activation attach to the model
deactivates the graph
returns the connection anchor for the given connection
returns the connection anchor for the given connection
returns the connection anchor for the given connection
returns the connection anchor for the given connection
returns the connection anchor for the given connection
returns the connection anchor of the given connection
returns the connection anchor for a given connection
returns the connection anchor of the given connection
returns the connection anchor for the given connection
returns the connection anchor for the given connection
returns the connection anchor for the given connection
returns the connection anchor for the given connection
returns the connection anchor for the given connection
returns the target connection anchor for a given connection
returns the connection anchor for the given connection
returns the connection anchor of the given connection
returns the connection anchor of the given connection
returns the connection anchor for the given connection
returns the target connection anchor for a given connection
saves the model to the database
returns the palette root
declare an icon to the given
validate the array for
auto generated setter method
auto generated add method for the array for convenience
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
returns the
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
returns the
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
returns the
auto generated setter method
auto generated setter method
validate the array for
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
returns the
auto generated setter method
auto generated setter method
auto generated getter method
auto generated getter method
returns the
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated setter method
gets the name of the local
gets the value of the mediator property
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
returns the
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
p automatically managed component initialization
p automatically managed component initialization
init method for this filter
insere uma lista
fired when the user clicks on the send button
handles key up event
reads the document from a stream
returns the legend point x y coordinate
creates a new task queue
creates a new task queue
creates a new task queue with the specified tasks
adds a listener to the list of listeners
returns true if the thread is done
removes a task queue listener from the list of listeners
sets the done flag
returns true if the next error is done
sets whether or not the method is done with error
returns the error code
sets the error code
creates a new code summary page code object
returns the error message
returns the error details
creates a new overview page
sets the error details
sets the description
returns true if there is more elements in this iterator
returns true if the server has started
returns the result
returns true if there is a previous element in the list
sets the result
adds a task listener to the list of listeners
returns true if the last time the last element has the last
creates a new progress page
removes a task listener from the list of listeners
creates a new progress page
returns the current page
returns the current step
creates a new dialog page
adds a step to the step
adds an action listener to the button
creates a new wizard page
removes an action listener
creates a new user input page
default constructor for compatibility
creates a new user input page
sets the description of the node
gets the value of the subtitle property
sets the subtitle
returns the page type
sets the page type
returns the optional buttons
constructs a new task event with the specified object
constructs a new instance of this event
returns the wizard
returns the id of the event handler
constructs a new instance of this list
set the wizard
creates a new task list with the given name
returns the wizard model for this wizard
returns the dialog that this dialog is being
test method for
returns true if the process is processed
adds a listener to the list of listeners
test method for
removes the specified listener from the list of listeners
returns true if the next token is in the previous
returns true if next go to next go to next
returns true if the last move has been undone
returns true if the current page is a valid finish
returns true if the cancel button is okay
get the button back to be displayed
get the next button
returns true if this object is a close or not
returns the last button
returns the button
show the help
returns the cancel button
returns the help button
close the button
returns the property prefix
returns the minimum size of the component
returns the maximum size of the component
displays the back button
displays the next button
sets the
displays the last button in the panel
show the finish button
displays or hides the cancel button
displays or hides the help button
returns the icon used to draw the icon
displays the close button
sets the icon for the icon
returns the icon to use for the icon
enables disables the back button
sets the subtitle
sets the icon for the icon
enables disables the next button
returns the icon used to draw the icon
enables or disables the last button
sets the icon to use for the icon
enables or disables the button
enables or disables the cancel button
creates a new navigation pane
enables or disables the help button
returns the l f object that renders this component
sets the l f object that renders this component
notification from the code uimanager code that the l f has changed
creates a new link button
returns the current page
returns the background color of the title
creates a new dialog with the given owner
creates a new dialog with the given title
creates a new dialog with the specified owner
creates a new dialog with the specified owner
returns the visited flag
returns the color used to draw the color of the graph
returns the font style font font style attribute of the font font
show or hide the close button
returns the color used to draw the color
returns the font style for the font style
constructs a dialog with the given owner
constructs a dialog with the given owner and owner
the page constructor delegates to the page page
creates a new dialog
returns the color used to draw the disabled color
constructs a new pane
creates a new dialog
returns the image to which this is attached
returns the disabled font style for the font style
sets the cancelled flag
creates a new instance of component list
returns true if the mouse is over the mouse over the mouse
returns the l f object that renders this component
returns true if there is at least one element
sets the l f object that renders this component
description of the method
returns true if the current iteration has forward
notification from the code uimanager code that the l f has changed
returns the number of pages
remove the page from the list
returns the model
creates a new instance of
creates a new dialog to the given dialog
returns the selection model
returns the index of the first occurrence of the specified element
returns the selection mode
creates a new dialog
sets the selection mode
creates a new dialog
returns the minimum selection of the selection
returns the maximum selection index
returns the l f object that renders this component
returns true if the selection is selected
sets the l f object that renders this component
notification from the code uimanager code that the l f has changed
sets whether this dialog is modal
returns the model
constructs a new dial with the specified range and min values
returns the current wizard page
ensures that the current index is visible in the list
returns the auto update attribute
sets whether or not the is automatically
returns the l f object that renders this component
update the list
sets the l f object that renders this component
notification from the code uimanager code that the l f has changed
returns the model of the dial
returns the image
sets the of the dial
returns the disabled value of the disabled icon
returns the rollover dial image
sets the rollover dial
returns the pressed dial
sets the pressed dial response
returns the maximum value of the model
sets the maximum value of the model
sets the models minimum value
returns the value of the model
sets the value of the model
returns the value of the models property
sets the value of the model property
returns the mouse handler to use for the mouse handler
returns the value of the specified component in the
sets the progress of the progress
sets the task name
returns true if the given type has a jaxbelement
returns the people service
returns a new
create an existing artist request builder
create a new
returns a new all request builder
returns a new request builder for this
creates a new
returns the new person request builder
returns the current viewers request builder
returns a new
sets the default fields of the list
test of get connection method of class connection manager
test of retrieve all method of class vgrabber
test of close method of class
test of get method of class edu
test of retrieve method of class categories
test of main method of class com
test of get description method of class edu
test of add method of class usyd
test of get method of class edu
test of remove method of class com
test of get sort order method of class null
test of modify method of class
test of get date method of class edu
test of get last modified method of class edu
scale the image to the scale
writes the image to the given output stream
writes the image to the given jpg image
writes the image to the given stream
format the image to a string format
gets the length of the object
creates an element
creates a list of objects
method set value
is array method comment
sets the value of the field list
returns the entity wrapper for the given key
save the entity into the entity
unmarshall a simple array element
marshall a jsonobject from a array
return the value of the array
marshall a collection of instances to a collection
get the list of for a given collection
converts a json string into a json object
checks if the given id is a valid id
adds an attribute to this element
adds a group to the group
returns the property group for this component
adds a listener to this action
sets the property
adds a property to the tabbed pane
adds the scroll panes to the given property group
adds a property to the pane
adds a listener to this action
returns true if this is a labeled statement
sets the property of the panel
add a listener to this editor
sets the property to the given property
returns true if this field is labeled
sets the visibility of this window
adds a property to the properties
sets the tip text
returns true if the tab is currently selected
add a collection of properties to the properties
adds a code properties code to the code properties code
adds a property to the set of properties
adds a new code properties code to the code properties code
adds a new tab to the properties
adds a new tab to the tab
sets the text of the thread to the given text
sets the string value
sets the int value
sets the double value
initialize the icon
set the boolean value of the boolean property
sets the position of the
sets the size of the middle
sets the starting position of the line
sets the message
sets the start size
this method is used to set the message to be repeated messages
sets the end pos
sets the size of the image to be used for the image
sets the date
set the text to be displayed in the text area
returns the scroll block increment
returns the scroll modifier for the scroll bar
sets the icon
sets the calendar
adds a mapping to the map
returns the component that will be used for the component
sets the selected item
returns the element at the specified index
adds all of the elements in the specified collection to this set
sets whether this button is enabled
sets the value of the field
sets the value of the field
sets the progress bar
sets the status label
adds a tray to the tray
sets the value of the code boolean code property
adds node to tree
returns the type of the name
adds a custom component to the component panel
sets the object
sets the node to the given root node
sets the selected
returns true if the is selected
setter for property choice list
returns the description of the filter
sets the tree icon
returns the tray component
adds a delimiter to this delimiter
adds an action listener to the maximize button
returns the description of the
returns the old vector
returns the short description of this action
returns the status of the status
returns the version string
adds the action listener to the minimize button
returns the type of this element
returns the qualified name of the
returns the name of the property
returns a vector of
this method is not supported by this class
add a property change listener to the listener list
adds a listener to the heading
returns true if the thread is destroyed
registers a module to the module
returns the default directory for the default file
returns the home directory
adds a property to the event list
gets the entry for the mouse event
sets the display type
returns the status of the given code
returns the contact associated with the given key
add a listener to the model
returns the property editor
sets the property editor for this editor
sets the description of this plugin
returns the icon for this icon
returns the tool tip text for this field
sets the show server info type info dialog
returns the icon for this property
returns the tool tip text for this icon
sets the file name
sets the net description change listener to the
set the show server info dialog
sets the
sets the ping action
set the add ip action
sets the value of the field
adds a player to the game
adds a new to the list of
returns the map
returns the number of rows in the model
sets the drawing event listener
returns the value at the given row and column
adds a player to the game
process a message
returns the number of players in the list
returns the character representing the character
returns the string representation of the favorite
returns the tooltip for this tool
sends request to the server
returns the player at the given index
returns the sleep time of this
processes a incoming message
returns the number of rules in this collection
converts a character to a character
returns the power search at startup
returns the name of the component
returns the rule at the specified index
returns the character that is being used
returns the power search threads count
returns the tooltip for this tool
returns the popup of the popup menu
returns the selected server
draws the given string
returns true if the given date is an event match
send a network color
returns the ping command to the server
add a listener for the
sets the duration
returns true if the recurrence tree is recursive
returns the ping parameters
returns the number of rows in the table
returns the slot free free slot free me
returns true if the current day is a day
returns the reserve slots for this
setter for property edit action
setter for property delete action
add ipv4 ip
sets the date time of the timer
returns the end date of the end of the datetime
sets the interval end time
adds a player to the room
gets the encoded string
returns the dt start
this method is called when the day is removed
returns the value of the code favorite code property
this method is called when the model has been disposed
returns the day of the day for the given date
returns the day for the given date
returns the number of players in the game
adds a calendar to the calendar
returns the default calendar
sets the default calendar to be used for the given calendar
returns the state of the event
sets the action that will be used to perform the power search
sets the
add a listener for events
sets the status label
returns the date of the selected days
set the image of the image
validates the move
set the image of the image
validates the move
set the image of the image
sets the color of the image
set the image of the image
set the image of the image
returns the piece of the given column
sets the piece at the given position
sets the selection listener
returns the character that is being used
sets the board event listener
returns the column width of the cell at the specified position
returns the row number of the cell
adds a listener for tree model events
returns the child of code parent code at index code index code
moves the given piece part to the given move
returns the number of childs of the specified tree node
returns the index of child in parent
sends a move to the server
returns true if the object is a leaf
adds a category to the list
adds a category entry to this category
adds a new entry to this category
adds a list of entries to the list of entries in the
returns the entry associated with the specified index
returns the category with the given name
sets the player to the given player
returns the url
returns the browser string
add a event
adds a bookmark to the bookmark list
adds a conversation listener to the conversation
setter for property events
adds a new email to the list
adds a phone to the list
adds a mnemonic to the current locale
returns the title of this window
returns the frame of the receiver
returns the frame of the given chat panel
add a property change listener to the listener list
adds a plugin to the list
sends a message to the client
returns the conversation key
adds a message receiver to the receiver
sets the description value for this description
returns the protocol of this plugin
enables or disables the current state of this event
adds a listener to the list of state listeners
adds a listener to this state listener
adds a listener for the code tree model event code
registers a listener to be used as a listener for the state
adds a property change listener to the listener list
returns the child of code parent code at index code index code
adds a new chat panel to the chat panel
returns the number of children of parent
returns the index of child in parent
add a listener to the conversation
returns true if the specified node is a leaf
returns the title of the tab
processes a incoming message
processes a message
returns the character representing the character
returns the name of the component
returns the tooltip for this tool
returns the contact for the mouse event
processes incoming messages
this method is called when the user selects a outgoing message
this method returns the last event for the mouse event
gets the message command attribute of the cpm return object
gets the message command attribute of the cpm object
gets the message command attribute of the cpm object
gets the message command attribute of the cpm object
returns the status of the current file
returns true if the user is online
returns the id of the object
returns the default status for this
sets the offline state of the given account
sets the online status of the user
adds a contact to the contact list
sets the status
returns the key of this object
adds an event to the model
sets the nick
returns the number of rows in the model
returns the offline icon
returns the value at the specified row and column
returns the online icon
adds a new contact to the contact
returns the number of rows in the model
returns the value at the given row and column
returns true if this is a destruction
returns the status panel for the given account
adds a control to the component
adds a controls to the panel
returns the label for the given label
reads the jar file from the jar file
reads a file and inserts it into the file
checks if the is mounted in the
returns the label of the given
returns the next light in the graph
adds a row to the table
adds a block to the list of blocks
clears the map
creates a new object
create a vocabulary object from a uri
load a vocabulary from the given uri
this method returns the vocabulary object for the current entity
converts a vocabulary from a uri to a uri
create an instance of
creates a new object
returns the list of all the components in this container
handles the size of the component
handles the of the component
enables disables the
sets the database name
set the tables name
returns all tables in the table
returns a vector containing all the fields in the given table
get the row count
returns the list of not null values
this method is used to save the selected data
returns the vector of info objects
returns the count of the number
sets the last row in the database
moves the cursor to the first row
increase the number of columns in the table
returns the value of the field
deletes the row
undo the last commit time
returns the last inserted id
pop up the menu
this method is called when the is selected
handles the text in the text panel
handles the vertical text position of the text component
handles the icon on the button
handles the font chooser
returns the db names
get the table of the name of the given database
handles the text in the text field
handles the vertical scroll position
handles the icon on the button
this method is used to set the values of the selected items
this method saves the text to the selected file
set the fields name vector
returns the fields of the fields
sets the photo path
returns the photo path
returns a list of all the connections that have a group
returns a list of applications that have been registered for the
returns a list of all the entries that have a wire
returns the label for the given name
validate the validation
returns the errors
executes the navigation
initializes the root package root
this method is called when the bean is removed
called when the test is shutting down
initialize the servlet context
handle an error
forward navigation to a navigation navigation
set the charset to be used for the
applies the navigation to the navigation
initializes the bundle name
returns the parameter name
sets the value of the request attribute
initializes the default locale
this method is used to indicate that an object is a session
initializes the default time zone
this method is called when the application scope is being created
returns true if the application is running
write the content of the given file to the specified file
returns true if the request is a return method
returns true if the request is post
returns true if the parameters have been set
returns the value of the attribute as a byte
returns a string representation of the specified pattern
processes the current locale
converts a short name to a short
converts a string to a short
processes the time zone
returns the value of the specified attribute as an integer
converts a string to an integer representation
returns the value of the attribute as long
normalizes the given value
creates an action for the given path
returns the value of the specified date as a long
returns the value as a float
returns the value of the specified pattern as a float
returns the double value of the attribute
creates a request handler for the request
returns the double value of the given pattern
returns the value as a big decimal
returns the value as a big decimal
returns the value of the named request as a string
the first character of the given text
returns the value of the named attribute as a boolean
returns the date value of the date
returns the key value for the given attribute
test sorting of filter
shows the overwrite file dialog
show the password dialog
called when the user presses the button button
handles the pressed event
centers the window on screen
called when the user aborts the cancel button
called when the user presses the button
prints out the algorithm names
sets the default password
saves the configuration to the model
print the help message
prints the version information
returns the algorithm by its name
displays an error message
display an error message
set the value of compression level
returns the compression level of this object
returns the file list
adds an item to the list
chooses the selected file to the selected file
returns the password
adds a new algorithm to the algorithm
set the file list to be used for the given paths
returns the algorithm name
returns the file list
sets the algorithm name to the given string
returns the algorithm
returns the name of the algorithm currently selected
sets the compression level to be used for compression
returns the compression level of the compression
returns the target directory
sets the status of the
stops the thread
read a table from the given table
read a parameter from the given buffer
read a scalar scalar block from the input
returns a string representation of this object
returns a string representation of this object
destroy the
destroy a category
this method is called when the user is assigned to a given
parses a from a string
returns the launch manager for this plugin
returns a file in the plugin
return the project associated with this project
removes a breakpoint from the list
this method launches the application configuration
this method is called when the thread is terminated
this method initializes the main window
this method initializes content panel
this method initializes tabbed panel
this method initializes ok
this method initializes south
this method initializes j scroll pane1
this method initializes j scroll scroll panel
returns the
set the character
sets the interval of the interval
pattern that will return a pattern that matches the pattern
sets whether the node is not a
returns the string representation of this expression
returns a deep copy of the validator
returns the next element in the enumeration
returns the next token
returns the next token
returns true if there are more elements in this collection
returns the number of tokens in the next token
returns the matched string
returns the matched from code i code in the
returns the matched characters matched by the given number of characters
returns the matched string
returns the left hand side of the
returns the left position of the ith matched element
returns the right part of the match
returns the right part of the i th argument
validate the values of the values from the given string
returns the first occurance of the
searches for the region with the specified string
add a new regular expression to the list of
returns the ith regex matched by this
set the regular expression to be used to accommodate the given
adds a new code value code to the set
adds a array of strings to the array
replaces all occurrences of the given string with the given string
replaces all occurrences of a string with the given start and start
replaces all occurrences of region with a region of the given string
replaces the first first occurrence of the first occurrence of the given
replaces the first occurence of the first occurence of the first occurence
replaces the first region of the first region of the first region
returns the next token
sets the pattern
returns the next match in the ith match
returns the next string in the list
match the given match
match the given match at the given position
adds a new pattern to this set
returns the buffer size
set the buffer size
sets whether or not the search should be considered as a
returns true if the user wants to match the
sets whether or not the ignore case is ignored
sets the rule to replace the next rule
sets the rule to the code replace rule code
replaces the first subsequence of the first occurrence of the given
replaces the first occurence of the first occurence of two elements in
replaces the first region of the first region of the first region
replaces all occurrences of the string with the given string
replaces all occurrences of a string with the given position
replaces all occurrences of region with a region of the given string
returns a clone of this code regex code
returns the code reg ex code to be used to
returns true if the specified string matches the start position
match the match at the given position
search for a string
searches for the specified string in the search
search for a region in the list
sets the flag that indicates whether or not the is
returns the value of the g flag
returns the value of the s flag
returns whether this is a
add a new pattern to the end of the list
accept a file
returns the version of the application
optimize the lucene index
returns true if the current cs is optimized
returns true if the literal is a literal
returns the string representation of this
compile the given string
accept a file
pattern for a single pattern
returns the current value of the rule holder
add a rule to the list
returns the name of this object
make a duplicate of this segment
increments the position of the entry
tests whether the character matches the character
checks if the specified character matches the character
match the given string with the given string
returns pat of the pattern
returns the bits of the current bit
returns the id of the class
returns the number of commands in this command
reset the current state
returns the current line number
load the directive from the internal map
returns the data of the input data
returns the data of the stack
returns true if the stack contains the data
returns true if the line is next
returns the next line in the iteration
returns the current line
returns a string representation of this object
returns the number of bytes in the data set
sets the model to the given value
returns the double value of this data
set the data of the
creates the pages of the multi page editor
this is called by the code code method
this method is called when the page is changed
closes all project files on project close
sets the maximum number of lines to be displayed
returns true if this node is a finite state
returns the value of the triangular element
returns the length of the buffer
returns the character at the specified position in the list
returns the next token
returns the string representation of the current value
returns the string like like the
create a new pattern consisting of the smallest characters
create an instance of
returns the number of matched elements matched by this match
returns the number of characters matched by this match
returns the number of characters matched by this match
returns the region where the first region matches the given
returns the number of in the
returns true if the match is a match
returns the number of matched elements matched by this match
returns the substring of the matched string
returns a region that is not newer than the given region
returns the ith matched element
returns a string representing the ith substring
returns the of this code code
applies the rules to the given regex
returns the number of objects in the bulk
replace the argument with the given argument
returns the character
returns the end flag
returns the value of the masked
returns the string representation of the message
sets the rule to be used for the variable
returns the rule that is used to construct the variable
parses the function
returns the replace rule
clones the current object and returns a clone of this object
returns a string representation of this object
start the pool
returns the string representation of this object
restart the
adds a new to this
returns a string representation of this object
close the current set of resources
close the current connection
sets the players
close the current turn
removes a player from this game
restarts the game
undoes the last undone operation
adds a player to the game
this method is called when the user presses the
sets the leg count
returns the match
returns the number of legs in the leg
close the turn
sets the count
returns the last turn
returns the number of the current set
returns the state of the given code player code
returns the value of the field
sets the extra value of the extra property
add a new element to this collection
returns the extra configuration object for the given key
undo the last exploration
returns the extra configuration table
undo the last action
returns true if the queue is empty
returns the scores of the game
returns true if the queue is full
returns the configuration object for this configuration
checks if the is a double
restart the legs
restart the
adds a new to the given mana
close the connection
returns the state of the game
close the legs channel
close the current turn
returns the next player in the game
undoes the last call
reset the scores points to a given points
creates the components
refresh the players
cleans the table
returns the height of the content of the content area
performs the undo action
returns the width of the content width
add a listener to this game controller
start the midlet
creates the components
this method is called when the user selects a report
called when the pointer is released
initializes the values of the game state
removes a listener from this game controller
called when a key is released
report a throw event
restarts the timer
paints the image
undo the game
called when the pointer is released
this method is called when the traverse is done
report a new exception
handles the command event
returns the state of the given state
paint the image
restarts the game
displays a alert dialog with the given alert
sets the configuration
sets the current board
this method is called when the user selects the display
returns the configuration object
sets the current display
returns the list of games
returns the scores of the game
sets the game
returns the name of the game
returns the current state
sets the game over the game
fires a change event to all listeners
fires the listeners that a game controller has been registered
test method for
test of composite method of class com
test of set component method of class com
adds a new config item to the config file
gets the function
returns the current state of the quiz
returns the instruction
stops the timer
get the database connection
get the central connection
returns the query object that contains the given query
returns the class for the given type
returns the maximum depth of the given type
set whether to ignore whitespaces
sets the indentation flag
returns true if the given type is a valid type
passes the filter to the given source
returns the time elapsed since the last time
returns the query object from the query
returns the type of the
returns the type for the given
returns the uri of the
returns the local uri
adds a part to the list
adds a parent to this
append the sql query string to the given string builder
returns the field name of the
returns the name of the field
sets the field name
sets the field descriptor for the given field type
sets the pattern
sets the value of the name property
returns the value of the code name code property
enables disables the generation of the identity conditions
removes a connection from the database
removes a record from the database
load a bean info object from a bean class
sets the entity name
store the data in the database
returns the entity name
returns the sql string to be used for the relations
find by id
sets the identity conditions
returns the entity identifier
load a bean from a bean
append the string values to the given builder
returns true if the primary key is set
sets the custom
enables disables the generation of conditions
create a new record in database
stores a new connection into database
store the data in the database
remove a connection from the database
remove a bean from the database
removes all of the rows from this connection
find a bean by its id
writes the opening tag to a writer
writes the close tag to the output stream
process the input string
description of the method
returns the content of the file
process a token
this function converts a string to a string
this method is used to convert a string to a string
returns the singleton instance
returns the name of the method
returns the function as a string
adds a css file name to the css file
adds an external java script to this web application
returns the new instance of the hex
create a new script
adds a java script file to this file
adds a template to the list
set the output file name
adds a required resource to the list
returns the path to the image
writes the source file to the output
writes the java script code to the given writer
writes the footer to the writer
returns the hash code value for this
sets the capacity of the
fills the stack trace of the exception stack trace
sets the stack trace of the given stack trace
returns a set view of the keys contained in this map
returns a collection view of the values contained in this collection
set the cache to the current state
returns the resources
returns the locale of the current locale
returns a set view of the keys contained in this map
generate a simple method declaration
returns a verbose string representation of this
returns the resource bundle for this resource bundle
returns the key for the given method
override to override this after subclasses are override but
returns the class that contains the given field class
override this method to override the deserialized input method
checks if the method is expected to be removed
check if the interface name is a remote device interface
prepares the object to write to the buffer
append a token to the buffer
returns the cause of this exception
initializes the cause of the given cause
this method is called when the servlet is being removed from the
adds a widget to the panel
fires a keyboard event to all listeners
adds a widget to the widget
sets the position of the widget at the given position
fires a key down event to all registered listeners
returns the left position of the widget
fires a key press event
returns the top of the widget
fires a key down event
cancel the current event
returns the parent widget
clears the cell at the specified row and column
returns the position of the cursor
returns whether this is an attached event
adds a new item to this tree
returns the number of cells in the specified cell
called when the load is about to be loaded
adds an item to the tree
returns the number of columns in the table
returns the portion of the text
attaches the listener to the event
returns the child at the specified index
returns the number of rows in the model
returns the length of the element
called when the detach is attached to the
returns the number of children of this node
resizes the table
removes this widget from its parent
resizes the columns of the columns
returns the index of the child item
resizes the table to the specified number of rows
creates a cell
returns the receivers parent item
prepares the cell at the specified row and column
returns the open state
prepare the row
selects all the text in the text
set the selection position
returns the layout component for the given widget
remove the item from the tree
sets the selection to the specified range
removes the specified item from this tree
removes all items from the list
set the text alignment for the text
sets the selected state of this element
sets the state of the
sets the state of the event
sets the user object of the user
sets the horizontal alignment
returns the text alignment string
set the vertical alignment for this layout
sets the height of the cell
fires the cell clicked event
set the alignment of the cell
sets the spacing between cells in the table
fires an error event to all listeners
fires a load event to all listeners
returns the element that is associated with this element
adds a style name to this style
initializes the widget
returns the absolute left coordinate of the element
sets the widget to display the widget
returns the top of the top of the top of the top
adds a widget to the list
returns true if the widget contains the specified widget
returns the height of the element
adds an item to the list
returns the width of the element
returns the widget at the specified index
adds an item to the list
returns the name of the element
returns the index of the first occurrence of the specified widget
clears the content of the element
returns the title of this item
inserts a widget before the specified index
returns the number of items in the list
returns an iterator over the elements in this collection
returns the text of the item at the specified index
returns whether the component is visible
removes the element at the specified position in this list
removes a style name from the list
removes the widget at the top of the list
returns the selected index
sets the height of the component
returns the value of the specified element
fires a focus event to all registered listeners
fires a event to all listeners
sets the size of the image
returns the number of visible items in the list
fires a lost focus event
inserts an item into the combobox
sets the size of the image
inserts a new item into the list
returns the parent menu bar
sets the style name of this style
returns the sub menu
returns true if the item at the specified index is selected
sets the title of this item
returns true if multiple select items are selected
sets the command
sets the sub menu for this item
sets the visibility of this window
sets the width of the element
removes the item at the specified index
adds the events to the event queue
sets the selected item in the list
adds a style to the specified cell
sets whether multiple selections are allowed
removes the events from the
sets the element
returns the element at the specified row and column
adds a widget to the list
sets the selected attribute of the gtk element object
adds a widget to the container
returns the widget
sets the value at the specified index
returns the style name for the specified cell
sets the number of visible items in the dropdown list
sets the widget to the given widget
returns the element that this element represents
returns the vertical alignment string for this cell
inserts a widget into the container
adds a widget to the container
returns the children of this widget
returns true if the cell at the specified position is visible
fires the popup closed event
returns the action
returns the encoding of the document
returns the method name
returns the target
removes a style name from the specified cell
set the action attribute
sets the text encoding
set the method
submits the form
returns the name of the element
fires before tab selected
fires a tab selected event to all listeners
sets the height of the cell at row col
hide the window
called when a key has been pressed down
called when a key is pressed
returns the url
called when a key has been held
sets the url
returns the results
sets the position of the popups position
fires a change event to all listeners
returns the left left position of the popup menu
sets the cancel property
adds a widget to the given widget
returns the top left top of the element
returns the cancel property
adds a widget to the widget
sets the style name attribute for the specified column
returns the deck panel
sets the parent element of this element
show the popup
returns the tab bar
returns the filename of the file
fires a scroll event to all listeners
adds a widget to the list
inserts a widget into the tab panel
sets the visibility of the specified cell
inserts a widget into the table
removes the specified widget from the panel
sets the width of the cell at the specified position
fires an item selected event
fires an item state changed event to all listeners
simulates clicking the button
fires a mouse down event
fires a mouse enter event
returns the column span of the specified cell
returns the row span for the specified cell
fires a mouse event to all listeners
sets the span of the cell at the specified position
sets the word wrap flag for the specified row
fires a mouse move event to all listeners
sets the span of the cell at the specified row and column
fires a mouse up event
adds a cell to the cell
returns the number of cells in the specified row
returns the widget index of the widget
returns the flex table cell formatter
returns the number of rows in the model
returns the raw element from the table
inserts a widget before the specified index
inserts a cell into the table
insert a new row into the table
shows the widget at the specified index
removes the cells at the specified row and column
ensures that the specified row column is an element
prepares the cell to be used for the given cell
prepare the row
ensures that the specified item is visible
returns the attribute value for the specified row column
returns the scroll position of the current position
returns the horizontal scroll position
sets whether the menu bar should be shown or not
sets the scroll position
sets the horizontal scroll position
sets the attribute value
returns true if the component is enabled
inserts a widget into the table
sets the enabled state of this object
adds a style to the specified row
fires a click event to all listeners
returns the element at the specified row in the table
cancels the timer
schedules the timer to stop at the specified time
schedules a repeating schedule
returns the name of the specified row
returns true if the row is visible
removes a style name
sets the style name attribute of the specified style element
set the vertical alignment of the cell
sets the visible state of the given row
returns the superclass of the given class
returns the element at the specified position
returns whether the given field needs to be used
check if the connection is valid
checks if the given type has a serializable oids
sets the attribute value
writes the field accessors to the output field
adds a listener to the list of listeners
p initialize custom
creates a proxy for the given node
clears the cell at the specified row and column
returns true if the given type is serializable or not
check if the given class is a valid interface
checks if the types of types are serializable
returns the cell padding of the cell
generates the xml for the proxy fields
returns the cell spacing
generate a target def for the given target
returns the html code for the specified row and column
returns the row formatter
returns the text of the cell at the specified row
returns the widget at the specified row column
returns true if the cell at the specified row and column
returns an iterator over the elements in this collection
creates a new source writer
handles the browser event
make the interface a package
emits a class to emit the class
registers a method creator for a method
remove the widget from the widget
this method is called when the is removed
this method is called when the is removed
converts a type to a string
removes a listener from the table
returns the piped writer
prints the given object to the current object
prints the given string to the output
start the documentation comment
end the comment comment
sets the width of the component
sets the padding cells
returns the string representation of this object
returns the value of the field
returns a string representation of this code code
returns the number of the
returns a string representation of this double
sets the spacing between cells in the grid
returns the value of the boolean property
returns the
returns a string representation of this object
get the value at the specified index
returns the value of the code code property
returns the jsonarray as a jsonarray
sets the contents of the cell to the specified value
set the value at the specified index
returns the object
return a string representation of this object
returns a set view of the keys contained in this map
returns the value of the code null code property
returns the number of elements in this map
returns the length of the data in the buffer
remove a named item from the tree
sets the text of the cell
returns the root element of this node
set the value of the specified node
returns the code element code whose code string code is the
returns a string representation of this object
returns a string representation of this object
returns a string representation of this node
returns the java script object that is used to render the
appends the specified argument to the end of the data
returns the node at the specified index
creates a new comment
deletes the data from the given offset
returns the data
sets the widget at the given position
creates a document fragment
returns the value of the specified tag
returns the length of the
gets an attribute node
insert a new data into the data model
creates an element with the given name
returns a list of all descendent elements of this tag
replaces the current data in the current buffer
returns the name of the tag
sets the data
returns true if the given tag name is a attribute
creates a text node
returns the data of the given substring
remove an attribute from the object
sets the attribute with the given name and value
returns the name of the object
imports a node from the given imported node
removes the cell at the given position
returns the value of the code property code s attribute
returns a string representation of this object
returns the value of the field
returns a string representation of this node
returns a string representation of this object
compares this object with the specified object
returns a string representation of this object
returns the text of the text node
returns a new child node of this object
returns a duplicate of this node
returns the target
compute the key for the given row and column
returns the code for the code
sets the data
returns the namespace uri of this node
returns the key for the element
returns the prefix of this object
returns true if this object has attributes
returns true if the node has child nodes
returns the widget widget
insert the methods description here
mutating method to set the value of the code unit code property
this method is called when the child is removed
replaces the old child node with the new one
removes the widget from the widget
sets the node value
checks if the cell bounds are in the bounds of the cell
checks if the row is valid
creates a new cell
returns the body element
returns the number of child elements in this code text code
inserts a cell into the table
inserts a cell into the table
inserts a row into the table
this method is used to perform the actual
removes the cell at the specified row and column
removes a row from the table
sets the cell formatter
sets the row formatter
returns a representation of the given
returns the uri of the uri
zip the given directory into a zip file
process the given process
extract a metadata from a rdfs rdfs
returns the implementation type of the implementation
returns the metadata package uri
returns the validation of this cell
returns the value of the perform conversion
returns the value of the perform equipment property
returns the value of the perform validation property
sets the conversion to the given document
returns the mime type of the file
set the extracted metadata
converts a file name to a string
set the metadata package uri
sets the perform conversion
sets the perform extraction property
zip the directory to the specified directory
returns the value of the query string
returns true if the submit button is enabled
return the style class of the current tag
close the manifest file
called when the user clicks the
p return the value of the code add code property
returns true if the request is allowed
copy values from the profile to the properties file
create a new profile
returns the uri of the
returns the index of the end of the end of the list
create a tar file with the given file
sets the end index of the end of the list
sets the start idx
recovers all pending events
returns the url to the given oai id
returns a message with the given message and the given class
returns the string representation of this unsigned integer
creates a new
returns the date of the end date
returns a metadata for the given package
returns a object for the given peaks
returns the string representation of the file
process the given process
check if the setup is a valid state
load the configuration file
process the configuration
checks if the configuration file is valid
checks if the setup method is set
checks if the configuration file is valid
checks if the setup method is called
checks if the setup method is called
load the configuration file
checks if the stylesheet is set
checks if the configuration file is valid
checks the stylesheet and returns the value of the
checks if the connection is already set
writes the given byte to the output stream
writes a string to the output stream
checks if the repository is setup
called when the component has been resized
fill color with fill color
returns a string representation of this object
accept all directories and all files
returns the description of the filter
accept all directories and all files
returns the description of the filter
returns the jdom element
returns a string representation of this object
checks if the specified point2 d is inside the ellipse
returns true if the interior of the shape entirely contains the
returns the data component
returns true if the specified coordinates are inside the
sets the data component
returns true if the interior of the shape entirely contains the
returns the bounds of this glyph
returns the bounding box of the bounding box of the
returns an iterator object that iterates along the boundary of the
returns an iterator for the given shape
returns true if the interior of this code image2 d code intersects
tests if the interior of the shape intersects the interior of the
validates the data
set the remove menu
show the help window
add a new input data to the list
add an input data to the input
add an input data to the list
get the input data for the given input
this method is called when the view is dragged
updates the parent of the split pane
returns the number of components in the
returns the second element of the record
set the data of this rectangle
set the data of the
returns a list of shape objects
returns the second element of the record
returns the box
draws the component
returns the second element of the element
returns the element that contains the offset
paint the component
returns a list of the of the given document
this method returns the value of the given xpath expression
returns the value of the
returns the first value of the first color in the specified color
sets the listener to render the canvas
returns a list of the of the given list of strings
returns a list of all the of the given point
returns the document with the given default
returns the offset for the root element
returns the offset for the root element
sets the value of camera movement values
repaints the component
returns the content title
returns the offset for root of the root element
returns the element that contains the offset
add a component to the taskbar
sets the content title
returns a simple xpath
get the first keyframe of the track
returns the value of the given xpath expression
returns the content file size
get the value of the specified as a int
tests if a specified file should be included in a file list
checks if the file name is a valid file name
returns true if the given file is a file or directory
sets the dom value of the given dom object
returns the content media creation date
sets the dom value of the given dom object
set the media creation date
set the dom attribute
sets the dom attribute of the object
set the dom attribute
returns the content of the media file
sets the content media summary for the content
returns the properties of the given xpath
returns the first value of the first color in the specified color
returns the content location of the content of the content
returns the value of the math mode
returns a list of the of the given list of strings
sets the content creation location of the content
sets the value of the math mode
set the description of the media
returns the data component of this object
returns the uri of the media file
description of the method
extracts the list of all the peaks from the list
get the family description for the agent
adds a new component to the
returns the description of the file
set the description of the summary
get the description of the tool
set the description tool
returns the fps per second
returns the estimated of the current
returns the number of frames in the frames per second
adds a new node to the corpus
ask the user to cancel the given message
returns the distance between two dates
returns the distance between two objects
returns the phrases ci
returns the biggest score phrases
updates the score of the clusters
adds a base cluster without checking if it is already in base
compares this object with the specified object for order
returns the distance between two objects
returns the similarity between two objects
returns the distance between two objects
returns the similarity between two given indices
returns the maximum similarity between the two cells
returns the distance between two vertices
update a
returns true if the node is a base cluster candidate
returns the minimum similarity between two rows
returns the distance between two nodes
returns the distance between two points in the
prints out the list of all the objects in the list
returns the maximum distance between the two points
returns the distance between two points
returns the maximum distance between two points
compares this object with the specified object for order
returns the distance between two points in the
returns the phrases score
returns the current movement of the current movement
adds a new document to this document
sets the d
returns the
sets the
sets the r
sets the value of the property
adds a new document to the list of sentences
normalizes the distance
reset the similarity to the root
invoked when an action occurs
invoked when an action occurs
returns the similarity matrix
invoked when an action occurs
normalizes the distance
gets the xml document containing the data
returns the number of children of parent
returns true if the given object is a leaf
copy text to a free text area
returns the index of child in parent
returns whether it has the children
set the root of the tree
create an uninitialized dom
tests whether or not the specified abstract pathname should be included
returns the image
opens a file to open a file
initializes the next image
sets the current file
invoked when a mouse button is pressed on a component and then
invoked when the mouse has been moved
invoked when the mouse button has been clicked pressed and released
invoked when a mouse button has been pressed on a component
invoked when a mouse button has been released on a component
returns the description path
gets the value of the property
returns the
create a token stream for the given reader
removes an edge from the graph
returns a string representation of this object
compares this graph to the specified object
invoked when a mouse button has been pressed on a component
compares two nodes for equality
compares this object with the specified object for order
invoked when a mouse button has been released on a component
the inverse of the relation
inverts the relation
returns the distance between the neighbors and the given graph
handles mouse wheel events
initializes the
returns the distance between this node and the specified
handles the mouse dragged event
calculate deviations of the matrixs points
returns the normalization percentage
extracts the feature
extracts the feature
invoked when an action occurs
sets the parameters of the
returns the distance between this visual node and the given
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
get a string representation of this object
sets the string representation of the given string representation
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
invoked when the mouse button has been clicked pressed
invoked when a mouse button has been pressed on a component
invoked when a mouse button has been released on a component
invoked when the mouse enters a component
invoked when the mouse exits a component
sets up the fixture for example open a network connection
runs the thread
loads an image from a file
returns the impact of this impact
sets the impact of this bubble
adds a new strategy to this strategy
remove the given strategy from the strategies
adds an observer to the queue
removes an observer from the list
reset the list to its initial state
returns the weighting for the given weighting
returns the weighted of the
reset the weighting for strategies
returns the distance between this visual node and the specified
returns the distance between the two properties
returns the distance between two objects
returns the distance between two vertices
search for images in the given image
this method is not supported
compares this feature to another feature
applies the model to the model
this method is called when the model is better than the given
returns the size of the feature object
build the
clears the state of this object
set the byte array representation of this object
calculates the distance between two points
returns a buffered image for the visualization
returns the cluster number of features in the histogram
returns the boundary of the object
sets the byte array representation of this byte array
add history to the history
returns the access to the specified object
this method calculates the power supply power supply a complex number
sets the current edge
prepare the next state
returns the next pixel boundary
returns the next edge in the boundary of the boundary
extracts the image from the
returns the distance between this geometry and the given feature
sets the byte array representation of this byte array
returns the clustering step clustering
the features of the
compute the total number of
computes the overall l2 of the clusters
returns the distance between this geometry and the specified
tests the union of all clusters
test method for
constructor list
makes the options
this method initializes this
sets the text of the status bar
set the options
sets the status of the complete text area
sets the status of the error
add an option to the list
this method initializes j button
add a sub option to this
this method initializes program dialog
this method initializes j button1
this method initializes j content pane
this method initializes j tree
this method initializes clear button
this method initializes j button
rebuild the tree
returns the option
returns a string containing all the settings of the
this method initializes main pane
this method initializes j button1
runs the program
this method initializes option panel
this method initializes this
returns the real option panel
this method initializes j button
create a label for a given string
this method initializes j content pane
update the doc
this method initializes j text field
this method initializes j button
update the doc
this method initializes home button
load the settings from the given data
called whenever the value of the selection changes
this method initializes this
this method initializes clear button
this method initializes j editor pane
this method initializes j button
this method initializes about dialog
this method initializes j button1
this method initializes about content pane
this method initializes j jtool bar bar
this method initializes j button1
this method initializes about version label
this method initializes j about
this method initializes j scroll pane2
this method initializes j editor pane
this method initializes j button
this method initializes j scroll pane2
creates a new program runner
this method initializes info pane
expands the tree
returns the long info
collapse the tree
reloads the gui and the settings
find the option with the given string
sets the long info
kills the current process
returns the data
validate the
returns the
sets the value of the initial value property
this method initializes j button
returns the sub set
sets the sub set
this method initializes console panel
this method initializes j scroll pane
returns the value of the boolean choices property
this method initializes console pane
sets the data
this method initializes j scroll pane1
returns true if this node has a child
returns the child
this method initializes error pane
sets the child
returns the linker of the
sets the linker attribute
this method initializes j button1
sets the button to run
this method initializes j button3
this method initializes j frame
this method initializes j jmenu bar
this method initializes j menu
this method initializes j menu
this method initializes j menu item location
shows the binary chooser
this method initializes j menu
this method initializes j menu item
this method initializes j menu item
highlight the tab
this method is called when the user selects a tab
runs the program
close the window
this method initializes this
this method initializes j content pane
this method initializes j panel orden
this method initializes j panel
this method initializes j button
this method initializes j button salir
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes j content pane
this method initializes j scroll pane
this method initializes j panel
this method initializes j button
this method initializes j button salir
this method initializes this
this method is called by the panel to update the
this method initializes this
this method initializes j content pane
this method initializes j button aceptar
this method initializes j scroll pane resultado
this method initializes j button cancelar
this method initializes j label id
this method initializes j text field id
this method initializes j label clave
this method initializes j password field
this method initializes this
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j panel
this method initializes j panel
this method initializes this
this method initializes j content pane
this method initializes j panel
this method initializes j panel
this method initializes j button guardar
this method initializes j scroll pane
this method initializes j
this method initializes j button salir
this method initializes j panel boton
this method initializes j jtool bar bar
this method initializes this
this method initializes j button nuevo
this method initializes j button
this method initializes j button buscar
this method initializes j button exit
this method initializes this
this method initializes this
this method initializes this
this method initializes j button change
this method initializes j text field
this method initializes j text field id
this method initializes j button buscar
this method initializes this
this method initializes j content pane
this method initializes j panel resultado
this method initializes j panel
this method initializes j button aceptar
this method initializes this
this method initializes j button cancelar
this method initializes j jmenu bar
this method initializes j content pane
this method initializes j menu
this method initializes j check box
this method initializes j menu
this method initializes j menu
this method initializes j menu
this method initializes j menu item
this method initializes j panel sup
this method initializes j menu item back
this method initializes j check box documento
this method initializes j menu item
this method initializes j menu item
adds a microarray item
obtiene los de perfil
this method initializes j menu item banco
this method initializes j menu item provincia
this method initializes j button buscar
this method initializes j
adds a microarray item
obtiene los datos
this method initializes j menu item cargo
this method initializes j menu item tipo
this method initializes j button
this method initializes j menu item orden
this method initializes j menu item orden
this method initializes j menu item
this method initializes j button modificar
this method initializes j scroll pane
this method initializes j menu item orden
this method initializes j menu item registrar
this method initializes j menu item
this method initializes this
this method initializes j button eliminar
this method initializes j jtool bar bar
this method initializes j button nuevo
this method initializes j button
this method initializes j button buscar
this method initializes j button delete
this method initializes j button update
this method initializes j button guardar
this method initializes j text field cantidad
this method initializes j button salir
this method initializes j text field total
this method initializes this
this method initializes this
this method initializes this
returns the text to textfields
this method initializes j button ok
this method initializes j button cancel
this method initializes this
this method initializes this
this method initializes this
forward the to the given layer
at startup create and show the main frame of the application
loads a xstream file from the given reader
returns the container instance for this container
registers a factory for the factory
register services to the service
returns a message with the given key
binds a service to the service
returns a message for the given resource and properties
returns the resource bundle for the given locale
registers a class component implementation
this method determines whether the given interface is
adds a component to the container
this method returns the list of registered listeners for a given key
retrieve the component to be returned
make the component available available for the component
called when the user closes the
called when the user selects the
called when the user is complete
called when the event is triggered
called when the user is being removed from the server
start the event
adds a list of channels to the channel
remove a member from the database
updates the display of the text view
returns the name of the bundle
returns the background of the configuration
parses the video size and returns the size of the video
returns the configuration of this object
returns the crop height of the image
returns the crop left corner of the
returns the data object associated with this object
returns the options
returns the path to the albums of the album
returns the crop crop top of the crop rectangle
returns the number of images in this image
returns the crop width
returns the down scale param
returns the current configuration
returns the number of items per page
returns the frame
returns the height of the application
returns the content of the xml file
returns the image
returns the path to the image path
returns the value of the specified path
returns the value of the code height code property
returns true if the image is a required resource
returns the width of the
returns true if the current page has been already added
returns the quality of the quality
returns the render mode for this configuration
returns the image scaler
returns the show title
returns the thumb in json format
returns the current resource
saves the current open cms project
returns the thumbnail path
returns the value of the code thumb param code property
returns the width of the current configuration
returns the current zoom factor
sets the size of the image
returns true if the given float equals the second equals the second
returns the thumbnail of the given thumbnail
set the zoom factor for the map
runs the test runner
returns the test local service
test of set service method of class com
sets the last successful operation
test of successful method of class
test helper for helper class
test of local service method of class gov
test of set service method of class com
returns the message
returns the x y coordinate of the given point
test of the inner class method
returns a short string describing this component
run the test case
runs the test run
runs the given class
runs the test
adds a term to the query
clears the map
set the category
checks if the given category is a category
returns a string representation of this object
test method for com
checks if the input string matches the input
returns the time of the last modified time
append a to the constant pool
append a long to the buffer
append a hash code to the buffer
append a code hash code code value
append a code char code to the code buffer code
append a code hash code value to the buffer
p appends to the code builder code the comparison of
append code to code the code hash code
p appends to the code builder code the comparison of
append a code boolean code to the code builder code
append array to this output buffer
append the specified array to this buffer
append array to this buffer
append the specified array of code to code
append the specified array of code char code array
append the specified array to this buffer
append the specified array builder to this
append array of code float code array
append the specified array builder to this buffer
returns the hash code of this object
transforms the word into a string
resolve the given entities in the given namespace
append a code double code to the code
returns the html representation of this element
returns the html representation of the current user
returns the html representation of the current element
verifies that the password is already in the password
returns the display name of the owner
the main method of the application
locks the clip
returns the bounds hint for the image
adds a listener to the collection of listeners who will
adds the listener to the collection of listeners who will
clears the selection
deselects the item at the given zero relative index in the receiver
deselects all selected items in the receiver
returns whether the text field is editable
returns the number of items contained in the receiver
returns the height of the item
returns a code point code whose x coordinate is the receivers position
returns the zero relative index of the item which is currently
returns the text
returns the height of the text
returns the text limit for the text
removes the item from the receiver at the given
removes the items from the receiver
removes the item from the receivers list
removes all items from the receiver
selects the item at the given zero relative index in the receiver
sets the editable state
sets the receivers list to be the given array of items
sets the selection in the receiver
sets the receivers text
sets the maximum number of characters that the receivers
sets the number of visible items in the receiver
returns the bounds hint for the image
this method initializes grp text
this method initializes cmp
this method initializes grp example
this method initializes j
this method initializes j
this method initializes j
this method initializes j
creates the example
this method initializes cb task tag
returns the provider
returns the task tag
returns the task tag provider manager
returns the provider
this method initializes this
this method initializes sash form
this method initializes cmp support root
this method initializes cmp editor root
this method initializes grp example
this method initializes cmp
this method initializes cmp
returns an xml list of the given index
returns the xml content of the given package
returns a list of the given object
returns the xml content of the given body
returns the xml content of the given view
returns the xml content of the given type
returns the list of the given procedure name
returns the xml content of the given
returns an xml list of all the elements in this collection
returns an xml list of all the data contained in this object
returns the list of the datafile
returns a list of the for a given sql statement
returns a list of names of names of the type names
returns the xml content of the given constraint
returns an xml list of all the data contained in this table
returns a list of constraints for this constraint
returns the database connection name
returns a list of all the schema names
begin user doc
returns the list of all the table names
begin user doc
returns a list of data objects for the given table
returns a list of the data metadata for the given table
returns a list of all the contents of the given table
begin user doc
rename a table
returns a list of the given object
returns a list of constraints for this constraint
returns a list of data objects for the given table
returns an xml list of all the objects that are the given
inserts the given table into the table
returns a list of the given object
sets the value of the code compare attribute code property
sets the list of attributes to be used when
compares the two nodes
returns the value of the attribute specified by the given attributes and
deletes a table from the database
sets the precision
sets the scale
create a table with the given table
sets the table name
counts the number of nodes in the given node
create a new sequence with the specified name and sequence name
this is the entry point method
this method is called when the user clicks the button
show the plot button action
sets the flag that indicates whether or not the
returns the error code for this exception
reset the state of the
returns the card info string
get the card info string for a given parameter
set the to the given string
select a device
returns a list of device list objects that are not available
returns the status of the card info status card
process the bring to front
compute the mask for the given
registers a user to the tray
unregisters a tray icon
returns an image from an input stream
show the suggestion dialog
sets the widget factory
sets the keyboard layout manager
set the translation manager
show the about dialog
set the resource manager
set the window manager
sets the application properties manager
serialize xml to object
returns the element at the
notify the listeners that a change has been changed
puts an element into the queue
inserts the specified element into this queue
atomically removes all of the elements from this queue
sends a message to the server
starts the server
description of the method
initializes the codebase
returns the path to the icon for the given icon
returns the path to the image view
description of the method
description refer to
processes the message from the tree
called when the user clicks the button
sets the value of the given field
returns the environment
returns the name of the role
returns the name of the group
compares the specified object with this principal for equality
compares the specified object with this principal
compares the specified object with this group for equality
encodes the data string
closes the connection to the database
sets the jdbc driver class name
disconnects the connection from the database
setter for property data source config
close the connection
this method returns the user from the list of users
close the statement
sets up the fixture for example open a network connection
tears down the fixture for example close a network connection
returns true if the is
authenticate the user
close the connection
returns true if the request is a match
returns the login attempt for the current login
returns true if the user has access to the request
returns true if this is a authorized user
returns true if the request is a type
checks if the method is a type method
returns true if the request is a uri
process the start of this tag
returns the url to the file
sets the pattern to be used in the pattern
returns the request
sets the method value for this
adds a method to the list
sets the password value for this
sets the url to be used to convert this url to a
sets the token value for this
sets the username value for this
destroy the service
check if the given user is allowed to be
release the user interface
sets the login page value for this web request
sets the login error page value for this login status
called when the server is received
checks if the principal is authorized to authenticate with the given principal
sets the client digest value for this request
returns the maximum number of login attempts to login
sets the maximum number of login attempts to login
sets the c nonce value for this
sets the realm name value for this
returns true if the request is a state
disconnects the connection from the server
checks if the given username matches the given username
sets the value for this
setter for property default domain
checks if the given username matches the given username
sets the nonce value for this
set the
sets the domain manager
returns a string representation of this object
returns the name of the
checks if the given username matches the given username
checks if the given credentials matches the given username and password
returns the md5 hash of the server
parse the authentication scheme
returns the md5 hash of the server
get the user from the database
setter for property match on
returns true if the user is a member of the user
checks if the user can access the given principal
returns true if the user is allowed to access the given principal
checks if a user is a member of the group
adds a new user to the list of user matchers
adds a new code matcher code to this domain
adds a role matcher to this role
adds a new matcher to the list
adds a matcher to the given string
checks if a user is in the role
returns true if the user is in the role
setter for property data source config
sets the user password col value for this user
sets the join table value for this
sets the user username col value for this user
sets the join user col value for this user profile
sets the group table value for this
sets the role table value for this
sets the user table value for this
sets the join group col value for this user group
sets the group name col value for this
sets the join role col value for this role
sets the role name col value for this role
returns the detail table
returns the
returns the sample attribute of the method invocation object
find the sample attribute for the given collection
calculate the total total of the series
initialize the service
converts a double to a float value
set the endpoint address for the specified port name
returns the capacity of this code array list code
append a string to the end of the buffer
appends the buffer to the buffer
append a char array to the buffer
append a string to the buffer
shrink the current position to the new position
returns a string buffer representation of this object
returns a string representation of this object
read a lookahead character
read the next token
read until the character is read
skips over and discards n bytes of data from this
returns the line number of the current line
returns the next character in the current character
returns the lookahead lookahead lookahead lookahead lookahead ahead lookahead
returns the line number of the current line
unicode to avoid breaking unicode characters
sets the strategy
returns the strategy
returns a short description of the servlet
checks if the line is end of line
create a view based on the component
sets the category
adds an item to the list
creates a new member nav of this
factory method for creating a hierarchy item
called when the item is clicked
returns a list of all the items that are associated with this
creates a new member nav of this handler
returns true if the current view is visible
returns the hierarchy extension of the
sets the visibility of the window
returns the hierarchy item
sets the dirty flag
returns the hierarchy of the given hierarchy hierarchy
returns the member to the
request a category
deletes the deleted entry
test method for
returns the selection of the selected charts
returns the selection
sets the selection to the given collection
sets the selection to the given collection
returns the olap model for this view
returns whether or not the view selection has been modified
returns whether or not the selection is
returns the extension
sets the dirty state dirty flag
sets the selection state
returns the value of the
returns a valid selection check for the selected elements
removes the selected selection from the selection
returns the deleted
sets the hierarchy item collection handler
sets the deleted
drill through to drill through
returns the hierarchy of the given hierarchy
generate a synthetic attribute for a given parameter
generates a new form data source for the given member
returns the set of dimensions
this method is called when the column map is
called when the row is not already in the table
called when the parser becomes looking for
called when the end of the is set
returns the number of in the
returns the name of the member
returns the member member
returns the default member
returns the dimension type
returns the name of the dim
returns the dimension of the cite
returns whether the dimension is shared
returns whether the dimension is visible
returns true if the write is read write
returns whether or not this image is virtual
sets the all member
sets the mdx query
returns the label of the label
sets the default member
sets the dimension type
returns the current mdx
sets the dimension of the
returns the number of children cardinality
sets whether the dimension is shared
sets whether the dimension is visible or not
sets the members of the member
returns true if the member is a member of this data member
sets the value of the code axis ordinal code
returns the value of the code axis ordinal code property
sets whether the write is read write or not
sets the virtual
set the user user assignment
returns the value of the code place holder member code member property
sets ordinal of the member
sets the structure of the structure
adds a level to the level
returns the parent level of this node
returns true if the member is able to expand the member
returns true if the members
returns the first member of the given name
sets the members
expand the member in the group
returns the parent unique name
expand the model
sets the level
drill down to the
returns the depth of the node
swaps the two axes
this method is called when a node is in the hierarchy level
returns the property scope for the given level
sets the properties of the properties
returns a member expression
this method is called when the cell is data
returns the dimensions of this component
returns true if the given position is a sortable
sets the parent of this object
returns the hierarchy level of this component
returns true if the is calculated from the
returns the unique settings
adjust the levels of the given levels
sets the default value for the default hierarchy
adds a hierarchy level to this hierarchy
add a new property to the properties file
get the prop prop
returns the label of the label
returns the properties map
returns the number of columns in the table
make the table model for drill through the drill through
gets the custom settings
returns true if the given string is a member of the current
returns the unique name of the
returns the name of the column that this column is used to
returns the name of the column that this column is in
returns a new vector containing all the domains of the parent
returns the ordering property
returns the unique name of the column that is unique
returns the dimension of the given member
sets the custom slaves settings
sets the database type
sets the hierarchy
sets the column name for the column to be used for the
function to be called after a function is executed on the function
sets the name of the column to which this column belongs
sets the ordering property
returns the level of the child
returns the for a given dataset and returns it
returns the parent level of this
sets the child level
sets the parent level of this
returns the parsed query
returns the query adapter
returns the default dashboard
sets the default dashboard
returns the member of the given member
returns the string representation of the given member
this method generates a new member of the list
creates a new call
returns true if the type of the argument is a member of
get the datasource object for the given datasource name
get the datasource
sets the full name of the
rebuild the tree table
accept a visitor
returns the jdbc properties for this datasource
returns the jdbc properties source properties
delete the user role from the database
sets the xml parameters to be used for xml documents
checks if the user exists in the database
returns jdbc jdbc datasource
gets the datasource
returns the url for the request
returns the feeds of the feeds of the
sets the provider to the given map
returns a clone of the object
this method is called when the datasource is selected
this method is called when the user clicks the event
export a report
returns the resource string associated with the specified resource
returns the custom resource string for the specified resource
returns the resource string for the given resource bundle
event handler for the dashboard changed
converts a path to a context path
checks if the current session is a valid session
returns the temporary directory
get the jasper jdbc datasource
deletes the data object from the database
show the show inspector
returns true if the requested analysis is in the dashboard
this method handles the dashboard to the dashboard action
this method is called when the analysis is cancelled
distance in cluster
returns the distance threshold for the
sets the distance threshold
returns the number of clusters
sets the num of clusters
returns the level of the policy
sets the level policy
checks if the file contains the source and all the
run the given class
writes the given uid to the given code
read a single entry from the database
returns the parent folder
returns the name of the path
initialize the
puts a given into the list
sets the context of this
remove a key from the list
returns the value of the uniform property
returns the result of a given key
sets the uniform
enters the given element
returns the current context
creates a unique id for the given prefix
returns the distance between this point and the point
sets the parent of this view
sets the name of the channel
returns the distance between this point and the given point
returns the max
returns the center of gravity for the camera
returns true if the is smaller than the minimum
returns the parent container
compares two trace view objects based on the time trace
returns a list of annotations for this annotation
returns the root of the view
returns the annotation with the specified name
compares this tree node to another
sets the orientation of the orientation
load the attribute value
sets the units
parses a string to produce a double value
returns the source of the current
getter for property
returns true if the color is a
returns true if the color has the color
returns the color of the line
sets the
returns the center of gravity of the
returns the icon for the given item
returns the prefix
returns the icon for the given icon
returns the brush of the brush
returns the current context
sets the final flag
sets the current context
returns the current brush
returns the trace format
returns the definitions
returns the target format
adds a trace to the trace
returns the canvas format
returns the specification of this specification
sets the specification reference
returns the bounds of the trace
returns true if the latency is a latency
returns the value of the id now property
returns the timespan span
sets the to string
sets the from
returns the index of the specified channel
add trace trace to the trace list
sets the document id
returns the target format for the given channel
create a new view
returns the id of the document
remove the current node from the tree
sets the x coordinate of the channel
sets the y coordinate of the channel
returns the value of the target channel
this method is called when the is
returns the angle between two vectors
returns the distance between this segment and the
removes all the nodes in the tree
set the of this
returns the content length of this content
returns the current configuration
opens the application
resets the color to the default color
adds all elements in array to this list
returns the maximum index of the first occurrence of the
returns the maximum value of the receiver
returns the index of the first element in the array
returns the smallest value
returns the sum of the values of this object
returns the mean value of the distribution
this method initializes this
this method initializes j list
returns true if the content is empty
this method will be used to deliver a warning message
reloads the
transforms the current position into the target
returns the index of the point at the given point
set the value of the specified variable
moves the source to the next element
adds a construction of the given block to this block
sets the current player
returns the next player
returns the piece at the given location
checks if the location is empty
returns the size of the
returns the color of the color
returns true if the has been changed
closes the dialog
returns a string representation of this flow
closes the dialog
compares this object with the specified object for order
compares this to another
this method initializes query combo
updates the headers of the message
returns the impl
set the impl
returns the content type of the content type
encrypts a part of the trust content
checks if a given part is a valid signature
checks if the signature is already in the response
returns the encryption encoder object for this
returns the type of encryption
create a new encryption key manager
returns the alias for the current display alias
creates a key manager for the given input stream
create an instance of
get the status for the given
returns the test manager
sets up the test
returns the encryption type
reset the
returns the key alias for the first key
returns the key manager
set up instance variables required by this test case
initializes the key store
returns the certificate of the certificate
sets the certificate of the keystore
sets the certificate chain
returns the
returns the encryption type
sets the key
returns the key alias for the first key
returns the private key alias
returns the encryption encoder object for this
set up instance variables required by this test case
returns the type of encryption
returns the alias for the alias
sets the display alias
create an instance of
creates a key manager for the given input stream
checks for a given signature
returns the key bundle
sets the passphrase
returns the encryption encoder object for this
returns the alias for the current user
returns the key alias for the first key
get the private key alias
set up instance variables required by this test case
create an instance of
creates a new key manager
returns the alias of the expression
returns a string representation of this object
returns the number of in the
calculate the contracts
calculate the contracts
create a object
deletes the object from the data layer
update the object
create a new object
deletes the data object from the data store
update the object
creates a new object
deletes the specified object
updates the data store
create a new user
this method deletes an object from the database
update the object
returns true if this is a human part of the processs human
returns true if this is a human part of the processs human
sets the pawn to the given pawn
returns the pawn that this pawn belongs to
returns the direction of the
this method is called when the next move is pressed
starts the game
restarts the game
runs the timer
resets the game
returns true if the player is a human readable
adds a tick element to the tick list
returns the x coordinate of the cell
creates the view for the given message
removes the tick step
returns the y coordinate of the cell
adds a new element to the game
returns the radius of the collision sphere
removes the given code game element code from this code game code
returns true if the job is completed
set the current type
sets the controller to the given controller
returns an enumeration of all the game elements
returns the image for the given
this method is used to generate random numbers
adds a player to the game
returns the image of the given delta
removes a player from the game
returns the image of the given image
get the images of the given images
get the player by index
returns true if this is a smart frog
returns the number of players in the game
moves the wall to the opposite of the current wall
fetch the value of the specified property
checks if the cell is new
invalidates the cache
called when the cell is about to be updated
sets the number of
returns the start point of the player
starts a new game
returns the enemy start point of a given position
called when the game element is removed
print a string
set the speed of the servo
prints the given string and the given arguments
returns the x coordinate of the cell
creates the views subviews
returns the y coordinate of the y coordinate
register a view to the view
unregisters a view from the list of registered views
returns the view for the given code
this method is called when the user presses the
this method is called when the user presses the
configure the shell
run the thread
adds a resource to the resource map
returns the resource with the given key
returns the action for the action
sets the action
checks if the module is enabled
checks whether the module is a check
runs the action
check if the data store is already in the database
check if the given module exists in the module
read the object from the given file
returns an iterator for the
add a new object to the container
removes an object from the map
removes an object from the list
add a comparison to the list
returns true if the given id is already made
returns true if the object contains the specified object
returns the object associated with the given id
adds a new filter action description to the list of filters
adds a resource description to the project
returns the definition for a resource
sets whether or not the accept should be included
returns whether the reject rejected
returns the list of all types with the given source
returns a condition by its name
returns the first element in this collection
returns the module for the given name
this method is called when the selector is removed from the
returns the
returns the
returns the
add a method to this class
interpret the current value as a vector
interprets the elements in the given tree
adds a new expression to the list
select the given selector
interprets the contents of this expression
returns the argument to the right of the
sets the right argument
this method is called when the user presses the literal
returns the argument to the right side of the
sets the right argument
this method is called when the filter operator is removed
returns true if the source code s code is in the source
returns true if the given source is in the source list
set the column of the column
set the byte position of the current character
returns the byte pos
performs the operation
resolves all references to the references
the method code perform code
resolve the references to the references of the references
resolves all the references to the references
compares the specified objects to the list of
consume the token
this method is called when the line is closed
make a token for the given token
resets the text to the current position
adds a type to the list
returns the type of the given name
returns the result of the current request
adds a to the
run the thread
loads the properties from a file
store the properties of the properties
store the properties to the file
adds a vector of to the list of
add a new module to the list
add a method to the
add a method return type
add a method to the list of parameters
adds a list of input filter to this
add a filter to the list of parameters
adds a new and element to this element
adds a new or to this object
adds a set of elements to the end of the list
add a new filter operator
add a filter to the
adds a set of selector
adds a new entry to the repository
adds a new substitution part of the given condition
add a new type to the type
returns the type of this expression called after parsing
add a selector to the list
adds a line filter to the list
add a selector definition to the list
add a vector of condition binding
add a method binding
add a new module binding
add a new module name to the list
add a set of source to this repository
add a source file to the repository
add a new embedded source to the given source file
add a labeled reference to a list
add a reference to the
add a condition reference to the group
add a method reference to the class
add a new declared object reference
finishes the content of the current file
test of left outer join method of class
this method is used to test the left outer join relay
returns true if the arguments provided
returns the class of the class
select accessibility
invoke the
returns the value of the field
find the methods
set the value of the field
this method is used to build the constructor
this method is called when the x coordinate is set
performs the actual x
this method is called when the x coordinate is set
call the field method
log the specified message to the logger
log the specified level
this method is called when the element is matched
escape the text of the given string buffer
format a date time stamp
computes the counterpart of a string buffer
initializes the strokes to the default values
returns the selected row data
returns the row index
sets the selected index
returns the resource at cursor
returns true if the current row has parent data
set the directory to which this directory is located
returns an initiliazed instance of form component
destroy the midlet
the user defined visual appearance
returns an initiliazed instance of form component
returns an initiliazed instance of form certificate component
returns an initiliazed instance of ok command component
returns an initiliazed instance of string item subject component
returns an initiliazed instance of text field component
returns an initiliazed instance of string item issuer component
returns an initiliazed instance of form component
returns an initiliazed instance of choice group component
returns an initiliazed instance of string item not before component
returns an initiliazed instance of dump file command component
returns an initiliazed instance of string item not after property
returns an initiliazed instance of screen command component
returns an initiliazed instance of item command details component
returns an initiliazed instance of text field component
returns an initiliazed instance of back command component
returns an initiliazed instance of choice group component
returns an initiliazed instance of choice group chain component
returns an initiliazed instance of back command1 component
returns an initiliazed instance of string item version component
returns an initiliazed instance of string item cert serial component
returns an initiliazed instance of string item prefs component
returns an initiliazed instance of string item cert component
returns an initiliazed instance of string item cert not before return value
returns an initiliazed instance of string item cert component
returns an initiliazed instance of string item subject component
returns an initiliazed instance of string item component
returns an initiliazed instance of string item
returns an initiliazed instance of string item key component
returns an initiliazed instance of string item component
returns an instance of the form data
returns an initiliazed instance of string item data component
returns an initiliazed instance of back command2 component
returns an initiliazed instance of reader form component
returns an initiliazed instance of string item reader component
returns an initiliazed instance of item high command component
returns an initiliazed instance of item transition write command component
returns an initiliazed instance of item command read component
returns an initiliazed instance of item command write component
returns an initiliazed instance of back command reader component
returns an initiliazed instance of back command1 component
returns an initiliazed instance of ok command edit component
returns an initiliazed instance of text field component
returns an initiliazed instance of back command writer component
returns an initiliazed instance of writer form component
returns an initiliazed instance of string item1 component
returns an initiliazed instance of cancel command writer component
returns an initiliazed instance of spacer component
returns an initiliazed instance of form component
returns an initiliazed instance of ok command component
returns an initiliazed instance of back command component
returns an initiliazed instance of text field signature uri component
returns an initiliazed instance of item command component
returns an initiliazed instance of ok command1 component
returns an initiliazed instance of back command2 component
returns an initiliazed instance of form component
returns an initiliazed instance of text field chain uri component
returns an initiliazed instance of choice group component
returns an initiliazed instance of item command show component
returns an initiliazed instance of back command3 component
destroy the midlet
returns the inclusion in the
returns a string containing the of the current
add a line to the end of the line
adds a line end listener to the line
returns the line
returns the line
generates the factor for the given object
returns the value of the specified
adds a new to the
this method is used to send a message to the server
sends a message to the server
test normal operation
returns an iterator for the elements in this collection
returns the default column
reloads the currency of the
gets the value of the property
returns true if the clipboard has been used
sets the list of available auction
handle a new member file
reloads the status bar
sets the active state of this item
reloads the status bar
returns the popup menu for the
saves the data to the database
returns true if the image has the current file
returns fees for this gts
sets the fees
set the url to the given url
sets the value of shipping locations
returns the additional fees
sets the additional fees
returns true if shipping element has master element
this method is used to indicate whether the thread is a mariner
updates the version information of the given url
returns true if the user has a update information
returns the url for the
returns the url for the
adjust the currency to be updated
revokes the given account
returns the url of the resource
sets the toolbar to the given tool bar
builds a header for the given header
shows the dialog and sets the
show the
returns the most recent child of this node
starts the next token
appends the given character to the end of the buffer
this method is used to add the word to the group
returns the character of this sequence
creates and returns a new matcher and returns it
add or xor to this
set the bits in the table
returns the index in the specified sequence of characters
returns the index in the specified string buffer
returns the index of the last occurrence of the specified subsequence
counts the number of ngrams in the specified sequence
removes the first occurrence of the specified string from the
removes the last occurrence of the specified code substring code
replaces the first occurence of the first occurence of the specified character
replaces the first substring in the specified
returns the first punctuation skipping punctuation
returns leading punctuation from the first matched sequence
trim trailing from the first character
returns the collapse sequence of the first character
removes the first occurrence of the first character from the specified
adds a parameter to the request
returns the color of the series
returns the styles of the series
returns the
returns the panel password
sets the
sets the panel to the given password
returns the
sets the
gets the value of the property
returns the
sets the
sets the
returns the
sets the
sets the web password
returns the digit value
gets the phone number of the player
sets the state place state value for this admin promotion
sets the phone number
compares the specified control with the given password
paint the view
returns the selected security zone
returns the
sets the
sets the selected security zone
adds camera to the list of cameras
returns the safe home state for the current state
remove a camera from the list
pan the right right position of the camera to the right
pan the camera left right by the right coordinate
sets the state of the alarm home state
zoom in the camera
display the zoom out in the layers map
sets the cam password
returns true if this event is on the state
get the cam password
returns true if the current state is idle
returns true if the state is a monitoring
returns true if the current state is emergency mode
returns true if the alarm mode is in the alarm mode
switches the state of the
turns off the web service
resets the web service
returns true if the current zone is a
returns true if the user has the current zone
the web service
the main loop of the thread
this method is called when the user presses the off button
this method is called when the user selects the server
returns the password
sets the password
handles the action event
this method is called when the user selects the server
this method will perform the
the
checks if the is valid
initializes the components
creates a new folder with the given name and and
make the active midlet
returns true if the columns have changed
registers the given tag as an internal tag
returns the path to the database
returns the path to the page
creates the edit data for the current entity
an invalid root exception
sets the package entity
sets the package api
set the directory where the source files are generated
sets the value of the prop file property
sets the web xml
sets the java version
sends the message to the server
returns whether the recursion of the group is a use recursion
test that the jsp page is expected to be tested
sets whether the recursion recursion should use recursion
adds a directory to the directory
converts directories to a directory
sets the check only
returns true if the user is only only for the current
tests the element spacing
compares two text objects for equality
returns a string containing the current line of the
compare two comment objects
returns the length of the part in the length of the given
returns true if the current line contains the trailing
test method for
tests directives directive
test method for
creates a new file
ends the file
test the number of characters in the string format
adds the given code file name code to the output stream
test method for
test method for
test method for
tests the of chars with any of chars
asserts that the expected argument equals the expected
returns the last element in this list
returns the hash code for the receiver
creates a url to the portlet url
returns the url to the portlet
set the dao
remove a from the list
sets the id value for this
sets the project id value for this project obj
sets the date order value for this order
sets the size value for this item attributes
sets the released value for this
sets the date submitted value for this fwtcase order
sets the download url value for this download request
sets the status value for this remote web service
sets the type value for this web service
set the endpoint address for the specified port name
sets the target id value for this
setter for property field
sets the owner value for this web service
sets the view state value for this semantic history
sets the type value for this item
sets the access min value for this remote object
sets the possible values value for this
sets the filter string value for this
sets the value for this remote
sets the value for this web service
sets the valid regular value for this
sets the view state value for this
sets the access level r value for this cls
sets the access level rw value for this
sets the project value for this build
sets the length min value for this
sets the length max value for this
sets the priority value for this item attributes
sets the advanced value for this tcirdna
sets the severity value for this fwtcase search
sets the display report value for this tcirdna
sets the status value for this status
sets the display update value for this update
sets the reporter value for this
sets the display resolved value for this
sets the handler value for this
sets the display closed value for this flight
sets the resolution value for this
sets the require report value for this report response
sets the attachments count value for this campaign
sets the final update value for this efetch result
sets the notes count value for this defect
sets the require resolved value for this
sets the require closed value for this merchant item attributes
returns an instance of the reference to the view state
sets the project value for this project
sets the priority value for this remote request
sets the severity value for this
sets the os build value for this build result
sets the value for this remote
sets the total value for this
sets the handler value for this web service
sets the projection value for this test
sets the value for this get remote request
sets the resolution value for this
sets the fixed in version value for this
sets the steps to value for this type
sets the additional information value for this report data
setter for property attachments
sets the relationships value for this custom target
sets the notes value for this lead
sets the custom fields value for this custom field
get the jndi context
initializes the session beans
returns the value of the named property
p start the
creates a sub context for the given
returns the file name for the given file
sends a notification email to the smtp server
called when the application is shutting down
send notification email to the user
this method is called when the user presses the control
set the current parent of this node
add a node to the end of the tree
pops the top level stack from the stack
saves the organizations to the given organizations
set the name of the resource
sets the org
sets the email
sets the link
sets the name
sets the bio of the
sets the organization name
returns the name of the resource
sets collaborating organizations
returns the org
sets the org type
getter for property res email
sets the type
getter for property res link link
sets the organization contact
returns the bio of this bio resource
sets the years
sets the org
sets the search field
sets the outcome types
sets the organization country
sets the description
sets the search field
sets the org keyword
getter for property name
set the search field
sets the description of the organization
getter for property dc
sets the org home page
getter for property type
handles login request
getter for property years
adds a type to the container
returns the org type
getter for property
gets the org contact
gets the description
gets the org
returns the researchers organization name
gets the org country
getter for property researcher email
gets the org keyword
gets the org description
returns the researcher to be used for the researcher link
gets the org home page
getter for property researcher name2
returns the organization
gets the organization affiliated researchers
gets the organization country
gets the organization keywords
gets the organization description
gets the organization homepage
gets the collaboration
gets the collaboration years
returns the collaboration outcomes
gets the collaboration description
adds a unique id to the list of unique ids
handles the resolution of the stripes url
this method returns the organization
this method is called when the user demands to add a href
finds the researcher
finds the collaboration for the collaboration
this method returns the boolean value of the property
returns the field in view mode
returns the field in edit mode
sorts the list according to the given list of sorting
write a row to the row
registers the specified page to the page
initializes the applet
get special page
returns the label for the given key
this method is called when the object is about to be removed
returns the comment for the given address
returns the icon for this component
returns the name of the component
reset the current selection
returns a string representation of this object
resets the editor to its initial state
returns a string representation of this object
destroy the object
executes the command
initializes the driver
returns true if the connection is connected
close the connection
returns a string representation of this exception
parses the flags and parses it into a boolean
resets the current value to its initial state
returns true if the file was uploaded
returns a string representation of this object
returns a string representation of this object
returns true if the flag is set
returns the number of parameters
get the argument flag
returns the argument with the given id
returns a string representation of this object
check if the job is running
initialize the applet
initialize the map
returns true if the connection is connected
returns the jobs running jobs running jobs
returns true if the given version is a version number
returns the job id
returns true if this is a held resource
returns true if the connection is idle
returns true if the event has been removed
returns true if the task is completed
sets the handler on failure
sets the handler handler for the handler handler
sets the handler
waits for jobs to arrive
returns a string representation of this object
returns a string representation of the current state
this method is called when the thread is finished
removes the specified job from the list
removes a cluster from the pool
set the log file
submits this to the given observable description
adds a queue to the queue
logs the given file info
returns true if the is
sets the url to the url of the server
sets the url to the url of the server
stops the thread
returns the uri of the
returns a domain identifier
returns the domain
sets the
returns the maximum length of the longest length
returns the service impl
returns the domain identifier for the current domain
sets the first name
sets the username
sets the last name
sets the password
returns the validated username
returns the validated password
sets the old password
returns the rating parameter
returns the service impl
sets the new password
returns the validated date
sets the confirmed password
returns the confirmed password
returns a list of all the results of the search
removes the highest score from the domain
returns the maximum value of the parameter
this method initializes service impl
returns the domain
returns the domain
sets the
sets the
this method initializes service impl
returns the external external event name
returns true if the guard condition is met
returns the name of the state
builds the transition list
gets the first name
sets the first name of the user
returns the external external event name
returns the name of the state
returns the last name domain
sets the last name
returns the name of the state
builds the transition list
returns the external external event name
returns the name of the state
builds the transition list
returns the external external event name
returns the external external event name
returns the name of the state
returns the external external event name
returns the external external event name
returns the external external event name
returns the external external event name
returns the external external event name
returns the maximum length of the longest length
returns the maximum length of the longest length
returns the service impl
returns the maximum length of the longest length
returns the maximum length of the longest length
returns the maximum length of the longest length
returns the service impl
returns the maximum length of the longest length
execute the next row from the result set
returns true if the value is an error value
reads the next row from the database
returns the number of rows in the table
sets the number of rows affected by this model
process next row
process next row
gets the number of rows in the table
print the output of the current object
execute a query and executes the query
mark the marked as marked unmark
execute the transaction
returns the marked for rollback
mark the transaction manager as rollback
returns whether the transaction is marked as rollback
returns a connection manager instance
executes the given batch query
opens a connection to the database
executes a sql query
closes the database action
returns the default manager for the database
returns the default transactional manager for this provider
add a query to the query
add multiple multiple statements to the list of statements
adds a statement to the list of the queries
add a new query to the list of queries
add a table to the table
returns the where clause
sets the where clause
returns a string representation of the object
returns the name of the package
returns true if this is an interface
returns the name of the object
returns the list of super interfaces
sets the interface attribute of the class loader impl object
adds a super interface
opens a database connection
adds a super interface
adds a list of interfaces to the list
closes the database action
sets the comment
checks if the comment has a comment
returns the access modifier for this access modifier
returns true if this interface is a interface definition
sets the access modifier for this access modifier
returns the code definition code as a string
sets the abstract flag
returns true if the package name is a package
returns the package name
returns the type name
compares this object against the specified object
sets the super interfaces
returns true if this is a public access
returns true if this is a protected access
returns the package string
sets the final flag
returns true if the package is a package access
prepend the package name to the type
checks if this is a private private member
compares the specified object with this object for equality
returns the hash code value for this
returns the access modifier for this object
sets the access modifier for this access modifier
sets the static value
this method is called when the next line is pushed
this method is called when the braces braces is going to be
the tab in the tab pane
sets the number of spaces to be displayed in the buffer
sets the value of the synchronized property
this method is called when the tab is closed
increase the number of spaces in the tab
appends the specified object to the end of the list
appends the given text to the buffer
returns whether this is a native code
appends the given object to the end of the line
appends a line to the end of the line
appends a line to the end of line
returns the java type of this object
sets the transient flag
appends a line to the end of the line
returns the type of this object
sets the native flag
returns the type of the package
returns true if the package name is a package name
append a line to the tab
returns the package name
returns the type name of this type
appends the given text to the line
returns true if this array type is an array
returns true if this is a volatile state
returns the method identifier
appends a line to the end of the line
appends the given text to the line
returns a string representation of this package
writes a line to the output
sets the array dimension of the array
sets the value of the volatile flag
writes a line to the output
returns the package name
writes out the specified object to the output line
writes a line out of the line to the output
appends the tab to the tab
returns the field
returns the type of this method
appends the tabs to the tabs
append a number to the current tab
appends the blank line to the end of this blank line
returns the package name
appends the lines to the end of the blank lines
returns the name of the method
appends the space to the space
appends the given number of spaces to the space
starts a new block
returns the type of this field
appends the specified object to the end of the block
start the block
ends the block
returns the super class name
start a multiline comment
returns true if this field is an array
returns true if the class definition is a class definition
end of multiline comment
returns the array dimension of this field
append a line comment to the comment
sets the value of the import full class names property
returns the strict value
sets strict mode
returns true if the parameters have been set
sets the copyright comment
returns the object name
returns the implemented interfaces
adds a class to the list of implemented interfaces
sets the initializer
adds a import to the list of imports
adds a implemented interface to the interface
adds a parameter to the request
adds a list of interfaces to the list
adds a import to the list of imports
returns true if the class definition is a class definition
returns true if this is a interface definition
adds a list of imports to the list of imports
adds a parameter to this request
returns a list of all imports
sets the class comment
sets the implemented interfaces implemented by this class
returns whether the component needs to be used
adds parameters to the list of parameters
sets the object definition
returns true if the current instance has any exceptions
adds a field to the list
adds all fields of the fields to the list
adds a constructor to the constructor
adds a new exception to the list
sets the value of the beans em property em
returns the context for the current context
adds a list of constructors
adds a new exception to the list
returns the base services
returns the class name of the class that is used to get
adds a method to this class
this method creates an instance of a class
adds a list of exceptions to the list
get the context
adds a list of methods to the list
gets the code block attribute of the block object
get the context
returns true if the setter method is set
sets the parameters of this object
generates the source code for this package
sets the list of exceptions
resets the state of the menu
resets the cache value to reflect the current state
checks the contents of the definition
returns the bean being monitored
returns true if the state has changed
sets the flag indicating whether this reducer is a setter
resets the state to the initial state
resets the cache value to null
gathers all constructors
description of the method
returns a list of imports
this method is called when the view is changed
resets the bean state to the state
generates the comments for the given code
resets the cache values to their default values
returns true if the given bean has changed
returns the left size of the given rectangle
resets the cached value to the cached value
returns the monitor for the given object
returns the top of the top of the top of the top
returns a list of bean monitors
returns the code java
calculates the alignment of the left side of the given
adds the specified component to the layout
returns the alignment of the top of the component
returns the constraint associated with the given component
generate the classfile of the package
returns the size of the given dimension
lays out the container
returns the bottom bottom size of the component
returns the smallest right size
gets the setter access modifier for this
returns the size of the given dimension
removes all components from this container
generate the imports for the given code grammar code
sets the and and
removes the component with the specified component
populates the resources with the resources
set the component to be used for the given constraint
invoked when an action occurs
initializes the menubar
exits the application
returns the icon for this resource
writes the definition of this object to the given buffer
returns the title of the resource
initializes the gui
initializes the toolbar
initializes the panel
generates the comments for the given code
set the window title and icon to the title
adds an action to the action list
generates the content of the class definition
returns the value of the getter property
disables the action
method called when the state of the event has changed
enables or disables the action
updates the current selected window
generates the fields of the given code buffer code
returns the command manager
updates the panels of the main panel
returns the menubar for this menubar
returns the popup menu for the given name
generates the constructors
returns the resource manager
returns the title bar title
generates the java code to generate the code java
returns the toolbar
initializes the button
generates the code for the given code buffer code
initializes the command manager
this method initializes this
initializes the resource manager
generates the end of the file
sets the default cursor
returns the setter method
set the cursor to be used for the top level
sets the window title
invokes the action
overridden to set the message ui
returns the default key selection manager
adds a new checkbox box to the list of components
returns a list of imports
resets the help text
shows the dialog
hides the dialog
sets the help text
ensures that the given component is visible
returns the
sets the
resets the status bar
sets the help text for this page
returns true if the cancel button was cancelled
sets the message text
sets the detailed message text
adds a new label to the panel
sets the number of steps in the progress bar
increment the progress of the progress bar
sets the percent complete
displays an error message
creates the split pane
this method is called when the user presses the test
sets the maximum integer length
displays an error dialog
sets the maximum number of fraction digits to display in a maximum
display a message to the display
display a confirmation dialog with a given component
displays a warning message
displays a warning message
display information about the message
initializes the panel
initializes the resource manager
display the specified component to the given component
displays a message in the message box
returns the application image
sets the padding of the text area
sets the status label
sets the status
sets the product name
sets the product version
returns the string value of the given key
sets the fraction of padding to the specified amount of fraction
add a new resource to the resource
add a new resource to the resource
initializes the gui
this method initializes this
sets the application
adds all objects to the list
adds an object to the table
removes the object from the table
build the colums list
rebuild the list of columns
parses a string from the given text
removes all objects from the table
returns the row object of the given index
sets the objects to be sorted
sets the objects to be displayed
adds an object to the list
sets the selected object
removes an object from the list
returns the index of the specified object
returns the index of the object at the specified position
returns a collection of objects that are all the objects
adds a row to the table
refresh the table data
returns the object of the given row
refresh the data
rebuild the columns of the table
returns the row data for the given row
removes all rows from the table
refresh the table data
returns the number of selected items in the selection
sets the selection mode
refresh the table data
returns a collection of objects
returns the row data for the given row
returns the most recent column of the specified column
sets the sorted
refresh the data
returns true if the data is sorted
returns the selected objects
adds an object to the list
selects all the rows in the table
removes all selections from this panel
returns the selected objects
adds an object to the list of selected objects
clears the selections
select all objects in the model
returns the most recent column of the specified column
this method is called when the component is about to be monitored
this method is called when the swing component is resized
this method is used to monitor the component to be added to
this method is used to monitor the table
description of the method
description of the method
reset all components to their initial state
returns true if the current state has changed state changed
called when tree node is expanded
handles tree selection event
called when tree is expanded
adds components to the container
copy the selected nodes
returns true if the object has changed
resets the state to the initial state
adds the list model to the list
creates the card panel
returns true if the state has changed
resets the state to the initial state
resets the state of the cursor to the state
resets the initial state to the initial state
returns true if the object has changed
returns true if the object has changed
resets the state of the field
creates the split pane
returns the value of splash screen
returns the tree node renderer
remove all files from the directory
this method is called when the application is startup
initializes the command manager
initializes the commands
this method initializes the content panel
initializes the look and feel
show the splash screen
cuts the selected file
displays an error dialog
displays an error message with the given error
displays an error message with the given error details
display a message to the user
sets the format of the object
displays a warning dialog to the warning
display information about the message
returns the menu for the given menu
returns the menubar
write the record to a file
flushes the output stream
writes the raw data to the buffer
returns the location of the jsplit pane
returns the icon for this icon
returns the toolbar
returns the icon for the icon
returns the toolbar button
returns the toolbar button at the specified index
returns the menu for the given menu
returns the default application home directory
returns the xml parser factory
returns true if the menu item is selected
returns the domain map
sets the selected button
returns the name for the given base node
sets the menu items selected items
adds a character to the domain
adds the ok cancel button to the current user
adds a double to the domain
sets the selected state of the menu item
adds a float to the domain
adds a property to the domain
adds a long to the domain
sets up the temporary directory
add a property to the list
logs a property for a code property code
returns the currently selected node
stores the properties to the file
returns the selected nodes
adds a panel to the panel
converts the given attribute to an xml string
converts the given string to a string
returns the selected object
adds a panel to the panel
returns the title of this view
convert a double property to a double
convert a float property list to a float list
convert a double property to a list
convert a long to a long
adds a panel to the panel
convert a string to a string
activate the domain
adds the current value to the list
returns the application home property
writes the property to the given property
returns the tree model
checks if the type is valid
returns true if the key is valid
sets the layout of the panel
sets up the test fixture
loads the data from the reader
sets the layout of the panel
returns the domain map
adds a new scroll pane to the scrolling panel
returns the boolean value of the property with the specified name
returns the constants for the constants
returns the property manager
returns the value of a boolean property
returns the new property manager
sets the properties
adds a table label to the table
refresh the properties of this provider
returns the boolean value for the specified property name
returns the method with arguments with arguments
returns the value of the property with the specified name
sets the property value for the given property name
returns the value of a boolean property
perform the action
returns the object with the given method name
returns the node with the specified name
returns the type of the method specified in the
sets the object to be tested
returns the character at the specified code
adds a new text area to the label
returns the message
prints the stack trace to the specified print stream
returns the character value of the given property
prints the stack trace to the specified print writer
prints the stack trace to the specified print stream
adds a new text area to the balloon tip
prints the stack trace to the specified print writer
returns the value of the first occurrence of the specified property
paste from the paste paste file
returns a category object
configures the
adds a text area to the balloon area
returns the value of a given property
requests the focus to the underlying http request
returns the value of the property as a double
returns the value of a property
test that the file name is a file
test the file with the file name
returns a category object
returns a category object based on the name
selects the given node
returns the value of the specified property as a double
sets the default cursor
returns the value of the given property
returns the log4j category with the specified name
sets the divider location
configure the configure
logs the error message and if the system fatal error occurs
adds a new field to the text field
returns the log4j category with the given name
configure the
returns the value of the property as a float
set the cursor to wait for cursor to wait for the cursor
flush the log
returns the filename of the mapping file
sets the window title
adds a new field to the label
this method builds the xml marshaller for the given object
returns the value of a given property
binds the collection to the given collection
bind the object to the object
bind the given integer to the current bind
bind the given value to the current value
binds the given float to the current bind
bind to the bind variable
returns the query
returns the filename of the mapping file
builds an xml representation of the given object
show the panel with the specified name
update the database
creates a new text field
returns the value of the specified property as a float
create a database
set the deep description of the datastore
updates the database
create a database object
this method is used to determine whether the given object is persistent
loads the object from the database
returns the value of a given property
this method is called to set the tree structure to the tree
start a new transaction
adds a new text field to the text field
commit the transaction
rolls back the current transaction
remove an object from the database
returns all objects matching the given query string
returns the value of the property with the specified name
get objects of objects in the query
get query for given query
adds a label to the text label
this method is used to check the transaction
returns the database database
returns the value of a given property
close the database
adds a text label to the text
returns the value of the specified property as an int
returns the value of a property
returns the main list
returns the list of added list
returns the list of removed list
returns the long value of the property
creates a new domain object
resets the list of the listeners
returns the base of the rows satisfying the given condition
returns the first domain that matches the given id
return a list of parent objects that represent the given
returns all the records in the database
closes the window
returns the long value of the given property
returns all the records of the given field
deletes the data from the collection
returns the value of the specified property as a long
this method is used to create a domain object
sets up the fixture for example open a network connection
tears down the fixture for example close a network connection
checks if the domain object is a domain object
mark the transaction as rollback
sets the version of the application
converts a string to a string
returns the long value of the given property
returns the date format
returns the timestamp format
returns a string representation of the object
returns the identifier generator
reset the generator to its default state
returns the class of the class for the class
creates an instance of the given class
executes the command
returns the value of the property as a string
called by the servlet container to indicate to the servlet
set the helper attribute
executes the command
returns the name of the package
sets the child context
returns the class of the http servlet request
remove the child context
returns the value of the specified property as a string
sets the value of the specified object
set the external internal flag
returns true if this is a external
returns true if the key is in the map
returns all values of this map as a map
adds a transition to the list
returns the value of the specified key as an object
cleans up the resources
returns the name of the state
returns the embedded state machine state machine
build the transition list
returns the value of a property
returns the context view
returns the list of all the events that are associated with this
returns the state machine that is being used
returns the root transition for the given property
creates an instance of a class
returns the current state of the transition list
returns the list of valid external events
returns the topic connection factory
find the topic associated with the given topic
returns the current state of the transition list
returns the connection factory
lookup the queue with the given name
returns the directory where the properties are stored
handles the events from the given event
returns the preferred size of this component
commit the transaction
rolls back the current session
creates a new byte message
creates a new map message
creates a new message
returns the name of the state machine
creates a new
creates a new object message
this method is called when the state machine is exited
creates a stream message
creates a text message
enters a new error state machine
creates a text message
enters a new error state
initializes the connection
starts the connection to the connection pool
returns the connection factory
returns the connection factory instance
close the connection
returns the topic session
find the topic associated with the given topic
returns the session
returns the message queue facade for the
returns the value of the property with the specified name
returns the message topic facade for this topic
returns the topic connection
returns the message topic facade for this message
returns the class of the message queue
create topic publisher
returns the state monitor
returns the message topic class
this method initializes this
create topic subscriber
implement the on message message listener
closes the jms connection
unsubscribes a subscription
set a property for the given property name
reset the monitor state monitor
initializes the connection
starts the connection to the server
validate the value of the type
closes the connection
returns the value of the property as a string
returns the minimum value of the
returns the maximum value of the model
returns the value class attribute
returns the session
returns the minimum length of the
returns the value class attribute
returns the connection queue
returns the date time
returns the date value as a string
returns the value class attribute
returns the title of this view
returns the minimum value for this field
creates a queue sender
returns the maximum value of the field
returns the value class attribute
returns true if the file denoted by this pathname can be used
returns the value of the specified property
returns true if the file denoted by this pathname can be used
adds a child to this node
returns the child property for the specified name
initialize the component
returns the read only child
returns the child property with the specified name
start an element
end the element
returns the value of the child property
report an error
logs a warning message
sets the reader
sets the left indent
sets the handler
creates a new reader
returns the class object for the property
parse the content of the code parse code property
start the document
called when character data is encountered
handler method
fatal error occured
the exception handler method
called when the parser starts
end element with the specified name
called when the document ends
sets the left margin
sets the reader
set the handler for this handler
returns whether this dialog is a dialog
not supported
start the document
starts the element
end the element
called when the document ends
logs a message with error
logs a warning message
build the map
creates a new
get the class object for the property
method for the checkbox monitor
this method is called when the user selects the component state
this method is called when the user wants to monitor the monitor
this method is used to monitor the state of the jtable
this method is used to monitor the current state of the given
this method is called when the user changes the state of the
this method is called when the ok button is pressed
cancel the cancel button
sets the right indent
setup the component
shows the dialog
show dialog
updates the display
checks if the given string is a int
displays an error message
displays an error message
display a message to confirm the dialog
displays a warning dialog to the user
display information about the message
returns the height of the panel
sets the next line to the next line
returns the width of the panel
sets whether the is adjusting
schedules a task to be executed
schedules a task to be executed
this method is used to compile the file
compile the path
returns the property enumeration value for the given key
returns an enumeration of lines with the given file name
returns a new code op code object for the given code constant
trims the pool to the pool
add a constant pool entry to the pool
add a cpe constant to the pool
sets the value attribute of the object
returns the object value
returns the value of the field
returns the length of the bytecode type
puts the value into the cache
prints the pool entries to the pool
returns the dual floats
load a class from the cache
returns the name of the product
returns the path to the given class
add an entry to the pool
adds an attribute to the list
adds an entry to the list
returns the class with the given name
adds a field to the field
returns the interfaces of the class
adds a field to the field
returns the parsed class
adds a method to the list
set the array of
returns the parsed java class
returns an enumeration of interfaces
set the value at the specified position
returns true if this instruction has a jump
set the documentation for this asset
adds an op code
adds an empty code class code object to the pool
returns true if the given opcode is a handler
evaluates the stack and returns the value of the stack
sets whether or not the library is being used
peek at the next opcode
returns the class file address for the given name
add a new constant pool entry to the pool
add a string constant pool entry to the pool
add empty empty empty array to the method
create a new constant pool
returns the index of the named entry in the pool
returns the entries in the list
sets the name of the object
sets the
add a line to the line
returns the line of the line
trims the pool to the pool
description of the method
call the method with a given parameters
call the method with a given parameters
load a class from the cache
sends a message to the server
initializes the server
constructor for similarity table
returns the current task index
sets the state of the object
sets the expression
evaluates the given
load the repositories from the cache
sets the properties of this object
clears the properties
returns a new part with the given name
decrypts a
the given
remove a repository from the repository
clears the attributes
adds a part to the
removes a part from this
returns true if the content is valid
parses the list of strings into a string
resets the index to the
checks if the given user is available
adds a job to the queue
compare the two dates
sets the x y coordinate
sets the
returns the head position of the head of the
returns the position of the
returns the new position of the
add a byte to the byte buffer
adds a new step to the simulation
adds a new step to the list of steps
returns the object that corresponds to the given oid
store the character in the database
deletes all the worlds in the world
removes the object from the collection
returns the visible visible players in the list
this method returns the first instance of the
calculates reward of the
set the world region
update the world region
this method is called when the user modifies the world
store the settings in db
sends a to the server
moves the screen to the specified location
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the connection
gets the id value for this
sets the id value for this
returns the name of the
sets the name
gets the value of the surname property
sets the value of surname
gets the value of the property
sets the
sets the id user
sets the name event
returns the password user
returns the start date event
sets the password user
sets the start date event
returns the end date event
sets the end date event
returns the clipping rectangle
reads the next byte of data from this input stream
start the midlet
test of get longitude method of class nii
test of to string method of class com
test of get latitude method of class org
test of get time method of class nii
called when midlet is destroyed
processes the command events
called when the user selects the chart
adds a mapping from the property mappings to the given
populates the form
adds a list of categories to the list
add the given types to the list
adds the given model to the list of models
clears the content of the editor
sets the content of the file to the given string
returns the
returns the content of the file as a string
shows the frame
hides the frame
sets the document content
returns the document
returns the document
set the document content
returns the magnification factor
returns the drawing area
sets the tool tip for the template tool
returns the event
returns the source of the event
returns the position of the ball
returns a string representation of this object
get the next token
get the current token
returns the error messages
sets the locale
returns the current locale
returns true if the current state is final
checks if this code transition code is final
returns the error messages
adds a menu item to the menu
adds a filetype dot extension to filter against
get the review
saves the xml document to the given xml document
parse a comment id
remove a comment from the given book
add a review to the model
remove an review
clears the model
returns the next comment id for the given author
get comment by comment id
opens the dialog and shows the no source wizard
returns true if the given review id is already in the list
returns true if the given string contains a set of
creates a new annotation
handles the check event
updates the disabled state of all registered components
adds a set of to the list of
returns the begin tag
returns the group of the plug in
adds a field editor to the list
clears all the models
returns true if the given object exists in the workspace
returns the ifile object for the given file
gets the review id
add an xml object to the internal list
remove an xml object from the list
set the open state
returns the review as a
switch to the perspective that is being used
adds a new review to the guestbook
remove the review from the review
clears the list of the
refresh the tree
adds a review to this application
deletes the given review
expands all sub nodes in the tree
collapses all nodes in the tree
sets the content of the given array of comments
sets the search text
sets the column of the column
reset the replies to the default state
refresh the table
refresh the content of the replies
resets the comments to the current state
filters the comments of the current document
set the property configurations for the configuration
clears the view
reads comments from the document
returns true if this is a
adds a reply to the message
reverts the current state to the parent
returns the content of the object
set the property configurations for the configuration
fills the contents of the given object with the review
notifies the listener that the given part has been closed
returns the content object
convert the given string to unicode line breaks
refresh the background color
reverts to the clipboard
returns the saved state of the file
sets the variable to the given value
gets the reply author
returns the reply text
performs the ok button
cancel the cancel button
checks if the current user is valid
returns the internal property for the given key
returns the id of the comment
get comment by comment id
returns the priority of the given id
returns the name of the project created by this project
validate the page
returns the log level
returns an icon from the plug ins icon
checks whether the given is already in the model
validates the text
checks if the path is valid
deletes the review file from the application
creates a column viewer
returns the selection adapter for the given column and the
unloads the review comments from the review
fills the database with the tables in the database
opens a new editor in the editor
a comment
this method is called when the editor is removed from the
this method is used to handle the
this method is used to the given part
this method is called when the editor is changed
passing the focus request to the viewers control
adds the selection filter to the viewer
removes the selection from the list of selected filters
sets the focus to the current filter
selects a comment
selects the next comment
post an article to facebook
returns the status of the connection
sets the url
sets the text
saves the xml file to the given xml file
loads the game configuration
walks the tree
constructor for primary key
constructor for primary key
sets the value for this
sets the num tel value for this
sets the j description num value for this num
sets the j description value for this
sets the valid value for this admin promotion
sets the valid value for this admin promotion
set the value related to the column
constructor for primary key
setter for property stock
set the value related to the column stock
set the value related to the column ingredients
constructor for primary key
set the value related to the column
sets the
constructor for primary key
constructor for primary key
constructor for primary key
set the value related to the column
set the value related to the column
constructor for primary key
constructor for primary key
constructor for primary key
returns the
sets the
sets the
sets the value for this ingredient
constructor for primary key
sets the
constructor for primary key
constructor for primary key
sets the client id value for this offer
set the value related to the column date
set the value related to the column date
set the value related to the column
set the value related to the column menus
set the value related to the column
constructor for primary key
sets the menu
constructor for primary key
calculate the center of the map
creates the selector
this method is called when the xml element becomes
invoked when a key has been released
load the tab from the given file
updates the location of the node
calculate the angle between the two
puts the location of the given location to the location
initializes the group
compares this node to another node
paints the node
compares this group to another group
sets the list of model nodes to be used
validate the location
initializes the node
compares this map to another map
draws the map
initializes the layout
returns the radius of the circle
paints the image
paint the background
runs the setup
returns the transition that this transition is using
sets the transition to the given transition
sets the menu buttons enable
updates the nodes in the tree
runs the configuration file
runs the graphical interface
enables or disables the menu
updates the current time view
runs the evaluation of the given snapshot
returns the property value as a string
perform the depth first search of the given node
paste the location of the to the given location
this method is used to perform the paste
compares two nodes for equality
returns true if the given range is a range
this is used to make the screen to show the window
this is the size of the window
add an observer to the observer list
sets the selected files
compares this object to another object
returns the hash code for this object
paste the given to the clipboard
pastes the into the
transforms the origin to the given location
paints the node
adds a property to this property
stops the loading process
load the configuration file
returns the buffer size
returns the object
set the data data object for this data set
set the value of the code code property
sets the data data object for this wizard
sets the string value of the parameter
set the value of the parameter
compares this object with the specified object for order
sets the data object to be used for the data
adds an observer to the list of observers
updates the current values
adds an observer to the list of observers
adds a component to the container
adds a component to the container
adds an observer to the list of observers
updates the parameters of the given
this method is called when the observer is changed
set the value of the parameter
updates the configuration panel
load the data from the xml document
compares this object with the specified object for order
loads the content of the given element into the xml element
returns the modifiers for this class
returns true if the annotation is present in the given annotation
returns the default value of the field
returns the name of the jar file
returns the implementation vendor name
returns the implementation version of the jar file
returns the value of the specified object
returns the name of the method
returns the name of the plugin
returns the vendor of the
this method will be called by the server to get the free
returns the version of the jar file
opcode to store a value in the address
executes the given program in a separate program
exits the application
this method initializes the stack trace of the current thread
returns true if this class is sealed
returns the amount of free memory in the virtual memory
read a byte from the address
checks if the jar url is sealed
returns the int value of the field
sets a byte to the address
loads the given path from the classpath
read a short from the address
loads the library into the specified library
returns the total memory of the memory
returns the name of the vm
get the value at the given address
read a long from the address
causes the virtual machine to stop the virtual machine
returns the number of processors available
returns the maximum amount of memory in the memory
returns the value of the specified address
interrupts the thread
sets a float value
runs the runnable
returns the url for the resource with the specified name
read a double from the address
set the context class loader to use for this plug in
sets the value of the given address to the given address
get the address of the address
sets the address to the given address
starts the thread
returns the package for the specified name
sets the class assertion status
set the assertion status of a assertion status
set the default assertion status
clears the assertion status
fills the list of packages with the given packages
reads into the underlying stream
reads bytes from the given buffer
reads into a given array of bytes
write the given byte array to the specified position
returns true if the given number of bytes are a number of
check if the given member is a valid member of the security
returns true if the given array of types match the array of
returns the method to be used for the ith element
executes the given test
compares this call to the specified object
returns true if the is
returns the time in seconds
returns a string representation of this object
this method is called when the user selects the boot
decay for a decay
this method is called when the user selects the
runs the action
this method is used to print the rate for a
reports a compilation flow to the specified
this method returns a new execution phase
this method is called to initialize the instrumentation
a ration
returns a string representation of this object
report the compile time cycle
a
compares this object to the specified object
returns the total number of occurrences of the given
start the
counts the number of in the
this method is called to perform the
called when a is completed
remove the given from the
the aborted project
find the index of the heap
records a compile time
returns a string representation of this object
this method is called when the user modifies the
called when the hot session is updated
this method is called when the process is processed
notifies the system that the exit is done
this method is called when the user clicks the
notify all registered listeners that this class has been
called when the user tries to stop the controller
indicates whether the default opt is restricted
executes the command
this method is called when the is cancelled
increases the size of the heap
creates a compilation thread
creates the dynamic call graph view
create the
this method is called when the is removed
creates the organizer for the current process
this method is called when the has reached the
the down
swaps the two occurrences of the array
this method is called when a new is added to a
check the validity of the internal vm
this method is called when a is
this method is called when the is
set the buffer to be used for the given buffer
updates the
reset the stream
resets the buffer to the buffer
records the sample
resets the statistics to zero
this method is called when the user clicks the report
prepend a block to the given basic block
a plan
this method is used to print the report
returns the instruction for the given event
reset the
returns the counter for the specified handle
returns instruction for the given event
initialize the counters
sets the counter
this method will be called when the program is closed
sets the grow counters count
returns the index of the counter in the database
creates a new instruction listener for the instruction
this method sets the total number of times the
returns the index of the counter
returns the counter for the given counter
sets the counter of the
resets the counter to its initial values
returns the number of counters in the pool
insert a new one or more
get the value for a given log file
adjust the alignment of the field
returns the counter manager
set the value of the given number
creates a new
sets the size of the object
ensures that the object size is not null
sorts the list according to the given vector
update the layout of the given class
set the offset of the given
lays out the field layout
writes the new log file to the output
sets the type of this item
returns the key for the given name
sets the superclass of the superclass
helper method to write a string to the standard output
fails the test
this method is used to set the table for the given
sets the value of the b duplicates b tt tt tt tt
sets the
adds an element at the given position
sets the virtual method to the given code
sets the specialized method for the given method
returns the number of methods that have been assigned
checks if the given slot is already in the slot
checks if the given slot is a slot
inserts a new list of the first two instructions in the list
returns a string representation of this object
prints the state of the
move the next eligibility
returns true if the iterator has more than one
returns true if the enumeration contains more elements
move to the next step
generates the maps
returns true if the given offset is an entry in the buffer
prints the class name to the
returns the offset of the given
this method is called when the handshake is closed
waits for the inbound handshake
waits for the inbound handshake
acquires the semaphore lock
returns the index of the given
returns the for the given
returns the offset of the given
this method is called when the object is closed
sets the owner id
sets the recursion count
returns the recursion count
sets the locked object
returns the locked object
dump the blocked thread to blocked
this method is called when the thread is waiting for
returns true if the given node is blocked
returns true if the queue is waiting for a waiting
add a new entry to the worklist
add an entry to the queue
sets the priority queue to be used when creating the
adds a collection of objects
reads the next byte from the input stream
add a collection of arguments
returns true if the cache is allowed to be used
performs a logical and and and and or the current bit set
clears the buffer
logically or the bit set
bitwise xor operation
returns true if all elements of the collection are contained in the
returns true if the sparse vector intersects with another one
returns the element at the specified index
copies the bits of the given bit set to this one
finds the first occurrence of the first occurrence of the specified argument
counts the population count
compares this bit vector to another bit vector
removes the element at the specified position in this list
removes the first occurrence in this list of the specified element
returns a string representation of this object
returns the instruction that is used to render the instruction
returns a string representation of this object
insert edges out of the node
inserts a new node into the successors graph
get the register operand
sets the register operand of the operand
returns the register register
returns the type of the register
checks if the specified item is in this collection
computes the handler for the current
returns the next element
sets the next element in the list
returns a string representation of this object
creates the nodes
returns true if there are more elements in this enumeration
atomically returns the next element in this enumeration if this enumeration is
returns the current thread that is being monitored
returns a string representation of this object
merge the given list satisfying the given intervals
returns the next element in the code pointer code
add a to the
returns the graph
add the restrictions for the
returns a string representation of this node
checks if the given interval is in the interval
adds a new object to the list
returns a string representation of this item
returns the node string representation of this item
this method initializes the instruction
checks if the is
removes the given code object code from the list of objects
update the given statistic
this method is invoked when the user selects the
insert a instruction
register a new register with the given instruction
computes implicit backward
returns true if the options are enabled
returns true if the given is forbidden
computes implicit backward
allocate space for a call to the jvm
returns the location of the given instruction
this method is used to add a non instruction
returns the offset for the call
removes the instruction at the end of the instruction
restore the sink
this method is called when the register is removed
prints the dep graph
this method finds the node in the graph
returns the edge that is the destinations from the given destination node
save the state of the current state of the given code
this method is called when the interval is about to end
check if the given opcode is a valid reg
called when the is removed
this method is called when the register is removed
restores the state of the instruction
returns a string representation of the object
returns a string representation of this object
returns a string representation of this object
this method is used to save the to the
prints the debug global post
this method restores the restored registers to the given code register code
get the physical scratch directory
sets the parameter to the given value
checks if the given argument is an escape thread
returns true if the escape thread is allowed to escape the escape
returns true if the progress bar is in progress
sets the in progress
print the fixed point graph
inserts a new instruction into the memory
marks the given instruction as dirty
transforms the operand to the ssa form
prints the given maps
returns true if the given message is a system call
performs the operation
checks if the given opcode is a symbolic register
prints the given intervals to the body
returns true if the given instruction is before the given
this method is called when the is removed
get the live info object for the given basic block
replaces the current with the given
register hold and stack
this method will create a register
returns the
returns the
move a instruction
auxiliary method for registers a register in the pool
get the value of code live
create the first available available scratch register
returns the current in set
insert the columns into the duplicates
returns true if the is
get the field helper for the given instruction
the
put the helper instruction for the given instruction
checks if the given location is in the same locations as
this method initializes this
get the location for the given
get the static helper for the given instruction
creates a new kill and generate the
checks if the given is a location
returns true if the given message is a system call
returns a string representation of this event
checks if the location is a location
put static static operand
returns a string representation of this object
return the union of the given state
checks if the location is already in the register location
creates a new helper for the given instruction
find the guard for the given find
get the instruction
register a location for the given instruction
make a register for the given register
returns true if the parameter is a parameter
adds a vertex to the graph
remove a vertex from the graph
returns the representative of the vertex
returns a string representation of this event
helper method that checks if the given instruction is a basic block
update the interval between the given intervals
helper method that checks if the given instruction is a basic block
prepares the analysis for the given database
checks if the given instruction is in the
this method is called when the global value is
helper method that processes a basic block of the heap
initializes the graph
checks if the given instruction is a block
creates a new class
this method is responsible for creating the
returns the number of in the
helper method that handles the basic block
adds all the vertices to the specified worklist
insert a new heap variables into ssa memory
add a basic block to the basic block
finds the biggest match of the given graph
returns the number of in the
checks if the vertex is a graph
register a new heap to the heap
register a room
determine whether the given options should be performed
insert the methods description here
register a register to the heap
registers the given to the
returns the name of the database
print the text options
this method is invoked when the user selects the
register heap variables for each basic block
insert a new into the table
make a new
remove all defs from the
returns the candidate interval for the given interval
returns the next heap variable in the current one
this method is called when the user selects the
insert a new statement with phi stmt
sets the frame required to be used for the frame
compares two heap for equality
make a pi instruction
returns the hash code for this object
returns whether the options are enabled
returns the name of the component
returns true if there are any more elements in this iterator
returns the result of the current instruction
allocate space for the given parameter
checks if the given assignment is a
returns the next instruction
determine whether the options are being performed
returns whether the options should be performed
returns the name of the component
performs the actual interpretation of this solution
allocates a frame to the top of the stack frame
returns a string representation of this object
check that the given instruction is already stored in the given basic
returns the name of the component
returns whether the options are enabled
returns the ith vertex
returns the type of the heap
returns true if the type of the queue is an instance of
returns the conversion to the converter
returns the number of defined definitions in the
get constant adjusted for the given operand
register a basic block as a def
returns a string representation of this object
resolve the given instruction
returns true if this is a exposed thesis
returns the max depth of the given instruction
returns the number of bytes needed to wrap the exception
returns a string representation of the graph
generate the basic block with the same length
adds a new node to the list of registered neighbors
processes the given instruction
process the pi to the given pi pi pi
creates a new instruction
creates a new array of vertex array
returns the lattice cell value for the given object
adds a field to the operand stack
initializes the lattice cells
puts an instruction in the given instruction
sets the loop loop
initialize the list of
sets the value of the
sets the instruction to be used for the given instruction
initialize the register
processes the given instruction
checks if the register is optimized
evaluate the function
processes the given instruction as a
adds a code branch tree node code to the tree
find a rule tree node
helper method to bind a null check to the given
returns true if the is
returns true if the is
processes the given instruction as a zero value
returns true if the guard is a guard
returns the number of targets in the list
returns a string representation of this object
returns the inline depth of this node
returns the root method
this method will be called by the to parse the given
returns true if the method is already in the method
adds a feature to the not nested dependency code simple property collection
returns the hash code for this object
remove a dependency from a dependency
adds a new method to the dependency
removes a dependency from a dependency
removes a dependency from this resource
returns true if the method is a call to the method
processes the given instruction
returns the inline depth of the line
returns the instruction that will be used for the
returns the target call to the target
returns the options
returns the is
returns true if the target has a call to the target
returns the root method
returns the method used to calculate the method
returns the number of bytecodes
returns the instruction sequence
returns the compiled method
process inline
returns the trace level of the given level
process the given instruction
processes a instruction
calculate the cost of the
processes the given instruction
returns the hash code value for this list
returns the depth of the given string buffer
returns a string representation of this node
returns the node as a string
returns the next element in the enumeration
returns the graph node of the given node
process a call to the given instruction
this method is called when the node is about to be removed
recursive method to find the node at the given depth
returns true if there are more elements in this stream
returns the next element in the current enumeration
returns the enumeration of all nodes in this graph
add all the bits in the given set
add an object to the list
returns true if the list contains the specified element
recursive method to find the depth first in the tree
returns true if the given node is a single successor
adds a graph edge to this graph node
returns true if the given node is a single predecessor
returns the vertex with the given value
adds a graph edge to the graph
this method is called when the node has been removed
build the top sort of the top
returns the left child
returns the sorted top level model
returns the right sibling of this node
tests if there are more elements in the enumeration
adds a child node to this node
clears the internal state
returns the node that has been removed
returns the graph node that is connected to the given node
returns the vertex with the given operand
find a vertex in the graph
returns the vertex value for the given operand
prints the first node in the list
link a link to a target graph
prints the given nodes to the graph
apply the two instructions in the
returns the register register register with the given register register
registers a register to the vm
returns a string representation of this object
enables the
checks if the given target is in the
this method is called when the element is added to the stack
remove a from the list of
convert a string to a string
this method is invoked by the to perform the
checks if the given instruction is a barrier clean
disables the
the instruction
get the for the given instrument
register a new reference to the local pool
initializes the code for measure compilation code
sets the inline
returns true if the given options should be checked
executes the action
this method is called when the user wants to perform the
reports a stats to the current log
returns the time in millis
register a local register
returns the number of plan
release the optimization plan
prints the time to the given print time
returns the local number for the given register
initializes all measure metrics for the metric
determine whether or not the given options is enabled
write the to the
returns true if opcode is local or not
returns the time spent in the
reports additional information about the stats
get the concrete type reference for the given type
this method returns a new execution phase
this method is used to verify that the is valid
this method will be called by the underlying lexer to register a
this method is used to register a
returns the number of symbolic registers registers registers
returns true if the given is
returns the
get the operand register
returns the operand register
returns a string representation of this object
get the lock object for the given operand
returns the exception handler chain
remove the basic block from the basic block
returns the first symbolic register
this method is responsible for the of the
releases a permit from the given operand
returns the address of the register
this method is used to close the allocator
returns the integer register
returns the value of the register
returns the value of the register
returns the condition for this register
returns the code register code
returns the register
returns the register register
returns the register register for the given register operand
create a new
returns the instruction
get the register register
adds a element to the list of
returns the second register register
remove the given element from the list of
returns the number of elements in this list
count the number of elements in the reg set
creates a temporary type with the given type
counts the number of elements in the list
returns a string representation of this object
returns a temporary copy of this operand
make a temporary operand for the given operand
create a temporary operand for the current address
make a temporary operand
make a temporary operand
make a temporary temporary temporary temporary temporary temporary temporary temporary for this
returns a new operand
this method compares the given value to the current value
returns a string representation of this object
make a temporary operand
copies the operand to the base operand
make a temporary operand
compares two operand values
make a temporary operand
constructs a temporary transition for this transition
creates a temporary code register operand code with
returns a copy of this instruction
compares two values for equality
returns a new operand that is semantically equivalent to this code operand
compares the value of this
returns a new copy of this instruction as an operand
compares the value of this
returns a short description of this action
flip the current flip value
swaps the current indent and returns the resulting
convert the operand to a java operand form operand
returns the number of the
returns the type of the heap
returns true if this object is movable
compares two operands
sets the instruction
return a new enumeration that is a register
return a new operand that is semantically equivalent to this code
returns true if this is a reference
returns true if the field is definitely assigned
compares the value of the expression using the given
returns a copy of this instruction as an operand
compares the value of this
returns true if the column is a int
returns a short description of this action
return a new object that contains all the
make a copy of this instruction
operator operator is equal to the
returns a string representation of this object
returns a new operand
compares the value of this
returns a string representation of this object
return a new enumeration that is a register
returns true if this is a int
return a new object that contains all the
insert the methods description here
returns the def instruction
returns true if this object is equal to the value of the
returns true if this is a long
returns a string representation of this block
returns true if the value is equal to the value of this
returns true if the value is equal to the value of this
returns true if the current value is float
returns true if the value is equal to the value of this
returns true if the current value is double
returns true if this is a
returns true if the value is less than the current value
returns true if this is a reference
returns true if the value is higher
returns true if the address is an address
returns true if the value is a valid value
returns true if the column is a int
returns true if this is a int
returns a new operand
returns the number of bits in the
returns true if the value is equal to the value of this
returns the number of bits in the
returns the number of bits in the
returns true if the field is definitely assigned
returns the number of bits in the
compares the value of this
returns true if the value is equal to the value of this
returns a string representation of this object
returns a new operand representing the inverse of this branch
sets the half of the matrix to the one
compares this node to the given value
returns a string representation of this object
returns true if the value is equal to the value of the
check if the is
returns the index in the instruction list
check if this node is a branch
convert the value to a long
convert the value to a long
convert the code value to a code mirror
translate operand by assignment operand
convert the code value code to a code flip code
returns a string representation of this object
checks if this field is a volatile side
returns a new operand that is semantically equivalent to this code ref
returns true if the value is a double
convert the value to a operand
copies the operand to the current value
compares the value of this
returns a string representation of this object
returns a string representation of this object
make a copy of this operand
compares the value of this
returns a new operand
operator operator is used to compare the value of the
returns a string representation of this object
returns a string representation of this object
returns true if the address is an address
returns a new operand that is semantically equivalent to this code operand
returns a new operand that is semantically equivalent to this float operand
compares two operands
returns a new condition
compares the value of this
returns true if this is a float
returns a string representation of this object
compares the value of this
returns a string representation of this object
returns a string representation of this object
returns true if this is a long
returns a new operand
returns a copy of this instruction as an operand
returns the number of bits in the
compares the value of this node with the given operand
compares the given value to this
returns the number of bits in the
returns a string representation of this edge
returns the string representation of this block
returns a new operand stack
compares the value of this
returns a string representation of this object
negates the value of this
returns true if this trap is null or not
returns true if this event is an array bounds
returns true if the zero value is a div by zero
returns true if the stack overflow
returns true if this trap is a cast
this is a nop implementation
returns true if this object is a tt java
get the operand register
returns true if the trap check is store check
returns true if this trap is
copy the current to the
returns a new copy of this trap
copy the current to the
compares the given value to the given operand
convert the operand to a java operand
returns a string representation of this object
returns a string representation of this trap
copy the current to the
returns the trap trap id
returns a copy of this operand
returns a new operand
returns whether this is movable
returns the result of the comparison of two
compares the value of this object with the given operand
returns a string representation of this object
copy the values of the type to the given operand
returns true if the is not call
sets whether or not call is not call
returns true if the branch is off the branch
set is inline
this method is called by the
the
this method is called after the target
returns a copy of this operand
this method compares the value of the given operand
returns a string representation of this object
returns the
this method will return a register operand instruction register operand
make a new table object
returns a string representation of this object
returns true if there are any elements in this enumeration
returns true if the given is a
returns the next instruction in the expr
returns the next element in this enumeration
returns true if there are any more elements in this instruction
add an exception caught exception
returns the value of the code code property
returns the value of the code code property
returns the next instruction in the form of this instruction
returns the number of exception types
returns the live set
sets the live set of live set
returns the next element in the sequence
returns a string representation of the object
returns the number of instruction maps in the list
count the number of elements
returns true if there are any more elements in this instruction
inserts a new instruction at the end of the list
remove instruction from the stack
move instruction to end of instruction
returns the next instruction in this code operand code
insert a new instruction at the end of the
returns true if the is
sets the precise type of this audio
return the basic block
returns the number of instructions in the current instruction
returns the exit block
returns the first block in the basic block
returns the basic block
kill the falling block
returns a copy of this instruction
returns true if the is
add a basic block to the exit
remove the block from the prot
set the basic block to be used for the basic block
removes the given basic block from the order
insert after the given method
adds a new flags to this object
this method is called after the next pig instruction is
insert before the given code
sets the flags for this operation
creates a new flags object
add a basic block to the list of basic block
returns the previous instruction in the list
returns true if the flags operand flags are equal
add a basic block to the block
returns the stack trace of the stack trace
removes all the elements from the graph
returns the basic block
returns true if the is valid
copies the given text to the source copy of the current instruction
returns true if the is valid
returns the info
this method will be called when the jvm to
sets the value of the info property
sets the next object
append a new register to the end of the queue
returns the next operand
sets the register
returns the number of bytes that this race has
print the instructions for dumping the instructions
checks if the instruction is a instruction
sets the offset
returns the first instruction in the list of instructions in the list
returns a string representation of this block
add a basic block to the block
this method is used to set the block id
returns the
get the operator of the operator
applies the branch instruction
this method will be called after the instruction is not a branch
returns the last instruction in the list of instructions in the list
checks if the given instruction is a flip candidate
get opcode for the opcode
this method is called when the condition is true
returns the basic block in the cfg
this method is invoked by the
determine whether the options is currently being performed
returns the name of the component
returns the basic block in the order
returns the number of operands of this operator
append instruction to the block
dump the contents of the to the output stream
returns an enumeration of the captured values
returns the basic block
this method is invoked by the
returns an enumeration of the reverse magnet
returns the name of the component
this method is invoked by the
returns the number of defs that are used for this
undoes the instruction
returns a basic block of all the basic blocks
returns true if the given basic block is a
determine whether the options should be performed
returns the number of pure definitions
returns the name of the component
returns the block enumerator
this method is invoked when the user selects the
check if the is
constructs a new reference to the given field reference
dump the contents of the
returns the number of pure uses the pure method
returns an enumeration of the block ids
this method is invoked when the user has to be moved
returns the first successor of the cfg entry
prints the next node
returns the candidate test
returns the parameters of the first instruction
find the basic block that contains the basic block
returns the number of uses the constant pool
returns the next node in the list
return the successor of the given instruction
checks if the given valid valid instruction is too long
returns the block with the given block
is this opcode to a parameter
replace an operation on the given operand
evaluate the given block
embed the of the given block to the given block
returns the number of bytes in the
returns true if the opcode is
checks if the given instruction is a flip candidate
replace one of the two operands of the given operand
the block
dump the current value to the output
check if this instruction is a loop
resets the basic block map
get the dom node that contains the given block
this method is called when the condition is true
get the parent basic block basic block
returns true if the current frame is a regular loop
get basic block
returns the ancestor of the given block
replace the given register with the given value
returns true if the operation is invariant
get the semi colon aligned
returns a basic block of all bits
returns the size of the block
get the child node
returns true if the operand is a operand
returns true if the value of the given code op code is
this method is called when the is
returns true if the operator is seen by the operator
returns the number of operands to this method
set the frequencies
make a type operand
returns true if the operator is looping
computes the loop
returns true if the given basic instruction is a basic block
computes the multiplier for the given polynomial
returns the opcode of the operands
returns true if the value is
return a bit vector for the given block
sets the semi
returns the semi
set the basic block of the
get the basic block
sets the parent basic block
returns the parent basic block
returns the root operands of this node
count the number of instructions in this instruction
removes a basic block from the list
returns the value of value
adds a basic block to the end of the list
set the ancestor of this block
returns the ancestor of this node
set the label of the block
returns the label of the edge
evaluate the cost of a basic block
sets the size of the buffer
set the basic block
returns true if the is
sets the instruction at the next word
returns the child basic node
dump the contents of the buffer to the destination
returns the block enumeration
returns an enumeration of the defs of this
sets the block attribute of the object
returns a string representation of this object
evaluate the function
returns a short description of this action
returns a string representation of this object
returns whether the options should be performed
returns the name of the component
returns true if the given basic block is a loop block
returns true if the is
removes all instruction processors
initializes the lattice cell
make a type operand
initialize the
returns a new lattice cell that maps to the given key
returns the root node of the tree
returns a description of this type
get the first successor of the cfg
insert the instruction at the given array of instructions
removes all instruction instructions from this instruction
get the parent basic block
checks if the given block is a block
get the frontier of a basic block
returns the frontier of a frontier
returns a for the concatenation of the current prefixes
remove all basic block from the basic block
if the bit vector is true then the value is true
the master block
clears the node
returns a string representation of this object
return true if the given basic block is a slave
returns the number of symbolic registers registers
add a basic block to the subroutine
returns an enumeration of the for this
returns the depth of the given block
returns the name of the component
a strategy for
this method is invoked when the user selects the
this method is called when the end of the list of
this method is invoked when the user selects the
checks if the given cell is a cell
returns a string representation of this operator
returns a string representation of the cell
returns the value of the specified key
returns an enumeration of the prefix that should be used
adds a new equation to this element
returns the enumeration of the nodes in the graph
adds a new equation to this def defs
returns true if the given block is in the loop block
returns the graph node in the graph
the
returns true if this move is a move
returns the block for the given code block
returns whether or not the handler is able to handle the
solve the problem
this method is called when the node is removed
returns the enumeration of all nodes in this graph
returns the solution
adds a graph node to the graph
returns a string representation of the graph
returns a basic block of blocks
sets whether the handler is a handler for the
performs an instruction
returns true if this operator is a branch
returns the number of equations in the list
adds a list of to the work list
verifies that the given string is a valid
adds a new to the work list
add all equations to work lists
returns true if the property is a conditional branch
called when a new lattice cell has changed
returns the code lattice cell code that is associated with the given
creates the new equation
returns the top level address of the given address
returns the first of the first
returns the last of the
creates the of the given lattice
returns true if the branch is a way of this branch
returns the cell at the given location
adds a cell to the list
returns the compiler type
returns true if the operator is a
returns the exception
updates the work list
the equations of equations and the
get the dynamic link
returns true if this operator is direct branch
blocks until the loop block is a loop block
find the line number for the given instruction
returns true if this operator is an indirect branch
performs the lookup of the local vm
returns the iterator to the loop iterator
returns true if the operator is call
returns true if the method is pure or not
add a basic block to the end of the list
checks if the given edge is a
verify that the domains of the schema definitions are correctly set
returns the top level address of the given address
gets the first of the first segment of the
returns true if there are more elements in this block
returns true if the operator is a conditional call
returns the basic block of the current enumeration
returns true if the operand is a
verify that the def are met
performs a lookup on the given operand
returns true if the given code expression code is a
returns true if the operator is direct
returns the next basic block
checks if the given opcode is a check that is a
returns true if the function is an indirect terminal
returns a string representation of this code code
returns true if this operator has been declared in the
store the given instruction in the cache
returns whether or not this operator is implicit
returns true if this operator has been explicitly explicit store
perform the operation on the given operand
returns whether or not this operator is implicit
returns the number of in the
eliminates all operands of the given operand
returns the number of in the
returns true if this operator is throw
this method is used to set the number of
this method is used to set the number of
invalidate all the objects that have been persisted
returns true if the operator is
this method is used to log the stats record
checks if the operator is
perform the iterative instruction
perform the given mathematical operator
returns the hash code value for this
pop the current instruction by its name
returns true if the operator is already in the
returns true if the field is a load or store false otherwise
returns true if the is
returns true if the field is a load
returns true if the operator is a comparison operator
returns true if the field is a store
recurse through the graph and builds the graph
returns true if this operator is a allocation
this method will be called when the problem is about to be
checks if the bounds is consistent
returns true if the operator is a return
evaluate a unary expression using the given operator
returns true if the is
performs a shift operation on the stack
returns true if this operator is acquire an operation
returns true if this operator is a release
collapse all trees in the tree
returns the value of the code method count code property
returns true if the relation contains the dynamic
translate opcode to operand
returns a specialized implementation for the given method
create a specialized method for the given method
compile a source grammar
test if this curve is a yield point
returns the value of the code code property
returns a string representation of this event
returns true if this is a global event
set the operator type to the
computes the size of the
compares two reservation objects for equality
schedules a new block to be repeated
returns true if the given reservation is a valid leg
sets the of the operator
returns true if the given print option is a
returns a string representation of this object
sets the graph node to the given node
this method performs the actual work of the
returns the graph node that is the same as the
apply the given operator to the given instruction
compute the path to the critical path
ensures that the is valid for a
sorts the list of instructions in the list
returns true if the queue is ready to be empty
remove the tree node from the tree
ensures that the is valid for a
resets the bridge
initialize the compiler
this method is used to set the method compiled method for the
ensures that the is valid for a
returns the location of the converted object
returns the next return address address
ensures that the is valid for a
release any resources associated with this node
the block
returns the stack depth
returns the branch probability
add a block to the block
returns the location of the converted object
sets the branch probability
add a block to the block
moves the branch probability to the branch
mark the blocks as embeded
returns the number of bytes per map
write the map
add a new instruction
returns true if the condition is first first
returns true if the given instruction is within the method
returns true if the last term is at last one
sets the instructions to the current instruction
returns the depth of the given stack depth
returns the current browser
prints the bytecodes stack trace for the given code
checks if the field is a bb block
print the exception table
sets the offset to lock the release to be used
insert a new instruction at the end of instr
generate the for the current
insert instruction at instruction instr
returns the number of elements in this collection
copy the values of the given operand onto the stack
replaces the current instruction at the next instruction
notifies the exit listener
generate the for the
removes the last element
called when the recording is complete
translate the array to a new
pop an integer value from the stack
pushes the stack stack controllers stack to the given stack
decrement the operand
copies the value of the to the given address
copies a bit map
pop an address from the stack
pushes a new int register onto the stack
cleans up the pointers to the pointers to pointers to the pointers
returns the operand as an operand
returns the operand of this instruction as an operand
pushes a float onto the stack
shift the current value from the operand stack
write the to the output stream
this method will be called once per the jvm to be able
push a double into the stack
returns the offset of the given local relative offset
this method compares the given similar instruction to the current instruction
pushes the low value of the current value in the stack
sets the current instruction
add an instruction to the next link
returns the offset of the first frame in the buffer
checks if this instruction can be loaded
push a long into the buffer
load the address from the library
load the from the system
this method is called when the frame is one frame
returns true if there are more frames to be displayed
this method is called when the load engine is called
moves the up one up up one up up upwards
set the value of the constant
set the bytecode index
sets the method to be used for the method
returns the symbol associated with the given name
sets the compiled method for this
sets the current encoding index
clean up the system
returns the current bytecode index
pushes a long onto the stack
returns the method
returns the current compiled method
returns the current class of the current method
returns the class loader for the current classloader
returns the class name of the current class
get the array type of the value of the given field
pushes a new address into the stack
returns the name of the method to be used
initializes the state
returns the compiled method for the given element

return the value of the reference
get the ref type of the given instruction
notifies the exit of the current state
opcode to register a instruction
write the current to a
called when a new is started
writes the given to the
pops the current character from the current buffer
assert that the given value type is a reference to a
writes the initial to the
append instruction instructions for instruction instructions
define a listener for the given event
define a listener for the given event
define a listener for the given event
pops the short from the current instruction
returns a string representation of this object
returns a string representation of this object
create a new value to the annotation
opcode to register a pop off instruction
returns a string representation of this object
returns the string representation of the given value
returns the value of the given element type
returns true if the bridge is a bridge or not
invoke the method with the given method
returns true if the variable is a variable
pop the current value from the stack
returns the array element type
returns true if the given annotation is equal to this
returns the array type for the element
description of the method
returns the hash code for this object
returns the type of the array
returns the type of the element
compares this object with the specified object for order
returns true if the current user can be invited to the
pop the current value from the stack
emit a instruction
returns true if the given reference is a definite assignment
returns true if the method is already marked as
returns the address of the
returns true if the current resolver is resolved
returns the address of the
returns the method that is resolved
returns true if the class is a magic
returns the for the
prints the blocks of the current block
pops the last off or more
returns whether the jdofield is being tested
returns true if the current user is a call to the remote
returns the desired assertion status
returns the method that is used to resolve the
resolve the method
resolve interface method
returns true if this is a moving moving
this method compiles a compiled method to the given
pops the long value from the
returns the number of stack slots in this dictionary
returns true if this is a
returns whether the reference is a reference type
adjusts the current value of the given long
returns whether this annotation is
make the field
returns the runtime runtime
returns the value of the code code property
pop the address from the stack
returns the number of stack slots in this field
returns true if the field is a definite assignment field
returns true if the given field is already marked as definitely
returns the resolved field
generates the code code for the current
push a double at the specified position
returns a bytecode stream for the current instruction
write an object to the latch
returns the length of the bytecode length
sets the value of a word in the dictionary
initializes the component
generates a code code method
returns true if the given reference is a definite assignment
push double at position
returns true if the given field is already marked as a
returns true if the is a specialization
sets the specialization of the
returns the package name
cleans up the specialization
resolves the current resolve to a constant pool
returns the length of the
returns the bytecode for the
extracts the value from the given position
returns the synthesized for the current
compares this object with the specified object for order
compares this object to the specified object
returns a string representation of this object
returns the encoding of the given encoder encoding
handles the of a
sets whether or not the runtime runtime runtime runtime discovery
returns the modifiers for this event
returns the signature of this atom
returns the source name
returns true if this field is a field of a field
returns the declaring class of this field
returns the type of this class
find a field declared in the given field
find a field declared in the given field
returns the method that is declared in the given
returns the method that is declared by the given
returns the block with the given index
returns the main method for the main method
sets the
returns the offset of the constant pool entry at the given index
returns the block with the given variables
get the description of the constant pool entry
returns true if annotation is annotated
returns the address of the address
returns true if the value is zero
checks if this object is a maximum number of bytes
returns a reference to the object reference object
returns the integer representation of the virtual vm
returns the value of the strong strong strong strong strong strong strong
converts the vm to a word
returns the hash code for this object
returns the field layout context
convert an address to an object
returns the hash code of this object
set the hash code for this object
load the counter array of bytes
sets the field layout context
returns the size of the code free code array
returns the r map
allocate a new array of instances
returns the hash code for this object
allocate an array of objects
returns true if the given address is in this vm
allocate an array of an array of objects
returns true if the vm is in the
allocate an array of objects to the array of objects
set the alignment of the
checks if the given is in this one
this method returns the number of allocation bytes
returns true if the given address is in this
returns true if the is equal to the given
this method will be called when the bloom filter has been assigned
resets the allocator so that the client can allocate
returns true if the vm is
sets the byte at the specified address
mark the specified address as definitely assigned
the resources
sets the half of the given address
sets the full word address of the image
this method is used to indicate that the vm has been verified
sets the address of the address
set the value of a null address
sets the address of the indirect address to be used
sets the value of the given address
this method is used to indicate that the vm has been verified
increment the number of
this method is used to indicate that the vm has been verified
this method is used to indicate that the vm has been verified
this method is used to indicate that the vm has been verified
this method is used to indicate that the vm has been verified
this method is used to indicate that the vm has been verified
this method is used to acquire the reference to the native reference
this method is used to acquire the reference to the object reference
resets the data to the default value
this method returns the block of the given variables
sends a channel to the server
this method is called when the is about to be destroyed
get the byte at the given byte
this method will be called after the benchmark has been executed
sends a channel to the server
set the stream to use
marks all literals as ignorable curly braces
this method returns the block of the given variables
this method loads the bytes from the given offset
sends a channel to the server
set summary
set summary
sends a summary of the to the server
this method is used to acquire the character as a char
ensures that the is initialized
this method loads the character at the given offset
this method is used to acquire the short value of the reactor
returns the number of pages used by this tracker
returns the number of pages required to display the pages
prepares the non blocking state for the current
prepare the initial state
release any acquired resources
this method is used to convert a short to a short
get the float value of the reactor
unregisters native method implementing native java native class method
this method computes the float
adds a sub class to this class
load the int value
loads a double from the pool
update the given method
this method is used to acquire the long value of the reactor
load a long from the given offset
this method is used to evaluate the assertions of the vm
get the double value of the reactor
this method is used to set the vm descriptor
instructs the printer to the devices
this method computes the double value of the given offset
update the virtual
returns the interface id
this method is used to acquire the code word code
returns the space in which the space is in the space
returns the allocator for a space space
this method is used to acquire a code word code
stores the given reference into an array of bytes
stores the given address value to the virtual machine
logs the phase
writes a code write code to code write barrier code
stores the given address to the cache
generates the address comparison for the given address
stores a float in the pool
flushes the cache
stores a float in the memory
prints the given message to the console
generate the method invocation for the
print the detailed information about the time
stores a byte in the jvm
returns the code code reference object for the specified
stores the given value into the memory
write a code block lock code to the code set code barrier
logs a message with level trace
acquires a lock lock on the given offset
this is a convenience method that can be used to remove an
stores a double value in the pool
generate the call
returns true if the object is ready to be
forces the full heap members
returns the number of in the given object
this method is called when the scan of the scan is about
prepares the non blocking state for the root
prepare the pool
release the root object
returns true if the current page has a work
pushes a new string onto the stack
returns the number of pages that have been written to the current
stores the given short value
returns the collection reserve
pushes a new name onto the stack
set the to the
returns the number of pages needed to add the reserved pages
returns the number of dead
stores the given value into the memory
logs the source of the given code source code
returns the number of pages required to display the pages
pushes an item onto the stack
returns the total number of segments that are
returns true if the object is a live object
prepares the word to be used in the
processes the
returns the meta data page number of this object
this method is used to initialize the word
prepares the object reference
logs a message for the given listener
returns the number of pages used to calculate the number of pages
collects the
returns true if the receiver is required
helper method to create a reference to a reference object reference
returns true if the object is a live object
returns the id of the object that is used to resolve the
returns true if the cache is able to be able to be
prepares the address to be used in the
returns the allocator for the given space space
this method is called when the phase is read
returns true if the object is a live object
prepares a new address to be used to compute the
returns the number of pages available
returns the number of pages required to create the pages
returns true if the object is a live object
prepare the
returns the allocator for a space space space
returns true if the object is in the current state of the
the object
computes the value of the byte array
attempts to atomically set the value of the given code value code
p the specified phase
initialize the mutator
this method is called when the phase is traversed
return the allocator for the space space
returns true if the object is a live object
attempts to atomically set the value to attempt to attempt to resolve
returns true if the object is in the current collection
returns true if the object is reachable
returns true if the object is in the current collection
returns true if the given object is a move in the current
logs the given debug space
atomically if the given value is a temporary file
returns the number of pages used to display the
returns the allocator for a space space space
check all drivers
returns the number of pages required to the
generate the
the
returns the allocator for the given space space
attempt to atomically perform the last call
logs the given debug space
returns the number of pages used by this object
fail the cache
flushes the buffer
returns the number of reserve reserved
checks that the is a forked vm
returns the number of pages required to display the pages
count the number of tasks in the queue
returns the number of in the given object
returns the sub code for the specified sub flow
logs the phase
replaces the current phase in the current phase
attempt to atomically set the given reference to a vm
processes the
replaces the current phase with the given one
replaces a placeholder element
prepare the collection
attempts to atomically perform a permit
this method is used to perform the operation
this method is called after the node is a
initialize the collector
reset the cache
clears the cache for the clear clear clear method
attempts to atomically perform a permit
grab the entity from the database
this method is called when the is selected
sets the first closure type
validate the value
returns the number of pages used to calculate the amount of space
returns the number of pages required to display the pages
validate the value
this method validates the and sets the values
notify the that a block has been changed
initialize the mutator
returns true if the object is a live
release all allocated resources
releases the latch from the specified
returns the space in which the space is in the space
this method is used to convert a reference to an object
returns true if the object is a live object
p the specified phase
returns true if the given object is a move in the current
initialize the mutator
p set the flags for a given phase
returns true if the object is in the current collection
returns the number of bytes available in the current page
process the
this method is used to set the to the full
flush the stream
returns the allocator for a space space space
flush the sets the
returns true if the virtual machine is currently in memory
called when the is removed
returns true if the object is a live object
returns true if the given object is a move in the current
determine if we should be automatically inlined
returns the number of pages required to display the page
returns the number of bytes in the
pushes the current state of the current state
returns the allocator for a space space
returns true if the object is a live object
returns true if the object is in the current collection
prints the pre stats
returns true if the object is a live object
returns true if this object is a live
returns the allocator for a space space space
returns the number of reachable from the living
returns the number of bytes available in the
returns true if the object is a live object
returns true if the given object is a move in the current
returns the number of pages used to calculate the number of
returns the number of pages required to render the pages
returns true if the given object is a move in the current
returns the allocator for a space space
returns the number of the object that are
returns true if this object is a live object
returns the allocator for a space space space
returns the number of pages used to calculate the number of pages
returns true if the object is a live object
returns the number of pages required to display the pages
resets the state of the receiver to the initial values
creates a new card anchor
adds the given character to the buffer
returns true if the given object is a move in the current
moves the receiver to the specified trace address
adds the given string to the buffer
returns the entry with the given address
scan for the process object
initializes the
process the given object
flushes the buffer

validate the data
validate the values of the code code
validate the value
validate the value
sets the thread id flag
validate the value
validates the
validate the value of this field
validate the values of the code code
validate the value of this field
validate the input
returns the key for the given address
sets the of the
resets the local state to their initial values
returns the number of occurrences of the given unit
inserts the given overflow into the buffer
prepare the listener
resets the local buffer
set the size of the entry
allocate the buffer to the fork and caches the buffer
returns the free state of the town
increment the value of the counter
starts the applet
starts the vm
sets the previous address to the given dest
stops the timer
stop the stopwatch
prints the current units
this method is called when the current phase is changed
returns the next integer in the specified unit
increments the counter by one
check if the given length is a valid segment
prints the last state of the current stats
pushes the given value onto the stack
increments the counter by the specified number of times
melody realization
starts the vm
sets the next value in the buffer
stop the thread
locks the lock
pop the top off stack
returns the previous unit in the specified units
opcode to register a long opcode
checks if the current entry is sorted
sets the previous unit
release the lock
returns the name of the driver
sets the of this
setup the summaries
returns the name of the driver
handles the address
returns true if the completion flag is set
clears the of the coin
reset the stream to the initial state
returns the name of the driver
scan for an object reference
returns the left coordinate of the specified unit
register drivers that are registered for this driver
reset the state of this instance
this method is called when the user selects a reference to a
resets the first value of the counter
returns the entry of the given number
returns true if the index is in range
reset the data
returns the maximum number of tiles that can be used to allocate
check if the address is in the range
returns the index of the
perform a reverse scan on the given address
returns the address at the specified index
set the value of the low entry
setup the tree
returns the number of tiles in the tile
handles a root address
returns the name of the driver
returns the remaining space between two bytes
resets the roots to be read
returns the number of tiles in the specified tile
handles the address
dumps the content of the log file
handles a reference event
set the range of the range
sets the code extent code of the code range code
reset all the data to the data
sets the of the given
flip the buffer to the next copy
allocate a new
opcode to generate a instruction
the data
returns true if the specified node is a member of this group
the
split the unit into the
returns the maximum number of objects per block
removes the first free marker from the end of the list
scan for an object reference
returns true if the channel is connected to the server
returns true if this is a
adds a unit to the current set of free units
commits the current page
removes the given unit from the list
returns the number of pages that have been used for the
this method is called when the scan element is about to be
checks if the specified array of elements in the array are primitives
returns the right wheel
the page of the page
sends a message to the server
this method is called when the server is to be run
the pages of the pages
this method is called when the server scan
this method is called after the next node is done
set the number of processors
handle the reference from the space
prepare for a new transaction
release any resources

set the space info
setup the control info

moves the cursor to the next chunk
returns the size of the container
this method is called after the control is initialized
adds a control to the control
sets the control
grab the entity from the database
release any resources allocated by this
returns the control control index
release the resources
the pages of the resource
notify the listener that a new block has been changed
sets the number of pages to be used
write the given control to the log
grab the entity from the database
release all allocated resources
sends the given int to the server
grab the entity from the database
returns true if the object is a live object
returns true if the object is a live object
grab the entity from the database
returns true if the object is reachable
returns true if the object is reachable
prepare for a new state
release resources held by this object
this method is used to indicate that the
returns the block that has been consumed by the block
returns true if the object is reachable
checks if this is a age space
returns the least recently built in chunks in the
start the given region growing the given size
blocks until a block is a block
prepare the cache
return the number of bytes that have been acquired from the
returns true if the object is reachable
prepares the latch
gets the
grab the entity from the database
prepares the
returns the next chunk of the current address
release all references to the
determines whether the is to the
get the next chunk from the queue
returns the next chunk in the data collection
returns the next chunk of the given address
returns the number of pages that can be allocated in the current
get the local variable
pushes the current state of the current state
notify the client that a new block has been tracked
checks if the object is a cell
return the maximum collection of all the threads
this method is called when the user is successfully verified
writes a portion of a byte array
write a thread id to the native byte code
this method is called when the physical allocation failed
returns true if emergency
returns true if the gc is enabled
returns true if the given data is an alloc call
get the option set
resets the thread counter to zero
get the value of the i j bit i locally
adds a reference to the referent
sets the reference to the reference
computes the static roots of the trace
reset mutator to mutator
returns the next instance of the of this object
returns the ith reference
computes the boot roots of the kernel
returns a reference to a code code object
sets the to the given one
adds an event to the event queue
sets the to the specified value
sets the general description of the
starts the server
sets the
check if the connection is connected
resizes the cache to the specified size
this method is used to set the referent to reference a reference
starts the timer
starts the communication
stop the compensation timer
adds a new stream to the pool
the server is
returns the referent associated with the given referent reference object
this method is called when the stream is established
returns the size of the header
this method is called when the is read
sets the referent reference to the referent
writes a short value
this method is called when the value of the value is set
clears the values
this method is called when the user closes the stream
this method is used to print the log file
this method prints the value of the field to the specified value
this method is used to print the end of the
returns the maximum number of elements in this list
sends a to the remote host
marks the given as being edited
returns the number of ready to walk
this method will be called when a space is about to be
returns the number of free free free available slots
set the value of the local
returns the end address of an object
returns the size of the organizational unit
returns the sweep block of the given block
returns the align of the given object reference
time to the time
returns the number of cycles
returns the time in seconds of the given
returns the of the given number of seconds
returns the align of the object that surrounds this object
returns the millis of nanoseconds in nanoseconds
calculate the nanos to the given time
this method is called when the server starts
returns the performance of the performance
returns a short of the system
returns the current size of the object
this method is used to set the
returns the next object reference
returns the object reference for the start address
clears the number of bits in the specified block
returns true if the object is an array type
returns true if the object is a primitive array
returns true if the object is available
writes a portion of an array of characters
scans the given code level code for the given code level code
write a thread id to the socket
copies the contents of the source dest into the given destination
this method is called whenever the join list is closed
returns the value of the object
sets the array of code array code s that are associated with
called when the asynchronous async request collection is received
scan for a triple
returns the maximum number of threads that are not already allocated
implementation of the interface method
this method is called when the user is successfully attempting to the
schedules a child trace of the given object
set the dual of the given instruction
this method is called when the user clicks the physical state of
process the given code code
this method is used to allow a to be used
returns true if the user is emergency allocation
computes the roots roots for the roots
returns true if the is
computes the roots of the global roots
prepare for a private mess
prepare for the collector
computes the root of the thread tree
returns the number of the in the channel
computes the boot roots of the boot
prepares a choice for the given object
schedules the schedule to be able to be able to be scheduled
returns the current configuration set for the current project
this method is called when the server is ready to be
returns true if the current point is a
test of get method of class org
returns a new active plan
method called when the scan of a trace is being closed
forwards the specified trace to the trace
test of get method of class org
returns the number of in the receiver
write the data object to the specified object
test of get method of class org
returns a new
test of get method of class org
sets the heap range
create an instance of
sets the mutator to be used to perform optimizations
returns the number of bytes in the memory
scan for the given code
the memory value
read a byte from the underlying data model
returns a collection of the current values
the memory
sets the requested address and sets the starting address
create an instance of
this method is used to indicate that the number of bytes that
dumps the memory to the specified memory
create a new lock for this name
writes the specified number of bits to the stream
collects all and
create a new memory
create an instance of
reads the word in the object from the given data object
returns a new reference processor
create an instance of
create an instance of
returns a new code iterator code that will be used to compute
creates a strings instance of the strings specification
returns the size of the organizational unit
creates a new
returns the alignment of the object
locks the receiver
return the
fails the test with a message
assert that the current condition is false
asserts that the message is not a message
prints out the top frame info
prints the stack trace to the stack trace
returns true if the is
returns the align of the alignment before the last element of this
returns the interpreter of the current
returns the address of the object
returns the property value as a string
get a property from the osgi bundle
returns the value of the property with the given name
get an int property value
returns the boolean property value
get the boolean value of a boolean property
returns the number of collections in the collection
returns the current size of the object
release the lock
returns the number of nanoseconds
this method is called when the server is initialized
writes the reference to the specified address
returns the performance of the
read a metric
dump the object to the output stream
prints the given method
returns the address object
returns the hash code of this object
returns true if the value is null
returns the value of this code float code object
returns a string representation of this code code
returns the value as a long
returns a string representation of this character sequence
returns the offset of the current element
returns the address of the cell at the given index
returns the size of the extent
returns this value as a code null code
returns this value
copy the size of the specified code mutable code value
writes all the data to the mesh
copies this code word code to this code data code
returns true if the value is zero
returns a copy of this word
returns a copy of this code word code with the code
returns true if the value is a maximum
returns true if the values of this match is a bitwise bitwise
returns true if the is scaled
identical to code copy code except the two
returns a reference to the object reference object
get a byte from the address
returns true if the value ax matches the value
logically the value of this counter to the sudoku
returns the character at the given address
returns a code word code with the given code words code
concatenates the current code value code and the
returns a word
get the int value at the given address
returns a word with the values of this copy
the given component by its word
returns a code word code object representing this code words
the given component by its word
read a long from the address book
the given component by its word
returns the value of the code
returns the sum of this object with the given offset
validate the value
validate the value
adds the specified number of three of the specified argument
returns the out of memory
returns the value of the specified number of the
sets the value of the out of memory of memory
returns the collection of attempts to wait for the
read a single character
subtracts the given
this method is called when the thread pool has been
prints a new line to the log
clears the collection of attempts to discard
starts the logging event
returns whether this is a physical allocation failure
returns the logical code address code with the specified
prints a warning message
throws an exception
returns true if the nth watched file is in the list
subtract two addresses
handle uncaught exception
returns true if the value is a
returns the context
returns true if the given code address code is a bitwise
computes the root of the thread
description of the method
the current time
returns the policy for the policy
compares two addresses
formats the current policy
this method is called when the end of the is encountered
dump heap heap memory dump heap
returns true if the given address is a
starts the snapshot
flips the snapshot to the next time
the thread run method
returns true if the value is equal to the given code
this method is called when the is reached
cancels the timer
starts the thread
checks if the given message is a failure
returns true if the given address is a
wait for the scheduler to wait for the scheduler to wait for
store a reference to a data field
this method is called when the prefetch is done
sets the state of the trigger to the next
adds a referrer to the list
load data field from a specific data object
scan for the given object
this method is used to set the trace object for the trace
traces the root of the forest
returns the reference to the object reference
this method is called when the is closed
returns the hash code value for this object
this method is used to convert the given offset to the
load the byte array from the byte stream
appends the given elements to this list
returns the current index of the current element
sets the value of the property
resolve the signature of the uml refs and resolves references
loads a byte from the byte array
returns a string representation of this object
returns the compiled method for this compilation unit
returns the pool for the current thread
create a new stack frame
pushes an element onto the stack
removes and returns the element at the top of this stack
returns the element at the top of the queue
get the character
this method loads the character at the given offset
pushes a stack frame to the stack
pop the stack
returns the type of the expression
load the short memory
compile the ast walker to the given ast
returns the number of frames in the frame
this method loads the specified short from the
returns the number of occurrences of the given code
returns the value of the specified align
returns the object reference of the given frame
returns the method
returns the index of the specified code code frame
load the current value
returns true if the operand is a value
returns the operand of the given frame
returns a string representation of this quad
this method is used to convert a float into an offset
returns the reference value of the given code stack frame code
returns the line number of the line
returns the column of the column
returns the source location of the source file
returns the source location of the given prefix
load the memory
loads a single int from the current position
load the memory
loads a long from the given offset
define a field type to be used
returns the value of the code load code property
returns the end index of the given
loads a double from the current position
load the word
loads the word from the given offset
this method is called when a method return the result
this method is called when a call is made
pushes the target frame onto the stack
saves the current state of the given
load the address
sets the actual parameters to the given value
returns the value of the boolean property
declares a new declaration of this variable
add a stack trace to the stack
get the slot at the specified slot
returns the value of the reference field
loads an address from the given address
returns the type of the slot in the specified slot
returns the value of the boolean property
set the value of the slot
trace a trace object
loads the word
computes the roots of the root node
this method generates all the roots of the root
this method loads the word at the given offset
returns the saved pc
save the current state of the method
store the value of the variable in the rms
set the slot
clears the result slot
sets the value of the result
convert a value to a java object
returns the slot position
evaluates the given value
stores the value at the given offset
executes the given variable
read a single line
stores the address to the destination
store the given address to the internal address
stores the value of the to the given value
stores the value at the given offset
stores the value to the memory
get the named object
returns true if the table contains the given name
stores the given value into the offset
returns the line with the given line
stores the value to the destination
stores the value at the given offset
stores the value of the variable in the rms
stores the value at the given offset
stores the value of the high memory time
returns the integer representation of this object
returns the code long code value of this code code
stores the value at the given offset
returns the offset of the current element
returns the size of the pane
returns true if the value is zero
returns a code new code word whose values are not already in
stores the value in memory
returns a copy of this code word code s value
returns a new code word code whose given size is the
returns true if the current value is a maximum
copies the value to the end of this one
returns a copy of this word
returns a reference to the object reference object
returns a copy of this tt token tt with the code
stores the value at the given offset
returns true if the given word is a word
returns true if the is flipped
stores the value in the memory
a word
returns true if the normalized is epsilon
returns the current value as a long
returns true if the sudoku is a legal word
stores the specified offset into the buffer
returns a code word code object representing this
returns a code word code that represents the copy of the
returns the tokenized word with this one or more
returns the not the token
returns the value of the specified code int code
returns a word that matches the values of the
store the value in the memory
perform a flip operation
sets the value of the field
sets the value of the field
sets the value of the default value property
sets the value of the default value property
perform a flip operation
sets the value of the field
returns the sum of this object with the given offset
sets the value of the default pages property
stores the specified offset into this
sets the value of the default value property
perform a flip operation
sets the value of the field
returns the next element in the queue
sets the value of the default value property
sets the value of the property
sets the size of the receiver
sets the value of the default property
this method is used to load the word
logs a command line
returns the value of the given string
log the given option
writes the current log line to the log
returns the difference between this reference and the specified
fails the test with the given message
fail if a condition is true
logs a warning message
returns the of this object
sets the default value
if the warn message is not null return true
this method is used to create a word at the offset
sets the value of the property
sets the value of the default value property
returns the logical code address code with the specified
returns the reference object reference object
returns the difference between this address and the given
returns true if the given address is a new address
this method is responsible for instantiating the reference object
returns true if the given address is in the
prepares the address
returns true if the given address is a valid address
this method initializes the address
returns true if the address is a
returns the successor of the given value
returns true if the is equal to the given address
prepare the
returns true if the given address is a node
this method is responsible for returning the value of the int field
atomically attempts to attempts to attempts to attempts to attempts to attempts
this method is used to get the reference object reference
this method is used to convert a reference to an object reference
atomically attempts to atomically code push code this method will attempt to
get the byte value of the byte array
atomically if the value is older than the old value
loads a byte from the byte array
ensures that the given byte code is equal to the given destination
attempts to store the value of the old one to the specified
returns the character at the current position
attempt to atomically
this method returns the character at the given offset
get the short value of the field
atomically attempts to attempts to attempt to store the value of the
load a short from the byte array
atomically adds a value to the end of the header
returns the float value of the longitudinal axis
this method returns the float value of the float
this method is used to load the int values
this method is used to convert a double to a int
this method is used to load the long data
description of the method
this method is used to load the double value
this method is used to convert a double to a double
this method returns the address of the address
this method is used to convert an address to an offset
this method returns the code word code for the current
this method is used to convert a word to a offset
store a reference to a data object
store a reference to the data store
store the address value
store the given address to the given address
stores the given float
stores the given float to the buffer
store a value in the database
store a value in the buffer
store the given value
stores a value in the buffer
stores the given value in the cache
stores the given value into the buffer
stores the given value in the cache
stores the given value into the buffer
stores the given value to the end of the cache
stores the given value into the buffer
store a string value in the buffer
stores a string in the buffer
store the value of the field
stores the given value into the buffer
prepares the word to be used for reuse
this method is used to create a code word code instance
returns the reference to the object reference
this method is responsible for instantiating the reference object reference
prepares the address
prepares an address to be used to perform the given
prepare the
this method is used to perform the conversion
attempts to atomically see if the value is not null
attempts to atomically see if the given value is a reference to
atomically if the value is already stored in the given value
instructs the code spin code to the code word code to be
attempts to resolve an existing reference to a
attempts to attempt to perform an attempt to attempt to attempt to
atomically removes the value of the value from the code address code
returns a string representation of the object
generate the for the current state
inverse of the
creates the table
notifies the ok button about the current ok button
returns true if the given is already stored in the cache
returns true if the file index is uninitialized
gets the id from the
deletes the given document from the list of documents
deletes all the files
adds an item to the end of the list
clears the history
read the tree
handles the message that the shell is being closed
setter for property data
returns the
sets the id
sets the
setter for property filename
setter for property stamp
returns the id of this object
setter for property filename
sets the id
returns true if the is
setter for property cat
sets the name value for this get user info
returns the file name of the given file
saves the file to the specified file
save the file to the specified input stream
registers a job observer
unregisters the observer
returns the job size
called when the current work unit has finished
sets the state of this job
returns the description of the message
compares this object with the specified object
set the endpoint address for the specified port name
resolve the given resource
sets the recording
copies data from an input stream to the output stream
the action has been activated
sets the buffer size
merge two lists into two lists of different packages
updates the key with the given key
tests whether the pattern matches the pattern
returns the value of the attribute with the given name
returns true if the list contains the given py object
returns the parent of this node
returns the id of the object
get the flag
returns the description of the
returns the cash
returns the inv stock
returns true if the type is an inv
returns the description of the object
returns the number of digits in the
returns the of the
returns the sep
returns the prefix of this node
returns the suffix of the current file
initializes the
starts the timer
returns the description of the filter
returns the size of the list
returns the value at the specified index
replaces the element at the specified position in
starts the timer
this method is called when the view is removed
returns the copy action permanently associated with this
returns the type of the
returns the number of in the list
adds a component to this panel
registers the listeners for the components
returns the value of the spinner
set the font to be used when creating the action
returns the current character frame
adds a radio button to the radio button
updates the index
returns the size of the list
returns the element at the specified index
add a change listener to the
sets the selected item no event
sets the selected item
returns the ignored characters
returns the selected item
sets the flag
returns the current selection
returns the number of the current object
sets the collation object to the given column
returns a hash set of all the elements in the given set
returns the locale for the current locale
fires the contents changed
returns the list of ignored characters
performs the action
runs the
returns the menu bar
returns a hash set of the ignored chars
returns the character used to authenticate the character
called when the current selection is selected
returns the number of in the model
returns the replacement key
called when the user selects the next
returns the substitution
sets whether the node should be automatically resized
returns the frame
returns the cipher of this node
returns a copy of the receiver
adds an action listener to the
removes a listener from the
returns a list of alpha transparency
adds the given action listener to the button
remove an action listener from the button
returns the type of the
returns the number of indices that the current alphabet is currently
adds a window listener to the window
returns the cipher
returns the set of include
returns the
returns the set of ignored
returns the set of cipher alphabet
returns the replace
returns the source string
returns the set of plain text
returns the source encoding
returns the list of ignored objects
show the ignored characters
returns the language frequencies
returns the set of code lang code objects in the code set
returns the set of characters that this alphabet is currently
returns the set of in the list
returns the
returns the set of in the list
returns the
returns the index
returns the collation key
set the collation key
returns the string representation of this object
sets the frequency of the
returns a string representation of this object
returns the name of the column at code column index code
returns the number of rows in the table
add mouse listener to header in table
returns the key
returns the sequence as string
returns the length of the sequence
returns the frequency of the current record
update the total
returns the number of rows in the table
gets the value of the property
saves the current project
set the locale to use for the current locale
returns the include
set the value of ignore
returns the set of ignored ignored
sets the code control code flag
returns the include ex list
returns the character at the specified index
returns the replace map
returns the
return a set of the ignored chars
returns the
sets the source
returns the source encoding
sets the source encoding
returns the rules path
sets the rules path
sets the title of the language frame
registers listeners for the component
sets the name of the frame to use
set the project name to use for the given frame
sets the neuron on the network
resets the counters
start the epoch of the current session
get the value of a string
creates the graphical items
removes all items from the graphical resources
attaches the listeners to the
evaluate the fitness of the individual
select all selected ancestors
builds the populations of the chromosome
mutates the individuals
returns the best individual for the best fit
returns the population
add a generation to the list of listeners
removes the listener from the list of listeners
notify listeners about generation of
returns the number of invocations of the
creates a random individual
calculates the fitness value of the specified tour
creates a new city
returns the of the given directory
called when the card is inserted
notifies the listener that a card has been removed
installs a applet
this method is used to register the applet info object
checks if a given exists
returns the info object for the given applet
handles the given credentials
insert an order
returns the next id
base tarifaria
sets the icon x
sets the image width
sets the image height
sets the icon y
sets the small image width
sets the html text
called when the is changed
sets the height of the small image height
sets the main label of the main frame
pushes a label onto the stack
pop the label from the top of the stack
sets the icon width
set the focus time
sets the alpha component of this graphics
sets the time in milliseconds
sets the icon height
sets the element number
sets the area height
sets the area width
sets the visibility of the image shadow visible
sets the image type
sets the flag that controls whether or not the time of the
sets the shadow visibility
sets the shadow bounds of the image
sets whether the root actions should be enabled
sets the x coordinate of the image to be drawn
sets the image bounds
sets the small image
sets the big image to be used for the image
sets the focus time
sets the image coordinate y
set the time in milliseconds
adds a new action to the list of launch actions
sets the width of the image
sets the height of the image to be used for the image
sets the background image
sets the title visible
sets the title label x x
sets the main label
sets the title label y
sets the title width
sets the title label height
sets the flag that controls whether or not the
sets the description label width
this method is used to compute the of the animation
sets the image type
sets the animation
sets the title foreground color
sets the start time
setter for property title label html text
sets the focus time in the given focus time
sets the time of the mouse in the canvas
sets whether the image is visible or not
closes the underlying stream
executes the command
write a portion of an array of characters
writes a single character
writes a string to the output
this method is used to execute the sql
this method is used to deliver the message to the
write a portion of a string
this method is used to execute the command
returns the database info object
returns whether or not the spinner is showing
this method is used to execute the database
this method is used to execute the sql
description of the method
this method is used to execute the sql
this method is used to execute the sql
execute the command
this method is used to display the table
execute the command
this method is called to execute the command
this method is used to execute the database
show the data in the window
this method is used to execute the sql
this method is used to execute the action
this method is used to execute the action
executes the given sql statement
this method is used to deliver the message to the
this method is used to execute the sql
executes the command
this method is used to deliver the message to the
this method is used to create the tables
this method is used to execute the sql
execute the command
execute the command
returns the url
this method is used to execute the command
returns whether or not the spinner is showing
writes a single character
returns the jdbc driver class name
show the connection
returns a string representation of the current
get the dao instance
sets the name of the
sets the intro
formats a time stamp
sets the url
sets the resource bundle
returns the input string
returns the url
sets the driver bundle
set the dao for communication with the data layer
returns the driver
returns a string representation of this object
returns the default resource bundle
adds a user to the list
sets the choices
returns the list of choices
returns the character at the specified index
returns the length of the contents of this buffer
returns the number of users in the database
returns a new character sequence representing the subsequence of this
returns a string representation of this object
returns the user properties
returns the input string
reads the next byte of data from the input stream
sets the default choice
returns the name of the database connection
returns the default choice
initialize the application
sets whether or not the cancel button should be shown
returns whether the cancel button should be shown
load the resource bundle
load the commands from the given file
setup the application
this method initializes console console
returns the columns of the given columns
returns a list of all columns of the given table
prints the contents of the line to the output stream
prints the given string followed by the line
print the string
erases the given count
starts the spinner
returns the connection to the database
this method is called when the user selects the spinner
sets the echo flag
sets the output stream
resets the out value to zero
sets the input stream to the specified stream
starts the loop
stop the loop
sets whether the commit mode is automatically
this method is called when the user selects the first element in
returns the auto commit mode
set the raw mode
returns the value of the field raw mode flag
returns a string containing the sql statement that
returns a string representation of this object
returns a string representation of this object
sets the root directory of the project
fetch the current session from the specified url
make full width of the full width
make full width of full width
fetch a page from the specified url
fetch a page from the specified url
sets the flag that controls whether or not the
returns the start of the
returns the id of the event handler provider
returns the provider
returns the name of the peer
returns the id of the xid
gets the event disposition for the given event
gets the disposition of the event
returns the provider
puts the value into the map
returns the address capabilities
returns the capabilities of the scape
returns the terminal connection capabilities
get the terminal controller
this method initializes update list panel
this method initializes update table scroll pane
check if the server configuration is valid
called when the process is processed
called when the component has been done
returns the new design
returns the new language
checks if the database is new update
sets the update criteria
sets the new version
indicates whether the update of the update of the database is updated
returns the name of the file that is being inserted
returns the file name of the updater file
sets the new updater file name
sets the
undeploy the directory
returns the base of the given path
returns the configuration file for the given path
show the server
returns the server configure server
returns the language resource
updates the status panel
returns the to the server
returns the start button
returns the server stop button
this method initializes memory panel
this method initializes connections panel
this method initializes reset button panel
this method initializes reset button
this method initializes refresh button panel
this method initializes refresh button
stop the server
this method returns the string representation of the receiver
returns a string representation of this object
this method initializes web application application
copy the contents of this input stream to the output stream
reads a string from the input stream
returns the resource as an input stream
this method initializes web application scroll pane
returns the resource as stream
this method initializes database table scroll pane
returns the configure server flag
returns the server identifier
returns the server type
returns the version of the application
sets the configure server
adds a filetype dot extension to filter against
gets the complete value for this code code
returns the destination folder
gets the delete attribute of the object
returns the source zip file
gets the update file delete update dir
returns the current state
sets the state
returns the error state
initializes the update extractor
sets the error state
initializes the update file
returns whether the is used to generate the
perform the proxy
this method is called after the file has been read
creates a new destination folder
returns whether proxies are used
sets whether proxies are used
returns the host host
sets the proxy host
checks the content of the extracted file
sets the value of the proxy port property
gets the value of the proxy user name property
sets the name of the proxy user to use for the proxy
returns the proxy user password
sets the proxy user password
is substance
this method initializes update list panel
returns a object
returns true if the dialog is ok
this method initializes update table scroll pane
sets whether the user pressed the ok button
returns the
create a new document
loads the file
returns the xml representation of the
returns the description of the given locale
returns the updates
sets the xinclude property b include b by
sets the exclude
returns true if the requested request is a requested request
returns the type of this event
returns the current version
returns the delete delete update delete
gets the value of the use extractor property
returns the type of this code gl20 resource part code
sets the type of this object
returns the new version
sets whether to use the extractor constructor
sets the source zip file
sets the destination folder
gets the delete update dir
returns the updates
sets the value of the updates property
create an instance of
create an instance of
returns the allowed old old old
creates a description of this class
create an instance of
create an instance of
sets the is requested
create an instance of
sets the current version of the current version
gets the value of the complete property complete property
gets the value of the size property
returns true if the version is available
sets the value of the complete property
sets the value of the size property
gets the value of the delete property
returns true if the manager is installed
sets the value of the delete property
gets the value of the date property
returns the server identifier
sets the value of the server identifier property
sets the value of the date property
returns the value of the configure server property
sets the value of the configure server property
returns the server type
sets the value of the server type property
sets the value of the filename property
returns the new version
sets the value of the new version property
returns the allowed old old old
sets the value of the allowed old old property
sets the value of the delete update dir property
sets the value of the use extractor property
sets the list of users to the database
returns true if only new values should be shown only when creating
returns whether or not the new panel is updates
get the user table model
sets whether to show only new only when new data is updated
returns the new use proxy proxy attribute
this method initializes table list panel
sets whether proxies are used
this method initializes refresh button panel
returns the new proxy host host
this method initializes refresh button
sets the new proxy host host
returns a object
returns the new proxy port
adds a new observation to the current state
adds a new entry to the sessions list
this method initializes j application table
sets the new proxy port
adds a new time series session to the session
adds a new session counter to the session
returns the name of the proxy user
adds an observation to the total time
adds an observation to the free cache
adds an observation to the list of requests
sets the new proxy user name
adds an observation to the list of errors
adds the total requests to the current time
returns the new proxy user password
adds a number of bytes to the buffer
adds a new packet to the packet
sets the new proxy user password
sets the server
sets the text resource
gets the selected role list
sets the tomcat settings panel
sets the add edit user dialog
returns the selected group list
sets the tomcat manager
returns the selected group list model
set the web overview panel
sets the server
returns the selected role list
sets the value of the tomcat users panel property
returns the color used to draw the
returns the group list model
returns the role list model
sets the data
this method initializes tomcat chart panel
adds a new group to the group
adds a role to the list
removes a role from the list
removes all roles from the list
remove a tomcat group from the group
removes all groups
set the data
this method initializes tomcat traffic chart panel
returns the value of the code create user code property
sets the user
this method initializes tomcat request chart server
sets the groups hash map
set the user roles
sets the group list
sets the value of role list
constructs a code string code with all attributes
remove the connector
this method initializes reset button
add a new ssl connector to the socket
returns the shutdown port
returns the new shutdown port
sets the new shutdown port
returns the referenced element
constructs a code string code with all attributes
returns the new port
sets the new port number
returns the original document base
returns the new protocol
sets the new protocol
returns the file that is used to create the keystore
returns the new redirect port
sets the new keystore file
sets the new redirect port
constructs a code string code with all attributes
returns the new keystore pass
returns the scheme for this
sets the new keystore pass
sets the new scheme
returns the new keystore type
sets whether the connection is a new secure
sets the new keystore type
returns the new ssl protocol
sets the ssl protocol used to create the ssl protocol
returns the redirect port
returns the file that is used to store the file
returns the keystore pass
returns true if this entry is secure
returns the keystore type
returns the initial heap size
returns the ssl protocol
returns the maximum heap size
returns the new client auth flag
returns the initial heap size
returns the new port
returns the new max heap size
sets the new client authentication
returns the value of the protocol property
returns true if the client is currently being used
returns true if the port is a new redirect port
returns true if ssl is enabled
returns whether the scheme is a new scheme
sets the ssl enabled state
returns true if the user is allowed to connect to the server
returns true if ssl is enabled
returns the new ssl protocol
returns the user manager
returns whether the keystore is able to create a new keystore file
create a host connection
returns true if the keystore is allowed to create the keystore pass
create a connector connector
returns whether the keystore is able to create a new keystore
create a connection to the server
creates a host
remove a host from the server
remove a connector from the connector
remove a connection from the context
returns the root context
saves the database to the database
removes a host from the host
closes the database
saves the data to the server
returns the root context
sets the
returns the root path of the root connector
returns the server directory
returns true if ssl is enabled
get the ssl connector for the given service
get the ssl socket for the given service
get the ssl service port
show the given database dialog
returns the time in milliseconds
returns a object
sets the background color of the file
returns the text in the
returns the database user database
activates the progress bar
gets the value of the property
this method is called when the progress bar is cancelled
returns a object
this method will remove the directory from the working directory
returns the configuration
returns the config file
sets the list of databases
sets the list of users to the database
switches the user to the online state
switches the database to the current state
switches the user to the online state
switches the user thought to the new status
returns the database user database user
returns a object
sets the background color of the file
returns the text in the
sets the server dir
imports the database into the database
imports the current database into the database
imports the current into the
returns the
returns the grp button group
sets the create database dialog
sets the export database dialog
sets the database manager
get the directory where the directory is selected
this method initializes j
sets the database panel
this method initializes j
sets the my foreign server
sets the my foreign key panel
sets the server
sets the
sets the my my extern server manager
this method initializes j
set the import database dialog
sets the server to the server
sets the my my foreign
sets my my users panel to the given value
this method initializes reset button
returns the https connector
sets the data
returns the selected service
returns the sql file to use for the sql
sets the sql file to use for the sql
returns the delete existing database
sets the delete existing database
returns the create new database
sets the create new database
sets the list of database tables
returns whether the import is in
sets whether the import should be imported
constructs a code string code with all attributes
sets the number of connections that are currently aborted
returns the sql file directory
sets the sql file directory
sets the bytes received value for this remote tracker
returns the sql file name
sets the bytes sent
sets the sql file name
set the connections connection pool
constructs a code string code with all attributes
sets the max used connections
sets the opened tables
sets the open files
sets the open streams
sets the open tables
sets the name of the user
sets the number of threads to be cached
sets the number of threads that will be used for the
sets the number of threads that will be created
sets the number of threads running in the pool
returns the old host
creates a user if the database doesnt exist
returns the properties file properties
check the server configuration and the server configuration
sets the new port
returns the configuration
get the port number
sets the flag indicating whether the log file is a log general
returns the log config
returns the
returns the log file name for the current log file
sets whether or not the log error is logged in
returns the log error
returns the log error file
sets whether or not the log should be
returns the slow queries
returns the
returns the log4j file name
returns true if the server configuration is a new server configuration
returns the
get the select my sql select
returns the mode of the service
saves the configuration file
creates a new working config file
returns the config directory
sets the
sets the server version
sets the location of the city
gets the country
sets the country
sets the email
gets the organization
sets the organization
gets the organization unit
sets the organization unit
sets the password
sets the state
sets the alias name
returns the lifetime of the agent
sets the time of the server
returns the unit
sets the unit to which this unit belongs
returns the keystore file
sets the keystore file
returns the path to the keystore
sets the keystore path
sets the location of the city
sets the keystore type
sets the country codes
sets the organization unit
decrypts a byte array
sets the lifetime
sets the unit to which this unit belongs
gets the value of the property
returns the
returns the first start
sets the first start
returns the frame
returns the linked button
sets the install
returns the frame that this frame is being used
returns the exception that caused this exception
constructs a code string code with all the properties
adds a exception to the list
returns the length of the list
returns true if the queue is empty
sets the text area of the text area
sets the icon for the head text area icon
adds the given button to the left bottom right of the button
adds the given button to the left bottom left button panel
returns the text resource
returns the delete folder
sets the value of the delete folder property
this method initializes update list panel
this method initializes update table scroll pane
this method initializes table list panel
this method initializes refresh button
this method initializes users table
this method initializes users scroll pane
sets the users
adds an observation to the queue
adds an observation to the list of errors
adds a new total requests observation observation to the current time
adds a new number of bytes sent to the server
adds a new packet to the packet
this method initializes reset button
saves the database to the database
closes the database
saves the configuration file
creates a new working configuration file
returns the design of the design
returns the description of the given locale
this method initializes update list panel
get the time
returns the size of the content buffer
get the message sent by the server
returns the absolute path of the file
returns the size of the content
add a new to the list
format a date
formats a string into a string
appends all columns of the given columns to this group
executes the sql statement
insert the methods description here
returns the value of nullable
adds a where like a to the
moves the cursor to the next row
sets the sequence name
sets the foreign key attribute of the object
sets the foreign table
close the connection
adds a where condition to the list of the where condition
add a where condition to the given condition
returns the query string
p gets the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
gets the value of the designated column in the current row
gets the double value at the given column index in the
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value stored in the designated column
retrieves the value stored in the designated column in the current row
retrieves the value stored in the designated column
retrieves the value stored in the designated column
retrieves the value stored in the designated column
retrieves the value stored in the designated column
retrieves the value of the designated column in the current row
retrieves the value stored in the designated column
retrieves the value stored in the designated column
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the first warning reported by calls on this
retrieves the number types and properties of the result set
gets the value of the designated column in the current row
retrieves the value of the designated column in the current row in
maps the given code column name code to the current row index
retrieves the value of the designated column in the current row
retrieves the value stored in the designated column
indicates whether the cursor is on the last row of
moves the cursor to the end of the database
moves the cursor to the last row in
retrieves the row attribute of this column object
moves the cursor to the given row number in
moves the cursor a relative number of rows
implements method in interface java
sets the fetch direction
retrieves the fetch direction
retrieves the fetch size of this
retrieves the type of this code row set code object
updates the designated column with a null value
updates the designated column with a code java
sets the designated column in either the current row or the insert
sets the designated column in either the current row or the insert
updates the designated column with a code java
updates the designated column with a code long code value
updates the designated column with a code float code value
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code java
implements method in interface java
updates the designated column with a code date code value
updates the designated column with a code java
sets the designated column in either the current row or the insert
updates the designated column with a null value
updates the designated column with a code true code value
updates the designated column with a code java
updates the designated column with a code short code value
updates the designated column with a code java
updates the designated column with a code long code value
updates the designated column with a code float code value
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code date code value
updates the designated column with a code java
updates the designated column with an object value
inserts the contents of the code row code at code
deletes the current row from the database
cancels the update of the row updates the database
returns the statement that is used to get the data
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row of
retrieves the value of the designated column in the
retrieves the value of the designated column in the current row
retrieves the value of the designated column in this
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in this
retrieves the value of the designated column in the current row
retrieves the value designated
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
returns the url at the given location
retrieves the designated columns database
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code result code object
updates the designated column with a code blob code value
updates the designated column with a code null code value
updates the designated column with a code java
updates the designated column with a code java
initializes the toolbar
returns the current record as a tab
creates the pages of the multi page editor
saves the multi page editors document
saves the editors multi page editor
this method is called when the page changes
plant monster press at mob
add a new bot to the group
test method for
test method for
test expand and modal mode
test expand and repeated
test expand west down
tests the expand prefix method
tests the expand method
test expand west
test expand expand collapse
test expand and names
helper method that takes a string and a value to be
test method for
test method for
test method for
helper method that takes a string and a value to be
test method for
test method for
test method for
test method for
test method for
test method for
helper method that takes a string and a value to be
test method for
tests the is valid name method
test method for
test method for
test method for
test equals method
test that parsing a string with a null value
test method for
tests parsing of an error syntax
test of equals method
test method for
test match match
test the pattern
asserts that the given string matches the given string
tests the expand method
method to create a string literal
test method for
tests the expand method
test method for
test of resolve method of class uriresolver
test method for
test of match single method of class
test that the equals method distinguishes all fields
test that the match method works properly
test the resolve typed int int method
tests that the token is a variable
tests the expand method
test that the match typed method matches the
test of match method of class
test of match wildcard method of class nl
test that the match path parameter is a valid path
tests the expand method
test the resolve string method
tests the expand method
test the resolve variable
tests the expand method
returns the uri of the uri
find a given extern item
test the method
creates a token
find the best match matching rule
tests the expand method
returns the variable
resolve a variable
test the resolve method
tests the expand method
returns the pattern
puts an object into the cache
test the resolve method
set the status
tests the expand method
tests the expand method
test the resolve operator path
tests the expand method
test the resolve method
return the form form
expands the root of the node
test the resolve method
tests the expand method
returns the operator of this operator
test the resolve method
returns the default value of the property
returns the argument of the command
test the resolve method
returns the type of the variable
returns a resolver that resolves variables
binds a code code to the given name
binds a name to a name
returns the values for the parameter
binds a type to the given type
returns the resolver associated with the given name and type
returns the resolver associated with the given name
returns the resolver for the given type
matches the pattern against the uri pattern
returns the character used to identify this
returns the pattern
returns true if the name is bound
returns true if the given type is bound to a
returns the score of the score
expands the node
computes the pattern for the given tokens
computes the score for the given
returns the next character in the code text code
returns a list of all the attributes of the given property
normalize the current instance
returns the tree that is the tree
test of method of class plsql lexer
returns the index of the first child of the specified level
get the first child of the node
returns the root node of the tree
returns the node with the given index
creates the connection to the database
returns the millisecond value
sets the millisecond value for this candle
returns the date
closes the connection
returns the property value
returns an enumeration of all the properties in the current set
tests the post interface
test the login method
test of remove method of class conexion database
test method for
test method for
test method for geo report report
test user cleanup
plays the pitch at the specified time pitch
initializes the sound
returns the length of the
tests that the text search works correctly
tests that the text page is full
returns the root of the tree
returns the top item
enables disables the levels of the layer
sets the number of trials
sets the block num
this method is called to convert a point to a screen point
returns the sum of all values in array
the circle
update the of the
draws the component
draws a shadow text
set the volume of the sound
sets the volume
sets a sample at the specified index
sets the sample at the specified index to the specified sound
returns the angle at the specified position
the sample using the sample
the sample by the given length
a sample from the sample
plays a from the
the sample from the specified
stops all sounds
returns the duration of the specified sample
compute the buffer
calculates the relative change point change
plays the end of the selected resources
returns the zone zone number of the given coordinates
resets the sound
plays a number of the current song
plays a stimulus
returns the current experiment mode
returns the zone index for the given index
returns the item of the given item
returns the index of the given position in the
handle the zone
returns the start of the
adds a new to the queue
returns the average speed in the queue
returns the sum of the ints of the array of ints
this method is called to convert a point to screen coordinates
pads pad corner with a given pad point
converts a point to a center point
returns the coordinates of the given coordinates
called when the user releases the mouse button
plays the number of positions
returns the name of the module
this is the entry point method
this method initializes this
this method initializes j split pane
changes the current preferences to the given preferences
returns the preferences node
returns the preferences node for the given name
returns the install directory name
returns the directory to install the preferences
returns the version node of the given preferences node
returns the version node of the given version
returns the current state of the given node
returns the name of the first file in the preferences
close the splash screen
exports the preferences to a file
imports the preferences into a file
reset the preferences to the given preferences
resets the preferences to their defaults
build the package
changes the state of the
key pressed
this method is called to cancel the extraction
returns the of the license
returns the board
resolve an entity
draws the image
handles a warning
handles errors thrown by the parser
returns the of the license
handles fatal errors
sets the welcome msg
sets the package name
sets the zip path
sets the logo path
sets the output directory path
the action table
set the run application str
sets the path
sets the license path
returns the package name
returns the zip path

returns the logo path
returns the path to the output directory
returns the run application str
returns the path
returns the license path
converts a string to a standard font
the
returns the
starts the thread
runs the extraction
all the files in the zip file
sets the indentation tabs
returns the number of tabs in the text area
the bug
indents the current line
this method is called when the message is about to be sent
sets the paragraph indent
runs the application
sets the current paragraph indent
sets the reset flag
sets the prefix
returns true if the cursor is leading to the current tab
set whether to treat as a non interactive
returns the path to the file
returns whether or not the interactive interactive is interactive
returns the filename of the file
returns the dir
sets the state of the
returns whether or not the should be automatically generated
set the file name
description of the method
sets the text of the undo menu
sets whether or not the tabs should be automatically indented
returns true if the file exists
undoes the last operation
apply the document settings to the document settings
returns true if the text is empty
returns the text of the document
replaces all occurrences of the text in the text
this method is called when the editor kit is being used
creates a new editor kit
creates a new editor kit
creates the action table
saves the state of the editor
restores the state of the editor
sets the tab size
sets whether the next style should be ignored or not
returns whether or not the next style should be ignored
returns the master copy
returns the image
sets the string to be used for the
set the image to be displayed
adds an image mouse click on the image to the image
sets the int var to the given value
adds an image mouse over image
adds an image to the list
sets the boolean value of the sif element
returns the image buffer of the image
set the value of the image
returns the string representation of the current
returns the current value of the receiver
returns the current value of the receiver
returns the int value of the
returns the value of the boolean property
sets the action
sets the target
sets the period in seconds
returns the x coordinate of the second point
sets the caption of the border
this method is used to set the hints for the
returns the y coordinate of the y coordinate
returns the
returns an enumeration of all neighbors
sets the life of the
returns the color of the given node
returns the maximum number of life parties that the life of the
gets the age of the
sets the
returns the top left corner of the area
runs the program
sets the board size
sets the value of the grid
sets the board col of the board
set the rotation degree of the rotation
returns the bottom
set the board col
sets the board row
returns the left hand side of the
returns the rotation of the rotation
sets the offset
returns the right hand side of the
set the x coordinate of the x coordinate
returns the
set the y coordinate of the y coordinate
sets the grid space
sets the hint
sets the image to display
sets the visibility of this edge
gathers the list of gather elements in the given vector
this is the method that is called when the component is added
returns the length of the
adds an image to the image
gathers all widgets of the
starts the render engine
adds an image to the image
checks if the given node is a region
this method is called when the thread is about to be started
sets the render panel
sets the mouse to be displayed
runs the thread
adds an image to the image
sets the text
adds a text to the text area
check if the mouse is over a mouse event
handles mouse click events
returns the state of the
sets the x coordinate of the x coordinate
adds a widget to the panel
sets the font color
adds the specified code code to the code
sets the background color
sets the y coordinate of the point
adds a new text box to the end of the text box
scroll to the given mouse event
invoked when the mouse enters a component
adds a sprite to the queue
sets the state of the cursor
sets the visibility of this frame
invoked when the mouse exits a component
set the period of the period
tick method to be called after the next time the timer is
sets the not over flag
called when the screen is changed
returns an code enumeration code of sprites in the list
returns an enumeration of objects in the list
invoked when the mouse cursor has been moved onto the mouse
sets the pressed property
returns an enumeration of the hints
returns the texts of texts
clears the list of objects
transform the current transform from a buffered image
clears the hints
clears the texts
sets the action attribute of the object
clears all the values in the list
the of the
sets the target of the target
the screen
sets the action string
sets the action int
removes the given hint from the list of hint
incrementally the
sets the action boolean to true
returns the x coordinate of the x axis
returns the y coordinate of the y axis
sets the x axis x coordinate
set the y axis
sets the
sets the x coordinate of the
returns the action that is associated with this action
returns the master copy
returns the angle
set the angle of the needle
this method initializes j menu bar
this method initializes j menu file
this method initializes j menu item evaluate
this method initializes j menu item exit
this method initializes j menu item new
this method initializes j menu item open
this method initializes j menu item save
this method initializes j menu item save as
returns the split pane
paint the view
process the http servlet request
process the http servlet request
peforms the processing of the category
sets the price
returns true if the is
sets the
returns true if the is
returns true if the is
sets the value of the pay pal field
sets the
returns the
auto generated getter method
sets the
sets the revenue source
gets the value of the property
sets the
sets the coupon
calculates the subtotal
creates a membership object for a given customer
sets the rs type
create an purchase order
creates a payment object
creates a new payment object
returns the date of the last time started
sets the date when the has been started
returns the date completed
sets the date completed
sets the hours
returns the date picked up
sets the date picked up
sets the customer emergency customer
checks if the given password is valid
set the membership
sets the amount
returns true if the is
returns the membership membership
create a new transaction
returns the customer
creates a new repair object
creates a new product object
create rental return a rental object
saves the given connection to the database
sets the change attribute of the object
inserts a revenue source to the database
sets the type of this object
creates a new object
returns the name of the
reads a product object from the database
sets the m m m m m m m m m m
sets the source type
sets the caption of this persona
sets the amount
sets the cc number
sets the filename
saves an object in a product
gets the credit card expiration
sets the credit card expiration
insert a product into the database
sets the date
creates a new store
creates a new rental object
sets the vendor
read a record from database
sets the order lines
sets the filesize
add a new order line to this order line
saves the given connection to the database
update the product
inserts a revenue source to the database
updates the given record
checks if a connection exists
set the store
creates a new photo set object
creates a new interest bo object
sets the product
sets the product type
sets the price
returns the price of the
set the total price for this
returns the conversion type
set the conversion type
returns the
sets the
gets the value of the property
sets the
sets the
returns the
returns the date rented out
sets the
sets the date rented out
gets the date when the date is due
sets the name of the bo
sets the date due to the date of the
sets the description of the
set the
sets the average cost
set the
set the contact
sets the tx line
adds a tx line to the transaction
returns the order of the purchase order
sets the order
sets the payment object
set the total price of the photo
creates a new transaction
sets the photo set
returns the print format
sets the print format
sets the
main method for the main method
creates a new product object
creates rental object
saves the given connection to the database
inserts a new record into the database
updates the given record
returns the length of the length of the backup
sets the length of the length of the length of the backup
read a from the database
sets the cost of this cloudlet
gets the late value for this
inserts a new product into the database
inserts a revenue source to the database
creates a new object
sets the late value for this
returns the
updates the data from the database
sets the
create a new object
updates the product with the given product
returns the
sets the
creates a new print format object
checks if a connection exists
calculates the subtotal of this transaction
create a new format for the given id
calculates the tax for this category
this method will add the to the list of
calculates the total of the tax
theres no need for two creates because we dont need
returns the original
returns the number of photos in the database
sets the number of photos that this album is allowed to
returns the dirty flag
sets the value of the code orig code
gets the ss number
get the print format for the given format
sets the value of the ss
this method is used to create the employee bo
sets the title of this object
sets the date
sets the value of the flag
returns the purchase order
create a new transaction
sets the purchase order
set the salary
sets the product
creates a new rental business object
reads a record from the database
inserts a revenue source to the database
updates the connection to a new record
gets the newsletter value for this subscription
sets the newsletter status
returns the total amount of transactions in the portfolio
creates a new category
sets the
returns the interests
creates a new rental object
sets the interests
inserts a revenue source to the database
creates a new purchase order
sets the customer
returns the backup exp date
sets the backup exp date
sets the last updated time
gets the membership
sets the membership
replaces the current word in the dictionary
adds a dictionary to the dictionary
compares the specified object with this code code
adds a word to the dictionary
saves the properties to a file
adds a word to the list of ignored words
build the dictionary database
adds a word to the dictionary
returns a list of all words that are stored in the given
checks if the given word is a correct word
returns suggestions for a given word
returns the suggestions for a word
stop the dictionary
reset the spell checker
loads the index file
remove a family from the database
set the list of families
prints the given debug message to the console
lookup the name of the other
switch the solver to the given one
returns the highest fitness value
sets the space between the space and the
moves the figure to the figure
reads the figures from storable input
moves the figure to the given figures
reads a string from the stream
writes a string to the output stream
creates and returns a new font object
returns an enumeration of the handles of this object
creates a new drawing
returns the number of actions that can be dragged in the
draw the rectangle
activates the tool bar
returns an enumeration that handles the figures associated with this
returns the value of the given attribute
sets the value of the attribute
create the undo activity
create the south panel
creates a brand new connection
creates the color menu
creates the font menu
draws the figures
creates the west panel
populates the west panel with the given
factory method for creating a specialized tool
handles the mouse up event
adds a listener to the list of listeners
moves the figure to the
draws the
this method is invoked when the mouse is released
checks if the given figure is contained in this list
insert a vector of figures
called when the view is activated
deactivates the view
returns the drawing view
returns the editor editor
set the value of the named property
show the help dialog
handles the given palette button
initializes the panel
tests if the input stream is a valid token
reads a 32 bit integer from the input stream
create the attributes panel
invoked when an item has been selected or deselected by the user
invoked when an action occurs
creates the color choice
creates a new overlay
adds an code action listener code to this adapter
removes the specified listener from the list of listeners
returns the preferred size of the component
creates the font choice
create the button panel
returns the default value of the attribute with the given name
writes a string to the output stream
returns the value of the attribute with the given name
writes the storable
reads the figures from storable input
creates the tool palette palette
creates the tools palette
returns the box bounds
called when a figure has been removed
moves the selection to the given figures
draws the polygon
handles mouse down events
returns the handles in this figures handles
returns the value of the specified attribute
sets an attribute value
handles the mouse released event
returns the value of the specified attribute
draws the background
this method is called when the user selects the graphics framework
returns the number of columns in the table
returns the rows of the matrix
convert a string to uppercase
draws the whole drawing
returns the undo activity
draws the drawing
creates the application
disconnects the figure
checks if the minimum size is allowed to be resized
creates the color menu
shows the authentication dialog
send html to the output
creates the font size menu
puts a string into the parameter
puts a file into the content
returns the response code
sets the text to be displayed in the
puts a file into the content
returns the response message
writes the content of the form to the given output stream
gets the response data response data
writes the form data to a output stream
sets the list of actions to be displayed in the popup menu
called when the application exits
creates the font menu
creates the color menu
returns the version of the file
returns the drawing component
populates the west panel with the given reward
set the display update status to the display
cancel the connection
creates a new figure
show the help window
returns the authentication dialog
reads a string from the stream
creates the tool bar
returns the preferred size of the component
creates a command button
handles the user selection of the palette
handles the mouse over event
creates a new selection tool
draw the
returns the bounding box of the component
called when a figure has been removed
this method is used to convert the color to the
creates the drawing component
returns the property change listener
returns the setter method
adds a submenu to this menu
finds the connector that is connected to the given figure
sets the drawing editor to the given editor
factory method for instantiating the input map
creates the action map
returns an icon property
adds action to the menu
this method adds a separator to the list of available components
updates the view
updates the enabled state of the button
notify all listeners that a property change has been
updates the current value
polls the poll
starts polling polling process
stops the polling timer
returns true if the receiver has a fixed length
returns the length of the
returns true if this file supports the alter file
returns whether the underlying reader supports the
returns true if the is
returns true if this frame supports the compression
returns whether the encryption supports encryption
returns true if this frame supports the
adds a property change listener to the listener list
returns true if tag supports tag
removes a property change listener from the property change
returns true if tag is supported
returns a new frame specification for this object
returns true if the given type is supported
returns the value of the specified byte property
returns the type of the frame
returns the frame definition associated with the given type
returns the frame definition of the specified frame type
compares this object to the specified object
compares this object to the specified object
returns the spec data
sets the size of the tag
returns the spec
returns the id of the definition
returns an iterator over all properties
returns the number of properties in the basis of the
returns true if the given column is contained in this container
get the frame associated with the given type
returns the property at the specified index
returns true if the connection is read only
returns true if the is
returns true if encryption is enabled
returns whether compression should be compressed
returns whether or not the is used
sets the alter discard discard discard discard discard tag
set read only state
set the use compression flag
sets the property b b
compares this property to the specified object
converts this byte to a byte array
returns the frame
sets the frame
sets the value of the field
sets the value of the receiver
sets the value of the field
adds a new frame to the set of frames
remove a frame from the set of frames
removes the specified type from the list
removes all frames from the list
remove all frames from the frame
recalculates the size of the data group
returns the size of the content
returns the preferred size of the component
returns the size of the content of the content area
returns the size of the padding
returns the spec policy
returns the version of this file
returns the revision number
returns the version string
returns true if the specified frame is contained in the list
returns the number of frames in the frame
returns the number of frames in the specified type
returns the requested element
returns the value of the specified property type
returns the value of the specified property type
returns the value of the specified property type
returns an iterator of the frames in the timeline
gets the value of the experimental property
returns true if the is
returns true if the property is restricted
gets the value of the restrictions property
sets the policy spec for the policy
sets the preferred size of this component
sets the experimental value
writes the header to the specified output stream
returns the key at the given value
returns the error message
returns true if the has negative kerning
returns the min value of the queue
returns the maximum number of flow size
returns the min value of the queue
decreases the key value from the value of this map
returns true if the graph has a
returns the error message
replaces the value of the value in the specified key to the
returns the error message
returns whether negative weights are set
returns the error message
pushes the command onto the stack
applies the layout to the current position
clears the undo redo strategy
returns true if there is a undo action
returns true if the redo is at the bottom of the stack
adds a listener to the list of listeners
remove a listener
sets the graph presentation
sets the graph presentation
paints the border
mark edges as a graph
adds an edge to the graph
selects the given point in the polygon
selects the given rectangle in the current graph
returns true if the given point is in the list
marks a vertex presentation of the vertex
this method is called when the graph is selected
mark the vertices as a mark of all vertices
removes all edges from the graph
removes all edges from the graph
returns the edge with the given position
forces the vertices of vertices
returns the edge with the given point
sets the presentation graph presentation
returns true if the given point is in the end of the
returns true if the given point is in the start of the
returns a new command that is used to create a new
returns a new add edge command
returns a new edge end command
returns a new command that has been deleted
returns a new
returns a new code command code object that will be used to
sets the current tool
returns a new
returns the graph presentation
returns a new label command
returns a code command code to convert from a
returns a command to the command
returns a command to the controller
returns the selected tool
returns the add vertex tool
returns the tool that is used to create the tool
returns the selection tool
returns the maximum flow selection tool
returns the tool factory
returns the editing actions factory
returns the actions factory
returns true if the element is directed false otherwise
returns the actions factory
returns true if the type is a weighted one
adds a component to the container
removes a component from the container
adds a command to the command queue
called when the actions are done
set the state of the tool
paint the background
adds a listener to the list of listeners
returns the selected action
removes a listener from the list of listeners
adds a button to the button
returns the add vertex action
returns the action that will be used to add edges to the
returns the action for weighted the
returns the action to
returns the action that is currently in the
returns the action that is used to draw the circles
this method is called when the message is received
returns the discard highlighting action
notifies the that the given message was not already
returns the exit action
returns the top action for the top of the list
returns the action for the action
returns the min spanning tree action
returns the max flow action
returns the save as action
adds a listener to the list of listeners
removes the listener from the list of listeners
returns the center of the point
sets the center of the location
paints the oval
checks whether the point is inside the square
returns true if the given rectangular region is in the area
adds a listener to the list of listeners
removes a listener from the list of listeners
pauses the
resumes the target
returns the start point of the edge
paints the given menu
adds a vertex to the graph
removes the vertex from the graph
draws the line
adds an edge to the graph
remove an edge from the graph
returns true if the graph is connected to a given graph
validate the xml document
returns the preferred size of the graph
this method is called when the graph is loaded
returns the graph
parses the presentation
returns true if the graph is weighted by the
sets the weight of the edge
returns the graph
returns the graph presentation
returns the weight of the edge
saves the graph to the given graph
saves the graph presentation to the given graph presentation
returns the left side point of the edge
sets the current color to the given color
returns the destination vertex of the edge
returns the opposite vertex of the vertex
sets the color to the default value
adds a vertex to the graph
returns true if the point lies within the end of the object
returns true if the graph is connected to the graph
returns true if the given rectangular area is in the area
connects to the vertex source
adds a vertex to the graph
removes the vertex from the graph
returns true if the point is selected
checks if the vertex is in the graph
checks if a vertex is a vertex
test method for
returns the component type
returns the component key
returns the position of the current position
returns the component monitor for the method
returns the source of this event
returns the property key
returns the type of the parameter
returns the pooling
returns the object that contains the current component
returns the type of the object
returns the component that this component is being tracked
returns the container
returns the number of bean definitions in the database
returns the current state
returns a component with the specified object
returns the singleton instance
returns the singleton instance for the given pool and
returns a component factory for a given factory
returns the beans in the specified type
returns the component factory for the given factory
creates a new instance of a constructor
returns the value of the em key em key em
returns a component factory for the given string
returns the component factory
returns the component that is connected to this component
this method is used to create a component method
get a bean from the cache
bind the given
bind the component to the specified parameter
returns a component with the given arguments
p returns a component with the given property name
returns a component with a given property
returns a component with the properties of the properties
p creates a component with the given properties and returns it
bind the component to the given binder
returns the child of this node
returns the parent of this
bind a component to the component
registers a component to the component
unregisters the specified type from the list of registered components
unregister a component from the cache
returns the component associated with the given key
returns the component of the given type
returns the component with the given properties
returns the dependency dependency dependency of the given class
returns the component that is associated with the given type
verifies that the given code component code is a fake record
cast the component to a type
transforms the component to the specified component
returns the component to use for the given class
returns the component that is associated with this
returns the component that will be used to render the component
returns the key of the component
returns the source of this event
returns a component map for the given map
mutates the given mutation object
returns the component that is associated with this component
returns the method
returns the number of parameters
returns the parameters
returns a map of properties
returns the component type
register a constructor with the given class
returns the key
returns the object
convenience method to transform a component to a component
returns a component that will be used for the given property key
register a component to the constructor
register a constructor with the given class types
returns a property with the specified key
register a constructor with the given class
register a static method
returns the actual type of the actual actual type
returns the expected type of the class
returns the component that contains this component
register a static method
register a static method with the given name and class name
register a static method with the specified parameters
returns the parameter with the specified parameter
check the type of the element
returns the resource loader
returns the resource loader
returns the component that contains this component
p returns a default default property for this property
p returns a new component with the specified
get the constructor for the given parameter
returns the of this component
returns the value of the specified option
recover a from the
bind the given code component code to the code javax
bind the given code jcomponent code to the
scroll the window with the given code component code
returns the method for the given parameter
find the component with the given component as this
returns the service key for the service
returns the method with the given name and parameter types
find the given binder with the given
returns the component with this object
returns the
returns the field with the specified name
returns the of the object
returns the field with the specified name
returns the component that will be used to resolve the given
returns the component for the given arguments
returns the component that is used to draw the components
returns the component for the component
add a type to the list of properties
add a property to the list
begin user doc
returns the type of the class that this type1
returns the t2
returns the function
returns the position of the current position
returns the array object
returns a component for the method
returns the begin of the iteration
returns the set of set
return a field component field
simulates a value
synchronizes the component with the component
initialize the web application context
create a new loader
initializes the servlet
returns the loader
shut down the web application
destroy the servlet context
this method is called when the servlet request is received
returns the servlet context
returns the resource loader
returns the mutex object
gets the procedure
override to provide a code container code to
returns true if the queue is empty
returns the exception handler
returns the key
puts a key into the nob hash map
remove a key from the cache
returns true if the key is in the
returns the entry associated with the given key
returns a set of all the keys in this map
returns a collection of all entries in the collection
adds a live object to the history
makes a component for the given component
returns the set of instances that can be used to restore the
pushes an object onto the top of the stack
returns the stack trace of the current resolution
prints the trace of the current resolution
print the trace
prints the trace of the current resolution
clears the resolution trace
the specified procedure
sets the default lifecycle component
returns the default lifecycle component
a lifecycle transaction
a procedure
adds a to the
a lifecycle event
a lifecycle statement
start a new transaction
proc

this method is used to configure the default
a lifecycle method
sets the default code procedure code to use for a procedure
generate a default transaction for a transaction
sets the default value for the procedure
a lifecycle
a procedure
sets the procedure verifier for the given procedure
a lifecycle procedure descriptor
sets the procedure procedure
this method is used to remove the default
this method is called when the procedure is closed
injects the lifecycle descriptor
add an additional bean post processor to the form
this method is used to get the default lifecycle
returns the name of the ith component
returns the component post processor
returns the number of elements in this list
this method is used to remove the default
a lifecycle statement
returns the default lifecycle component
trigger a simple verification state
this method is used to get the default lifecycle
performs the transaction
returns the application context
returns a default code default code method for the given
manage the of the stateless bean
add a bean post processor to the component
continues the processing of the lifecycle
this method is used to set the procedure name
returns the processor queue
returns the post processor processor queue
find a default method
this method is used to create a component to be added to
returns the closer to the current phase
adds an object to the list
sets the closer to the given code phase code
gets the attribute of the object
returns the component that will be used to store the components
returns the property that is used to wrap the
sets the
sets the component to be used to draw the component
returns whether the is
returns whether this is a
gets the initializer attribute of the object
sets the value of initializer
gets the
returns true if the is
registers a value to the given value
sets the
gets the
sets the starter
returns the object id for the given object
add a new value to the given object
gets the
creates a new loop object
sets the
returns the current phase
returns the declaring class of this type
returns the no behavior of this component
sets the verifier
returns the mandatory binder
sets the key type for this field
this method is not supported
sets the type of the object
returns the type of the given class
returns the maximum number of arguments to be used
returns true if the property with the given key
returns the auto wire property
returns true if the bean is a bean
returns a component that will be used for the given component
get the property for the default mode
returns the parameter value of the parameter
returns the adder for the given name
get the adder method for the adder property
returns the adder type for the given name
returns true if the property is a valid properties
returns true if this is a collection
returns the evaluator
returns the property descriptors for the property map
decorate the given component
returns the descriptor for the given name
returns the setter method
returns whether the is defined
returns the class element type
returns the sequence number
returns the column number of the column
returns the line number of the line
returns the component id
returns the module id
returns the location of the tag
returns the evaluation sequence of the current evaluation
returns the declaration sequence of the declaration
setter for property seq
set the property
set the location of the tag
initialize the environment
returns the class loader for the current component
returns the classloader for the given class
this method is used to set the name of the tag
returns the environment
returns the parameter
returns the property
returns the singleton instance of the singleton
convert the given object to a target type
returns the dependency trace
prints the dependencies trace of the current file
prints the dependency of the current program
prints the dependency trace of the dependency trace
cast the component to a target
registers a single component to the specified component
raise an exception message to the current
raise an exception
checks if the value is valid
checks if the given value is duplicated in the
returns the parameter for the given parameter
returns the property for the given mode
returns true if the given type is a type
p private constructor for the given map
this method is called after the container is initialized
performs the pre map map
returns the map of the map
returns the lifecycle manager
returns the base directory
returns the class loader used to load the class loader
returns the resource loader
register a custom mode
register a custom mode
this method is not supported
returns the service associated with the given key
registers a service
unregister a service
returns a set of all services of the service

registers a key descriptor
method verification verification verification
returns the descriptor for the given key
remove a key from the list
creates a new instance of
registers a variable to the interpreter
returns the value of the variable specified by the given key
checks if the given variable exists
returns the runtime exception
removes a variable from the list
returns a set of all the keys in the cache
create a new processor
creates a new meta interpreter
verification dependency of the dependency
returns the component factory for the given factory
returns the component to be converted to the component
returns the child
returns the parent container
returns the dependency dependency dependency of the given class
bind the given code value code to this code
returns the components of the given code
returns the component that this is equivalent to
initializes the object
starts the thread
stops the timer
disposes the toolkit
returns the component that this component is in
sets the action to be used for the given action
set the lifecycle
get the lifecycle of the given instance
returns the lifecycle instance
set the lifecycle instance for the default
returns the constructor for the constructor
returns the field
returns a set of properties that are defined in this map
returns the property descriptor for the specified name
this method is not supported

method verification verification
creates a new instance of
ref
verification dependency
builds the classifier
returns the title of the tab
returns the tooltip for the tab in the explorer
sets the explorer
set the log
returns a string describing this classifier
returns the data set for the dataset
returns a string describing this classifier
returns a description of the file
sets the view
sets the display flag
set the url
create the title for the title
resets the counter to its initial state
returns the midpoint of the given vertex
returns the value of the element at the specified index
evaluates the given string and returns the result
returns the score of the player
read a line from the input stream
converts a to a string
this method is used to generate the query string
returns the number of question
extracts the given from the current cg
returns the current interpretation
sets the question
sets the score of the node
sets the extraction extraction
add a extraction technique to the list of extraction
sets the interpretation
sets the question string
sets the answers
returns a copy of this query
sets the value of interpretation
gets the question string
returns the current interpretation
returns the answer string
returns the support documentation for the document
gets the target
returns true if the noun phrase is a noun phrase
sets the target
sets the target types
sets the noun phrase
set the verb ci
returns true if the word contains the given word
compares two predicate
returns true if the word contains the given word
returns the md5 digest for the given string
writes a key to the cache
adds a word to the dictionary
waits for the thread to stop
returns true if the word contains the word
returns true if the token contains the token
sets all the strings of the array to the given string
checks if a word is already in the word
returns true if the given distance is already in the range
add a list of verb to the given list of verb
returns the maximum number of tokens allowed to
returns a copy of the annotator that contains the current file
returns a copy of the annotator that contains the current
matches the given query against the current pattern
returns the maximum number of results to be processed
runs the search
returns the content of the text
returns the maximum number of results per query
returns a copy of the annotator that contains the current file
returns a copy of this knowledge by the
returns the name of the
starts the query
start the query
returns a copy of the
returns a copy of this knowledge by the
returns a copy of this knowledge by the
returns a copy of the
compares two result scores and sort
compares two result objects
gets the answer
calculates the length of the target
returns the normalized score
sets the target
sets the context
drop the current context
compares two questions
returns a string representation of this object
gets the value of the property
replaces the variables of the ognl stack
returns whether the current is correct
sets the lemma
returns the predicate
format the object
sets the expansion state of the
returns the weight of the lemma
returns the sentence
returns a string representation of this object
returns true if the entity is a named entity
description of the method
sets the answer
increases the score for the score
sets the norm of the
initializes the
sets the
set the correct
sets the properties of this object
sets the
sets the terms
sets the predicate
initialize the class loader
sets the sentence
creates a new
add a ne to the list of
returns an instance of this with the given
prints features of the given question
returns a copy of the result of the answer
returns the extra score value for the given
creates a rule with the given element
returns the type of this exception
returns the current value of the given instance
initialize the current language
adds a group to the
replaces the target tag with the given string
replaces the tag context tags of the tag
sets the property
returns the value of the specified property
replaces all occurrences of a string with a duplicates
returns true if the property is set
checks if the expression is a regular expression
applies the action to the given result
compares two code r2 code
applies the action to the given result set
prints the message
compares two code r2 code
applies the to the given result
returns the hash code value for this
applies the action to the given result
applies the question to the question
compares two objects
compares two objects
applies the lookup to the result
calculate the biggest score for the given array of values
returns the number of correct characters
checks if the given has higher
returns the sum of all the values in the specified array
get the maximum value of the scores of the given
applies the action to the result
returns the wrong number of characters
returns the words of the result of applying the filter
calculate the sum of all the scores
returns the result of the filter
compute the total number of scores
returns the result of converting the result of the result of the
returns the confidence of the current value
waits for the document to drain
compute the total number of scores
returns the result of the filter
waits for pending messages to be sent to the server
increment the stats
increments the number of pending pending requests
adds a doc to the cache
increment the wrong number of bytes
increment the value of this counter by 1
starts the web
increment the value of this constant
decrements the value of this counter
decrements the value of this constant
a scalar value
checks if the given target string is a valid
this method is used to determine if the given target name is
extracts all the targets from the list
gets the maximum number of occurrences of the given counter
returns the sum of all the counters for the given counter
flushes the buffer
iterate through all elements of the root element
visits the element
returns the document id for the given document
parse a string and returns the result
this method initializes this
this method initializes j split pane
this method initializes this
this method initializes j panel
this method initializes j tabbed pane
this method initializes
this method initializes
this method initializes this
this method initializes j button
this method initializes j scroll pane
this method initializes j table
this method initializes j button
this method initializes j button1
this method initializes j button1
this method initializes j scroll pane1
this method initializes this
this method initializes j tabbed pane
this method initializes j button2
this method initializes j list
this method initializes j panel2
this method initializes j image pane
this method initializes j text field
this method initializes j text field1
this method initializes j tabbed pane
this method initializes j text field2
this method initializes j image pane
this method initializes j text field3
this method initializes j text field4
this method initializes j scroll pane2
this method initializes j text field5
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j button
this method initializes j button1
this method initializes j button2
this method initializes j button3
draws the light
returns the line type
returns true if the given is allowed to be
returns true if the given is allowed to be
returns the number of elements in this list
this method is responsible for determining if the product is match
shuffles this
returns a copy of this object
checks if the other power is a match
compares two power and compares the other
sets the extra flag
returns the extra flag
returns the number of in this
returns the bracket at the given index
sets the brackets
accept the visitor
parses the expression
sets the scripts of the jet script
reads the from the given message
reads the given message from the socket
adds a cube to the cache
returns the cube of the current cube
copy the values to the target
returns the
reads the message from the socket
checks if this board is solved
returns a new object with the given
returns the inverse of the given value
checks if the is consistent
handles incoming connections
returns true if the x value is na n
returns the value of the given code
returns the value of the second function
resets the current
this method runs the function
checks if the iteration count is not empty
computes the next position in the data store
check the position of the current position
returns true if the is
returns the number of iterations
returns the j
returns the j
returns the x value of the
returns the x value of the
returns the value of the
returns the referrer of the given referrer
returns the name of the given code
returns a list of reports
returns the first request
returns the last request
saves the current configuration
returns the report filename
adds a new settings to the settings
returns the settings for the given configuration
resolves the agent name
returns the domain of the host
returns the start date
resets the robots list to the next match
returns the start date string
returns the table model
returns the end date of the time
adds a log file to the log
returns the end date string
returns the unresolved host name
returns the description of the domain
adds an entry to the list
sets the title of the graph
returns the properties for the default legend properties
sets the labels of the graph
creates a new properties object
returns the number of rows in the model
returns the graph of the given graph
sets the unresolved host name
creates a new chart
sets the values of the dataset
sets the labels of the graph
returns the value at the specified row and column
returns the default colors properties
returns the image
sets the values of the dataset
returns the resolved host
return the user agent name for the given user agent
returns the maximum axis value
parses the entry and returns the result object
sets the resolved host
returns the date of the calendar
executes the test
sets the date time
starts the applet
exits the application
sets the date
returns the value of the named property as a string
returns the mnemonic for the given mnemonic
sets the time
displays a message to the user
returns the name of the given name
returns the value of the specified string as a string
shows a yes no error dialog
shows a yes yes yes no question yes yes no question yes
get the unresolved url
returns the string value of the field
sets the unresolved url
returns an integer value from the field
gets the resolved url
sets the resolved url
returns the description of the resource
returns the float value of the given field
returns the http version
set the http version
returns referrer of the referrer
returns the description of the resource
returns the hash code for this object
returns the account pending
gets the num of transactions of this
sets the num of transactions of this group
gets the account number
sets the account number
gets the value of the transfer account property
sets the account
sets the interval of the interval
sets the next apply
sets the transaction
gets the value of the property
returns the status of the status
sets the balance of the account
returns the transaction date
sets the transaction date
returns the account types
returns all accounts of the
returns the
sets the account types
sets the transactions
sets the
sets the all accounts
gets the value of the end balance property
gets the value of the balance property
sets the end balance
setter for property balance
gets the pending balance
sets the pending balance
sets the transaction date
setter of the property tt tt
returns the list of all categories
sets the all categories
returns true if the connection is connected
returns the url for the given url
returns the url for the given url
checks if the url is a directory
returns true if the given jar is a jar file
serializes a url into a file
lookup the bean
returns true if the component is visible
sets the source of the source
called when the surface has been created
creates the content of the document
returns the text of this text
returns the text of the paragraph
creates a new run
returns the part by its id
returns the alignment of the paragraph
returns the header footer
set the alignment of the paragraph
returns the text alignment for the text alignment
sets the vertical alignment of the text
creates a new paragraph
create a new table
sets the border around the top of the stack
creates a table with the specified number of rows and columns
returns the top border top border
gets the readonly protection property
returns whether or not the is stored
sets the border around the bottom of the border
returns true if the comments should be
returns true if protection is tracked by this
returns the bottom border of this border
sets the border left
reset the
enforces the comments for the comments
returns the left border
this method is called when the user changes the
sets the border right of the border
remove protection
returns the border right border
sets the border between borders
returns the border around the perimeter of the
sets the page break value
returns true if the page is a page
sets the spacing after the current page
returns the spacing after which the text is in the
sets the spacing after the lines of the
returns the spacing after the lines of the receiver
sets the spacing before the page
returns the spacing before the page
sets the spacing before the lines of the
sets the line pattern rule for this rule
returns the spacing between the activations of the line
sets the indentation of the current indentation
returns the left indentation of this unit
sets the indentation of the current indentation
returns the indentation of the indentation level
sets the indentation of this code output code
returns the first line in the line
sets the word wrap flag
returns true if the word wrap is wrapping it is a word
sets the style of the style
returns the style of the current style
returns a short description of the servlet
returns a short description of the servlet
sets the next body
returns whether or not the given header should be applied
registers a new handler for the current handler
sets the input stream to be used for the input stream
set the output stream to write to the output stream
called when the end of the entity has reached the end of
returns the web reader for the given port
perform the ith argument
sets the bean
set the property name
scale the
returns the smallest double value as a double precision floating point number
returns a new
advances the buffer
lets the user know that the text they entered is
lets the user know that the text they entered is
this method is called when the data is being removed
add a new document to the current list
moves the cursor to the previous position
insert the methods description here
returns the short name of the server info
description of the method
returns the number of server to use for the server to use
returns the server name
adds a server to the server
deletes a server entry from the server
returns the property value for the given key
sets the property
applies the changes to the properties
returns the database short name
returns the database name
this method initializes this
this method initializes bt
this method initializes bt cancelar
this method initializes txt login
this method initializes txt senha
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j scroll pane
this method initializes this
this method initializes txt matricula
this method initializes btn sair
this method initializes mb principal
this method initializes menu
this method initializes j combo box
this method initializes this
this method initializes txt nome
this method initializes mi cadastro
this method initializes txt descricao
this method initializes mi
this method initializes mi sair
this method initializes btn
this method initializes txt
this method initializes j combo box
this method initializes txt
this method initializes txt
this method initializes txt cidade
this method initializes txt numero
this method initializes txt
this method initializes j combo box1
this method initializes txt data inicio
this method initializes txt nome
this method initializes j table
this method initializes btn novo
this method initializes txt
this method initializes btn
this method initializes btn
this method initializes j text
this method initializes txt dia
this method initializes btn
this method initializes j combo box
this method initializes btn
this method initializes txt end
this method initializes txt
this method initializes txt cidade
this method initializes txt
this method initializes j text field
this method initializes txt dia
this method initializes btn
this method initializes btn limpar
this method initializes btn
this method initializes btn
this method initializes btn
this method initializes txt numero
this method initializes txt
this method initializes txt
this method initializes txt
this method initializes txt
this method initializes txt dir
this method initializes txt
this method initializes txt
this method initializes txt
this method initializes txt
this method initializes txt dir
this method initializes txt dir
this method initializes txt
this method initializes cb
writes the given file to a file
returns lyrics from a string
returns the value for the cell at code column index code and
get a connection from the database
starts playing the media
pauses the playback
stops the playing of the media
returns the duration of the video
returns the current position in the current position
returns the current position in milliseconds
set the current position of the media player
sets the current position of the media
returns the current loaded song
returns the number of channels in the audio format
returns the width of the specified
returns the height of the panel
returns the increment of the specified x coordinate
returns the length of the audio stream
adds a sentence to the sentences
saves the properties to the file
calculate the zoom constants
loads the song
updates the timer
returns the current position of the current position
sets the current position of the current position
goes to the previous screen
go forward to the next page
repaints the wave
resets the internal state to the default state
invoked when the components size changes
invoked when the mouse has been clicked on a component
this method initializes this
this method initializes nome bp
this method initializes j text field
this method initializes nome con
this method initializes
this method initializes check
this method initializes j text field
this method initializes j check box
adds an element to the list
returns the account with the given id
outputs the current state of the output
print the contents of the
find the department with the given index
process a result set
description of the method
deletes the dept
add a department to the database
this method initializes j frame
this method initializes j button
this method initializes j text field
this method initializes j text field1
this method initializes j text pane
this method initializes j button4
initialize the applet
sets the business service
handles requests from the servlet
create an instance of
create an instance of
handles a get readed callback
sets the alias for the password
description of the method
called when text is inserted into the document
called when the document is removed
called when the document has changed
description of the method
handles the changes of the text field
starts the game
stops the game
set the for this request
starts the sensor
stops the timer
this method is called when the is left
this method is called when the is pressed
set the to a new value
set the state to an value
this method is called when the move is pressed
this method is used to set the algorithm for the
starts the
this method is called when the
stops the timer
this method is called when the is pressed
set the to a new value
set the state to an value
this method is called when the move is pressed
starts the
stops the timer
starts the
set the value of the object left to left
stop the
this method is called when the user modifies the value of this
this method is used to set the value of the
starts the
this method is called when the is set
stop the
set the value to be executed when the user moves the agent
code set code method for the code code property
set the value to be the left right stick for the x
this method sets the shell right
set the to a new value
set the output point to the output
starts the
stop the
starts the
stops the sensor
starts the
stops the timer
starts the
stops the timer
starts the
stops the timer
the
the
all the

starts the
the of the initiative down
stops the timer
starts the game
stops the timer
starts the game
stops the timer
starts the
stops the
starts the
stops the timer
set the algorithm to the
starts the
stop the applet
starts the
stops the timer
set the right alg right to the right
the alg to be
the alg to be
the right block alg
this method is used to set the of the agent
set the right alg right to the right
set the alg to be used
the right block alg
set the left alg parameters
the block left
set the to combining the
set the to combining the
set the to combining the
starts the
set the to combining the
stop the
set the alg
set the
set the
adds an error message to the error
set the
set the
set the alg to be
set the algorithm
returns the source string
removes all attributes of the given node
returns the text of the file
returns the icon for this file
returns the result of the current test
close the open tag
returns the children of this node
returns the item for the given menu item
adds an error message to the error
delete an element from the list
puts a data object into the canvas
returns the value of the specified key
returns the type doc element of this type
returns the currently selected node
sets the element to be displayed in the element
set the color of the deselected color
sets the selected color
returns the preferred size dimensions for the specified
returns the color of deselected or deselected
returns the selected color
sets the selected state of this item
returns the deselected color of the node
adds a visibility to the list of visible children
this method adds a label to the current layer
sets the value to the value
sets the value of the property
this method initializes project frame
sets the to the value of the
sets up the data for the
starts the
set the to the new value
this method initializes j text field
this method initializes j text field
this method initializes browse import button
stops the
this method initializes browse export button
this method initializes import button
this method initializes j button
this method initializes j scroll pane
this method initializes project tree
this method initializes j tree
this method initializes j scroll pane
gets the path to the file path
this method initializes build button
this method initializes this
this method initializes j jmenu bar
this method initializes j menu item
this method initializes output pane
this method initializes main split pane
this method initializes xsl combo box
sets the value of the time period
returns the x offset of the x coordinate relative to the camera
returns the y offset of the y coordinate
return the static component of the given resource
check for updates and updates the list of updates
removes the from the table
refresh folder with the given location
creates the locations of the locations
paint the image
refreshes the table
refresh the combo box
paint the image
returns the download percent
sets the size of the
returns the date of the last time the worm
returns the last checked date
sets the date of the last date
sets the last updated date
sets the last checked of the message
returns the date of the last time the repair was last updated
returns the title of the
returns the directory location of the file
sets the title of
sets the location of the directory
sets the last date
returns the properties
load the properties from the specified input stream
loads the specified xml from a
sets the default prefix
writes the properties to the output stream
writes the properties to the output stream
returns whether the process is able to process other properties
writes the properties to the output stream
sets the environment factory
returns the properties of this
sets the list of prefix configs
sets the list of the names of the scopes
clears the cache
returns the configured prefix for the configured properties
returns the properties
sets the default prefix
returns the prefix delimiter
sets the prefixes for the given prefixes
sets the prefixes of the given list of prefixes
returns the boolean value for the given key
returns the boolean value associated with a key
returns the value of the specified key as a byte
returns the value associated with the given key or the
returns the prefix of the policy
returns the value as a double
returns the value associated with the given key as a double
returns the float value associated with the given key
returns the float value associated with the given key
returns the value as an int
returns the value as a long
returns the long value associated with a key
returns the prefix configuration that is associated with this
returns the value of the specified property
returns the value associated with the given key
writes a json object to the output stream
write the content of the xml stream to the output stream
removes a property
sets the configured prefix for the configured
sets the prefix to use for the given prefix
set the prefix to use for writing to the current file
stores the properties to a given output stream
writes the to the given output stream
returns the complete properties for the current set of properties
returns a string representation of this object
returns a hash code value for this object
get the bean configuration for the given bean name
parses the given byte array
parses the given input stream into a string
parses the given stream into an object stream
parses the given code reader code
reads the next character from the stream
adds a widget to the desktop
returns the component that is being displayed
sets the close on stop
returns the close event
sets the close event
executes the given task in the task queue
paint the component
paint the current selection
performs the actual operation
returns the maximum number of iterations
returns the maximum number of iterations
returns the iteration of the iteration
called when the state of the is updated
paint the current item
gets the terminate
binds a constant to the annotation
initialize the injector
binds a constant to the given annotation
returns the iteration of the iteration
notifies all listeners that the state of the task has changed
bind the given value to the given value
adds a menu item to the given menu bar
returns the permutations type
sets the type
returns the double type
sets the double type
returns the dispersion
sets the dispersion
returns the next random value in the range
returns the value of the code integer rate code property
sets the value of the rate rate property
returns the
sets the
returns the value of the boolean rate property
sets the boolean rate value for this weather parameters
returns the
sets the
returns the
gets the boolean type attribute of the object
sets the
sets the boolean type of this attribute
returns the
sets the
sets the rotation
sets the number of generations to be tested
returns a single individuals oimodel with the given code
binds the given to the given
returns the value of the individual
sets the final temperature
sets the initial temperature
returns the
sets the
calculates the delta of the slope of the given
returns the number of particles
sets the particles
randomizes the weights
returns the velocity of this physics object
sets the velocity
returns the best
gets the value of the best objective property
sets the best solution
update the population
update the best best best fitness
returns the tournament of the tournament
sets the tournament of the tournament
calculates the of the given
returns the type of this event
sets the type
binds the selector to the selector
normalizes the given objectives
calculates the fitness of the fitness
returns the second element
returns the lambda parameter
sets the lambda parameter
sets the mu
gets the value of the crossover rate type property
set the type of crossover rate
set the crossover rate
this method is called when the server is deserialized
this method is called when the server is deserialized
returns the value of the specified attribute
returns the first child node
returns the child with the given name
updates the population
returns the text content of this node
returns the configuration node with the given
sets the text content of this node
sets the attribute
returns the distance between two individuals
appends a new child element to the node
adds a child node given the given current node to the end
returns the document owning this node
adds a to the
writes the object to the given stream
saves the file to the file
saves the file to the file
write the document to the given output stream
writes the document to the given output stream
returns a string representation of the given module
returns a string representation of this object
calculates the distance between two points
add a module to the list
remove a module from the list
calculates fitness of fitness
executes the given collection of modules
returns the number of individuals in the collection
get the value of the property
set the value of the field
returns the type of the given type
returns true if the given class is assignable to the type
sets the value object for the given property
returns the module
sets the file to be read
loads the file chooser
saves the selected file to the file
loads the modules from the given file
saves the current file to disk
saves the current module to the given file
remove the module from the tab
returns the divider size of the divider
returns the name of the class
returns the information about the annotation
returns the tooltip for the given class
returns the icon for the given class
returns the name of the module
returns the tooltip for the given module
this method builds an icon from a folder
returns the name of the property
returns the table
returns the model of this table model
returns the tooltip string
returns the module for the given class
removes the categories from the tree
sets the state machine state
returns the decay rate for the
sets the decay decay value for this
returns the variance of the variance
sets the variance of the variable
add a new module to the module
returns the object for the
bind the given parameter to the given value
bind the given classifier to the given value
sets the rhs of the code rhs code
returns true if the given model is satisfied
returns the number of violation in the given model
returns the characteristic of the genotype
sets the boolean vector to the given value
returns the value of the genotype
sets the double vector
returns the variable
returns the phase of the phase
returns the negation of this literal
returns the coefficient of the coefficient
returns the value of the specified variable
returns the literal literal
sets the value of the specified var
make a copy of this term
sets the value of the instances attribute
returns the learning learning object
sets the learning learning object
gets the value of the property
sets the
returns the learn size of the
update the activity with the given value
sets the learn size
sets the value of the property
sets the value of the var var var
sets the activity of the specified rule
this method is called when the activity is about to be used
sets the phase of the specified variable
sets the value of a local variable
returns the activity of the specified variable
returns the phase of the specified variable
computes the h
set the bits in bits i
set the function to use for this function
sets the value of the field
returns the value of the given code double code
sets the k k k k k k k k k k
sets the l f value
sets the capacity of the monitored object
sets the value of the
sets the profit of the given item
returns the profit of the given item
sets the weight of the item
returns the weight of the item
sets the k value
returns the sum of all the items in the given collection
returns profit of the profit
returns the int value of the given line
returns the double value of the line
returns the i th square of the squares
returns the dimension of the dimension
sets the of the board
returns the decoder
set the decoder
sets the seed of the random number generator
sum of all squares
returns the value of the specified array
converts a double to a double
sets the encoding of the file
sets the function
validates the data
initializes the random
initializes the generator
returns the value at the specified index
initializes the random variables
returns the lower bound of the interval at the specified index
returns the upper bound of the index at the specified index
initialize the
returns the lower bound of the interval at the specified index
returns the upper bound of the index at the specified index
initialize the
initialize the random variables
returns true if the is
retrieves the objective with the given value
binds the optimizer to the optimizer
adds a value to the map
this method is called after the next step is finished
updates the individuals in the given individual
adds a new objective to the list
adds a value to the list
execute the search
adds all the values from the given code code to this
increments the next value
returns the maximum number of iterations
computes the distance between this
returns the object
gets the objectives
returns the genotype
sets the genotype of the
sets the phenotype
sets the objectives
returns true if this is a decoded stream
returns true if the current state is a
sets the state of the state machine
sets the value of the code individual status listeners code property
sets the capacity of the receiver
sets the number of
returns the cell at the given position
returns the most popular cell
checks if individuals are bounds
sets the type
returns the type of this object
sets the value of the using seed property
sets the bytes of this random number generator
returns the number of threads in this pool
sets the number of threads to be used
this method creates a new file
returns the evaluation step
sets the evaluation step
returns the iteration step
sets the iteration step
sets the logging per evaluation flag
sets the logging per iteration
returns the statistical information for the given timestep
sets whether to print the
returns a string describing this applet
adds a color chooser to the editor
returns the vertical offset of the current position
returns the horizontal offset of the current position
set the x1 coordinate of the corner
sets the end points of the rectangle
sets the x2 coordinate of the plot
sets the y1 coordinate
sets the y2 coordinate
draws the zoom in the icon
draws the zoom out icon
sets whether the icons should be shown on the
returns whether or not icons should be shown
returns a string describing this applet
returns a string describing this applet
close the connection
invoked when an action occurs
the timing event method
begin uml doc
this method is called when the node is about to be performed
sets the bounds of the window
sets the current window visible
sets the current window always
disposes the current window
set the speed of the animation
returns the document
sets the document to be used for parsing the document
sets whether or not the validation is being validated
returns whether or not this is a validating
sets whether the schema validation is validated
returns whether the schema validator should be used
set the namespace processing flag
returns whether the namespace has been set
returns the entity resolver
returns the error handler
sets the entity resolver
returns the schema implementation
sets the schema implementation
clones the underlying schema
getter for property month day
returns a string representation of this day
returns the month day as a string
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
getter for property year month
returns the year month as a string
sets the validation flag
returns whether the parser is validating
sets the validation schema validator
returns whether the schema validation is validating
sets the dtd associated with this
sets the schema reference
set the namespace processing flag
adds a new object to the map
add a new band to the list
returns true if the namespace declaration is a
replaces the object with the given key
sets the value of the property
returns the list of the object associated with the given key
returns the object associated with the given key
sets the entity resolver
returns the ith object
returns true if the iteration has more elements
returns the entity resolver
returns the next element in the iteration
removes the last element from the queue
sets the error handler
returns the error handler
sets the error handler
sets the filter set
process the child element setter
the xml document
sets the schema reference
this method is used to set the value of the
handles errors during parsing
receive notification of a non recoverable error
handles warnings of a warning
returns the name of the filter
resolves the given code input code
sets the filter attribute of the filter object
returns the filter attribute
sets the filter value
returns the filter value
creates a new instance of the class
returns the dtd reference
returns the next element in the iteration
returns the real resolver for this
remove the last element from the list
returns a filter for the given name
sets the name of the
returns the filter that matches the given name
returns the namespace prefix
returns the location of the xsi schema location
returns a object
this method returns the qualified name of the code attribute code
returns a object representing the current
returns the instance of the xsi schema location
returns a string representation of this object
generates a summary of the summaries
generates the details for the given iterator
generate the for the given
sets the child element
add a child element to the list
returns the
set the xml parser to be used for parsing the given
create a new object
returns all child elements of this element
creates a new
returns a list of all child elements whose name matches the given
create a new object
returns the child element with the given name
creates a new schema ref instance
add a file to the list
creates a new schema ref instance
generates a summary of the summaries
generates the next
create an instance of
generates the details for this element
set the attribute to the given attribute
collects all groups in the list
method to be executed on a class
this method is used to set the value of the method
returns an iterator of the attributes
returns true if the alt is an alt
returns the java
returns whether the output is verbose
sets the
returns true if the is a alt
returns the
adds a file set to the set of files
sets whether to output the verbose mode
returns the file set
returns true if the is verbose
executes the task
set the setter for the set of
returns the color of the bar
this method returns the attribute of the list
sets the color of the bar
returns the
returns the color of the bar text
sets the color of the bar text
add a set of file set to the set
returns the header text color
sets the header text color
get the file set for the fileset
returns the xsd file
executes the task
sets the xsd file
generates a summary of the group
gets the doc dir
generates the detail list
sets the doc directory
generates the detail list
returns a list of all the attributes
returns true if the document is valid
returns true if this alt is an alternate alt
sets the alt attribute of the object
returns whether the output is verbose
returns the options of the current
generates a summary of the
generates the detail list
generates the details for this group
returns the writer
returns the attribute with the given name
returns the application info
prints the string representation of the given string
returns true if the application has midlet info
returns the documentation of the documentation
returns true if this object has a documentation
writes the string to the writer
write the documentation of the annotation
returns the attribute with the given name
end the end of the end of the end
returns whether the element has a list of element refs
sets the value of the element value property
returns an iterator of the elements in this list
returns the element reference with the specified name
returns the value of the element
returns the attribute
writes the section to the end of the line
returns the type of this object
returns the type as a string
returns the type as java java java java
returns the name of the attribute
returns true if this object is optional
writes the summary
returns true if the attribute is set
returns the default value of the attribute
write the summary comment
parse the complex type
writes a summary of the given contents to the specified
resolve the type of the
returns a string representation of the object
returns true if this type has a public type
writes the end of the summary
checks if the type is a type
returns the type as a string
writes details section
returns the validated string
call the post parse method
register an element to be added to the element
returns true if this type has a public type
write the detail of the
returns the schema name
sets the schema
returns the schema
registers a complex type
checks if the given type is a primitive type
prints the detail end of the element
returns the qualified name for the given name
returns an iterator over the complex types
returns the prefix of the qualified name
returns the namespace name of the given name
register a simple type
find the element with the given element name
writes the detail contents to the specified output
find the element local element of the element
lookup a simple type
returns an iterator over the types of the simple types
prints the detail contents
returns an iterator over all attributes
returns an iterator containing the elements of this element
register a group to be used in this group
returns an iterator over all group references
returns an iterator of all attribute group elements
prints the attribute detail list of the given attribute
returns an iterator over all groups
register a attribute group
returns an iterator over the attributes
returns the map
register a new attribute
validate the
returns the attribute with the given name
receive notification of an error
write the extension list to the given
receive notification of a non recoverable error
returns true if this is a qualified name
receive notification of a warning
returns the target namespace
find the object that is associated with the given name
returns the home directory
add a zip file entry to the list
opens a file to open the file
returns true if there is more entries
returns the type of the given type
add a catalog path to the catalog
returns the next element in the iteration
returns the type of the
add a classpath to the classpath
returns the type as a string
removes the last element from the queue
returns the class of the given class name
returns the basic type of the basic type
sets the min occurs
returns the type as java java java
returns the min occurs value of the field
sets the max occurs attribute
gets the max occurs attribute
find the resource with the given name
sets the ordered value for this field
returns true if this is an ordered acyclic element
returns true if this object has a many to a many
returns the optional flag
returns the urls of the given cpe
returns true if the value has the default value
checks if this is a private member of this object
returns the default value
returns true if the file has extensions
returns whether the extension has a extension
returns the entry with the given name
returns an iterator over all extensions
returns the extends
returns whether the element has a reference to the
returns an input stream for the given entry
returns true if this collection has a
returns an iterator of the attributes
sets the resolver for the given entity resolver
returns the zip file entry for the given url
sets the entity resolver
returns true if this object has attributes
parses a document from an xml stream
returns true if this type is a simple type
returns the entry with the given name
returns true if this type is basic type
generates the for the given type
returns an input stream for the given entry
returns the options to be used for the
returns the url for the given object
sets the readonly flag
returns true if the current component is readonly
returns the source file
close the output file
set the setter for the method
returns the output directory
returns the package for the classifier
returns the package pkg
sets the package pkg
write the comment to the given comment
set the setter to the setter method
getter for property
sets the
adds an element to the element map
returns the
writes the section section to the section
sets the file to be used for the given file
validate this file
returns the xsd element
write out the end of the interface
sets the options
generates the attributes for the given complex type
generates the attribute values for the given attribute
generates getters and setters
generates the end of the given element
write the empty line to the output writer
write the element references to an element
sets the read only flag
returns true if the current line is readonly
sets the package name
write the default constant value to the given code attribute code
returns the package name
sets the attribute of the object
this method is used to parse the xml element
returns true if this is a
returns the object name
sets the directory
returns the output directory
execute the task
sets the xsd
returns the xsd
returns the beginning of the text
write the attribute values to the given
write the value to the given element
resolves the entity
write the namespace declaration of the node
write the factory method to the given element
converts a name to a string
sets the feature
create a new instance of the class
resolves the entity
returns the api package
sets the api package
returns the schema file
sets the gen gen gen gen gen file to use for the
sets the map
getter for property auto map
sets whether the should automatically be automatically
returns a string representation of this object
returns the string representation of this dtd
tests the main method of the main application
parses an xml file
tests the main method
this method is used to convert a code java
test of main method of class net
the xml file
test of main method of class
parses an xml file
sets whether verbose mode is verbose
populate the combo box with the given values
returns the number of students in the combo box
test method for
sets the selected student
this method initializes j frame
this method initializes j text area
this method initializes j editor pane
this method initializes student score
test the of a
test method for
create a new daml ontology file
loads the object from the database
creates a node instance
returns the sql string for the given entity id
test method for
returns true if the term is an term
show the about box
show the license
set the endpoint address for the specified port name
returns the file object for the given path
create the stop watch button
sets the details pane for the user
this method is called when the user presses the watch
stop the watcher
sends the socket to the server
parses the given message and returns it as a message
returns true if the connection is a connection
this method is used to connect to the server
sets the columns names
returns the
gets the value of the player one name property
sets the player one name
returns the
returns the port number of the client
gets the player second name
sets the player second name
parses the arguments to the server
returns the udp listener
removes a client from the list
returns the transmit socket
open a timer to be used for the timer
returns the sender of this message
closes the socket
checks if the client is online
checks if the game is a game game
prints the board
initialize the board
returns true if the queue is full
checks if the given row is a valid row of the specified
checks if the given column is a valid cell
removes the given viewer if it exists in the list
returns the color of the player
this method sets the timer for the timer
suppresses the timer to timer task
adds a watcher to the watch
returns the number of reports
returns the server address
returns the current time in milliseconds
returns the private key for the
get the instance of the connection
returns decrypted cipher for stream
returns the port number of the client alive
returns a cipher for the given input stream
returns the port number of the socket
gets the value of the game result property
gets the winner
set the winner
returns the current user
sets the current user
sets the top ten
returns the transmit
returns the
opens the stats window
returns the time
returns the date
writes the given message to the log
writes the given message to the log file
authenticate a user
updates the timer for the given timer
prints the given message to the console
prints an error message
returns a string with the given message
returns a string with the given message
this shows a message dialog box
generates a rsa key pair generator
sets the encryption key
returns the public key
encrypt a message
decrypts a message
event listener for events
returns the timer thread
updates the timer text
pauses the timer
resumes the timer
sets the enabled state of the game
restarts the timer
returns the public key for the server
updates the timer
creates the box
sets the enabled disabled disabled status
returns the properties of the file
returns the value of the specified username
returns the status of the game
stop watching the watcher
disconnect from the server
starts the server
closes the socket
displays a dialog box to the user
prepare the password for the given password
hashes the password
stops the timer
this method is called when the is closed
returns the empty report
sets the reconnection to the connection
saves the report
this method is called when the user selects the next player
adds a player to the game
returns the player
returns the game id
this method is called when the opponent is
this method is called when the user selects the game
this method is called when the user closes the thread
this method is called when the game state is about to be
closes the connection
sends a move to the server
sends a move to the server
this method is called when the thread sleeps for a time
erases the given point on the canvas
sets the time of the sound
set the time
returns the help string
sets the value of the field
called when the preference manager is changed
called when the preferences were loaded
called when the preferences have been saved
this method is called when the plugin is loaded
this method is called when the plug in is loaded
this method is called before the plugin is being closed
this method is called when the plugin is initialized
called when the plug ins module is initialized
called when the state of the state changed
returns the language name
this method is called after the test has been committed
returns the crs factory for this factory
returns the string representation of the given international string
returns the last completed transform
set the last transform applied to the transformation
returns the authority code
returns the charset to be used for the given charset
lists all classes in the given directory
returns the string value of the attribute
returns the upper case value for the given name
returns the international string with the given name
returns the date value as a date
returns the double value of the attribute
adds a projection provider to the provider
returns the anchor point of the anchor point
returns the realization time of the time
returns the length of the shape
returns the units string for this component
wrap the given projection into the given projection
prints the parameters of the current method
returns the coordinate system of the given file
assert that the given axis is equal to the given axis
wraps a file to the metadata
compare the values of the given properties file
returns the domain of the code table code
set the transform of this matrix
parses a simple name and returns it
returns a jndi name for the given name
returns the request
returns the response
returns the code of the code
returns the destination
returns the descriptor attribute
returns the property name
returns the sql keyword
returns the order of this
ensures that serialization returns the unique instances
returns the name of the local part of this qualified name
returns the uri of this resource
return the singleton constant object after the serialized instance
ensures that during deserialization of the filter is read
ensures that serialization returns the singleton constant object
ensures that serialization returns the deserialized
returns an invalid parameter type exception with the given type
this method is used to check the parameter value exception
prints the name of the given name
returns the locale of the component
set the default authority for this modeler
adds a row to the table
writes the given key to the output stream
adds a new factory to this table
adds a new parameter to the group
notifies listeners that a new value is being tracked
adds a collection of authority
returns the configuration configuration
adds the given transform to the set
creates a new row
returns the for the given map
creates a row from the given code
returns the url for the current request
creates a new row
returns the datum for the given datum datum
adds a new entry to the list
converts a category to a string
set the manifest
p takes the value and returns the value
returns the for the given object
checks if the given value is forbidden
writes the categories to the given buffered writer
set the datum to the given values
convert the given map to a object
returns the band of the band
returns the sample of the sample
returns the sample value of the band
returns the sample value of the band
sets the position of the given code position code to the specified
returns the override of the given map with the given values
validates the given metadata
moves the cursor to the next row
returns the value of the specified column
this method is not supported by the
returns the string value of the specified column
sets the coordinate of the
returns a string representation of this object
returns the integer value of the specified column as an int
validate the specified
returns the value of the specified column as an int
validates the object
handle the specified object
returns the value of the specified column as a double
this method is called when the object is validated
returns the value of the specified column
validate the object
validate the object
validate the object
creates a new authority factory test
validate the object
validate the object
validate the value of the field
validate the object
validate the given object
validate the object
validate the object
validates the given formula
checks if the given coordinate system is an outlier
returns the value of the specified datum
validates the object
this method is called by the object
validates the object
validates the object
validates the datum
validate the object
validate the object
this method is called when the object is being validated
validates the object
validates the object
validates the object
validates the object
validates the object
validates the object
validates the object
dispatches an object to the underlying object
dispatch an event to the underlying object
verifies that the given coordinates are correctly dragged
logs the log record
dispatch a generic message to the given dispatch
validates the object
executes the given modifiable list of operations
returns the modifier for this transformer
validates the object
validates the given subject
validates the object
validate the object
validates the object
validates the object
validates the given resource
dispatch a
validate the object
validates the geometry
validate the values of the datum
this method is called by the extent of the
validates the extent
implementation of the class interface
normalize the operation

checks if the given string is a filter
create a new parameter group
returns an input source file as an input source file
exit the application
saves the menu item to the file
exit the application
gets the auth token
called when the progress bar is changed
launch the login activity
stores the current preferences to the preferences
restore the cookies from the preferences
sends the http request to the server
sends the request to the server
sets whether the drag is enabled or not
invoked when the target of the listener has changed its state
sets the cut
returns true if the specified data flavor is supported for
returns the current key
returns the path to the selected file
populates the list with the data from the table
returns the focus component
sets the focus component
returns the number of rows in the model
exports the current file to the output
unload the component
sets the driver name of the driver
visits all nodes in the tree
p invoked after nodes inserted in tree model
invoked when the user has been stopped
description of the method
called when a drag operation has encountered the drop target
p this method is called when the tree structure is changed
called when a drag operation is dragged
called whenever the value of the selection changes
invoked when the user has been stopped
invoked when a component loses the keyboard focus
handle the key pressed event from the text field
handles the key released event
called when the mouse exits a component
returns the first column in the table
sets the column to be used for the column
returns the
sets the column to be used for the column
returns the
sets the column to be used for the column
returns the
sets the column to be used for the column
returns the
sets the column to be used for the column
returns the name of the key
compares this object to the specified object
clears the flag indicating whether this object is cleared
sets the connection close flag
returns true if the object has changed
returns whether the connection should be closed
returns the java class represented by this code object code
unsets attribute name
checks if the wrapper class is a wrapper
discards the changes made to the current object
returns true if this object has changed than the
returns the key name old
returns true if the delete is a delete
returns true if this object is new
sets the new attribute
sets the inherited
returns true if the provider has changed
sets the inherited flag
sets the new data change time stamp
returns the system data for the current query
sets the new value of this object
compares this to another object
sets the change flag
imports a db from database
returns all keys in the query
returns the lead key name
get an attribute with the given name and attribute
returns the name of the lead key
returns the key name for the last key
returns a list of attribute names for the given name
sets the name of the last lead entry
returns the ending key for the given key
get a list of all the items in the database
starts the timer
returns the time as a string
converts this object to a string
returns a string representation of this time span
get a list of for a given key
updates the data record
returns the list of attributes associated with the given key
delete the given object
get a unique id by its id
get a query object from the database
returns a list of all the key start objects satisfying the given
get a by id
delete the given attribute
delete the given key
p callback method that is called whenever a page is navigated to
p callback method that is called after the component is removed
writes the specified byte to this output stream
returns the selection of the given document
returns the information for the context information
returns the additional information for the organization
checks if the word is a start character
returns the prefix completion
returns the validator validator
returns whether or not this is
create a form object
sets the attribute of the attribute
adds a child to this tree
adds a child to this node
creates a child element
sets the text
this method sets the namespace of the element
set the namespace for the given namespace and namespace
returns the child at the specified index
returns the first child of this tree node
returns the last child of this node
returns the parent of this node
returns the root element
find a tree item in the tree
returns the text of the first element
returns the description of the object
returns the description of the document
writes the object out following the xml output
writes the object out following the xml
reads the object from the given xml
returns a new in this xml element
starts a tag
update the object from another entity
update the object from another entity
writes the object as xml
reads the object from the given xml
writes the object as xml
reads the object from the given xml
returns the list of the given name
returns the summary
creates default server
returns the actor associated with the given id
returns the encrypt key
creates an instance of an actor
returns the address of the address
returns the server with the given name
returns the path to the path
returns the replication value
returns whether or not the replication mode is allowed
build the build string
returns the default value of the default location
returns the path source of the source file
returns true if the is a
checks if the week day is working day
returns the path to the target directory
writes the object as xml
reads the object from the given xml
returns whether or not this code code is a compile code
sets all the servers in the server
writes the object as xml
reads the object from the given xml
returns true if any server is dirty
starts a tag
update the object from another entity
description of the method
returns true if the given actor is a member of this group
returns the lead entry
writes the object to a serializable object
writes the object as xml
reads the object from the given xml
reads the object from the given xml
writes the object as xml
reads the object from the given xml
adds a list of files to the server
returns the summary of this module
adds list of classes to the list
starts a tag
update the object from another entity
adds a list of classes to the list
returns the list of the roles
adds prerequisites to the list
returns the list of servers in the list
returns an exception that is being processed
add a list of files to the list
returns the network id
returns the alternate network id
writes the entity to the specified xml component
creates the default operator
saves the entity
writes the object to the specified xml
returns the summary of this event
lists the list of buckets
writes the object as xml
returns the local port number
reads the object from the given xml
starts a tag
update the object from another entity
returns the local encryption key
returns the local replication mode
writes the object out following the xml
starts a tag
checks if the actor is one of the destinations
update the object from another entity
description of the method
description of the method
writes the object out
checks if the list is in the same team
checks if the given role is a role
adds prerequisites to the list
returns the default value of the default holiday
sets the default location of the specified
writes the object out following the xml
reads the object from the given xml
writes the object as xml
sets the default date for the given input
reads the object from the given xml
writes the object as xml
writes the object out following the xml output
reads the object from the given xml
reads the object from the given xml
starts a tag
check if the time zone is available
update the object from another entity
returns true if the name exists
writes the object as xml
reads the object from the given xml
set the not dirty flag
update the object from another entity
writes the object as xml
compares the specified object with this
writes the object out following the xml output
saves the current log file to the given file
logs the error message to the given file
update the object from another entity
returns the summary
writes the object as xml
reads the object from the given xml
adds a list of files to the list of files
returns the name of the phase
sets the name of the phase
adds a list of classes to the list
writes the object as xml
reads the object from the given xml
saves all objects in the given group
returns the list of the given name
compares this object to another
adds hours to the time period
compares this object with the specified object for order
writes the object as xml
compares this phase to the specified object
writes the object out following the xml output
reads the object from the given xml
starts a tag
update the object from another object
writes the object as xml
reads the object from the given xml element
writes the object out following the xml output
reads the object from the given xml
starts a tag
update the object from another entity
writes the object as xml
starts a tag
update the object from another entity
creates the component
description of the method
description of the method
returns true if the given actor is a member of this group
returns true if the team is a team member
update the object from another entity
returns the summary
writes the object as xml
render phases the phases in xml format
writes the object as xml
reads the object from the given xml
writes the object as xml
writes the object out following the xml output
reads the object from the given xml
starts a tag
update the object from another entity
adds prerequisites to the list
returns the summary
writes the object as xml
reads the object from the given xml
returns a new
update the object from another entity
adds a list of classes to the list
returns the latest active plan based on the given slot id
returns the list of the
add a list of files to the list
saves the entity
saves the entity to the given xml
writes the entity to the given xml
writes the entity to the specified xml
writes the object to a xml file
returns the latest forecast from the last time period
list the list of objects in the list
writes the object as xml
compares this object with the specified object for order
reads the object from the given xml
starts a tag
update the object from another entity
description of the method
compares this object with the specified object for order
validate the object from the given form
validate the object from the given xml
writes the object out following the xml output
compares this phase to the specified object
compares this object to the specified object
creates the component
compares this event to another object
writes the object as xml
writes the object as xml
update the object from another entity
writes the object as xml
reads the object from the given xml element
writes the object out following the xml
writes the object as xml
reads the object from the given xml
reset the state of this object to its initial state
writes the object out following the xml output
reads the object from the given xml
sets the name of the form
writes the object as xml
reads the object from the given xml
starts a tag
update the object from another entity
returns the application
returns the summary of this exception
returns the summary prefix
writes the object as xml
reads the object from the given xml
writes the object out following the xml output
reads the object from the given xml
returns the summary
update the object from another object
returns the summary prefix
compares this menu item to another
writes the object as xml
reads the object from the given xml
sets the name of the current plan
adds a list of classes to the list
returns the list of the tags in the list
returns a parser for a given tag
adds a list of files to the list of files
saves all object data
reads the object from the xml input
lists the list of buckets in the list
returns the last scheduled time of the task
returns the summary
starts a tag
update the object from another entity
writes the object out following the xml output
starts a tag
update the object from another entity
returns the workload for the given task
writes the object out following the xml
compares this object with the specified object for order
writes the object out following the xml
reads the object from the given xml
update the object from another object
returns the workload for the given task
compares this object with the specified object for order
writes the object as xml
reads the object from the given xml
writes the object as xml
reads the object from the given xml
returns the workload for the given workload
update the object from another entity
adds a duration to the duration
adds a duration to the duration
adds a duration to the duration
adds a duration to the duration
returns the last scheduled time of the task
substracts the duration from this duration
gets the number of days in the
compares this object with the specified object for order
writes the object at the specified location
writes out xml out out to xml
adds prerequisites to the list
adjust the duration of the given duration
normalizes the days of the day
set the duration of the
set the duration of the
returns the hours of the duration of the specified number of hours
writes the object as xml
reads the object from the given xml
writes the object as xml
p this is a convenience method that returns the element
reads the object from the given xml
set the duration of the data
called after the last commit of the object
set the sub entity
returns the tag of the given tag
update the duration
ends the current entity
start a tag
close the xml element
returns the tag of the given tag
called after the end of the object is finished
starts a tag
reset the state of this object to its initial state
adds a new definition to the list
returns the summary
description of the method
update the entity object
checks if the application has been enabled
update the object from another entity
returns the summary
updates the object
description of the method
returns the name of the method
p writes the element to the specified xml tag
updates the entity object from another entity
p writes the element to the specified xml tag
compares the specified list of objects from the given array
writes the object out following the xml output
reads the object from the given xml
description of the method
validate the given list of objects
update the session
update the object from another entity
validate the object after calling the
writes the object as xml
reads the object from the given xml
validate the object
writes the object as xml
compares this object to the specified object
writes the object to the given xml
writes the object as xml
reads the object from the given xml
writes the object to the given output
writes the object as xml
writes the object out following the xml output
reads the object from the given xml
compares this object with the specified object for order
description of the method
starts a tag
update the object from another entity
imports the content of the given class
sets the name of the
reads the object from the list
compares this object with the specified object for order
reads the object from the list
returns the summary of this action
imports a class element from the given model into the given
returns the comment of the comment
imports a core class
adds a list of comments to the list
returns the application application name
checks if the given element is already in the list
compares this object with the specified object for order
description of the method
description of the method
writes the object as xml
reads the object from the given xml
update the object from another entity
is the current value
adds a list of classes to the list
writes the object to the given xml
returns the list of the elements in the list
adds a list of files to the list of files
returns true if the current string matches the name of the
checks if the panel contains a panel
saves all object data
writes an xml representation of the object
lists a list of buckets
checks if the adapter is already in the list
starts a tag
returns true if this is a
writes the object as xml
reads the object from the given xml
writes the object out following the xml
reads the object from the given xml
starts a tag
update the object from another entity
writes the object as xml
reads the object from the given xml
writes the object as xml
writes the object out following the xml output
reads the object from the given xml
returns the summary indicator for this event
update the object from another entity
sets the active attribute of the depot project object
description of the method
returns the text of the given text
returns the summary
sets the current active slot
initializes a bucket
writes the object out following the xml output
reads the object from the given xml
update the object from another entity
returns true if the object is similar to the given object
compares this object with the specified object for order
returns true if the object is a different entity
writes the object as xml
reads the object from the given xml
adds a list of classes to the list
returns the list of the tags
returns the parser object for the given tag
adds a list of files to the list of files
generates the list of all the methods
returns true if the name exists
saves all object data
writes the object to a xml file
list the list of the objects in a list
writes the object out following the xml output
reads the object from the given xml
method name set name
starts a tag
check if the given actor code date code is available
update the object from another entity
writes the object as xml
start a tag
reads the object from the given xml
returns the tag of the tag
ends the end of the element
returns the root action
this is called after the tag is finished
this method is called when the tag starts with the given tag
returns the tag of the given tag
returns the session
returns the server
get a list of the server sessions
lists all the categories in the list
returns the xml
returns true if the current node is a delete
returns true if the message has error
lists all the classes in the list
returns true if the detail is a detail
returns true if the file is a save status
returns true if this is a summary
returns the short summary
returns true if this node is a expand
returns the tag of the given tag
ends the current session
returns true if the current state is complete
returns true if the current code is update code
prints the given text to stdout
returns the forecast date
returns true if the current time is replicate or not
returns true if this instruction is a load
the current time
checks if the actor is at the center of the
sets the
returns the
sets whether the save should be saved or not
returns whether or not the record should be saved
checks if the actor is the given actor
sets whether or not this component is enabled
description of the method
compares the argument to the receiver and returns true
returns true if the actor is in the from actor
returns true if this status is pending
returns true if this is a demo
checks if this message is sent as an incoming recipient
returns the id of the object
returns the summary of the item
runs the lookup
returns the updated value of the
returns the tip text for this field
sets whether or not this component is enabled
sets the name of this task
sets the text wrapping the text
returns the html content of the current document
called when the button is pressed
resets the timer to the specified date
sets the enabled state of this component
clears the list of all the calendar messages
sets the title document to be used for the title
adds an item to the list
adds a label to the list of items
adds an item to the list
adds a new item to the list
returns an image for the specified period
returns true if the is
returns the code item code for the given label
returns the item with the given label
returns the label of the item
returns the label for the given label
returns the title of the frame
gets the maximum number of periods
creates the panel
returns the name of the icon
attaches a column to the table
gets the selected code
returns the selected label
sets the date type for the data
returns the selected icon name
changes the selection to the selected column
returns the lookup button lookup
sets the selected code
returns the number of panels in the container
returns the panel lookup panel for the specified column
refresh the button
runs the lookup of the lookup
invoked when an action occurs
clean up the
deletes the current row
runs the lookup
clears the text search
sets the frame
called when the user selects the edit button
returns the button lookup
returns the panel calendar
sets the key tag
reloads the days
collapse the panel
cleans the text
returns the menu bar
sets the text
invoked when an action occurs
returns the text of the text
returns the related menu bar
returns the plain text
called when the button is pressed
resets the selection to their default values
sets the text
sets the value of the code panel code property
returns the name of the associated panel
saves the preferences to the current store
returns the search params
returns the text of the base64 text
sets the text to be decoded
sets the filter
sets the search
sets the icon of the file
returns the icon name
adds a label to this label
adds a label to the current image
sets the state of the opened state
sets the state of the closed state
runs the timer
waits for a block to be canceled
writes the object to the xml output
start the tag
adds a menu to the menu
returns the tag of the given tag
refreshes the menu
called when the message is finished
invoked when an action occurs
start the tag
expand the tree
returns the tag of the given tag
called when the user is being finished
compares two nodes for equality
returns the tag of the given tag
returns the panel lookup
collapse the panel
ends the current message
called when the button is pressed
returns the tag of the given text
called when the end of the is closed
invoked when an action occurs
this method is called when the action is invoked
compares this object with the specified object for order
unselect the selected tree
handles the action event
tree selection changed
returns the last node of the queue
called when the view is closed
selects the tree
handles the action event
this method will be called after the current date is selected
returns the text search text
runs the lookup
clears the text search
selects the next month
sets the text search text search text
selects the previous month
sets the sizes of the components
adds a calendar message to the calendar
locks the given lock
paint the component
clears the list of messages to show
creates the table model
returns the selected filter
called when a new panel is added to the panel
selects the date of the given item
sets the filter to use for the filter
invoked when an action occurs
invoked when an action occurs
this method is called when the user presses the
set the name of the server to use for the server
sets the color of the server to the given color
attaches the last label to the last label
passing the focus request to the viewers control
returns a string representation of this message
compares two day tree
returns the tag name
returns a string representation of this summary
sets the name of the column
compares this tree node to the specified object
set the tag name of the tag
invoked when a key has been released
exits the xml
description of the method
adds an action bar to the toolbar
refreshes the menus
invoked when an action occurs
invoked when an action occurs
set the preferred width of the given column
description of the method
creates a new action
called when the user presses the
this method is called when the user presses the
invoked when an action occurs
invoked when an action occurs
reset the progress bar to the current value
adds a progress value to the progress bar
creates a new action
invoked when an action occurs
sets the width of the column
returns the description of the filter
called when the is closed
writes the contents of the page to the given string
starts a tag
starts a tag
this method is used to handle the tag
writes a string to a file
returns the tag of the given tag
called when the search is done
starts a tag
returns the tag of the given tag
ends the action
writes a buffered image to a grayscale image
starts a tag
returns the tag of the given tag
returns the total number of times the player has been processed
ends the action
called when the table model changes
returns the tag of the given tag
returns true if the user can edit the items
called when the user selects the button
start a tag with the given tag
returns the tag of the given tag
generate the footer for the
ends the current element
start the tag
returns the date of the operator last time
start the tag
writes the file to the output stream
returns the tag of the given tag
ends the current frame
returns the number of the last in the current
displays the message
this method is called when the user selects the end of the
gets the value of the operator user property
copy the file from the lib and the file to the
creates a new row
returns the path to the file containing the file
returns the number of items in the list
returns the name of the operator
writes out the given string to the output stream
returns whether the dialog is selected
returns the ith class name
returns the number of the right or code null code
returns the password of the user
returns the operator of the network
returns the name of the ith component
returns the operator of the current user
returns the ith resource as a string
writes the object out to the xml
creates a new row
this method is called when the user selects an authorized connection
removes all duplicates
returns true if this method is authorized to be used
increments the requests time in the queue
compares the argument to the receiver and returns true
returns the server
factory method to create a new server object
returns the connection
this method is called when the tag is starting
can edit an edit
sets the text tag
copies content of the document
this method is called when the user selects the end of the
deletes the current row
this method is used to query the of a query
copy the value of the document to the current document
outputs the xml content to the specified xml output
writes the content of the xml document to a writer
write an exception to the output stream
writes the content of the xml document to the specified output
writes an error in the query
write an exception to the output stream
returns the tag of the given tag
deletes all rows from the table
create a new window
this method is used to execute the query
returns the handler
returns a string representation of this object
add a new level to the level
reset the level to the default level
returns the error flag
called when character data is encountered
called when the parsing of an element is encountered
called when the end of the document is encountered
handles errors in the error message
logs the error at the given error
check if the server requires the server
sets the value at the specified row and column and column and
removes the item from the list
returns true if the server is a security role
sets the value at the
gets the value of the property
shuts down the client
sets the highlight at the specified coordinates
replaces all labels of the given text
sets the highlight at the given position
queries the queue for the given query
reads the user preferences from the database
refresh the menu item
writes the object to the output xml
refresh the menus
disconnect the connection
activates the buttons
writes a tag in xml format
returns true if the connection is connected
adds a panel to the panel
returns the html representation of this code table model code
attaches the frame to the main frame
detach this frame from its current frame
the value of the selected row
process window event
broadcasts the given message to all frames
removes the selected row from the table
wait until the thread is complete
sets the value of the column
resets the buttons to the selected state
this method is called when the frame is finished
sets the action type for the column
resets the buttons to the specified list of buttons
sets the date type of this column
clears the selected window
sets the column type
writes the object out to the xml output
sets the value of the column
runs the uc
adds a button to the button bar
sets the value of the column
sets the combo box for the given column
sets the default column default value for the column
sets the state of the save button
sets the highlight of the column
resets the revert revert flag
sets the read only column
resets the action
sets the centered coordinate of the current position
sets the visibility of the action
sorts the table model
returns whether or not the table is hierarchical
this method is called when the server is connected to the server
this method is used to query the session
clears the queue
adds the selected row
removes the level
add a message to the message
moves the selected row up to the row
move down the selected row
runs the server
returns the current panel
sets the enabled attribute of the wifi ui object
returns true if the category is available
returns the header renderer for the specified column
reset all categories to their initial values
saves the lookup params to the component
hide the buttons
set the mode of the cell
returns the lookup params for the component
sets the no sort
changes the selection of the selection
returns the messages of the message
invoked when an action occurs
change category to toggle button
returns the number of columns in the model
writes the xml representation of the default values to the default values
creates a new row
action listener for the action button
deletes the row
creates a new action
deletes all rows from the table
sets the column name
set the tag name of the tag
returns the type of the column
set the type of the column
clears the calendar messages
set the cursor for the image
set the highlight of the cell
set the read only column
set the centered value of the cell
sets the combo box
restore the file chooser dialog
returns the value at the given row and column
returns the highlight at the specified row and column
hide the action bar
returns the ith diagram
returns the level at the specified row
set the value of severity at
returns the number of the selected charts
returns true if the row has hidden false otherwise
clears the temporary directory
returns true if the cell at the specified row and column
prints the web page
sets the value at the given location
the method that is used to get the dev web page
sets the highlight at the specified position
sets the highlight at the given position
show the license
sets the level at the given level
opens the bug
sets the ticket at the given row
sets the server name
sets the ticket at the current row of the current user
returns the minimum selection index
set the processing name to the server
returns the maximum selection index
set the value of server name processing
writes the object as xml
returns a string representation of this object
compares this object with the specified object for equality
this method is called when the thread is started
writes the given tag to the xml file
returns the html for the current row
returns the directive to be used to sort the data
returns the sorting status
sets the sorting status
returns true if the column is sorting
returns the column of the column
sorts the data in the table
notifies the table model that the current status has changed
cancel the sorting
sets the hierarchical string to be used
returns true if the hierarchical is hierarchical
adds a level to the level
removes the level at the specified level
sets the enabled state of the soft enabled state
moves the table to the specified row
this method is used to move down the row
returns true if the given column is read only
invoked when the mouse has been clicked on a component
this method sets the level of the delta level
sets the
sets the engine
this method is called when the atom is added to the
set the struct generation generation
sorts the list
sets the dataset name
sets the init objects
sets the random
set the value of the verbose property
sets the number of generations to run
returns the engine
returns the init objects
returns the result of the operation
sets the maximum number of mps trips
returns the atom container
returns the dataset name
sets the maximum steps
this method is called when the user selects the next element
returns the generation gen thread
sets the number of convergence stop the experiments
sets the current dataset number
sets the start k t
sets the current dataset number
returns the current dataset number
sets the current value of the code k t code property
returns the dataset
sets the rate
stops the timer
returns the random
returns the number of experiments
gets the value of the property
adds a change listener to the list of changes to this object
removes a listener for changes to the change listener
returns the initial acceptance probability probability
notify all listeners that have registered interest for notification on
returns the frame
this method is called when the mutation of this object is being
returns the maximum number of steps that can be used
sets the file location
returns the file location
returns the maximum number of steps that can be used
sets the file location
returns the file location
sets the log file
this method is called when the is
sets the result file
returns the server configuration
set the dimension view dim of this view
returns the dimension view dimension of the surface
adds a molecule to the molecule
adds a change listener to the list of change listeners
adds a molecule to the molecule
sets the dimension view dim
invoked when the target of the listener has changed its state
returns the dimension of the axes
adds a molecule to the structure
adds a molecule to the molecule
reads the parameters from the file
returns the border of the titled border
saves the parameters to the properties file
this method is called when the user selects the
this method is called by the framework when the report is
this method is called when the aglet is about to be activated
sets the pick precision
opens the arff file
returns the pick precision
returns the number of atom atom symbols in this atom
returns the signal number of the signal
logs the given message to the log
adds a signal to the event list
replaces the at the given position
adds a signal to the end of the list
creates a new signal
sets the status log file
sets the formula for this formula
sets the atom container
returns the atom container
returns the signal with the given number
sets the structure log file
sets the molecular molecular molecular mass
returns the signal number of the signal
sets the atom container
returns the status log file
sets the description of the item
initializes the
returns the structure of the log file
sets the
returns the
sets the current state of the application
add a judge to the list
remove a judge
starts the server
sets the name of the dataset
sets the atom container
returns a vector that is shifted to the given signal
returns the version of the task
sets the carbon
sets the scores of the scores
sets the score of the given position
sets the cut off
returns the cut off
sets the
sets whether this component is enabled
setter for property judge listener
sets the value of the ring set required property
gets the molecular mass factor
sets whether the is automatically classified
sets the max score
sets the chart
returns the
returns the message identifier
returns the host address
returns the value of the is ring required property
returns whether or not the score has been set
returns the maximum score of the
get the judge
called when the user changes the state of the
this method is called when the servlet is destroyed
initialize the
adds a change listener to the list of changes to this
registers a new keeper object keeper
sets the data
returns the data
adds the data to the series
initializes the
update the timer
starts the timer
stops the timer
this method is called when the user presses the init
populates the project list with the current time
return a string representation of the project
returns the date of the started running
returns true if the thread is currently running
populates the project list with the values from the
notifies listeners that the component has been changed
generates the property values for the given property name
generates a property code for the given code
this method is called by the
generates a code code property
returns the name of the getter property
this method computes the name of the target property
generates a code code property
extends the interface to generate a properties file
generate a new property
returns the name of the setter property
returns the source code generator code to use
returns the source code generator code to use
sets the source code source code generation
adds a property generator to this generator
sets the value of the moving
returns the name of the first of the given prefix
returns the help formatter
generates the generic method for the given name
returns the command line parser
returns the id of the object
returns the balance of the balance of the account
sets the command line
returns the name of the component
returns the state of the state
generates a new getter
sets the definition processor
returns the zip code
returns the name of the first user
returns the definition processor
returns the country of the country
returns the region
sets the source code generator
returns the continent of the continent
returns the last name
returns the source code generator code generator
sets the continent
returns the name of the component
returns the account
returns the street
returns the billing address
returns the number of the
returns the floor
sets the email addresses
returns the is
sets the list of addresses
returns the
sets the billing address
returns the city of the city
sets the floor
initialize the definition map
sets the is
returns the global config object
sets the definitions definitions
returns the value object by its id
sets the
returns the reason why the user is looking for
sets the city
returns the value object based on the bean id
set the reason why the connection is
sets the definition of the definition
logs the message to the log
sets the invalid reason
this method is used to log the message that occured during logging
sets the
returns the value of the specified object as a string
sets the properties
checks if a property is set
returns the default package
returns the generate flag
checks if a property is set
sets the message
sets the validators
returns the generate boolean
sets the map of definitions to be used
adds a validator to this
returns the global configuration parser
returns the output file directory
returns the output directory
sets the validation status
sets the config file to use
sets the validators
sets the package for the default package
adds a validator to this validator
sets the global configuration parser
sets the validator
sets the generation class
sets the generate java
convert the given configuration file to a global configuration
sets the output class directory
sets the output directory to the output directory
reads the jaxb xml file from the given jaxb
validate the parameter
returns the resolver used to resolve the definition
sets the definition resolver
returns the property container
sets the property container property
sets the property on the given property
sets the property map
puts the property into the properties object
returns the property name for the given property
sets the property on the entity
returns the value of the property value
populate the entity with the properties of the entity
sets the value of definition validator
sets the object to be wrapped
sets the factory map
returns the value of the specified method
returns the configuration
returns the definition processor
returns the jaxb context
returns true if the method is a setter
returns the property container
sets the config
sets the
sets the operation handler map
forward the given to the parent
sets the entity factory to use
returns the entity factory for the entity factory
sets the not negated property
returns a clone of this object
removes a from this criteria
compares the value of the property and returns true if it is
returns the cache model validator
sets the cache manager
decorate a cache cache
handles the flush cache event
checks if the given class is a component
returns the component that is connected to this component
this method is called after the
this method is called after the
posts the data to the server
posts the data to the server
this method is called after the
posts the data to the server
this method is called after the
posts the data to the server
this method is called after the
posts the data to the server
auto generated axis2 error handler
auto generated setter method
validate the form
navigates to the given view
adds the first second to the bloom filter
multiply this object by the current correlation
divides the current number of times the result
clears the result set
returns the contact by id
remove a contact
sets the contact repository
sets the group repository
sets the tag repository
remove the contact form
validate the properties and returns the result
at startup create and show the main frame of the application
this method initializes the application settings
creates the action manager for this action
creates a new language manager
sets the to the default value
this method initializes attributes
register the listeners to listen for changes in the local
register the listeners to listen for changes in the local button
updates the monitor panel
returns the current folder
returns the current entry
sets the preferences to the preferences
centers the window on the screen
cancels the user
register the listeners
builds the content pane
builds the content pane
build the components
register the listeners and their listeners
builds the form panel
builds the main panel
paints the component
builds and returns a tabbed pane
builds the button bar
builds the button bar
set the dialog settings for the dialog
sets the dialog size
sets the dialog settings for this dialog
sets the dialog size
returns the login mode for the application
returns the group with the specified group id
returns the portal url
returns the company name
returns the mnemonic of the given property
puts the image into the group
add a new entry to the list
builds the panel
builds the content pane
insert a key into the image
this method initializes the application settings
returns the image for the given key
updates the language resources
creates the action manager
creates a new language manager
checks if the user exists in the database
updates the with the given username and password
remove the user from the database
changes the password of the user
increment the restricted value count
this method is called after the portlet set is set
sets the outside outside app
rename the selected project
rename the selected project
performs the action
adds a project to the project group
called when the user attempts to close the window
returns the
returns the
returns the title of the document
returns the
returns the
get the time of the last update
returns the time stamp of the flight
set the url of the document
sets the user id
sets the document title
factory method for instantiating the
set the category id
sets the time of the last update
set the time stamp of the created object
set the property
returns a list of all the templates that match the given criterias
factory method for instantiating the
returns the title of the template
factory method for instantiating the
returns the major version number
returns the minor version number
returns the
returns the description of the filter
set the title of the template
returns the search sub categories
set the major version number of the major version
returns the
set the minor version number for this version
sets the user id
set the description of the
sets the value of the search sub categories property
set the time stamp of the flight
returns the
returns the search flag for the search between search and join
sets whether the search should be created
returns whether or not the search is currently modified
returns the user id
sets whether or not the search should be modified
select templates in database
sets the begin created attribute
generates a xml document for the given input stream
sets the dt dt end attribute of the ticket object
sets the begin date of the session
get the time when the user expires
returns the inventory code
returns the amount of the updated
returns the notes in the notes
sets the time stamp of the last modified date
sets the date of the update history
sets the inventory code
sets the amount of the
factory method for instantiating the
sets the notes
returns the current amount of the current amount
sets the current amount of the current amount of the current amount
factory method for instantiating the
returns the time the user can be used to compute the date
factory method for instantiating the
factory method for instantiating the
returns the
returns the time of the start date
inserts the given inventory inventory into the list
sets the inventory item
adds a inventory item history to the database
get the list of inventory items
retrieves the inventory inventory item
updates the inventory for the given inventory
returns the date of the end of the month
retrieves the workitems inventory status item status
retrieves the inventory inventory history list item
returns the end year of the end year
get the inventory code
set the description of the
sets the inventory code
returns the time the last month has been added
this method is called when the garbage collector
returns the last modified time of the article
select a inventory
returns the files
returns the time the last month was last modified
sets the name of the event
sets the start time
sets the time the time was finished
factory method for instantiating the
sets the is name date attribute of the object
sets the is name date attribute of the object
set the time of the
returns the date of the last time the time was last modified
returns the event name
sets the event name
get the time of the time
returns the start time
returns the event finish
check if a data access object is a data access
returns the name of the
returns true if the properties is empty
returns the name of the
this method is called when the log entries are removed from the
create a new default default start timestamp
insert organization into database
create the default end time
create an instance of
create an instance of
checks if organization exists
create an instance of
factory method for instantiating the properties map
check the access flags
returns the number of columns in the table model
checks if a person exists in the database
returns the value at the given row and column
create an empty list
creates the table model
returns the connection to the database
close the connection
get the group list for the user
get the list of user names for the given user id
create an instance of
sets the time of the last update
returns the string buffer representation of the current hex
returns the string buffer representation of the literal
converts a string buffer to a hexadecimal string buffer
returns the page reference
returns the current zoom factor
returns the current highlight mode
gets the destination of the current message
sets the stroke width
sets the style of the border
gets the value of the type property
converts a string buffer to a hexadecimal string
gets the user space space
clears the font list
returns a path to the shape boundary for the specified boundary
converts a value into a integer value
returns the bounding box for the given user
returns a string representation of this object
returns the annotations
gets the box box
returns the hexadecimal string buffer
returns the literal string buffer
returns the art box for this item
returns the color of the colours
returns the box
returns the color of the given color
gets the trim box
translate the transformation by the given x y coordinate
scale the matrix to the given value
returns a vector of images
returns the size of the text
paints the text of the text
returns true if the shape intersects the given shape
disposes the graphics context
returns the color of the given color
initializes the component
returns the color of the given color
the given transformation matrix
sets the clip to an clip
initializes the applet
initialize the page
adds the next trailer dictionary
returns the external file name
returns the value of the is new window property
returns a hashtable of entries in the table
returns a point of the current screen
returns the original points of the
returns a string representation of this object
converts this object to a coordinates
returns the object reference
prints the object to the output stream
returns the stream object
gets a rectangle from a hashtable
sets the image
disposes the resources
the glyph
returns the index of the
handles the key pressed event
sets the current glyph
returns the alpha value for the alpha channel
returns the image of the current image
returns the object
reads the next thing from the board
returns the
adds an image to the image
returns the image for the given page
executes the given outline
executes the given code code
returns the type of this
pushes the current state of the stack
returns the type of this
returns the type of this object
returns the paint for the given components
returns the type of this
returns a new rectangle whose paint is epsilon
creates a graphics object
computes the bounds for the given code code
draw the path
computes the fill of the path with the given path
draws a native text
this method is used to clip the clip to the clip clip
set the clip to be drawn
returns the transform matrix for this transform
transforms the matrix to the given matrix
set the transform
returns the initial transform of the current transform
resets the current line
set the last shape
the
returns the last shape
returns the transform matrix
set the matrix to the given matrix
performs the actual conversion of the text
adds a region to the list of regions
returns the number of pages
returns the glyph that contains the given glyph
returns the shape of the shape
add a command to the commands
returns the outline of the given character
read the name
returns a new image from the given width and height
read a number from the stream
restore the current instance
returns the bounding box of the bounding box
returns the width of the bbox
returns the height of the bounding box of the camera
returns the command at the specified index
adds a page to the list of commands
returns the rectangle that is used to draw the plots
sets the
stops the image
this method will extract the file from the given path
returns the outline for the given name
add a matrix to the matrix
adds a to the end of the list
adds a path to the list
updates the picture
opens a file to open the specified file
this method is called when the shader environment is registered
returns true if the fill viewport is filled or vertical
returns the of the given object
returns true if the y coordinate is filled or vertical
sets the fill viewport state
sets the fill region of the viewport
fill the rectangle with the given paint
returns the image for the image
performs the actual conversion of the data
renders the compound glyph of the given glyph
scrolls the given child view to the right screen
adds a to the
open a file
returns the of the given object
opens a file to open the file
returns the type of the
opens a file
returns the x coordinate of the point at the given index
adds a new message listener to the list of listeners
removes a selection listener
removes all listeners that are notified when the selection changes
saves the to a file
turn the current turn to the next turn
loads the given directory
returns the layer that represents the terrain layer
starts a new game
returns the terrain for this terrain type
returns the seed value
adds an item to the list
description of the method
read a sector
returns the list
returns the round number
adds a to the list of
increases the round number of the round
returns the race of the race
returns the race name
returns the plural name of the race
draws the icon
applies the statistics to the given object
returns the plural plural name
adds an item to the list
removes an item from the list
render the canvas
returns true if the item has an item
draws the
render the offscreen image to the offscreen buffer
returns the stats for the given item
renders the text of the given graphics
returns the
returns the
sets the resource bundle path
sets a property
sets a property
sets the value of the specified property
sets the property to the given key
returns the value of the key
returns the value of the property
returns the value of the given key
returns true if the type is a number type
returns the value associated with the given key or default value if
returns true if the type is a string type
returns the boolean value associated with the given key
returns true if the given date is a date type
returns the name of the
compare two objects
returns the name of the column
find the column with the given name
returns the java type of the specified type
returns the java type of the given java type
this method is used to convert the attribute to a string
this method is used to convert the value to the
creates a new code forward table model code
this method is used to convert the string to uppercase
returns the first lower case of the first character
get the auto column
returns the length of the array
create a sql string for a given sql type
adds a buttons to the toolbar
collapses all nodes in the tree
sets the visibility of the window
updates all preferences
updates the spring layout of the spring
updates the spring layout
removes the specified family from the list of
adds a family to the list of
returns the container that this font is used
returns the default text for the default
invoked when an action occurs
returns the top panel
returns the foreground color
updates the spring environment
returns the graph
this method initializes this
returns the background color
this method initializes j text pane
returns the font for this font
updates the display of the text
returns the font preferences used for the font
sets the text of the text
returns the background color
returns the default text
this method is called when the is removed
invoked when a key has been released
called when the user releases the focus
invoked when a component loses the keyboard focus
this method is called when the component is removed
removes a node from the graph
returns the number of in the list
returns true if the given view is a top view
this method is called by the node when it is
adds a node to the graph
solve the node
removes a node from the tree
returns the super view
adds an edge to the graph
returns true if the stack is empty
connects to an edge
removes an edge from the graph
disconnect from the edge
removes the node from the tree
connects out edges to a graph
removes a completely completely completely completely completely completely completely completely completely completely
disconnects an outgoing edge from the graph
checks if the node is a top node
paste the graph to the given graph
returns the node with the given edge
creates a deep copy of this edge
returns the node with the given edge
returns the super view
increment the number of frames in the graph
returns the current clip
returns the view
resets the shadow to its initial state
set the value of sub view
clears the current clip
returns true if the graph is solved
returns the clip string
adds a sub node to the graph
sets the clip screen
creates a new graph
called when the flavors of the
returns the solved state
sets the solved flag
returns true if the graph has the same graph
returns true if the top node is a top node
returns true if this node has children
returns a string representation of this object
loads a file from the file
sets the x coordinate of the
returns the x coordinate of the center of this component
writes a single character array
writes a string to the output stream
writes the specified byte to this stream
accept all directories and all extensions
sets the text
called when the action is performed
choose a color chooser
returns the background colour
returns the font of the
sets the y coordinate
returns the font of the font
returns the selected item
returns the current spring instance
adds a collection of root nodes to the root node
adds edges to the graph
add a collection of nodes to the graph
sets the width of the blur
adds an edge to this graph
adds a node to the graph
adds an edge to the graph
returns the width of the
add a node to the
get the node at the specified position
returns the id of the node
returns the edge at the given address
sets the height of the component
returns the id of the edge
returns the real name
returns the of the given eid object
returns the edge of the given edge
construct a new with the given
returns the height of this component
updates the panel with the values of the current node
returns true if this data has been set
sets the data
returns the data of the fourth character
sets the escape data
get the top element of the stack
sets the table
returns the id of the sub object that has the given name
sets the edges of the spring
get a subtag
returns the spring constraint that is the opposite of the given name
escape special characters to qualify special characters
sets whether the node is open
replaces all special characters in the given string
returns the qty of the loan
sets whether or not the panel is open
returns the sub element with the specified name
returns the sub sub element with the given name
returns the data of the
returns the
returns the for the given
returns the node
returns the string representation of the given string
this method is used to determine the indentation level
adds a sub view to this graph
returns the top level panel
sets solved display flag
the graph to the graph
copies the current graph to the current one
invoked when the mouse enters a component
invoked when the mouse exits a component
called when the mouse is released
returns the foreground color
returns the background color of this node
updates the view view
returns the next sample in the random range
returns the next sample in the iteration
returns the next sample in the sample
download the file name from the download file
returns a string containing the name of the file name
sets the interval for the
sets whether the delete should be automatically deleted
checks if the entity is already in the database
returns the spreadsheet
adds a header row to the table
returns the row header table
returns true if the user has changed state
deletes the selected cells
returns the status of the table
returns the file object
returns the string representation of this quad
sets the contents of the code book code
clears the contents of the page
compares cells to the cell
returns the index of the variable in the list
returns true if this is a numeric field
returns true if the data has data
write the current status of the file
returns the row number of the given label
returns the name of the file
returns the last non empty row
close the dialog
called when the application exits
returns the number of non empty columns
returns the variable name of the given column
returns a vector containing all the columns of this table
returns a vector of all column numbers
sets the value of the cell at the specified position
sets the column of the table
sets the column of the cell at the specified column
sets the row of the table
sets the current status of the application
returns the string to be used in the data
returns the comma separated list of comma separated values
returns whether the status has changed
removes the cell at row col
deletes the row at the given row
deletes the column at the specified position
closes the file
deletes a cell from the table
sets the default column widths for the column
inserts a row into the table
insert a column into the table
inserts a cell into the table
parse a string
get the column number associated with the given column
returns the label of the column
returns the row number of the given string
returns the last row number
sets the cell column for the spreadsheet
sets the data in the table
sets the label of the variable
returns the row number of the last row in the spreadsheet
returns the last non empty column range of the spreadsheet model
sets the data of the spreadsheet
sets the data to be displayed in the spreadsheet
set the data
sets the file to be saved
clears the spreadsheet model
insert the methods description here
insert row above or at row
insert row below the selected row
insert column into the spreadsheet
insert column at column position
converts a condition to a string
insert the methods description here
returns the number of alternative conditions in the given condition
insert a new cell at the current row
the cell below the cell at the current position
updates the header of the row header
selects all cells in the table
sets the name of the dialog
sets the help file
this method initializes this
updates the elements of the elements
updates the combo box
adds a component to the sidebar
clears the mutable table list
updates the columns in the list
adds a new to the
updates all columns in the list
adds a new spreadsheet to the list of
this method returns the inverse of the inverse of the distribution
returns the value for the x axis
this method returns the probability of the cumulative distribution function
this method returns the inverse of the inverse of the distribution
returns the probability for a given point
this method is used to calculate the probability for the cumulative distribution
this method computes the cdf for this distribution
this method returns the inverse of the inverse of the distribution
this method returns the inverse of the inverse distribution
this method returns the cumulative probability p
this method returns the inverse cumulative probability for the given x
returns the value for x axis
returns the status of the tab
this method returns the cumulative probability for the probability density
returns the density of the point
this method generates the cdf for the distribution function
this method returns the inverse of the cumulative distribution function
returns the value for the x
this method returns the probability for the cumulative distribution function
this method computes the cdf for this distribution
sets the selected status of the spreadsheet
returns the inverse cdf for this
returns the
sets the title of the currently selected tab
returns the average of the in the standard deviation
returns the lower bound of the distribution
returns the number of elements in this matrix
returns the cumulative probability
returns the margin between the and the
returns the critical value critical for the critical level
returns the number of in the
returns the error margin of the error
resets the title of the tab
returns the critical value critical for the critical
computes the correlation coefficient for the y axis
returns the linear linear equation
returns the title of the currently selected tab
test the linear statistic
compute the of the given variable
calculates the inverse slope of the slope
compute the sum of the y values of the y axis
returns the sum of all the
computes the x coordinate of the
returns the total variation of the
computes the y coordinate of the current
returns the sum of all the elements in the x y coordinate
returns the sum of all the elements in the x coordinate
returns the sum of all the elements in the y coordinate
returns the variation of the
returns the total variation of the average
returns the variation of this
returns the value of the variation ordinate matrix
returns the value of the variation ordinate matrix
returns the coefficient of the
returns the adjusted coefficient of the coefficient
returns the critical value for the given
returns the standard error value
returns the probability of the cumulative distribution function
returns the average of the statistics
returns the mean
returns the cumulative probability for the cumulative distribution function
returns the lower bound of the critical level
returns the value of the cumulative distribution function
returns the margin between the and the
returns the critical value critical for the critical level
returns the lower limit of the
returns the number of samples in the array
returns the upper limit of the upper limit
returns the center of the shape
returns the number of statistics in the given time
returns the mean of the distribution
returns the number of variables in this
returns the value of the cumulative distribution function
returns the lower limit of the distribution
returns the upper limit of the distribution
returns a string representation of this object
returns the x y coordinate
returns the average of the samples
returns the number of columns in this matrix
returns the of the
returns the probability of the distribution critical significance
returns the lower bound of the critical level
returns the probability distribution of the code solution code
returns the probability of the distribution
returns the mean of the mean
returns the probability of the distribution
returns the mean of the mean
returns the mean of the
returns the of the
returns the value of the cumulative distribution function
returns the average of the
returns the sum of all the
returns the of the
returns the
returns the number of in the
returns the of the
returns the lower bound of the critical level
returns the probability of the distribution
returns the average of the statistics
returns the margin of error
returns the critical value critical for the critical level
returns the number of in the
returns the number of in the
adds an observation to the observation
returns the number of in the
returns the mean value of the distribution
returns the value of the cumulative probability distribution p
returns the number of in the
returns the value of the critical critical distance
checks if the data set is a valid data
returns the cumulative probability for the cumulative distribution
critical critical min confidence
critical critical min confidence
returns the sum of all rows in the matrix
returns the lower limit of the lower limit
returns the upper limit of the upper limit
returns the format
returns the total variation of the average
returns the x y coordinate
returns the sum of all values in the matrix
adds an observation to the observation
returns the frequency of the ith field
calculates the average magnetic variation approximate deviation for the
returns the sum of two squares of the given values
returns the covariance of the
this method computes the sum of the y values
returns the sum of the ith row sum of the matrix
returns the sum of all columns in the specified matrix
returns the of the matrix
returns the sum of all squares in the sum
compute the chi square for the
returns the
returns the table
compute the sum of the of the
test the distance
compute the sum of all the squares in the
computes the mu
get the number of elements in this set
returns the correlation coefficient for the correlation coefficient
compute the sigma
returns the statistic value of the
returns the critical value
mu
returns the cr cr
returns the sum of squares of squares
returns the probability distribution for this distribution
compute the sigma
returns the probability distribution of the code solution code
returns the probability distribution for this test case
returns the of the
returns the value of the rank
returns the mean value of the distribution
returns the of the error
returns the statistics of the given
returns the critical value critical for the critical
returns the of the
returns the value for x
returns the value of the cumulative probability distribution p
for the x and y values
this method returns the inverse cdf for the inverse x
returns the value of this chromosome
returns the of the
returns the of the
returns the number of in the
returns the function number of the function
returns the unit call for this command
returns the number of in the
returns the number of in the
description of the method
parse the
prints the remaining number of bytes
returns the number of characters in the
returns the number of in the
returns the error message
consume the current token
returns the of the
returns a unit description
returns the number of bits in the
consume the column
returns the of the
returns the of the component
returns the probability of the
consume the number of tokens
method to create a new unit
returns the cumulative probability for this
returns the leaf units
consume the current token
returns the unit of this
returns the probability of the distribution
returns the next character
adds the listener to the chart
consume next character
returns the chart title
sets the parent of this node
restores the frame state to the default state
sets the image to be used for the clipboard
adds a dialog to the history
consume the next token
returns the dialog at the given index
returns the contents of this list model
this method initializes this
add a vector to the list
add a vector with a list of data to the list
returns the number of elements in this collection
returns the column number of the character
cancel the timer
adds a new paragraph to the list of the text
show the popup menu
adds a text to the kit
returns the number of dimensions in this map
returns the key of the given key
adds a text to the editor kit
returns the constant value of this block
sets the interval to be used for the interval
adds a new heading to the document
sets the status of the application
returns the value of the specified key
sets the status to unchanged
adds a category to the list
returns the string representation of the current character
returns the category name
returns the index of the specified category
returns the size of the list
returns the frequency of the
returns the frequency of the given
returns the number of characters in the character
returns the integer value of the character
writes the given file helper to the given file
clears the dialog
prints an error message
overwrite this to add to the editor
restores the status timer to the given number of seconds
sets the status label
set the status of the timer
clears the status label
adds a help file to the help broker
adds a help dialog to the help menu
set the title of the application
returns the log title
sets the current tab title
returns the title of the tab currently being displayed
closes the application
adds a new window to the desktop
remove the given from the list of windows
removes all the charts from the chart
returns the spreadsheet of the selected spreadsheet
returns the tabbed pane
returns the log text pane
returns the date time
shows an error dialog box
adds a log text to the log
adds a log heading to the log
adds a new text to the list of log
adds a code undoable edit code
clears the undo manager
runs the thread
plays the sound
called when the window is closed
copy interceptor to the given
adds a sub profile to the profile
returns true if the top level element is a top level level
clears the extent information
returns the string representation of the current
test method for
test that the database least multiple collections are correctly
test that multiple instances of the least admin fields are returned
tests access to the address access
tests the existance of the access to the data store
tests the access to the access to the access object
tests the access to the access
tests the collection access to the collection of buckets
tests the collection extent method
returns the button for the given form button
returns the widget entered by the user name
sets the report parameters
register a list of tasks to the list of tasks
sets the indentation per level override for this
sets the indent level
register a list of tasks to the given test
sets the number of spaces to use for indentation
returns the number of spaces to recognize for each indentation
sets the number of spaces to use for tabs
register a list of tasks to the list of tasks
returns the number of spaces to use for indentation
sets the number of spaces to indent the given spaces
returns the number of spaces to indent the spaces
indent the current line
register a new scheduling manager
register a new tasks queue
register a list of tasks to the list of tasks
register a new printer
print a string
register a list of tasks to the list
register a list of tasks to the local system
update the cache
returns the shared instance of the shared tasks
register a factory for the given service name
clears the factories
add a file to the list of known packages
returns the list of tasks
adds a child to this tree
checks if the file name is already imported
build the build file path
returns the unqualified name of the class
set the templates
sets the targets
returns the shared instance of the shared instance
returns the min operator of this operator
sets the method names
returns the maximum number of characters that this operator is
sets the method types value for this type
register a list of tasks to the list of tasks
returns the shared instance of the plug in
execute the parameters
register a factory for the given file
get the system property
returns the shared instance of the singleton instance
creates a source file
reads a file from the file
returns the flags of the
returns the html flags
register a new source
replaces the string with the given string with the given string
register a new source
returns the property keys for the given property
returns the ast for this ast
returns true if the string suffix is a suffix
returns the css stylesheet to use for the printer
returns true if the given filename exists
returns wildcard wildcard wildcard wildcard wildcard wildcard wildcard wildcard wildcard wildcard wildcard
returns a file object for the given url
returns the web maps of the map
accept the visitor
accept the visitor
prints the indentation of the line
returns a unmodifiable list of all the sources
print a single line
adds a source file to the source
write a portion of an array of characters
adds a list of sources to the list of sources
prints the given string to the end of the buffer
returns the next character in the text buffer
checks if the given cursor is end of a comment
returns a list of all the lines in this document
returns the body of the comment
returns a list of tags
returns true if the tag contains the given key
returns the original source
returns the sort columns
returns the table of the table
returns the behavior of the behavior
sets the sort columns
returns the hash code value for this
sets the value of the null behavior behavior property
sorts the component
returns a string representation of this object
sets the table of the table
returns the column order
sorts the table
returns the name of the column at code column index code
returns the data list
sorts the table
returns the value for the cell at code column index code and
sets the data list
sorts the combo box
initialize the window
load the list data from the given list of table
sorts the combo box model
validate the table
load the data from the table
sorts the table
sorts the combo box model
initialize the window
initialize the window
sorts the table
sorts the table
sort list model
initialize the window
sorts the table
sorts the table
sorts the table
saves the results to the given file
analyzes the graph and executes the dot
writes the graph to the given file
returns the value of the code value a code property
sets the value of value of this field
returns true if the graph is weighted by the
returns the value of the value b
sets the value b
returns the number of vertices in the graph
sets the parent vertex of this vertex
returns the number of edges in the graph
adds a neighbour vertex to the neighbours
computes the number of edges in the graph
adds a neighbour vertex to the neighbours
returns a graph object representing this graph
returns the number of neighbours the number of nodes in the
returns the vertex that is the degree of the
returns the number of neighbours
compares two vertices
returns the graph
increases the current level by one
writes the graph to the given file
returns the vertex of the vertex
returns the second vertex of the vertex
prints a list of lines
adds an edge to the graph
adds a vertex to the graph
adds a vertex to the graph
returns the vertex with the given name
returns the graph of the graph
unbinds the remote object
binds the given to the given
returns the
set cursor to the cursor position
record cursor position
binds the given to this
returns the value at the specified index
modifies an entry in the current position
selects the current element with the given text
sets the value of the given url
selects the current element in the tree
sets the value of the code code property
selects the element in the given diagram
prepend a string to the current instance
selects the current element in the current environment
creates a new
called when the user selects an attribute
set the namespace uri for the given url
returns the x value of the
returns the length of the buffer
returns the name of the
returns true if the is
returns the of the
returns the string representation of the expr
returns the value at the specified index
modifies an entry in the current position
returns the value of the element at the specified index
returns the value of the code code array
modify the entry at the specified index
returns the value of the code code array
gets the number of attributes in the current token
returns true if the ith value is unique
resets the internal state to its initial state
checks if the token is a text token
resets the pointer to the pointer to the pointer to the pointer
set the value of the
clears the buffer
returns the length of this buffer
returns the character unit of the given offset
returns the current depth of the current node
returns the current index of the current character
returns the encoding of the file
returns the nesting level of this node
returns the root index of the root element
returns the number of tokens in the current token
returns the token depth of the specified position in the buffer
returns the offset of the token
returns the xml document
returns the token type of the token
returns true if the attribute is an attribute
the url to the specified url
returns true if the given character is a whitespace
set the value of the
dumps the current state
checks if the given input matches the given input
clears the buffer
clears the data
the current state
returns the character unit of the given offset
remove the current element from the current element
remove an attribute from the token
returns the
returns true if the token is a token
returns the character unit of the given offset
parses the file
returns the current depth of the current node
parses the file
returns the current index
parses an integer
returns the token depth of the specified position in the buffer
parses a long from the given position
returns the root index of the root element
returns the
returns the offset of the token
returns the number of tokens in the current token
pops the stack and stacks it
returns the token depth of the specified position in the buffer
parses the file
pushes the stack and returns the stack of generations
returns the offset of the token
returns the xml document
returns the token type of the token
clears the
the given url
returns the offset of the current token
unbinds the remote object
creates a new
returns the
sets the cursor position
returns the record position
compares this book to another book
binds the given to this
declare a declaration of an expression
sorts the list
clears the list of
checks if the given input matches the given input
selects the current element in the current environment
sets the value of the given url
this method is called when the user selects a name space
called when the user selects a resource
sets the value of the specified url
returns the x coordinate of the
returns the name of the
returns true if the is
returns the string representation of the expr
called when parsing is ended
sets the at terminal
set the doc doc
returns the at terminal
returns the integer value of the i i i i i i
set the doc
writes the index to the given output stream
writes the buffer to the buffer
pop the stack and returns it
sets the cursor position
compares this book book mark to the given book book book
removes all elements from this collection
load the index from the input stream
the current depth
load the given array of bytes from the stream
sets the value of the specified url
loads the index from the file
pushes the current stack and pushes it onto the stack
clears the
binds the given to the given
returns the
compares the to the given book book
check if the url is a
returns the offset of the current token
sets the at terminal
checks if the token is a text token
set the value of the
returns the at terminal
binds the given to this
declare a declaration of an expression
returns the of the
returns the capacity of the
returns the value of the code code header
returns the value at the specified index
description of the method
resets the internal map to its initial state
select the text
select the comment
set the selected type to be used for the selected item
returns true if the token is a text token
returns the token depth of the specified position in the buffer
returns true if the attribute is an attribute
the url to the specified url
removes a code code from the list
writes the to the given output stream
remove the content of the content from the document
inserts a byte array into the buffer
writes the to the specified file
inserts a element at the given offset
returns the character unit of the given offset
returns the
returns the current index of the current character
parses the file
checks if the given input matches the given input
duplicates the
the
returns true if the token is a token
parses an integer
parses a long from the given position
output the file to the output stream
resets the hash map to the initial state
the
the
returns the current token
write the current document to the given output stream
compare token to string
returns the offset of the token
clears the
set whether white space is being used
called when the user selects the depth first
add a white space to the current character
the method code finish up code
format the line number
reset the storage
clears the data
converts a string to lower case lower case
returns the
add a white space to the current character
converts a string to a upper case upper case upper case
clears the
the method finishes the
emits a nav nav element
the
load a separate file from the file
creates a clone of this
returns the
returns the character unit of the given offset
converts a string to raw string
convert the value to lower case lower case
convert a string to upper case
converts a byte into raw string format
returns the token type
remove the content of the content
inserts bytes into the buffer
converts the given integer to a string
converts a string to a upper case upper case
converts a string to lower case lower case
write the index to the given output stream
emits a nav nav element
creates a clone of this
returns the
returns the prefix string for the ith token
the
converts a string to a upper case upper case upper case
converts a string to lower case lower case lower case
writes the index to the given output stream
write the current document to the given output stream
create a duplicate of the current
creates a clone of this
returns the regexp to be used to pull the schedule
refresh the list of news objects
the thread run method
this method obtains the remote interface
set the point of this point
adds a point to this point
resets the random number generator to the given value
puts the piece into the screen
returns true if the row is complete
resets the random number generator to a random value
clears the rows of the row
removes the row at the specified row
calculate the shadow and the shadow
rotates the fat
paint the block
returns the height of the given column
rotates the
sets the selected file
sets the selected files
adds a decision to the decision list
checks if the string is a valid
sets the current directory
adds a new pictures to the list
returns the decision i th decision
sets the default file to use for this file
returns the situation
returns the picture index
set the file chooser to use when choosing a
sets the owner component of this component
returns the current directory
returns the default file to be used for the default file
adds a row to the end of the model
removes a row from the table
remove all rows from the table
edits the selected row
sets whether the thread is stopped
the table
adds a decision choice to the decision list
adds a decision choice
adds a new mouse listener to the table
get the url of the current row
returns the decision choice for the ith decision
returns the decision choices
tests whether or not the given file is accepted by this filter
description of the method
updates the graph
clears the images
reset the coordinates of the image
this method returns the number of points in the random file
set the of the
sets the speed of the servo
returns the image away attribute of the object
returns the current scenario
gets the preferences object
apply the preferences to the preferences
apply the general settings to the preferences
close the
close the
loads the scenario music file
choose a new scenario music
plays a music file
plays a music
this method will be called when the test scenario is selected
this method is used to set the choices to be displayed
checks if the given node is a
checks if the given scenario is in the list
check the name of the gps
moves the flight to the next round
increments the round count
resets the to the initial position
reset the cash semaphore to the user
this method is called when the user selects a new
displays the message feedback on the screen
switch to the text in the current mode
adds typing components to the panel
adds the answer to the list of components
switches the mode to the target mode
adds a new music menu item to the playlist
sets the
sets the question
starts the thread
called when user press the user pressed the user
runs the playback
description of the method
sets the comp
returns the component that is being displayed
accept all extensions
accept all directories
gets the value of the public members property
get the timeline request
get the value of timeline timeline
get the value of the
load the theme from the given theme
get direct messages
returns the value of the code sent messages code property
destroy the service status
create a favorite
close the keyboard
verify the credentials
get the status of the request
get the request
post request to the server
this method is used to determine the post request parameters
run the specified query
create a string representation of the message
mark the time of the old records out
loads the connection
loads the
construct a code uri code object from a jsonobject
the old records
returns the number of
returns the credentials for this signer
returns the number of replies in the queue
returns the last time in the database
destroy the status of the given status
parse the status code
returns the date of the twitter date
returns a string representation of this duration
loads the theme from the given theme
sets the title text
update the title of the application
returns the saved text
sets the saved text of the text
this method is called when the user selects the
returns true if the current workbench platform supports hardware keyboard
bind to the service
disconnects the service from the server
destroy the service
handles a change event
called when a new data loading is being called
this method is called when the server has changed
this method is called when the server is changed
returns the current clipping area
sets the border
sets the border
create a new graphics object
returns the page with the given page
returns the current clip
initializes the page
returns the font at the specified font type and
initialize the page
set the image name
adds a new to the rss view
initializes the image
sets the author of the message
sets the creator
returns the graphics object for this graphics context
checks whether the specified font is equal to the given font type
sets the title
initializes this object
writes the current state to the stream
creates a new graphics context
returns the dimensions of the current page
returns the pdf pdf sample pdf
disposes the resources
clears the specified rectangle
set the keywords
draws the rectangle
adds a note to the
fills the specified rectangle with the current color
adds a link to the
fills the interior of the round rectangle with the specified rectangular area
draws a rounded rectangle
adds a new outline to the outline
add a page to the list
draws an oval
adds a outline to the outline
fills an oval bounded by the specified rectangle with the
adds a new to the
draws a polygon
draws a polyline
fills the polygon with the specified coordinates
draws an image in the img buffer
draws an image in the image
draws as much of its image as has been scaled
draws as much of the specified image as is
draws an image in the
draws as much of the specified image as has been scaled
clip the specified rectangle to the clip
sets the clip to the specified graphics clip
sets the clip to an graphics
intersects the polygon with the given
returns the clip bounds
sets the color of the
gets the font metrics for the font
this method initializes font
sets the font of the font
draws a string at the specified location
this method is used to set the value of the
translates the text to the
copies the rectangular area of the area provided by the
draws a line between the two points x1 y1 x2 y2
translate the current jpg by the given coordinates
draws an arc
insert the methods description here
the current point with the specified coordinates
insert the methods description here
the current point with the specified coordinates
set the width of the line
this is used to draw the polygon at the given position
draws a bezier curve
append a to the current point
this method is used to set the x1 y1
this method draws a set of to the current point
this method is used to set the x1 y1
this method draws a set of to the current point
returns the x y coordinate of the x y coordinate
returns the y coordinate of the point in the image
returns the string representation of the given number
returns the
returns the image for the given coordinate
open the notes database
create a new book for the title
delete book with given row id
return a cursor over the list of all books in the database
return a cursor positioned at the book that matches the given row
update book using the details provided
open the recipes database
create a new page using the title and body provided
deletes a book from the database
delete the note with the given row id
return a cursor over the list of all recipes in the database
return a cursor positioned at the page that matches the given row
update the details using the details provided
update the details using the details provided
this method initializes s shell
this method initializes browser contents
this method initializes j list sites
this method initializes j list articles
this method initializes j text area contents
this method initializes j content pane
configures the shell
this method is used to allocate the class for the
computes the probability of the transition probability
returns true if the current position is a move
update the
fills the array with the values in the array
accepts or the given object
normalizes the counter
sets the count for the given key
increment the count by one
increment the given count by a given collection
returns the total count of all entries in the cache
returns a string representation of this object
returns the number of elements in this collection
adds an element to the list
returns a string representation of this object
returns the capacity of the given capacity
writes this object to the given stream
returns true if the interval has reached the time
returns the capacity of the given capacity
writes this object to the given stream
computes the of the
returns the output file
returns the dump
returns the soft output to the output stream
parse the content of the code code
parses the alignments to the alignment of the line
speak the given text
connects to the socket
sets the block
speaks the given text
sets the pitch attribute of the object
returns the engine name
sets the text
sets the request type
returns the type of the request
sets the speech priority
returns the priority of the message
binds this socket to the server
stop the daemon
returns the message
sends a command to the server
returns the status of the
returns the ip address of the socket
return the port for this socket
returns the current
returns true if the echo is valid
sets the user name
returns the echo echo as a string
opens the connection to the server
initializes the socket
set the transfer mode
close the connection to the socket
sets the host name
set the local file to use for this file
returns true if the user is a passive mode
set the port number
set passive mode
set the pass word
sets the active mode
this method is called when the server is ready to receive
opens the connection to the server
opens the connection to the socket
counts the number of arguments
closes the connection
sends a command to the server
return the port for this socket
lookup commands
returns true if the command is a
close the connection to the socket
returns the input string
closes the connection
sends a file out of the socket
sends a file to the server
shows the echo
checks if the given echo is valid
show the version
this method gets called when a bound property is changed
loads all the servers from the list
saves the current list of the current file
returns the server object associated with the specified number
returns the index of the server
returns the number of server servers
adds a new server to the list
removes a server from the list
removes a server from the list
refresh the data list
removes all servers from this server
returns a string representation of this object
returns true if the file is saving the data
resets the data model to the database
this method is called when the property is changed
adds a listener to receive connection changes
removes a listener from the list of listeners
reset the authentication state
sets the add button
returns true if the connection is connected
saves the current list of properties
gets the value of the db local path property
add a master pair to the master
returns the master at the specified index
returns the ip address
this method gets called when a bound property is changed
returns the master
sets the master
returns a string representation of this object
set the authentication strategy used by this connection
this method is called when the user selects the process list
returns the table model
this method is responsible for querying the list of variables
returns the table model
shows the dialog
returns whether the input hidden flag is set
sets the expanded state
sets the component to be added to the container
returns the visibility of the root item
sets the split
sets the root item visible
sets whether the split pane is split
returns the selected item
returns the prior to the current item
returns the maximize object
sets the maximize attribute of the object
sets the value of the field
returns the key press key
sets the key press property
set the mount icon path
sets the user action listener to be notified when user action is
adds a listener to the global action listener
remove a listener from the global action listener list
sets the date
sets the current index
returns the scroll type of this
sets the scroll type to the given scroll type
returns the layout
sets the layout for this layout
sets the title
saves the current file to the given file name
saves the current data to a file
sets the text
returns the file info object
sets the icon for this menu item
this method initializes frame
sets the buttons
returns the component that this component is being inserted
show the dialog
returns true if the user can edit the content
show the dialog
closes the dialog
returns the component that this component is managing
this method is not supported
set the limit for the data object
adds an action listener to the button
returns true if the resize bar should be resized
sets whether the resize button has been resized
returns whether the current node is allowed to be downloaded
sets the map of file map
sets whether the current node can be allowed to reposition the
sets the current modal state of the dialog
returns the wait for window
sets the visibility of this frame
sets the checked state of this button
sets the user object of the component
returns the object id of the object
execute the command
returns the child of this node
sets the visibility of this grid
sets the name of the grid
sets the width of the grid
sets the align x coordinate
sets the format for the display
sets the comparator for sorting the grid
returns the text of the text
sets the text
returns true if the tree is selected
sets the root item visible
returns whether or not the header is visible
setter for property visible header
returns whether or not the panel is visible
sets whether or not the checkbox is visible or not
returns true if the full row is full
returns true if the sort is allowed
sets the sort allowed
returns the selected row
returns the prior to the current row
returns the frame
sets the current index of the current position
saves the current file to the given file name
sets the label for this component
returns the file info object
sets the component to be used for the given component
set the limit for the data object
returns the object id of the object
returns the grid box for this component
sets the grid box for this grid
returns the text delimiter for this view
sets the checked state of this button
sets the column index of the column
returns the parent of this grid
returns the index of the row
sets the child component for this grid
returns the sort comparator for this comparator
removes an action listener
fires an action event
sets the selected state of this item
sets the comparator used to sort the buttons
returns the image of the image
sets the image
returns a string representation of this object
sets the component to be used for the given component
adds an action listener to the button
sets whether or not the checkbox is visible or not
sets the checked state of this grid box
show the dialog
returns true if the grid is selected
sets the grid box for this grid
sets the child component for this grid
sets the visibility of this grid
sets the display name of this object
fires an action event to the listeners
sets the comparator used to sort the buttons
returns the value of the checked property
fires an action event
returns true if the tree is selected
returns the display name
sets the selected state of this item
sets the group
fires an action event to the grid
returns the selected row
sets the current index
sets the component to be used for the given component
sets the checked state of this grid box
returns true if the grid box is selected
sets the child component for this grid
fires an action event to the listeners
sets the align x coordinate
sets the comparator used to sort the buttons
fires an action event to the grid
returns the rows with the children of this node
returns the file info object
sets the visibility of this frame
adds a folder to the tree
adds a button to the button
sets the component to the right of the right
get the field with the given name
register a component to the component
returns the type of the given class
returns the next match in the list
called when the user selects to load the file chooser
returns the square of the given position
returns the distance between this square and the given square
returns true if the race is a friend
returns true if the race is a race
returns true if the race has an enemy
returns true if the race is in the race status
returns true if the given is not already in the
checks if the race is the same race
sets the race
sets the race
test method for
test that the destroy method is called
test the login method
this method is used to test the get element text method
test connect connect connect
releases the connection to the database
commit the transaction
rolls back the current transaction
closes the database
sets the auto commit flag
returns true if the result is available
returns the result of the execution of the
returns true if the result is available
wait for a result to be read
prints the given message to the console
accept the visitor
prints a message to the console
sets the value of the object
returns the value of the field
simplifies this expression if it contains the expression
this method is called when the error is encountered
returns the value of the field
sets the value of the object
returns the value of the field
returns the value of the field
set the value of the object
returns true if the parameters are not already in the
simplify the expression if it is a expression
sets the
gets the value of the property
returns the value of the field
get value from the
sets the value of the object
get the value of the field
simplifies this exp
simplify the expression expression if the expression is negated
this method is used to create a new object
sets the value of this object
the source code
this method is used to produce a single value
sets the value of the object
this method is responsible for returning the value of the field
the source code
this method is called when the scope of a scope is being
this method is called when the scope of the scope of the
this method is used to get the value of the field
simplify the expression expression if the expression is negated
sets the value of the object
this method is responsible for returning the value of the field
sets the value of the object
sets the value of this object
simplifies this expression if it contains the expression
sets the value of the object
accept the visitor
this method is responsible for creating the value of the tree
process the given type
simplifies this expression if simplify optimum is false
this method is used to get the value of the field
this method is responsible for returning the value of the field
the source code
simplify the expression if it is not already
simplifies this with simplify subtrees
description of the method
returns the value of the field
get the value of the field
the source node of the source node to the source
sets the value of the object
get the value of the field
simplifies this with simplify subtrees
initializes the transaction
initializes the query
create a new definition
creates a snapshot of the current session
updates the
returns the reservation for the reservation
create a table with the given table
drop the table
create a statement object
this method is used to get the value of the field
add a reservation to the reservation
set the reservation value for this
this method is called after the current transaction is committed
this method is called after the transaction is aborted
this method is used to determine the of the given
this method is used to get the value of the field
returns the used reservation for the given data
reads the server
this method checks the reservation against the reservation
commits the
returns a string representation of this object
rollback the
delete the data for the given trx group
post a new company conference
this method checks the reservation against the reservation
returns a string representation of this object
checks the reservation against the reservation
returns a string representation of this object
delete the data for the given trx group
post a new database trx post
checks if the given reservation is in the history
this method is used to check the table for a reservation
checks for reservation rights
returns a string representation of this object
checks if the passed reservation conditions are allowed
adds a new entry to the list
check if the given reservations op

returns a string representation of this object
post a new company conference
returns true if the session is logged in
process the message
renders the data in a string
create a new server process
returns the socket address
creates a session
this method is called after the command is executed
adds parameters to the parameters
adds a parameter to the list
configure the mappings from the configuration file
reads the mappings from the specified file
returns the parameters of the given class
read the mappings from the given input stream
add a list of commands to the table
process the mapping of the class
returns the text element of the element
returns the parameters of the given node list
starts the
returns the session id
stops the timer
returns the timestamp when the user has been created
execute the given command and return the result
adds a group listener to this group
returns the group view of this group
returns the local address
returns a list of all the
leave the channel
sends a message to the server
receives a message to the server
called when a message is received
called when the view is accepted
returns a list of group
converts a cid to a character sequence
returns the residue
returns the character to which this residue draws
tests the constructor of the constructor
test the hashcode method
test the constructor
test equals method
test for codes that
tests the extraction method
test method for
test case for
test that the of a is set correctly
tests general words of words of words in words
tests that the general general general general general general general general general
test full full full full full name method
test the match text
test the text match spacing
returns true if the current reading is an invalid
returns the pose
calculate weight for the peak
get the ith wave as a percentage of the original
returns the number of particles
returns the ith range of the range
returns the range of the given angle
returns the angle of the given index
returns true if the current state is incomplete
gets the num readings value for this
sets the range of the specified range
write the readings to the given output stream
read the readings from the data input stream
returns the ith particle
prints the readings to the output
calculate the weights of the particle
applies the movement to the particle
returns the angle of the angle
returns the estimation of the pose
moves the distance from the given distance to the distance
reset the
returns the bounding rectangle of the current shape
set the motor speed
returns the maximum weight of the message
returns the border
sets the speed of the servo
checks if the given point is inside this shape
returns the bounding rectangle of the bounding rectangle
dumps the size to the given output stream
set the sigma value
read the map from the input stream
set the distance factor for the
set the scale factor for the scale factor
sets the maximum number of iterations to be allowed
finds the closest point to the given coordinate
check if the platform is valid
write the class to the given output stream
read the class from the data stream
dumps the statistics
moves the robot to the wind
read the object from the data
auxiliary function to print out the information about the
moves the robot to the wind
rotates the angle around the given angle
returns the distance of the distance
returns the angle of the angle
returns the movement type of this object
returns the arc radius of the arc
rotates the robot to the given angle
sends a packet to the server
returns the input stream for this resource
receive a packet from the packet
receive an ack message from the queue
get the output stream
returns true if the packet is available
resets the packet handler to the next packet
returns true if the ack is available
close the port
open a byte in the destination file
sets the listen to the listen mode
returns true if the ack is available
close the underlying file
returns the error message
returns the number of bytes that can be read from the input
receive a packet from the packet
returns true if the packet is available
stop the timer
returns the data of the data
sends data to the server
sends data to the cockpit
returns a string representation of the given constant
set the address of the address
draws a circle
resets the counter to zero
this method is invoked whenever the is
moves the ball to the given radius
moves the distance from the given distance to the distance
set the pulse
sets the min angle
sets the maximum angle in radians
rotate the
rotate the current object
rotates the wall of the
this method is called when the solve is closed
rotates the camera by distance to the given distance
switches the current to the next one
this method is called when the is removed
set a new servo to the specified location
adds a servo to the servo
returns the servo at the specified index
sets the to the given mote
the
returns the at the specified index
this method loads all from the
this method unloads all the
set the sensors module
returns the distance in the current distance
sends a power on the to the server
returns the number of objects in the buffer
sorts the list by the given type
send the power off command to the server
sends the command to the server
sets the tracking mode
returns the color of the object
sends the command to the server
returns the rectangle of the given id
returns the distance from the to the
sends a command to the server
returns the x coordinate of the
returns the of the
returns the of the
returns the sensor module for this sensor
returns the number of segments in the curve
sets the number of pixels to send to the curve
returns the minimum distance between the and the
sets the minimum distance value for this
set the pulse
returns the minimum distance between the and the
sets the rotation of the
writes a value to the
set the address
returns the maximum number of
updates the data
sets the maximum value of the
sets the motor value for this motor
returns the maximum x coordinate of the upper left corner of the
returns the channel of the channel
returns the current motor value
sets the maximum value of the
returns the index of the at the specified index
returns the value of the button
sets the value of the x y coordinate
returns the index of the at the specified index
writes a value at the specified index
returns the turn rate of the given radius
returns the mode of the buffer
returns the index of the at the specified index
get the mode of the
sets the x y value
set the channel to be used for sending requests
set the channel three for the
returns the index of the at the specified index
set the channel four
sends the signal to the server
sets the x y value
the byte array to the specified byte array
set the pulse speed
get the degrees of freedom
returns the direction of the
returns the value of the sensor value
returns the servo at the specified location
called when the calibration is
returns the battery indicator as a int
sends a message to a channel
sends a command to the server
this method is called when the user presses the
returns true if the player is moving
creates a new port
wake up the thread
sets the type of the light
sets the delay in the
returns the steering value of the first steering
sets the type of the light
returns the average of the average
this method reads the from the i2 c
returns the of the
sets the pulse
returns the of the
returns the of the
read value from address
get the sensor status for the specified sensor
this method will be called by the
sends the message to the server
returns the of the
moves the receiver to the next stock
stops the receiver
set the speed of the hardware
returns the speed of the servo
set the port to be used for the
returns the number of raw
returns the at the specified index
returns the voltage
returns the voltage to the adc
returns the value of the light read
returns the light value for the intensity light
sets the
sets the power power supply power
sets the verify flag
returns the block
sends a message to the server
resets the block to zero
starts a program
stop the program
connects to the brick
returns the name of the nxt program
paint the component
paint the particles
draws the line
draw the pose
opens a file info object
returns the line of the arrow line
find the closest position to the specified x y coordinate
this method is used to calculate the particles
sends a command to the server
close the connection
the mouse has been clicked on the screen
close the file
this method draws the component
close the file
this method is called when the component is removed
connect to the nxt
prints an error message
delete the file with the given name
connect to the connection
connects to the socket
connects to a new headset
connect to a
get the battery level
close the
close the socket
writes the specified byte array to the underlying stream
nxt
close the socket
logs the given exception to the logger
logs the given message to the logger
write the byte array to the buffer
returns true if the given point is in the x coordinate
returns the length of the line
get the
get friendly name for nxt device
this method sets the friendly name of the device
returns the local address to be used for the socket
get the count of the
send a byte to the socket
writes the message to the inbox
plays a tone on the nxt
stops the playback of playback
disables the motor resuming
returns firmware version
delete the user from the pop3 server
this method is called when the reading of a read is read
clears the navigation bar
add a physics unit to the segment
reads the readings from the source file
returns the current state of the receiver
called when the button is pressed
resets the state of this object to its initial state
runs the action
release the resources
execute the command
returns true if the current thread is running
set the motor to the nxt
this method is called when the is paused
the time has changed
the card has changed
the card has changed
returns true if the given code code is passed
returns the address info object for this address
returns the extra info for the given urlconnection
returns the qualified coordinates of the point
calculates the azimuth of the given coordinates
returns true if the course is valid
sets the terminals course
sets the speed of the servo
returns the horizontal accuracy of the horizontal axis
returns the discovery agent
returns the friendly name
set the friendly name of the device
returns true if the user has been authenticated
returns the device class
set the discoverable status of the device
returns the current
returns the local bluetooth address
returns the service class
compares the specified object with this remote device
returns the major device class
stop the device
updates the movement of the tank
returns the projection of the projection
returns the particles
returns the estimation of the pose
opens the input stream
opens an output stream to open the output stream
returns the data input stream for this object
returns the data output stream to write to the output stream
close the stream
opens the stream
returns the signal strength of the signal
reset the sequence
get data from the buffer
send data to the server
sends data to the server
returns a string representation of the given address
set the address of the address
returns the port
stops the timer
sets the type of the
sets the type of this field
sets the mode
reads a boolean value
reads the value of the raw data from the input stream
read a value from the current file
get the name of the device
returns the command to be used to execute the command
returns the busy speed
returns the bluetooth address device address
returns the device size for the device
enable the
get firmware version
returns the version of the motor servo
deletes the current flash memory
delete the file
nxt program to start a program
stop the playback
returns the name of the current program
sends a message to the nxt
plays a tone on nxt tone
play a sound file
play a sound file
stop playback and stop playback
close the system
download a file from the given file
sets the sentence
checks to see if a file is valid
parse the content sentence
returns the speed of the servo
returns the time in milliseconds
returns the date
returns the number of in view
returns the number of tracked by this tracker
returns the terminals rotation in degrees
returns the satellite with the specified index
returns the quality of the fix quality
returns the terminals degrees of freedom
returns the date of the
returns the number of packets in the
returns the longitude character
returns the true course value as a percentage of the course
returns the altitude of the current point
returns the course
returns the speed of the player
returns the course of the course
setup the
returns the selected type
returns the of the sentence
returns the of the sentence
returns the of the sentence
close the connection
method to be called when a string is about to be displayed
returns the location of the bendpoint
add a listener to the list of listeners
set the rate of
returns the rate
selects the selected index
notifies all registered listeners of a key press event
resets the timeout to the timeout value
returns true if this is a caps lock
recalculates the modifier for the given code modifier code
sets the number of lines in the
sets the delay for the delay
sets the delay between the and the
sends a message to the server
sends a message to the server
returns the source of the event
adds a handler to this list
removes a handler from the list
this method returns whether the given event handler has been
creates a new
this method is called when the user presses the
returns the maximum priority of the
this method is called when the user presses the unbind to unbind
fires a pending event
return the minimum priority of the thread that is
returns the priority of the
this method is used to set the value of the boolean
this method is used to set the value of the boolean
returns the number of times that this will be transfered
sets the deadline
setter for arrival time queue method time
this method is not needed
set the arrival time queue length
adds a schedulable to the project
removes the specified schedulable object from the
this method is not yet supported
set the priority of the message
this method is not yet supported
this method is not allowed to satisfy the interface
returns the period of the task
returns the start time of the interval
sets the deadline
this method is not yet implemented
sets the period
set the start time
this method is not needed
compares this resolution time to another
returns the minimum
compares this object with the specified object for order
sets the minimum to the minimum time
description of the method
writes the close to the buffer
opens a connection to the socket
returns a data input stream for this data input stream
returns a hash code for this object
returns an output stream to write to this stream
returns an output stream for this socket
returns an input stream for reading the input stream
close the underlying stream
set the time to the specified number of milliseconds
set the millis of the given time
returns the bounds of this node
returns true if the given rectangle intersects with this rectangle
checks whether the given rectangle intersects with this
indicates whether some other object is equal to this one
returns the bounds of this rectangle
returns the bounding box of the polygon
returns the square of the distance between the point and the point
returns the square of the distance between the point and the point
returns the distance between this point and the given point
returns true if the specified coordinates are inside the boundary
returns the number of milliseconds to be used for the time
pushes an object onto the stack
tests if the interior of the rectangle intersects the
checks whether the line intersects the point
returns true if there are more tokens available
returns the next element in the enumerator
returns the next pseudorandom uniformly distributed boolean value
returns the next pseudorandom gaussian normally distributed
returns an enumeration of the elements in this enumeration
returns the bounding box of the polygon
print the string
prints the line to the output stream
writes the given string to the output
executes the command
returns the length of the file
close the stream
close the file
constructor for a string array
creates a new string string
constructor that takes a byte array
constructs a string of the bytes array
constructs a code string code with the specified bytes
returns the index of the specified string in this string
returns the id of the
returns the index of the last occurrence of the given string
append a string to a string
returns the index of the last occurrence of the specified string
append a string to the buffer
returns the hash code for this object
run the command
sets the value of the gauge
sets the max val max value
set the data
sets the raw val
sets the max value of the field
returns the number of rows in the model
sets the scaled value of the scaled value
sets the max scaled value
returns the value at the specified row and column
sets the type of the text
delete a file
returns the number of rows in the model
close the connection
reset the device
returns the value at the specified location
sets the value at the specified location
returns true if the cell at the specified row and column
returns the file name for the
returns the file info object
invoked when the target of the listener has changed its state
returns the number of files in the list
writes the given to the nxt
verifies the and
creates a new socket server
reads the data
reads the port
starts the parser
this method is called when the user presses the
creates the tabs tabs tabs tabbed pane
creates the tabs
creates the files panel
creates the panel
creates the files table
returns the number of selected elements
returns true if the selected is selected
this method is called when the user selects the next
this method is used to extract the file from the file
shows a message centered in the message dialog
updates the wind and updates the wind
clears the list of files
called whenever the value of the selection changes
updates the state of the connection with the given row
updates the connection button
returns the protocols
returns the protocol of the application
the
this method gets the sensor values
converts a byte array to a string
returns the digit of the given character
connect to the
append a value to the end of the vector
deletes all files in the database
upload a file to the slideshow
download the file from the file
runs the file
rename the given text
move the
sets the sensor sensor
plays the tone
resets the to the given
play the sound file
receive notification of the receiving
format the software and the current position
returns true if the given is in this one
compares this code japanese code and returns true if they are
checks if this object is before the given
returns the order of the current order
returns true if the given order is before the given order
returns a string representation of the given order
adds an object to the list
returns the value of the specified order
returns a string representation of this object
returns the order of the current one
returns the right sibling
test of round trip method of class
test 5
test of ideal ideal method of class
test of binomial round trip method of class
returns the lex order
returns the root of the tree
reset the pool
returns true if the collection contains the given element
returns an iterator over the tree nodes
returns an iterator over the values of the given set
adds an array of values to the data store
add a list of to the list
removes the
interrupts the thread
returns a string representation of this quad
remove the specified from the list
adjust the ideal adjustment for the adjustment
returns the root data object for the given object
returns the root data object for the given list
creates the
performs an insert operation on the user
opens the airfoil action
returns the duration of the duration in the duration
returns the day of the specified date
returns the concurrency for the given slot
returns the number of slots in the default slot
returns the for the given day
get the task for the given worker
returns the finish of the task
schedules a new schedule
returns true if the time is working on the time
returns the cost of the given
returns the rate value for the time
returns the day of the specified date
returns true if the work is
schedules the future schedule
returns the time in seconds for the given day
sets the worker filter
returns the start of the time interval
returns the time slot
sets the min time unit
returns the datetime at the time specified
returns the time value of the specified datetime
returns the interval between two
returns the interval between the last time and the time
returns the time slot
returns the unit factor for the given unit
returns the factor for the specified unit
returns the next unit in the calendar
add a new task to the queue
returns true if the time is working on the given time
checks if the time is a time
fills the task with the given task
schedules the initial schedule for a new schedule
adds a job to the queue
returns the maximum duration for a given category
returns the weight of the given category
returns the maximum value for a given schedule
returns the finish job
returns the finish value of the given job
returns the total cost of the given poll
returns the total number of jobs in the queue
get the initial slots that are at the given position
returns the slot index for the given slot
get the value of the option
sets the parser to use for parsing
returns true if this is a
checks if the current component is expected by the
returns the time in seconds for the given slot
returns the duration of the duration
adds a new work preceding the current work unit
sets the job
sets the tasks tasks
returns true if the is a skill
returns the duration in the specified duration
check if the skill is in this skill
get the value for the given
set the parser to use for parsing
returns the type of the fuzzy number
creates a fuzzy number
returns the number of
returns the code interval code for this code code
returns the difference between this and the given
divide the value by a second
make a matrix with the current
converts the given code value code to a code int code
returns the number of the given number
converts the given code value code to a code long code
returns the number of the given number
computes the norm for a vector
returns the delegate
returns the min value of the
returns the value for the value in the
checks if the given operator is an operator operand
set the info object for the given convergence
initialize the info object
sets the value of the
check if the current operand is a similar operand
returns the default estimate of the default estimate
check if a function is set
returns the default estimate of the default estimate
creates a new complex
create an instance of
create an instance of
create an instance of
returns the size of the cache size
compares this object with the specified number in the
divide a value by a number
returns the negative value of the given
initializes the rows of the table
checks if the given table is a square table
returns the matrix of the next
initializes the columns
creates a new matrix
creates a vector of the elements from the given array
creates a vector containing the elements in the given array
removes zero zero zero zero zero zero zero zero zero zero zero
returns the width of the current column
a matrix from the given matrix
writes a vector to the end of the vector
writes the vector to the current position
writes the number to the specified value
checks if the diagonal is zero
converts a double value to a string
applies the given elements to the given array
calculate the value of the value
override to override this method
fills the vector with the given vector with the given vector
returns a deep copy of this object
returns the number of the prototype
returns the length of the diagonal
sets the matrix of to the given vector
multiplies this matrix by a scalar
returns the column of the given column
returns the product of this product
returns the row at the specified row
returns the product of this product
set the degree of the polynomial
set the value of a
remove all extreme
sets the degree of the polynomial
sets the algebra representation of the algebra of the algebra
returns the elements of the list
returns the sum of all elements in the vector
the poisson distribution function
returns a new scalar value
sets the value of the given number
calculate the count of the given number of iterations
calculate the binomial coefficient
iterate over all the elements of the given iterator
calculate the value of the variable
checks if the value is a integer
calculate the value of the second argument
gets the value of the specified integer value
calculate the value of the value
sets the real representation
creates a partial function for the current partial function
iterate through all elements in the matrix
sets the mixed
returns the derivative of this function
this is a method that divides the value of the
sets the function value
returns the number of arguments
computes the average derivative of the function
returns the derivative of this variable with the values in the given
sets the steps step
iterate over all the elements in the group
sets the step number
sets the step value
creates a vector with the default values
sets the square of the square of the square of the square
sets the cache function values
returns the vector of all elements in the matrix
returns the determinant
creates a function with the given formula
creates a multi function stat
calculate the vector of all the arguments
calculate the sum of all the arguments
function to create a vector of derivative
sets the number of arguments
sets the number of arguments
process the element by reading from the specified
sets the elements to the specified array
calculate the arguments for the given arguments
returns the matrix of the given matrix
returns the number of arguments to the argument
sets the value of the variable base
sets the number of arguments to be used for the argument
returns the string representation of this object
sets the list of owned collaboration objects to use
sets the list of owned collaboration names to the given argument
sets the new
sets the array of owned collaboration names to the given arguments
sets the argument count
returns the index of the first occurrence of the specified name
initializes the coefficient matrix
returns the index of the first occurrence of the given name
returns a string representation of this object
the current algebra representation of the value of this algebra
sets the interpolator to use for the interpolator
sets the
sets the
returns the value of the constant value
returns true if the field is a constant
sets the function to use for the function
sets the function to use for the function
sets the operator to use for the given operator
returns the string representation of this object
returns true if the given operator is a operator
make a copy of the graphics context
clears the tree
returns the product of this matrix and its matrix
checks whether the string contains open bracket
sets the algorithm to use
checks if the given bracket is already open
calculate the maximum size of the given dimension
sets the text of this text
adds a bracket
returns true if the given root node is currently open
returns true if the given root node is already contained in the
adds a child to this node
all the of the
update table row heights
shift the current value to the current position
updates the table row height
shift all the items in the list
returns the height of the given row
sets the y coordinate of the point
returns the maximum height of the given child
this method returns the inverse inverse
converts the given value to a number
returns the of this complex number
returns the minimum height of the component
this method is used to set the value of the
returns the hash code for this function
adds a new variable to the set of variables
removes a variable from the set of variables
adds a formula to this list
removes the specified formula from this list
calculates the real size of the given code
discards the result from the last call to the result
get the derivative of the function
adds a new variable to the set of variables
removes a variable from the list
returns the value of the matrix
sets the formula
discards all the rows in the current directory
get the derivative of the variable
returns the derivative of the variable with the specified name
returns all of the
this method gets the second of the
get the derivative of the second derivative of the variable
sets the variable name
sets the formula for this test formula
discards the current result from the result set
returns the derivative as a string
sum of diagonal elements
returns the second derivative as string
this method returns the cast as a code tree root code
this method returns the second derivative of this expression
returns the derivative as a
returns the second derivative as a
returns the derivative of this constant
returns the second derivative of this
sets the power function function
draws the given code code
checks if a given string is in the
sets the root of the tree
sets the variable name to the given value
discards the current result from the result set
returns the value of the code tree root code property
description of the method
checks if the argument is a variable
process a argument
function to evaluate the function
returns the derivative function for the function
evaluates the given operator and returns the result
checks if the given value is a primitive value
called by the node if it is equal to the given argument
description of the method
returns a vector containing the values of the vector
creates a mult argument as a
draws the given graphics object in the graphics context

draws the
creates a new parameter
returns true if the matrix is symmetric
method for determining the power operator
returns the identity matrix
sets whether the power function is allowed to be used
returns the matrix of the given matrix
sets the argument value argument value
draws the bracket
sets the elements
returns the elements element
draws the root
initialize the list of
sets the formula
sets the elements to the given elements
sets the maximum iteration factor
sets whether exponential is a cobol check
returns the context with the given bracket bracket
returns the one of the elements
adds a new term to the
returns the context with the root of the root
called when the formula has changed
counts the number of elements in the specified element
evaluate the sorting of the given argument
creates a graphics object for the graphics context
updates the factor map
returns the add mode
initialize the info object
returns true if the given is a
returns the condition for the given operator
sets the spectrum bound method
returns the biggest
returns the spectrum bound method
compares this object with the specified argument
updates the value of the property
sets the value of var value
adds a scalar value to the set
returns the difference between this and the given
returns the value of the given function
divide this vector by a scalar value
returns the difference of this object
returns the inverse of this instruction
adds a list of variables to the list
returns a new number term
returns fuzzy number
calculate the combination of combination
returns a new number term
sets the value of a new
calculates and returns the fuzzy number
calculate the combination of the combination
set the value of the given
removes all variables from the list of variables
removes all variables from the list
add a new object to the end of the list
removes a variable from the list
sets the order of the order
calculates the error value for the given error
sets the write relative error
returns the value of the field
sets the function
this method is called to execute the operation
calculate the values for the values
returns the series default
returns the sum for the given variable
returns the of the given
writes the to the
returns true if the direction is forward
sets the value of the right part value
calculate the right part of the given position
sets the cache right part
computes the derivative of the derivative of the function
returns the default series
sets the interval between the two intervals
set the function to use
sets the value of the x coordinate
returns the
computes the derivative of the derivative of the matrix
returns the series of the series
returns the next element in the iteration
sets the function values
set the nodes to display in the grid
returns the degree of the degree
sets the degree of the specified degree
returns the basis of this object
sets the basis of this unit
returns the value at the specified index
this method returns the solver
returns the polygon grid
returns the value of the global value at the specified index
set the value of poly grid
returns the grid
set the solver to use
calculate the value of the integral value of the given value
returns the grid grid
initializes the solver
sets the grid to the given grid
create a new grid
description of the method
returns the number of dimensions in the grid
returns the number of stack packets
returns a point from the stack
creates a formula decomposition
sets the b algorithm b
creates a new object
initialize the solver solver
override this method to set the identity matrix
override to override this method to return the initial value
solve the solver and returns the result
returns true if the given code code is stored in the
begin user doc
sets the elements of the receiver to the given elements
calculates the factor for the given order
sets the solutions step solution
returns the delta vector for the given algorithm
sets the mode
sets the problem
sets the method
creates a vector of
stores the given point in the world
initializes the solution
sets the solutions components
sets the solutions component
this method initializes table table
add a to the
returns true if the symbolic font is a symbolic font
returns the for the given problem
copy the values to another result set
set the method
solve the format
sets the table
creates a new scalar value
this method initializes table table
returns a vector containing the elements in the vector
returns a matrix of the matrix
fills the array with some initial values
returns the arguments to the given point
returns the of the given
returns the number of columns in the receiver
sets the number of points in the map
calculates the difference between the and the
sets the scale bases
this method returns the next step method
sets the safety margin of the
calculates the difference between the and the
begin user doc
calculates the delta of the current time
returns the step of the algorithm
create a new context
this method returns the ode method for the step method
scale the x coordinate of the scale
sets the scale factor for the scale
returns the scale base value for the given scale base scale
returns the capacity of the solution
sets the empty solution
initializes the context for the given algorithm
sets whether to automatically create a new point
solve the problem
stores the given point in the data set
this method is called when the step count is pressed
sets the step method
returns the parent
sets the number of steps in the algorithm
returns the current step mode
sets the scale method
sets the
returns the
sets the step number
stop the simulation
returns true if the is a
wait for the wait time to wait for the wait time
set the value of maximum step
set the minimum step
set the default steps
clears the state of this state
returns the x value for the given x and y coordinates
checks the problem
sets the method
returns true if the problem is a problem
sets whether the problem is a check box
test if two instances are equal
sets the estimate
returns true if the given x is in the list
checks the given problem
interpolates the point with the given point
sets whether to solve the problem
initializes the
returns the dot product of two rows
calculate the deviation vector for the given
returns the parameter
sets the update
sets the parameter
sets the parameter
calculate the initial value for the given solution
returns the value of the code optimum em
checks the problem
returns true if the solver is before the given
calculate the initial parameter for the given

returns the initial parameter
sets the value of the constant parameter property
checks if the problem is
returns the parameters number of the current iteration
runs the simulation algorithm
check the problem
calculate the initial parameter
sets the bounds of the component
returns the of the
this method is used to acquire the error value for the given
checks the and the invariant
sets the number of
returns the system matrix
returns the initial parameter for the given function
check the of the problem
sets the spectrum method
returns the spectrum method
returns the precision for this node
calculate the step of the solver
calculate the deviation vector for the given
returns the initial parameter value
set the precision of the eps
sets the d
sets the max module of value
returns the maximum module of value
set the precision of this
sets the min module module value for this
returns the minimum module of the value
set the problem
sets whether or not the values should be checked
solve the problem
returns whether the is a check box
returns the method points number
returns the condition of the code code
checks if the is valid
returns the parameters method
calculate the simulation of the problem
sets the parameters
returns the parameter value for the given parameter number
check if diagonal diagonal is diagonal
sets the parameter to the given value
replaces the columns in the matrix with the given
replaces the given matrix with the given view
initializes the indexes array
changes the order of the given variable
returns the parameter for the given index
sets the parameter
method to set the solution to the given degree
returns true if variables are variables
returns the number of the iteration
returns the ith variable index
returns the parameter
returns the maximum element of the given row
replaces rows at the given rows
solves the given system
reset the counter
the given row and all its children
returns the matrix to be used to compute the multiplicative matrix
increment the counter
set the to the given
returns the parameter
sets the number of iteration
the problem
sets the parameter
sets the method to be used for the given method
sets the create solution
override this method to provide custom algorithm
get the approach to approach
returns the min problem solver
set the value of the code factor code
sets the initial estimate of the second
calculate the step of the
returns the next approach
calculates the factor for the function
factory method for instantiating the method
returns true if the given is a
sets the matrix to the given matrix
override this method to provide custom algorithm
sets the iteration method
gets the value of the iteration parameter method property
checks if the current iteration is trivial
checks if the given vector is a vector
calculate the vector of for a given vector
sets the parameter
sets the parameter
resets the counter to its initial state
checks if the given matrix is a matrix
sets the parameter
returns the parameter
set the parameter
sets the parameter to the given parameter
sets the parameter
returns the code vector code of the vector
set the problem
returns the initial initial parameter value for the given vector
returns the next legal value
calculate the problem function for the given argument
returns the function
calculate the step of the solver
calculate the matrix with the given vector
sets the value of the policy method property
returns the policy method
sets the matrix
calc vector vector
returns the diagonal of the given position
returns the matrix of the matrix
sets the matrix to the given matrix
sets the empty solution
returns the number of diagonal lines in this buffer
calculates the system
returns the number of dimensions in the tree
checks if the given function is a
sets the matrix
set the function to be used for the first
sets the multi matrix function of a multi dimensional matrix i
returns true if the next button can be read
returns the changed state
returns the element at the specified position in this list
returns the number of elements in this collection
returns the value of the values in the list
returns the value for a specific cell
returns the number of grid rows in the grid
calculates the value of the condition
this method returns the grid
calculates the value of the condition
returns the top condition
returns the bottom condition of the boundary
calculates the value of the condition
creates the right part of this list
returns the right condition
set the right part of the function
returns the condition factor for the first round
returns the left condition
set the of the
returns the condition factor for this condition
returns the boundary condition for the given condition
returns the condition factor for this condition
returns the condition for the given data point
sets the grid to be used for the grid
set the function estimate for the function
returns the initial estimate of the initial estimate
creates a vector containing the elements in the given array
sets the nodes
sets the x tick
returns the problem
returns the number of elements in this collection
build the solver
sets the solution
sets the step number
sets the step number
returns the boundary of this element
returns the x value of the step in the x axis
sets the boundary
sets the y value of the step
factory method for instantiating the grid
returns the point of the
sets the number of nodes in the tree
returns the width of the specified dimensions
sets the boundary condition
returns the y value for the y axis
returns true if the node is a boundary
sets the grid to be used for the grid
returns the number of nodes in the tree
sets the y coordinate of the upper left corner of the
returns the domain of this shape
sets the algorithm algorithm
returns the number of nodes in the list
returns the y coordinate of the upper left corner of the
returns the
returns the element at the specified position in this list
returns the point of the given node
returns the number of nodes in the list
create the pattern
returns the x value for the given node
returns the boundary scheme
prepares boundary scheme
returns the problem
sets the grid
returns the y value for the given node
returns the pattern of this pattern
sets the boundary of the bounding box
returns the condition that is met
returns the number of nodes in the specified dimension
sets the width of the boundary
sets the boundary condition
sets the right distance
set the right domain
sets the boundary condition
returns the border of the specified point
sets the
returns the index of the specified node
calculates the score for a alternative
returns the limits of the best score for a particular
returns the score for the given number of wins
returns the score for the nth element in the specified
adds a grade to the list of characters that are in the
sets the criteria info
sets the integer
add a criterion to the database
normalizes a value to a new one
returns the index of the alternative store
set the problem
returns the index of the given alternative alternative object
clears the groups list
sets the to string subject
sets the scale transformer
returns a code sorted map code containing the
sets the scale transformers
returns a problem similar to the problem
normalize a number
sets the
returns the score for the given alternative
returns the solution to the solution
returns the array list
returns the scores table
returns the key for the given group
returns the key for the given group index
sorts the groups list
returns whether the solution is
returns the estimate count estimate for the given number of
this method is responsible for setting the solution to the given solution
returns the solution to the default decision
returns true if the scale is a scale
returns a string representation of this object
solve the problem
sets the preference for the specified number of elements
returns the first of the given element
returns the solution to the solution
adds a criterion to the database
parse the data from the input stream
load the problem
loads the data from the given source
copies the genome genome genome from the genome
compares this genome with the specified object for strict
returns true if the dimension is equal to the given dimension
duplicates clones this object
compares two
sets the to the given
returns the
returns the number of evaluations
sets the score of the node
returns the score of the player
this method is used to perform the late conversion
sets the fitness value for this fitness
construct the
returns the fitness value of this chromosome
copies the genome from the genome data
copies the genome data into the genome
sets the global data
copy genome from genome to the genome
returns the global data object
copies the genome data into the genome
sets the custom data
copy the bits of the genome from the given
returns the custom data
duplicates clones this object
duplicates clones this object
set the evaluator to use
sets a gene to the given value
returns the evaluator
sets a data value for the given gene
initialises the
sets the
gets the value of the property
mutate this probability mutation
sets the mutator for this inspection
returns the mutator for this inspection
returns the value of the gene at the specified location
sorts the genome by comparing the fitness value
sets the comparator used to sort the objects
returns the comparator
sets the crossover
sets the crossover
returns the size of the data
returns the crossover operation
returns the crossover operation
compares this object to the specified object
sets the width of the image
compares this chromosome to another genome
evaluates the given genome
the genome with the fitness value
initialises the genome
set up the test
test of initialise method of class data
test method for
test method for
test method for
sets up the fixture for example open a network connection
test copy duplicate
returns the gene at the given index
sets the height of the component
copy the given object into the
duplicates this to the
sets the minimum of the resize behaviour of this component
sets the multiplier for this
sets the resize behaviour of the given code int code
copy the given into this
duplicates this object
copy the to the current one
duplicates this object
sets the multiplier for this
returns the
returns the resize behaviour of this element
copy the given object into a copy of the current
duplicates the object as a duplicate of the current object
sets the power power supply power
returns the power supply power
returns the resize behaviour for the given entity
duplicates this scheme
copy the given object into the
duplicates the object
initialises the population
copy a from the to the
duplicates the object
evaluate the population
evaluate all individuals in a population
duplicates this object
returns a string representation of this object
initialises the genome with the genome
returns the size of the object
initialises the genome with the data
add a new genome to the collection
removes the last genome
initialises the genome with the data
remove the genome from the genome
replaces the genome with the genome genome
replaces the genome with the given index
replaces the genomes for another genome
returns the best integration of the current object
returns the best rank for the given rank
returns the worst
copies the statistics of this object
duplicates the object
assigns the statistical values to the given population
returns the worst empirical distribution based on the given rank
swaps two elements in the array
returns the maximum value of the raw data
returns the raw raw value of the raw data
returns the scaled scaled value of the scaled scaled
returns the scaled scaled value of the scaled scaled
returns the of the given point
returns the population
sets the ordering of the ordering
implements the cloneable interface
duplicates the object to the current one
selects the next
duplicates the object to the current object
returns the
copies the given selector into the current state
sets the population to the given population
sets the basis of the territory
returns the basis of the
copies the given selector into the
duplicates the object
returns the current population
duplicates clones this object
returns the sorter
copies the given selector into the
duplicates the object
duplicates the current object
returns the population as a
sets the to the given
returns the type of the expected value
sets the definition of this object
this method is responsible for setting the key for the
returns the definition of this magnet
returns the previous parameter definition
returns the next parameter definition
loads the default parameters
sets the value of the given parameter
set the value of the parameter
compares this mbean definition with another object
sets the value of the given key
evaluate the condition
compare two parameter definitions
sets the value of the given key
evaluate the evaluation of the evaluation
sets the boolean value of the given key
returns the parameter with the given key
returns true if there are more elements in this enumeration
get the parameter definition from the given parameter
returns the next element in the enumerator
returns the next parameter in this enumeration
returns the parameter enumeration
set the evaluator to use for the given evaluator
returns an enumeration of the keys in this hashtable
configure the
tests the default constructor
test file with a file
test resource name
sets up the fixture for example open a network connection
test method for
test method for
test method for
test method for
populates the messages with the current token
sets up the fixture for example open a network connection
test method for
test copy constructor
tests the set bit string method of the underlying bit
the
test comparison of two bit strings
test method for
test method for
tests unset bit value
test that the bit range is rejected
returns the value of the property with the given key
test method for
this test checks for the default config
initialises the
sets the activation function
returns the activation function
allocates a connection to the connection
returns a connection pool object containing all connections
returns a connection pool object that will be used to
sets the output of the
returns the output value of the output
compares this object to the specified object
adds a layer to the layer
sets the
compares two network objects
sets the layer at the specified index
sets the layer at the specified index
returns the layer at the given index
returns true if the data is loaded
creates a connection to the layer
set the delimiter to be used for the given delimiter
returns the delimiter used to split the current cursor
writes data to the data
create a connection pool
returns true if the layer is connected to a layer
evaluates the given input
copy the connection
duplicates the object
train the given input into a double array
sets the value of the weight property
the of the
returns the weight of the value
creates a new object from the given
the number of in the
sets the incoming neuron to the given neuron
returns the from neuron
sets the to the given neuron
compares two network objects
returns the to neuron
find a connection
compares this object to the specified object
compares this connection to another connection
this method returns the neurons activation
sets the selection to use for the given selector
returns a string representation of this object
returns the string representation of this object
returns the selection scheme
seeds the random number generator
returns a string representation of this instruction
sets the length of the data in the data array
scale the current jpg object
logs the configuration to the log
returns the bit at the specified index
sets the scaler scheme
returns the scaled version of the scaled image
copy the current object
copy a binary form to the output
the data
returns a string representation of this object
sets statistics to the statistics
returns the statistics
compares this object to the specified object
compares this population with another
returns the filled time block
returns the number of days between two days inclusive
gets the value of the property
sets the
writes the given message to the log
returns the rights for the given center
returns the summary of the rights object
sends a ping to the server
detach this object from the set
returns true if the iteration has more elements
returns the next in this iterator
returns true if the iteration has more elements
returns the next element in the iteration
adds a new concept to the filter
adds a sub concept to this ideal
returns the intent size for the
returns the size of the extent
pop current token from current token
returns the number of objects in the list
remove a subscription from the list
stores the given window to the desktop pane
returns the element at the specified dimension
returns the number of attributes in the current activity
restores the window placement for the given rectangle
processes an event
puts a list of data into the list
process the subscription
puts a node in the preferences
this method is used to indicate that the result is set
returns true if the given concept has a super concept
sets the format used to render the graphic format
returns true if the given concept has the same concept
sets the size of the image to be used for the image
initialize the geometry
registers the specified code media type code to be used
set the auto mode for the current
get the format of the file extension
returns whether the canvas has the canvas position
returns the type of the specified graphic name
returns true if the is
returns the type of the file extension
returns the position of the canvas
returns the canvas of the canvas
returns the graphic format
returns the position of the
returns the awt position of the first element in this position
returns the canvas to position
returns the awt position of the mouse pointer
returns true if the current user has auto raise
sets the paint
returns whether or not the database should be automatically used
sets the grid paint
returns whether comments should be saved
returns the controller
returns the save comment flag
initialize the geometry
sets the save comments to file
removes the last element from the list
returns true if the iteration has more elements
sets the save comment to the given boolean
paints the canvas with the given graphics
returns the next character in the iteration
returns the next token
returns the last image in the file
initialize the image
sets the last image to export
raise an item to the canvas
sets the force color attribute of the object
initialize the
returns true if the color is set to false
returns the background item
sets the screen transform
returns the screen transform
prints the component to the specified graphics
show detailed error message
returns the item at the specified point
raise an item to the canvas
returns the coordinates of the given point
saves the configuration to the default file
clears the canvas
store the placement of the specified section
restores the placement of the given location
store a float property
adds a canvas item to the canvas
store a string in a section of the ini file
returns a string containing the key value from the ini file
store a list of properties to the given string
returns a list of all the items in the given section
adds a canvas item to the canvas
removes the specified canvas item from the canvas
adds a layer to the canvas
removes a layer from the list
returns true if the layer is already in the layer
returns the width of the grid cell grid cell
returns the grid cell height
set the grid cell grid cell to the given grid value
sets the grid enabled
returns true if the grid is enabled
returns the closest point on the grid
remap remap to remap
move the current span
returns the point of the point
called when the document is destroyed
build the menu bar
checks if the given inode is leaf
restore a map element
builds the toolbar
opens a file to open the knowledge base
returns true if the given node is after the node
opens the knowledge base
show the options
prints the graph
prints the diagram
test loading a config file with the current configuration
method to select a load by its caption
creates a new save button
returns true if this file can be loaded
returns the uid of the user
returns the icon of the icon
displays the message and waits for the message
returns the value of the code pass code property
checks if the current user can load
returns the command type
sets the locale of the current locale
returns a string from the buffer
displays the current message
returns the string value of the given key
returns the singleton instance
selects the item at the specified index
returns the selected image index
frees resources resources
returns the image by its id
load the source data source
show the dialog
saves the source of the data source to the database
displays the message and waits for the
sets the source of the given array of source
returns the size of the list
removes the source code from the list
appends a string to the end of the tags
appends a string to the end of the tags
returns the tag of this tag
returns the tag int value for the tag
returns the string representation of the tag
sets the selected tag
sets the selected tag
returns the selected tag
returns the selected tag
returns the selected tag string
save the data in the database
push a midlet to the current midlet
sets the directory
pushes the splash off of the splash screen to the
pop the last item off the stack
show the last midlet
replaces the current screen with the current one
replaces the last splash of the current
displays the form
displays the splash screen
sets the timer
returns the current dir
enter the directory name
returns the singleton instance
returns the number of records in the pool
this method is used to read the data from the list
returns the name of the result
checks if a given name exists
returns the directory for the given directory
delete the record record from the database
returns the database object
returns the number of encryption decryption algorithms
returns the date of the
saves the current state of the database
deletes the database
returns the date of the
sets the progress of the progress bar
clean up the resources
creates a new
changes the master key to the specified value
returns the username
processes the command events
sets whether the auto save button is enabled
returns the last directory
sets the last directory
returns the watch time out
sets the timeout for the
returns true if icons are disabled
saves the current record to the database
sets the icons disabled
set the search by
sets the last opened time
returns true if the last opened file is opened
returns the number of encryption decryption algorithms
sets the number of in the simulation
returns the string representation of the given key
returns the header
returns the group with the given id
returns the group parent with the given id
returns the group page of the specified group
search for the specified title by the given title
this method is encountered
returns the entry at the specified index
returns the group with the given index
returns the entry with the specified index
returns the length of the group at the specified index
test method for
returns the length of the entry
mark the group as deleted
deletes a group from the group
deletes an entry from the queue
add an entry to the queue
update the group at the given index
update the entry at the given index
returns the unique group id for this group
resets the change indicator to the default value
the watchdog thread to the
release the
throws an exception if the lock is interruptible
returns true if the document is locked
returns the size of the content
returns the input stream for the input stream
utility method to populate a bean with the given object
setter for property type change listener
this method is called when the upload is about to be downloaded
this method is called when the rendering is closed
sets the selected panel
the action to be triggered when the user presses the button
processes commands and processes
starts the connection to the server
stops the connection
checks if the given class name is a class
notify the connection to the incoming message
read a property from the current file
add a line to the list of the destinations
processes the message
called when midlet is started
this method is called when the user selects a message
called when midlet is destroyed
handle the event when the command action is performed
returns an initiliazed instance of imagem component
returns an initiliazed instance of back command component
returns an initiliazed instance of exit command component
returns an initiliazed instance of form component
returns an initiliazed instance of ok command component
returns an initiliazed instance of telefone component
returns an initiliazed instance of ok plate component
returns an initiliazed instance of mensagem sms component
returns an initiliazed instance of task component
returns an initiliazed instance of component
returns an initiliazed instance of ok imagem component
for
at startup create and show the main frame of the application
invoked when the mouse has been clicked on a component
sets the name of the field
sets the width of the frame
sets the framing rectangle to the given rectangle
sets whether the frame is highlighted
sets the highlighting color
add a new list of tabs to the list
sets the bounds of this component
sets the bounds of this component
sets the size of the frame
sets the size of the window
concatenate this pair with the current state
loads the images from the input file
returns a string representation of the current record
checks if the is left
checks if the piece is a piece
copy values from the given code to code two code
returns the white turn
sets the turn
copy the changes to the given values
test the of a
test the
checks if the current user is available
this method is used to get the request parameters
returns a string representation of the list
exit the application
returns the value of the cell editor
returns true if the list contains selected item
marks the text as being
sets the text
sets the selected item
lookup the pattern
checks if the given string is a regular expression

this method returns the of the
the junit setup method
this method is called when the user presses the
compares the values of two objects
tears down the test
setup the test
setup the test
tears down the fixture for example close a network connection
create the dialog
creates a new shell
creates the text box for the package text
creates the directory text box
tests if the current workbench selection is a suitable container to use
uses the standard container selection dialog to choose the new value for
called when the user changes the changes to the
adding the page to the wizard
reads a file from the given file
this method is called when finish button is pressed in
creates a new file
creates a text file control
reads a file from the given file
creates a text box
creates the package control for the given package
updates the rules
handle the event when the property is changed
sets the background color
creates the source viewer
this is a callback that will allow us
this just records the information
verify that the text field is not a
returns the source viewer of this viewer
uses the standard container selection dialog to choose the new value for
called when the user changes the preference store
sets whether or not to use soft tab
sets the width of the soft tab width
customize the document
set completions for a list of completions
returns the end of the given position
finds the start of the document
method to change the color of the text
returns the content assistant
this method is called when the user clicks the scanner to be
updates the content assist panel
returns the label provider
this method is called when the input is changed
returns the content provider
removes the given listener from the list of available listeners
adds a new listener to the space
returns the number of procedures in this list
returns the resource
kills the current connection
validate the database
this method is called by the application when it is
clean up the cache
closes the timer
locks the specified index
releases the lock
starts the timer
returns true if the lock is locked
returns the node at the specified index
cleans the nodes
sets the node at the specified index
checks if the given node is cleaned up
returns a connection to the pool
returns a connection to the pool
get the number of the
kills the resource node
closes the pool
returns the resource
closes all the
this method is used to get the resource
kills the resource
prints the state of the given key
returns true if the resource is a resource
closes the pool
returns the resource
this method is called when the lease is finished
verify that the pool is already in the pool
this method is called when the lease expires
close the pool
get the connection
returns the lease time
clean up the database
print the state of the given location
returns the last time the was last used
returns true if the is in use
starts the pool
initializes the applet
resets the lease to the last time
checks if the node is a node
initialize the node
returns the state of the given location
initializes the mail
log a message with the given name
called by the to indicate that the
this method is used to set all the appenders
shuts down the
setup the mail system
setup the log file
returns the trace message for the given exception
add a new criterion to the criteria
returns the parent of this object
returns the alias of the expression
adds a criterion to the criteria
add order to criteria
sets the max results
sets the first result
returns a list of the objects that are associated with this
returns the name of the property
test the constructor for resource null
test constructor with null argument
tests the release resource method
test method for
test method for
test constructor with null argument
test the constructor
test constructor with null
test method for
test the constructor
test method release
tests the resource manager
test method for
test method for
test method release resource manager
test method for
tests the functionality of the
test method for
tests the functionality of the
test constructor with null
test constructor with a string
set the resource factory name for this resource
sets whether is allowed
return the resource impl for the given resource
test the constructor list exception
returns the name of the resource factory
returns the number of resources allocated by this instance
test constructor with null class
releases resource resources associated with a resource manager
test constructor with null argument null
release resources allocated by the resource manager
test constructor with a new
tests the add collection collection method
test of constructor of class constructor
checks if the resource is capable of trying to use the resource
test ordering of ordering
tests the add collection method
test ordering of elements
set the name of the resource factory
test that the ordering of the method throws an exception
returns the resource factory name
creates a proxy instance
test remove int
test constructor message
test constructor and
test method for
tests that the constructor correctly evaluates if the constructor is valid
test constructor object null constructor
test method for
test constructor with null name
test method for
set up the test
test constructor with calling default constructor
test method for
test that ensures that the constructor throws an exception
test method for
test constructor with constructor
a unit test for junit
test that the is not null
tear down the test
test the action performed method
a unit test for junit
test method for
tests that the grid span correctly falls on the grid
tests the no components
runs the on worker thread
test method for
test join join
tests the upper case of a document
tests the no components
test the constructor
test the upper case of a null string
verify that the horizontal alignment is illegal
test split at first position
tests that the document is limited correctly
test the constructor
tests that the document length is limited correctly
test of make constraints method of class net
test that the document limited to a document is limited
test method for
tests that the document can be used
test method for
tests the constructor of the constraints
adds a document to the document
test method for
test replace with a single string
returns the text of the document
tests the constructor
test method for
tests the layout of the different components of the layout
tests create proxy without arguments
test method for org
test method for
test the constructor
executes the given command
tests the of the constraints of the foreign key
test method for
test the constructor
test method for
test constructor object null value
test that the store command is executed when the
test method for
test method for
test method for
test method for
a test for a register command with a
test the method that is called when an incorrect connection is returned
tests the code null code method
test the constructor
test constructor and getters
test method for
tests the constructor that will be invoked to store the
test the equals method
tests the service object store command
test method for
test method for
tests the add component method
test method for
tests the constructor of the constructor
test method for
test method for
test method for
tests the add component method
tests the add string method
sets the value of the code java
tests the remove component method
sets the designated parameter to the given code java
tests the remove method
sets the designated parameter to sql code null code
retrieves the value of the database designated column in the
sets the boolean value of the designated parameter with the given name
returns the more results for this code result set code object
test method for
sets the designated parameter to the given code byte code value
wraps a given result set
returns the generated keys
sets the value of a parameter
test method for
executes the given sql statement
sets the designated column in either the current row or the insert
sets the value of a parameter
executes the given sql statement
retrieves whether this database supports correlated identifiers
executes the given sql statement
executes the given sql statement
updates the designated column with a code java
retrieves whether the database supports named parameters
sets the float value for a parameter
executes a sql column
sets the value of a parameter
executes a sql statement to get a single property
updates the designated column with a code java
retrieves the current result set holdability
retrieves whether this database supports multiple
sets the value of a parameter
updates the designated column with a code java
adds a new code remove code to the layout
sets the value of a parameter
retrieves whether this database supports using the delegate
sets the designated column in either the current row or the insert
sets the bytes of the header
sets the date in the database
updates the designated column with a code java
sets the time of the given code java
returns the number of open statements
sets the timestamp
sets holdability of connection delegate
updates the designated column with a code java
retrieves the current holdability of this code result set code object
sets the designated parameter to the given code java
delegate method for
sets the savepoint
sets the designated parameter to the given code java
rolls back the given savepoint
sets the value of the designated parameter with the given parameter
releases the current savepoint
sets the value of the field
sets the value of the field
sets the value of a parameter
prepare a connection
retrieves the current jdbc major version number
prepare a statement for use in the connection
sets the value of a date
delegate method for
sets the time of the given code time code parameter
retrieves the minor version of this database
sets the designated parameter to the given
test of equals method of class org
retrieves the number of open
test method for
creates a expected method name
test method for
a unit test for junit
a unit test for junit
a unit test for junit
sets the designated parameter to sql code null code
sets the resource bundle values
tests the paint functionality of the color set
get localized resource name
tests the hex line color in hex
test method for
tests the error handling of the error handling
test method for
tests the handling of the error handling
throws an exception if the given exception is thrown
description of the method
retrieves the number of open
test method for
description of the method
description of the method
retrieves the value of the designated parameter as a string
this method is not supported
retrieves the number of open
retrieves the value of the designated parameter as a boolean
test method for
tests that the layout of the alignment is correct
test of constructor of class com
test of constructor of class com
this method is called from the framework
test the action method of the
tests the of the action keys and custom keys
test the constructor
test the constructor
test small icon for small icon
test of constructor of class com
test the constructor
test the constructor for null values to null
test the worker
test method for
retrieves whether this database supports statement pooling
returns the mock object
collect the information about the incoming message
wraps a value
called when an exception occurs
test method for
wraps a value
wraps a value
wraps a boolean value
sets the vertical alignment of the text area
test method for
sets the horizontal alignment of the icon
test method for
test method for
gets the value of the designated parameter as a string
tests that duplicates are duplicates
paints the component
retrieves the value of the designated parameter with the specified
sets the background color of the row
sets the padding
sets the margin of the margin
set the border style
sets the border thickness
retrieves the value of the designated parameter as a reference parameter
returns the locale of the current locale
called when a terminated task is encountered
gets the blob value for a parameter
sets the component loader to the specified component
called when the task is completed
remove a listener
returns the component that is being used
sets the default key
sets the long description
called when the locale is changed
returns the value of the specified column as a
sets the mnemonic key
sets the name of the action
returns true if the row is expandable
convenience method for getting a localized string
sets the value of the code code property
sets the small icon
returns the small icon key
get localized locale name property localization
converts the specified input string to a string
returns true if the column is expandable
retrieves the value of the designated parameter
processes the given attribute
helper method to handle the given attribute
processes the padding attributes
returns the print stream to use for printing
returns the icon for the specified path and icon
parses the border style
parses the size of the given string into a double
parses a color string
this feature is not supported
returns the insets for the given border edge
set the names of the resource bundle names
this feature is not supported
creates a new label for the given
creates a new label for the given code
this feature is not supported
returns true if the specified role is already in the role
loads the component
creates a new text field
adds a new action to the toolbar
removes the specified component from the layout
adds a gap to the table
test of m method of class plsql lexer
creates a new password field
sets the button
localize the components localization
the controller
creates a new frame with the given name
create a new jbutton
create a new icon button
set the logging prints stream
creates a checkbox
returns a new
adds the list of elements to the list of elements in the
removes the row elements from the list
creates a new menu with the given name
prints the given message to the print writer
creates a new menu
creates a menu item for the given action
move the screen to the center of the specified window
returns the minimum height of a row
returns the screen size
returns the minimum column width
returns the parent of this node
checks if this role has a role
returns the layout constraints for the given component
start the controller
removes the controller from this spatials list of
returns a collection of all the controllers that have no
returns the minimum size of the component
returns the application
returns the maximum size of the component
returns the preferred size of the component
adjust header sizes
returns the table layout entry with the specified row and column
returns the value of the the code king at code coordinate
returns the current jframe that is currently used to create the
compares this object with the specified object for order
returns the king at the given coordinate
this method initializes j content pane
this method initializes start button
this method initializes j scroll pane
returns the history text area
parses the opponent move
checks if the prompt is a move prompt
returns the sql query to the given id
load the database
this method loads the data from the database
this method is used to set the for the given id
saves the database to the database
deletes the dao
deletes the database and the given id
returns the location of the file
returns the number of files
returns the number of time the message is stored
gets the value of the routing code size property
compares this object with the specified object for order
returns the body image
returns the gun image
returns the radar image
returns the selection panel
opens the browser window
packs the given window to the center of the specified window
this method initializes back button
this method initializes cancel button
this method initializes finish button
this method initializes next button
this method initializes available robots scroll pane
this method initializes this
this method initializes dialog content pane
this method initializes table
this method initializes robot dialog content
this method initializes console scroll pane
this method initializes button panel
this method initializes new battle dialog content pane
returns the rules tab
this method initializes this
this method initializes paint button
returns the selected robot selection panel
this method initializes pause button
creates a new jbutton
clears the button action listener
kills the robot
paints the button to the
the check box
pause the battle
returns the team package name
starts the dialogue
this method initializes this
this method is called when the battle view is resized
this method initializes main panel
this method initializes battle view panel
this method initializes j content pane
this method initializes side panel
this method initializes pause button
returns the next turn button
this method initializes stop button
this method initializes restart button
returns the tps label
this method initializes tool bar
sets the iconified flag
clean the static references
remove a reference from the given field
returns the mixer mixer
find the mixer for the given
disposes the resources held by this component
plays a sound
plays the given
plays the theme
plays the background music
stops the background music
plays the battle music
calculate the volume of the given
calculates the total score of the score
sets the robots selected robots status
returns the initial positions of the initial positions
count scores and total scores
compares two strings
initializes the server socket
pushes a matrix to the current matrix
this method loads the
scale the current scale
rotates the camera around the x axis
rotates the current jpg image
rotates the current by the given angle
returns the value of the vector as a mult
creates a new round
adds a new primary to the scene
adds a to the scene
setup the graphic listener
updates the scene
returns whether the user can draw the names of the others
returns whether or not this is a fault
returns the heading of the robot
returns the name of this user
returns the velocity of this bullet
returns the victim
sets the velocity rate
returns the velocity rate
sets the turn rate
returns the current turn rate
sets the turn rate in radians
returns the current turn rate radians
set the gun rotation rate
get the gun rate
sets the gun rotation rate radians to the given value
get the gun rotation rate radians
set the radar rotation rate
returns the robots body around the bodys position
returns the radar rotation rate
returns the heading of the body
sets the radar rotation rate in radians
gets the gun heading in radians
returns the radar rotation rate in radians
returns the gun heading
returns the radar heading in radians
returns the radar heading
moves the robot to the specified distance
gets the value of the turn remaining line b property
moves the cursor to the given distance
returns the amount of degrees remaining to the
gets the value of the radar turn uids
returns the number of radar turn in the radar radar
gets the gun remaining turning em gun attribute
this method is called when the is terminated
returns the amount of degrees remaining to the
this method is called when the user is being removed from the
returns the distance remaining to the
returns the results of the search
returns the of the gun
fires the event
fires the event to the
broadcasts a message to the client
sends a message to the socket
returns the name of the class
returns the heading of the bullet
returns the heading in radians
this method sets the bodies colors to the specified color
this method is called when the is a gun
turn the robot ahead
moves the robot right to the specified turn
compares this event to another event event
turn the left back left turn left
turn back the right turn ahead
rotates the gun facing to the specified coordinate
returns the name of the version
returns the full name of the class
rotates the gun facing to the specified degrees
returns the jar file
returns the webpage
returns the author name
returns the team id
moves the robot to the given distance
returns true if this is a thread
turns robot gun to the gun
returns true if this robot is hit by a robot
returns true if this wall is hit
returns the battle rules
returns the robots count
moves the camera to the given distance
rotates the player around the given turn left
returns the replay flag
returns the current turn snapshot
returns the value of aborted
returns the start snapshot
rotates the player around the specified position
returns the width of the
turns on the robot to the given angle
returns the height of the
returns the
returns the direction of the spacecraft
returns the distance remaining to the pencil
returns the height of the sprite
returns the amount of turning left to the left turn
returns the width of the
returns the amount of degrees remaining to the
returns the name of the peer
returns the current radar turn in degrees remaining to the left of
returns the x coordinate of the left side of the
sets the distance between the robot and the
returns the y coordinate of the current position
sets the current turn left
sets the current turn right
rotates the current player by 90 degrees
sets the power supply firing this event
returns the score of the score
returns the of the
returns the last bonus for this
returns the bullet damage
returns the bullet damage bonus
rotates the current player by 90 degrees in radians
returns the damage count
returns the damage bonus bonus for this weapon
sets the bullet
returns the skipped turn
fires the event to the listeners
adds a new condition to the list of custom abilities
method for the
returns the gun
removes a new code condition event code from this code code
returns the gun heading
clears all events from the current view
returns the current of the gun
executes the command
returns the number of rounds in the current peer
returns the directory where the directory is stored
returns the number of others in this
returns the file associated with the given filename
returns the radar heading for this
returns the quota available for the data
returns the number of in the
returns the priority of the event
determine if the gun is a adjust gun
returns the velocity of this
returns true if the robot turn is adjusted to be adjusted for
determine if the gun is set to the current gun
sets the priority of the event
sets the maximum velocity of the current simulation
sets the resume state
sets the stop flag
sets the gun turning gun to the given gun
called when the peer is scanned
sets the gun to turn the gun
turn on gun on robot turn on or off
sets whether the robot turn to adjust the turn for robot turn
sets the radar radar radar
set the radar for turning radar turning turn
sets the radar radar radar radar radar radar
waits for a condition to the deployed
called when the application is about to be shut down
returns the heading in radians
sets the turning left coordinate of the current turn
sets the body color of this body
sets the turning right right right right
set the gun color
rotates the left by radians
rotates the right by the given amount
sets the radar color
get the gun heading
sets whether the paint is enabled or disabled
sets the bullet color
returns the radar heading in radians
sets the output stream snapshot
returns the arc scan
returns the graphics handler
sets the gun turning left gun to turn the left in radians
set the color of the scan
sets the gun turning right to right
stops the server
sets the radar radar left by radians
resume the peer
sets the radar right radar
rotates the gun bullet by the given gun
rotates the gun to the specified turn
rotates the gun to the left of the gun turning by radians
turn the radar to the radar radar video
rotates the gun to the right of the gun
turn the radar right down by degrees in degrees
rotates the radar by the radar facing
returns the energy of this node
returns the graphics object that is used to draw the graphics
moves the radar radar to the radar
sets the debug property for this object
returns the amount of the gun remaining turning to the current turn
returns the radar turning by turning the amount of the current radar
returns the current turn remaining in radians
returns the active robots active
returns true if the thread is currently running
runs the game
called when the robot is scanned
main method to run the gun
called when the robot is scanned
draws the oval
called when a robot is hit
go to the top level
called when a bullet is hit by the bullet
called when the robot is hit
runs the
creates a view
called when the menu item is selected
this method initializes undo handler
gives notification that an attributes or set of attributes changed
gives notification that there was an insert into the document
gives notification that a portion of the document has been removed
moves the selected text to the current selection
clean up the mess
writes the given byte array to the output stream
returns the string representation of the resource
returns the resource resource that contains the given string
returns the first character of the string
parse the vocabulary
returns the ontologies
generates the generation of the given catalog
returns the media based media based on the current
sets the media time offset
returns the current pattern
sets the text of the dialog
finds the local local files for the specified array of local
sets the activation window
initializes the view identity properties view
set the view to be used for the given class
handles the loading of the media time
removes the component with the specified component and its sizes
adds a component to the container pane
returns the x coordinate of the current screen
maps the x coordinate to a map
returns the y coordinate of the y coordinate in the map
sets the default close operation
this method is used to display the content of the window
sets the preferred size of the component
this method is called when the engine becomes running
returns true if this is a shutdown
sets the layer of the layer
returns the layer of the layer
sets the location of the image
called when the application menu is clicked
close the object
sets the status of the to the given root
returns the node under the node
returns the tooltip for the given mouse event
paints the component
checks if the given node is compatible with this node
sets the updater for this code code
returns the size of the node
returns the node
returns the size of the buffer
set the values of the and my
switch to a vertical axis
register the shutdown listener
show the frame
show the
returns the selected track area
sets the selected track area
returns the current time in milliseconds
handles the event indicating that the has been changed
sets the annotation set changed
invoked when a component gains the keyboard focus
handle the event indicating that the given offset is changed
show the frame
starts the thread
creates a new annotation area
adds a new listener to the list of
notify the listeners that a new time has been changed
notify the listeners that a new time has been changed
refresh the properties of the properties
get the track number from the
adds the object properties to the object
called when the explore object is selected
the model to the given model
add waypoints to the waypoint
adds a track to the tracks
compares this nobel date time to another time
converts this time to seconds in milliseconds
adds a waypoint to the placemark
get the waypoint
compares the column of the table with the given column and rank
checks the text of the matcher
returns true if the match is a matches
returns the end position of the end of the tokenizer
show the controls
updates the thread
converts a float to a int value
converts a value into a float
plays the ogg clip
plays the clip
this method is called when the user presses the
returns the default rate of the
set the default rate for this
update the
returns the time in nanoseconds
returns the current time in nanoseconds
sets the time of the media
plays a media time
plays a media time
sets the time of media
returns the time of the media player
set the rate of the rate
gets the value of the property
returns the start latency in milliseconds
show the stopped status
stops the media
wait for the to prefetch
returns the time in milliseconds
returns the base uri of the current element
returns the authentication token for the given user
builds a from a model
the given user to a model
checks if the given token is a valid token
returns a file object representing the log file
returns the file name from the given root
sets the cas login url
sets the ticket validator
set the ldap factory to use
determines if the cache file is a cache file
this method is called when the file is served
returns the file name for the given entity file
sets the date format
sets the xsl file
set the xsl stylesheet context
adds a new tab to the tab
release any resources allocated by this tag
print the parent tag
prints the body of the body
parses a string to produce a
compares dates to the build
test method for
test method for
test method for
returns an initiliazed instance of exit command component
returns an initiliazed instance of help command component
returns an initiliazed instance of help property
returns an initiliazed instance of string item component
returns an initiliazed instance of back command component
returns an initiliazed instance of change pin component
returns an initiliazed instance of ok command component
returns an initiliazed instance of cancel command component
returns an initiliazed instance of old pin component
returns an initiliazed instance of new component
returns an initiliazed instance of new component
returns an initiliazed instance of pin tip component
returns an initiliazed instance of file list component
returns an initiliazed instance of back command1 component
returns an initiliazed instance of add command component
returns an initiliazed instance of remove command component
returns an initiliazed instance of wait screen component
returns an initiliazed instance of pin changed alert component
returns an initiliazed instance of change ping command component
returns an initiliazed instance of pin form component
returns an initiliazed instance of spacer component
returns an initiliazed instance of pin form string component
returns an initiliazed instance of pin component
returns an initiliazed instance of ok command1 component
returns an initiliazed instance of exit command1 component
returns an initiliazed instance of hide me logo component
this method initializes hide me browser
returns an initiliazed instance of back command2 component
returns an initiliazed instance of file added alert component
returns an initiliazed instance of empty list component
returns an initiliazed instance of error component
returns an initiliazed instance of success component
adds a key to the cache
returns the value of the key
reads a dictionary from the input stream
opens the
adds a new resource to the map
adds a resource to the resource manager
set the context of the given context
initialize the
sets the receivers receiver
returns the resolution info
called when the root node is changed
handle the resolution of the
returns a client configuration object for the client configuration
executes an open method
post a post to a new post
the date the user was created
deletes a post from the database
returns the post with the given id
set the categories
executes a post
initializes the menu
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the f value for this
sets the f value for this
sets the f value for this
sets the n value for this
sets the n value for this
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
getter for property
sets the
getter for property
sets the
getter for property
sets the
sets the d value for this registro type
sets the d value for this registro type
sets the d value for this registro type
sets the d value for this registro type
sets the d fec value for this registro type
sets the d value for this type
sets the d fec value for this registro
sets the d fec value for this registro vo
sets the d value for this registro type
sets the n value for this
sets the n value for this
sets the n value for this
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v num value for this type
sets the v value for this type
sets the v value for this epc type
sets the v value for this type
sets the v num value for this type
sets the v value for this type
sets the v num value for this type
sets the v value for this type
sets the ins value for this
sets the v value for this type
getter for property
sets the
getter for property
sets the
getter for property
sets the
getter for property
sets the
getter for property
sets the
getter for property
sets the
sets the list of classes to use
sets the charge
sets the
sets the charge
sets the
sets the
sets the menu
sets the destination
sets the
sets the menus
sets the
sets the principal
sets the
sets the value of the property
sets the
sets the component
sets the
sets the informations
setter of the property tt tt
sets the
sets the type of the
sets the super infrastructure
sets the addresses
sets the
sets the agenda
sets the
sets the
sets the
sets the
sets the addresses
sets the
sets the agenda
sets the
sets the collection of publications to the given collection of publications
sets the
sets the super
sets the
sets the
sets the
sets the
sets the
sets the
sets the
sets the super
sets the
sets the
sets the
sets the
sets the informations
sets the
sets the
sets the
set the observation
sets the
sets the
sets the collection of contacts
sets the
sets the numero of this ficha matricula to the specified value
sets the list of publications to be used
sets the
sets the
sets the
sets the
sets the component
setter for property fin
sets the
sets the roles
sets the
sets the
sets the
sets the
sets the nb
sets the super information
setter for property entreprise
sets the collection of
sets the cycle cycle
set the locale for this user
sets the locale id
sets the super
sets the
sets the nb
sets the id
sets the
sets the classes
sets the
sets the
sets the destination
sets the
returns the hash code of the object
adds a lexical state to the lexical state
returns the value of the named token
returns the value of the specified option
returns the value of the given boolean
returns the value of the option
returns true if the specified option is an option
p the value of the code value code
returns the token
checks if two characters are considered as a
returns the lookahead number
returns the value of the choice compositor property
returns the number of other
returns the next generation index
returns the debug parser
returns the debug lookahead flag
returns the debug logger
returns the error reporting the error reporting
returns whether or not the ignore case is ignored
returns the current setting of the current user defined
returns the user character stream
returns the build parser
returns the current value of the build lexer
returns true if the lexer is a lexer for the current
returns the check state of the
returns whether or not this class is a force
returns the cache tokens flag
gets the token factory
get the output directory
validate the grammar
returns true if this is a multi valued property
returns the node factory
returns whether or not the node uses a standard implementation
returns the visitor
gets the node prefix attribute of the object
returns the visitor exception
gets the visitor data type
get the visitor return type
increments the
start the timer
stops the timer
sets the prefix attribute of the object
adds a listener to the private message
creates the url for the database
returns a connection to the database
executes the update sql query
updates the database connection
execute a sparql query and returns the result set
sets the scopes request
set the scope delimiter for the given scope
returns the scope of the given url
sets the oauth location
sets the height of the window
clears all tokens from the current token
generate highscore list
sets the start of the game
move the next card to the next one
performs the action
this method is called when the user presses the focus
initializes the game
start the timer
starts the timer
returns the height of the spring box
update the of the given link
updates the model with the given
returns the not in query string
creates the database
initializes the panel
initializes the panel
initializes the both map instances
this method is called when the user selects a new audio
parse the image
adds a verification verification to the list
sets the
returns the value of the selection
parse the uri
returns the name of the module
parses the given template and returns it
sends a score to a player
fired when the user clicks on the send button
initializes the game
initializes the start panel
returns whether the input is disabled
getter for property start of level
show the highscore list
adds money to the money
p called when the highscore service
send request to the server
callback for the task of the request
update the table with the given template
sets the game key cache
connect to the server
reads the timer and then print the timer
returns true if the lock is currently being verified
disconnect from the xmpp server
sets the
sets whether the downloading of the downloading of the downloading
adds a options to the list
adds an instance to the instance
checks whether the given character is a
handle the exception caught in the
returns the
this method is used to indicate that the session has been closed
this method is used to create a new session object
method is idle
this method is used to close the current session
method used to signal the idle session to the session
load the
destroys the session
removes the given code player code from the game
this method is used to close the current session
this method is used to notify the session that the session has
this method is used to signal the idle session to the idle
method used to signal the idle session to the session
loads the configuration
starts the measure
returns the total memory of the current memory
prepares the list of all the accounts
closes all the connections in the server
loads the data from the database
returns the total memory of the current service
executes the script
analyses the
sets the category number
returns the offset of the given text
sets the number of items in the list
sets the category
returns a string representation of this exception
returns the category name
check if the vector of is in the list
sorts the
returns a string representation of this object
sets the item at the specified index
show a dialog box
returns the item at the specified index
find the position of the relation
this method initializes j button
adds a relation to the list
returns the preferred size of this component
returns the index of the item at the top of the list
description of the method
sets the look and feel
resets the panel to its initial state
set the window parameter
sets the text of this component to the given text
returns the text of the text
clears the text
returns the minimum size of the component
returns the text
add a new relation to the list
load the ini file
define the actions
creates a new file
creates the edit menu
parse the lines
sets the status message
creates the help menu
returns the status message
sets the
returns the relation of the given item
saves the status of the current status to the current status
this method is called when the user chooses to save the
sets the value of a variable
returns the answers vector
check the category and return its index
sets the size of the jsplit pane
returns the cat number
returns the item number
hide the tools
show the tools
get clue for clue
sets the display of the current file
returns the position of the first move
returns the grid
adds a clue to the list
resets the matrix to the initial state
returns the grid canvas object
constructor for the parent window adapter
invoked when the user attempts to close the window
delete a subject entry from the subject
saves the current file to the file
saves the grid to the current file
save the grid to the given file
sets the current file
add a body to the body
draw the sphere
draw the
add a probe to the probe
this method is used to convert the type of
gets the capacity multiplier for the given
returns the column to be displayed on the table
resets the iterator to their defaults
returns the number of ranges
sets the num ranges value for this info
visits the given expression
returns the merge threshold
sets the merge threshold
returns the split threshold
returns true if the given partition contains the given partition
checks if the given set and the set of ranges are in
gets the cardinality of the
sets the cardinality of this assignment
returns the capacity of the entry
checks if the specified constant is contained in this
returns true if the range is limited to a range
returns true if the specified range is contained in this range
sets the split threshold
returns the value of the code min code property
returns the maximum value of the constant pool
returns true if the is included in the range
returns whether or not the is included
sets the min
sets the maximum value of the constant pool
sets the min
sets the maximum value of the given constant
sets whether to include the min min property
sets whether or not to include the
returns the capacity of this object
returns the configuration object
test remove and put
returns the maximum size of the mru list
removes the entry at the given index
returns the average of the operation
puts a value into the cache
returns the number of opcode
returns the maximum size of the cache
creates a new user
returns the of the
sends a message to the server
sends a public key to the session
this method is responsible for sending a message to the game room
joins a game
leave the game
load the game
returns the number of users in the database
switch to lobby
handles the logoff of the server
handles the login of the given server
sets the message delay
binds a connection factory to the jndi bind
binds a topic to a jndi name
invokes the given entity with the specified parameters
returns the local port to which this socket is bound
returns the remote port
gets the number of visible users that can be visible
returns the number of users in the network
invokes the given entity with the specified parameters
returns the sender of the message
returns the last parameter
returns whether the last parameter has been set
wait for the activity to be closed
returns the user with the specified nick
sends a message to the server
sends a message to the server
starts the instance and starts the instance
initializes the connection manager
starts the telemetry server
destroy the object
registers a connection to the pool
remove a connection
sets the flag indicating whether or not this connection is to be
returns the value of the code code property
get a connection
returns an enumeration of all the connections
destroys the servlet
notify all listeners that a message has been received
sends a event to the server
remove all listeners from the list
notify all listeners that have registered interest for
returns the original type of the original
set the accelerometer threshold for the given
notify all listeners that have registered interest for
create a new
displays the current event
initialize the jframe
returns the text area of the command
returns the text area of the component
send a message to the server
notify all connections that this connection has been closed
adds a command to the buffer
flushes the commands
checks if the command is in the buffer
resets the count
this method is called when the application is being destroyed
returns the number of required resources
returns true if the has been flushed
sets the unit
returns the unit
converts a degree to degrees
notifies all listeners that have registered interest for
resets the statistics
this method is used to set the device to the given device
returns the device with the given name
remove a motion device from the device
returns the value of the rgb value of the rgb
displays the given object to the display
registers a display to this display
removes a display from the list
returns the display name for the given name
initialize the object
initializes the connection manager
normalize the percent big decimal
starts the instance
returns the cells occupied by the column
returns the of the
p this method returns the data source of the
add a new to the
read and return the mapping file
converts a code code from an code code code object code
converts the given object to the given output stream
returns the operations selection
appends the given list of elements to the end of this list
browses source file
description of the method
exits the application
at startup create and show the main frame of the application
starts the game
returns the sum of amount of the amount of the amount of
create a new nth curve
returns the number of outgoing connections
sets the number of outgoing connections
close the connection
returns the number of connections
sets the number of duplex connections
this method is used to close the connection to the server
gets the value of the property
create the router
sets the
returns the maximum number of hosts in the hosts
returns the port number of the connection
returns the number of hosts in the list
set the port number of the server
starts the server
called when the search reply
returns the shared file count
called when a search is being processed
called when the push button is being pushed
set the number of shared file files
stops the connection and closes the connection manager
checks if the given guid is a guid
returns the host cache
set the shared file size
returns the hash code for this object
returns a string representation of this message
returns the connection greeting
returns a string representation of this message
returns true if the connection is active
returns the connection that is used to get the connection
sets the greeting connection
adds payload to the payload
returns the connection data
sets the agent header
returns the value of the code ultrapeer code
returns a string representation of this message
prepare the message for the next message
sets the value of the code ultrapeer code flag
returns a new search monitor session
returns the originating connection
sets the vendor code for this code code
create a file server session
this method is called to notify the server that a new message
sets the maximum number of attempts to connect to the database
send a connection message to the server
returns true if the given is
adds a listener to the connection manager
returns the number of bytes in the queue
sets the nets of the nets of the
returns the of the net
returns the minimum speed of the download
returns the connection list
creates the router
this method is used to notify all listeners that a search has
returns the port of the
returns the net identifier of this
clean up the connection
returns a new
returns the payload as a string
this method will remove the message from the queue
adds a connection to the pool
this method is called when a message is hit
returns the search criteria
returns the speed of the packet
adds a listener to the host
add a record to the list
sets the flag indicating whether this connection is ultrapeer
returns whether or not this connection is ultrapeer
returns the shared file size
add a new xml block to the end of the block
returns the guid for the target agent
returns the index of the payload
increments the number of attempts that failed to attempt to adopt the
converts the payload to a string
sets the number of failed attempts to wait for
returns true if the connection has been
returns the port of the socket
returns the hash code value for this object
returns a string representation of this object
returns the number of active connections in the specified type
description of the method
sends a message to the server
call back to be called before calling
returns the identifier of the client side
shutdown the thread
adds a host to the host
returns the number of file records in the file
handle failure in the failure
this method is responsible for creating a search session
returns the hash
send a message to the server
returns the local download port
sends a message to the server
sends a message to the server
returns the host name of the server
returns the port of the server
returns the number of output messages
returns the number of input messages
returns the number of dropped messages
returns the time in seconds
returns the message with the specified message
sets the image
sets the start time
sets the resource
animate the animation to the next animation
this method is called when the user selects a new animation
computes the animation state of this
computes the distance between this
returns a string describing this applet
initializes the
draws the given graphics object at the specified position
animates the random faces of the current random number
animates this component to the specified state
draw a circle
paint an oval in the given graphics object
paint an oval to fit the given graphics
draw a line in the current region
this method is called when the is closed
creates a chart
creates a dataset
creates a chart
validates mandatory fields of mandatory prerequisites
sets the text of the text
sets the translation state for this translation
test special case
returns true if the given type is a class or not
called when the type of the node is removed
gets the value of the property
returns the
sets the
sets the
sets the default values of the preferences
add a to the list of commands
adds the plugin specific options
adds a default value to the preferences
adds a default value to the preferences
creates the dialogs contents
checks if the current state is valid
open and reloads the editor
creates a radio button
checks if the given selection is enabled
returns the preference store for this overlay
fill the control with the given values
sets the controls enabled
sets the controls enabled state
runs the selection on the given code file code
perform the action
performs the default button
configure the view
sets the status bar message
returns the value of the preference field
perform the action
returns the text control
clears the error message
returns true if empty string is empty
sets whether or not the is allowed to be empty
sets the value of the field
set the text limit
sets the validate strategy
shows the error message
changes the value of the property
returns the elapsed time in milliseconds
this method initializes this
this method initializes j menu item
this method initializes j menu item
this method initializes this
finds the next element in the list
this method initializes this
this method initializes image root browse
this method initializes j button
this method initializes this
this method initializes j content pane
this method initializes slider panel
this method initializes action panel
this method initializes image root panel
this method initializes image root display
this method initializes browse
this method initializes this
this method initializes cancel button
this method initializes back button
this method initializes stop start button
this method initializes next button
this method initializes this
this method initializes prefs button
returns a collection of all the places in this map
create config object
encode all formats in the
encodes all the
updates the contents of the
returns the indexer
returns the index of the given file
indexes the given file
load a count of the number of entries
generate the input for the lexer
returns a value for the input string
checks if the data is a boolean
parse the csv file
returns the number of csv records
returns the number of
returns the number of bytes in the data
method function for
build the parser for the input csv
the input to the csv file
sets the age of the
set the sex
checks if the data contains the data
builds a new person object
returns the item that contains the given data item
gets the value of the some additional attribute property
returns the sex as a string
returns the item at the specified index
creates a chart
this method initializes this
this method initializes j content pane
this method initializes j jmenu bar
this method initializes j menu
this method initializes j menu1
this method initializes j menu item
this method initializes j dialog
this method initializes j content pane1
this method initializes j button1
this method initializes j menu item2
this method initializes j
this method initializes j content pane3
this method initializes j scroll pane
this method initializes j button3
this method initializes j scroll pane1
this method initializes j menu item1
this method initializes j
this method initializes j content pane2
this method initializes j scroll pane2
this method initializes j menu2
this method initializes j
this method initializes j content
this method initializes j button4
this method initializes j text area
this method initializes j menu item3
this method initializes j popup menu
this method initializes j popup menu1
this method initializes j menu
this method initializes j
this method initializes j content
this method initializes j
this method initializes j menu
this method initializes j dialog
this method initializes j content pane
this method initializes j button6
this method initializes j popup popup menu
this method initializes j scroll
this method initializes j editor pane1
this method initializes j dialog
this method initializes j button2
this method initializes j scroll pane
this method initializes j menu item5
this method initializes j popup menu
this method initializes j editor pane keys
this method initializes j scroll pane keys
runs the test
runs the test
post method for construction
this method is called before the is done
this method is used to execute the command
this method is used to execute the command
undo the operation
executes the command
executes the command
executes the command
executes the task
executes the query
executes the command
executes the command
executes the query
executes the command
returns the properties of this object
executes the command
runs the uc
runs the thread
runs the runnable
runs the thread
perform the post script
parse the command line
initializes the configuration
creates the input file
runs the test
executes the command
runs the uc
runs the action
runs the thread
runs the test case
runs the test
creates a new test case
creates a new instance of the
create an element
creates a new user object
this method creates a new element
get the key from the data source
returns the value of the property
converts a code input stream code to an object
writes the object to the output stream
marshal object into output stream
converts a code input stream code to an object
creates a new test run
returns an input stream for the given resource
checks if the given pin is allowed
sets the pin to the given pin
activates a subscriber
adds a profile to the profile
checks if the profile exists
deactivates the subscriber
returns the status of the
test method for
test that the is validated
test method for
test that the constructor of a
test of add profile method of class com
test the delete profile method
test if the profile exists
test method for net
create a new account
delete a account from the database
find a account in the database
update the account
this method is called when the book is updated
this method is called when the amount of the money transfers to
find device by devices
returns true if the object is a read lock
reads the list of objects from the database
returns true if the user has online
returns the class impl from the file system
returns the number of methods in this collection
returns the name of the entry at the specified index
initialize the class with the given class
returns true if the entry at index is write
sets the name at the specified index
returns a string representation of this exception
sets the write index
returns the global name of the global event
writes this object to the given output stream
returns the ping method
returns the owner of this resource
returns the time stamp
returns the url
ping the server
returns the lockable attribute
returns true if the file is locked
this method is called when the thread is started
return a set of all clients
sets the ping method
sets the wait time for the
returns the layer
sets the lockable attribute
returns the inner inner throwable
sets the time stamp
returns the host id
pings the server to the server
this method is called when the user interface is locked
called when the object is removed
called when the storage is changed
returns the global name of the global global variable
returns the set of all the elements in this collection
returns the new value of the code shared value code property
returns the old value
returns true if this event is a add event
returns true if this event is a change event
returns the url of the
returns true if this event is a lock event
returns true if the event type is a remove event
returns true if this event is a unlock event
returns a string representation of this event
returns the private key
returns the data object
compares this object with the specified object for equality
returns the hash code value for this
sets the debugging flag
adds a listener to the cache
sets the url of the
returns true if the other shared reference is equal to another one
returns true if the shared shared reference are equals
returns the global name of the global
returns the time stamp
checks if the shared object is updated
returns true if the user is logged in
removes a listener from the cache
returns the name of the data
returns true if the client is connected to the client
returns a string representation of this object
returns the data object
returns whether the write can be written to the file
returns the lease time
returns the reference class name
returns true if the host is a connection
adds a listener to the cache
returns a string representation of this object
adds a listener to the list of owned resources
returns true if the current node is a
set the locker to be used for the locker
runs the server and calls the server to listen for incoming connections
runs the server thread
returns the classloader to use for this classloader
returns the descriptor of this descriptor
returns the names of the cached names
returns true if the lease is updated
sets whether to write to write write mode
sets the last updated time of the
returns the cached object for the given name
sets the lease time
sets whether the is lost
returns the data
adds an object to the list
adds all elements in the specified collection to this set
returns true if the list contains the given element
returns true if all elements of this collection contain all the elements
compares the specified object with this list for equality
returns the logger
compare two objects
returns the list of
returns the tail of this list
returns the object with the given name
returns the hash code value for this
returns true if the queue is empty
returns an iterator over the elements in this list
removes the first occurrence in this list of the specified element
removes all occurrences of the specified collection from this list
removes all entries that are not contained in this collection
returns true if the channel is connected to the server
sets the car
sets the cdr
returns the number of elements in this list
remove the car from the list
returns true if there are more elements in this collection
returns the next element in the iteration
adds an object to the shared session
remove the current car from the current list
removes a listener for changes to the cache
removes a listener for the owned users
sets the logger
this method is used to set the value of the
paints the component
returns the class loader for the given class
runs the thread
this method is used to acquire a local cache
removes the specified global name from the list of resources
appends the text to the current text
clears the content of the buffer
reads the contents of the text content
creates the center panel
unlock the cache
this method is called by the to validate the
creates a server socket
closes the connection
executes the given sql statement
execute the given sql statement
returns the major version of the
returns the minor version
returns the major version number of the driver
returns the drivers jdbc version number
whats the version of this jdbc driver
returns the server name
whats the sql statement to use for a sql statement
check if the buffer is not already in the current connection
closes the underlying database
close the connection
starts the thread
starts the
starts the thread
stops the thread
starts the process of process process
this method is called when the process ends
process the cpu process
finalizes the process of running
updates the statistics queue periodically
process the process request
end the process of the process
accept all directories and all extensions
connect to the database
disconnect from the database
returns the rdf configuration
sets the rdf configuration
returns a new data source bean object
returns the subject of this triple
sets the subject of the subject
returns the triple
set the predicate
returns the object part of this triple
sets the object
returns whether the namespace prefix is a prefix
adds a collection of triples to the graph
returns the literal type
adds a new graph to the list of triples
adds a triple to the graph
returns a string containing all the statements in the
compares this item to another
returns the value of the given subject as a string
compares two objects for equality
get the value of an int
sets the value of the given subject
get the value of the given subject property
set the value of the subject property
set the subject predicate
returns the uri of the node
returns the repository id
sets the id of the repository
returns the radius of the expand radius
set the radius of the texture
returns the maximum number of results to be returned
sets the maximum number of results to be displayed
returns the number of skip results
sets the number of skip results
returns the order criterion
returns the sort order of the given criterion
returns the namespace prefix for the given prefix
sets the namespace prefix for a given namespace prefix
adds all the values from the given query to the list of
returns the xml rpc host name
returns the port number for the
returns the xml rpc port
returns the soap base url for the soap envelope
set the xml rpc port as a string
sets the value of the users property
sets the value of the tags property
sets the value of the resources property
find the first occurrence of the message
returns the format
sets the value of close model
make a copy of this message
gets the language tag
sets the predicate
sets the object
returns true if the splash screen should be displayed
returns the default domain
create the menu for the menu item
returns the users user
this method is called when the thread is made
the thread run method
notifies the client that the message has been added to the given
returns the blocked value of the blocked property
sets the blocked property
returns the
returns the device code
gets the category code associated with the category code
sets the value for this
sets the device code
sets the device name
returns the device privilege
sets the device type
gets the house name attribute of the project object
sets the house name
sets the url to the url
returns the mobile number
sets the mobile number
returns the component that will be used for the focus
stops the connection
returns the number of fields in this collection
returns the string representation of the index registry
returns the long value of the field at the specified index
disconnect from the database
gets the authentication user statement
returns the connection
gets the prepared user statement
returns the handle for the notify statement
selects the faction devices in the database
get the search device statement
returns the check if blocked
select a house
get the prepared state to use to create the prepared statement
returns the requested prepared statement
select user from database
returns the check if allowed statement
description of the method
select a device in the database
search device device
check if a device is blocked
check the device state
check the device blocking
check if a given value is allowed to be used
handles incoming messages
the method code run code
this method is called when the service discovery is found
called when a service search is completed
called when the device discovery is finished
connect to the server
returns true if action is ok
at startup create and show the main frame of the application
inserts a row into the model
moves a cell to the specified position
removes a row from the model
sets the column identifiers for the column
adds a column to the current row
returns the name of the column at code column index code
returns the value at the specified row and column
sets the value at the specified row and column
returns the list of tasks
adds a new task to the list
sets the value of the name property
sets the value of the reflective property
sets the value of the filename property
adds a new entry to the
adds a new listener to the list of listeners
removes a code listener code from the list of listeners
stops the timer
reset the counter
convert a byte into a hex digit
returns the crawler
accept a given extraction
accepts the given incoming link
adds a new client to the list
returns true if the auction is idle
returns true if the client is using the client
returns the client share at the given client
returns true if the current session is idle
releases resources allocated to this resource
returns a random session for the current client
processes the event queue
this method loads the default module
load the core modules
show the dialog
hide the window
returns true if the given method is a
returns the base value of this object
returns the value of the specified dice
returns the details of this object
returns the size of the given array of squares
rolls the dice
rolls the dice
sets the minimum value of the
returns true if the given method is a
adds a list of to the
returns the size of the expression
returns the number of elements in this list
returns the value of the code int code property
returns true if the value is an int
returns the sides of this object
this method is used to divide the dice values
returns the name of this object
returns the value of the value
returns the details of this
returns true if the value is an int
returns true if this is a int
rolls the current roll back and the current value
returns the details of the expression
this method is called when the user presses the roll
returns a string representation of this object
returns the name of the
returns the value of the code dice code property
returns the value of the integer property
this method is used to convert the value to a dice
returns the value of the string as a string
returns the details of this object
returns true if the x y coordinate is a int
returns the details of this object
sets the module name
rolls the dice
creates a new
returns the simple name of the module
sets the module author
returns the module author
sets the module version
returns the module version of the module
sets the module short description
appends the given token to this code
clears the list of addresses
returns the short description of this module
returns an enumeration of all tokens in this url
adds a dice dice
returns the long description of the module
encode the request
sends a message to the server
sets whether or not this code code is excluded
processes the message
adds a function to the function
returns whether or not this code code is excluded
starts the game
sets the target
returns the gui
returns the target character
send a message to the server
removes all symbols from the symbol table
register a menu with the given name
register a menu with the given position and its symbolic
this method returns the message address of the message
removes the given menu item from the menu
removes a menu item from the menu
register a menu item with the given name
register a menu item with the given position and
this method is called when the user chooses to exit the menu
returns a vector of client nets between two vectors
returns a string representation of this object
invoked when an action occurs
clears the receiver
sets the gui manager
sets the menu bar
checks if the target is valid
add a new module to the
remove the module from the module
returns the address of the human readable representation
this method is called when the application is garbage collected
allocates a new static code code to the current capacity
returns the current active buffer
returns true if the current state is dynamic
set whether to retain the buffer
sets the connection time
sets the connection mark to the last time
returns the time in milliseconds
adds inbound message to the queue
adds a message to the queue
sets the server address to the server
clears the data
returns the number of bytes sent to the server
returns the number of bytes in the buffer
adds inbound message to the inbound message
adds the message to the list of messages
returns the number of outbound messages
returns the number of messages in the message queue
returns the total number of messages in the message queue
announces the clients to connect to the server
announces the clients to the clients state
connect to the server
connect to the server
sets the originator of the message
returns true if the connection is connected
starts the outbound monitor thread
set the header
set the header of the message
this method is called when the channel is about to be used
set the header of the http request
the channel selection operation
returns true if the message queue is available
sets the data
reads the message from the queue
returns the header as a string
initializes the server
initializes the internal buffer
loads the modules
sets the id of the assigned user
returns true if the client is currently running
set the default buffer size
returns true if the server is running
sets the mode of the server
connect to the server
returns the message that is being used to send the message
register a network network to be used
stops the server
registers a module loader to be loaded
returns true if the message is available
connect to the server
sets the manager
sends a message to the server
this method is called when the user presses the
registers a group manager
called when the user selects the message
handles the given message
handles the message sent to the server
register a route manager to be used for the gts
initializes the module
sets the initialized flag
called when the user selects the message
returns true if the is initialized
handles the given message
returns the socket channel
initializes the module
compares this group to another group
registers a module to the server
returns the name of this group
register a module to the server
sets the name of the group
write the given message to the socket
returns the description of the group
get the module reference with the specified name
sets the description of the group
returns the default module reference
returns the description of the group
registers a new module to the registry
adds a group to the group
sets the description of the group
deregister a message type
write the outbound buffer to the output stream
checks if the given id is a group
sets the value of the property
engage a module
returns true if the group is a group
sets the module name
sends a message to the server
returns a member of the group
returns true if the queue has the remaining time
puts the queue message into the queue
removes the first queued message
build the console menu
returns the role for the member
get the client with the given id
returns the message that is being sent to the server
post system info
set the role of the user
post a user info
post the text to the user
show the dialog
returns a new group member with the specified id
sets the default role
hides the dialog
returns the menu item
invoked when an action occurs
returns true if the queue is already in the queue
returns a group with the given id
registers an observer to this observer
returns the module
returns the group client module
returns the group server module
updates vehicles in the database
adds a vehicle to the list
make the content
the method performs the simulation of the
creates a new map view
checks if the vehicle is a biggest alone
returns the connection to the connection
sets the direction of the current
this method is called when the user selects the selected
returns the end connection
deletes a vehicle from the list
checks if the vehicle is at the end of the
returns localized string for localization
returns the first letter of the string
initializes the available languages
sets the language of the current language
saves the list of language lists to the specified file
save the document to a file
checks if the given event is a
returns the members of the group
returns a random member
checks if the player is a leader
returns the world region
broadcast a message to all members in the domain
updates the current world region
broadcast a message to all members in the given party
removes a party member from the players list
returns the player by its name
party party party party party to party party party to party party
party party party party party to party a party to party a
this method is called when a new telemetry deposit
recalculate the level
checks if a variable is a var
checks if a variable is a valid variable
sets the variable to the given string
sets the variable to the given value
called when the is terminated
checks if the given object is a
returns the list of quest variables in the database
sets the current quest variables to the given value
returns true if the item is a collection item
adds a new collection of items to the list
remove all the elements from the set
increases the count of the items from the collection
set the correlation header
the message
fills the given list with the given exception
sends a user to the user service
sends a hotel request to the service
sends a reservation request to the service
returns the endpoint reference for the endpoint
test client
test of example method of class
test the example
returns the service client
test the discovery of the device
get the service client
set up the server configuration
set up the properties of the
set up the server
send a new device to the server
set up the server
method tear down
setup the synapse
test for method init
the junit setup method
set up the server
tears down the fixture for example close a network connection
set up the server configuration
setup the synapse
setup the synapse
create a new password authentication
returns a string representation of this uuid
returns the number of in the database
called when the user authenticate a user
called when the connection is received
called when delete is removed from the queue
returns true if the current device is trusted
called when the operation is received
returns the discovery agent
put the given operation into the response
callback method for the file
this method is used to set the id of the
removes a device inquiry
create a new object
returns the byte size of the byte array
compares the remote device and returns the remote device
returns the friendly name of the device
sends a request to the server
returns the device class of the device
cancels a service search
returns the of the
inserts a data element into the list
returns true if this is a client authenticated
get bluetooth address
returns the size of the data set
gets the record associated with the specified
called when the device is complete
removes the specified element from this list
close the channel
returns the remote device for the specified device
write the to the output stream
returns the header of the header
returns the response code
sends a to the device
creates a new
returns the vector as a vector
sends a message to the clear event filter clear
returns the response code of this response
creates the header set for this message
this is used to set the header to read the content
write connection setup connection setup
returns the number of in the database
send inquiry to device inquiry

set the authenticator authenticator
this method is not supported
this method is used to read local name
send a scan to the server
write the write class device
send a to the
reads an addr from the socket
this method is called when the connection is received
push a message onto the stack
returns the next element in the queue
pop the message from the queue
validates the request
adds an object to the queue
removes the first occurrence in this list of the specified element
returns the first value of the first element
returns an iterator over the elements in this collection
returns true if there are more elements in this collection
returns the next element in the interation
removes the first element from this list
adds an element at the beginning of the list
adds an element to the end of the list
returns a shallow copy of this object
removes all elements from this map
returns an iterator over the map of the map
this method is called whenever a code code code code code code
called when the user has to be processed
register a handle to the
register a listener to be notified of feedback
this method is called when the user selects a message
register a sequence of sequence behaviors to this engine
resets the data store
called when the server is done
this method is called when the is removed
stores the given name to the data store
method to accept proposal for a conversation
register a to the
this method is called when the is removed
method is accept proposal
this is the method that is called when the reject proposal is
this method is called when the user selects a new
register a handler for the given register
register a to the
this method is called when the user selects a message
this method is used to register a proposal to be accepted
reset the state of this to the given
sets the template to the given template
this method is used to register a reject trigger
send a list of to the server
set the message to be received
interrupt the thread
reinitialize the data store discarding forget to the
this method is called when the is about to be processed
this method checks if the given reply is in sequence
checks if the given code session code is a valid session
reset the internal state to the given template
this method is used to set the vector of
method to handle subscription subscription
this method is called when the is removed
register a subscription to be used by the
this method is called when the is
this method is called when the epoch of the
register a listener to be notified when the user chooses to its
method create subscription
handle all responses to the list
get the subscription associated with the subscription
called when the user has to be stopped
get the subscription associated with the given id
returns the subscriptions of the subscription
register a to the
register a to the
returns the message
this method is called when a new notification is received
register a to the
close the conversation
this method is called when the is not understood
register a listener to be notified of the data store
called when a failure is received
register all the responses to the
this method is responsible for updating the stocks
register the to the
reset the state of this object
register all the result notifications for the given behaviour
called after the data store is reused to the
checks if the given code is received code
register a handler to be
called when the session is terminated
register a handle to the pss
register a sequence of sequence behaviors to this
creates a new iteration with the given list of values
method that creates a subscription subscription
method called when the agree to the is not a
this method is used to handle the request
this method is called when the cancel button is clicked
reinitialize the receiver with the data store
register a handle to the data store
called when the is removed from the
this method is called when the agree to the message is not
called when the data store is being removed
resets the data store to its initial values
called when the session is closed
resets the internal state to the given template
resets the session to its initial state
sets the datastore
handle all responses to the list
this method is used to perform the
register a new state to be used for the
register a new to the queue
this method creates a conv id message
register a to the engine
adds a parameter to the list
returns the parameter value
returns an iterator over all the parameters
this method is used to set the vector of
updates the
removes the current object from the queue
resets the data store
this method is called when the user selects a proposal
resets the internal state to the given template
this method is called when a code request code is a request
this method is called when the reject proposal is encountered
adds the given element to this list
returns the value of the current element
removes the first occurrence in this list of the specified element
returns true if the element contains the element at the
returns an iterator over the elements in this collection
returns a string representation of this object
this method is responsible for creating a request for the request
register a handle to the data store
this method is called when the user selects the
register a state to the data store
cancellation of the session
loads the data from the given storage
returns the message
stores the given string to the disk
adds a parameter to the list
returns the parameter value
this method initializes the data store
this method is called when the iterator has finished
called when the write start is pressed
called when the end of the write is done
register a listener for the accept state
returns the index of the given property
register a to the server
register a message to be used for proposal
this method is called when the is executed
returns true if the socket is alive
this method is called when the transition to
updates the record with the given value
sets the protocol
returns the value of the property with the given key
returns the id of the object
compares this object with the specified object for strict
returns the hash code value for this object
returns the value of the specified property
adds a parameter to the list
remove a parameter from the list
set the class name of the class
sets the arguments to the argument to be passed to the
returns a string representation of this object
sets the property value for the given property key and value
compares the specified object with this code state code
compares this agent to another agent
called after the current state is ready to be reused
returns the raw property value as a string
this method is called when the timer expires
returns the boot properties
returns the property value for the given key
sets the value of a parameter
sets the value of the property
filters the value of the property
returns the value of the parameter specified by the key
returns the value of the property with the given key as an
updates the record with the given value
returns the boolean value of the property with the specified key as
sets a property
returns the string representation of this object
called by the agent agent to resolve agent
returns the boolean value of the property with the specified name as
returns the service manager
sets the boolean property for the given boolean property
returns the service finder
called when the agent is suspended
replaces the current key under the given name
add a filter to the list
removes the given filter from the list
processes the current band
processes the incoming command
performs the substitutions on the input string
called when the agent has been resumed
returns the number of slices
adds an alias to the list
called when the agent is alive
adds a reader to the given reader
lookup an alias for the given alias
returns the filter that is used to filter the
returns the sink side of the command
reads one line from the input stream
returns the horizontal interface of the class
called by the agent agent to determine the agent
get the helper for the given agent
read a line from the input stream
returns the of this object
prints this property out to the specified output stream
agent id
sets the name of the
set the name of the local variable
adds a dhcp address to the list
removes the specified ip from the list
sets the name of the
clears all the addresses
sets the node
returns the container
returns an iterator of all the addresses in the list
set the principal
returns the principal
set the owner principal
returns the owner principal
sets the credentials
returns the credentials
removes a resolvers
clears all the resolvers in this context
returns true if the type is a container
returns an iterator of all registered resolvers
returns true if this agent is a agent
this method will be called when the is
handles the received request
dispatch a runnable to the target
returns a code code object that wraps the given
interrupt the thread
interrupt the thread
returns the name of the
suspend the process
this method is called when the engine is paused
resets the time period to the specified time period
resets the timer
registers a state to the agent
registers a state to the slee
sets the parent behaviour of this composite
registers a state to the state machine
deregister a state
register a transition to the given string
restarts the behaviour
registers a transition to the given string buffer
handles the event
adds a new transition to the default
register a transition to the defaults
deregister a transition
removes the specified transition from the source
returns the root element of this node
returns true if the transition has a transition
returns the state of the given name
returns the name of the state
returns the value of the last exit value property
returns the last end value of the event
this method is called when the agent is about to be executed
called when the transition is first
resets the timer
returns the message that is the message
schedules the first time to be used
this method is called by the next thread to schedule inactivity
checks if the current session is a termination
returns the current behaviour of this
returns the child
add a behaviour to the agent
remove the behaviour of this behaviour
checks if the current session is a termination state
returns the current behaviour
returns the source of this message
returns the collection of all children
returns the parent of this composite
forces the transition to be used
returns the previous state
reset the state of the transition
this method is called when the agent is already being
this method is used to acquire the root element of this
blocks until the block is finished
handles the event
blocks until a block is a
restarts the agent
handles the restart event
set the agent
restarts the timer
called when the user chooses to wakeup the event
reset the date and the time
reset the timer to the timeout
reset the timer
handle the event
called when the is removed
called when the is
set the agent to be used for the agent
begin the first child of the current activity
returns the current behaviour
returns true if the current frame is a last one
returns the current behaviour of this multi view
sends a message to the agent
returns true if the dialog is acceptable
called after the process has been executed
set the blocking state
set the flag
returns the
add a behaviour to the agent
removes the specified behaviour from this
resets the state of this node
this method is called when the is destroyed
creates a new message queue
send a message to the cca server
decreases the size of the
the cli is the cli
returns the next token
returns the location of the
the given record
this method partitions in agents
get the helper helper for the given agent
sets the queue size for the queue
initialize the component
returns the name of the message
returns the current number of in the queue
returns the class of the interface
returns the filter that is used to filter the
returns the maximum number of bytes that this queue is waiting for
sets the name of the node
returns the sink side of this sink
sets the service
returns the service
start the node
returns the target node
returns the agent id
returns the command that is used to draw the taskbar
returns the node associated with the given node
instantiates a object
returns the agent that is the given aid
sets the active state of the agent
sets the class name
sets the kind of the transition
adds a bid to the roster
returns an iterator of all children of this node
returns true if this node is a simple
compares two objects for equality
adds a listener to the agent manager
returns the hash code for this object
returns the state of the
returns the name of the element
compares this code code object with the specified
compares this object with the specified object for order
returns the hash code of this object
returns a string representation of this object
removes the specified listener from this agent
returns the name of the platform
called by the controller to start the applet
suspends the process
resumes the controller
kill the current session
returns the agent with the specified name
returns the platform state
returns the agent agent with the specified name
creates a new agent instance
kill this thread
this method is used to set the proxy connection
a proxy to the server
returns the platform name
returns the name of the container
returns the platform controller
move the mob to the end of the list
register a new conversation id
registers a new conversation
deregister a conversation
clones the object and returns it
removes all elements from this collection
returns the template
prints the stack trace to the nested exception
decodes the message to the
returns the of the
suspend the suspension
checks if the specified code message code is equal to this match
this method is used to write the message to the code
returns a string representation of this object
decodes a to a code code
called when the user activates the state
a string with a
validate the ontology
returns the type of this object
validate the ontology
validate the ontology
returns the permitted values as a string
validate the given ontology
sets the aid to whom this message is listening on
returns the filter that is used to filter the
create a new instance of this class
wait for the next frame to be read
creates a new instance of the class
returns true if the given is a valid
validates an ontology
creates a new instance of the class name
validates an ontology
returns true if the given object is compatible with this
returns a new instance of the code code object
returns true if the given object is a valid schema
create a new instance of this class
adds a new aid to the set
returns true if the object is equal to this simple format
creates a new instance of the object described by this factory
adds a schema to this schema
adds a new term to the database
add a new object to the list
add a new card to the table
add a new object to the database
add a new card to the
remove the receiver with the given id from the remote agent
adds a concept to the obvious table
adds a facet to the given
adds a predicate to this collection
wait until the given number of milliseconds
returns a new instance of this class
returns the sink side of the jdwp packet
validates an ontology
returns a new instance of this class
validates an ontology
clears all receiver lists of all the objects
adds a schema to the schema
adds a new name to the list
returns a new instance of this class
returns a new instance of this class
validate the given ontology
validates an ontology
returns true if the given object is a valid schema
adds a new name to the slot
this method is called when the user presses the
adds a reply to the reply to the message
adds a new schema to the schema
add a new card to the cache
check if the ontology is a class
removes a reply to the destination
add a new element to the list
deletes the life cycle
adds a facet to the given facet
clears all the reply to the reply to the message
writes the given code output stream code to the output stream
sets the performative
returns the schema object with the given name
checks if the given slot name is already contained in this slot
sets the content sequence
checks if the given slot name is a slot
restore the contents of the input stream to the given input stream
add a schema to the schema
checks if the given name is a mandatory id
sets the content sequence of this content sequence
create a new instance of this class
validate an ontology
checks if the given absolute value is valid
returns the schema object for the given class
sets the reply with the message
returns the schema object for the given name
checks if the given object is compatible with this object
returns the schema object for the given class
this method is used to convert an object into an instance of
sets the from reply to
removes the from the queue
creates a new msg schema
returns true if the given is
returns the class of the given ontology
sets the value of the attribute
set the encoding to use for the current document
sets the value of this attribute
returns the template that is used to generate the template
checks if the given schema object is a sub schema
returns the defining ontology of the given ontology
sets the element template
sets the value of the specified integer field
returns a string representation of this object
sets the value of the field
sets the value of the attribute
set the value of the named attribute
returns the abs object with the given name
sets the value of the attribute to the given value
returns true if the current value is
sets the language
sets the state of the queue
sets the value of the specified date
returns a string representation of this object
compares this object to the specified object
sets the value of this field
returns the hash code value for this code code
sets the name of the variable
sets the type of the variable
returns the name of the function
returns the type of the variable
set the ontology
sets the variable to the given code variable code
sets the variables
sets the term to be used for the given term
set the proposition of this proposition
returns the variable
returns the aggregate variables in the database
returns the term term
returns the proposition object for the current cs
sets the manager
sets the reply by date
returns a string representation of this object
sets the protocol
decodes a byte array
set conversation id
encodes an ontology
returns an abs of an agent from the agents slots
returns an iterator of all the receiver objects
encodes the slots array
encodes the slots array
encodes the given content into a string
parses the content of this element
returns an iterator over all the reply to the message
encodes the given string and the current value
parses the given xml element and returns the resulting
parses the
returns the sender of this message
parses the
returns whether the content sequence has the content sequence content
returns the content of the content
returns the next token
consume the character
returns the element in the element
turn the schema to the given stubs
decodes a string
encodes the slots array
encodes a slot in the array
this method is responsible for resolving the resolve reference
get the reply by
returns the reply by date
adds a parameter to the current user
returns the user defined parameter name for the given user name
set the user defined parameters
returns true if the element contains the element at the specified
removes the user defined parameter with the given key
parses the symbol table
removes the parameter from the parameter set
lookup a language
lookup the ontology
fills the content of the given code message code with the given
sets the envelope
fills the given content with the given content
this method extracts the absolute absolute from the given code message code
extracts content from the current lit
set the default envelope to the one of the message sinks
returns the envelope
returns the merged ontology
returns a string representation of this object
add a new value to the map
puts an integer into the cache
returns the value of the specified key as an integer
puts a boolean into the cache
returns the value as a boolean
encodes the given content to the given frame
decodes a string
returns all receiver of all the
removes the given connection at the given position
returns the connection to the given position
get a connection from the
returns the capacity of the current entry
the thread to wait for the socket
activates the
performs the action
this method is called after the conversation is removed
called when the is finished
set the mobile agent description
returns the mobile agent description
sets the system
returns the system agent system
sets the language
returns the mobile agent language
sets the name of the
set the
returns the os
sets the aid
set the value of major version
returns the aid
gets the value of the major version property
set the destination for this object
set the value of minor version
set the agent profile
sets the dependencies of the agent
returns the agent profile
set the value of agent version
returns the agent version
sets the signature of this signer
waits until the queue is closed
clean up the cache
sets the debugger
set the container for this record
returns the container
returns the debugger to use for this debugger
removes all the agents from the list of agents
adds a new aid agents list of agents
sets the agent
returns the agent agent
removes the agent from the agents list
sets the class name
returns an iterator over all agents
sets the
returns the
removes all the agents from the list of agents
adds a new aid agents list of agents
removes the agent from the agents list
returns an iterator over all agents
sets the agent identifier
set the agent name
returns the agent agent identifier
sets the owner of this node
sets the credentials
adds a new arguments to this class
returns an iterator of all arguments
add a behaviour to the agent
returns the message id
this method is called when the is not
this method is called when the is received
returns a iterator for the given object
this method is called when the player has been exited
remove a behaviour from the agent
this method is called when the conversation is received
sets the description of the
this method is called when the conversation is been removed
sets the constraints for this constraint
returns the current list of constraints
this method is called when the conversation is received
returns the lease time
adds a new addresses to the list
removes the specified addresses from the list
adds a protocol to the list
adds a service description to the service
returns the string representation of this object
removes a given ip from the list
removes the service from the list
clears all the protocols
clear all services
renews the search id
returns the last message in the message
returns an iterator over all protocols in this collection
sets the search id
returns an iterator of all the services
sets the by name
adds a ontology to the ontology
set the maximum depth of the node
returns the by name
this method is called when the user presses the
removes an axiom from the ontology
sets the from
set the maximum number of results to be displayed
remove all the ontologies
returns an iterator for all ontologies
adds a language language library
removes a code language code from the list of language identifiers
set the value of via
gets the value of the via property
clears all the languages
returns a string representation of this object
returns an iterator over all the languages
sets the ownership
sets the ownership
sets the state
returns the ownership
adds a property to the list
adds a new to this group
removes a from this service
removes the given property from the set of properties
remove all services
returns an iterator over the collection of services
clears all the properties
returns a string representation of this object
returns an iterator over all properties
sets the sender
set the list of event records
gets the value of the a property
sets the event
returns the sender of this message
returns the event handler for this plugin
sets the message to be used for the message
adds a to the list of events
returns the message
returns an iterator over all events
sets the receiver
sets the behaviour of this object
returns the receiver
sets the container
returns the behaviour of this action
add a message to the
sets the where
sets the to
sets the event
returns the where
returns the event
sets the date when the event is triggered
removes the given object from this set
prepares the request to be sent to the server
returns a string representation of this object
sets the where clause
returns the where
clears all the elements in this list
sets the buffer container
returns the buffer container
returns an iterator of all the elements in this list
sets the id of the agent
sets the address of the assistant
returns the proto
returns the aid of the message
set the from agent
returns the agent state
sets the code agent agent code to be used to convert
sets the comments
returns the agent state
set the platform
returns the platform
sets the state of the
sets the from
returns the from
sets the
sets the acl representation of the acl
returns the to
gets the acl representation of the acl
sets the envelope
returns the envelope described by this envelope
sets the acl representation of the list
returns the acl representation of the acl
sets the from
sets the payload of the message
set the payload length
sets the to
sets the payload encoding
returns the payload encoding
adds a new aid to the receiver
removes a from the receiver
removes all receiver receiver from the list
returns an iterator over all
p activate the connection
set the received connection to the server
returns the protocol used to connect to the server
returns the connection factory
returns the received
this method is called when the timer is finished
encodes the value of the buffer to the given value
the
shuts down the dispatcher
get the helper service for the given name
this method is called when the timer is pressed
returns the property value
sets the id of the session id
sets the id of the message to be used for the given
set the status of the
runs the connection
returns a connection
write the aid to the aid
reads a string from the current stream
write a string to the stream
reads the date and time
interrupts the thread
reads a string buffer from the current channel
writes the date to the specified date
read a vector from the server
write a string buffer
adds a new transport to the
write the given vector to the vector
handles the connection to the
writes a string array
this method returns the message that is the envelope
this method is called when the thread is flushed
returns the protocol used to connect to the server
returns the connection factory
send the keep alive message
sends the keep alive message
writes the message to the server
this method is used to parse a command
this method builds a command to be executed on the exception
get the id of the remote object
returns a list of
returns the description of the
returns the list of urls that are being used
this method is used to convert a string to a
returns the owner of the container
removes all the
returns the owner of the agent
writes the content of the given file to the end of the
returns the of the receiver
checks if the given id is already set
initializes the data store
loads the given data from the input stream
stores the given string into the storage
prints the stack trace to the standard output
initializes the data store
sets the value of the property
returns a list of all the of the given key
adds a dhcp address to the list
removes the specified ip from the list
clears all the addresses in the list
returns an iterator over all the addresses in the list
removes a resolvers
clears all the resolvers in this context
returns an iterator of all the registered
add a new aid to the receiver
remove the receiver with the given id from the remote
this method removes all the elements from the receiver
adds a reply to the reply to the message
removes a reply to the destination
clears all reply to the reply to the message
sets the active state of the game
returns the schema object for the given class
this method is called when the user selects the activate method
returns an iterator over all the receiver objects
returns an iterator over all the reply to the message
set the default envelope
interrupts the thread
returns true if the given level is a level
prints out the properties of the properties
returns the properties of this code code
sets the properties of this reasoner
this method is responsible for creating acceptance of two
register a behaviour to the
register a new to the list
this method is called when the is
handle a confirm confirm
this method is called when the is
initializes the data store
updates the counter
this method is used to initialize the data store
updates the sysex record
this method is called when the is removed
this method is called when the query has been
this method is called to the code code method
method to handle a code code
register a handle to the
set the field to the given value
sets the object to the given
prepares a query for the query
get the text of the save save text
register a to the database
register a new listener to be notified when the user chooses to
register a to the
this method initializes the data store
inserts the specified element at the specified position in this list
description of the method
writes the list of objects to the stream
updates the
this method initializes this
removes and returns the first element
adds an element to the list
adds an object to the end of the list
this method initializes j content pane
this method initializes j panel
print an object
prints the string representation of the given string
print the line
print an object and then terminate the line
this method initializes j button ok
print a string and then terminate the line
stores the file to disk
refresh the board
this method initializes j table
print an object
print a string
prints the current date and then finish the line
print an object and then terminate the line
print a string to the end of the date
writes the map to the given stream
returns a string representation of this object
handles a new node
handles a dead node
handles a node from the given node
handles the node reachable from the
this method determines if the current thread is a termination
handle the agent registration
called when the agent is updated
handle a clone of a agent
called when a new agent is removed from the
close the underlying file
returns the jar file name
find the class for the given class name
finalize the garbage collection
this method is called by the agent
this method is called when the user is disconnected
this method is called when the node is added to the server
returns the child nodes of this node
returns the last ping
enable the
starts the server
disable the
register a node with the broker
remove the node from the list of registered
this method is called when the server is finished
processes the given command
adds a class to the pool
add a new to the set of
add a class to the ontology
add a new ontology to the project
returns a list of all concept names
returns a list of all the predicate names
dumps the contents of this file to the given print stream
returns the argument properties
fetch the data from the property
returns true if the two ports are equal
returns the maximum number of
create a new database connection
drop the table
checks if a table exists in the database
creates a table with the given name and table name
this method is used to create the
this method is called when the user agent quits
returns the batch update msg for the given batch of
handle an aid operation
this method is responsible for querying the
removes a single instance of the given object
adds an agent to the agents list
remove agent from the agents agents list
removes all agents
checks if the agent is present in the list
returns the position of the agent
the agent
adds a new message to the list
removes all messages from the server
removes all messages from the list
returns an iterator over the messages in this list
starts the server
closes the socket
sends a message to the server
checks if the given message is valid
checks if the specified name is valid
this method is used to determine the names of the receiver
loads the configuration file
cleans up the subscriptions
called when the user presses the action button
returns the message to be sent to the
returns the of the request
this method creates a description of the agent
sets the message to be displayed in the message
removes all the registrations
sets the icon of the frame
this method is called when the expired subscriptions is received
this method is called whenever the hello world is set
prints out the system out of the application
method to create a new message
sends a message to the server
removes a agent from the agent
this method is called when the user is being removed from the
removes all agents from the list of agents
initializes the splash screen
sets the progress bar to the given value
returns the list of subscriptions
sets the editable state
checks if the given name is present in the list
removes the subscription from the database
sets the editable
this method is called when the user changes the observable object
returns the agent list
closes the result set
registers a new
returns the message list
deletes the selected entry
add the dialog to the dialog
returns the component that is used to render the given component
this method is used to register a message to the server
close the statement
returns the user action
sets the list of message objects to display
returns true if the user is
register a new object to the
gets the value of the property
method checking if the list of the objects in the list
set the value of the code removed address code property
gets the value of the property
serializes the object to a string
method remove interval
this method sets the to the default value
returns the text of the text
registers a new address to the monitored address
sets the editable state
method tear down all parts
take the down request to send the
returns the address of the address
sets the user action
sets the text field
sets the input handler
deserializes a string from the input stream
sets the editable state
returns the clip name
sets the edit property for this edit
sets the address of the
sets the
returns the user action
returns the hash value for the given object
sets the user action
register a new field
sets the icon of the frame
returns the name of the column at code column index code
method checking if the specified interval has been added
returns the value at the specified row and column
converts a string to a string
register a property change listener to the property
description of the method
this method is called when the object is about to be updated
invoked when a component loses the keyboard focus
processes the focus event
returns the component that is used to render the given component
set the removed key
description of the method
sets the line of the text area
returns whether the area is copied or not
method that is called when the indices has been removed
replaces the first substring of a string with str and replace it
returns the preferred size of this component
method tear down all contents
sets the horizontal offset
sets the font of the component
creates a new agent
sets whether the area is copied to the copy
sets the text of the line
returns the
suspends the agent
invalidates the next line
tokenizes the line segments from the specified region
returns the font of the font
returns the font metrics for the given font
adds a message node to the node
returns a string representation of this object
register a new field with the specified name
unregisters the specified object
returns the component that is used to render the given component
updates the
invoked when a component loses the keyboard focus
returns the aid of the aid
suspends the container
sets the editable state
sets the document to be used for rendering the document
sets the
adds the token to the end of the list
returns the message
returns the performative
adds a message node to the conversation
returns the sender of this message
returns the ontology
the agent has been suspended
sets the message
sets the direction
sets the message to be displayed in the message
sets the panel
this method is called when a player agent is already being kicked
sets the text of this text
returns the of the message
register a new field and its object
resumes the container
deletes the current selected node
sets the read only flag for this node
the agent has been killed
registers a new aid to the given resource
sets the selected text
show the about box
sets the enabled state of the button
looks up the given byte in the map
saves a container
this method is called when the system is loaded
loads the
kill the container
returns the component that is used to deliver a list of
registers the object with the given object
method checking if the list of objects in the given
sets the aid of the
unregisters the specified object
sets the aid of the
method that is called when the indices are removed
invoked when a component loses the keyboard focus
receive message from the server
delete the selected status
returns the name of the function
exits the application
this method is used to create a new object
shuts down the application
sets the x y coordinate
setup the test
called when the user clicks the button
returns the subscribe subscribe
returns the cancel date
returns the request to be used in the request
returns the description of the filter
displays the status message
this method ticks all the tick
sets the selected text
deregister a mediator
this method is used to set the id of the
returns the connection factory
returns the description of the filter
kill the current thread
refreshes the last search results
this method is used to create a object
copies the selected text into the clipboard
handles incoming connections
returns the front end
paste the clipboard content from the clipboard
shuts down the logger
removes the component from the component
closes the connection
sends the refresh to the server
close the channel
returns the id of the active
kill the current status
returns the properties
shuts down all servers
kill the current thread
get the helper helper for the given agent
handles a connection error
encodes a byte buffer to a byte buffer
close the connection
this method is used to create a object
shutdown the application
wrap the next available port
returns the connection back connection
wrap the given data in the given buffer
returns the response to the end of the queue
get the front end
description of the method
shuts down the server
description of the method
called when the user presses the disconnected
called when the refresh request is made visible
description of the method
description of the method
called when the user presses the disconnected
deregister a mediator
description of the method
description of the method
description of the method
get the rmi registry
kill the current container
handles incoming connections
description of the method
shutdown the logger
returns the client socket factory
method initialises all objects
returns the component that is used to render the given component
the value of the href property
protege name rel property
protege name property
sets the title of the title
protege name and return the where clause
protege name realm name
the property entry for the property entry
protege name end time
protege name property name
protege name start time
sets the transparency of the clip
sets the read only property read only if read only
the content of the content
protege to
create a list of
sets the visibility of the visibility
this method is used to extract a property from the
jade main platform
the original event handler
returns the time slot of the given
this method is used to add a new list to the list
protege name value
handle the command event
run the worker asynchronously
run the asynchronous worker thread
cancels the asynchronous thread
returns the pending flag
reports on progress
removes a knowledge from the model
set the reasoner component
adds a new knowledge source to this knowledge source
updates the textured rectangle
called when the component is being resized
adds a new label to the list
lazily creates and returns the label for the label
fires a value changed event to the listeners
returns the percent of the
checks if the option is a special character
updates the current panel
called when the user is being activated
returns a string representation of the list
called when the algorithm is terminated
adds the given bean definition to the list of classes
returns the component manager
returns the source of the knowledge source
creates a new knowledge source
initializes the configuration
validates the configuration
tests that the learning result is expected to be returned
creates a new reasoner
this method is called when the reasoner is instantiated
returns the learning problem
returns a learning problem object
begin a learning object
returns the learning algorithm
returns true if the tab needs to be refreshed
returns true if the specified tab is enabled
enables disables the
converts a form expression to a short form
returns the maximum value of the box
returns the current axiom
returns whether or not this tab is smart adjustment
returns whether lines are wrapped
sets whether or not the smart indent is enabled
sets whether lines should be wrap lines
returns the component that this component is being used
description of the method
when the item has changed editing state changes editing
returns the graphical panel
returns the shift old concept
returns the number of covered points
returns the new concept
returns the x coordinate of the shift
removes all the elements from the panel
returns the
this method is used to display the trace for the user
returns the current noise
returns the maximum execution time in seconds
returns the maximum number of results to be displayed
returns the radio button
returns the el profile radio button
returns true if all the is selected
returns true if the box is selected
returns true if this is a sign negation
returns whether the value is selected
returns the profile panel
returns the cardinality of the
returns true if the cardinality is set
sets the selected radio button
shows the error line
set the selected radio button
set the flag that controls whether or not the
invoked when an action occurs
returns the x axis value
returns the y axis value
returns the individual name
returns the individual point
writes axiom to the axiom set
returns the
method called when the property changes
returns the code suggestion code panel
returns the options panel
this method is invoked when the mouse is pressed
sets the icon
show the status bar
sets the hint message
reset the
returns the current j algo panel
show or hide the options panel
returns the add button
handles the hyperlink update
disposes the panel
removes all the components from the list
returns the label for the
sets the is inconsistent value for this
gets the is inconsistent value for this
adds a listener to the run button
add a button listener
returns the graphical coverage panel
adds a listener to the button
sets the panel to the first panel
returns the learner view
sets whether the help button is visible or not
returns true if the tree is an auxiliary tree node
removes all of the elements from this grammar
increments the frequency of the
stops the timer
sets the number of days in the days
converts the ontology to a source file
checks if the given string is a namespace
this method returns a query result as a sparql query
query the query and returns the result
query the sparql query and returns the result
returns the limit of the sparql results
returns the
stops the query
returns the sparql query string
returns the json string
returns the converter
set the converter object to be used as the converter
returns the name of the
sets the modifiable map of subclass to use
returns true if the node is blank
sets the drop
returns a string representation of the specified component
returns the flag
returns true if the portlet requires the new
returns true if the is
checks if the given property is a
returns true if the given description is contained in this list
adds a axiom to the axiom
adds all abox axioms to the abox grammar
returns the number of nodes in the tree
returns the ith subtree of the node
returns the depth of the tree
adds a child to this node
adds a child to this node
removes a child from this node
register a new ami to be used when creating the given
unregister a component from this container
add a configuration entry to the given configuration
change the sources of the source
reset the statistics
release the specified component
set the updated
this method is called when learning problems
sets the component to be used for the reasoner
returns the reasoner associated with this
returns the component name for the given component
set the reasoner component
returns the sparql query sparql query
returns a representation of the
returns the manager
returns a clone of the given description
returns the description of this object
initializes the reasoner
returns true if the file is a prepared statement
make a fraction of a semi fraction of the given class
builds the from all of the instances of the
make a fraction of parallel classes
adds a number to the number of
prints the current time
print the string and then the print
returns the mean value of the distribution
adds an entry to the list
returns the mean value of the mean
print the string
set the time to the time
resets the time to its initial state
returns the current time
returns the examples
adds a list of columns to the table
returns the precision of the given set
returns the recall of the given set of segments
converts the given string into a string
compares this node to another node
returns the label of the summary
returns the value of the key
set the parameter
returns the number of elements in this collection
gets the value of the property
gets the value of the property
adds a tuple to the tuple
removes the tuple from the tuple
returns the root of the tree
computes the level of this tree
add a node to the level
replaces the label with the given one
add a new class to the tree
returns the node with the given position
returns the description of the root node
returns the negative number of the nearest
returns the size of the file
adds a description to the list
returns the score of the node
returns the number of covered examples for the given example
returns the number of covered examples
returns the value of the given parameter
returns the of the given
returns the value of the given classification
returns the tree
returns the score for the score
returns the sum of the sum of the
checks if the time is allowed to be executed
checks whether the given number of is too high
checks whether the given number of is too severe
closes the window
returns the number of files in the
returns the task
set the cutoff level of this statement
returns the tree
returns the tree node
gets the value of the property
prints the tree
gets the value of the property
accept all directories
returns the description of the extension
returns the length of the task
returns the current position of the current object
returns true if the is done
returns the message
starts the task
returns the task
clears the current node
search node from the node
search for a node in the tree
prints the node to the node
prints the tree
set the branch to the given node
returns the first node of the node
returns the number of levels in the node
returns the number of functions in the
this method is used to determine the of the
returns a string representation of this object
the
set the branch to be inserted into the tree
this method is called when the is built
set the cutoff of the node
set the of the
sets the matrix of the current matrix
returns the
set the node to the node
returns whether this is a in the
test whether the file type is a directory
returns the number of clusters
counts the number of files in the directory
updates the node
calculate the y coordinate of the top left corner of the viewport
test whether the file type type is a directory
returns the number of clusters
read data from file
test whether the file type is a directory
returns the number of clusters
the file name
test whether the file type type is a directory
closes the window
test whether the file type type is a directory
returns the number of clusters
compares this object with the specified object for order
prints the attributes of this object to the output
compares the two elements in the array
export the image to the specified file
returns the current node at the specified coordinate
sets the cur level
sets the options to the given value
sets the
returns the ontology list
returns the total on count
returns the total number of distinct times
returns the total number of genes for the gene
returns the x value of a b
exclude the list of from the list of the list of all
excludes the given array of elements from the given list of addresses
this method is called when the is in the
this method is called when the is included in the
export the table to a file
updates the
prints the current file
closes the data
exports the list of all the members to the given file
export the current table
sets the default column size
initializes the columns cols
updates the count of the items in the list
set the display to the given position
compares this object with the specified object for order
returns the data component
returns the data source of this component
returns the node at the specified coordinates
parses the content of the given content into a page
parses the given content into the page
returns the modified
resets the check box to false
sets the value at the specified column and the given value
starts the
stops the timer
returns a string describing this applet
returns a string describing this applet
called when the component has been resized
returns true if the screen bounds overlaps the screen
returns the resource basename for the current file
registers a progress listener to this
register a listener to be notified of gene annotations changes
register a listener to be notified when the changes
registers a new listener to the list of listeners
registers a listener to be notified when the annotation is
fires a progress event
notifies all registered listeners about the event
fires the aspect event
fire a curation color event
fires an annotation drag event
returns true if this thread is shutting down
returns the top leaf node of the given node
shows the dialog
removes an association between two code code from the
returns the node at the specified coordinates
centers the component on the screen
returns true if the user is logged in
returns the top leaf node of the given node
checks if the node is a candidate of a candidate node
resets the check to the first selected node
handles the check node check
shows the dialog
creates an image icon
gets the user name
returns the name of the system property
returns the name of the user
called when the application is started
destroy the midlet
initializes the editor
initializes the content of the desktop
close the record store
remove an error from the buddy list
deletes the record store
remove a buddy from the buddy list
adds a buddy to the buddy list
add a record array
resolves the address of the buddy
remove a buddy from the buddy list
write a record to the record store
returns the name of the buddy
loads the record from a record
updates buddy list
this method is called when the connection is initiated
sets the output
format the format of the item
this method sets the friendly name for the
the thread run method
listen for incoming connections
queues a packet to be sent to the server
returns the code code
gets the value of the property
sends a packet to the remote server
this method is used to retrieve the friendly name of the
this method loads the friendly name
constructor for network connector
forwards incoming message to the incoming message
waits for the thread to wait for the thread
store the default settings
store the settings from the given array of settings
connect to the specified service
resolves the address
the method runs continuously
resolve the name of the name
runs the thread
this method is used to handle the end of an application
sends a message to the buddy message
returns true if the scanning thread is enabled
updates the record attributes
pause the application
returns true if the given string is ignored
called when the end of an application is closed
called when a device is discovered
called when a service search completed
send keepalive packets to the current connection
called when the device discovery has completed
returns the string rep of the output
returns the mac address of the station
compares the name of the given buddy to the
registers a new registration control object
incoming message incoming message
registers a control
registers a new control
returns the destination of the destinations
adds a buddy to the buddy list
receive a message to receive receive notification of receive events
remove a device from the device
receive a message from receiving a message from a message
this method returns the friendly name of the
this method is used to set the friendly name of the device
returns the friendly name
this method is used to set the friendly name of the
update the settings for the given array of settings
get the local bluetooth object
returns the maximum number of connections to allocate
prints a debug message to the output stream
checks if the given address is known to be known
change the friendly name of the friendly name
called when the user selects a frame
prints a debug message to the debug output
called when the user has added to the screen
returns the code code
called when the user is removed
updates buddy list
called when the user has finished
returns the local bluetooth address of the current thread
called when the user has added to the screen
returns the local bluetooth adapter
called when the user has removed the event
returns the maximum number of connections to be used for the
send alert message to the control
this method is used to get the friendly name for the given
prints the to the
receive incoming message from a message
returns the
called when the user has added to the screen
receive notification of a receive call message
causes the device to vibrate for the specified number of milliseconds
saves the settings to the vibrate settings
sends an outgoing message to the server
send an outgoing message to the server
set the friendly name
subscribes to the update server
sets the left left menu for the dropdown
update the settings for the given array of settings
returns the interface by the address
remove a device from the device
sets the statistics
show the main screen
handles a receive message
set all settings to show the settings
exits the application
prints a debug message to the console
this method is used to print the error code
sets the language
called when the timer is removed
updates buddy list
this method sets the friendly name of the
sets the font size of the font
send a buddy message to the buddy message
this method is used to send a friendly name to the vms
returns the maximum number of connections to be used
starts the application
called when the screen is added to the screen
send alert message to the
sets the show own messages
end of an application
returns whether or not the display messages are shown
returns the local bluetooth device address
returns the maximum number of connections to be used for the
sets the show join leave
alert the alert that an alert is an alert
returns true if the join condition is a join condition
sets the value of the highlight parameter
send a message to the buddy
returns the state of the highlight
send a message to the buddy
set the amount of time to wait for the payment
returns the vibrate duration
sets the bluetooth device address
displays a message to the console
gets the local bluetooth address
sets the maximum number of connections to be used
sets the active tab
returns the max number of connections that will be
closes the tab and opens the tab
returns the language
returns the language string
sets the watched files
sets the
returns the task type
returns the last date
sets the task type
sets the last check
returns the watched folder
sets the task state
sets the watched file
returns the watched file state
sets the watched file state
returns a string representation of this object
returns the watched folder
sets the file to be watched
returns the watched files count
sets the watched files count
returns the number of files in the watched file
sets the
sets the
sets the
sets the watched folder
set watched file service
sets the
sets the watcher service service
runs the task
set up the test
test of get files in path method of class org
test of compute method of class org
print the string to the console
set the to the given string
called when the user presses the system
starts the
runs the
adds a value to the microarray
adds a value to the current value
insert a new project into the database
returns the line of the line
returns the preferred size of this component
returns the date in seconds
creates the help file
returns the reason why the given string is invalid
checks if the specified string is a valid reason
returns the reason why the given string is invalid
loads the
loads the settings from the project
loads the project
saves the current settings to the project
loads the settings from the preferences
sets the value of the field
returns the option with the given property name
loads the
saves the current project
constructor for an option type
saves the current state of the settings
sets the value of the field
validate the value of the field
why the reason why the reason why the value is invalid
loads the project
saves the current project
returns the next key
checks if the given jdofield is a valid state
runs the
prints out the list of strings
parses the string and returns the content of the string
returns the name of the progress bar
returns the class file class for the given name
creates a new job
initializes the
returns the dependency
encode the metadata in the metadata
starts the thread
this method is called when the thread finishes
produces a string representation of the metadata
returns true if the current thread is ready to run
runs the
starts the scheduler
returns the metadata for this device
runs the
returns the hash
returns true if this file is run
returns the sha1 hash
returns true if the job is a
returns the foreign key of the given number of the
returns the metadata for the metadata
returns true if the job is run
runs the event
returns true if the file is run
returns the file object that is used to create the file
returns the next job in the queue
returns true if the job is a metadata
runs the
runs the event
returns true if the task is a
returns the metadata mask
starts the thread
executes the job
creates an inputstream to the stream
returns the metadata for the metadata
encode the metadata in the metadata
returns true if the task is a
creates an inputstream to the stream
produces a metadata friendly string for the metadata
sets the fallback
starts the scheduler
builds an input stream for this object
returns the metadata for the metadata
reads the next byte from the stream
set the complete view to be used for the
reads the bytes from the stream
starts the
notify the about the of the
sets the key to the next collision
returns true if the thread has finished
sets the warning message for the warning
stop the timer
waits for the runners runners thread to wait for finished
runs the job
creates a new thread counter
starts the thread
waits for all threads to be waiting
release the thread pool
sets the progress name
returns the progress name
sets the data
gets the value of the fingerprint property
returns whether the is a
returns the result key
returns true if the mouse is a key collision
parses the file
this method determines whether the given text
returns the string representation of the
returns true if the is unreachable
releases the current instance of the class
returns the reason as a string
returns the of the given
the file is a wire
the file to the given file
returns the value of the named variable
creates a new
returns the port number of the socket
returns the string representation of the current
returns the host name of the sender of the host
returns a list of all the hosts
creates a new socket
f0 global connection to first argument
f0 global connection to first argument
f0 global connection to first
f0 global connection to first
this method initializes this
this method initializes j content pane
this method initializes j text area
this method initializes drop down combo box
this method initializes j button
this method initializes j content pane
this method initializes j panel input
this method initializes j panel output
this method initializes results main pane
this method initializes algorithm steps results results
this method initializes closed form panel
this method initializes reducer panel
this method initializes panel
this method initializes var rename panel
this method initializes ahead panel
this method initializes panel
this method initializes panel
this method initializes closed form split pane
this method initializes form text field
this method initializes reducer split pane
this method initializes logic connector reduction
this method initializes j split pane
this method initializes reduction text field
this method initializes var rename split pane
this method initializes j text field
this method initializes lookahead split pane
this method initializes j text field
this method initializes split pane
this method initializes normal form text field
this method initializes split pane
this method initializes text field
this method initializes log text area
this method initializes remove for all panel
this method initializes remove for all split pane
this method initializes remove for all text field
this method initializes j split pane2
this method initializes j scroll pane1
this method initializes log panel
this method initializes log split pane
this method initializes clear log button
this method initializes log area scroll pane
this method initializes j jmenu bar
this method initializes j menu file
this method initializes j menu
this method initializes j
this method initializes j menu item clear history
this method initializes j menu item default example
this method initializes j menu item clear
this method initializes open file dialog
this method initializes open file panel
this method initializes closed form button
this method initializes logic button
this method initializes button
this method initializes j button4
this method initializes button
this method initializes remove panel
this method initializes single operations op
returns a localized string for the
sets the value of the code zero lines code
sets the list of fields to the given map
sets the possible solutions
checks if the given list of vertices is a game
creates a history
returns the current history step
returns the index of the last marker marker
returns the number of trees in the list
adds a new marker to the queue
builds the turn
search for trees
undo the last of the given player
prints the horizontal line
builds the last marker marker
clears the marker history
sets the gui layout
returns the number of marker indexes
returns the number of turns in the game
search for the given list of
sets the gui to be used for the gui
sets the gui layout to the components
initializes the command
this method is invoked whenever the is
sets the gui layout to the components
the history counter
initializes the commands
check if the step is the forward
sets the enablement state of the button
check if the step is reverse
set the field size
enables or disables the button to switch to the reverse order
clears the gui
enables or disables the play button
sets the enabled status of the button
refresh the text
initializes the commands
sets the gui layout to the gui
updates the label and button
sets the marker label text
initializes the commands
returns the path to the file
initializes the commands menu
enables or disables the save menu
save the game to a game file
saves the to the given
refreshs all the texts
sets the board of the game board
returns true if the panel is a panel mode
gets the value of the property
initializes the commands
sets the
returns whether the first draw is drawn
returns true if the panel is a game game panel
sets the draw draw
returns true if the window is currently being
changes the panel
adds a new marker to the list
this method is called when the marker is reached
checks if the is
changes the information of the panel to be inserted
checks the game
gets the
forward the step to the current history
sets the
clears the internal state
clears the
plays all the steps
returns the
rebuild the fixup stand alone medium
reverse the steps of the
sets the
reverse the reverse step history
creates a manager instance for the given field
stops playing all steps in the game
creates a new
returns the object for this
called when the finish button is pressed
this method is called when the progress bar is being resized
called when the filter starts
returns the number of lines in the given array
runs the given text
interrupts the thread
returns the toggle button
returns the value of the text property
validates the input
this method initializes this
this method initializes this
unregisters the node list adapter
this method initializes this
this method initializes j split pane1
this method initializes
this method initializes split
this method initializes nome
this method initializes button send msg
this method initializes tf msg
this method initializes j text field
this method initializes button draw
this method initializes button
this method initializes load
this method initializes ta msgs
returns the expression
reset the timer to zero
returns the column sql statement for the given column
clears the list of all the indexes
removes all data sources from the table
insert a filled row
remove a datasource from this datasource
creates a new data source
deletes a row from the table
sets the value of a field
register a table to the database
insert a row in the table
get the data source
register a table view with the given name
execute the given sql statement
returns a connection to the database
gets a connection from the database
returns the value of the given row in the table
frees resources from the database
returns true if the current thread is open
returns the temporary file name
returns the strategy for the given instrument
returns the value of the driver as a string
redo the last element
this method is not supported
sets the selected rows
test method for
test method for
test of to data source method of class opb tree
test the
test of union method of class com
test the select
returns the string value of the given key
returns the string associated with the given key
returns the string value of the given key
get a string from the message
notify the user that a player has been
returns the
process advertisement from the given advertisement
creates a new advertisement event
initializes the
starts the peer discovery
starts the discovery
returns the advertisement
clones the event
stops the timer
this method is used to create the peer group
initializes the components
create a new name
returns the creature that this creature is operating on
test of add participant method of class
test of has more participants method of class
test of get next participant method of class
process advertisement from the given advertisement
returns the of the creature
returns a string representation of this object
test of get method of class xor system
test of get method method of class xor system
returns the number of in the current creature
test of get ref method of class xor system
test of init method of class xor system
compares this object with the specified object for order
test of defaults method of class
shuts down the server
test of player name method of class
damage armor armor armor armor armor armor armor
test of description method of class
get the of the
test of is scores method of class com
decrements the of the
test of description method of class
compares this object with the specified object for order
test of weapon method of class
initialize the
test of defaults size method of class size
test of to string method of class
initialize the
test of equals method of class reflective
test of zero method of class
test of fold method of class
test of method of class
test of stat stat method of class coin
test of is method of class
returns the modifier for this
test of points method of class wifi
test of set size method of class
test of default method of class
test of is order neutral method of class
test of default temporary file pawn temperature
returns the amount of animals
set ability to choose a score
test of set by total method of class
sets the size of the
test of is method of class
returns the of the
test of get stat method of class
compares this creature to another creature
returns the of the starship
returns the total of the animals
set the value of the
test of is good method of class
test of defaults method of class com
returns the
test of get stat ability method of class
test of calculate method of class xor zone
test of calculate method of class xor zone
returns the temporary
test of is neutral method of class
test of npc cap method of class
sends a message to the server
test of dependency method of class
returns the number of scores
test of damage method of class com
returns a string representation of this quad
sets the of the
test of defaults method of class
returns the alternate
get the of the
test of is method of class
test of get stat method of class xor system
test of zero method of class
damage the damage
sets the temporary temporary pressure to the specified value
returns the creature
test of ability score change method of class xor
decrements the of the temporary
sets the shield value
return the creature set by the given position and its
test of damage damage method of class com
test of die roll armor method of class xor
sets the ability score
sets the armor value
test of damage dice dice dice method of class
sets the
damage armor units
get the of the
returns the number of
test of default size method of class com
the number of points in a given creature
test of ability method of class
sets the ability to whom this player is
test of is method of class
sets the temporary temporary temperature
sets a new
test of is method of class
test of zero method of class
sets the
test of default range range increment method of class
sets the cap attribute of the object
resets the
test of critical critical method of class
test of default weight method of class com
returns the current
test of default description method of class com
returns the of the current health
sets the value of the con score
sets the size of the message
returns the current score
sets the value of the code int code property
returns the current value as an int
sets the of the
returns the of the
sets the of the
returns the of the
set the name of the creature
returns the name of the creature
set the name of the player
returns the name of the player who is the player
sets the hit points
returns the current
returns the health of the player
returns the health of the current health
sets the armor
sets the value of the
sets the cap cap
sets the base stat
returns the of the
returns the of the
sets the of the
saves the of the
returns the current
returns the number of in the
returns the current value of the code ref code property
sets the level of the level
sets the hit dice of the bomb
returns the current level
returns the current value of the cur hit dice
sets the number of points in the
returns the current
sets the
sets the of this weapon
sets the
sets the weapon
sets the name of the
set the class of creature
sets the race
sets the other info
set the size of the creature
set the size of the creature
set the speed of the servo
returns the name of the class
returns the class of creature that is
returns the race of the race
returns the speed of the game
returns the weapons attribute list
returns the weapon at the specified index
adds a weapon to this weapon
picks the pair of vertices and vertices
convert a byte array to an object
this method is called by the
the main method of the main method
evaluates the operator and pops it from the stack
create the lookups environment
encodes a rational number
initializes the bucket
puts a compressed value into the map
puts a byte in the property
puts a string in the default value
puts a key value pair into the cache
puts a key value pair into the buffer
puts a key into the map
returns the string value of the given key
get the int value of the key
tests if the specified bucket can split the
returns the prefix common to the other prefix
get the value of a key
purges the database from the database
a static code code
reads a string from the input stream
writes a socket address to the socket address
override to generate the tick for the tick
prints an error message to the system
prints an error message
returns the socket in the given socket
called when a socket is closed
disconnect the data from the
adds a process state to the given list
remove a from the
returns the list of clients
initializes the socket
opens a new open state
send the ack state to the server
this method is called when the initiator is made
process the open new request
deletes the given state from the database
process the sync process state
process the closed connection
this method is called when the user selects the clients list
sets the policy for this policy
process the report report
notify all listeners that have registered for this service
send sync complete sync message to the socket
returns the length of the header
sends a data packet to the server
writes the content of the receiver to the output stream
sets the data
returns the length of the header
sends a communication to the server
writes the content of the receiver to the output stream
sends a communication data to the server
returns the length of the header
returns the type of the request
returns the reason code for reason code
sends the data to the server
writes the content of the receiver to the output stream
sends a data packet to the server
writes the content of the receiver to the output stream
writes the content of the receiver to the output stream
sends data to the server
sets the hostname of the ip address
returns the host name
returns the ip address of the ip address
returns true if this object is a flag set
returns the
sets the
sets the data
returns the length of the header
sends the data to the server
writes the content of the receiver to the output stream
sends a data to the server
writes the content of the receiver to the output stream
returns the length of the header
returns the error code message as string
sends the data to the server
writes the content of the receiver to the output stream
returns the command
sends a network data to the server
returns the
sets the command
sends data to the server
returns the type of this object
returns the command to which this command is
returns the string representation of this flags
sends the data to the server
writes the content of the receiver to the output stream
dump the contents of the header to the output stream
returns the address of the host
set the address to the host name
sends a packet to the server
write the header to the output stream
set the ip address
returns the host name
returns the ip address
parses the byte array into a byte array
returns the length of the element
sends a network to the server
returns the name of the
sends a data to the server
dumps the contents of this stream to the output stream
adds an object to this header
adds a timer to the timer
adds a new object to the account
set the length of the timer
adds an object to this header
adds an object to the
adds an object to the
adds an object to the
sets the length of the header
adds an object to this header
adds an object to the set of error messages
adds an object to the
sets the length of the header
the
processes a socket
removes a from the database
called when a socket is closed
this method is called when the socket is disconnected
sets the current status of the sync
initializes the server
sends sync request to the server
prints a report
reports the state of the given message to the server
handles a successful report of the given
sends a report to the server
notifies the connection that the given connection has been closed
the method code manager code
process the closed connection
notifies the connection state to the remote state
set the status to listen for incoming requests
sends all the clients to the server
processes the given request to execute req
this method is called when the user selects the
this method deletes the state of the
send request to the server
opens a new file state
notify all clients that the client has closed the
close the socket
this method is used to write the socket to the socket
creates figure for this edit part
creates nodes palette tool group
runs the program
sets the listener to be notified when a
initialize the
set the user interface
sets the listener to be notified when a new value is added
construct a private message
find a channel with the given name
creates a new channel with the given name and channel
set the topic topic
destroy the channel
the thread run method
add a key element to the queue
checks if the data is valid
lists the current list of objects in the list
returns true if the given command is a malformed command
updates icon of icon
clears the sheet
loads a sheet from the list of worksheets in the spreadsheet
executes the given command
opens the file with the given filename
close the logfile
append a file to the current file
the thread that processes a threaded execution
executes the given command
adds a new row to the list
displays the info about the
starts the process of process guis
sets the cell at the given row and sends a
ftp ftp ftp ftp ftp ftp ftp ftp ftp server
execute command
runs the command
sends a status message to the server
connect to the server
this method is called when the device is discovered
this method is called when the device is discovered
called when the device discovery is finished
executes the given command
this method is called when the service has been discovered
executes the given command
runs the action
executes the given command
returns the name of the device
performs the action
updates the selected tab
saves the properties to the file
creates a new device
adds a to the list
add a device api api call
the main method of the application
get the value of a property
returns the value as a boolean
returns the integer value of the key
logs an error message at the specified level
runs the device
returns the delta time of the last time
connect to the server
reads the device from the socket
close the connection
sends a message to the server
shuts down the server
shuts down the exception
updates icon of icon
opens the file with the given filename
returns a xml representation of this object
load a sheet from the feed
executes the given command
executes the given command
sends the channel
connect to ftp server
starts the thread
updates the charts
updates the selected tab
executes the given command
saves the properties to the file
create a new device
add a api to the device
initializes the applet
get the property value
returns the value as a boolean
runs the device
returns the integer value of the key
this method is used to encode the bytes in the socket
reads the device
enables or disables the
set the debug flag
kill the device
kill the bot
shuts down the application
shuts down the server
increment the usage of the
load the given command line
returns the name at the specified index
checks if the given name exists in the database
returns the info info object for the specified index
returns a string representation of this object
make a path end
helper method to throw an exception with an incorrect parameter value
show the header
writes the contents of the file to the given file
open a file to be opened
reads a line from the input file
closes the input file
returns the index of the source of the given pattern
replaces the pattern with the given pattern
add a to the
checks if the given string evaluates to the given string
evaluate the string
returns the line number of the source file
returns the file name
make a path to the path
this method is used to parse the macro
strips a strip from the string
strip the name of a strip from the
creates a file
close the file
put the line into the buffer
returns true if the string is a valid string
print the string representation of the given string
print a string and then terminate the line
todo create a tree view
checks if the platform is already running
adds an feeds to the feed
remove a feeds feeds
adds a dao to be used for saving the feeds
remove an existing dao
build the columns header
returns the layout of the editor
build the listener for the tree
build the menus
removes a subscription
sets the listeners to be notified when the
sets the listeners to be notified when the
sets the subscription selection
track the track of the track
checks if the time is alive
connect to the server
disconnect from the server
set the to the
stop the thread
returns a condition for the condition
returns the password of the
creates a new
checks if the user is allowed to login to a given login
sets the request
returns the request result
returns the next request result in the list
returns the login manager login
deletes a given user from the agenda
write the given document to the output stream
creates a new snmp with the given group name and the
deletes a new snmp mib
returns the active role of the given list of active
returns the user
this method is used to connect to the server
finds the user who owns the login
initializes the table
find the user by its id
adds a user to the database
modify the password and the user password
returns a list of role instances
find a role by its name
find a role by its id
adds a role to the collaboration
modify the role
find the scope type of the given path
find the scope for the given id
adds a scope to a scope
returns the permissions of this permission
get the permission ref
builds the data document
find a permission by its id
builds a dom document of the
adds an element to the element
returns the session
returns the session id for the given user id
find the session based on its id
deletes a session from the database
returns a list of roles assigned to a given user
this method is used to set the permissions of the role
generate the user id
called when the edit is being closed
called when the edit is closed
adds an undoable edit to this undoable edit
validate the parameters for the given parameters
validate the parameters provided
returns a rendered image containing the decoded content of the
decodes a picture
sets calibration
returns the scaled roi based on the given roi
sets the calibration object for this camera
returns a rendered image containing the decoded content of the
returns the scaled roi based on the given roi
returns the scaled roi of the given roi
rotates the camera orientation
returns the name of the format
returns the mean of the mean
returns the covariance value of the covariance
calculates the covariance of the specified
returns true if the specified format is recognized
set the x value of the specified position
set the y coordinate of the given point
set the z coordinate of the given range
sets the value of the specified band
sets the red value of the specified color
sets the green component of the given value
sets the blue value of the color
returns the value of the specified sample
sets the color of the given rgb value
ranks the given location with the given rank and neighbor
returns neighbor direction neighbor
returns the nearest neighbor to the specified location
returns the filtered file for the filter
the neighbor
returns the blue color component of the specified colour
returns the green value of the given color
returns the red component of this vector
returns the smallest of the
returns the scaled roi based on the given roi
returns the smallest value in the
returns the smallest green value
returns the smallest value in the intensity
returns the maximum red of the red component of this
returns the maximum green value for the green band
returns the maximum value of the blue component
returns the mean of all the samples
returns the covariance value of the
returns the mean of the
calculates the green component of the surface
returns the mean of the
returns the covariance value of the
compute the mean of the
calculates the covariance of the covariance matrix
returns the x value of the given x coordinate
returns the y value of the given value
returns the z coordinate of the given coordinate
returns the camera position
returns true if the specified value is a noise
returns the value of the parameter
returns the uri of the type of the given alias
sets the policy url
puts the user data into a url
get the token associated with the given request
returns the access token for this
sets the access token for this access token
returns the request token
returns the user id of the user
returns the server
get the user object from the request
get the person who is the person
returns the friends list
get friends retrieves paged list
sets the access token
generate a url request url
generates a url for the specified request
get global application data for the application
get the global app data object for the given key
puts the application data into the application
this method is used to get the http method from the http
clears the global application data for the given global request
puts the data into an application
get the app data object for the application
get the app data object for the application
clears the data from the database
get the user data
get the user data from the given user and return it
get the user object for the given user
get comments for a user
get the indicators for a given user
get the preferences object
get the albums user from a user object
get albums from a user
get the album for a album
get album photo
get the album info object for a album
get friends retrieves the friends list for a given user
get friends list for a user
get friends list for a given user
get the
get the mood associated with a given user
get the
get the photos url
get the photo object
p get the profile object for a user
get the profile ims profile
get the status of the user
returns the status of the user
posts a status to the given url
set the mood for the given user id
sets the mood of the mood
sets the status of the given user
sets the mood of the given mood
get friends status from friends
get the
get the video
returns the atom atom
get the atom atom
returns the users friends list of the given user id
get friends of the given activity
gets the portal portal portal
set the portal
sets the start column
adds a new column to the list
add a new header to the list
returns the column of the portlet
returns the index of the portlet
this method is called when the portlet is being dragged
inserts a new header into the flex table
removes the specified portlet
sets whether the scrollbar is adjusting the scroll bar
sets the width of the column at the specified column
sets the spacing between cells in the container
adds a subtask to the task
returns a string containing the bean
generates a string for the
generates a property from the bean
writes a url to a url
prints the license info to the log
strips the version number of the given file
validate the report
this method is called to start the
this method is invoked when the is removed
returns the time difference of the time
moves the next character to the end of the buffer
compares the specified object with this code item code
compares this object to the specified object
compares the specified object with this
begin a new transaction
end the transaction
compares the specified object with this code code
returns true if the transaction is in the transaction
reset the transaction
returns the session
update an object in the database
delete the object
create a new channel with the given name and channel
returns a string representation of this object
returns a hash code for this object
returns a string representation of this object
returns the session
get the session
sets the connection
this method will be called when a group of channel is removed
reloads the given item from the database
returns the number of indexed items in the list
returns the number of hits
returns a string representation of this object
returns the hash code value for this object
returns the time of the specified channel
notifies the observers that the new item has changed
process the record
notifies all registered channel that the
create a new thread
called when a channel is being listened
this method is called when the user changes the channel
this method will be called when the user has started
this method is called when the status of the work is finished
reads the bytes from the input stream
returns the input stream for the given input stream
sets the canceled status
returns an input stream for the given input stream
check if the channel is in process
sets the queue
schedules the specified task to be assigned to the specified
runs the thread
sets the etag to the given etag
returns the record
resets the statistics
increment the number of times the file is now
returns whether the window is able to be used
returns whether the format is detected
sends an observer to the living
notifies all observers that the given channel has started
notifies all observers that the given channel has been finished
checks if the channel is a channel item
called when the user has finished processing a channel
adds a new to the list
removes the given from this set
create a new worker
create a group for the given title
deletes a group from the group
update the group of the group
returns the time of the specified channel
returns the time of the specified channel
updates the channel
update the item
returns the time of the specified time period in milliseconds
returns the time to expire
returns a hash code for this object
checks if the is out of a
returns a string representation of this object
notifies the observers that the new item has changed
sets the minimum delay update delay
returns the number of items in the specified channel
notifies all registered channel that the
interrupts the thread
this interrupts the thread
add a channel to the channel
adds a channel to the channel
gets the value of the channel builder property
returns true if the feed contains a feed
handle the channel info
returns the channels of the channels
adds a feed to the feed
removes a feed from the feed
get the feed associated with the given uri
removes a channel from the channel
returns true if the given channel is active
returns the time of the timer that this will be scheduled
calculate the period of the
sets the accept number of errors
sets up the fixture for example open a network connection
test the
tests the empty groups of a group
test that the group is not already added
test of add delete method of class org
tests the channel group of the channel
creates the threads
test the start stop method group
clears the list of processes groups
create the map display groups group and create the map layer
add a list of snapshots to the group
restore the scale pictures
creates a group group with the given name
runs the given
add a channel manager to the server
sets the active
activates the processes
activates the processes
returns the db
copies the source file to the destination file
closes the scale database
this method is called when an item is found
called when the user changes the channel of the channel
returns true if the given channel can be added to the item
generates a channel name for the channel
returns the name of the method
returns the manager
initializes loggers log4j
creates a new group
updates the group of the group
deletes a group from the list
create a new channel
updates the channel
adds a channel to the group
removes a channel from the group
the channel will be called when the channel is about to be
creates a new
creates a new item
updates the item with the given item
deletes an item from the list
test delete group by id
called when an item is added
this method is called when the user is polling the server
test method for
called when an item is added
test the file with no version
returns a string representation of this object
returns a string representation of this object
test for a file
main processing method for the server object
returns true if the message has failed
returns the item at the specified row index
adds an item to the list
returns true if the channel is a conference element
set the cg cg for the component
the channel
returns the format of the file
initializes the internal state
create the main frame
set the selected guide
set the selected channel
invoked when an action occurs
set the selected channel
returns the selected guide
returns the value at the specified position
returns the item at the given position
set the registry to be used for the
returns the channel
sets the channel
returns the global model
returns the channel tree
set the channel tree
returns the channel tree model
returns the action to be performed
select the channel
locates the feed stats for the given feed
selects a guide
sets the channel view
returns the channel view
returns the global model for the
returns a channel stats for the given feed
returns the channel model
sets the item detail view
description of the method
returns the detail view
opens a database connection to the database
this method is called when the thread is started
pops a simple from a channel
returns the main panel
sets the graph
initializes the column width
adds a vertex to the graph
removes a vertex from the graph
removes all nodes from the tree
changes the vertex to be used for the given vertex
this method is called when the topology is
check if the current address is unique in the list
stops the filters
creates a map of cells for a given point
sets the user detail access to the given user
sets the dao for the dao
checks if the user name is available
set the activity log dao dao
set the employee manager for this instance
setter for property time card dao
sets the employee dao
sets the site dao
get the employee for the given employee id
saves the member to the database
validates the given member
save employee employee
the time in milliseconds to be updated
saves the site to the site
this method is called when the user is out of a time
validates the given site
validates the given employee
get the activity at the given index
saves the activity to the given activity
validates the given activity
returns the value of the code value code property
creates a new ticket event
returns the tickets queue
returns the incident
returns the value of the value property
returns the attachment
creates a new instance of the code contract
constructs a new exception and sets the default
constructs a new project name action
description of the method
creates a new flavor action
constructs a new instance of the code call action code
opens a bug window with the default
creates a new main tab panel
creates the queue inspector for the current inspector
creates a new progress kit
returns the splash window
returns the progress bar
increases the value of this object
runs the uc
resets the panel to its initial state
sets the maximum value of the progress bar
sets the label of the message
shows the window
kills the splash screen
creates a new application frame
creates a new panel with default values
creates a new status bar with the default values
returns the project group of the project
returns the name of the project
create a new status bar
displays the status label
displays a text alert
creates the panel
returns the text in the current user
reset the state of this object to the initial state
returns true if the text is
returns the incident component
returns true if the label is a reset
show the ticket count
this method is called when the is closed
creates the incident message
creates the incident component
creates the optional incident item
create the controls for the controls
constructor which takes a message and a cause
create a new
creates a new instance of the server
returns the url to the service
this method is called when the incident has been added
process the queue
get the url of the endpoint
method to distribute the ticket
returns true if the worker is ready to distribute the worker
returns true if the tickets is waiting
checks if the given ticket ticket is a ticket
creates a new simple ticket writer
create a new simple ticket writer
get the url for the
create the mail instance
adds a message to the subject
create a new email instance
returns the text row for the given key
called when the user has been removed
add a message to the mail
adds a new code code to the given email
called when a ticket has been added to the queue
description of the method
returns the distribution trigger
called when the incident button has been added
called when the ticket changed
checks if the given ticket ticket is a ticket
creates a new okapi object with the given message and cause
creates a new okapi object with the given message and cause
creates a new okapi object with the given message and cause
this constructor is called when the
this method is called when the is removed
creates a new code incident id generator code instance
returns the next long identifier
adds a ticket to the list of tickets
removes a ticket from the list of tickets
notify all registered clients that a ticket has been added
notify all registered listeners that a ticket was removed
add an event to the list of listeners
this method is invoked when the user is
creates a new ticket impl object
this method is called when a string is
removes the incident from the incident
checks if the given key is a base property
test the adapter
sets a property
creates a new ticket pane with the given dimension
adds a new incident tab to the list
removes the incident tab from the incident
returns the index of the incident incident
description of the method
add a listener to the incident button
called when the ticket changed
this is the user clicking the incident
called when the user has added to the
called when the user has removed removed event
creates a new ticket table model
updates the ticket
returns the name of the column
returns the most specific superclass for all the specific values in the
create a new ticket table
description of the method
called when the user has been removed
called when the user has added to the form
creates a new ticket table model
returns the name of the column
the user has added a listener in the messagebox
updates the tickets tickets
called when the user selects a ticket
removes a listener for the specified worker
returns the ticket at the given row number
this method is called when the process is being updated
returns the most specific superclass for all the specific values in the
creates a table model summary model
creates a new empty table
updates the tickets tickets
description of the method
description of the method
called when the input window has been removed
adds a listener to the queue of workers
sets the value at the specified location
removes a listener from the queue of worker workers
creates a new ticket table
the table model to create a new
updates the incident
sets the code ticket queue code that will be used to allocate
returns the number of rows in the table
create a new instance of tt incident table tt
this method is called when the user has added to the model
creates a new code incident table renderer code
this method is called when the attachment is removed
description of the method
constructs a new instance of this class with the given name
creates a new folder
return the url to the current directory
called when the user has added to the event
called when the attachment is removed
this is the add action to add a listener to the event
this method is called when the incident has changed
this is called when the user clicks on the incident button
called when the user has added to the post
called when the ticket changed event
called when the ticket of the ticket is removed
process the queue
deletes the folder
returns the attachment index file
create a new instance of this bean
create the enterprise ejb session bean
creates a new instance of deployer
casts the message to a text message and displays its text
tests if a specified file should be included in a file list
perform the uc
test method for
test method for
perform the login
the create method called by the session when the ejb
returns the application configuration
starts the job
stops the service
gets the cron tab
sets the cron tab
login to the server
logs the user out of the current user
perform the login
this method is used to add a project to the database
method ejb remove
performs the action
perform the action
returns the number of recipients in the list
perform the login
performs the action
performs the operation
set the value of the root property
adds this component to the specified container
add an error listener
clears the cache
returns true if the given key exists in the cache
is the given access
returns the number of services in this collection
returns an enumeration of all the keys in this session
returns an enumeration of all the services in this service
returns the url to the server
returns a string representation of the object
clears the server
put a key in the server
returns the value associated with the given key
removes the key from the server
returns true if the given key exists in the server
returns true if the given is already in the list
returns the server with the given name and server name
creates a service record
returns a service with the given name
free the service
convert a representation of a representation to a protocol representation
convert a string representation to a server name
convert the representation to a service name
convert a representation of a representation to a service
method to remove a single entry from the database
this method initializes
returns the name of the service to be redirected to the
returns the string representation of the
returns a string representation of the server
notifies all listeners that the busy state has been active
notifies all listeners that the current state of the
returns the attribute meta data for the given attribute
returns the event id
compares the specified object with this code user profile principal code
returns the user profile name
adds a property change listener to the listener list
returns the hash code for this object
add a vetoable change listener to the listener list
initialize the user profile
returns the name of the user
sets the user profile name
returns a string representation of this object
returns the system
destroys the transport
retrieves the time to expiration
returns the user profile name
returns the version number of this version
compares the specified object with this profile
returns true if the current credential is currently being set
remove a property change listener from the listener list
refresh the cache
remove a vetoable change listener from the listener list
sets the credential
sets the system
swap two nodes
compares the specified object with this profile
returns the hash code for this object
set the handle to the handle
set the handle to the specified value
returns the timeout interval in seconds
indicates that a connection has been established
called when a connection is disconnected
this method is called when the garbage collector is garbage collected
destroy the servlet
returns the
stops the timer
returns a string representation of this object
returns the type of the token
returns the hash code for this object
returns the extended info object for this object
destroy the service
set extended information about the given extended extended object
finalize the object
returns true if this is a
returns true if the type is reusable by the
encode the given byte array
returns the time to expiration
refresh the content of the
sets the timeout interval in seconds
sets the token
refresh the authentication policy
sets the principal
sets the system
sets the token type
swaps the two elements in the buffer
returns a string representation of this object
sets the starting date
sets the date of the end of the date
returns the ending date of the date
converts a date to a string
get a connection from the database
clones the object
creates a new instance of
clones the object and returns a clone of this object
constructs a new
the constructor of the server
sets the value of the code concurrent access code property
creates a struct object
retrieves the raw data stream
creates a new array of elements
creates a new struct struct
retrieves the identifier of the server
begin uml doc
disposes the resources associated with the current profile
checks if the current profile is already in refresh
returns the system
returns the default property index
returns whether the specified row is a data mapping
deletes the object
sets the value of the code maximum read cache code property
called when a new shape is added to the buffer
called when a is seen
the cell and near the
the
handles the auto
creates a struct object from the struct
construct a new
sets the user filter
returns whether the bidi should be expanded
sets whether the bidi expand is enabled
returns the time in ms milliseconds since the last call to
checks if the credential is empty
disposes the credential
converts the given java java java object to a java java java
returns the java script code code
process the request
sends a reply to the server
returns the maximum blocked input rows
returns the time to expiration
the data
sets the value of the em b em b b em
constructor for a proxy object
add a listener to the
adds a vetoable change listener to the code vetoable change listener code
removes the specified from the list
remove a vetoable change listener from the listener list
returns true if this node is a use
sets the layout attributes to the specified value
p records the value of the field
p records the designated column
sets the designated column in the current row to the given
sets the designated column in the current row to the given
set the native type of the native movie
this method is used to convert the object to a
clones the object
sets the queue filter
returns the job identifier
set the peers to be used for the peers
returns true if this thread is allowed to use the
creates a new code code object
sets the threshold for the next available balance
creates a socket container
clones the password
creates a struct object
clear the result of an operation result
sets the designated parameter to the given code stream code
returns the text
returns the default action
returns the value of the property with the given property name
returns the text
remove a property change listener from the listener list
returns the child at the specified index
returns the value of the property with the given name
creates a copy of this program
returns the value of the property with the given object as a
returns true if the service is a service program program
returns the value of the specified field as an int
returns the default event index
returns the system
move the cursor to the last position
returns the direction of the table
returns the language of the current language
sets the direction of the
sets the language of the current language
set the system object to use for this plugin
returns the icon for the specified icon
returns the name of the share
returns the share path
set the name of the share
set the share path
sets the pattern matching the pattern matching
returns the share path
set the share path
set the name of the share
invoked when an action occurs
returns the string representation of this object
returns the header length of the header
returns the next header
returns a string representation of the filter
returns the header length of the header
returns the next header
returns a string representation of the given format
returns the address of the address
returns the data buffer
returns the packet
sets the color of the color
returns the number of bytes in the record
clones the bit set
returns the string representation of this object
returns the value as a boolean
returns the bit value of the bit specified by the given bit
get the time
returns the bit size of the
get the rec type
returns the byte size of the byte array
returns the string representation of this object
returns the status of the record
returns a string representation of this time
shift the left and left to the buffer
returns the string representation of this object
returns the next header
returns the type field of the field
returns the string representation of this object
returns the code of the code that corresponds to this
shift the current value to the right
returns the checksum for the checksum
returns the next header
returns the header length of the header
returns the string representation of this object
returns a string representation of the given format
returns the target string
returns the destination of the destination
returns a string representation of this object
returns the length of the routing length
returns the identifier of this object
returns the sequence number of the sequence
returns a slice of this bit buffer
returns a string representation of this object
returns the header length of the header
returns a string representation of this object
returns the string representation of this object
returns the header length of the header
returns a string representation of the given format
returns the maximum response delay for the next time
returns the string representation of this bin
returns the address of the server
returns true if tcp tcp tcp tcp transport is not already
returns the string representation of the contents of the
add a button to the
returns the string representation of the given separator
converts a string to a decimal hex string
returns the string representation of this object
invoked when an action occurs
converts this byte to a byte representation
return the string representation of the given
returns a string representation of this object
returns the string representation of the contents of this
returns the header length of the header
converts a string into a string
returns the source url
returns a string representation of the
returns the destination port
returns the header length of the header
the
returns the sequence of the agent
converts this byte array to a int value
returns the version of this version
returns the string representation of the traffic class
returns the message number
returns the label of the flow
converts this byte to a long
returns the payload length
returns the data offset
returns the next header string
returns a string representation of this format
returns the hop limit
returns the string representation of this object
returns the source address of the flit
returns the of this byte as a short
returns the destination address of the
invoked when the user attempts to close the window
returns the string representation of this object
returns a string representation of the filter
returns the string representation of this object
returns the data start of the data
returns the number of bytes read from the file
returns the header length of the request
returns the type field of the field
returns the frame type of the frame
returns the thread that this thread is running
returns the ack
set the thread to use for the given thread
returns the mac address of the mac address
returns the type of service
returns the string representation of this object
prints out the routing data
returns the
returns the
returns the header length of the header
set the thread to use for the thread
returns the
returns the
returns the name of the class
returns the length of the
returns the length of the
returns the to be used for the
returns the header length of the header
returns the mac address of the
returns the hardware type
returns the identification of the identification
returns the string representation of the current object
returns the protocol
returns the mac address of the
returns a string representation of this object
returns the flag
returns the hardware length
returns the destination address of the
returns a string representation of the filter
returns the window
returns the length of the protocol
returns the
returns the mac address of the mac address
returns the hexadecimal representation of this object
show the previous page
returns the opcode of the instruction
returns the fragment offset
returns the hex string as a hex string
returns the
returns the checksum for the checksum
returns the hardware address
returns the payload of this message
returns the frame type
returns the string representation of this object
returns the time to live
returns the id
returns the destination address of the
returns the hardware address of the hardware
returns the mac address of the mac address
returns the string representation of this object
returns the value of the options
brings the window to the front
returns the route info
returns the
handles the key pressed event
returns the header checksum
returns the option to be used for the command
returns a string representation of this object
returns the frame type
invoked when the user attempts to close the window
returns a string representation of the given format
returns a string representation of the given format
returns a string representation of the given format
returns the maximum size of the segment
closes the window
returns the target address of the target address
returns the prefix length
returns the string representation of this object
returns the packet
returns a string representation of the properties
sets the ip address
sets the ip address
returns the size of the segment
sets the port
called when a key has been pressed
returns a string representation of this object
sets the broadcast
returns the length of the header
returns the router
sets the value of the start time property
returns the next header
returns the
returns the header length of the header
override to return the override of the override
returns the string representation of this object
sets the end time of the
returns a string representation of this object
returns the length of the string
sets the progress
invoked when an action occurs
returns a string representation of this object
adds the end banner to the list
updates the progress monitor
returns the
returns the program thread running
returns the property name of the
sets the thread to run
returns a string representation of this object
returns the string representation of the
get the port
returns the string representation of the
returns the data
returns the thread that this thread is running
returns the valid life time
returns the broadcast
set the thread to use for the thread
returns the preferred life time
returns a string representation of this object
get the time of the start time
returns the string representation of this object
returns a string representation of the given format
returns the prefix of this node
returns the end time of the request
returns the header length of the header
returns a string representation of this object
returns a string representation of this object
returns the string representation of this object
returns a string representation of the given format
returns the progress
returns the current hop limit
returns the pointer to the pointer
returns the next header
returns the string representation of the
returns a string representation of this object
returns the number of
close the log
returns the string representation of the current value
returns the of the router
returns the time of the
returns the timer
returns the title of the
sets the filter properties
returns true if the data is invalid
find the first element in the queue
returns the number of bytes in the buffer
setter for property output file
copies the selected text to the copy
adds a result set to the result set
returns the trace description of the trace
clears the text
sets the file stream
returns the string representation of this object
cuts the selected text
set the system
returns the type of the object
pastes the content of paste from the clipboard
returns the protocol
invoked when an action occurs
returns the buffer size
returns the data direction
returns the full name of the
returns the menu item
returns the start bytes
returns the close menu item
returns the ending bytes of the current record
returns the find menu item
returns the name of the controller
returns the copy menu item
returns the user data
returns the clear menu item
returns the string representation of this object
returns the cut menu item
returns the name
returns the mac address
returns the menu item
returns the string representation of this object
returns the next button
returns the string representation of this object
returns the previous button
opens a file with the file path
returns the string representation of this object
returns the length of the data in the buffer
returns the string representation of this object
returns the display jframe
returns the attribute info for this attribute info
returns the offset to write to the write offset
returns the length of the byte array
returns the number of in the database
returns the data to encrypt
returns the value of the code encrypted data code property
gets the value of the property
returns the string representation of this object
returns the list of datatypes
this method initializes attrib entry struct
returns the data
initializes the data structures
returns the length of the data in bytes
set the attribute info for this message
returns the data
returns the string representation of this object
sets the data to encrypt
sets the encrypted data
returns the file name from the file
sets the data
sets the data
returns the status of the
returns the maximum value length
sets the
gets the int from the file
returns the time of the start time
sets the data
sets the identifier
returns the time to which this song was started
closes the program
sets the location of the location
set the maximum value length
returns true if the file is a prolog prolog prolog prolog
creates the
returns the bytes bytes
deletes the object
returns the maximum frame protocol
returns the next record
returns a list of the entries with the given identifier
returns the maximum frame user name
returns the length of the attribute
returns the length of the length of the native code
set the array of attributes to be used
converts bytes to a byte array
returns the channels number of channels
returns the length of the bytes in bytes
returns the
returns the description of the filter
returns the offset of the read from the buffer
returns the buffer wrap
returns the number of in the database
this method initializes list info struct
returns the timer record as a string
reads the bytes from the input stream
returns the length of the data length
returns the write offset for the write offset
returns the type of this object
sets the message list
returns the
returns a string representation of this object
sets the classpath to be used to locate the classpath
returns the path to the
sets the wait for
sets the bytes to be transferred
sets the value of the optimize in parallel
begin uml doc
this method initializes
sets the internal code options
sets the optimization level
converts bytes into bytes into a byte array
returns the number of records processed by this
returns the prolog object that is used to create the
remove an entry from the list
executes the given command
returns the
sets the path to the specified path
returns the hashcode for this object
converts a date to a string
sets the bidi character type
returns the bidi character type
disposes the credentials from the
this method is used to free resources
retrieves the type of the data base
retrieves the value of the array as a code java
returns a result set containing the result set
retrieves the array of code java
returns a string representation of this object
method to refresh the profile
updates the profile
checks if the message is empty
disposes the credentials
returns the trace string for this profile
returns the string representation of this database
sets the time out
returns the timeout for the
cancels the job
returns the schema
sets the schema
returns true if the query is able to cancel the timeout
returns true if the is
sets whether or not this server will wrap the
this method is used to stop the output stream
returns the version of the server
creates the meta model objects for the package
creates a new adapter for an object of class
creates the meta model objects for the package
this just records the information
create a new model
returns the label for the specified type name
this adds a property descriptor for the title feature
this adds a property descriptor for the source feature
this adds a property descriptor for the type feature
this adds a property descriptor for the id feature
this adds a property descriptor for the name feature
this adds a property descriptor for the owner feature
returns the root adapter factory
sets the parent adapter factory
adds a listener to the list of listeners
remove a listener
this method is called when the provider has changed
disposes the provider
this adds a property descriptor for the name feature
handles activation of the editor or its associated views
sets the fixture for this domain test case
returns the fixture for this domain test case
sets the fixture for this content test case
returns the fixture for this content test case
returns a diagnostic describing the errors and warnings listed in the resource
this accesses a cached version of the property sheet
set the mime type for the given mime type
returns the window
returns the tree viewer
sets the thread search
returns the thread search
search for a new search
create the model
set the class attribute
set the field attribute of the field object
set the field attribute of the field
disallows the given field
disallows the given field
this method is used to indicate that the given field is ignored
this method is used to set the primitive type as a primitive
this method is used to identify the of the primitive
starts a region server
aborts the current region
waits for the region server to be blocked
joins the cluster
shutdown the connection
starts the zvtm server
returns the region server for the given server number
tests the timestamp
test method for
tests the of the
test for the scan of a catalog
test method for
sets the row
sets the column
sets the timestamp
set the colum to the specified value
test the log rolling file
test method for
tests the of a snapshot
checks that the given region info is valid
gets the region info for the current catalog
tests the scan of
tests that a and real number of instances are returned
test method for
this method is called when the is removed
this method is called when the is removed
this method is called whenever the thread is joined
test of all the tables
test the transform of the transform
close the scanner
test the two ints
tests the equals method
test that the first item is equal to null
test that the equals method distinguishes all objects
test the equals method
test method for public
tests the hashcode method
test the hashcode
test method for
test the get file method
test that the compression is not available
test the table name clash with a table name
test multi region table
create a table descriptor for the given name
delete a table of
test
test the server info
returns the number of urls in the server
test that stop row identification method comment
test the page size
tests the serialization of the tt tt instance
test stop the data
test the of the filter key filter
updates the metrics of the given code
adds a node to this group
create a new cluster
removes the specified node from this cluster
remove a cluster from this cluster
deletes a table from the table
shutdown the server
deletes a table from the database
returns the head of the path
get the response object
get the next cluster
gets the next request
returns the response header at the specified path
delete the given path
this method deletes the object
adds a row to the table
adds a column to the data
adds a dead node
add a table model to the table
add a region to the list
add an attribute to this element
adds a cell to the cell
returns the value of the named attribute
adds a new column to the family
returns the column family model for the specified column
called when the user selects a new cache
returns the number of runs
begin uml doc
get the transaction from the given transaction state
aborts the transaction
creates a table for the given table
remove an entry from the database
returns the key generator for this key
returns true if the given row key is contained in the buffer
checks if the given specification is in the format
puts a transaction in the transaction
creates a new group key
returns the location of the region
description of the method
commit the transaction
initializes the scanner
sets the
sets the scan scan
returns the table model
sets the table of the table
returns the scan
set the table of the table record reader
stops the client
initialize the method
updates the metrics of the
set the compression type to be used for compression
add a family to this one
add a column to the table
add a column to the table
adds a columns to the table
adds a comma delimited list of columns to the table
enable the table
set the time stamp for the given time
sets the start row of the table
sets the row
sets the max versions
sets the caching
set the filter
sets the filter that is used to scan the rows
sets the family map for the given map
returns the table with the given name
returns the table with the given name
puts the given table into the queue
returns the old filter
sets the close
returns the caching
sets the cache blocks
add a new family to this map
returns the cache blocks
add a column to the table
adds a columns to the table
set the time stamp of the
returns the maximum number of versions of the desired version
sets the filter
returns the row lock
returns the lock id
returns the maximum number of versions in the database
returns the time range
flush the given table
returns the number of families
returns true if the font has the families
flushes the table
compact the data store
compact the table
sets the error handler
returns the lock id
returns true if the set is empty
delete the family
delete a family
delete a column
delete a column
split the data into the table
deletes the given columns
delete a column
this method is called when the user selects the fight
delete a column
split the given table into the table
deletes a column
returns the time stamp
add a new array of glyphs into the list
adds a column to this table
add a new code byte code array to the specified
check if a specified byte array has a given family
returns the number of in the cache
check if a specified data set has a byte array
check if a value is a b value
check if a given byte array is contained in the array
checks if a given column is contained in the map
sets the default caching
returns the row result
returns the bytes to read from the buffer
set the timestamp
returns true if the is empty
sets the
updates the metrics of the given
returns the scanner for the given scan scan
check if the system is configured for the file system
returns the scanner for the given byte array
get the specified from the server
interrupts the thread
record a new server record
returns the average load of all the available items
notify the server to notify the server that the queue has been
flush the buffer
close the stream flushing it first
checks that the given put put is in the list of put
returns the keeper wrapper
returns the value of the em em em em em em em
stops the scanning thread
returns true if all the urls are online
returns the size of the heap
returns the write buffer size
returns the number of values in the collection
sets the write size of the buffer
puts the meta region data into the region
returns the number of online reports
returns a row from the underlying database
returns true if the given region is already in the region
returns a row from the underlying underlying code row code
returns the region meta information for the given region
checks if the given region is already in the region
checks if the given server is a root server side
returns the meta info about the given server
removes the region from the list
run the thread
set the state to the given
stops the thread
returns true if the given is unassigned
sets the state of the pending close
reads the and returns if it is not already
adds a region to the scan region
returns true if the root scan complete directory has been set
checks if the file system is configured to check
returns true if the metadata is complete
returns the cache cache flush sequence cache id
returns the root region of the root region
this method is called when the user interface is being
returns the number of regions in the list
increments the meta regions
sets the location of the root region of the nets
sets the num meta regions
deletes all rows from the database
performs the next step
deletes all rows from the database
this method is used to indicate that the given code code
returns the position column
updates the table with the data from the database
resets the object to its initial state
sets the row
updates the keys and the keys in the database
aborts the current thread
adds a new simulation to the simulation
delete the given document from the simulation
returns true if the given number of pieces reaches the given number
returns the mem free value for this
returns the mem max attribute of the idmef file object
returns the mem used memory used in this cache
returns the ratio of the hit of the hit
returns the size of the heap
checks if the key is a key
checks if the value is null
returns the minimum usage number of the
evict the lru reference from the lru buffer
moves the given entry to the next recent entry
add an entry to the bucket
clears the entries in the queue
adds a message to the queue
returns the hash code for the given key
returns the store with the specified column
returns true if the x y coordinate is equal to the given
returns the index of the hash map
calculates the capacity of the capacity
checks if the given row is a valid state
calculate the threshold for the given factor
initializes the internal memory
returns the head tag
returns the row lock
returns the
checks if the given row is a locked state
checks if the current request has too many
replaces the value in the heap and returns the value
compares this entry with the specified object for equality
sets the prev previous to the given value
sets the next element in the buffer
returns the size of the heap
this method is called when the is aborted
checks if a given row exists in the database
returns true if the last column is done
updates the column index
returns the list of the scanner
performs the next operation on the current stream
compares two values for sorting by their comparator
seeks to the current position in the heap
resets the filter to the next filter
deletes the file
returns a column descriptor from the data source
computes the filename of the given file
moves the data from the next row to the buffer
close the underlying file
closes the connection to the remote file
returns the seq num
returns the edit property
returns the key
checks if the current file is open
determines whether the split pane should be split
checks if the store has too many more people
returns the size of the mem store
returns the number of regions
adds a new region server to the server
returns a string representation of the given message
this method is called when the server is online
this method is called when the server is connected to the server
join the master and all of the active threads
this method is responsible for creating the master
close the expire
stops the lease queue
renews the lease with the specified lease name
lease renewal of leases
checks if the poll is a reference to the pool
sleeps for the next time consuming the sleep cycle
initializes the configuration
returns the meta region for the given meta info
shuts down the
scan the root region of the given listener to scan the content
returns a path to the directory
checks if the poll is a references
increments the weight of the weight
increments the weight of the current weight
adds a positive integer to the bloom cache
removes a from the group
returns the minimum number of occurrences of the given array
removes the first occurrence of the given array of values from the
removes the key from the set
p this method is called after the is flushed
computes the ratio of the weights
adds a new row to the bloom filter
returns the bloom filter
flush the bloom filter
sets the row
set the column
set the colum to the specified value
deletes the file
returns true if the two rows match the other
returns true if the row is a match
returns true if the character family matches the one
compares this object with the specified object for order
compares this byte array to another
checks if the key is already in the map
returns the row lock
sets the row lock
returns the cell at the specified column
get a cell from the current record
update the access time
deletes a column from the data source
returns the cell value for the specified column
compares this row to another row
allocates a block of queue
caches a block
caches the block with the given identifier
returns true if the given time range is within the time range
returns true if the given time range falls within the range
returns true if the given time range is within the range
returns the block with the given name
add a byte array to the pool
this method is called after the eviction is finished
returns the size of the queue
add a block to the current block
returns the size of the free buffer
returns the number of elements in this collection
returns the number of eviction times
returns the number of in the
returns the cache statistics object
adds a family to this family
returns true if the given font is in the family
clones the current value
sets the row
set the column
sets the timestamp
set the colum to the specified value
returns true if the two rows match the other
returns true if the row is a match
returns true if the character family matches the one
returns the session id
reads the location from the
reads a master address or from the input stream
read a master list from a
sets the cluster state watch
checks if the given address is already already already already already already
returns the scanner for the given scanner
deletes the root region of the root region
writes the root region to the given location
write a master address to the server
checks if the current state is a loopback mode
returns true if the server is able to connect to the server
sends a message to the server
delete all the
close the connection
gets the value of the property
initializes the
sets the row filter
delete the table
this method is called when the simulator is now now
begin uml doc
filter the filter
returns the internal filter
returns true if all the filters are stripped
sets the value of the filter property
returns whether the filter should be used
sets whether the filter should be validated
returns the value of the em em version em field
sets the latest version only
returns the group id
sets the group id
sets the password
returns the login name
sets the login name
returns the password repeat
sets the value of the repeat password property
returns the name of the mail
sets the e mail address
get the name of the first object
sets the first name
returns the last name
sets the last name
this method is used to determine the groups of the
test of get line of sight method of class
test of get speed method of class
test of get damage method of class
test of get name method of class
test of is method of class
test of set line of sight method of class
test of set speed method of class bitmap
test of move method of class com
test of draw method of class com
test of set damage method of class land
test of get x method of class com
test of set name method of class
test of set method of class
test of get height method of class
test of get method of class edu
test of create worker method of class com
test of set x method of class com
test of set height method of class
test of create meetings method of class com
test of get food store method of class edu
test of get terrain method of class
test of get ant workers method of class com
test of get y method of class com
test of get ant method of class create wrapper
test of get color method of class
test of set food store method of class edu
test of is method of class com
test of set color method of class
test of set y method of class com
test of set method of class com
test of get food name method of class edu
test of set food name method of class edu
test of get food method of class net
test of get ant method of class cell
test of get food weight method of class edu
test of set ant method of class cell
test of pos x method of class com
test of request food method of class com
test of get food method of class
test of get food method of class null coordinate
test of set food method of class cell
test of set food method of class
test of food method of class com
test of update method of class cell
test of pos y method of class com
test of get color method of class edu
test of get ant method of class
test of die method of class com
test of set ant method of class
test of set color method of class edu
test of get terrain method of class org
test of get new instance method of class edu
test of update pos method of class com
test of set terrain method of class cell
test of draw method of class com
test of draw method of class com
test of draw method of class com
test of update method of class com
test of get energy energy method of class com
test of get alive method of class edu
test of set energy energy method of class
test of play match method of class edu
test of place food at method of class edu
test of get max method of class com
test of paint method of class trsystem
test of get war method of class edu
test of set max method of class com
test of remove ant deadline method of class trsystem
test of generate method of class edu
test of close treasure method of class com
test of match statistics method of class edu
test of get method of class engine
test of calculate path method of class trsystem
test of open treasure method of class trsystem
test of move ant method of class trsystem
test of open maze method of class trsystem
test of update method of class edu
test of grow method of class com
test of get power method of class com
test of set power method of class com
test of get max speed method of class com
test of set max speed method of class engine
test of move method of class com
test of get method of class engine
test of set method of class com
test of draw method of class com
test of get dx method of class com
test of set dx method of class com
test of get dy method of class com
test of set dy method of class com
test of get cell data method of class com
test of set cell data method of class com
test of get my method of class com
test of set my method of class com
test of get eat method of class engine obj
test of get ant color method of class com
test of get food method of class net
test of drop method of class com
test of update method of class com
test of get max energy life method of class engine obj
test of get line of sight method of class engine
at startup create and show the main frame of the application
initializes the annotations for b http www
adds a message to the message
adds a message to the message
checks if the given line is annotated with the given line
returns the property value for the given name
returns true if the message contains the given message
creates a radio button
adds a listener to the list of listeners
removes a listener from the list of listeners
checks if the file is readable
notifies the listeners that a message has been changed
notifies all listeners that a message has been added
checks that the file is completly ordered at least one file
this method is called when the user presses the
check the file name
check the line comments for the comment
checks the indentation level
checks if the tab character is a valid tab character
checks if the current line is trailing space
checks if the line is a length
enables or disables the controls of the controls
checks if the is allowed in the space
deletes the markers
writes the properties to the preferences
checks if the current node is after the next function
build the build file
sets the property with the given name and value
parse the string str
parses the string to a string
sets the owner of this object
show the stats
show the stats
called by the downloader to indicate that the
dump the state to the output stream
dump the path to the file
increases the size of the cache and grow the
returns true if the given assignment is a
checks if this matrix is a member of a vector
increases the capacity of the cache
removes the assignment from the list
insert a new array of objects
returns the number of bits in the current bit set
invalidates the cache
this method releases the cache
check the of the
invalidate the current state of the cache
increases the capacity of the cache
returns the amount of memory usage in the memory
increases the capacity of the cache and accomodate bits
increases the capacity of the cache
invalidates the cache
inserts the specified value into the buffer
insert a key at the specified index
invalidates the cache
inserts the specified key value at the specified
increases the capacity of the cache and accomodate the size
free the node
marks the cache as dead
invalidates the cache of the given node
inserts a new data value at the specified position
increases the size of the cache and accomodate the size
clean up the cache
add a debugger to the debugger
invalidate the graph
returns whether this cache is in the cache
inserts a new value into the hash table
stops the
inserts a key value pair into the map
inserts the value at the specified
increases the capacity of the ceiling for grow
sets up the assignments
chooses the most used one of the given points to the given
choose a new index
returns the number of in the given clause
returns the value of the given variable
simplifies this
sets the backtracking stack state to the current state
this method is called after the is removed
checks if the variables are equal
this method returns the branch of this node
returns the ith component
returns the number of root nodes in the tree
make the board board board
make the initial state
makes the
iterate through the list of and returns the next
clean up the database
returns the set of forward objects in the queue
returns the set of all the elements in this set
clean up the
returns the next automaton
returns the number of bytes in the queue
returns the ith
returns the ith cube number
returns true if the event dispatching is a
gets the value of the property
clean up the
returns the ith
clean up the mess
extract the order from the automaton
returns the automaton
returns the cost of the fuzzy range
creates the order of the tables
returns the graph
returns the automaton node for the given node
returns the of the given
calculates the sum of all the span elements
returns the event with the given id
find the object by its label
find the order of the objects in the order
copies attributes from the state to another
copies the attributes from the transition into the source code
prints the statistics about the statistics
returns the number of users in this group
set the weight of this transition
returns the weight of the current node
check all nodes in the network
adds a new automaton to this automaton
returns the number of events in this event manager
returns the maximum number of all the elements in this automaton
returns the maximum number of global states of the automaton
adds a new state to the current state
find the state with the given label
removes the given node from the state
returns the event at the specified index
returns the number of in the
returns the number of in the
this method is called to indicate that a new value has been
concat the concatenation of two lists
check if a node is a valid node
returns a new number of instructions in the stack
expands the current node by its index
close the
the given
clears the stack
returns the value of the stack
puts an object into the queue
validates the next element
returns the number of classes in the array
show the stats panel
print a target target class
returns the number of bytes read from the input stream
sets the number of bits of the sparse space
reset the buffer
returns the number of all flags
copy the flags to a copy of the flags
reset the flags for the given flag
returns the value of the flag
returns the
compares two matrices for equality
returns the standard deviation of the gaussian
write the specified byte to the buffer
frees the resources
returns the number of bytes that can be read
resets the iterator to the initial state
load the given file
reads the next byte from the stream
show the
saves the data to the file
insert a new record into the queue
this method returns true if the buffer is empty
returns the size of the chunk
removes the first occurrence of the current element from the
returns the number of elements in this buffer
returns the topology of this node
copies the attributes of this edge from another
show the graph
the stack
returns the degree of the node
copies the attributes of this node to the given node
add a new node to the set of copy nodes
copies the node to the copy of the node
adds a new copy of two nodes
copies the edge to the target
removes a node from the first list of successors
returns true if the time has been sized to be cached
removes the backward edges from the given node
returns true if the size of the buffer has memory
the code code code code code code code code code code code
returns the index for the given id
saves the data to the persistance file
returns the dataset with the given name
dump the statistics
returns the change of the given links between two
returns the id of the next
get info by id
comment for method
find a info by its id
set the description of the
returns the type of the
insert a new entry into the data store
dump the contents of the to the output stream
called when the user selects the save button
find a info by its id
saves the current state of the database
dump the state of the to the database
clean up the cache
returns the memory usage of the memory usage
create a new var
bdd
union method
returns the intersection of the intersection
the of a
returns the union of the specified set of values
returns the difference between two numbers
displays the statistics for the current stats
checks all variables in the array
returns the number of memory usage
returns the cube of the given bdd cube
returns the number of nodes in the given variable
returns the value of the of the specified
creates a permutation with the given cube
replaces the given permutation with the given number of occurrences of
restricts the given value to a value
checks if the given bdd is a variable
this method returns the number of variables in the given number
match the v2 to the given bdd
checks if the bdd is a bdd
this method is used to determine if the is a
the
this method is used to send a message to the server
returns the color of the specified row
handles a click on a menu item
enables or disables the button
checks if the file exists
makes a shape
adds a point to the
sets the primary shape
clears the list of files
sets the secondary shape
returns the status
returns the file that covers the
this method initializes this
this method initializes j jmenu bar
this method initializes j menu
this method initializes j menu
this method initializes j menu
this method initializes split pane
this method initializes document split pane
this method initializes document list
this method initializes document scroll pane
this method initializes new menu item
switches the window to the specified window
this method initializes open menu item
opens a new document
fills the contents of the object with the contents of the given
deletes the window
write the contents of the contents of the given contents to the
this method initializes close menu item
this method initializes save as menu item
this method initializes j menu item
this method initializes run menu item
this method initializes sub split pane
this method initializes j tabbed pane
this method initializes j text pane
this method initializes problems text pane1
this method initializes console scroll pane
this method initializes console text pane1
this method initializes bottom split pane
this method initializes j tool bar
this method initializes j progress bar
this method initializes cursor location text field
set the dao for communication with the data layer
setup the test
sets up the fixture for example open a network connection
disposes the connection
adds an element to the queue
adds a new front to the queue
returns the next element in the queue
returns true if there is at least one more element
clears the queue
close the socket
returns the buffered reader
returns the writer
returns true if the node is a op
returns true if the voice has been
returns the nick in the form
compares two users
compares the specified object with this code user code
returns the hash code of this object
compares this user to another user object
logs the specified line to the log
returns true if the outgoing message is an outgoing
set the packet delay
runs the thread
returns the packets delay
returns the percentage of the progress
closes the socket
returns the transfer rate for the current time
adds a new document to the stream
returns the sentence as a string
called when a user profile is received
this method is called when a ping message is received
called when the server is received
called when the user tries to login
this method is called when the user selects a finger
this method is called when the user is unknown
converts a byte array to a long
set the encoding to use for the current charset
returns the encoding of the character
returns the inet address of the server
returns the address
compares the specified object with this code code
returns a string representation of this object
calculate the derivative of the function at the current activation function
returns a random integer between 0 and 1
sets the maximum value of the slider
sets the minimum value for this
calculate the output for the activation function
shrinks the value of the maximum value
returns the activation function
returns the input value
returns the neuron type
returns the ith synapse synapse
returns the neuron neuron of the neuron
returns the neuron neuron of the neuron
returns the layer layer at the specified index
resets the values to zero
sets the weight
resets the weights of all synapses to their initial values
returns the number of neurons in the network
sets the activation function
initializes the synapse deltas
returns the number of neurons in the layer
sets the input
set the neuron type
sets the output
calculates the deltas of the neurons
returns the expected number of incoming
resets the values of all neurons in the layer
resets the weights of all neurons
calculates the alpha for the synapse
calculates the deltas of the neuron deltas
set the activation function
calculate alpha
sets the neuron layers
calculates the delta of the neurons neurons
sets the weight of the neurons
performs a neural network
returns the operator operator
choose a network network by a random radar
calculates the learning rate of the learning learning learning rate
returns the fitness value of this chromosome
sets the fitness value for this fitness
returns the crossover rate
sets the member
returns the code feed code object representing the
sets the fixed value for this
returns the fixed value for this
returns the mutation operator
adds a new member to the set of
returns the mutation rate
returns the fitness value of the fitness
calculates the output of the neurons
returns the member of the network
adds a new node to the group
returns the fitness of the fitness
calculates the delta of the neuron
returns the ith neuron
returns the wheel
sets the population to be used for the population
returns the number of neurons in the layer
sets the test set patterns
returns the selection operator
resets the values of all neurons in the layer
sets the learning rate
returns the weight amplitude of the
calculates the pattern vector from the given pattern
resets the weights of all neurons
sets the momentum
sets the crossover operator
adds a synapse to the list
sets the weight of the list
set the activation function
sets the input
sets the mutation operator
sets the output
sets the selection operator
adds a pattern to the list
sets the weight amplitude of the
returns the value at the specified location
store the
returns the weight of the synapse
this method will be called by the to set the patterns
returns the height of the list
sets the object at the specified location
returns the width of the list
returns the derivative of the given synapse
sets the input range for the input range
sets the range of the output values
sets the patterns to use
returns the minimum error
sets the test set
removes the given pattern from the list
maximizes the given code
returns the network to be used to show the network
position the synapse layer
returns the derivative of the given synapse
returns the weight of the update of the neuron
returns the weight of the update
returns the squared error for the neuron network
reset the partial barrier for the
the given patterns
sets the weight of the delta
sets the maximum number of epochs to be used
sets the minimum error value for this
the given classifier
write the pre write pre
writes out the xml document to the output stream
pops the top level stack from the stack
updates the message
executes the command
add a task to the queue
add a task to the list
this method is called when the resources are up to the minimum
returns true if the graph has the given list of nodes
this method is called when the is returned
executes the command
this method is used to set the string representation of the
returns true if the task is a
this method is used to determine if the task is a valid
executes the task
this method is called when the task is finished
this method is called by the child framework when a child level
insert a new task into the queue
returns the opcode of the instruction
sets the flag that indicates whether or not the is
add a task to the list
sets the scheduler
returns the level of the node
returns the scheduler
executes the next task
add a task to the scheduler
ends the task
this method is called when the task is about to terminate
removes the task from the queue
this method is called to notify the tree that a child of
sets the task scheduler task scheduler
add a task to the list
returns the scheduler task
add a task to the list
prints the debug message
terminate the scheduler
sets the root scheduler
remove a task from the queue
this method is used to indicate that a child of this node
end the current task
this method is called when the task is removed
add a opcode to the list
removes the task from the queue
executes the task
add a task to the queue
set the properties to be used for the given properties
updates the given concurrency
returns the string representation of the given string
returns the concurrency level of this node
remove an id from the database
returns the object associated with the id
remove an item from the database
applies the given time
log the message to the log file
logs a message to the server
prints the stack trace of the exception
prints the stack trace of the stack trace to the stack trace
update the trace
normalizes the
records the time time elapsed since the last call to
records a time
records a time time
records a time time
comparison function to evaluate and return the result
clears all the flags occurring in the
opcode to write instruction
returns true if the opcode is a opcode
increases the size of the array list by its length
returns true if the list is empty
removes a key from this map
increases the capacity of the parents of the parents
creates the view component
returns true if the file is a directory
sets the message to be displayed in the message
sets the default message
sets the message with the specified duration
adds a node to the parent
add a new parent to the list
removes the parent reference from the tree
removes the children of this node from its children
removes all elements of the specified node
returns true if this node is transient
adds a child node to this node
adds a child node to the tree
add a flow type to the flow
sets the graph to the given graph
the tree to the target node
clears all edges and edges
the target node to the target node
remove a node from the network
this method is called by the framework to indicate that the
the
refresh the graph
marks the garbage as garbage as garbage
marks the given node as deleted
this method is called to indicate that the connection is running
returns true if the current node is enabled
returns true if the node has a color node
clears all the flags occurring in the node
returns true if the child has a child
checks if the given id exists
clean up the children
set the value of value for this
this method is called when the shutdown of the application is about
returns the namespace uri for the given prefix
updates the for the
this method performs the of the given mac
get the data object for the given parameter
set the uri of the
returns the description of the description
initializes the
destroy the controls
clears the memory
starts the
stops the current simulation
processes events on this component
returns the number of rows in the collection
deletes a blob from the database
returns the most recent
this method returns the of the given
initializes the
replaces all the labels in the
returns a string representation of the current node
saves all the data to disk
sets the body of the body
returns true if the timestamp is supported
returns the size of the packet
returns a string representation of the given separator
returns the
returns the buffer size
sets the packet wrapper for this packet
sets whether the traffic is enabled or disabled
returns the wrapped packet wrapped in the
returns true if the traffic is enabled
sets the timestamp enabled flag
returns true if the loop is enabled
returns true if the timestamp is enabled
returns the loop period
sets the period period
sets the buffer size
returns the buffer size
sets the buffer size
returns the buffer size
returns the length of the buffer
returns the next time in the buffer
returns the size of the buffer
removes the default port
removes the default port
removes the timer port
returns the neighbor node
returns the id of the interface
sets the cost of this cloudlet
sets the length of the
sets the marked
returns true if this is a directional link
returns true if the is
returns true if the specified address is unicast
returns true if the given address is a null or not
checks if the given address is a null value
returns the address of the
returns the address of the
returns the type of the packet
sets the value of the accounting enabled property
returns true if the accounting is enabled
sets whether the component is enabled or not
returns the name of the configuration file
this method is used to convert the configuration to a string
returns whether the component is enabled or disabled
set the capacity of the
set the
set the generation of generations
returns the
returns the generation rate for the token generation
set the marker
sets the marker
sets the meter
returns the meter
resets the counter to zero
returns the information about the information about the
returns the mode of the current mode
sets whether this is a http servlet request
sets inspection enabled
sets whether all stderr are enabled
returns true if the inspection is enabled
returns true if the stderr stderr is used to process stderr
returns the packet
interrupt the given
returns the maximum number of lines in the maximum
sets the maximum number of lines to be displayed
returns true if the stdout is enabled
sets whether or not the stdout should be enabled
create a new terminal
sets whether output is enabled
returns whether terminal formats is enabled
exits the application
quits the application
set the mean
returns a string representation of the binary representation
returns a string representation of this object
shows the window
restores the frame to the current state
returns the mean of the mean
returns the std std value
returns the string representation of the jsonobject
returns the next pseudorandom exponential distribution
returns the next pseudorandom uniformly distributed value
returns the next pseudorandom uniformly distributed value
sets the mean
sets the std value
append a byte array to the end of the buffer
insert a new record into the data
removes the specified bytes from the buffer
sets the real value of this complex number
sets the imaginary imaginary component
returns the imaginary part of this complex number
returns the size of the record
returns the size of the
returns an iterator over the interval set
returns an iterator over the gap list
returns an iterator over the interval in the list
returns the string representation of the
returns true if the queue is full
returns true if the specified is
returns the time in seconds
returns the maximum number of
returns the interval
returns the child contribution of this node
returns the expire time for the
returns the downstream code time base time base
returns the interval interval base
returns the downstream time for this route
returns the interval of the interval
returns the time
removes a from the given
get the for the given
remove a from the list of
add a to the list
set the type of the
returns the size of the
checks if the type is
returns the command
returns the destination
returns the hop
remove a neighbor from the list
this method is called when the next element is pushed
returns the size of the list
updates the of the gps
update the for the specified metric
sets the expire time for this
sets the
set whether or not the route is enabled
returns the source of the source
returns the group of the group
returns the mask
returns the pruning lifetime
enables the link detection detection
trace a route
resumes the
sets the type of the
returns the type of the
sets the object
returns the object
sets the metrics
set the sample rate
set the rate
set the noise strength
sets the target power
returns the target power of the current target
remove the given id from the database
returns true if the data channel is down
called when the server is done
prints the data entry to the output stream
inserts the given list of the gradient to the list of the
this method is called when the timer is finished
called when the cache is about to be updated
constructor for message
constructor for message
sets the seed of the random number generator
set the grid at the given position
sets the parameters of the topology
sets the parameters of the topology
sets the
sets the factor
set the mean of the microphone for emulated sampling distribution
sets the capacity of the receiver
attaches the port to the port
sets the bandwidth
sets the size of the buffer
sets the
install the install
sets the buffer mode
returns the value of the link property
sets the value of the link property
returns the delay in seconds
sets the delay in seconds
builds the cc object
builds the object from the given array of objects
returns the
builds the object
builds the object
builds a new object from the given object
builds a new object from the given object
returns the number of bytes that this connection is
returns the total times rented
returns the global total number of
sets the data unit
sets the area id
read a single line from the server
receive a message from the server
receive a message from the server
receive a message from the receive buffer
returns the address of the given peer
returns the port of the given peer
returns the content of the message
set the delay in seconds
returns the bandwidth
clears the cache
sets the interface infos
sets the
peek at the given position
returns the first component of this deque
returns the last element of this list
returns true if the queue is empty
returns the capacity of the capacity
returns the size of the list
sets the capacity of the cache
returns true if the queue is full
returns the capacity of the
returns the size of the
returns true if the game is ready to be ready
sets the probability of the
returns the probability of the
sets the maximum of the
returns the maximum value
the given key and sets the
the given
remove all from the given
remove a from the
set the table of the connection
set the nodes label switches to the label
returns the cost of the given
returns the port to be used in the port
returns the port to be used for the port
setup the
initializes the given matrix with the given values
returns the port to be used for the port
creates the configuration object for the port
creates a server side of the port
returns the index
returns the network address
creates a server side of the port
creates the packet for the code packet code
returns the port object for this connection
returns the port for the port
returns the port for the port
returns true if this is a join
returns true if this node is a leave
returns the port for the port
returns the port object for this port
creates a port for the event port
links an event handler to the given event handler
creates a link to the event port
calculate the path loss function for a given path loss function
decreases the free space of the
starts the
starts the
handles the event
sets the parameters of the topology
sets the parameters of the topology
sets the position of the coin
returns the name of the component
returns the contract of this contracts
sets the number of points in the polygon
sets the
returns the
set the timer
starts the
returns the number of bytes written to this block
returns a packet with the given destination
get the packet
sets the grids value
set the addresses to be used for the
returns the value of the code order code property
handles the event
starts the
pauses the simulation
resumes the timer
set the energy consumption consumption
returns the amount of idle stations
returns the current value of the em systems em sleep em em
gets the value of the total radio property
sets the bandwidth
this method is used to set the of the
calculates the path loss of the path loss
calculate the path loss of the given
the of the
returns the number of
returns the
detaches the connection from the given port
sets the state of the
resumes the current thread
the method code run code
returns the string representation of the
returns the string representation of the current value
returns the time in milliseconds
initialize the
returns true if the state is stopped
sets the
returns true if the state is suspended
returns the
returns true if the state is idle
initialize the
sets the interval
returns the
sets the
sets the
set the bandwidth bandwidth
returns the name of the component
returns the init
sets the
returns the
returns the number of bytes transferred
set whether the bare ports should be shown on the
sets the timer to the specified port
sets whether the root node should be displayed or not
returns the number of in the pool
sets the interval for the interval
returns the interval between the activations
sets the window size
returns the window size
returns true if the object is currently enabled
returns whether the size mode is enabled
returns true if the component is showing
returns true if the given port is a
returns the tester
starts the
creates a component image
adds an event to the queue
adds an event to the event queue
add an event to the
add an event to the
returns the port for the port
add an event to the server
adds an event to the event queue
adds an event to the event queue
adds an event to the list
sets whether or not to show hidden property
sets whether the info port is enabled
removes an event from the list
blocks until a new block is a
sets the limit of redrawing of redrawing
this method is called when the object is removed
insert an event into the network
add a new object to the list
removes the specified pass from the list
returns true if the limit is enabled or disabled
insert an event into the data
resets the to the default value
insert an event into the data
insert an event into the list
insert an event into the list
resets the
description of the method
returns the first element of the list at the given index
peek at the given position
returns the first component of the element
returns the last element of the list
returns the
returns true if the queue is empty
returns the size of the buffer
returns the
returns the size of the list
returns the timer
this method initializes the
returns the maximum number of
returns the string representation of the info
sets the copy enabled
returns true if the copy of the current object is enabled
sets the echo enabled property
returns true if this action is enabled
sets the ttl time
sets the count
sets the delay between the and the
returns a string describing this object
sends a message to the server
sends a byte buffer to the server
returns the number of threads in the pool
sends a byte buffer to the server
returns the time in seconds
returns the number of idle threads in the pool
returns the time in the given packet
returns the number of threads in the thread pool
receive notification of the incoming message
receive a message from the server
receive a message from the server
receive a message from the server
interrupt the sending of the watchdog thread
send the interrupt to the server
returns the event rate of the event
set the value of activated
sets the component flag
returns true if the trace level is enabled
returns the object
the hop
returns true if the is activated
returns the number of efficiency of the
returns true if this is a
returns the number of available bytes in this buffer
handles the of the
handle the timeout
sets the cip mask for the cip mask
sets the attribute of the object
handles the transaction timeout
handles the timeout
returns the mean of the
returns the
returns the number of in the buffer
checks if the timer is crossed
returns the number of available data available
returns the buffer ratio
returns a string describing this applet
remove from the
draws a line between the start and end points
displays the about box
returns a string describing this applet
fills the specified rectangle with the current font
returns a string describing this applet
opens the modal dialog box
reads the from the given stream
returns the runtime
returns the number of the
sets whether wrap y is enabled
sets the visibility of the button
set read only mode
set the catalog
set the transaction isolation level
this is the entry point method
sets the date of the created
adds a new condition to the list of
creates a query string
sets the condition
appends a property to the current property
sets the property
creates a query string
returns a string representation of this object
returns a string representation of this object
sets the time of the time
returns a string representation of this object
sets the additional attribute
returns the prepared statement for the given connection
returns the prepared statement for the given connection
sets the city
returns the prepared statement for the given connection
returns the prepared statement for the given connection
sets the continent attribute of the user object
sets the country
sets the house number
sets the state
sets the street
sets the longitude
returns a string representation of this object
this method is called when the user tries to create a new
stores the properties of the given properties
stores the given object to the database
returns true if the given property contains the given property
remove the object from the database
sets the height of the container
returns the height of the element
adds a load handler listener to the code handler code
returns the piece
sets the size of the pieces
returns the size of the pieces in bytes
processes a game info
returns the name of the console
returns the id of the object
returns the name of the component
create the preferences
this method initializes j panel
creates the icons for the current view
returns a preferences panel
register a listener to be notified of
create a new container
moves the connection made to the users movement
called when a channel is added to the channel
removes the tray icon
this method is called when the connection is
called when a connection is established
called when a connection failed
this method is called when the login succeeded
called when a login failed
this method is called when the user selects a connection to the
invoked when the target of the listener has changed its state
adds a listener to this component
removes a listener from this component
called whenever the event is registered
handles a list of channels
creates and returns a panel to cancel the cancel button
initializes the password label
create the main frame
configure the menubar
shows the dialog
called when the user session has finished
called when the session has been closed
returns whether the ui displays the ui frames
stops the frame
sets the size of the frame
disposes the dialog
description of the method
returns the number of menu items in the menu bar
returns whether the frame is active
sets the title of the frame
sets the icon for the icon
sets the visibility of this component
returns whether this window is visible
show the frame
hides the frame
invoked when an action occurs
description of the method
sets the running status of the server
update the channels list
remove a channel from the channel
allocate buffers for the given node as a buffer
allocate route route route
adds a vertex to the vertex buffer
set the connection index to the given connection
allocates a buffer for the given buffer
allocate a buffer for the given data type
add alloc buffer allocation
adds a new variable to the allocation
returns the variable with the given name
checks if the given file already exists
returns the global container
adds an element to the list
adds an element to the first element of the element
returns a string representation of this object
returns a string representation of this code code
adds a buffer to the buffer
adds a new variable to the parent container
accept an
add a thread to the thread
returns the operator instance
remove a thread from the thread pool
returns the file list
returns a string representation of this code
returns the main file
sets the main main main class main window
adds a new buffer name to the buffer
prints the list of files to the given list
set the core element type
creates a operator printer
set the core name
visits the vertex graph
returns a string representation of this object
returns a string representation of this object
returns the number of bytes in the pool
creates a new source
transfers the transfer cost to the given transfer
returns true if the next step is a single appearance
returns the index of the node that has the given node
returns true if the given field is already present in the list
returns the worst time the worst is used
returns the number of worst the of the transfer
returns the first value of the code boolean code object
determines whether the given vertex is a intermediate wifi
returns true if the vertex is a reserved
filters all vertices and edges
parses the rest of the constraints
adds a path to the vertex path
parses the given constraint
parses the variables from the given xml file
add a constraint to the graph
adds a new constraint to the group
parses the data types
removes a constraint from the graph
parse the file names
parses the constraint specification
parses the given element
returns the timing object for the given timing element
writes the workbook to the given output stream
sets the code code writer for this
adds a core dublin core components
writes the workbook to the given output stream
fires on event to notify all listeners that the given graph has
called when the operation is selected
adds a new combo box selector
writes the workbook to the given output stream
updates the check graph elements check box
the of the
remove all transfers to the given
remove all from the graph
sets the list of to the given list of
remove all from the graph
remove the given vertex from the list
returns true if the given vertex is a special
returns true if the vertex is a cast
returns true if the fork graph is epsilon
returns true if the vertex is a join
returns true if the vertex is a init
initializes the constraints for the relative constraints
returns true if the vertex is a end vertex
creates the route to be used for the
constructs the relative constraint
returns the best route for a given component
removes a route from the set of routes
update the keeper
creates the routes
sets the scheduler scheduler manager
compares the specified route to the given route
returns the route instance
returns the route that is being used
returns the gantt chart
this method is called to notify the graph that a vertex is
evaluate the given edge
adds a vertex to the end of the list
adds the first vertex to the list of vertices
insert a new vertex at the end of the list
insert a vertex at the specified position
insert the vertex before the end of this vertex
returns the previous vertex in the list
returns the next vertex in the list
returns the index of the first occurrence of the specified element
insert a vertex at the given index
returns the first element of the given
returns true if the given value is contained in this list
returns the index of the vertex at the end of the list
returns the total index of the given vertex
insert the methods description here
returns a list of all the vertices in this order
returns the first element in this order
adds a new to the list
sets the vertex of the vertex
the vertex order
resets the to the default value
returns the time in nanoseconds for the given vertex
returns the previous vertex
returns the time of the current unloading
returns the time of the component
returns the next vertex in the chain
returns the index of the given vertex
returns the index of the predecessor of the predecessors
returns the index of the vertex in the
returns the schedule for the given component
sets the vertices of the given graph
add a vertex mapping to the graph
returns the next vertex in the chain
returns the vertex of the timing
returns the mapping of this mapping
sets the vertex to be used as the graph
adds a new component to this group
returns the effective operator
returns the number of vertices in this graph
returns the effective component instance
adds all vertices to the graph
returns the inverse of the edges of this graph
removes all the precedence edges from this node
returns true if the given operator is an instanceof operator
returns true if the given code operator code is a
returns the vertex with the given
returns the fast time fast time fast interval
returns the fast number
gets the time the search time is used
sets the current window
returns the of the
this method is invoked when the view is shown
returns the time in milliseconds
returns the number of used operators in the
returns the number of main constants in this
returns the value of the given property
returns a random color
returns a component from a gantt chart
returns the end time of the last task
returns the start time of the task
called when a node is added to a graph
sets the data types
compares this vertex to the specified object
sum of all the vertices in the specified weight
clears the vertices of the vertices
returns true if the given object is equal to this
returns the hash code value for this
clears the vertices of the vertices
transform a file to a file
the method run table
sets the primary index
sets the string to be used to copy the contents of the
this method initializes j dialog panel
registers the button to the server
compares two entries based on their name
description of the method
returns the estimated size of the table
returns the panel to be displayed in the panel
notifies all the listeners that a model has been changed
adds a field to the list of
adds a new to the list of
at startup create and show the main frame of the application
sends a message to the progress dialog
adds a java nature to the jnlp project
add a java nature to the jnlp project
this method is called when the plug in is stopped
returns true if the condition is correct
sets the connection manager
set the value of
set the value of
set the value of
set the value of nombre
set the value of
set the descripcion
set the value of
sets the
sets the sender
set the value of
set the value of
set the value of
set the value of
set the value of
sets the
set the value of
sets the
sets the
set the
set the value of
set the rol
set the value of
returns the name of the first column that is the first key
set the value of
set the
set the value of
set the
set the
set the
returns the full name of the current user
set the
set the
set the value of
set the
set the titulo
set the value of
set the value of
set the
set the value of nome
set the
saves the object to an object
removes an object cache
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
sets the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
get the user from the request
returns the message for the given locale key and locale
returns the context for the servlet
returns the message for the given locale
get the user from the user
returns the context of the application
returns the card card card card of the suit
registers a property to the preprocessor
marks the given size as fixed size
applies the given row to the table
applies the current cells to the given cell
applies the cell parameters to the given cell
generate a collection of keys and their names
applies the given row processors to the row
this method is used to add a collection of datatypes
returns the row collections for the row
setter for property columns to hide
setter for property column property names to hide
sets the list of to remove from the list
resolves the given formula to the given cell
sets the next
returns true if the is finished
returns the total number of times the
returns the number of times the fitness is currently being repeated
returns the fitness of the current run
returns the stop condition
adds a new variable to the list of recently pushed
returns the parameter with the given name
returns the number of parameters in the database
sets the variables
returns the type of this lvalue
sets the value of the field
returns the value of the specified value
sets the value of this field
sets the value of this fraction
sets the value of the
sets the value of the field
initializes the uniform distribution
initializes the uniform distribution
initializes the string
set the simulation model to be used for the simulation
initializes the boolean value
returns the first value in the list
stops the simulation
returns the last value in the list
initialize the generator
returns true if the list is a list
creates a uniform distribution with the specified values
creates a uniform distribution with the specified values
returns the number of run times
returns true if the is
creates a gaussian generator instance with the gaussian gaussian gaussian gaussian gaussian
create a new generator with the specified binomial random number
creates a new
sets the run thread
returns a random number generator
sets the maximum value of the range
create the toolbar items
create a new generator
returns the start code action code
create a new generator
adds a listener to this object
sets the min
removes a listener from the list of listeners
sets the random number generator
fires a sim event to all registered listeners
sets the generation of the bayes generator
sets the start code action code
sets the step to the given step
returns the seed of the random number generator
returns the start or start or start or start if the start
starts the simulation
sets the start or start start action
builds a simulation
returns the step action
sets the next step action
returns the reload action
stops the batch
reloads the sim
pauses the batch
sets the code reload action code
sets the contribution items
returns true if the simulation has been set
returns the monitor action
set the monitor action
adds a listener to the simulation
edits the current batch
sets a value of the parameter
sets a parameter value
show the batch view
returns the grid action
gets the value of the specified parameter
sets the grid action
returns the suggestion action
set the gis action
parses the file and returns the xml file
returns the inspector action
returns the output for the given id
sets the inspector action
returns the model file name
returns the chart action
returns the model name
returns the output of the given name
returns true if the file name has the model file name
sets the chart action
sets the model name
initializes the remote control
returns the edit file action
sets the name of the file to be used
returns the remote control
sets the edit file action
converts a file name to a file
returns the type manager
adds a display output to the output
set the base directory for the codebase
returns the image descriptor
initializes the output manager
returns the base directory
sets the image desc
returns a random agent from the data
returns true if the file name exists
returns the image desc
returns the scheduler
sets the current file name
initializes the scheduler
sets the pause desc
returns the name of the current file
initialize the controller
returns the controller
returns the name of the file
increases the time of the time step
inform listeners about the event
this is called by the controller to run the file
returns true if the server is ready to run
adds a listener to this simulation
show the parameter view
set the state of the
fires a event to all registered listeners
fires the simulation stop sim event
sets the state of the to the stop simulation
sets the current state of the
sets the current state of the
builds the simulation
gets the value of the simulation creates property
sets the name of the
sets the window title
shows the mandatory views
show the console view
creates the expression
creates the header
creates the footer for the charts
creates the rewrite
creates a new writer
sets the last value of the object
returns the suffix for the file extension
exports the outputs to the output
returns the expression text
sets the expression text
updates the layers
creates the surface
writes the contents of the write and close to the file
returns the surface
returns the file object
sets the file to be used
returns the directory where the directory is stored
sets the directory
returns the value of the code code property
sets the current state of the current state
sets the rewrite flag
returns the header of the header
dismiss the current state
sets the header
returns the footer of the footer
computes the roots for the root of the protocol
returns true if this has a protocol
returns the root node of the protocol
send a message to the sender of the message
adds a delivery message to the delivery queue
sends delivery to the conversation
returns the performative
sets the performative
gets the value of the sent by listing property
sets the protocol
sets whether the email is sent by the
returns the conversation state
sets the conversation state
returns the wait for the response
sets the wait for the response
sets the follow nodes
returns true if this node is a terminal
returns true if the current task can be used
returns true if the task is currently running
select the current task
returns the priority of the specified task
stops the task
returns true if all nodes are finished
update the activity level
executes the command on the given agent
returns true if the given status is finished
executes the given stateless
returns the distance from the given to the given
runs the algorithm
adds a conversation to the list
this method is used to generate the of the
computes the blank nodes
returns the
returns the
returns the workbench advisor for the workbench advisor
sets the value of the boolean property
returns the value of the selection
initialize the specified data and assigns the specified data to
returns the species
erases the current species from the species
initialize the map with the given data
set the return value of the current adornment
disposes the current connection
returns a new file open file open file
build the variables of the
disposes the display
sets the graphics context
returns the graphics object that is used to draw the curves
creates the details viewer for the dialog
sets the font of the font
returns the component that is currently being decorated
iterates through all components and adds them to the container
handles all components of the given container
creates the dialog parent frame
creates a dialog for the given parent
set the scale parameters for the scale
draws the image at the end of the
creates the focus handler
draws the specified image to fit the image
schedules the component creation event
draws the scaled image scaled by the image
draws a rounded rectangle
find the owned buddy window
draws a round rect
draws a round rect
draws a round rect
handles the window opened by the window
draws a circle
handles the window closing event
handles the window closing event
draws a fast circle
returns true if the component is focusable
returns the parent element of the given element
draws a fast circle
draws an oval as a
handles an exception
draws a circle
returns the bounds of the specified string
this method is called when the property value is set
returns the swing component
returns the value of the underlying object property
draws a rect
draws a rectangle rect
returns the object that this object represents
override to set the property value
returns true if this node has children
draws the border around the specified
returns the object that this object represents
draws the string using the given string and its color
adds a child to this element
returns the underlying object
returns the variable
returns the parent of this node
returns the skill object
returns the object that is used to represent the
sets the child
returns the expected child types as a string
create a lucene species
returns true if this is a constant
returns true if this variable has a temp var
sets the world object to the given value
returns the left of the test
returns the expected right type
set the right hand side of the room
returns true if the operand is a zero value
this is a one to be redefined by the code
sets the type
sets the species
build the filename for the given agent
checks if the file is a file
returns true if the image file is a bmp file
returns true if the given file is a file
set the key
sets the value of the receiver
gets the key expr
gets the value of the expr property
sets the content type
returns true if the variable has a return variable
sets the elements to the given value
returns true if the queue is empty
sets the elements
returns true if the queue is empty
sets the species
this method is called when the is left
find the type of the
get the variable of the given entity
sets the x coordinate
set the y coordinate
returns the status of the command
sets the status
returns the number of in a given entity
initialize the environment
initialize the object type
initializes the proportion of the
initializes the range
initialize the entity
returns the rgb value of the color
returns the value of the em b b em em em b
returns the color used to draw the color
insert a new string into the
insert a new string into the database
returns the class file
returns the type descriptor
sets whether this buffer is a public
returns the access flags of the current access flags
sets whether this set of flags is a private
returns the name of the constant pool entry
sets whether this set should be cleared or not
returns the descriptor of the descriptor
returns the constant value of the constant
sets whether or not this flag is set or not
set the constant value of this field
pass field value to constant pool
pass the constant value to constant pool
pass field value to constant pool
pass through constant value and return the constant value
mark the entry as a synthetic attribute
sets whether this attribute is abstract
mark the deprecated attribute
returns a string representation of this object
returns the length of the attribute
returns true if the queue is empty
returns the value to which this map maps the specified key
returns the constant pool
this method is used to write the data to the data output
copies all of the mappings from the specified map to this map
returns the constant class info object
clears the internal buffer
returns the class argument
returns the component type
returns the dimensions of the
returns the number of dimensions of the font
returns a set view of the keys contained in this map
returns the string representation of this object
returns a collection view of the values contained in this map
returns the type descriptor
returns whether the inner class is able to be used
returns the outer class of the cell
returns the method descriptor
returns the source file name
add an exception to the list
adds an interface to the interface
adds an interface to the list
add a method to this class
creates a method that declares the current access level
adds a class to the inner class
add a class to the inner class
adds an attribute to this object
writes the data to the specified output stream
returns the index of the
returns the code buffer code that is used to render the
returns the file name
returns the file name constant
returns the line number of the given location
returns the length of the
returns the length of the buffer
returns all constants defined in this map
returns the size of the entries in bytes
a constant pool of the constant pool of the constant pool
returns a constant class info structure for the given dimension
returns a constant class info structure for a given class
returns the constant value of the constant
returns the constant value of the constant pool entry
returns the constant float constant value with the given value
returns the constant value of the constant pool entry
returns a constant string containing the constant value of the constant
create a new object
adds a local variable to this environment
returns a collection of all instructions that are currently in the
returns the inner class constant class info object
returns the outer class constant
returns the name of the inner class
returns an output stream for the given name
create a local variable
create a label object
add a context to the context
returns the context of the xml file
adds a line to the end of the list
load the constant pool
load a constant
load a constant from the
load a constant constant
checks if the given string is an opening brace
returns true if the given string is a closing tag
load a local variable from the local cache
returns the end line
sets the end line
sets the start line
returns the end column
returns the start column
sets the end column
sets the start column
returns true if the given string is an opening brace
load the reference to the local cabinet
returns true if the given string is a closing tag
returns true if the given string is an opening point
returns true if the given point is a closing point
update the selection
checks if the given string is a unary operator
fires a selection changed event to all registered listeners
this method is called when the selection changes
checks if the given string is a type
load the field from the field descriptor
checks if a species is a species variable
checks if the given string is a species name
load the static field from the static field
checks if the given string is a global variable
updates the display
updates the display of the current display
disposes the toolkit
returns true if the given string is a temporary variable
returns true if the given string is true
checks if the given string is a false
sets the graphics object that is used to draw the charts
returns the graphics object that is used to render the graphics
set the surface
returns true if the string is a nil
sets the font of the component
store a field in the database
returns true if the given string is a self
set the current drawing point
set the drawing parameters to be used for drawing the current view
returns true if the given string is a dotted var
sets the scale parameters for the scale
checks if a species is a variable
store a static field in the database
draws the image at the end of the
draws the image to the fit
draws the scaled image scaled by the image
returns true if the string is a keyword
draws a round rect
draws a round rect
draws a fast circle
adds the next instruction to the list
draws a directed link between two vertices
checks if a species is a terminal
draws a link
insert an instruction into the list
draws the fast oval
draws an oval as a
this method is called when the opcode is set
removes the last element from the list
returns the bounds of the given string
draws the rect rect
return the value of the specified type as a
draws a rectangle rect
replaces the first element of this list with another one
returns the stack adjustment
executes the method
returns the stack depth
draws the string using the specified color
returns the detail message
prints the stack trace to the specified print stream
prints the stack trace to the specified writer
returns the location of the location
invoke the method with the given constructor
returns true if the flow is in the flow
returns the number of decimal places
parse the source file
parse the xml document
parse the input source and return the result
initializes the header
close the stream
sets the next time
invokes the method
sets the name of the
schedules the queue to be updated
invokes the constructor
schedules the specified action to be scheduled
sorts the list of occurrences of the sort order
invoke constructor with the given parameters
invokes the constructor
extends the superclass constructor
schedule a action at the specified time
schedule a action at the specified position
schedule a action at the specified location
duplicates the hash code to the current value
schedules an interval at the specified interval
append a trailing
append a new empty code string code to the
sets the species
add opcode to the
starts the action
add opcode to the
starts the action
add opcode to the
schedule a action at the specified position
pop the last pushed instruction
add a opcode to the
initializes the default distributions
swaps the two elements in this list
sets the color of the axes
the
sets the color of the axes
parses the expression
parses the chart color
parses the color element
sets the background color of the chart
get image file name
move the location to the location
initialize the data
returns the number of fields in this field
returns the ith field
returns true if the next record in the record has the next
returns the text
refresh tree
adds the children of the given parent to the tree
add an action to the end of the action queue
action to pause at the given
schedule action at the specified
removes the end action
remove the pause action
returns the pause actions
executes the end actions
executes the pause actions
set the location to be used for the location
sets the input
updates the outline page
this method determines if the local variable is
add a new opcode to the array length
action to perform when the action is invoked
inserts a new action
adds a new instruction to the
initializes the header
adds a method to the list
creates a string representation of the class
check if the given type is a cast constant
this method is called when the instance of a constant is about
builds the schedule
opcode to access the local variable
build the display
returns the name of the component
sets the schedule
enter the current state of the instruction
get the method for the given class name
stop the timer
this method is called when the thread is started
returns the target agent
returns the current route
returns the distance to the agent
returns the time to agent the given agent
this method is called when the exit is closed
setter for the scene
builds the world
returns the index of the agent
returns the decay
returns the environment
set the base name of the
set the base
sets the skills
add a class to the list of skill classes
adds the instruction to the bytecode queue
returns the root element
sets the root element of the tree
sets the parent
adds a breakpoint to the current state
returns the base class
sets whether or not global path finder is allowed to be used
returns the use global
sets the name of the variable
sets the type of this
returns true if the given species is direct parent of this feat
returns the node
sets the node
returns the secondary view name
sets the view id
sets the view secondary id
start the
builds the species
builds the species from the given species
returns the condition
sets the proto else
returns the else proto
sets the name
sets the condition
gets the condition
returns true if the given agent is
collects all occurrences of the level names in the given list of
writes the agents to the given data
sets the initial state
sets the final state of the
returns the name of the
this method is called to find the skills
returns the center of the given
returns the center of the graphic list
returns the center point of the agent
returns true if the specified action is accessible
register a new action
returns the center of the extents of the center of the center
returns the center point of the
removes an action from the group
adds a filename to the list
asserts that the file exists
removes the action at the specified position from the
this method is called when the user enter a new scope
creates a new scope
exit the current scope
this method is called when the user exits the site
returns true if the variable is a variable
called when the remote machine is exited
returns true if the given name is already a species name
get the species
add a new species to the list
returns the world species
builds all species
returns true if the species is a super species
returns the priority of the
returns the satisfaction of the last satisfaction
update the reward of the current species
update the species
returns the current task instance
saves the agents to the agent system
returns the task that is the task that is associated with
initialize the agent
loads the memory
adapts the to the previous one
logs the current state
adapts the to the current task
returns the duration of the current task
called when the action is ended
returns the current value of the reward
this method will be called after the next simulation step
end of task
returns the number of tasks in the queue
ends the current task
returns the activity of the task
show the simulation result
returns the class for the given class
returns the class for the given token
returns the priority of the
returns the priority of the
returns the number of trial
add an external to the
returns the duration in seconds of the tick
returns the total duration of the particles
returns the instant satisfaction
returns true if the current user can accept the success
updates the satisfaction of the satisfaction
parse the max and max
parses the given element
parse the element
sets the m
returns the
sets the maximum value of the
add a new task to the queue
returns the maximum value of the maximum
returns the class for the given token
returns the start time
returns the duration of the animation
returns the success
returns the name of the grid at the given location
returns the view state
returns the place in the world location
sets the size of the image
returns the value of the ram
returns the adjustment of the instruction
constructs a code string code with all attributes
constructs a code string code with all attributes
release the resources
return a list of all the entries in the given list
log the given message to the console
logs a message to the console
finishes the
returns the byte buffer offset
sets the byte off the buffer off
check if the current position is in the header
reset the stream
add a mapping to the specified file
append a byte array to the end of the specified byte array
write the byte array to the output at the specified position
add a mapping to the given cache
returns the int value of the current position
peek at the next element
this method is called after the engine is being executed
initializes the servlet
returns the string representation of this code string code
get the linger time in seconds
returns the number of bytes in the buffer
runs the thread
sets the linger
returns the long value of the current element
starts the thread
sets the socket to be used by this socket
this method is used to convert the given byte array to
stop the thread
returns the next int value
starts the lifecycle of the component
gracefully terminate the active use of the public methods of this
add a mapping to the cache
add a mapping to the given file
this method is called when the lifecycle is about to be processed
returns true if the default context is a default context
returns whether this web service is live
sets the
sets the live deploy
process the start of this element
process the given string and returns the
logs the specified message to the logger
read a n bytes from the input stream
set the path to the path
logs the message to the logger
returns the file base for this application
stops the timer
check if the arguments are handled
sends a message to the server
sets the debug level
deploy the apps apps
this method is called to indicate the
close the connection
logs the specified message to the logger
logs the specified message
scan the scan for the scan
starts the
stops the timer
create a new digester instance
executes the command
process the start of this instance
sets the logger
sets the of the
check if the arguments are handled
executes the command
sets the code code property
starts the server
stops the timer
stops the server
expands the specified url
return the socket factory
returns the debug debug level
sets the debug debug level
sets the socket factory
returns whether naming conventions should be used
logs the specified message to the logger
sets whether naming conventions should be used
returns the logger
logs the specified message
sets the logger
returns the realm
starts the installation
set the realm
returns the socket factory
stop the application
sets the socket factory
adds a connector to the connector
undeploy all the apps
deploys the database
add a engine to the engine
creates a context with the given path and the root
starts the thread
creates a context with the given path and the path
logs the specified message to the logger
creates a new instance of the engine
logs the message to the logger
create the engine
creates a host
stop the thread
returns the info of the file
remove a connector from the connector
gets the tomcat authentication
creates a host and returns it
remove the context
remove the engine from the engine
sets the server authentication flag
remove the host from the host
runs the
creates a loader for the given class loader
creates a request to be used to create the request
creates a new response
initializes the component
creates and returns a processor that will be used to allocate the
creates a new processor
sets the check interval
starts the thread
gracefully terminate the active active and active behavior
returns the default context
stop the thread
sets the default context
remove a file from the database
returns the maximum number of idle connections that can be used to
creates a session
starts the container
runs the thread
creates a new session
logs the specified message to the logger
runs the thread
adds a session to this session
starts the lifecycle of the application
gracefully terminate the active use of the public methods
starts the thread
sets the connection url
starts the lifecycle of the application
get the connection string
create a new empty session
find the session for the given id
this method gets called when a bound property is changed
removes the session from the session
returns the file object
process the request to expire the time of the session
clears the store
starts the thread
returns a string representation of this object
creates a new session
returns true if the given id is loaded
logs the specified message to the logger
logs the specified message
loads the data from the database
starts the application
this method is called when the cache is unloaded
gracefully terminate the active use of the public methods of this
remove the session from the session
returns the session attribute for the given session id
returns a string representation of this object
logs the specified message to the logger
unload the session
logs the specified message
this method is called when the session is out of the
remove a session from the database
clears the database
writes the session to the session
returns the connection to the database
checks if the role is already in the role
returns a string representation of this object
starts the connection to the server
process the start of this element
starts the lifecycle of the application
return the principal associated with the specified username and
method to abort the authentication process phase 2
commit the transaction
renews the session
close the given connection
opens a connection to the server
returns the container of this component
gracefully terminate the active use of the public methods of this
set the container to use for the container
return the principal associated with the specified username and
return the principal associated with the specified username and
return the principal associated with the specified username and
executes the task
executes the task
return the principal associated with the specified chain of x509
returns the date
returns true if the specified role is already in the
starts the thread
returns the principal associated with the specified chain of x509
executes the task
load the properties from the file
returns true if the given principal is already in the
executes the task
release all the components
logs the specified message and exception to the log
runs the thread
return the principal associated with the specified username and
close the given connection
starts the lifecycle of the game
remove the resource from the pool
this method is used to set the credentials
remove the given resource link from the database
returns the name of the object described by this type
creates a new group
create a new role
returns the digest realm for the given realm
returns the naming resources
logs the specified message to the logger
returns the creation time of the current session
find the name of the named group
find the name of the role
logs the specified message
returns the name of the user
remove a group from the group
remove a role from the database
removes a user from the database
returns the
returns an enumeration of all the attributes
this method is called when the container becomes the container
this method is used to parse the content of the resource
this method is called by the framework
send a connector to the server
logs the message to the server
logs the message to the server
the given factory
adds the given service to the set of available connectors
this method is called when the server is about to be disposed
remove the name of the context
remove the name of the host
start the server
remove the service from the service
set the directory to use for the directory
remove a resource from the pool
sets the prefix
sets the suffix
remove the given resource link from the database
returns the timestamp
logs the given message to the console
sets the verbosity level for this logger
sets the timestamp
logs a message to the log
log a exception to the log
close the writer
connect to the server
sets up the from context
writes a message to the log
opens the file
logs the specified message to the verbosity level
sets up the request for the request
logs a message with the specified level
starts the lifecycle of the lifecycle
gracefully terminate the active use of the public methods of this
this method is used to set the command to execute the command
fires an instance event to the listeners
sets the environment
fires an instance event
logs the specified message to the console
returns null if null no such extension are not null
returns true if the user is allowed to process the given request
returns the web app root directory
returns the parameters of the query
logs the specified message and exception to the log
returns the ready status
sets the response
sets the input stream to use for this connection
returns the container
sets the container to use
this method is called when the container is closed
this method gets called when a bound property is changed
adds an alias to the cache
adds a host to the host
find the host with the given name
removes an alias
removes the host from the host
returns the logger
sets the default host
returns the container of this component
sets the container to use for the specified container
the context
sends a request to the server
this method is called when the user presses the
logs the specified message and exception to the log
adds a default context to the list
sets the container to use for the specified container
this method is used to set the request context
sets the debug level
returns whether or not this web service is live
clears the attributes of this object
sets the live deploy
return the mapper class
returns the name of the host
set the mapper class
sets the attribute read only
set the jsp file
returns the context for deployed deployed
logs the specified message to the logger
logs the specified message
returns the load on startup
returns the servlet context
returns the value of the named init parameter
returns an enumeration of all the names of the parameters
import the default context
adds a connector to the connector
returns the parent class loader
logs the specified message to the log
adds a child container to this container
sets the application listeners
remove a connector from the list
logs the message to the log
create a new digester instance
deletes the given directory
returns a request dispatcher for the given name
unwrap request to unwrap request
returns the real path of the specified path
unwrap the response
adds a mapper to the mapper
install a war from the remote installation
sets the servlet class
returns the context for deployed installation
remove a remote resource
remove the remote file
returns the resource paths
starts the server
returns the mapper to map the mapper to the
stop the web service
adds a mapper to the default mapper
sets the route to the given string
sets the charset to use for reading and or
this method is responsible for creating the request and returns the container
logs the given message to the logger
logs the message to the logger
remove a child
start the server
add a ejb reference
logs a message to the log
remove a mapper from the mapper
add a resource reference to the resource
log a message exception to the log
sets the cookies
add a resource env reference to the context
sets whether the is
adds a resource link to the web service
log a message and the given throwable
returns the value of the parameter with the given name
remove a reference to the
returns an enumeration of the parameters names
adds a service to the service
remove a environment
sets the
this method is called when the unavailable value is discarded
remove a local ejb reference from the naming context
adds a cookie to the request
adds a header to the request
adds a locale to the locale
clears the cookies
clears the headers
clears the current request
set the authentication type
set the path to the context of the request
add a default mapper to the set of mappings
sets the output
set the http method
remove a resource from the pool
normalizes the given path
sets the query string
set the path info for the current request
sets the flag indicating whether or not the session cookie is requested
sets the requested session id
return the wrapper class
unbind a resource env
set the http request flag
set the uri of the http request
merge the parameters into the parameters
set the path to the servlet
set the principal of the user to the given principal
sets the class name of the wrapper class
remove a resource link
returns the protocol
recycle the component
sets the directory resources this user is to be used
logs the specified message to the logger
returns the resources associated with this object
logs the specified message and exception to the logger
returns the servlet response
logs the specified message to the logger
logs the specified message
sets the loader to use
returns the name of the class
returns the value of the header
flush the stream
print a boolean
print a character
checks if the given classname is contained in the class loaders classpath
print a string
sets the manager
print a double precision floating point number
print a floating point number
reads the next input stream from an input stream
print a integer
print a long integer
returns true if the given object is allowed to be used
print the object
runs the thread
print a string
prints the header to the line
recycle the http servlet request
returns the authorization authorization
writes the specified boolean to the line
print a character and then terminate the line
returns the name of the log
the method to be called by the code
description of the method
print a float and then terminate the line
stop the thread
writes the specified number to the buffer
writes the value to the debug output
starts the
this method is called when the object is closed
print a string and then terminate the line
write the specified character to the output stream
returns true if the given loader is a classloader
add a listener to the list of known listener
writes the to the file
description of the method
gracefully terminate the active running
writes the given string to the buffer
write a portion of a string
adds an application parameter to the application
returns the value of the header
returns the message
returns the status of the http response
reset the status message to the status message
returns the wrapped response
returns the connector
set the connector
returns the number of content in the response
returns the context
returns true if the given manager is a manager
set the context
adds a ejb resource
returns the flag indicating whether or not this response should be included
sets whether the given code property code is included
returns the info of this message
returns the request
sets the request
add an environment to the environment
returns the protocol of the request
returns the servlet response
returns the stream to which this mailbox is being sent
checks if the given property is an exception
set the stream to the given stream
creates a new servlet stream
adds a resource params to the list of parameters
finishes the response
returns the reporter to print the current response
returns the input stream
adds a listener to the list of listeners
recycle the http servlet request
converts the given location to an absolute url
close the connection
checks if the given class is a persistable class
sets the input stream to read from the input stream
flush the stream
writes the specified byte to this output stream
adds a parameter to the set
writes a byte array to the socket
writes a byte array to the stream
returns the request wrapped by this request
returns the authorization authorization string
set the authorization credentials
flush the buffer
returns the naming resources associated with this context
checks if the given class is a
adds a locale to the list
returns the connector
set the connector
adds a resource to the list of resources
returns the info of this request
finishes the request
adds a resource env reference to the activator
returns the request
sets the naming conventions for this resource
returns the response
resets the status to the servlet
sets the response
returns the socket of this socket
adds a resource link to the web application
sets the socket
returns the stream to which this request is being read
sets the content length of this response
sets the stream to the given stream
release all the components
add a new listener to the list of lifecycle events
returns the wrapper
sets the wrapper for this wrapper
sets the content type of the content
creates an input stream to the input stream
returns true if the application has been committed
finishes the request
add a listener to the list of listeners
recycle the component
sets the content length of this response
set the content length of the request
sets the locale of the current language
sets the content type
find the ejb lookup object associated with the specified name
sets the content type
returns the content count
set the path to the specified path
sets the protocol to use for this server
sets the remote address
sets the scheme attribute of the request object
adds a cookie to the response
find the environment for the given name
sets whether the user is allowed to secure the http secure
returns the flag indicating whether or not the
sets the name of the server to use for the server
set the port to which this socket is listening
adds a header to the header
close the underlying stream
adds a header to the request
find a resource in the context
returns the output stream
adds a header value to the header
create a request
find the resource with the given name
sets the output stream
sets the public identifier
sets the suspended flag
creates a response
returns true if the given header is already in the header
finds a link resource by its name
creates a code http processor code
returns the url for the given url
creates a new servlet output stream
finish the response
creates a new http processor
remove a listener from the list of listeners
return the character encoding of the character encoding
returns the reporter
remove the parameter from the application
encodes the url and returns the url
recycle the component
writes the specified byte to this output stream
remove the ejb name from the ejb
writes a byte array to the socket
stop the thread
returns the input stream for this request
flush the buffer
remove the environment
returns the locale of the current locale
returns the character encoding of the current character
remove an instance of listener
returns an enumeration of all the currently registered
send error status
returns the output stream
removes a parameter from the request
returns a writer for writing to this response
sends an error to the server
returns a buffered reader for the current character
sends a temporary redirect response to the specified
resets the response to the next state
remove a resource from the naming context
reset the buffer
sets the date header with the specified name and value
sets the buffer size
remove a reference to the resource environment
sets the header with the specified name and value
sets the content length of this response
read a chunk of bytes
sets the content type of the content
removes the specified resource link
sets an int header with the given name and value
sets the locale of the current locale
remove a wrapper from the set of lifecycle events
set the status message
returns the protocol
recycle the output stream
sends an error message to the remote server
reset the header to the default value
creates a new servlet output stream
sets the status of the message
remove a wrapper listener
returns true if the connection is closed
remove a header
returns true if the response stream is initialized
finishes the response
set the status
sets the content length header
sets an attribute of this element
returns a string representation of this object
returns the writer
returns the output stream
returns the servlet context
sets the session timeout value
returns true if the server is a same address
start the lifecycle of the lifecycle
parse the username and returns the username
parses the password and returns it as a string
sets the flag
gracefully terminate the active active and active behavior
starts the lifecycle of the lifecycle
gracefully terminate the active use of the public methods of this
adds a repository to the list of repositories
this method is called when the user presses the session
returns the formatted url
returns a string representation of this object
install the configuration file
removes the path from the file
sets the wrapper
initializes the servlet
this method gets called when a bound property is changed
find the resource with the given name
logs the given message to the logger
logs the message to the logger
adds an application parameter to the application
notify the application context that the notifier has resumed
adds a child component to this jsp file
adds the ejb ejb
returns the session associated with the given request
get the session associated with the given request
add an environment to this environment
starts the thread
logs the specified message to the log
stop the thread
returns the canonical string representation of this
returns a hash code value for this object
adds a resource params to the list of parameters
logs the specified message
compares this daemon permission with the specified object for equality
checks if this acceptance capability implies the specified permission
returns a string representation of this object
runs the thread
stop the
setup the description of this object
creates the control actions
the main method of the application
set the value of a property
sets the home
adds the ejb local ejb
sets the content length of the content
sets the message context
recycle the output stream
adds a resource to the container
adds a resource environment reference to the container
adds a resource link to the container
create a new message context
opens the
recycle the component
sets the bytes to be used in the buffer
sets the characters to be used for the given char array
add a servlet mapping
sets the string to be used as a string
initializes the socket
puts the characters into the text field
flushes the cache
returns the level of the proxy
sets the int value of the object
find the stream for the current thread
flush the stream
flush the stream
sets the next code step code
sets the real bean
recycle the component
set the value of the named property
set an attribute
remove all header values
returns the error page for the given error code
initialize the connection
this method handles the query parameters
recycle the output stream
add a user agent to the list of agents
recycle the output buffer
this method is called to signal the next request to the next
sets the no compression user agents
adds a mime type to the list of mime types
sends a status message to the server
sets the mime type
add a filter to the filter
sets the response
find the local ejb instance associated with the given name
p the headers the response to the end of the request
add a string array to the array
sets the request
writes the given code message code to the output buffer
write the data to the buffer
add a user agent to the list of agents to be restricted
returns the mime mapping for the given extension
writes the given byte array to the buffer
writes the given string to the buffer
sets the restricted user agents agents
sets the request
returns the request request
check if the factory is not connected
recycle the http servlet request
sets the response to be sent to the server
get the response
recycle the output stream
recycle the output stream
returns true if the application has been committed
set the request
returns the servlet request
return the servlet response
returns the output stream
logs the specified message to the logger
sets the response
logs the specified message and exception to the logger
initializes the filters
sets the socket
returns the input stream
checks if the header is a special header
returns the reporter at the current position
sets the proxy name
sets the content length of the response
sets the content type
sets the locale of the current request
adds a cookie to the response
returns the
sets the
adds a header to the header
creates a request to be used to create the request
creates a new response
logs the given message to the logger
returns true if the header contains the header of the given name
logs the message to the logger
returns the value of the named attribute
encode the url to the given url
starts the protocol
returns an enumeration of all attribute names
gracefully terminate the active use of the public methods of this
remove the ejb
remove the environment
sets the date header with the specified name and value
returns the input stream for this request
removes an error page from the list
returns the value of the parameter with the given name
returns the parameter map
converts a url to an absolute url
returns the names of all the request parameters
returns the buffered reader
returns the remote address of the remote host
remove a local ejb reference from the ejb
returns the remote host name
removes a resource from the list
sets an attribute with the given name and value
removes a resource environment reference to the
adds a new cookie to the response
removes a link from the web application
adds a parameter to the request
clears the cookies
remove a servlet mapping from the servlet context
starts the filter
stop the filter
finds the filter configuration for the given name
deallocate resources
deallocate resources
returns the query string
returns the url for the given pattern
returns the base directory for this file
binds the thread to the current thread
returns the paused state
checks if the url is a url
creates a new domain object
generates a sql string for the sql statement
generate sql for the sql command
generate sql for the sql command
returns true if the value is null
generate sql for the sql command
returns true if the value is a quoted value
returns the class of the class
generate sql for the sql command
sets the class of the class
generates a sql string for this property
returns the criteria
returns the string representation of the value
sets the criteria
returns the class of the value of the given value
generate sql for the sql command
returns the next key
returns the maximum value in the list
removes all properties excluded from the list
returns the minimum value
returns the next key statement
remove all properties from the given list
returns the example
returns the next key in the database
sets the example
updates the next
returns the excluded fields
updates the next key
returns the number of connections in the database
returns whether null values should be ignored
returns the number of connections in the database
returns the flag indicating whether or not the database manager should be
removes all properties from the list of excluded properties
adds a list of properties to exclude
closes the connection
make the background connection
remove the excluded
returns the related related object
returns the increment of the property
this method is called when the connection is made
setter for property related object
returns true if the current transaction is active or not
returns the target object
adds a property to exclude
sets the target object
returns the mapping name from the path
creates a new connection to the database
flush the transaction
returns the simple name for a class
closes the connections
saves the object to the persistent store
loads the mapping paths from the mapping file
deletes the object
returns true if the is persisted
returns the path for the mapping of the given class
sets the is persisted attribute
returns true if this is a persistent object
sets the persistent
begin user doc
this method is called when the is removed
mark the current object as dirty
find all the dependencies of the given class
mark the current as having been removed from the
loads the object from the registry
loads all objects in the list
parses the given path and returns the default file
sets the class name
sets the cascade
adds a new domain object to the map
returns the column names
removes the object from the collection
sets the column names
find all objects of the given query
returns the class mapping data
sets the class mapping data
returns the domain object with the given id
returns the many associations
find objects that match the criteria and returns it
sets the many associations
checks if the given id exists in the cache
returns the mapping data
returns the one to one of the
parse the specified path
sets the one to one
set a property handler
returns true if the given id is already already already already already
returns the properties of this file
returns whether the given id already exists in the database
returns the inheritance mapping data
returns the relation class name
process inheritance inheritance
returns the many to one associations
returns whether the given object has been removed
sets the relation class attribute of the relation object
returns the inverse of this
sets the many to one associations
sets the inverse
returns the inherited associations
returns the object that is loaded from the cache
swftag types interface
sets the inherited associations
find the object of the given class
get the mapping data for the given class
inserts a new statement
find a object
inserts a new into the database
delete the given relation from the database
find a object
returns the mapping data for the given class
check the version of the statement
returns the mapping data for the given class
returns the mapper registered with this class
returns the relation mapper for the given class
returns the configuration object for this configuration
sets the configuration
load the objects from the given objects
returns the connection to the database
find all objects that match the given criterias
registers a listener to this object
gets the statement builder
returns a string that can be used to find the
checks if the given object is a domain object
returns the domain object factory for this domain object
insert a new object into the database
registers a new instance of the given object as an application
returns the key generator for this
returns true if the delivered object has been persisted
returns the relation mapper for the given class
returns a string that can be used to find the relations
returns true if the given mapping has a inheritance
returns the mapper object for the given class
deletes the given object
creates a many many string of the given
creates a many many to one string statement
flushes the cache
rolls back the transaction
inserts the relations to the object
deletes all relations and deletes all relations
insert a new object into the list
updates the version number for the given object
load the many associations from the given object
updates the cache
deletes all objects from the registry
load the properties from the given object
test insert of assertions
test method for
test method for
test method for
get the prepared statement for the given id
test method for
test the find inheritance with one relationship
loads all objects from the given list of objects
creates a string representation of the
creates a new insert many string
returns the prepared statement for the given connection
returns true if the given object is persisted
inserts the given object properties into the given prepared statement
insert persistable class into the database
creates a string that will be used to delete the
create a many many to many many string of the given relation
get a prepared statement from the database
creates the update string statement
gets the prepared statement
lookup the path for a property
returns the string value of the given key
lookup a string
returns the original string
returns the original string
close the windows
adds a new
close the windows
removes a child node
returns the path to the specified url
this method is called when the history history is pushed
builds a menu bar based on the given window
description of the method
adds a tile to the current tile
returns the string value of the key
returns true if the tile is a tile
returns the original string value of the key
sets the type of this tile
builds a toolbar based on the given bar
sets the tile at the specified location
lookup a string
sets the x offset
gets the magic string
returns the original string
loads the data from the given input stream
saves the map to a output stream
sets the width of the image
sets the height of the image
returns the name of the tile
returns the magic string
load a map from the input stream
dump the tree to the dump
toggles the visibility of the palette indicator
this method is called when the image is being resized
saves the map to a output stream
returns the preferred size of this component
paints the component
returns the tile set
returns true if the dialog is able to close the dialog
sets the mode of the edit mode
returns the dimensions of the current selection
draws the image at the specified location
close the dialog
returns the mode of the edit mode
load the data from the file
returns the map object factory at the specified index
returns the factory for the given class name
sets the state of the toggle
compacts the cache
add a map object factory to the map
returns an iterator over the elements in this collection
notifies listeners that the tile palette event has been selected
returns true if the window is selected
sets the state of the window
returns whether the window is selected
returns whether the window is selected
sets the state of the window
sets the state of the window
sets the tile at the specified location
initializes the properties file
adds an object to the map
returns an enumeration of the resources for the given name
fire an event to all registered listeners
adds a plugin to the list
returns the dimensions of the tile
finds the resource with the given name
returns the number of plug ins
returns an iterator over the plugins
returns true if the database has been loaded
returns the number of failed plugin count
returns the major version string representation
compares this object with the specified object for order
returns an iterator over the plugins
selects the specified object
returns a hash code for this object
returns a string representation of this object
returns the scroll amount for a scroll unit
checks if the given plug in manager is already registered
returns the scroll justification for the given scroll pane
logs the info message
logs a warning message
returns the jar file containing the current jar file
saves the properties to the default file
sets the floor attribute of the object
logs the exception to the system
saves the properties to the file
shuts down the database
set the locale for this
add a new floor to the current room
this method deletes a floor
shuts down the application
returns the zip entry with the given name
draws the map
returns the jar entry for the given name
remove a property change listener from the listener list
returns the weight of the current node
notifies all registered listeners about the event
find the entry for the specified entry
saves the map to the given output stream
returns the locale of the user
sets the locale to the given locale
attach a window to the window
returns the application file
returns the system plug in plug ins
returns the user plugin manager
returns the application file
returns a string representation of this
returns the of the
adds the drop support for the given transfer
create the module
creates a new connection
returns the total number of connections
remove mud object from the object
returns the mud object with the given name
remove a mud object from the object
initialize the application
method to be called when the user selects a content of the
this method is used to load the bean object
load the definition of the given script
write the current object to a writer
this is a callback method that parses a reader
unregisters the contents of the container
this is a convenience method that builds a section from a reader
get the next entity
append a string to the end of the list
returns true if the string buffer contains a next string
begin appending a new array
get the next character
consume the next character
get the next n characters
get the next char in the buffer
append a string
pop the top off variable stack
get the next element from the buffer
pushes a jsonobject onto the stack
get the value associated with an index
return the next token
get the boolean value associated with an index
skip over characters until the next character is
get the double value associated with an index
get the int value associated with an index
get the jsonarray value associated with an index
get the jsonobject associated with an index
get the long value associated with an index
make a string from the contents of this jsonarray
get the optional boolean value associated with an index
get the value associated with an key
get the boolean value associated with a key
get the optional double value at the specified index
get the double value associated with a key
get the optional int value at the specified index
get the value at the specified index
get the value associated with the given key or the
get the value at the specified index
get the jsonarray value associated with a key
get the optional long value associated with an index
get the jsonobject associated with a key
get the optional string value associated with an index
get the long value associated with a key
put part of this object
returns true if the jsonobject contains a key
returns an iterator over all keys
returns the number of elements in this map
produce a jsonarray containing the names of the elements in this jsonobject
get an optional object value associated with a key
put or replace an object value in the jsonarray
removes the element at the specified position in this list optional
get a boolean value from the group
produce a jsonobject by combining a jsonarray of values in json jsonobject
write the contents of this object to a writer
get an optional double associated with a key
get an optional int value associated with a key
get the value associated with the given key
get the key associated with the key
get the optional long value associated with a key
get the optional value associated with an
put a key value pair in the jsonobject
removes the key from the map
returns an iterator over all the keys in this map
produce a jsonarray containing the values of the members of this jsonobject
write the jsonobject as json text to a writer
load the property values from properties
sets the field value
this method is called when the user presses the specified character
this method is called when the server is destroyed
initializes the dead objects
puts a value into the map
un links the given node to the destination
links backward backward backward backward backward in the backward list
un un un un un the node
returns true if the node is forward forward
returns true if the node is a link backward
removes the node from the given node id
this method is called by the source node if the node is
updates the accumulated status
returns a string representation of this agentwise
compares two transaction objects
returns the hash code value for this uuid
compares two transaction objects
compares two transaction objects
sets the id
returns the level permission
sets the level permission
returns a string representation of this object
indicates whether some other object is equal to this one
returns a string representation of the state
returns the size of the given string
returns the number of
returns the number of
sets the string as a string
returns the number of
sets the id of the class to be used
sets the id
set the dimension of the image
returns a string representation of this object
sets the end time
compares this class to another class
deletes all the
update the table
sets the style of this component
returns the barcode
returns the students vector
returns the photo
sets the photo
adds a new user to the database
returns a string representation of this object
description of the method
returns true if the given object is equal to this
set the text alignment for the text
adds a slot to the list
adds a slot to the list
add a new time slot slot to this slot
deletes the time slot
returns the time slot
returns a string representation of this object
returns the time slots in which the time slots is in
deletes the current record
gets the value of the property
updates the database
compares this bean with another object
sets the
gets the week no
gets the course code
returns the id
returns the
add a lecture to the slot
sets the id
sets the week no value for this reservation result
sets the id
delete a lecture
returns a string representation of this object
compares two time slot
returns a string representation of this object
compares the specified object with this bean
adds a new user to the privilege privilege
deletes the current record
this method is called when the user changes the data of the
add a privilege to the access list
add a new to the
deletes an access privilege from the user
delete a slot
returns a string representation of this object
returns the users permissions
adds a new code privilege code to the code group code
add a tutorial slot
adds a new user to the database
deletes the current record
deletes the current record
get the object from the database
checks if the given privilege is already already already already already already
delete a given tutorial from the database
check the access privilege for the given privilege
updates the database
returns the size of the privilege
returns a string representation of this object
indicates whether some other object is equal to this one
adds a slot slot
setup the test bean
tears down the test
compares the specified object with this bean
tears down the fixture for example close a network connection
tears down the test
test method for
set up the test fixture
tears down the fixture for example close a network connection
delete the given slot
the test that the user has to be removed from the database
test the user bean
returns the coordinator bean
test the user bean update
tears down the test
test the user bean
get the lecture of the given day
sets up the fixture for example open a network connection
tears down the test
get the for the given day
returns the tutorial slot
returns the
returns the
returns the
gets the no
returns the number of
gets the no
sets the no
sets the no tutorial
sets the no
add a class member to this class
remove member class member
remove a member from the list
returns the class member for the given uid
returns the list of class objects
adds a new code code to the database
this method updates the display
this method sorts all the arguments in this class
join all references to the given collection of all elements
adds an attribute to the list
returns the attribute value for the given key
returns the value of the given attribute
returns the first chart container
returns the next draw point
returns the version of the
sets the value of the s style property
returns the information about the note
remove the given object from the container
this method defines the active selection of the application
returns a hashtable of the given method
returns the upper case name
returns the collection of all the content
returns a collection of all the members of the user
returns the number of of this community
returns an iterator over the elements in this collection
returns the pre defined list of the parameters
compares this object with the specified object for order
checks if the given project is currently currently in the project
build the work package for the tree
builds the child nodes for the given task
builds the package tree
returns the number of special to render the current task
builds a work package for the given list of work tasks
returns true if this object has a peers
returns true if the handler has open handler
returns the current context link
returns the fully qualified name of the type
find all discussion topics that are related to the given list of
returns true if the package references in the package
returns the role list
adds a role to the list
removes a role from the role list
returns the version number of this version
sets the version number
returns the preferences for the preferences
sets the gui preference
returns the reports preference
sets the reports preference
saves the preferences to the database
saves the preferences to the database
saves the reports preference
applies the preferences to the preferences
saves the reports preference page preference
applies the preferences to the preferences
saves the preferences to the persistent store
apply the preferences to the permanent store
clone the persistence manager
creates the clone of the current preference
this method creates the default view combo box
build the quadrant of the
build the value
build the delivered objects
build the delivered objects
build the for the
build the of the
build the threshold
build the for the
returns the panel that contains the investment quadrant
sets the data editor support for the editor
returns a list of all the links in the list
returns true if the field is valid
returns the child link with the given object
returns the default panel
returns the main panel
returns the panel to be used for the server side
builds the package for the work package
called when the view context is changed
returns the is delivery owner
returns whether the collaboration is currently being played
returns whether this member is a delivery community member
returns whether the member is required or not
returns the is required to be used for the
returns whether this field is a specification
sets whether this member is able to deliver
sets the is optional reviewer flag
sets whether the field is required or not
sets whether the reviewer is currently required
sets whether the task is specification
returns the value of the is normal community member property
set the view context to be used in the
sets the is normal community member
returns the object context object for the current context
sets the original object to the given object
returns a clone of this object
returns the original object that is responsible for
builds the tree context
returns the component that this component is listening to
returns a list of all the tasks
returns the details component
returns the navigation component
returns the summary component
checks if the field is valid
returns the summary component for the component
returns the runnable that this painter is operating
sets the runnable that this code marshaller code will be executed
returns the default directory
sets the default directory for the job
returns the object at the specified index
refreshes the table
sets the object collection
returns the column descriptor for the given column
returns the value at the given row and column
returns true if the cell is editable
returns the name of the column at code column index code
sets the object collection
rebuild the panel
returns the dialog for the current work
returns the dialog to return
returns the number of work packages in the tree
returns the value of the code auto file click button code component
returns the number of children of this node
gets the story updated box
returns the time reporting check box
returns a map of node map
returns the time output button
sets up the map of all the nodes
returns the phone number type
sets the phone number type
sets the original object to the given object
returns the
sets the
set whether to use the button when the button is pressed
returns the object from the context
returns the selected object
adds a component to the form list
returns the navigable navigable in the list of
this method is called when the is removed
check if the given field is valid
checks if the data is valid
returns the name of the work task
is the same as the same
if true the should be used
is the property members that are being used
is the use of the packages
sets the use of the use of the use of the
sets whether the should use the same as the same
sets the object collection
set the work object collection object to be notified of the
sets whether the member is populated or not
sets the object collection
returns the navigation map
sets the cursor position
if true the attachments of the attachments are used
sets the object collection
sets whether attachments are being used
returns the original file to attach to
returns the attach file to attach
is the type of the same type
sets whether the type of the class is a
returns whether or not this model is currently existing in the model
is the use of the same community
sets whether the model should be able to update the
returns the map of menu state map
called when the view view has changed
checks if the data is valid
returns the context object for the drop down
sets the object collection
returns the selected object
returns the work task link
returns the base object
returns the date of the created date text
returns the time of the created time
returns the modified date text
returns the time the text was last modified
sets the date of the created date text
sets the created time text
setter for property modified date text
setter for property modified time text
sets the object collection
set the object for this object
returns the completion status of the completion status completion
returns the completion status of the completion status
sets the object collection
returns the check box
returns the check box
returns the all project files check box
builds the main panel
sets the child object for this application
sets the new child object for the main object
returns true if the user has selected the data
returns true if the bucket is build
returns whether the dialog is only shown
set the enablement of the drop down
returns the details component for the given view
sets the object collection
returns the style name of the selected style
returns the search map
returns the map of selected perspective
returns the list of cached objects
test the work task
test remove from the given object
changes the value of the pending pending
sets the new child object for the newly created class
sets the parent object of the launch
notify all member that the pending assign
invoked when a mouse button is pressed on a component and then
sets the original object to the given object
validate the decimal format
invoked when the mouse has been clicked on a component
sets the object collection
called when the mouse is pressed
returns the
finds the node for the given object
sets the workspace mediator
invoked when a mouse button has been released on a component
sets the original object that is used to draw the
sets the object collection
returns the tooltip message
returns true if the bucket is build
returns whether or not the dialog is only shown
returns true if the configuration is built
creates the popup menu for the current node
returns true if the given object is a object
returns true if the given object is a new object
returns the original object that is associated with the given object
updates the main box
set the renderer
sets the selected tree path
returns true if the node is selected
set the object to use for this object
this method is called after the drop down
updates the buttons
updates the buttons after the current selection
sets the main drop down count
sets the main drop down count
returns whether the node should be visualized
returns the all files check box
reset the date to the given date
resets the date to the initial values
called when the mouse has been clicked on a component
returns the email field
if the mouse is clicked on the
returns the combo box
gets the value of the property
returns the combo box
gets the value of the property
returns the state map
returns the
returns the workspace mediator
sets the drop down drop down
notifies the that the current object has been updated
called when the drop down is closed
sets the drop down
adds the navigation actions to the navigation menu
setup the initial perspective
sets the object to be used for
creates the skeleton panel
release all the resources
returns true if the given node is compatible with this node
returns the current color for the given node
returns the title of the node
returns the paint for the given color
returns the leaf node for the given
returns the index of the given peer
returns true if the green thread can be
returns true if the green is
called when the filter is changed
returns the name of the given display
returns the organizational role box
this method initializes organizational role combo box
sets the created since date
returns the created date
sets the modified date of the object
returns the modified date since the last call to
sets the stale needed to render the given
repaints the tree
rebuild the tree
rebuild the tree
updates the note body after the given
this method is called when the user selects to join the
returns true if the is
the given
the given
set the names of dependent properties to be dependent on the
merge the local names and distributes the segments
returns true if the current location is resolved
returns the object name for this object
adds a merge merge source to this target
adds a merge info to the list of registered
checks if the given object is deleted locally
retrieves the object for this object
retrieve the object
sets the owner dialog
determines whether the workspace is enabled
returns true if the current task is valid
returns true if the current context is valid
checks if the current node is valid
creates the local temporary file
this method is called when the user selects the component
wraps the current data component
this method is responsible for adding a workitem to the worklist
remove all member assignments from the given task
handles the of the
checks if the node is stale
wraps the editor
returns the enablement of the flags
returns true if the menuitem transfer should be added to the
returns true if the file has been modified
checks if the current node is selected
returns true if the file has been selected
returns the total count of the
returns the count of the components in this container
handles the tree path
returns the configurator instance
handles the tree path
returns the deepest path for a node
returns true if the current user can open the
returns a quick report of the quick report package
sets whether the filters should be used
returns the hierarchy of the hierarchy
begin a new transaction
removes the listener from the list of listeners
end the transaction
enables disables filtering of the filtering
enables disables filtering of the
commits all changes made since the cache
disables filtering of the filters
initialize the master object
disables filtering of the
removes the given from the cache
this method is called when the cache is changed
sets the callback
unregisters the listener
merges the given into the given
sets the
this method is called when the oid is added to the list
called when the data changes
returns the offset of the paragraph
clones the cache
completes the transaction
called when a transaction is complete
returns a list of attachments
sets the attachment list
adds an attachment to the attachment
adds a discussion topic to the discussion list
adds a topic to the discussion list
returns the date of the target
adds an attachment to the list
remove the given discussion from the list
returns true if the file is attached to the given file
this method is called when the user selects the topic list
returns the task plan number
remove attachment from the list
returns a list of all the members of this group
setter for property community member assignment list
adds a community member to this community
adds a community member to this community
build the map of links
removes a community member from this conference
builds a container from the current state
creates a placeholder for the current state of the
returns the task plan package
returns true if the connection is closed
returns a set of all the work packages supported by this
returns the text
returns the
sets the
changes the complete state of the given member in the community
appends a list of role to the community role list
this method is called when the user is valid
collects all references to the given community
returns the activation change
returns the activation change date
returns the activation status
returns the default attachment directory
sets the activation change
sets the activation change date
sets the relative default attachment directory
gets the value of the property
sets the conversation list
adds a conversation to the list
sets the workspace file workspace
adds a conversation to the conversation
ensures that the components are valid
this method is called after the external references has been added
find the workspace file
adds a conversation to the conversation
removes a conversation from the list
ensures that the role components are valid for this role
returns the number of green components of this conversation
returns whether the calendar view should be shown on the screen
returns whether the discussion is shown
sets the list of work task link list
add a work task to this group
checks whether the given role is a valid role
removes a work task link
remove a work task from the list
returns true if this is a
returns the child of the specified child
ensures that the member is valid
returns the value of the code entered type pay code
sets the value of the receipt type holder property
checks if a given role is a community role
returns true if this is a
returns true if the thread can darker
returns true if the current task can be used to guess the
make sure that the current object is not already in the current
returns the string representation of the current
sets the
getter for property task backlog
checks if the role is a team role
sets the body of the note
returns true if the given is already in the list
returns true if the work task has a work task
build the documentation for the given list of work package
returns true if the given can be moved
returns the last modified date of the last modified date
sets the value of task type list
returns the project for the given topic
returns true if the current thread has yellow tasks
returns true if the task can be recycled
remove all work tasks from the list
returns all the children of this node
returns the body container
find all children of the given
returns the body of the note
find all children of the given
gets the sort order
returns true if the image is currently being
remove a from the list
returns the maximum number of possible possible possible possible
ensures that the components of the components are valid
returns the minimum priority of the current
returns the number of sequences in this sequence
returns the sequence number of the sequence
this method is not supported by this class
returns true if the package references in the package
returns whether this topic is a discussion
returns true if the context object is a child context object
find all the children of this package
determine if the given view context is the same
checks if the given work task is allowed to work
returns the task type
creates an empty role object
returns the role preference
this method is called after the children of this node have a
saves the node children to the parent node
create an empty object
returns the project issue
build the path name
sets the file name to be used for the file
this method is called after the node is removed from the node
saves the to project
returns the file name of the file to be cleared
this method is used to resolve the
saves the to the xml interchange file name
returns the name of the file that is being used
returns the object of the xml element
sets the xml object
create an empty object
returns whether the given thesis is a discussion
returns the work package
called after the node is removed from the node
checks if the discussion is already marked as invalid
gets the value of the is project instance property
returns the domain instance of the task
saves the object to the persistence object
returns the text to be used for the text field
builds the path name of the file
saves the cache to the persistence cache
initialize the task domains
retrieves the as object
returns true if the package name is a unique package name
getter for property user preferences panel
sets the user preferences panel
returns the dialog
returns the main application dialog
returns the preferences preference
sets the main application dialog
returns the current center component
sets the current center component of the component
sets the desktop preference
adds the given component to the current center of the current component
the main loop
saves the desktop preference
hide the user preferences
build the preferences panel
getter for property user preferences panel
returns the file
sets the user preferences panel
saves the desktop preference settings
sets the file to be used for the file
returns the preferences dialog
returns the file preference
applies the preferences to the preferences
sets the preferences dialog
sets the file preference
notifies all registered user preference listeners that the user has
returns the current main component
retrieves the first matching file preference
sets the current main component
applies the preferences to the desktop preferences
returns the
builds the clone of this preferences object
launches the default action
sets the
launches the application with the given name
builds the and
returns the configuration file
opens the edit file file
build the auto checkout button
sets the
build the auto commit
build the auto delete
save the to the
saves the preferences to the file
sets the error label
creates a new file extension
sets the error message
runs the error dialog
handles the ok button
called when the cancel button is pressed
this method will run the file preference store
applies the preferences to the preferences
returns the email preference
creates a pattern for the given file
applies the preferences to the preferences
sets the email preference
returns whether the file preference preference should be saved
saves the current configuration to the database
saves the current email preference
this method initializes j text field
creates the gui
sets the field location field
returns the proxy preference controller
save the email preference
sets the proxy preference controller
add the panel to the panel
returns the label of the dialog
saves the preferences to the preferences
sets the dialog label
gets the display label
the package to
returns the test port connection button
sets the label
the main method of the thread
handles the click on the proxy
applies the preferences to the preferences
adds the to the list
creates the copy of the current user
build the
returns the repository preference
returns the name of the tag
sets the repository preference
check if the port is valid
returns the file
sets the file
execute the given command
returns the file preference
sets the file preference
builds the menu
saves the current preferences to the persistance layer
sets up the default open menu
builds a menu item for the given target
saves the preferences to the persistent store
saves the current preferences to the current preferences
apply the preferences to the current repository
returns the dialog controller
sets the dialog controller
adds the given component to the current center of the component
returns the preferences dialog
creates the workspace
returns true if the fields are valid
returns the field validation container
build the
creates the view
validate the dialog required data to validate the user
this method initializes center panel
sets the center panel
returns the error message field
returns the error message
builds the ok button
build the center panel
returns the collaboration preference
sets the collaboration preference
returns the local workspace preference for this
sets the preference for the local workspace
saves the preferences to the local workspace
saves the preferences to the local workspace
saves the preferences to the preferences
saves the preferences to the preferences
creates the local workspace
build the fields of the archive
build the
gets the dialog label
check if the port is valid
sets the dialog label
returns the dialog dialog
sets the dialog dialog
returns true if the dialog is a file extension
checks if the fields are required
returns the user
sets the user configuration
saves the current preferences to the preferences
saves the user to the user
saves the user entered properties to the user
returns true if the fields of the fields are valid
returns the size of the history field history
sets the size of the history field history file
applies the user preferences to the preferences
returns the workspace preference list
apply the preferences to the current set
notifies user preference change
set the workspace preference
apply the preferences to the user
returns the user controller
saves the workspace to the persistent store
creates a clone of the current object
this method is called after the user is generated this method
saves the workspace to the persistent preferences
saves the preferences to the preferences
applies the preferences to the preferences
build the
builds the clone of this preference
sets the user controller
build the file list of the navigation history
returns the proxy preference controller
builds the sort history
returns whether or not the data flavors should be accepted
sets the proxy preference controller
sets whether or not the data is accept
this method initializes instant tbl collaboration panel
sets the accept label
sets the accept message
build the phone number type
accept the accept
handles the ok button
handles the cancel button
returns the collaboration preference controller
this method initializes phone
creates and returns the collaboration
build the phone number
set the collaboration preference controller
returns the file patterns controller
checks if the fields are required
setter for property file patterns controller
returns the repository preference controller
sets the repository preference controller
returns the email preference controller
this method initializes display label
sets the email preference controller
runs the display
handles the ok button
this method initializes j text field
returns the gui preference model
sets the gui
returns the workspace preference controller
sets the workspace preference controller
saves the preferences to the preferences
gets the enable instant collaboration collaboration collaboration collaboration
returns the desktop preference controller
apply the preferences to the preferences
sets the desktop preference controller
creates the location of the object
returns the ok button
returns the cancel button
returns the apply button
build the fields of the
returns true if the user is allowed to validate the users
setup the dialog
this method handles the scrollbar events for the selected interest
expand the tree
build locations of the project
this method initializes j panel5
returns a required check box
creates the action listeners
creates the component model panel
close the dialog
handles the add location button
handles the delete location button
build the browse button
sets the workspace field
build the build directory button
checks if the fields are required
returns the browse button
returns the create directory button
sets the portfolio list
builds the connection button
sets up the dialog
removes all from the desktop
sets the list of work task list
the method code perform code
returns the apply custom button
returns true if the file is a directory
returns the extension of the file
adds a filetype dot extension to filter against
returns the description of this filter
returns the ok button
returns the check all button
returns the button that contains the button
returns the cancel button
sets the discussion topic list
the main method of the
build the browse button
checks if the data is valid
import the current state of the current
this method is called when the user selects the data
builds the ok button
returns the name of the file chooser
build the check all checkboxes
checks if the given file is a directory selection
sets the selection state of the selection
build the radio button
returns true if the user can continue the file
returns true if the user has selected the file
builds the window close window
builds the cancel button
set the to be used for the
invoked when a component loses the keyboard focus
this method is called when the user selects the ok button
checks if the dialog is valid
exits the application
paint the component
sets the list
invoked when the mouse exits a component
returns the button map
sets the list of community list
set the list of work packages to the given list of work
sets the list of task domain objects to be used
sets whether or not the panel is enabled
sets the list of task plan
sets the list of community members
sets the project issue list
returns the
returns the file preference for the given name
returns the model for the given workspaces
returns the tree model for the given workspaces
creates the panel
prepares the gui
adds a preference to the list of operating system
remove a preference from the preference list
sets the list of operating system container
adds a new to the current list of operating system
remove the specified container from the list of operating system
returns the file preference for the specified name
compares its two arguments for order
returns the entry revision
opens the edit preference file
this method is called when the node is changed
creates a new file preference
returns the edit controller for this edit
returns the user preferences panel
invoke the code node inserted code s to the node
returns the file extension list controller
set the file extension list controller
returns the parent jdialog for this dialog
returns the move up controller
returns the move down controller
returns the suggest order controller
returns the new controller
remove node from the parent
returns the edit file extension controller
this method is used to set the of the
getter for property delete controller
sets the current file preference
returns the modify controller
returns true if the file name is already stored in the preference
sets the modify controller
deletes the file preference selected
this method is called when the system is
move up the selected file
down the move file
the user preferences
called when the user moves the view
moves the view down to the next complete view
this method is called when the order complete
called when the user changes the view
returns the column at the given position
returns the value at the given row and column
forces the refresh of the edit to the
sets the value at the given position
returns true if the cell is editable
deletes the complete view
returns the name of the column at code column index code
cancels the view
creates a new file preference
returns true if the user has cancelled
validate the file
validates the file
validates the file
checks if the file extension is a file extension
build the preferences panel
returns the preferences controller
this method is called when the user selects the button
handles the ok button
builds the file filter
this method is called when the user selects the
build the delete dialog
called when the remove element is removed
create a new dialog
handles the ok button
this method is called when the user selects the
get the object
handles the apply button
returns true if the file extension is editable
returns the edit dialog
sets the edit dialog to edit
returns the original file preference
sets the original file preference
returns the current file preference
sets the current file preference
sets up the preference page
sets the edit dialog
handles the ok button
returns true if saving to the button
handles the cancel button
opens the preference for editing
returns the file extension for the current file extension
handles the cancel button
sets the file extension that is used to render the
returns the preferences dialog
returns the file extension panel builder
get the object
returns the persistence pattern
get the file extension for the table
sets the current file preference
sets the dirty flag
returns true if the editor is dirty
set the file extension for the table
returns the file extension mediator
handles the save as in the form
save the file extension to a file
this method initializes j text field
sets the new action field
returns the file extension panel
remove the file extension
sets the file extension panel builder
returns the list of file extensions
returns the display label
runs the action
handles the ok button
this method initializes center panel
runs the
builds the ok button
handles the click on the button
returns the action controller
sets the action controller
sets the action name
this method initializes j text field
sets the field ext
getter for property delete action button
this method initializes add action button
sets the action label
the action to perform when the action is pressed
returns the center panel
this method initializes delete button
handles the ok button
sets the center panel
returns the apply button
called when the user cancels the cancel button
sets the button state
returns the action controller
sets the action controller
returns the edit button
handles the ok button
handles the cancel button
handles the click on the
handles the apply button
handles the ok button
called when the user clicks the button
builds the buttons
sets the edit button
handles rename action button
handles the delete action button
build the buttons
sets the new button
builds the panel for the north panel
saves the current file to the save
builds the south panel
create a new file extension table
build the label for the given list of files
checks if the model is valid
build the list of buttons
returns the file extension field
set the field extension field
sort the file extensions
creates a new file preference
returns the description field
sets the description field
returns the default file action box
sets the default file action box
returns the file type box
sets the file type box
returns the selected file preference
sets the state of the button
returns the dirty flag listener
sets the dirty flag
sets the current file preference successful
returns the popup menu for the current
called when the user selects the file
returns the action tab
called when the user selects the file button
sets the action tab pane
the action listener to the action
called when the user selects the file button
called when the user selects the file button
the action listener for the file
the mouse has been clicked
build the description file extension for the given file
build the description file extension for the given
adds a new tab to the tabbed pane
description of the method
build the default file action
initializes the default box
initializes the file type box
build the fields of the given object
build the fields of the given object
returns the panel that contains the south of the
returns the cancel button
build the browse button
returns true if the action can be removed
builds the panel
creates a new dummy action
removes the dummy action
rename the action
build the rename button
action for the handle new action
rename the action with the given name
builds the workspace for the workspace
called when the action is called
action listener for the action
set the dirty state of this object
implementation of the document listener interface
returns the initial parameter set
description of the method
initialize the panel
called when an action occurs
returns the local path display field
add action to the dialog
handles rename action when the action button is pressed
returns the selected workspace
gets the organization dao dao
handles the delete action button
populate organization box
this method is called when the user selects the user with the
checks if the data is valid
removes the task
this method is called when the user selects the data
checks if the dialog is valid
check if the given field is valid
returns true if vertical stretch is allowed
initializes the repository
sets the default repository
handles the changes of the field
returns true if the given file is the root directory
sets whether to use to root
returns the title of the default title
runs the
returns the default title for the default locale
runs the file
returns the file to copy from the file
called when the user changes the current state of the application
builds the code apply button code
returns the file chooser for the file chooser
this method initializes repository box
this method initializes name box
sets the repository to the current value
builds the name combo box
returns whether the action should be replaced by the
returns the default title for the default locale
this method initializes north panel
returns true if the current node is not already closed
returns the title of the default title
returns whether or not the include root should be included
returns true if vertical vertical vertical alignment is allowed
adds the given code code code code code code code
called when the user changes the current state of the application
returns the selected directory
returns the file to add to the selected file
sets the column names
sets the value at the specified location
closes the window
returns the cancel button
sets the new state to the new state
this method is called when the user is being edited
updates all the selected files in the list
this method is called when the user selects the data in the
deselects all the selected items
select all the
selects the for the given workspace
selects the for the given organization
sets the state of the check box
builds the panel with the panel
returns the file chooser for the file chooser
moves the cursor to the given code code
set the initial state of the repository
builds the code apply button code
build the label for the given list of files
returns the title of the default title
called when the action is called
the action listener implementation for the browse button
the action listener interface
the action listener to the action
returns the file name of the file
builds the path name
save the build object to the given object
returns the and unloading the
sets up the dialog
check if the database is the first audit check
sets the flag that determines whether the first audit is enabled
moves the cursor to the given code code
returns the value of the is first audit check property
sets the flag that determines whether the first audit check is
sets the task domain list
sets the object to be edited
returns the text of the editor
selects all the editors
adds an code action listener code to the editor
removes the specified listener
navigates to the page
returns the workspace
returns the color map
initializes the project
returns the field validation container
gets the value of the item target property
returns the rule target
returns the overview of the overview pages
returns the target paragraph list
returns the list of usage paragraphs
returns the xml string representation of the given
write the xml document to the given xml document
returns the new instance of the
returns the title of the default title
returns the title of the default title
this method is called when the user cancels the data
checks if the data is valid
check if the field is valid
checks if the checkbox is valid
check if the given field is valid
returns true if the is loaded
creates an empty object
returns the collaboration server dao
returns whether the field should be shown in the
get the xml string representation of the given xml
gets the value of the property
builds the printer panel
returns the
this method is used to populate the list of fields
sets the
returns the config file config
sets the xml element
builds the file panel
creates the file
checks if the file exists
retrieves the object based on the given oid
returns whether the file can be renamed
returns the name of the file extension
returns the open source container
builds the path name for the current file
setup the
builds the file panel
sets the object to be edited
creates an empty object
returns the synchronization file
returns the file chooser for the start of the file
returns the
this method is called when the xml object is created
sets whether the file file can be renamed
sets the display name
sets the path to the file
sets whether the file should be by the
setup the code code
returns the file chooser for the file chooser
creates an empty object
returns the open source container container
this method is called after the node has been removed from the
this method is called after the node is created
returns true if the file should be
returns the user configuration
set the attributes of the
returns the new instance of the node
build the path name
create an empty object
returns the string representation of the current instance
create an empty object
returns the open source category
this method is called after the node has been removed from the
this method is called after the node is updated
returns true if the given property is an process attribute
runs the
sets the xml object
returns the export preference
sets the export preference
returns true if the property is set to be
returns the name of the file that is being exported
remove an object from the cache
puts a new object into the database
get the object by its id
runs the
returns the value of the given field
returns the string representation of the given value
returns the file type container
set the file type container
sets the list of file names
returns the file extension of the given file name
returns the file type values
handles the ok button
returns true if saving to the button
this method initializes j button
returns whether this node is not paused
sets whether to continue or not
sets the cancelled
build the list of buttons
returns the file type dialog
sets the selected state to reflect the selected row
sets the state of the file
the action listener implementation for the browse button
the action listener implementation for the browse button
closes the window
sets the dirty flag dirty flag
returns true if the refactoring should be build
called when the user changes the state of the
apply the preferences to the preferences
returns the edit file type controller
edits the selected preference for editing
get the file extension list controller
show the file type list
checks whether a file extension is present in the list
called when the user clicks the file
returns the working user working state
gets the local user flag
sets the local user
returns the start state
sets the start flag
returns the list of data objects
sets the data list
returns the sticky options
returns the data for the given position
description of the method
reads a line from the socket
reads a signed byte from the input stream
set the right list to the persistence
sets the persistence of the receiver to the persistence
sets the left list from the persistence
override to override this method to provide custom banner
sets the left attribute of the persistence object
sets the background color of the button
returns the button that is used to draw the gc
sets the gc
sets the text pane
removes the specified component from the list
returns the preferred size of this code container code
returns the minimum dimensions needed to layout the components
returns the value at the specified column and the given node
fires the table data changed event to the model
lays out the container
brings the first child to the specified container
flips to the next card
flips to the previous card
flips to the last code container code of the code parent code
resets the selection model to the current selection
returns true if the user can edit the content
flips to the container
returns the cvs widget
checks if the data file exists
returns true if the given file is a file
checks if the given file is a directory
returns true if the system properties are
returns the tooltip message
returns true if the user has valid data
returns the tooltip message
sets the value of the boolean property
returns a string representation of this object
sets up the
returns the cvs widget
sets the widget
returns true if this edit is allowed
sets the value of the field
returns the validation component
updates the font of the font
notifies the component that the data has been notified
notify the component that it has been received
sets the background color of this cell
sets the value of the field
returns the tooltip message for this tool
sets whether or not this edit is allowed to edit the
set up the focus listener for the key
returns the validation map
adds a component to the form widget list
returns the domain object
sets the domain object
returns the write method
sets the write method
getter for property read method
sets the status of the data widget to be used for drawing
paints the border with the specified component
sets the read method
returns the write method object for the given class
sets the state of the widget state
this method reads a method object from the
sets the state of the data widget
write a method to the output
reads the method object
returns the object as a string
initialize the setup
sets the value of the property
validates the form without locking the
sets up the listeners for the focus
validates the form
returns the tooltip message for this tool
returns true if the data has a valid data
setup the
sets the value of the field
checks if the file is valid
returns true if the node is a child of this node
returns the path method object
invoke the method on the target object
sets whether the edit can be edited
returns the tooltip message
sets the background color of this cell
sets the selected color
p sets the color of the ground checkbox
returns true if the data has a valid data
initializes the code code
sets the validation component
returns the tooltip message
returns the text field as integer
sets the initial value for the field
setup the listeners
setup the
sets the value of the field
sets the field view
sets the value of the field
removes the leading and trailing leading and trailing whitespace
sets up the listeners for the focus
returns the text in the text area
sets the value of the date field
sets the value of the field
checks if the data provider is valid
returns the tooltip message
returns the tooltip message
returns the tooltip message
returns the minimum value
sets the minimum value of the field
returns the maximum value
returns the tooltip message for this tool
returns true if the data has valid data
checks if the data has entered the data
returns the minimum value
sets the minimum value for the thermometer
setup the code document code
returns the maximum value
returns the tooltip message
returns the text field as a double
checks if the data has a valid data value
sets the initial value for the field
setup the listeners
sets the field view
sets the value of the field
removes the leading and trailing leading and trailing zeros
checks if the text contains the
sets the number of rows in the table
sets the font for this component
centers the window on the screen
returns whether vertical vertical stretch
returns the tooltip text for the specified column
returns the collator
returns the value of the null property
sorts the data in the table
sets whether null is or not
this method is called when the user selects the user with the
check if the user is allowed to send the data to the
creates a new
handles the cancel button
gets the message
gets the topic
gets the private chat attribute of the object
returns the selected users
sets the message
sets the topic
sets the private chat
returns the from
sets the from
returns the message
sets the message
gets the chat room
returns the list of
returns whether this is a public private key
returns the topic
returns the time request
sets the chat room
sets the
check if the input field is valid
sets the time request
connect to the given model
disconnects the connection from the server
connect to the specified connection model
connect to the server
sets the connection model to the given connection model
sends a message to the server
handle the connection event
connect to the server
disconnects the connection from the server
sends a message to the server
returns the identity panel
adds a listener to the list of listeners
removes a listener from the list of chats
returns the panel that contains the panel
sends a message to the jabber server
returns the panel of the server
returns the tabbed pane
returns the path of the path
sets up the test
tears down the fixture for example close a network node
set up the test case
tears down the fixture for example close a network connection
build the description of the bean
returns the date of the test
sets up the test fixture
sets up the fixture for example open a network connection
set up the test
sets up the fixture for example open a network connection
tears down the fixture for example close a network connection
sets up the fixture for example open a network connection
tears down the test
tear down the test
tear down instance variables
tear down instance variables
tears down the fixture for example close a network connection
returns the output stream to be used for writing
verifies that the current connection is valid
opens the connection to the database
returns true if the request is an http servlet stream request
sets the url
creates the builder for this command
close the connection
returns the temporary file to be used for the temporary file
sets the checkout to directory
gets the checkout to directory
returns the string representation of the current module
returns the string representation of the current value
sets the state of the
returns the continuation list
returns the continuation list
returns the previous move
goes to the end of the current state
go forward to the next node
goes back to the previous one
returns the refer refer refer file
sets the refer refer refer
checks if a table exists in the database
insert an entity into the database
delete an entity
returns the next value in the table
update entity
returns the maximum column value for the column
returns the next value in the sequence
execute the given sql statement
checks if the table exists in the database
execute the sql query
wraps the given sql string into the delegee prepared
get the specified sql statement
select a string from the list of arguments
select a date
casts the value to an integer
casts the value to a long
casts the passed object to a string
casts the passed object to a java
copies the value of the current value to the current pv
calculate the
sets the piece to be used for the given piece
adds a round to the room
mark the given distance from the board
sets the tip
sets the code position code to the given position
adds a new round to the list
returns the next player
returns the status of this board
sorts the current
sets the status of the player
stops the server
this method returns the string representation of the given array of values
returns the suggestion
sets the index of the ith position in the array
returns the best of the current position in the array
returns the minimum of the next player in the list
calculates the board value of the board
returns the maximum index of the next element
returns the minimum index of the smallest value
returns the value of the given position
returns the of the
returns the value of the specified line as a sub line
returns the value of the given position
sets the x y coordinate
returns the value of the x coordinate
compute the l2 norm of the given
compares two positions
move the position to the next position
returns the
sets the to the given board
resets the board to their initial values
returns the piece at the given position
returns the of the pairing pattern
returns the depth of the board
returns the of the pairing pattern
returns the number of places
returns the number of columns in the given position
switch to pause the pause button
returns the row number of the given position
returns the number of in the given position
starts a new game
returns the number of in the given position
starts the game
sets the size of the
the
sets the suggestion to the current position
sets the suggestion to the given string array
stop the server
this method is used to create the server
starts the server
builds the panel with the given display
displays the ok button
helper method to create a panel with the given button
converts a given message to a integer
displays the given message to the user
checks if the player is a
checks if the given port is a host port
checks if the player is a
displays the game over the given screen
called when the mouse is clicked
starts the game
changes the current player
refresh the board
set the suggestion to the current one
resets the suggestion to null
reset the board
returns the status of the board
removes the locked objects from the given object
returns the etag associated with the given
returns the etag associated with the given
returns the etag associated with the given
return a form from a relational form
construct a jsonobject from the json object
creates a new query connection
creates a new statement
returns the connection
construct a jsonobject from the json object
runs the
this method initializes this
this method initializes txf tipo
this method initializes txf fecha
this method initializes this
this method initializes tabbed tabbed pane
this method initializes aceptar
this method initializes combo
this method initializes this
this method initializes this
this method initializes scroll
this method initializes scroll
this method initializes tabla
this method initializes tabla
this method initializes bt sem anterior
this method initializes nuevo
this method initializes ver
this method initializes bt sem
this method initializes
this method initializes this
this method initializes tabla
this method initializes panel principal
this method initializes tabla
this method initializes txf nombre
this method initializes jtf nombre
this method initializes scroll
this method initializes guardar
this method initializes cancelar
this method initializes tabla
this method initializes bt guardar
this method initializes this
this method initializes tabla
this method initializes panel
this method initializes tabla
this method initializes lista
this method initializes txf codigo
this method initializes cancelar
this method initializes cancelar
this method initializes bt
this method initializes bt
this method initializes txf de compra
this method initializes txf desde
this method initializes txf de
this method initializes bt
this method initializes bt
this method initializes txf
this method initializes txf numero
this method initializes rb hora
this method initializes bt excel
this method initializes txf inicial
this method initializes rb media hora
this method initializes txf nombre
this method initializes txf hora inicial
this method initializes txf
this method initializes txf numero
this method initializes txf nombre
this method initializes txf
this method initializes rb todos
this method initializes combo
this method initializes txf
this method initializes combo
this method initializes txf registro
this method initializes bt
this method initializes txf telefono
this method initializes rb
this method initializes ch par
this method initializes guardar
this method initializes txf fecha
this method initializes txf hora inicio
this method initializes cancelar
this method initializes txf hora fin
this method initializes tabla
this method initializes si
this method initializes scroll
this method initializes guardar
this method initializes cancelar
this method initializes no
this method initializes nuevo
this method initializes this
this method initializes ver
this method initializes txf codigo
this method initializes tabla
this method initializes bt
this method initializes jtf nombre
this method initializes combo
this method initializes scroll
this method initializes txf
this method initializes tabla
this method initializes tabla
this method initializes jtf
this method initializes jtf fin
this method initializes fecha inicio
this method initializes txf
this method initializes fecha fin
this method initializes
this method initializes txf descripcion
this method initializes txf
this method initializes cancelar
this method initializes detalle
this method initializes tabla detalle
this method initializes txf stock
this method initializes bt
this method initializes
this method initializes txf nombre cliente
this method initializes txf total
this method initializes txf saldo inicial
this method initializes bt
this method initializes txf inicial
this method initializes txf total
this method initializes
this method initializes guardar
this method initializes bt lista
this method initializes rb hora
this method initializes
this method initializes total
this method initializes tabla total
this method initializes txf nombre cliente
this method initializes cancelar
this method initializes mes
this method initializes tabla mes
this method initializes rb media hora
this method initializes combo
this method initializes
this method initializes
this method initializes txf fax
this method initializes txf total mes
this method initializes txf nombre
this method initializes combo
this method initializes txf email
this method initializes this
this method initializes scroll
this method initializes txf
this method initializes j lista
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes txf nombre
this method initializes password
this method initializes
this method initializes this
this method initializes panel monitor
this method initializes bt
this method initializes tbl
this method initializes txf entrada
this method initializes this
this method initializes txf estado
this method initializes this
this method initializes txf
this method initializes tabbed pane
this method initializes this
this method initializes txf monto
this method initializes txf nombre
this method initializes panel digital
this method initializes combo tipo
this method initializes txf
this method initializes detalle
this method initializes txf desde
this method initializes scroll
this method initializes txf
this method initializes bt aceptar
this method initializes combo
this method initializes bt cancelar
this method initializes bt
this method initializes txf fecha
this method initializes bt
this method initializes this
this method initializes this
this method initializes panel monitor
this method initializes this
this method initializes j content pane
this method initializes bt nuevo
this method initializes scroll
this method initializes lista
this method initializes scroll
this method initializes bt
this method initializes bt aceptar
this method initializes this
this method initializes bt
this method initializes lista
this method initializes txf desde
this method initializes txf fecha
this method initializes txf
this method initializes this
this method initializes bt
this method initializes combo
this method initializes this
this method initializes
this method initializes this
this method initializes combo
this method initializes combo
this method initializes txf
this method initializes bt
this method initializes this
this method initializes this
this method initializes bt
this method initializes j panel
this method initializes modificar
this method initializes txf detalle
this method initializes this
this method initializes txf cantidad
this method initializes eliminar
this method initializes scroll pane
this method initializes fecha
this method initializes txf total
this method initializes tabla
this method initializes combo clientes
this method initializes txf total monto
this method initializes txf total
this method initializes txf detalle
this method initializes combo tipos
this method initializes txf total
this method initializes txf num
this method initializes
this method initializes txf inicial
this method initializes txf
this method initializes txf final
this method initializes modificar
this method initializes eliminar
this method initializes txf
this method initializes tabla
this method initializes txf total cantidad
this method initializes txf total monto
this method initializes txf fecha
this method initializes txf cantidad
this method initializes txf total
this method initializes txf total
this method initializes txf detalle
this method initializes
this method initializes
this method initializes
this method initializes modificar
this method initializes txf tipo c
this method initializes eliminar
this method initializes eliminar
this method initializes scroll pane
this method initializes
this method initializes tabla
this method initializes txf total cantidad
this method initializes tabla
this method initializes txf total monto
this method initializes txf total
this method initializes combo
this method initializes txf
this method initializes txf
this method initializes txf
this method initializes txf
this method initializes txf
this method initializes txf
this method initializes txf estado
this method initializes guardar
this method initializes txf fecha
this method initializes
this method initializes txf
this method initializes txf total
this method initializes combo tipo
this method initializes aceptar
this method initializes cancelar
this method initializes panel
this method initializes txf codigo
this method initializes panel
this method initializes panel
this method initializes guardar
creates the dialog and sets the current state to the next available
adds a new question to the list of available question
removes the last choice from the list
adds a new option to the list
removes the last choice from the list
edits the current question
called when a question has been created
called when a question has been removed
returns the number of questions in the current question
returns the number of questions in this question
returns the number of questions in this question
counts the number of objects in the given class
creates a new empty option
adds an option to the list
returns the number of questions in this rated
sets the min number chosen option
returns the min number chosen by the user
removes the last option
returns the number of questions in this group
sets the list of options
sets the nullable answer
returns whether the is nullable
sends a data to the server
connect to the server
get the out of the
returns the in the radio group
adds a listener to the socket
removes a listener from the socket
adds a listener to the socket
removes a listener from the socket
adds a listener to the server socket
removes all the outgoing connections from the server
adds a listener to the socket
removes a listener from the socket
polls the current connection
this method is called when the data is about to be used
returns true if the connection is connected
connect to the server
disconnects from the server
connect to the server
returns whether or not this connection is connected to the
disconnect from the server
returns the base station with the given id
handles the event that the socket is being sent to the server
get a host by its id
polls the head of the queue and updates the
get a host with the given address
prints the status of the current
notify all the listeners that a new list of objects are
listen to incoming connections
adds a listener to the list of listeners
removes a listener from the list of listeners
returns true if the current time is up
returns the prototype of this component
returns the address of the server
resets the to the initial state
returns the address of the address
returns the prototype of the
get the best available base type for the
returns the best available available type for the
set the
send a broadcast to the server
returns the sensor
this method pauses the timer
this method is called when the is about to be
stop the controller
this method is called when the controller is
sets the state
adds a macro to the list
returns the macro for the macros
returns true if the state of the given state is valid
this method runs the experiment
frees the resources
adds a new listener to the remote machine
adds a new to the list of remote listeners
colours the blink color
clip the to the black white
this method sets the red green
this method is called when the is set
fades the clip
sets the
sets the high flag
starts the client
the method code run code
adds a displayable to the list
send a message to the server
sets the poll time
starts the robot
returns the source
returns the source
returns the source
returns the source
changes the control mode of the control mode
sets the value of the code position sensor code property
sets the speed sensor
set the to a double value
set the p value of the
set the ith
set the d
get the value of the
returns the value of the
returns the of the
enables the closed loop loop
enables the closed loop loop
disable the loop loop
returns the voltage of the current
returns the voltage output percentage
returns the output value of the current output
returns the temperature in degrees
returns the position of the
returns the speed of the
returns the left status of the
returns the status of the right or
returns the faults
set voltage to the maximum voltage value
set the encoder resolution for the
set the limits of the soft limits
sets the number of turns to the given turns
returns the last command
executes the given command
halts the program
returns the encoder object
returns the
returns the power sensor
executes the specified command
halts the program
returns the
toggle the state of the current state
executes the given command
returns a short description of this action
halts the animation
this method is called when the user presses the
halts the thread
returns a short description of this action
this method is invoked when the command is executed
stop the valve
this method is called when the value of the is set
get the sensor
halts the timer
executes the specified command
stops the servo
this method is called when the server wants to send a command
this method stops the
adds a listener to the list of listeners
description of the method
this method is called when the controller is finished
removes a listener from the list of listeners
description of the method
returns the acceleration
returns the angle of the sensor
add a switch listener to the switch
remove a listener for switch events
notifies the listeners that the left button is left left
notifies the listeners that the right click button has been pressed
set the resolution of the
adds a listener to the encoder
removes a listener for events from this encoder
notify all listeners that the encoder has changed
get the value of the code switch code property
notifies the listener that the current state of the
return true if the current fault is a valid fault
notifies listeners that the encoder has stopped
return true if the cca server is a gate connection
notify the listener that the signal has been changed
get the value of the code temperature fault code property
returns the speed of the given road
adds a listener to the list of listeners
removes a listener from the list of listeners
sets the resolution of the
add a listener to the
notify all listeners that the faults were received
removes a listener for events
notify the listeners that this message has been changed
notify all listeners that have a sensor change
send a acknowledge to the wiimote
notifies the listeners that the has been started
notify the listeners about the fault
notify all listeners that the has been stopped
this method is called when the connection pool is set
notify all listeners that have registered interest for
notify all listeners that the current state of the
notifies the listeners that the temperature is in the
add a listener to this
notifies all listeners that a new value is about to be
removes a listener for power loss function
notify listeners that the change of the current thread has changed
notify all registered listeners that the current state
notify the listeners that the driver station uses
returns the priority of the current state
adds a word to the bloom filter
removes the given position from this list
returns the number of words in the list
returns the index word at the given position
returns the collection of words in the dictionary
returns the number of in the sense
returns true if the specified object equals this word set
returns the sense at the given index
returns the node list
returns the source pointer target
returns the target pointer to the target node
returns the exception
returns the source synset
find the first relationship between two nodes
returns the target synset
returns the depth of the tree
builds the relationship between the given target node and the
returns the direct node list
returns the label of this label
returns the tree node that contains the given synset
returns true if the given position is in this sequence
returns true if the given type is symmetric
returns the symmetric type of this element
returns the direct node list
returns the tree node that contains the given synset
returns all matches of the given operation
returns true if the current word is a word
returns the current synset
returns all the tuples in this tree
returns the word at the end of the current block
returns a list of the coordinate terms of the given synset
find the node that can be used to find the nodes
returns the node list with the given
compares two tree nodes
returns the first match of the node
returns a pointer to the pointer tree node list
returns all matches of a given target
returns a copy of this list reverse target node list
find the first node in the tree
finds the first target node that matches the given target
print the list of lvalue
prints the list of lvalue to the stream
prints the given type to the console
prints the list of expressions in the specified type
moves the current position to the first one
moves the last value to the last value
returns the node that contains the given synset
returns true if the given object equals this one
returns the for the given synset
returns the tree node that represents a
returns the deepest for the given synset
returns true if this word is a lexical token
returns the source target
returns the target of the current target
returns the offset of the target
returns the list of the member for the given synset
installs the
returns the substance list for a given synset
returns the for the given synset
returns the next token
returns the next token in the sequence
returns the next token
returns the next token in the input as a tt int tt
returns the next pseudorandom uniformly distributed int value
returns the next long value
returns the inherited part of the given synset
opens the input stream and opens the open stream
returns the inherited member for the given
opens the specified file
returns the inherited property
returns the deepest for the given synset
returns the list of the member for the given synset
returns the substance list for a given synset
returns the inherited structured
returns the file type
open the file
returns the inherited part of the given synset
returns the file manager
returns the inherited member for the given
returns the inherited property
returns the target tree for the given node and the
returns the of the given synset
get the tree node corresponding to the given synset
returns the target tree for the given synset
lookup the base form form the current one
returns the node that matches the given
lookup index word
returns the current tree node that corresponds to the given
this method is called by the framework after
returns the target tree for the given synset
returns true if the given test matches the test case
returns the of the given synset
returns the color provider for the color provider
returns the singleton scanner for the current
returns the singleton rules scanner
returns the
returns the synonyms of the given synset
returns the synonym tree node for the given synset
disposes the outline of the inspector
saves the multi page editors document
saves the current settings as a file
returns the parent of the given element
returns true if the tree element has children
adds a node to the list
clears the tree
updates the outline view
creates the pages of the multi page editor
saves the multi page editors document
returns the primary representation of this
sets the primary representation of this property
returns the starting character position of the first character of the
sets the starting position of the starting character position
returns the
sets the value of the primary boolean property
returns the name of the object
sets the name of the
gets the value of the property
sets the
returns the font style
sets the font style
returns the speech community
sets the speech community
returns the value of included vocabulary
set the value of included vocabulary
copy the content of the buffer to the buffer
returns the
sets the
adding the page to the wizard
returns the entries
sets the entries
creates the actions
creates the pages of the multi page editor
saves the multi page editors document
this method is called when the page is changed
creates the button bar
returns the initial size of the window
compares this candidate to another object
if the first matches the pattern is mapped to the first one
writes the headers to the sequence
compare two candidate objects for equality
returns the connector manager
returns the hash code for this object
get the value of the given key
returns true if the type is a class type
connect to a server
returns true if the given event is a class type
compares this candidate to another object
returns the hash code for this instance
checks if the given type is a class type
writes the given string to the output stream
write the given code
checks if the method is a class type
compares this object with the specified object for order
write the message to the output
returns the column name
returns a hash code for this object
returns the first element in this list
write the given string to the output
checks if the method is a class type
returns the last element in this list
returns the last used column
clears the log
sets the last used column
sets the last used column
returns true if the event type is a class type
the nulls
returns the index of the specified column in this
returns the at the specified index
the results of the
add a new value to the
returns whether the given cpe is a cpe type
returns the value of the given
performs the evolution of the results
the results of the
performs the
the results of the
closes the results
adds a new exception to the list
add a new reference to the given field
returns the package no wild wildcard wildcard wildcard
writes the arguments to the specified map
adds all watch to the current request
set the value of the output variable
check if the method is already set
returns the string representation of the
returns the string representation of the
returns the watch of the watch
adds a new event to the watch
returns the number of tokens in the capture
returns the number of characters in the list
deletes all the modification
returns a dom document of the
initializes the applet
returns the y axis label
this method generates a string containing the
execute the first call
returns the properties list of the given sensor data
eine
returns the client
returns the application session
returns the stop light info
sets the chart type
sets the date of the
sets the end date
sets the source string
returns the date of the
returns the end date of the time
returns the map key for the given value
this method is called when the is about to be processed
called when the access to the access to the
method stub to allow to be overridden by the super
notifies all listeners that a row has been changed
notifies all rows that the last row of the table has been
this method is called when the edit is made
notifies all listeners that rows in the range
returns the hash code for this object
sets the window size
sets the watch info
gets the watch info
sets the user info to the user
shows the message
get the user info object for the specified user
send the watch info to the server
show the message dialog
paint the component
set time out and path
returns the time from the sample
sends the info to the arrival of the user
this method builds the loan standings and sends it to the server
returns the time string in seconds
this method is called when the choice is selected
show the message dialog
generate the
sets the reminder data to the reminder
lease reminder list
sets the time mode
the info
initialize the
initialize the limits of the
initialize the limits
set the exercise
sets the window attributes
initializes the hour and the spinner
sets the window size
get the exercise
checks if the item is set
sets the limits and repaints the label
sets the check boxes to read the given user info
returns a string representation of this object
get the info
show the downloaded
handles the event handler
show the message
initializes the buttons
show the at the bottom of the console
returns a string representation of this object
sends the specified event to the server
sends a user info to the server
convert a unsigned 32 bit unsigned integer to a little endian integer
returns the checked integer value
sends a watch info to the server
converts the given byte array to a string
parses the input text and sets the input text to the input
encode a byte to the byte array
a download
returns a string representation of this object
check if the input field is valid
sets the of the packet
send to the server
check the date and time in the input field
sets the wheel size
set the labels
select a given technology
returns the y coordinate of the start point of the point
decodes the
set the exercise to a given value
adds reminder to the list of reminders to vector
returns the x coordinate of the point x coordinate
initializes the in use by the
returns the packet received from the packet
adds a new exercise to the exercise
generates a reminder object for the given code
draw a diagram
close the serial port
returns the number of bytes read from the socket
returns the y coordinate of the current zoom point
parse the
parses the response packet
returns the number of bytes that have been read
initializes the button with the default values
parse a
returns the console output
sets the date
called from the mediator
parses a from the given array of bytes
creates the
returns the first of the given date
starts the recovery time
set the length of the packet
parses the response packet
calculates the distance from the given distance to the
set the virtual virtual virtual virtual virtual virtual region
parses the given file
initializes the exercise
runs the uc
parse the
builds a code exercise code
returns a string representation of this object
returns true if the screen scroll is scrollable
initializes the exercise
returns the reminder at the specified index
initializes the exercise
calculate the length of the sample
returns the offset of the sample
the
returns the lap temperature of the specified
set the lap to the lap for a
calculate the time for the lap
calculates the amount of the lap for the
this method returns the temperature
get the recording mode for the recording
convert a value to a unsigned integer
decodes the altitude and altitude of the given coordinate
converts a temperature from the temperature
commits the transaction
returns the name of the forum group
gets the value of the property
gets the value of the property
returns the name of the category
loads the properties from the properties file
returns the number of in the database
returns true if there is more elements
returns the next element in the iteration
updates the modified date of the object
returns the watch manager
loads the last post from the database
inserts a new transaction into the database
updates the modified date of the given date object
returns the next element in the iteration
returns the previous element in the list
inserts a new database into the database
clones a new filter that will have a clone of this message
returns the name of the component
returns the description of the filter
returns the author of this item
returns the subject of the message
returns the body of the message
escape the given string to the given string
clones a new filter that will have a deep clone of the
returns the name of the component
returns the description of the filter
returns an enumeration of all the properties in the properties
returns the subject of the message
returns the body of the message
initializes the database
initializes the data store
sets the
checks if this action is a valid action
executes the action
initializes the data
checks the parameters to be executed
checks if the database is allowed to be executed
initializes the data
executes the action
initializes the database
sets the target data store
sets the connection
returns the result set
closes the connection
execute the command
initialize the pool
quote a string in a string
initializes the data store
check the action
executes the action
initializes the data
executes the action
initializes the data
initialize the properties
check the action
sets the cache
check if the action is allowed to be executed
check the action
returns the last error message
sets the key values
returns the key values
sets the xml file name
returns the string value of the field
clears the cache
empties the list
puts a string into the field
refresh the list of objects
sets the value of the field
prints out the list of glossary
print the given string
returns the number of keys in this map
returns the value of the named field as a string
initialize the component
get redirection
returns the value of the specified cache key
initializes the pool
connect to the server
this method is used to connect to the server
returns a short description of the servlet
destroy the pool
returns a short description of the servlet
returns the template mode
sets the template mode
returns the template search limit
sets the template search limit value for this search result
returns the last modified time of the request
returns the template root
sets the template root
returns the default index
sets the default index
returns the name of the
returns the default object
sets the default object
returns the template search
sets the search
sends a http request to the given code page code
returns the statistics pool connection pool
description of the method
initialize the
sets the url
destroy the service
sets the user name to the given value
sets the password
returns the value of the specified cache key
sets the maximum number of connections to allocate
initializes the pool
sets the number of connections to be reused
sets the time out of the pool
returns the url to the pool
sets the number of the connection usage
sets the last time used to compute the last time used
returns the user name
sets the activity attribute of the object
sets the holdability of this code result set impl impl code object
set the kill time
retrieves the number of records in this result set object
returns the password
creates a savepoint with the current savepoint
sets the savepoint
rolls back the given savepoint
returns the maximum number of connections to maintain
creates a new prepared statement
returns the number of rows that will be used to close the
creates a prepared statement
creates a prepared statement
returns the time out of the pool
releases the current savepoint
sets the type map
gets the number of usage
sets the auto commit attribute of the simple pooled connection object
sets the catalog
returns the time in milliseconds
set read only
sets the transaction isolation level
returns the number of times that this node was used
returns the time created in the database
returns the last time used in the last time the was
returns the connection id
returns the current activity
retrieves whether this code connection code object is closed
retrieves the current auto commit setting
retrieves the current catalog
returns the database meta data for this database connection
returns the type map of the underlying database
retrieves the current transaction isolation level
retrieves the first warning reported by calls on this connection
is the connection read only
increment the number of times the
close the pool
clears all warnings reported for this connection
commit the current transaction
creates a statement object that will be used to create the
this method is not supported
creates a code callable statement code object for the
creates a new prepared statement
start the tag
this method is invoked when the body is pressed
p this method is called when the jsp engine is finished
sets the file attribute of the object
p this method is called when the jsp engine encounters the start
returns the resource name of the application
sets the name of the
set the value of id
returns whether or not the data has been set
rolls back the transaction
sets the value of the field
process the end of the package tag
this method is called when the jsp engine encounters the start tag
set the value of show package tag
prints the message to the console
set the value of name
this method is invoked when the body is pressed
process the end of the tag
returns the package tag
this method is called after the jsp engine is executed
set the value of add to ls
sets the error flag
sets the namespace for the namespace
returns the data store name
set the name of the data store
sets the action
returns a string representation of this object
initialize the configuration
initialize the properties
sets the data store
sets the cache
returns a string representation of this object
sets the start row
destroy the component
sets the number of rows in the table
disconnect from the database
returns the number of rows in the table
sets the template loader used to load the template loader
set the value of the glossary
set the page to be tracked
returns the template loader used to load the template
returns the value of the key
sets the glossary
returns the total rows
returns the glossary
sets the total rows
sets the template to the given template
add a glossary to the glossary
returns the current row number
returns true if there are more rows in the iterator
add a key value pair to the list
returns the no rows
returns the glossary string
moves the row to the next row
returns a string containing the name of the glossary
checks if the given field exists in the database
print the glossary
returns the row data
returns the field with the given name
returns the number of tracked track
print the glossary
set the header to the specified value
p this method is called when the jsp engine encounters the start
close the current state
returns the header for the given header name
returns the number of cached entries
returns the headers
checks if the header exists in the header
returns the maximum track of the track
sets the last modified date
sets the maximum track of the image
returns a string representation of this object
returns the contents of the contents
returns the maximum store for this
returns the length of the contents of this array
appends the string to the end of the list
sets the maximum number of store to be used
sets the error message
returns the refresh interval
resets the contents of this buffer to its initial state
this method is used to convert the contents of the buffer to
sets the refresh interval
sets the hit count
returns the number of hits
returns the dirty read time
sets whether the page should be cached or not
sets the dirty flag
returns true if the page is cached
sets the time the time was cached
returns the cache hash map
increments the hit count
gets the cleared time the time has been cleared
returns the cache requests
returns the cache hits
returns the dirty cache hits
returns the start build time
gets the max track reached
sets the id of the last published page
gets the max store reached
gets the value of the published page property
sets the clients jid
gets the value of the is max track reached property
returns the name of the client that this tunnel will be used
returns the is max limit
returns the maximum track turn over the next turn
prints the stats of the current time stamp
returns the number of hits for the given id
returns a page by id
returns the total number of songs in the cache
returns a string representation of this object
writes the data to the file
returns the type of this byte type
this method is used to read the data from the data
returns true if the critical slots is critical
returns true if the socket is open
this method is used to extract data from the data
close the socket
sets the state of the socket
tests if the socket is not already connected
sets the socket buffer size
returns state of the socket
sets the socket buffer size
returns socket buffer size
sets whether to use select timeout
returns the use select timeout
set the to the given length
sets the timeout for this socket
set the identification of the current identification
sets the offset of the data in the buffer
returns setting of the timeout
sets the socket timeout
gets the value of the receipt timeout
reads the data from the given file
reads the contents of the file
called when the component is started
called when the mouse has been released
initializes the panel
returns true if the land has a land list
adds a style to the list of keywords
add a style to the bi construction
removes a keyword style from the list
remove a pattern style from the list
adds a token style to the current token
adds a token style to the current token
adds a token style to the current token
checks if the text area is typed in the text area
initializes the panel
set the main directory to the main directory
returns the country history file
resets the cache
returns the value of the mod prefix attribute
sets the name of the element to be used to generate the
returns the name of the main directory
returns the name of the directory
returns the name of the element that is being used
appends the given string to the end of the comment
returns the child with the given id
returns the child with the given name
returns the last child of this node
returns the generic list value for the given
returns the last list of the given
returns the list with the given id
returns the variable at the given index
returns the value of the variable specified by the name
returns the last string value of the given string
returns the value of the specified property as an int
get the last integer value from the
returns the value of the given property
returns the last double value of the given string
returns the value of the specified boolean
get the last boolean value
returns the parent object
returns the root of the tree
read the comment
displays a message with the given error message
write the given text to the warn output
add all children of this object to the given
add comment to the file header
adds a blank line to the comment
enable disable for the list of
set whether or not the specified instance can be translated
sets whether the parser should ignore comments
sets whether the print job info is a
sets whether the parser should ignore trust
sets whether or not to recover from the
sets whether the parser errors should be processed
adds a trait to the list
returns the history object
returns the object history for the given id
returns the generic history object for the given tag
returns a message with the given key
get a message from the message
returns a message with the given parameters
returns the message for the given message
returns the user service
returns the folder service
lookup the service bean
logout action
move the database to another
alter the database to alter the datastore
parses the given data object into the data object
this method is called when the user selects a
clears the database
move the database to another
returns the
sets the maximum number of threads to be used
waits for the reply to wait for the reply to be sent
starts the channel
creates a midi event
sets the scroll pane
set the tempo of the song
logs a message to the user
returns the id of the
logs a message to the user
parses the given element
returns a list of all the sets of the parent oai element
parses all the sets
returns a list of all records in the given list
parse the records from the given xml
returns a list of all records in the given list
set the endpoint address for the specified port name
sets the fault code value for this fault code
returns the element with the specified name
add an element to the list
resolve the given table symbol table
accept a visitor
returns the type of this definition
returns the name of the
returns the parent scope
returns the interfaces of the interface
returns the qualified name of this object
returns the super class definition
returns whether the class is being used
returns whether this class is an interface
define a definition to declare a definition
returns a string representation of this object
returns a short description of this action
returns the default or base scope scope
define a label for the given
returns the location of the file
returns a string representation of this object
returns the number of param count
sets the number of param to be processed
sets the output directory
defines a new package
sets the recurse
this method is called when the method is called
returns the output directory
returns the dummy class for the given token
returns the value of the code recurse code property
pops all scopes of all scopes of all scopes
returns the path to the backup file
notifies the server that the file has been downloaded
pops the scope from the current scope
creates a new directory
sets the file to be used for the current file
sets the nearest class scope scope scope
returns a string representation of this object
set the default package for use by the default
encodes the given concept to the given concept
returns the name of the language
decodes a string
this method is used to convert a concept into a
returns a tree representing the given concept
parses the concept and returns a concept
parses an concept
parses a concept
encodes a tree
removes an association between the given
returns a tree representing the given concept
parses a parameter
parses an concept
returns the tree representing the given concept
parses the concept and returns the
parses a concept and returns the result
parses a concept and returns the corresponding
parses a term term
parses a parameter
returns the value of the slot in the current position
sets the value of the given slot
returns the value of the slot in the slot
loads the specified frame
returns the icon height
returns the icons width
returns true if the list is empty
adds a new machine to the machine
creates a memento
returns the list of machines
invoked when an action occurs
restores the state of the instance
called when the mouse is dragged
invoked when a mouse button has been pressed on a component
invoked when a mouse button has been released on a component
returns true if the given domain is a searchable domain
returns true if the given domain is a searchable
returns true if the given domain is a searchable domain
returns whether the value of the searchable value is supported
returns a string representation of this object
refresh the object
called when the user requests to refresh the client
this method initializes j text field key id
this method initializes j text field key typ
this method initializes j text field date
this method initializes this
this method initializes j text field serial
this method initializes j scroll pane key pane key
this method initializes j text field name
configure the logger
this method is called when the thread is started
starts the
starts the server
close the session
sets the buffer time
returns the number of redundant generations redundant
sets the rtp session aet
returns the state lock of the state
sets the visibility of the top panels top panel
sets the email address
sets the failed status to be used
stops the thread
this method is called when the controller is updated
runs the thread
receive a connection to the socket
converts a character to a number
returns true if the socket is opened
converts a byte to a number
opens the connection to the server
adds a new color to the set of red
generate a primary color for the current color
returns the number of code generation for the given number of
returns the sender
sets the sender
returns the report block
returns true if the socket has been opened at the
sets the block
returns the value of the is containing report block
sets whether or not the report block is a report block
returns the fraction of the
sets the fraction of the nobel prize
set the remote port number
returns the cumulative number of packets lost
sets the cumulative number of packets lost
returns the number of received payloads
sets the extended highest sequence number received
returns the jitter
waits for the message to arrive
sets the jitter
returns the last of the
sets the last
returns the delay time of the last time in milliseconds
gets the value of the ntp time stamp ref header time property
returns the item
wait for the specified local host to wait for them
sets the item
sets the time stamp time stamp of the reaper
sets the delay time of the timer
returns the sender info
sets the sender info
returns the time stamp time stamp of the time stamp
returns the number of
sets the time stamp time stamp to the time stamp
sets the
sets the count value for this
returns the reason for reason for reason
returns the rtp time stamp
set the reason for the reason for disconnected
sets the time stamp
sets the sequence number
sets the time stamp
returns the number of packets sent by the sender
show the data in the panel
sets the number of packets sent to the sender
returns the number of packets in the sender
sets the payload data
sets the number of messages to be sent to the sender
returns the marker
sets the local zk host
stops the thread
returns true if this is a closed connection
returns the position of the next byte array
returns true if the packet is valid
sets the red gen
sets the
returns the number of redundant generations redundant
sets whether the poller should show the
returns true if the is
returns the content type of the content
connect to the server
set the red
disconnects the connection from the server
sets whether the packets should be shown on the screen
stops the connection
set the input format
sets the output format
sets the packets to throw
returns the control of the specified type
set the input format
returns the length of the buffer
set the buffer length
returns the minimum threshold for the current record
sets the minimum threshold for the given time
returns true if the threshold is enabled
set the threshold property
clears all the data in the table
adds a packet to the list
initiates the gui
board info
connect to server
sends the board info to the server
sends a move to the server
this method is called when the server is received
sets the ships
returns the ship at the given ships
stops the timer
this method is called by the code code
toggles the coordinate axis
initializes the component
called by the to display the camera
returns true if the axis is shown
called when the component is resized
sets the display mode of this image
returns the display mode
sets the type of the bond
sets the object name
adds a new id to the
returns the bond type
returns the object name
puts a property into the pool
sets the half bond length
sets the number of the element
returns the number of elements in this element
returns the half bond length
returns a string representation of this object
adds an atom to the list
sets the location of the point
set the rotation angle
sets the location of the camera
puts a boolean value into the properties file
adds a bond to the bond
returns the rotation angle
returns the location of the camera
adds a bond to the atom
set the rotation axis
set the remarks for this column
returns the rotation axis
returns the number of bonds in this atom
puts a float property into the properties map
translate the origin of the given coordinate
sets the bounding box
puts a property into the properties map
set the window size
get the atom
invoked when an action occurs
close the connection
returns the renderer subcomponent used to render the renderer
returns the description of the filter
returns the radius of bounding sphere of bounding sphere
returns an image icon or null if the path exists
add an atom to the residue
centers the group in the center of the center of the group
set the preferred height of this component
adds an atom to the sequence
sets the width of the component
reads the input and reads the group
adds a new tab to the top pane
removes a component from the top of the pane
returns a string representation of this object
description of the method
loads the data from the file
returns an image icon or null if the path exists
split the split pane
invoked when the mouse enters a component
invoked when the mouse exits a component
show the groups in the list
initializes the splash screen
returns the system properties
update the progress bar
this method is used to set the parameters of the
creates the data directory
hides the popup window
checks the java version
the main method of the application
sets the current look and feel
checks if the screen size is set
returns a string representation of the object
returns the increment of the second inheritance of this object
returns the value to which this object
returns true if the map contains the key
get the bean factory for the given bean
executes the sql query
render the action
get the cache
returns the file name for the configuration file
initializes the template context with the given template context
returns the connection to the given component
rolls back the file
returns an input stream for reading the contents of the
process the line
determine if the specified file is a file flavor
returns the number of actions that are copied to the given component
populate the related entity map with the related entity
populate the related entity map with the related entity
add a parameter to the list
sets the entity name
add a file parameter to the list
add a related entity map
populate the related entity map
returns a vector of related entities
sets the user info to the given user info
populate the related entity map with the related entity
populate the related entity map with the related entity
populate the related entity map
populate the related entity map
returns the related entity
remove all related values from this object
populate the related entity map with the related entity
populate the related entity map
removes all of the related objects
returns the number of times that this object has been
sets the delegator
populate the related entity map with the related entity
returns the local delegator
sets the delegator
returns the active delegator
get the node id
gets the value of the query query query id property
sets the value of the query query id property
gets the query id
sets the query id
gets the attribute id
sets the attribute id
returns the value of the attribute value
sets the value of the attribute
gets the entity type
sets the entity operator
returns the display type id
set the display type id
returns the display object id
set the display object id
get the custom field id
sets the custom field id
returns the section id
sets the section id
returns the party id
sets the party id
returns the name of the query
sets the name of the query
returns the list of in the list
returns the value for the given generic state
copy the values of the values into the dyna bean
load a class by its class name
returns the agent id
returns the tuple centre centre of the tuple
matches the tuple matches the tuple
this method is invoked to unify the tuples
accepts an incoming event
compares two tuples for equality
returns a copy of this tuple
handles an event for the trap event
returns the tuple
returns the previous history
returns the next history item in the history
clears the contents of the panel
returns the id of the centre of the tuple
returns the version number of the given version
returns the version number of the given version
this method is called when the is removed
creates a new
returns true if the file is a directory
returns the extension of the file
displays the library to the library
returns the description of the filter
create a new text field
creates the combo box
waits for the events to be enqueued in the queue
set the message status
handles the key released event from the text field
adds a library to the library
sets the caret line to the line
sets the engine
returns the current line number
closes the dialog
build the length table of the given text
sets the status message
handles the key released event
set the console console
solve the goal
returns the value of the variable
returns the file manager
sets the frame launcher
returns the frame launcher
sets the status message
sets the engine
returns true if the library is already loaded
add a library to the list
makes the engine a theory
loads the library
unload the library
returns true if the library contains the specified library
compares two tuples for equality
loads the theory
returns the boot time
sets the engine
saves the theory to the database
saves the theory to the database
sets the edit area
returns a copy of this tuple
undoes the last action
opens the library
redo the action
sets the line of the caret
this method is used to acquire the input field of the given
shows the about box
enables or disables the theory
sets the debug area
sets the key bindings for the given text area
returns the debug area
sets the library dialog
clears all the theory
notify all listeners that an event has been processed
adds an inspector to this
reads the next token from the input stream
removes the specified inspector
adds an observer to the list of observers
removes an observer from the list of observers
seek to the specified position
called when the edit is being closed
called when the edit is closed
start the transaction
ends the current transaction
spawn a new task
returns the id of the agent
executes the given task
this method is called to update the current protocol
resets the internal state to the initial state
goes to the next step
set the tuple set to the given array list
adds an inspector context listener
removes an code editor context listener code from this
remove the pending query events from the registrar
unify the tuple generator
reset the tuple centre of the event to the given id
this method is called when the is closed
sets the protocol
this method is used to get the snapshot information
resets the stream to the initial state
this method is used to move the next step to the next
set the tuple set to be used for the tuple set
this method is used to extract the tuple centre info
sets the protocol message to be used for the protocol
reset the thread to the given
goes to the next step
set the tuple set to the given tuple
exits the application
gets the node attribute of the object
spawn a thread to spawn
this method is called when the user presses the
this method is called by the native constructors to ensure that
the main method of the class
called when the end of the element is closed
description of the method
this method prints the debug message
sets the server address for the specified
starts the connection to the server
listens for connections and connections
finalize the connection
runs the thread
reset the full text
this method is called when the user presses the login
stops the timer
changes the current state of the window
changes the status of the current thread to the status code
quits the application
returns the version of the application
description of the method
returns the user agent
returns the message that the user has received
get the data from the data
test method for
fills the curriculum combo box
invoked when an action occurs
description of the method
this method removes all conditions requirements for the prerequisites
description of the method
get the list of course pages
loads the data from the given xml file
returns the marshal part of the talk combo box model
returns the model for the term combo box model
shows the
this method initializes table model
returns the term schedule
returns the about box
returns the user input
gets the term combo box
gets the combo box
set the value of
returns the
set the value of course
returns the course offering
set the value of
gets the courses of the courses
returns the curriculum
set the value of
returns the
set the value of requirement
gets the side radio radio button
returns the requirement description
set the value of nome
set the value of
returns the
set the value of course name
returns the course name
set the value of
returns the credits of the credits
gets the add courses button
set the value of
returns the
set the value of the s date
returns the date of the enrollment
set the value of the major
returns the major version number
set the value of date of birth
set the value of grade
set the value of home
returns the grade grade name
set the value of the property
returns the semester
gets the value of the home property
set the value of year
set the value of total credits
returns the total credits of the
set the value of the property
set the value of expected date
gets the expected date
set the value of first name
set the value of last name
set the value of host
set the value of nome
set the value of
returns the
returns the host name
set the value of port
set the value of start date
set the value of end date
returns the port number
gets the end date
set the value of the requirements
set the value of login
set the value of location
returns the login
set the value of password
returns the password
sets up the fixture for example open a network connection
test method for
test of get method of class nl
test of get editor dialog method of class abstract system
test of set method of class com
sets up the fixture for example open a network connection
initializes the
delete the user collection
set the preferences to the parent of the window
prints the stack trace to the root cause
get the user specified as a string
set the given code key code
returns the editor dialog with the given name
initialize the parser
returns the patterns for the given type
returns the
sets the
returns the events of this event
returns the configuration for this configuration
returns an iterator over the events
sets the configuration
returns the event with the given index
returns the scores document
sets the scores document
add an event to the event queue
returns the part of the part
returns the number of events in this list
puts a string into a string
adds a node to the group
adds a group of group to the group
returns the parts of this parts parts hashtable
adds all events from the given events to this list
returns the regular expression pattern for the regular expression
returns an enumeration of all the parts in this list
initialize the menus
sets regular expression pattern
adds all events from a given listener to the list of events
returns the group of the
returns the xml representation of the document
returns the part name at the specified index
sets the group
creates a dom document
returns true if the part is equal to the given parts
returns the element type element
initializes the debug menu
returns the source element of the given document
returns an enumeration of all the types
returns all events that are in the given string
returns the configuration object
sets the configuration
getter for property src data
sets the src data attribute of the object
notifies the listeners that a new request was retrieved
returns the commentary source of the embeded commentary
opens the dialog
opens the dialog for the preference editor
opens the prefs prefs preference dialog
this method displays the dialog
populates the event table with the given values
construct a vector of parts
adds a summary pane to the pane
adds an error pane to the desktop pane
adds the events to the pane
this method is called when the
returns the status of this game
returns true if the player has to be done
returns the opposite of the player
returns the checker for the given index
returns true if the dice is a double
returns the start point of the point
returns the die
returns the end point of the point
returns true if the connection is bearing
returns true if the current move is a valid move
returns true if the type checker is a checker
this method is used to move the player to the given player
this method is called when the game over a game over the
stops the timer
returns the value of the em b b em property em
create a new content
returns the focus in the component
sets the component to be used for the given component
translates a y coordinate of a y coordinate
show the specified number of milliseconds
returns true if measure is allowed to be used
sets the distance
returns the a
returns the number of clusters
returns the b
returns the distance between the two points
returns the selected algorithm
scales the dimensions of the scale
sets the points of the points
returns the selected measure
updates the current value of the spinner
sets the number of clusters to generate
returns the items
assigns a collection of clusters to the given group
sets the enabled state of the settings
open the clusters to be used for the given collection
initialize distances to the given list of values
close all clusters
format the value of the given float
returns the distance between two points and the result
re lays out the specified collection
returns the distance between two vertices and the result
combine the distance from the given distance to the distance
combine the clusters
returns the to go to the go to the go
sets the num clusters number
sets the index of the
calculates the of the given collection
returns the cache
returns the
invoked when an action occurs
returns a new
returns the distance between this point and another
returns the distance between this cluster and the specified
returns the representative of the item
sets the item to be used for the first item
returns the distance between this position and the specified
creates a new cluster with the given position and the
returns the distance between the two points
description of the method
returns the coordinate of the coordinate
generates a new cluster for the given item
calculates the sum of all the items in the
returns the dimensions of the coordinates
adds a new history to the history
paint the history
returns the point of the clusters
adds a new paintable item to the history
returns the menu bar
creates the clusterer
ends the clusterer
returns the algorithm used to compute the algorithm
returns the clusterer
sets the flag that controls whether or not the
this is the entry point method
sets the last exception
sets the maximum number of that will be sent to the
sets the number of invitations currently being tracked
handle an exception
sets the prev assigned count
sets the last update
updates the page refresh date time
returns the password from the password
search for a directory
returns a class loader for the given name
add a url to the list of urls
binds the socket to the socket
sends data to the remote server
get the device name
encodes a string into a string
encodes a string into a string
decodes a string from the string representation
returns the device id
returns the version of the
sql sql to execute the sql statement
sets the sql statement to be used to execute the sql
sets the connection
adds a to the archive
returns the error message
create a empty archive
create a single entry for a given archive
updates the
stops all plug in plugin
adds a listener to this event
removes the specified listener from this component
dispatch an event to all listeners
sets the enabled state of this component
clears the data
initializes the gui
sets the preferences to the default values
updates the persons selected person
sets the time
returns the time in milliseconds
clears the panel
sets the progress bar
sets the text of the progress bar
sets the maximum number of dimensions to be displayed
this method initializes this
this method initializes sp description
this method initializes this
this method initializes tf name
this method initializes j text field
this method initializes j text field
this method initializes sep general
this method initializes pnl start time
this method initializes j panel
this method initializes pnl total time
this method initializes physical attr
load the application settings
returns the content panel
loads all projects from the project
saves the projects to the project
initializes the renderers view and renderers
initializes the editor
this method initializes this
this method initializes main panel
this method initializes j jmenu bar
this method initializes project menu
this method initializes mi project exit
this method initializes mi project new
this method initializes mi project open
this method initializes j menu
this method initializes mi help about
this method initializes mi help help
sets the path to the path
updates the tracked track in the table model
returns the project settings
adds a new person to the list
returns true if the mouse wheel is a zoom by mouse
sets the zoom zoom
returns the transformed data from the given point3 d
checks if the entity is already in the database
paint the marker
loads the given file
sets the waypoints
saves the current file to a file
returns whether the track path is painted
remove a property from the list
sets whether the paint track should be painted or not
returns the value of the given key as an integer
returns the track color
returns the boolean value associated with the given key as a boolean
set the track color
returns the track style
sets the stroke style for the track
returns the string value of the property
sets the value of the property
sets the int value associated with the given key
sets the boolean value for the given key
sets the int array value for the given key
adds the given entry to the end of the list
returns the age of the given person
update the persons persons
clears the text fields
set the configuration
set the kernel to use
starts the
returns the configuration object
starts the
sets the connection manager
this method is called when the thread is stopped
returns the connection manager
stops the timer
returns the header for the given title
returns the footer of the footer
returns the header for the given title
returns the footer of the footer
called when the user is finished
returns the url to the current page
returns the name
returns the domain name
returns the object name
returns true if the given operation is available
check if the type of the object is available
returns the plugin descriptor
compares this action to another action
main processing method for the main program
initialize the panel
initializes the connection dialog
this method is called when the test fails
calculate the angle in the memory
returns the end of the angle
returns true if the server has been started
stops the server
the method code action listener code
print the output
print a character
print a string
print a double precision floating point number
print the output
print the ith message to the output
print a long value
print a string
print the string
print a blank line
print a boolean and then terminate the line
print a character and then terminate the line
print a double precision floating point number
write the specified byte to this output stream
check if the is
test of destroy status method of class usyd
checks if the user has a
checks the time for the
test method for
test method for
test method for
test method for
test method for
test method for
test method for
tests the get replies at the time
test method for
test method for
test method for
test method for
test method for
sets the retry on error flag
set the url to the url of the url
write to the server
login to the server
starts the menu
starts the
returns the value of the pay pal field
checks if the user is valid
makes sure that the view is visible
open the database
close the database
returns a cursor to all profiles in the database
write the profile to the profile
updates the profile
returns a cursor to the list of all the currently logged in
update the friends list
update the own profile
log out the log file
returns true if the current user is logged in
this method is called when the user logs out
save the foot attribute
send status to server
saves the to the given
saves the to the given
read a profile from the database
saves the profile to the given profile
returns a cursor to the given local profile
this method is called to get the friends list of all users
this method is called when the user selects a client
this method is called when the user agent client to login
returns the status of the user
saves the data in the database to the data model
update the status of the user
returns the timezone
returns the timezone off set
returns true if the user is protected
sets the count
destroys the user
destroys the specified status
follow the user specified by the user id
returns the status with the given id
checks if the user is
checks if the user is a following friends
check if the user has logged in
returns a new user who has the given user name
returns the user associated with the specified user
returns the status of the specified user
sets the since date
returns the date of the date
sets the since id
sets the source of the application
sets the authenticating users status
show a user with the given name
show the user with the given user id
searches for a user with the given username
updates the authenticating users status
updates the authenticating users status
checks if the user specified in the user name exists
sets the language
returns the name of the input string
reads the variables from the given resource
reads the variables from the given resource
find a resource child
records the record
records the data to the server
stops the recording
returns the presentation reconciler ready to be used to derive the given
this method is called upon plug in activation
this method is called when the plug in is stopped
returns the plugins resource bundle
returns the process
this method is called when the plug in is stopped
returns the plugins resource bundle
recomputes the values in the map
initializes the editor
runs the job
performs the default operation
perform the field editor
disposes the editor
sends a message to the server
sets whether the database is enabled
returns the database object
this method is called upon plug in activation
this method is called when the plug in is stopped
sends a message to the client
sends a string to the background
returns the process
returns true if the user is running
this method initializes group breakpoints
this method initializes composite select
this method initializes group reduce
resets the state of the
disables the component
this method initializes
this is a callback that will allow us
this method initializes composite main
this method initializes combo term
reset the state of the
returns whether the component is on the output
this method initializes group select
this method initializes combo reduce
this method initializes composite select
this method initializes group active module
this method initializes combo active module
this method initializes group show
sets the selected item
adds a new module to the module
this is a callback that will allow us
remove all active module
this is a callback that will allow us
passing the focus request to the viewers control
the
reset the state of the
stops the thread
resets the viewers to the initial state
returns true if the viewport has been disposed
adds a new module to the module
stops the thread
sends a string to the server
recomputes the components and the editor
initializes the editor
performs the default operation
returns the value of the boolean property
creates and returns the button control
called when the value of the value changes
returns true if the queue is full
set the attachment file to be used to reconstruct this file
returns true if music bands are empty
adds a new back to the queue
check the rep
returns the value of the code double code property
returns the hash code value for this code code
indicates whether some other object is equal to this one
invoked when an item has been selected or deselected by the user
initializes the tray icon
returns the value1
this method is called when the user agent is
this method is called when the user agent is
set the value of the field with the specified name
returns the name of the constant pool entry
returns the descriptor of the constant pool entry
returns the name of the class
add an interface to the interface
returns the magic number
returns the name of the utf8
returns the minor version
returns the major version of the
returns the data input stream for this object
returns the class name of the class
returns the start pc of the
returns the number of rows in the cache
setter for property start nr
returns the superclass name
returns the constant pool index of the constant pool
returns the attribute with the given name
writes the attributes to the given output stream
adds a to the list of
matches the regex matches the current pattern
adds a new rule to the model
returns the value of the code precedence code property
adds a new rule to the current exclusion
returns true if the rule is more than one more
compares this rule with precedence of two
compares the specified object with this rule
this method is used to get the field value
this method is called when the method is called
set the field to the specified object
this method is used to indicate that the object has been removed
matches the given string to the endpoints
returns the name of the target field
replaces the old replace text with the next replace
counts the number of precedence
get the class name of the object
count the number of in the current file
this method is automatically called when a is reached
checks if the given string matches the current rule
returns the name of the method
add a class info class name to the class info
returns true if the specified object is a valid object
returns true if the method is a constructor
set the trigger to the default value
returns true if the given event is protected
returns true if this method is static initializer
release the resources
sets the to the given
removes the given object from the given object
adds a field info field ref to the class info
returns the default
add a method ref info
returns the target instruction
returns the type of the class
returns the type name of the type
returns the modifiers for this field
returns the class declaring the constructor
returns the type name of this descriptor
returns the index of the byte array
returns the name of the field
returns the name of the method
returns the return type of the method
returns the name of the class referenced by this
returns the number of entries in the stack
returns the class name of the class
returns the usage of the stack usage
returns the field
returns the method
loads a class from the input stream
add a string info to the list
returns the instruction list
sets the bytes to be transferred
adds a descriptor descriptor to the descriptor
get opcode for the opcode
instrument the class descriptor
dump the content of the receiver to the output stream
casts the given type to a byte array
add an integer info to the current
create a new empty list
returns the modifiers for this method
return the value of the code stack trace code property
this method is called when the user is about to be passed
transforms the class to the output
returns true if the given class is a class
adds a new instruction to the pool
return the value of the code code instruction
returns the instrumentation
returns the return type of the method
returns the agent args
set the offset of the
returns the name of the class
adds a new float info to the list
adds a list of instructions to the list
returns the offset of the last inserted element
set the attribute
creates a hot spot that will be used for the given position
returns the name of the package
insert an element at the list
returns the instruction factory for this instruction
adds a long info to the buffer
get instruction list
this method is called when the hot spot button is pressed
get the argument list of the current list
returns the hotspot name
returns the handle of the instruction
insert a list of instruction at idx
this method is called by the
returns a code source code instance for the given location
sets the context
returns the instruction at the specified position
returns the current context
returns a double info object for the given value
run the main method
replaces the current instruction at the specified index
add a local variable
add a name entry to the list
add a to the
returns the declared field of the jdofield
returns the number of in the group
returns the entry at the specified index
returns the superclass of the superclass
returns the index of the given instruction in the specified instruction
returns the index of the instruction in this byte array
get the utf8 utf8 constant
returns the modifiers for this class
returns the index of the instruction
returns the value of the field at the given index
add a field to this field
instrument the class
returns the index of the first occurrence of the specified array
get the class name of the constant pool entry
set a field in the field
returns true if the field is a synthetic attribute
get the field value for the given object
adds an interface to the interface
clears the instructions
set the field
returns the instruction factory for this factory
returns the entry index
adds a method to this class
returns the declaring method
create a new list view
creates a new
returns the name of the current element
returns the constant pool
returns the name of the constant
returns the name of the method
get a node by name
returns the code named node code
the namespace of the namespace declaration
notify all listeners that have registered interest for
returns the child of code parent code at index code index code
returns the number of children of parent
returns the child of the node at the specified index
returns the index of child in parent
returns the number of child nodes of this node
returns the index of the child
returns true if the specified node is a leaf
returns true if the receiver is a leaf
normalizes a string
returns the root node of the tree
returns the attributes associated with this node
the owner element of this node
get a node by name
initializes the statement with the statement
get the implementation of the database
returns the name of the
returns the name of the notation
this method was created by a smart guide
creates a new
b dom b implements
the code document fragment code method creates a document fragment
constructs a new
creates a new okapi ioexception object with a message
prints the stack trace to the specified print stream
prints the stack trace to the specified writer
parses the specified input source and creates a new sax event
parse the xml document
checks if the feature is
this method is not safe
this method is for the method
returns the connection to the database
returns the statements
the dtd
internal use only
constructor for the dbconnection object
this method is used to create dtd document
returns the document with the current document
sets the auto commit attribute of the connection object
gets the current auto commit attribute of the connection object
commit the transaction
rolls back the transaction
get the list of child nodes
returns the attributes map
duplicate this node
returns the id of the object
returns the db implementation of the implementation
compares this object with the specified object for strict
returns the hash code value for this
register a new layer to the terrain layer
returns the mouse button for the given button
adds a new file to the receiver
returns the for the
returns the for the
returns the instance of the metric
puts the metric into the database
returns the current interval
returns the number of events received in the queue
description of the method
returns the number of events in this interval
advance the current one
returns the cumulative frequency of the cumulative cumulative distribution
advance the current time
copies the values from the receiver into the given
returns the current frequency of the current event
returns the number of packets that are associated with the current
adds a new to the set of events
advances the current time step
returns the interval for the interval
returns a string buffer containing all the
returns the date
returns the maximum time of the session
returns the events time
resets the statistics to the beginning of the interval
returns the number of events in this queue
returns the maximum session time
adds a new to the list
returns the mean time of the current sessions
returns true if the current time is past the current time
returns the age of the current time
this method is called after the time interval is reached
get the age of the track
returns the total number of intervals
add a new to the list
returns a string representation of this object
returns a xml representation of this object
returns the label for this
adds a new to the current position
stop the timer
removes the last element from the list
reset the connection to the initial state
returns a snapshot of the current snapshot
returns the category of the given category
this method reads a form from the given form
returns the order item of the given
sets the game screen
initializes the applet
initializes the screen
sets the title screen
initializes the buttons
initializes the applet
returns the background image for the given level
runs the game loop
initializes the buttons
updates the screen
draws the game screen
updates the size of the
updates the animation based on the amount of time
returns the width of the image
returns the height of the image
returns the frame at the specified index
updates the timer
draws the blocks
rotates the camera around the centre of the current position
sets the x coordinate of the point
sets the y coordinate of the center of the current point
sets the y velocity of the physics
sets the x velocity of the physics block
returns whether or not the view is going down
goes to the next block
sets the position of the relative mouse cursor to the given
this method is called when the user presses the button
checks if the game is pressed
sets the paused state
exits the application
resets all game actions to their default values
returns the key action for the given event
called when the user selects a mouse helper
creates a new graphics object and returns it
reloads the data from the data
returns whether the day layers is visible
returns the value of the code world cities layer code parameter is
returns the preferred size of the given column
description of the method
shows the login dialog
show the user
sets the
adds a friend to the list
removes a friend from the list
adds a message to the local chat
displays the list of friends
opens the
opens the chat
opens the
opens the help screen
opens the party window
starts a clock
returns true if the chat is
called when the session is closed
returns the width of the screen
returns the height of the screen
returns the number of the
sets the map revision to the given value
loads the settings from the database
saves the settings to the file
adds a private chat to the chat
sets the flag indicating whether the image should be
sets the value of the is quest quest
sets the level requirement for the
this weather room specifically for the weather
returns the weather movable value from the
sets the value of quest requirement
returns whether the is
generates the
this method is called when the user wants to kill the appearance
generates the
remove the species from the database
sets the requirement
sets the item requirement
sets the requirement
sets the quest id
sets the party to whom this user can turn
returns the speech
sets the speech attribute of the object
sets the quest speech
returns the quest string
sets the index
returns the index of the entry
sets the badge of the badge
returns the badge of the badge
sets the money
returns the amount of money the player has earned
sets the end speech
returns the end speech
this method is called when the battle begins
returns true if the trainer is in trainer
returns the highest level of the current list of the
set the minimal level for the
sets the flag that indicates whether the connection is connected
get the of the given
adds a player to the list of
removes a player from the list of
returns the map matrix
sets the map matrix
returns a random player
returns the map of the map
runs the thread
returns the required
returns the i th of the
returns the item
sets the item
sets the warp map x coordinate for the map
checks if the ith is a
sets the warp map y coordinate
set the warp x warp x warp x warp x warp y
set the warp y coordinate
returns the item at the specified position
returns the x warp x coordinate of the map
returns the warp map y coordinate
returns the warp x warp x warp x warp x warp x
returns the warp y coordinate of the warp y coordinate
sets the species
set the minimal level for the
returns the minimal level of the laser
set the maximum level of the
returns the maximum level of the
sets the value of the given sprite
sets the value of the encounter rate
returns true if the item at x y
returns the number of in this race
returns the sprite of the sprite
returns the number of occurrences of the longest distance
sets the distance covered by the
returns the type
sets the type
adds a day day to the day night
sets the quest id
removes the day from the day
adds a new to the list of
gets the value of the quest id property
removes a park
sets the npc type
adds a new to the list of
removes a park
returns the npc type
set the potential of the potential
remove a warp data from this group
adds an npc to the list
removes npc data from the list
set the minimal level for the level
returns the minimal level of the minimal level
returns the wild capital canonical format
saves the given player to the queue
saves the to a file
sets the ends of the
returns the wild level constants for the given species name
returns the number of that are monitored
returns the item requirement
returns the species name of the
returns the requirement
this method is called when the player is about to be played
returns the level requirement for the
returns the level of the given species
set the money
adds a player to the game
returns the number of alive
invoked when a new session is created
removes a player from the list of players
this method is used to clear all the logged in user
adds a warp tile to this tile
returns the warp tile at the specified position
adds npcs to the npcs npc
returns true if the given point is a wildcard level
calculate the statistics for the
returns true if the specified point is in the
this method is called by the map mx the
sends a message to all players
returns the char for the given x y position
returns the tile for the given tile
returns the x offset of the
save the file to the file
load the given url from a file
returns the y offset of the
returns the direction of the random direction
stops the server
called when the current quest is closed
sets the current quest id
gets the current quest id
returns true if the specified quest has completed
adds a quest to the current quest
returns the rank of the
sets the rank of the item
returns whether the is
this method is called when the user selects the next active state
sets whether the is
returns the class of the player
sets the class to be used for the player
returns the password hash
returns the effect with the specified lock
this method is called when the friend list is added to the
adds a friend to the session
removes a friend from the database
initializes the boxes
switch to a given box
adds a badge to the list
returns true if the given thread has already been
returns the number of simulations
returns whether the is
removes the given status from this state
sets the password hash
returns the io session
sets the session to be used for the session
this method is used to attach the given
the contact
this method is called when the player loses the
sets the map of the to the given point
the
this method is called when the is
adds a new to the list of
returns the number of boxes in the box
checks if the player can the game
this method is called when the movement of the given direction is
change the health of the health
moves the current movement to the current one
inform listeners about a change of a status event
switch to a
returns the amount of money the player has been transferred
sets the m amount value for this
returns the is mod
sets the value of the bos em mod em field
initialises the bag
lays out the party
move the given player
show the game finished game
plays the
move the opponent to the given position
creates a new board
moves the npc to the npc
returns true if the player has finished playing
returns the turn
checks if the board is a
returns the winner
changes the turn of the player
returns the square of the square at the given coordinates
handles a game received
the method reject a new game message
move the received packet to the server
this method is called when the user presses quit when the user
this method is called when the connection is established
called when an error occurs
paints the image
returns the mimetype
returns the name of the file that contains the styles
adds a key value pair to the map
returns a hashtable with all the pictures in this collection
creates a deep copy of the document
sets the content of the document
this method initializes j frame
this method initializes about dialog
starts the playback
returns the error message for the given exception
logs the message to the console
logs the given parameter to the log
moves the cursor to the first row in the list
sets the date at the given index
sets the time
sets the binary stream to the given stream
returns the operation request
sets the value of the operation request property
returns the binary stream for the given index
add an operation request to this request
returns the blob at the given index
adds the cart to the cart
sets the cart
adds a new set of values to the current value
returns the corrected query
sets the new release
returns blob column from the given column name
sets the value of the corrected query property
sets the int value of the parameter
returns the shipping type
sets the value of the shipping type property
sets the value of the sif boolean object to the specified
gets the value of the is rate tax inclusive property
returns the name of the query
sets the value of the is rate tax inclusive property
returns the shipping price
sets the value of the fixup property
sets the bytes to the given value
sets the value of the shipping price property
add a shipping charge
sets the value of the condition property
sets the shipping charge flag
set the string value of the given string
returns the engine query
adds a shipping charge to the cart
sets the value of the engine query property
sets the timestamp
gets the delivery method
returns the value of the mz data property
sets the value of the property
gets the value of the total results property
sets the value of the delivery method property
sets the double value of the given double
sets the value of the total results property
sets the value of the property
sets the value of the title property
returns the collection of summary information
gets the value of the total pages property
sets the value of the collection summary property
adds the search results to the search results
sets the search index
sets the value of the total pages property
gets the value of the property
returns the collection parent
sets the value of the collection parent property
sets the value of the zip code property
gets the value of the customer page property
sets the value of the customer page property
gets the search results map
adds a collection of summary value to the collection
sets the value of the search results map property
returns a collection with the values of this parent
gets the merchant id
adds a set of items to the collection
sets the collection item
sets the value of the merchant id property
returns the search bin sets
sets the request with the specified customer id
sets the value of the email header with the given email address
sets the value of the search bin sets property
sets the value of the search header with the given name
search for a customer with the given values
gets the review sort attribute of the object
sets the response group
sets the value of the query
returns the alternate versions
sets the value of the review sort property
sets the value of the fixup field
clears the cart
sets the value of the query
sets the request
returns the similarity type
sets the value of the counter
returns the child items with the given values
sets the value of the alternate versions property
sets the transaction item
sets the value of the similarity type property
adds a new value to the total number
maps search results to the given value
set the request with the given value
adds the items to the list
sets the value of the search bin
set the delivery method
sets the item
adds a new item with the given values
gets the required parameters
sets the value of the required parameters property
sets the request header for the given value
returns the available parameters
this method is used to set the merchant lookup
sets the value of the available parameters property
gets the value of the average rating property
sets the value of the average rating property
adds a new list of values to the group
returns the default response groups
gets the value of the total reviews property
sets the value of the default response groups property
set the request with the given value
sets the value of the total reviews property
gets the value of the total review pages property
set the similarity request with the given value
returns the available response groups
sets the value of the total reviews count property
sets the value of the available response groups property
sets the item id
sets the value of the field
returns a new customer reviews with the given code integer code
sets the description of this operation
adds a customer reviews to the reviews
sets the value of the field with the given parameters
sets the number of review responses with account review
sets the value of the parameter
sets the reviews in the review
gets the value of the property
sets the list of review
sets the default response information
gets the customer id
sets the value of the customer id property
sets the value of the response property
sets the value of the property
gets the value of the review page property
sets the value of the review page property
add a new to the
returns the first existing item with the given values
gets the value of the tag page property
sets the promotion
sets the transaction item id
sets the value of the tag page property
gets the value of the tags per page property
gets the value of the property
sets the value of the tags per page property
sets the response with the given value
adds the items in the given list of values to the
sets the items
returns the tag sort
search for the values of the given search item
sets the value of the tag sort property
sets the request
sets the value of the property
lookup the request with the given id
searches for the tuples with the given values
sets the search bin set
retrieves the content of the request group with the given values
sets the response with the given value to the request
sets the request header with the given id
returns the summary
clears cart cart cart cart cart cart cart cart cart cart cart
sets the value of the summary property
sets the request header with the given id
gets the details
sets the value of the details property
stores a customer with tags of the given identifier
sets the value of the summary field
lookup the request for the next request
sets the details of this account
returns the sales rank
adds a set of values to the request
sets the request
looks up the request with the given values
set the request with the given id
sets the tag with the given id
sets the response tag with this request
looks up a response with the given values
sets the tags attribute of the tags object
sets the value of the request header
set the request tag with the given value
sets the value of the sales rank property
look up a request with the given values
sets the tag name
gets the value of the list page property
sets the value of the list page property
returns a list of the response with the given value
search for list of entries with the given values
lookup the with the given values
sets the lists of lists
sets the value of the list type property
sets the request
returns the small image
search for a list of existing values
adds the elements of the specified element to this group
sets the element
sets the list of request
returns the availability of the availability
sets the value of the availability type property
gets the offer listing id
gets the value of the is preorder property
sets the value of the is preorder property
sets the value of the offer listing id property
gets the minimum hours
sets the value of the small image property
sets the value of the minimum hours property
gets the maximum hours
sets the value of the maximum hours property
returns the exchange id
sets the availability attribute of the availability object
sets the availability of this object
search for a city
sets the value of the minimum hours property
sets the value of the exchange id property
sets the maximum number of hours to the specified value
search for email with the given value
search for first matches the first value in the first search name
search for a list of date values for the given value
returns the price of the stock
returns a list of the first page in the list
returns the lowest list price
sets the value of the lowest list price property
returns a list of the request objects that represent the
sets the value of the price property
returns the highest list price
search for the given value with the name
sets the value of the highest list price property
returns the medium image
returns the lowest price price
returns a list of all the request groups in this map
sets the value of the lowest sale price property
returns the price of the sale
search for a list of all the values in the list
returns the highest sale price
sets the value of the highest sale price property
sets the value of the sale price property
adds a value to the list
sets the highest list price
adds a stock price to the stock price
sets the highest price to yield a customer price
sets the value of the medium image property
returns the amount saved in the transaction
sets the value of the key property
sets the value of the amount saved property
returns the cart object for the given cart
sets the request
sets the value of the field
sets the value of the field with the given value
gets the value of the percentage saved property
add the given list of
sets the package
sets the value of the percentage saved property
returns the audio format
returns the binding
sets the value of the audio format property
sets the value of the binding property
sets the value of the availability property
returns the large image of the image
sets the alternate version of the
sets the value of the field with the given name
sets the alternate version
sets the value of the field with the given string
sets the alternate value to the given value
sets the audio format
returns the availability attributes
returns the total amount of
sets the value of the availability attributes property
sets the value of the total property
sets the value of the entity id property
returns the total of the
sets the value of the large image property
sets the value of the subtotal property
sets the value of the user id property
gets the quantity
returns the tax
sets the tax
sets the value of the field
sets the value of the quantity property
sets the value of the sif entity id property
returns the shipping charge
sets the user id
sets the value of the shipping charge property
sets the value of the specified time
get the promotion of the centre
returns the address of the store
sets the value of the promotion property
gets the value of the list item id property
sets the value of the list item id property
sets the value of the store address property
generates a new totals with the given value
returns the date added
generates a new totals with all totals
sets the value of the date added property
generates a new totals with totals
generates a new totals with the given value
generate a new transaction totals with the given value
gets the value of the store hours property
returns the quantity of desired resources
sets the value of the quantity desired property
sets the value of the store hours property
gets the quantity received
sets the value of the quantity received property
gets the value of the is eligible property
sets the value of the item property
sets the list item
returns the tag type
adds a new date to the list
sets the value of the is eligible for super property
sets the value of the comment property
sets the value of the tag tag property
sets the desired value for the quantity property
sets the list item
sets the value of the item
returns the distinct items
returns the item attributes
gets the sales restriction
sets the value of the distinct items property
gets the tracking number
sets the value of the tracking number property
returns the carrier name
sets the value of the carrier name property
sets the value of the sales restriction property
add a new shipment to this tracking type
gets the value of the distinct users property
sets the value of the carrier with the given value
sets the value of the distinct users property
sets the value of the item attributes property
lookup a request with the given values
lookups a request with a given values
gets the total usages of the
sets the transaction id
sets the value of the total usages property
adds the cart items
sets the items
returns the first
creates a new listing by its id
sets the value of the first property
creates a new request for the cart
sets the request
gets the value of the merchant item attributes property
sets the exchange id for the exchange
returns the last
returns a new response with the specified value
search for the first item in the list
creates a new price object with the specified price
sets the value of the last property
sets the value of the merchant item attributes property
creates a sale price object with the given price
returns whether the is in set
sets the value of the is in set property
gets the is in eligibility requirement set value for this describe sobject
sets the value of the is in eligibility requirement set property
sets the price level for the given transaction
sets the value of the property
sets whether or not the is already in the
sets the value of the in in nr entry property
sets the value of the code attribute code property
convert a value to a market
sets the value of the percent with negative
sets the value of the code with negative int code property
returns the collections
convert the given availability to a availability listing
sets the name of the attribute
builds a similar similar list
sets the similar product
sets the tag with the given value
convert the quantity to a quantity
sets the value of the collections property
returns a new
returns the valid operations
sets the value of the valid operations property
returns the elements of the elements of this response
sets the elements
returns a new snapshot of the tag with the specified name
sets the address to the given address
sets the name of the group
sets the value of the specified date
sets the value of the
set the sum of all usages of the given string
sets the value of the group with elements
sets the id of the
gets the value of the points property
sets the value of the points property
sets the first value of the first tag
returns the value
sets the value of the value property
returns the subjects
sets the value of the points
sets the value of the specified
sets the last value of the tag
convert a boolean to a snapshot
sets the value of the subjects property
adds a tagging of the tagging to the tags
sets the value of the counter
adds a new number of pages
this method builds a sales of the company
returns the transactions of this transaction
add the tagged values of the tagged values of the tagged values
sets the transaction
sets the value of the address property
add the tagging of a tagging to the tagged value
sort shipping order by shipping order
create an instance of
sets the tagged items
gets the offer summary
sets the shipping charge
create an instance of
sets the tagged lists
sets the value of the offer summary property
sets the tagged
create an instance of
returns the http http http http http http header
create an instance of
sets the value of the http http request header property
gets the offers
returns the arguments
create an instance of
sets the response with the given value
sets the value of the arguments property
returns the first matching value of the given array of values
sets the
returns the time processing time
sets the value of the request processing time property
create an instance of
sets the value of the offers property
sets the value of the property
replaces the values in this list with the given values
sets the request id
sets the variation dimension
sets the value of the parameter to the given arguments
create an instance of
sets the request processing time
gets the value of the total offers property
create an instance of
sets the value of the total offers property
gets the value of the total offer count property
sets the value of the total offer count property
returns the variation summary
creates a offers value for a new value
create an instance of
sets the value of the code seller code property
add a new offer with the given number of
adds a new offer with the given values
sets the value of the spinner with num pages
sets the offer
sets the for the given
sets the seller listing
create an instance of
sets the value of the condition property
sets the value of the variation summary property
gets the value of the delivery method property
sets the value of the delivery method property
returns the shipment items
sets the value of the shipment items property
create an instance of
returns the list of packages
sets the value of the packages property
sets the value of the condition with the given value
set the delivery method
sets the value of the shipment item property
sets the value of the target shipment property
create an instance of
gets the value of the property
create an instance of
sets the value of the actor property
create an instance of
sets the value of the property
create an instance of
create an instance of
gets the value of the customer reviews property
create an instance of
sets the value of the artist property
create an instance of
sets the value of the customer reviews property
creates the tags
create an instance of
gets the reviews
create an instance of
sets the value of the reviews property
create an instance of
create an instance of
create an instance of
gets the similar products
create an instance of
sets the value of the similar products property
create an instance of
create an instance of
create an instance of
gets the value of the maximum age property
gets the value of the property
create an instance of
sets the value of the property
create an instance of
create an instance of
returns the tracks
create an instance of
returns the brand value
sets the value of the tracks property
create an instance of
sets the value of the brand property
create an instance of
sets the value of the maximum age property
create an instance of
returns the browse nodes
sets the value of the browse nodes property
create an instance of
gets the browse node attribute of the browse tree object
create an instance of
sets the value of the browse node property
returns the search inside of the
create an instance of
sets the value of the search inside property
create an instance of
create an instance of
gets the lists
create an instance of
create an instance of
sets the value of the lists property
create an instance of
create an instance of
returns the tags
create an instance of
sets the value of the tags property
create an instance of
sets the value of the composer property
returns the minimum allowed age
create an instance of
create an instance of
sets the alternate version of the current implementation
create an instance of
sets the value of the field
create an instance of
sets the value of the field
create an instance of
sets the value of the field
create an instance of
sets the value of the minimum age property
create an instance of
set the sales rank
gets the value of the property
create an instance of
returns a small image that represents the value of the image
create an instance of
sets the value of the property
returns a medium item with the given value
create an instance of
returns a large image that can be used to represent the given
create an instance of
create an instance of
adds the given
create an instance of
sets the value of the element with the given attributes
create an instance of
returns an item that is retained in the
create an instance of
set the value of the
create an instance of
gets the value of the property
create an instance of
sets the subjects value
create an instance of
sets the value of the property
adds a new offer to the offer
create an instance of
returns the value of the mobile video format
offers a new value to the offers
create an instance of
adds a variation summary for a variation summary
create an instance of
sets the value of the property
create an instance of
create an instance of
adds a customer reviews to the reviews
create an instance of
adds a new reviews to the current list reviews
create an instance of
sets the value of the analog video format property
submits a product
create an instance of
sets the value of the property
sets the value of the director property
create an instance of
tracks the given item in the list
create an instance of
create an instance of
simulates a browse node
returns the future date of the launch
create an instance of
searches for a single item in the search
create an instance of
sets the value of the future pub date property
sets the to the given value
create an instance of
returns a new value with the tags provided as a
create an instance of
create an instance of
returns the mode
sets the value of image sets
create an instance of
create an instance of
create an instance of
gets the value of the seller id property
sets the value of the seller id property
create an instance of
gets the value of the seller name property
sets the value of the seller name property
gets the value of the item page property
create an instance of
gets the value of the seller legal name property
sets the value of the modes property
sets the value of the seller legal name property
create an instance of
sets the value of the item page property
sets the value of the nickname property
create an instance of
gets the page
sets the value of the page property
create an instance of
create an instance of
returns the more about of the about text
create an instance of
sets the value of the more about property
returns the location of the
create an instance of
sets the value of the location property
create an instance of
gets the average feedback rating
sets the value of the average feedback rating property
create an instance of
gets the value of the total feedback property
sets the value of the total feedback property
create an instance of
gets the value of the total feedback pages property
create an instance of
sets the value of the manufacturer property
sets the value of the total feedback rows property
gets the value of the seller feedback summary property
create an instance of
sets the value of the seller feedback summary property
create a collection
gets the value of the seller feedback property
sets the value of the seller feedback property
gets the value of the maximum price property
create an instance of
sets the seller value
create an instance of
sets the value of the pay name property
sets the value of the maximum price property
sets the value of the property with the given name
create an instance of
sets the value of the pay pal
sets the value of the page property
sets the value of the simple property with the given string
create an instance of
this method returns the seller of the user about the given value
sets the value of the property
create an instance of
returns the average feedback rating for the given code value code
sets the value of the shipping feedback property
create an instance of
sets the value of the spinner with the given quantity
sets the seller feedback summary
create an instance of
sets the seller feedback
create a new meta data object
gets the value of the total property
sets the value of the total property
gets the value of the total variation pages property
sets the value of the total variation pages property
returns the variation dimensions
sets the value of the variation dimensions property
create an instance of
sets the sum of the
sets the value of the property
gets the value of the minimum price property
replaces the with the given dimensions
adds a new item with the given values
create an instance of
returns the user defined location defined in the user defined user defined
sets the value of the user defined location property
create an instance of
sets the value of the minimum price property
sets the value of the property with the given name
sets the city location
sets the value of the given string
sets the value of the country
create an instance of
lookup a set of values for the given lookup request
sets the request
gets the value of the browse node id property
sets the value of the browse node id property
create an instance of
gets the value of the is category root property
sets the value of the is category root property
returns the music label
create an instance of
returns the properties of the node
sets the value of the properties property
sets the value of the aspect ratio property
returns the child node
sets the value of the children property
creates a property object
returns the ancestors node of this node
sets the value of the music label property
sets the value of the ancestors property
returns the top
sets the value of the top property
create an instance of
gets the new
sets the value of the new releases property
set the id of the browse node with the specified value
create an instance of
set the name of the node
sets the value of the root node
sets the value of the property
sets the node with the given value
adds a descendant node
create an instance of
sets the top level top of the top of the top level
gets the neighborhood
creates a new
create an instance of
adds a request to the request
adds the given information to the current page
sets the information
sets the value of the neighborhood property
returns the total traded price
create an instance of
sets the value of the sub total property
sets the value of the property
adds the items that have been saved in the cart
set the list of saved saved data items
gets the value of the cart id property
sets the value of the cart id property
create an instance of
gets the value of the property
sets the value of the property
gets the merge cart
sets the value of the merge cart property
get the cart id by its id
create an instance of
this method returns the of the cart
returns the cart with the given value
returns the cart with the given values
gets the value of the property
search for the specified
sets the list of request
create an instance of
gets the value of the quantity property
sets the value of the quantity property
sets the value of the property
create an instance of
returns the associate tag
sets the value of the associate tag property
gets the assembly instructions
create an instance of
add an item to the cart
add a cart item with the given id
sets the value of the quantity
add an item with the given name
add an item with the given id
create an instance of
adds a new value to the meta data
sets the meta data
adds the given child to the browse node
sets the browse node
create an instance of
creates a new image
create an instance of
sets the value of the assembly instructions property
gets the value of the list id property
create an instance of
sets the value of the list id property
create an instance of
create an instance of
sets the value of the power property
returns the product group
create an instance of
sets the value of the product group property
create an instance of
gets the value of the product page property
sets the value of the product page property
create an instance of
create an instance of
create an instance of
sets the value of the sort property
lookup the request with the given value
create an instance of
set the delivery method
sets the request
create an instance of
lookup the request with the given value
looks for the request with the given value
returns the assembly required
lookup the merchant object with the specified value
maps the given value to a product group
create an instance of
returns the list of request page api with the given value
returns a list of the request group values for the given list
search for the given value with the given name
search for a request with the given value
create an instance of
create an instance of
sets the value of the parameter with the given name
sets the value of this parameter
create an instance of
sets the value of the assembly required property
search for a node with the given id
lookup the request with the given values
sets the browse node id
create an instance of
add the given to the
sets the
creates a new item
returns the search index
this method is used to get the response with the given value
returns the cart with the given values
create an instance of
sets the value of the search index property
create an instance of
sets the value of the property
sets the value of the title property
returns a new decimal with units
sets the response with the given value
performs an exchange
sets the transactions
create an instance of
gets the transaction item id
sets the value of the transaction item id property
create an instance of
sets the value of the quantity property
returns the unit price
sets the value of the unit price property
create an instance of
returns the total price of the
sets the value of the total price property
returns the child transaction item
sets the value of the child transaction items property
create an instance of
sets the transaction item with the given value
sets the value of the field with the given quantity
gets the value of the audience rating property
sets the price of the specified price
adds a price item with the given price
sets the value of the transaction
sets the value of a child transaction item
create an instance of
create an instance of
sets the value of the property
sets the value of the title property
adds a header to the current request
sets the header
create an instance of saved saved state
returns the swatch image
sets the value of the swatch image property
create an instance of
returns the thumbnail image
create an instance of
sets the value of the thumbnail image property
sets the value of the audience rating property
returns the tiny tiny image
sets the value of the tiny image property
create an instance of
create an instance of
create an instance of
sets the color of the swatch image
sets the value of the image
sets the thumbnail image
create an instance of
sets the image to be used as a image
sets the medium image to be used by this image
sets the value of the large image property with the given value
sets the value of the specified category
create an instance of
returns the response group with the given values
create an instance of
create an instance of
sets the value of the form field to the given value
sets the value of the title property
gets the value of the total property
sets the value of the total property
create an instance of
gets excerpt of excerpt
sets the value of the excerpt property
returns an instance of a with the given number of
returns a search object containing the given excerpt
create an instance of
adds the values to the group with the specified values
returns the number of the
sets the value of the number property
create an instance of
add a new to the track
sets the value
sets the track
create an instance of
adds a new purchased item to this price
adds cart items to cart cart cart
sets the cart item
create an instance of
returns the units of the units
sets the value of the height property
returns the length of the attribute
sets the length attribute of the object
create an instance of
returns the weight of the unit
sets the weight
returns the text content of the text file
returns the width of the component
sets the value of the width property
relative dimensions of the resolution
create an instance of
constructs a package compartment with given dimensions
apply a weight of a unit to the target
relative dimensions of the package dimensions
sets the value of the text stream property
create an instance of
creates a new empty cart item with the given values
sets the items
create an instance of
creates a new argument object
sets the request with the given id
sets the request with the given id
create an instance of
set the id of the seller listing
set the values of the group with the given values
create an instance of
simulates a list of sponsor
sets the value of eligibility requirement property
create an instance of
sets the value of the header
sets the value of this field with the specified code value code
create an instance of
adds a new review to the review
sets the review
returns the release date
create an instance of
create an instance of
sets the value of the customer id property
sets the value of the release date property
sets the name of the code reviewer code
sets the nickname of the user
sets the value of the code reviewer code property
create an instance of
replaces the alternate version of the alternate version with the specified
sets the alternate version
create an instance of
create an instance of
search for an actor with the given value
create an instance of
search for artist with given value
create an instance of
sets the merchant object
search for availability with a specific value
create an instance of
set the value of the name property
sets the value of the page
returns a code code with the given code value code
sets the value of the property with the given value
gets the back back
sets the value of the code merchant property code
create an instance of
search the search rating with the values of the given search rating
adds a collection of values to the collection
sets the collection
create an instance of
search for a item with the given value
create an instance of
creates a new list item
this method is called when the user selects a request with the
create an instance of
sets the value of the back seller property
search for a node with a given value
create an instance of
add a new shipment to the shipment
create an instance of
sets the shipment
search for a city by a string
create an instance of
returns the first item in the composer
returns the lowest price of the flight
sets the value of the lowest price property
create an instance of
returns the highest price
sets the value of the highest price property
searches the request with the given value
returns a alternate alternate version of this alternate alternate alternate versions representation
gets the value of the single merchant id property
sets the value of the single merchant id property
create an instance of
subtracts the values from the given price and returns it
adds a variation value to the list
searches the request with the given value
adds a price to the stock price
adds a price item with the given price
adds a variation summary with the given value
create an instance of
sets the value of the item
gets cart item id
sets the value of the cart item id property
create an instance of
modifies an item in the cart
modifies an item id by its value id
sets the value of the cart item with the specified value
create an instance of
searches the request with the given value
create an instance of
simulates a browse node with a property value
returns the band material type
sets the property
this method is used to get the delivery method
create an instance of
search for a list of existing values
sets the request
lookup the request with the given values
sets the request
sets the value of the guide property
search for a specific request
sets the number of results to be processed
sets the value of the code list page code property
returns a list with all the values in the list
set the guide with the given value
sets the list value for this list search result
set the value of the my users attribute
search for the given date with the given value
set the value of a simple header
sets the first value of the first tag
sets the last value of the current value
returns the cart items
sets the value of the items property
creates a new
creates a new
search for a value
creates a new request with the given value
creates a new request with the given cart
creates a cart request object based on the values contained in the
sets the value of the band material type property
sets the value of the list property
returns a new request with the given value
returns a new tagged value with the given name
set the value of a simple header
sets the first element of the list
sets the value of the last tagged value
sets the item
gets the rating
sets the value of the rating property
searches for keywords with keywords name
sets the lists of the list
this method returns a distinct list for a given value
returns the aggregate spread lists for the given value
sets the first value in the list
gets rated by the user
sets the last value of the last in the
sets the value of the rated by property
sets the rating with the given value
sets the value of the comment property
sets the value of the date property
performs a request with the given value
sets the feedback by its value
search for purchase with the given value
creates a new
creates a new
sets the value of the cart using id property
create an instance of
creates a new
creates a new instance of
schedule a search with the given value
gets the value of the property
modify the values of the cart
sets the request
sets the value of the property
returns the help type
sets the value of the help type property
returns the registry number
sets the value of the code request with minimum code property
sets the about property
sets the help request type
sets the value of the registry number property
adds a new group to the response group
search for music by the given string
sets the value of the list name property
gets the is verified
returns the included
sets the value of the is verified property
sets the value of the url
sets the image height
search for an item with the given neighborhood
apply a width to the image
sets the value of the boolean property
sets the value of the property
sets the value of the property
searches the request with the given value
gets the value of the total items property
lookup the request of the request
sets the request
sets the value of the total items property
this method looks for a request that matches the value
gets the owning merchant id
this method is used to get the value of the
sets the value of the included property
sets the value of the owning merchant id property
gets the date of the date
gets the promotion id
sets the value of the date created property
searches the request with the given value with the given value
sets the value of the promotion id property
gets the date
sets the value of the date property
gets the promotion category attribute of the promotion category object
search for the first value in this group
sets the value of the promotion category property
gets the merchant promotion id
search for review with review history
sets the value of the merchant traits id property
sets the value of the customer name property
gets the value of the group claim code property
sets the value of the group claim code property
gets the partner name
search for a search index with the given value
returns the coupon combination type
sets the value of the partner name property
sets the value of the coupon combination type property
search for a search with the given value
returns the additional name
sets the value of the start date property
sets the value of the additional name property
search for the given value with the given value
sets the value of the end date property
gets the value of the required property
gets the terms and conditions
searches the request with the specified value
sets the value of the terms and conditions property
gets the value of the eligibility requirements property
sets the value of the eligibility requirements property
sets the value of the image property
stores a value with the given value
gets the
sets the value of the property
search for tag search item
gets the value of the item property
sets the value of the item property
sets the value of the required property
searches for the given string with the given value
gets the value of the total vote property
returns the message
sets the value of the total votes property
sets the value of the message property
searches the request with the title and returns the result
set merchant id
gets the value of the total times read property
sets the value for the given id
sets the value for the given id
sets the value of the total times read property
search for a request with the given value
sets the value for the given field
add a merchant payment promotion
sets the value for the specified group
set the value for the combination combination
sets the audience rating
sets the value for the specified date
p xyz e
sets the value for the given field
sets the value for the given traits
sets the value for the given
sets the value of the list
sets the value of the property with the specified detail field
sets the value of the given string
sets the value for the given message
adds a list of datatypes
sets the value of the list attribute
returns the degree of distinct tags
sets the value of the distinct tags property
returns a list of all the elements of this list
gets the
maps the specified code operation code to the specified value
search for a list of nodes with the given
sets the list of browse nodes to show
returns a list of all items in the list
adds a list of pages to this one
sets the response with the specified value
search for customers with the given values
sets the customers
returns a list of objects that have the same date
adds the feedback
sets the feedback
sets the date value of the date field
adds the given to the current cg
sets the top seller
sets the value of the customer name
returns the tags header with the given value
returns the type
returns the distinct items of this item
sets the value of the code list code property
sets the value of the type property
sets the partner name
returns the value of the code header field code with the specified
sets the value of the first property
returns the component type
sets the last value of the current element
sets the value of the component type property
adds the values of the given tag
adds a list of additional additional attributes to this one
sets the tag
returns a list of all the comments
gets the percent off
sets the value of the percent off property
sets the value of the property
sets the value of the amount property
returns the fixed amount of time in the database
returns a list of image objects
sets the value of the currency code property
sets the value of the fixed amount property
returns the formatted price
sets the value of the formatted price property
returns the ceiling of the ceiling
sets the value of the property
returns a list of all the rating
sets the value of the code code property
sets the value of the ceiling property
set the value of the specified value
sets the value of the field with the given value
returns a list of all the that have the given value
sets the value of the property with the specified value
sets the value of the with id property
gets the value of the listing page property
sets percent value to the value of the percent
sets the value of the listing page property
returns a list of all the times that this object has
sets the value of the pay pal i i
gets the offer status
apply the value of the specified value
sets the value of the offer status property
adds a list item to the list
returns a list of all tags satisfying the given tags
sets the list item value for this item attributes
keywords with keywords
sets the selected page with the specified id
set the request status to the specified value
records a search group
set the search request with the given value
sorts the user listing with the specified value
set the search request title
gets the transaction id
add arguments to arguments
setter of the property tt argument tt
sets the value of the transaction id property
gets the value of the narrow by property
sets the value of the narrow by property
looks up a list of all the values for the given list
sets the list of request
sets the values of the bin
sets the value of the i set with b property
sets the bin
sets the value of the code product code property
returns the current viewed product
returns the list of products with the given values
sets the similar viewed product
sets the value of this property
set the role
returns the ancestors of the browse node
gets the transaction date
gets the value of the cart property
sets the value of the transaction date property
sets the value of the items property
add an item with the given id
add a new request to the cart
gets the value of the transaction date date epoch property
add an purchase collection
add an item to the cart
sets the value of the transaction date epoch property
adds a new set of values to the response group
gets the value of the property
gets the battery description
sets the value of the property
search for the list of values for the given list of
sets the list of request
gets the value of the property
sets the value of the property
sets the value of the specified string
returns a string with the specified value
gets the value of the customer id property
returns a customer with the given values
sets the request
sets the value of the customer id property
returns cart items
adds a seller feedback to the current
sets the value of the cart items property
sets the value of the period with the specified value
sets the seller feedback rating
gets the value of the ordering customer id property
gets the saved for later restored
sets the value of the ordering customer id property
adds a new accessory
sets the accessory
sets the value of the for for later items items property
gets the value of the totals property
retrieves a customer with the given value
retrieves the content of a response with the given values
sets the value of the totals property
returns the transaction items
sets the value of the transaction items property
sets the value of the battery description property
gets the
gets the value of the is link property
sets the value of the is link property
sets the value of the property
sets the value of the
sets the value of the content
sets the
sets the transaction id
set the seller id
gets the value of the similar viewed products property
sets the value of the condition
sets the value of the similar viewed products property
sets the value of this transaction
sets the transaction date
gets the other categories similar products property
gets the value of the feedback page property
sets the value of the simple property with the given name
sets the value of the feedback page property
sets the value of the other categories similar product property
sets the value of the transaction id property
adds a new group with the given values
sets the id of the transaction
lookup the request with the given values
set the value of the cart id
sets the transaction totals
sets the feedback page for the page
sets the transaction item
set the value of the field with the given value
sets the seller id
sets the value of the field with the given transaction
set the value of the field with the given value
set the value of the field with the given value
adds a value to the set
returns the parameters with the given values
sets the parameter
sets the value of the cart items
sets the merchant object with the given value
adds the given set of values to this set
sets the saved saved state of the item
sets the value of image set
sets the list of
sets the value of the list
submits a product
sets the top of the top of this matrix to the given
check if categories are equal
sets the other categories similar product
creates a new
returns an instance of a product
subtracts all products from another product
adds the given information to this group
adds the given information to this group info object
sets the operation information
sets the value of response group information property
gets the value of the listing id property
returns the parent of this collection
returns the parent of this code collection with the specified value
returns the rating
sets the value of the listing id property
sets the value of the rating property
gets the value of the property
sets the value of the votes property
sets the value of the counter
adds a new number to this customer
adds a customer customer customer customer
sets the customer
gets the reviewer
sets the value of the reviewer property
returns the battery type
sets the response with the given value
gets the value of the sku property
applies the lists of values in the list with the given values
sets the value of the sku property
sets the value of the summary property
sets the value of this field
sets the message to be used for the given value
modify an existing cart item
sets the items
gets the value of the property
sets the value of the property
sets the items in the transaction
sets the value of the rating property
sets the value of the property
sets the value of the property
sets the customer id
sets the reviewers review
sets the voting number of the story
sets the value of the date field
sets the value of the summary
sets the value of the counter
sets the value of the content property
adds a new value to the total number
gets the value of the property
adds a set of values to the seller
sets the value of seller
adds the given nodes to the browse tree
sets the value of the property
adds a parameter to the list of parameters
modify an operation request
modify an existing cart cart
sets the value of the battery type property
sets the name of the parameter
sets the value of this object
gets the value of the ship property
sets the value of the tracker ships property
sets the value of the specified user defined by the given name
sets the city
sets the value of the specified state
sets the value of the country header with the given value
gets the value of the is international property
add a set of values for the given lookup request
sets the request
sets the value of the tracker ships international property
store the value of the request

sets the value of seller
gets the value of the sub condition property
sets the value of the sub condition property
returns the condition note
sets the value of the condition note property
sets the attributes value of the given property
sets the attributes value with the given value
sets the attributes of the note
sets the attributes for the attributes with the given
sets the attributes for this code claim with the given code
sets the response with the given value
adds the items with the given values to the lookup
sets the value of the index name property
returns the results
sets the value of the results property
gets the value of the pages property
sets the value of the pages property
returns the material type
gets the value of the relevance rank property
sets the value of the relevance rank property
gets the offer page value for this offer
sets the value of the offer page property
maps the given value to the given string
maps the search index with the given value
maps the specified index to the specified value
sets the value of the query with respect to search query
sets the value of the code search results code property
search the list of values for the first occurrence of the given
sets the value of the property
looks up a list of existing values for the specified
sets the list of request
sets the value of the seller property
sets the value of the material type property
sets the exchange listing
set the listing of the listing
sets the value of the property
sets the value of the pay pal field code listing
sets the value of the pay pal field code listing
sets the value of the pay pal field code listing
sets the value of the pay pal field code listing
the ship with the given id
sets the name of the field
convert the given card to a
sets the value of the field with the specified address
sets the value of the property with the specified
sets the value of the field with the given address
sets the value of the pay pal field code selected code
sets the city
sets the state of the
sets the value of the postal address property
sets the country address
generates a customer listing
sets the value of the date field
this method is used to determine the value of the
gets the search inside keywords
sets the status of the given value
sets the value of the search inside keywords property
sets the value of the pay pal field
sets the value of the pay pal field code payment code
places a value in the form
sets the seller listing
adds a string to the list
sets the title of this item
returns a response with the given values
sets the operation
sets the response with the given value
the
adds the list of values to the list of
gets the value of the seller nickname property
sets the list
sets the value of the seller nickname property
returns the checksum
sets the value of the checksum property
returns the page type
sets the value of the page type property
returns the page number
gets the value of the variation page property
sets the value of the page number property
returns the sequence number
sets the value of the sequence number property
sets the value of the variation page property
creates a new
sets the value of the code inside code property
prepend a page to the page
sets the value of a sequence number
returns the list owner
set the value of the request header
returns excerpt of a single excerpt
sets the value of the list owner property
sets the delivery method
adds the values for feedback in the feedback
sets the feedback range
set the date with the given date
returns the meta data for this meta data object
sets the value of the meta data property
p specifies the value of the code decimal code property
sets the request with id type id
returns the units whose dimensions is specified
sets the request header
product
p add similar product
request that the merchant item is submitted by the merchant lookup
returns the total price of the item
sets the value of the item total property
sets the request with the id passed to the
sets the value of the cart item id
searches the request with the given values
sets the value of the code code property
exchange cart id
sets the dimensions of the item
lookup the request with the given values
relative size of the item
sets the value of the delivery id property
relative weight of item weight
relative width and width height of the item
set the value of the cart id property
sets the request with the review page
set the value of the cart with the given name
gets the value of the eligibility requirement type property
sets the value of the cart using the quantity
sets the value of the eligibility requirement type property
sets the value of the field with the given name
sets the request with the given value
set the product group
returns the amount of currency in the currency
sets the value of the currency amount property
set the value of the owner id property
sets the value of the request header with the given value
sets the value of the requirement requirement property with the given string
sets the value of the property with the quantity
sets the value of the cart item
sets the currency amount
sets the metadata for this cart
sets the search inside of the search
creates a new customer object with the given price
sets the items in the cart
sets the value of the tag with the specified id tag
sets the value of the specified property
sets the value of the counter
stores a value with the supplied value
sets the request with the given value
returns the cart to be edited
sets the value of the items property
sets the value of the lookup page property with the given value
sets the cart request
sets the request value to the given value
sets the value of the cart id with the given value
merges the cart object with the given value
sets the value for this request
replaces all existing values of the cart with the given values
sets the cart for the given cart
modify an existing cart item
modify the values of the cart group
returns a list of subjects with the given values
returns the bin name
sets the subject
sets the value of the bin name property
gets the value of the bin item count property
sets the value of the bin item count property
returns the tracks of the data
sets the
set the value of the bin
sets the bin count
returns the guide id
adds the values of the given array of values to this bin
sets the value of the guide id property
sets the bin parameter
sets the guide to the given value
gets the value of the merchant property
sets the value of the merchant property
returns a list of language names for the given language
sets the language
adds the given list of
sets the request
gets the offer attributes attribute of the object
sets the value of the offer attributes property
adds a value to the data collection
sets the key value pair to the given value
returns the points
sets the value of the points property
sets the value of the birthday property
gets the value of the percentage property
sets the value of the percentage property
gets the value of the property
sets the value of the property
gets the wish list id
sets the value of the wish list id property
sets the value of the rating property
sets the digital state of this offer
add a rating with the given value to this one
sets the seller seller
this is a convenience method that will be called when the user
sets the offer attributes associated with this offer
returns the location of the
fills the offer with the specified
sets the value of the points property
sets the value of the location property
sets the value of the property
sets the offer listing
sets the value of the type property
sets the start date of the recurrence
sets the date value of the date
sets the customer id
gets the value of the eligibility requirement description property
sets the value of the postal address
returns the lowest price
sets the value of the eligibility requirement version property
sets the value of the customer
sets the value of the lowest new price property
gets the description
sets the value of the story with the given id
returns the lowest used price
sets the value of the description property
sets the value of the lowest used price property
sets the value of the property
returns the lowest price
returns a customer with the given reviews
sets the value of the lowest price property
sets the value of the field customer with tags
returns the lowest price
sets the promotion summary
sets the value of the lowest price property
sets the customer reviews
sets the value of the field with the given guid
sets the value of the start date property
returns the total new value
p set the value of the code end date code property
sets the value of the total new property
this method is used to determine the promotion summary with the given
sets the value of the summary field
gets the total used
sets the value of the
sets the input encoding
sets the value of the total used property
sets the input encoding
gets the value of the total property
set the user agent
sets the value of the total property
returns true if the user agent is set to be the user
gets the value of the total property
sets the service url
sets the value of the total property
returns true if the service is a service
adds a new price record to the exchange
sets the host proxy
returns true if the proxy host is set
adds a new price for the given price
sets the exchange with the lowest priority price
sets the proxy port
sets the exchange with the lowest priority price
returns true if the proxy port is set
add a new new
add a new entry to the set of total
sets the sum of the
sets the sum of the
returns the calendar type
creates a new
create a new
sets the value of the calendar type property
search for the given search item
lookup the response item lookup
lookup the response browse node lookup
search for a list of all the items in the list
lookup the response list for the given list of lookup
search for a list of the customer
lookup the response for the response customer
lookup the response for the lookup
lookup the response with the given lookup request
returns the cart cart cart
adds a cart to the cart
create cart cart
returns the code unmarshaller code instance
modify cart modify modify cart modify modify cart
clears cart clear cart clear cart clear cart
lookup a response transaction lookup
generate the response with the given search criteria
lookup the lookup
lookup the response tag for the given lookup request
gets the value of the case units property
adds a required parameters to the request
read a stream from the input stream
sets the case diameter value for this update properties
returns the case material type
sets the value of the case material type property
returns the case thickness
sets the case thickness
returns the case type
sets the value of the case type property
gets the value of the catalog number property
sets the value of the catalog number property
gets the value of the description property
sets the value of the description property
returns the chain type
sets the value of the chain type property
returns the type
sets the value of the type property
gets the size
sets the value of the size property
sets the value of the color property
returns the compatibility text
sets the value of the compatibility property
returns the hardware hardware type
sets the value of the computer hardware type property
returns the computer platform
sets the value of the computer platform property
returns the value of the code connectivity code property
sets the value of the connectivity property
gets the speed limit event
sets the value of the continuous speed property
gets the country of the origin
sets the value of the country of origin property
gets the value of the cpu manufacturer property
sets the value of the cpu manufacturer property
gets the value of the bidder amount property
sets the value of the sp speed property
returns the cpu type
sets the value of the cpu type property
gets the value of the property
sets the value of the property
gets the value of the rating owned property
sets the value of the rating property
gets the delay between shots
sets the delay between shots
gets the delivery option
sets the value of the delivery option property
sets the value of the department property
returns the club type
gets the value of the decimal number property
sets the value of the club type property
sets the value of the decimal number property
returns the color of the dial color
sets the value of the dial color property
gets the dial window type
sets the value of the dial window material type property
returns the digital zoom
sets the digital zoom
gets the display size
sets the value of allowing display dimensions
gets the value of the set property
sets the value of the set piece quantity property
gets the value of the property
sets the value of the layers property
gets the value of the description property
sets the value of the description property
gets the value of the property
sets the value of the property
gets the value of the property
sets the value of the property
gets the value of the rating owned property
sets the value of the rating property
returns the description display support description for the
sets the value of the external display support description property
returns the type
sets the value of the type property
sets the value of the fax number property
gets the time of first issue lead time
sets the value of the first issue lead time property
get the disk drive description
sets the value of the disk drive description property
returns the fixed shipping charges
sets the value of the fixed shipping charge property
returns the type
sets the value of the type property
returns the graphics card interface
sets the value of the graphics card interface property
returns the description of the graphics object
sets the value of the graphics description property
returns the size of the offscreen
sets the value of the graphics memory size property
returns the attribute
sets the value of the attribute property
returns the bridge system
sets the value of the bridge system property
returns the thickness of the eye
sets the value of the picks thickness property
gets the pickup configuration
sets the value of the pickup configuration property
gets the value of the hard disk count property
sets the value of the hard disk count property
gets the value of the hard disk size property
sets the value of the hard disk size property
returns whether the focus is a
sets the value of the has auto focus property
returns the display color support
gets the value of the has mode property
sets the value of the display color support property
sets the value of the has mode property
gets the value of the has in camera editing property
sets the value of the has in camera editing property
gets the value of the has red eye reduction property
sets the value of the has red eye component property
gets the value of the has self timer property
sets the value of the has self timer property
gets the value of the has mount property
sets the value of the has mount property
gets the value of the has video out property
sets the value of the has video out property
gets the value of the has property
sets the value of the has property
returns the material type
sets the value of the material type property
gets the hours of the operation
sets the value of the hours of operation property
gets the value of the included software property
sets the value of the included software property
gets the value of the includes property
sets the value of the includes property
gets the value of the property
sets the value of the property
gets the value of the ingredients property
sets the value of the ingredients property
returns the instrument key
sets the value of the instrument key property
gets the value of the is property
sets the value of the is property
sets the value of the isbn property
returns the film color type
gets the value of the is email notify available property
sets the value of the film color type property
sets the value of the is email notify available property
gets the value of the is property
sets the value of the is property
returns the name of the flavor
sets the value of the flavor name property
gets the value of the is lab created property
sets the value of the is created property
gets the value of the is property
sets the value of the is property
returns the iso
sets the value of the property
get the number of the
sets the value of the issues per year property
returns the dimensions of the item
sets the value of the item dimensions property
returns the keyboard description
sets the value of the keyboard description property
returns the gl group
sets the value of the ds product group group property
gets the club flex property
sets the value of the club flex property
returns the languages used in this
gets the club
sets the value of the club property
sets the value of the languages property
returns the legal
sets the value of the legal property
returns the line voltage of the
sets the value of the line voltage property
returns the list price
sets the value of the list price property
returns the focus range
sets the value of the macro focus range property
returns the type
sets the value of the type property
gets the value of the property
sets the value of the property
returns the players orientation
sets the value of the hand orientation property
gets the value of the manufacturer description property
sets the value of the manufacturer description property
gets the value of the hard disk size property
sets the hard disk size
gets the value of the manufacturer maximum age property
sets the value of the manufacturer maximum age property
gets the hard disk interface
sets the value of the hard disk fs property
gets the value of the manufacturer minimum age property
sets the value of the manufacturer minimum age property
returns the platform
sets the value of the hardware platform property
gets the value of the manufacturer parts description
sets the value of the manufacturer parts description property
returns the material type
sets the value of the material type property
gets the maximum
sets the maximum
returns the maximum depth of the maximum color
sets the value of the maximum color depth property
gets the maximum focal length
sets the maximum focal length
gets the maximum value of the maximum high resolution
sets the value of the maximum high resolution image property
returns the maximum horizontal value of the maximum
sets the value of the maximum horizontal resolution property
returns the maximum number of images that should be scaled to
sets the value of the maximum limit images property
returns the maximum resolution of the resolution
sets the maximum resolution
gets the maximum speed
sets the maximum speed
returns the maximum vertical resolution
sets the value of the maximum vertical resolution property
gets the maximum weight recommendation
sets the maximum weight recommendation
gets the value of the memory slots available property
sets the value of the memory slots available property
returns the metal
sets the value of the metal stamp property
gets the value of the is adult product property
returns the metal organizational unit
sets the value of the metal type property
sets the value of the is adult product property
returns the value of the mini description
sets the value of the mini movie description property
returns the minimum focal length
sets the minimum focal length
gets the minimum limit
sets the minimum speed value
sets the value of the model property
gets the value of the model year property
sets the value of the model year property
gets the modem description
sets the value of the modem description property
returns the monitored monitor
sets the monitor size
gets the value of the is property
sets the value of the is property
returns the monitor viewable visible size
sets the monitor view size
returns the mouse description
sets the value of the mouse description property
gets the value of the property
sets the value of the property
gets the style of the musical style
sets the value of the musical style property
returns the native resolution
sets the value of the native resolution property
returns the network description of the network interface
sets the value of the network interface description property
returns the notebook display technology
sets the value of the notebook display technology property
gets the value of the notebook device description property
returns the lens type
sets the value of the notebook device description property
sets the value of the lens type property
gets the value of the number of property
sets the value of the number of property
gets the value of the number of issues property
sets the value of the number of issues property
gets the value of the number of items property
sets the value of the number of items property
gets the value of the number of keys property
sets the value of the number of keys property
gets the value of the number of pages property
sets the value of the number of pages property
gets the value of the number of property
sets the value of the number of property
returns the number of active shots
sets the value of the number of rapid count of the
gets the value of the number of stones property
sets the value of the number of stones property
gets the value of the number of strings property
sets the value of the number of strings property
gets the value of the number of tracks property
sets the value of the number of tracks property
returns the zoom zoom
sets the zoom
gets the original release date
sets the value of the original release date property
gets the value of the output property
sets the value of the output property
returns the dimensions of the package
sets the value of the package dimensions property
gets the value of the property
sets the value of the property
returns the minimum color that is used to draw the
sets the value of the minimum color property
returns the shape
sets the value of the shape property
gets the value of the method property
sets the value of the method property
gets the surface
sets the value of the surface property
returns the type
sets the value of the type property
gets the value of the property
sets the value of the property
gets the value of the price rating property
sets the value of the price rating property
returns the number of processors
sets the value of the processor count property
sets the value of the media type property
returns the value of the code memory slots available code property
sets the value of the memory slots available property
gets the value of the tag property
sets the value of the tag property
returns the excluded po po
sets the value of the po box shipping excluded category property
sets the value of the publication date property
returns the reading level
sets the value of the reading level property
gets the value of the recorder record count property
sets the value of the recorder track count property
sets the value of the region code property
returns the region of the region of the region
sets the value of the region of origin property
returns the value of the code removable memory code property
sets the value of the removable memory property
returns the resolution mode
sets the value of the resolution mode property
sets the value of the return policy property
gets the ring size
sets the value of the ring size property
gets the safety warning
sets the value of the safety warning property
returns the maximum number of secondary cache objects that have been
sets the value of the secondary cache size property
returns the setting type
sets the value of the setting type property
gets the sold in store
sets the value of the sold in stores property
gets the size of the
sets the value of the size per property
returns the skill level
sets the value of the skill level property
returns the sound card description
sets the value of the sound card description property
gets the value of the speaker count property
sets the value of the speaker count property
gets the speaker description
sets the value of the speaker description property
gets the value of the stone property
sets the value of the stone property
gets the value of the stone color property
sets the value of the stone color property
gets the value of the stone cut property
sets the value of the stone cut property
returns the color of the stone shape
sets the value of the stone shape property
gets the value of the light weight property
sets the value of owner weight
returns the
sets the value of the operating system property
sets the value of the property
gets the value of the subscription length property
returns the sensor resolution
sets the value of the subscription length property
sets the sensor resolution
returns the system bus speed
sets the system bus speed
gets the system memory size limit
sets the system memory size max property
gets the system memory size
sets the system memory size
returns the system memory type
sets the value of the system memory type property
returns the page indicator
gets the value of the package quantity property
sets the value of the page indicator property
sets the value of the package quantity property
gets the release date attribute of the dates object
sets the value of the release date property
gets the total diamond weight
sets the value of the total days weight property
gets the value of the total external free property
sets the value of the total external free property
gets the value of the total ports property
sets the value of the total ports property
returns the total number of
sets the value of the total national weight property
gets the value of the total internal free property
sets the value of the total internal free property
gets the total metal weight
sets the value of the total research weight property
gets the value of the property
sets the value of the property
gets the value of the total parallel ports property
sets the value of the total parallel ports property
gets the value of the property
sets the value of the property
gets the value of the property
sets the value of the property
gets the value of the total serial ports property
sets the value of the total serial ports property
gets the value of the property
sets the value of the property
gets the value of the property
sets the value of the property
gets the value of the property
sets the value of the property
gets the value of the property
sets the value of the property
gets the value of the product site cat date property
sets the value of the product site launch date property
gets the value of the variation property
sets the value of the variation property
returns the product type name
gets the value of the variation description property
sets the value of the product type name property
sets the value of the variation description property
gets the value of the product type property
gets the value of the vendor property
sets the value of the product type property
sets the value of the vendor property
gets the value of the property
sets the value of the property
returns the watch movement type
sets the value of the watch movement type property
gets the website
sets the value of the website property
returns the of in the light
sets the value of the water resistance depth property
gets the value of the frequency property
sets the value of the frequency property
sets the attributes of the actor
sets the attributes address of the assistant
returns an attributes object for the given maximum age
this method returns the attributes of the item attributes
sets the attributes of the merchant item
returns the attributes of the merchant item with the given values
apply the given value to the current aspect ratio
maps the given value to the given address
returns the attributes of the item
returns the attributes of the item
format the attributes of this audio format
returns the attributes of the specified values
returns the attributes of the merchant item
returns the attributes of the item
returns the attributes of the item attributes
returns the attributes of the item
sets the attributes of the merchant item
sets the attributes to the battery description
sets the attributes of this battery to a battery
returns the attributes of the item
maps the given value to the given value
returns the attributes of the merchant item
adapts a calendar type to a calendar type
sets the attributes value of the camera manual
gets the value of the removable storage property
stores the attributes of the item
sets the value of the removable storage property
returns the attributes of the item
returns the attributes attributes of the given item
returns the attributes of the item
returns the required voltage range
sets the attributes of the catalog
sets the value of the required voltage range property
sets the attributes of the value of this item
sets the value of the code merchant item attributes code property
returns the attributes of the item
sets the attributes of the
sets the attributes of the
returns the attributes of the element
convert a hardware item type to a computer type
returns an attributes object for the given value
sets the attributes of the given value to the given value
returns the running time

sets the value of the running time property
sets the attributes of the given country
sets the attributes of the given address
returns the name
sets the attributes of the value of this item
sets the value of the name property
relative attributes to the unit of unit
sets the attributes of the value of this item
returns the attributes for the given creator
sets the attributes of the given value
sets the attributes of the given value
records the attributes of a delay
sets the attributes of the delivery option
sets the attributes value of the specified department
description of the method
returns the material type
sets the attributes of the merchant item
sets the value of the material type property
sets the attributes of the dial color
maps a merchant to a given value
returns an attributes value by setting a value
returns the attributes of the item
returns the attributes size of the item
returns the attributes of the
returns the attributes value for the given number of attributes
sets the attributes of the value of this item
returns the attributes value for the given number of attributes
sets the attributes of the value of this item
sets the attributes of the value of this item
sets the attributes of the given value
sets the attributes of the value of this item
description of the method
returns the attributes of the item
sets the attributes of the item at the given value
sets the attributes value of the merchant item
adds a new to the list of times
description of the method
returns the attributes of the
sets shipping charges
sets the attributes of this
returns an attributes object with the given value
returns an attributes description for the given value
relative to merchant attributes of the object
sets the attributes value of the specified property
returns an attributes object for the given value
applies the attributes of the given value to the merchant attributes
sets the attributes of the
returns the attributes for the merchant item
the merchant item attributes for a merchant item
sets the attributes for this focus control
sets the attributes for this
sets the attributes for this camera
sets the attributes for this reduction component
sets the attributes for this property
sets whether or not this attributes is
sets the attributes for this video clip
sets the attributes value of this code merchant item code
returns the attributes of the item
sets the attributes of the given value to the given value
returns an attributes object with the specified value
sets whether or not include the attributes of this includes
sets the attributes of the given value
p returns the attributes of the attributes specified by the value
returns an attributes object for the given value
sets the attributes value of this code merchant item code
sets the attributes of the value of this item
sets whether or not the merchant item attributes should be available
sets the attributes value of this code merchant item code
add a value to the
sets the attributes value of this code merchant item code
sets the attributes of this item to the specified value
sets the value of the style property
sets the attributes of the given value to the given value
returns the attributes of the item at the specified
returns an attributes value for the given description
sets the attributes of the given value
sets the value of the code merchant item attribute code
sets the attributes of the legal value
applies the attributes of this object to a line
sets the attributes of the given price
returns the supported media size
sets the attributes of the given property
sets the value of the supported media size property
returns the attributes of the item
sets the attributes of the
sets the attributes of the manufacturer
sets the attributes of the manufacturer of the assistant
apply the merchant attributes based on the given value
absolute value of the age of this object
sets the attributes of the manufacturer parts
returns the attributes of the item
returns the attributes attributes of the given unit in the
sets the maximum color for the given value
returns the attributes attributes for the given
sets the attributes to the given value
sets the attributes for the given period
sets the value of the maximum resolution of the attributes
returns the attributes of the item attributes
returns the attributes attributes of the
sets the attributes resolution for the resolution
this method returns the attributes of the merchant item attributes
returns an attributes value for the number of days slots by merchant
sets the value of the merchant item attributes property
sets the value of the merchant item attributes property
description of the method
wraps the given attributes attributes
adds a to the
sets the attributes of the model
sets the attributes of the year
returns an attributes object description
relative attributes of the merchant item attributes in order to monitor
returns an attributes object that represents the number of days of
returns an attributes value by description
sets the attributes of the value of this item
applies the given value to the merchant attributes
maps a native resolution to the native resolution
this method will return the attributes of the
returns an attributes object description interface
returns an attributes technology from the list
description of the method
returns the attributes of the item
returns an attributes value by number
returns the attributes of the item
returns an attributes object with a given identifier
sets the attributes of the number of
returns the attributes of the item
adds an item to the list of people
sets the attributes of the item
returns the attributes of the merchant item
returns the attributes of the item with the given number of
returns the attributes of the item
sets the attributes for the given date
sets the attributes value of the merchant item
returns the attributes of the package with the given dimensions
sets the attributes of the
sets the value of the minimum color attributes with the given color
returns an attributes object with the given value
returns the attributes of the item
returns an attributes object for the given value
returns the attributes of the item
sets the attributes of the
sets the attributes of the phone number
sets the attributes of the given hardware
adds the values for pictures with the given values
returns the attributes of the given property
convert a value to a rating
returns the attributes of the item
returns the attributes of the item
sets the attributes of the tag
sets the attributes of the value of this item
sets the attributes of the publication date
sets the attributes value of the merchant item
returns the attributes of the channel
sets the value of the reading level attributes property
stores the value of the code merchant item attributes code property
sets the attributes of this code code
returns the attributes of the component
sets the attributes for the release date
returns the attributes of the method
sets the value of the code merchant item attributes code property
sets the attributes of the resolution
returns the attributes of the element
sets the value of the code merchant item code property
sets the attributes for the given value
sets the attributes of this sales restriction
sets the value of the code merchant item attributes code property
returns the attributes of the item
sets the value of the code merchant item code property
sets the attributes of the value of this item
this method will return the attributes for the flight in the
returns the attributes of the item
this method returns the attributes of the roll item
sets the attributes of the sound
sets the value of the merchant item attributes property
description of the method
adds the attributes to the list of features
returns an attributes object with the given value
sets the attributes of the color
returns the tax product
sets the attributes of the cut copy
sets the value of the tax field property
returns an attributes object with the given value
relative attributes of the unit weight
sets the attributes of the given value to the given value
sets the attributes of the subscription
returns the attributes for the given array of values
records attributes for the bus bus
adds a list of values with the given values
absolute attributes of the warehouse
sets the address attributes
absolute attributes of the warehouse
adds an array of values with the given values
sets the attributes of the merchant item
this method returns the maximum age of the object
sets the attributes of the indicator to the specified value
this method returns the value of elements in order
sets the attributes for the release date
set the analog attributes value
returns the attributes of the item
sets the attributes of the given field
apply the merchant attributes of the given weight
adds an artist with given values
sets the attributes of the merchant item
returns an element of the aspect ratio of the given value
the attributes of the ports
sets the value of the field attributes with the given string
relative attributes of the merchant item attributes
sets the value of the field with the specified property
sets the value of the code merchant item attributes code property
returns a list of all the attributes for the given value
relative weight of the merchant item attributes
formats a list of existing values with the given values
returns the attributes value for the given number of attributes
adds a new author with author values
returns the attributes for the parallel parallel ports
sets the attributes of the next element in the list
returns the attributes value for the given number of attributes
sets the value of the band material type property
returns the attributes value for the given number of attributes
sets the value of the property attribute
sets the value of the serial ports property
sets the value of the field attributes with the given string
returns the attributes value for the given number of attributes
returns the attributes value for the given number of attributes
sets the attributes of the
returns the attributes value for the given number of attributes
description of the method
returns the attributes value for the given number of attributes
set the value of the battery type attribute
sets the attributes of the value of this item
sets the attributes of the material type
sets the attributes value of the merchant item
sets the value of the binding property with the given value
sets the value of the pal property with variation
the value of the brand property with the given value
sets the attributes value of this vendor
sets the value of the code attributes property type code property
sets the attributes of the given value
sets the values of the camera parameter
returns the attributes of the item with the given value
this method is used to convert a double property to a case
returns the attributes of the merchant item
sets the value of the code attributes with code property
returns the attributes resistance of the item
returns the attributes of the element with the given thickness
sets the value of the code merchant item attributes property
sets the value of the code attributes property code
sets the list of actor
sets the artist
sets the value of catalog number
sets the audio format
adds a list of values to the category
sets the author
adds the values for the given field with the given values
sets the camera manual features
sets the attributes of the item
sets the creator
sets the value of the type property
sets the director of this object
adds the given attributes to the current value
sets the feature
sets the attributes of the item
sets the format
sets the attributes of the type of the
sets the photo flash photo
sets the value of the size property
sets the list of picture format
returns an element of the data with the data type
sets the platform
sets the attributes value for the given string
sets the channel
sets the return method
sets the compatibility of the given string
sets the special features
maps the specified code model code with the specified
sets the list of supported image type
sets the value of the code attributes field code property
returns an element attributes for the given computer
sets the value of the code attributes code property
returns an element of the speed with the given value
sets the country attributes with the given value
sets the attributes of the item
the attributes of a unit element
sets the attributes of the item
returns an element of the list of attributes
sets the attributes value of the given string
adds an element to the list of values
sets the delivery attributes attribute of the customer object
this method returns the attributes of the delay between two objects
sets the value of the department attribute with the specified value
sets the attributes of the
sets the value of the dial color
sets the attributes of the
constructs a for a schematic from a given unit
returns a list of attributes for the given array of values
sets the color for the color support
display a object with the given size
returns an element of the of the piece with the given
sets the value of the property
sets the attributes of the item
sets the value of the property
sets the attributes of the item
sets the attributes of the item
sets the value of the attribute with the given attribute
adds the values of the given values to the
adds the given values to the
sets the attributes of the item
this is a convenience method that returns the description of the
sets the attributes of the type of the
sets the attributes of the fax
sets the values of the feature
sets the color of the film attributes
adds an item to the list of time tickets
sets the value of the code attributes name code property
description of the method
returns a list of attributes for the given values
adds the values for the given field
sets the attributes of the
sets the attributes of the
adds a list of items
sets the attributes of the genre
sets the attributes of the item
sets the attributes of the club
sets the attributes of the club element
this method is used to set the card interface
returns an element of the attributes of this graphics object
this method returns the attributes of the object
sets the attributes value of the attribute with the given value
sets the attributes of the bridge bridge
sets the thickness of the attributes for the pick shape
sets the value of the attribute with the given value
sets the value of the hand side orientation
sets the hard disk disk count
absolute value attributes concerning file
the fs workers with a hard disk disk disk file
sets the hardware platform attributes
sets the focus to the given boolean
sets the value of the code mode code property
sets whether or not the camera has an existing camera
sets the value of the reduction of property red
sets whether the attributes of this component are self
sets whether or not the mount is set
sets the value of the has video out attribute
sets whether or not the has a
sets the attributes of the material type
sets the value of the hours property
sets the value of the software attribute of the object
sets whether or not the given code value code includes the
this is a convenience method that can be used to determine if
sets the choices to the given values
sets the value of the instrument property
adds a list of values to the
sets the adult flag
sets the value of the property
sets the attributes of the item
sets the value of the property
sets the value of the flag with the given value
sets the value of the property
sets the attributes of the
sets the value of the property
sets the value of the property with the passed in year
sets the dimensions of the item
returns a new list of the attributes with the given value
sets the value of the label property
adds the values of the specified
sets the value of the languages with the given languages
sets the value of legal
returns an instance of a attributes lens attributes
sets the attributes of the given string
sets the attributes
sets the value of the property with the specified range
sets the attributes of the type of the
sets the attributes of the
sets manufacturer of the manufacturer
sets the manufacturer description
this method returns the maximum attributes for the payment
this method returns the value of the age with manufacturer
sets the manufacturer parts description parts
sets the value of the material type property
sets the values of the material type
this method returns the maximum attributes of the
sets the maximum color for the specified value
returns a list with the given focal length
sets the maximum value attributes to be displayed in the high bars
sets the maximum value of the maximum horizontal resolution
sets the maximum height for the given code item code
this method returns the attributes of the resolution
builds a item attributes object with the maximum speed limit
sets the maximum height for the vertical resolution
this method is used to set the maximum weight of the recommendation
sets the media type for the media type
sets the value of the abstract slots available count
sets the merchant attributes of the specified merchant item
sets the value of the type property
description of the method
sets the minimum allowed attributes of the focal
this method returns the minimum speed of the
sets the attributes of the model
sets the value of the year field model year property
sets the modem attributes description
this method returns the attributes of the monitor
returns an attributes object with the given attributes
sets the description of the mouse button with the given description
sets the attributes of the item
applies the style to the given string
sets the resolution attributes
set neighborhood attributes
description of the method
this method displays a list of technology attributes
description of the method
sets the attributes of the number
returns an element of the attribute with the given value
returns an element of the attributes of the given value
sets the attributes of the item
sets the attributes of the item
sets the attributes of the number
sets the number of items attributes with the given number of
sets the attributes of the item
sets the value of the code int with id code property
sets the value of the code attributes with id id code property
sets the attributes of the operating system
transform attributes elements
zoom method
release the date object
sets the value of output attributes
returns the dimensions of the given package
sets the value of the package quantity property
returns an element of the attributes of the given array of values
adds the given values with the given values
sets the attributes of the
sets the color of the color attributes with the given value
sets the attributes of the shape
sets the attributes of the method
returns an element of the surface attributes
sets the attributes of the type of the
sets the attributes of the
sets the phone number attribute
adds an element to the photo picture
adds the given values with the given values
returns an element of the list of attributes
returns an element of the attributes of the price
adds the values of the given values with the given values
returns the attributes of the
sets the attributes of the product group
launch a new date with a given value
sets the product type name
sets the attributes of the product type
sets the attributes of the tag
sets the publication date attribute of the publication object
set the value of the attributes property
sets the attributes of the item
sets the value of the reading level attribute
returns an element of the method with the given values
stores the value of the track count record count
sets the value of the region with the given value
sets the attributes of the region
returns an element of the policy for the specified value
release date attributes
sets the value of the code attributes code property
sets the value of the code attributes code property
sets the value of the required field attributes
sets the resolution mode
sets the value of the ring attributes property
this method returns the attributes of the time unit
sets the value of the property with the given name
sets the value of the code cache size code property
sets the attributes of the item
sets the attributes of the material type
returns a list of attributes for the given shoe group
sets the size of the attributes
sets the size of the attributes of the
sets the skills level for skill level
sets the attributes of the item
set the value of the field attributes in the
description of the method
returns an element of the attributes
description of the method
adds the given features to the list of features
sets the attributes of the
sets the color of the stone
sets the value of the stone attribute
returns an element of the shape with the given value
this method returns a new element with imaginary attributes
sets the attributes of the given value
sets the value of the style property
stores the subscription length
returns an element of the list of supported image types
sets the value of the supported media size
this method generates a for the bus of the speed
add an element attributes to the system
stores the elements attributes by system memory
add an element to the system
the target brand with the specified values
sets the value of the indicator with the given indicator
release the item attributes for the given value
sets the value of the title attribute
calculates the attributes of the weight
sets the total attributes of the
sets the sum of all the ports
the quantity of the object with the given weight
sets the total attributes of the internal internal internal internal internal internal
method to calculate the total attributes of the organizational unit
sets the value of the property
sets the value of the total parallel ports each number of the
sets the value of the property
sets the value of the property
sets the serial port number for the serial port
sets the value of the property
sets the value of the property
sets the value of the property
sets the value of the property
sets the attributes of the item
sets the value of the variation property
sets the variations of the list
sets the attributes value of the given string
sets the value of the watch of this code item movement type
returns an object containing the value of the attribute
sets the value of the property
sets the value of the frequency count property b
sets the age
sets the category
sets the category bin
sets the character
sets the list of compatible with this network
sets the data link protocol
sets the list focus
sets the
sets the form factor
sets the type set element
sets the gender
sets the ingredients set element
sets the interest
sets the language name
sets the list type set element
sets the length
sets the size
sets the color of the primary
sets the list of shoe size
sets the target brand
returns the value of the given object as integer
returns the value of the given object as a double
returns the value of the boolean as boolean
returns the value of the given character as a character
returns the value of the given object as a float
returns a string representation of this object
returns the agent at the specified index
returns the ith operator
returns the number of generations
returns the number of applied applied to the
sets the probability of the probability p
returns the size of the agents
executes the command
returns the printed results
sets the writing pipe
sets the base probability of the distribution
creates a new instance of the given
creates a new printer
gets the distance from the given
returns the distance between two
sets the value of the field
returns the distance with the specified
returns the distance of the specified
returns the distance with the specified
sets the from
sets the to string
returns a vector of all the elements in this set
sets the core
returns the core object
returns the params
returns the params
calculates fitness of all agents
returns the fitness of the fitness
sets the mem memory
returns the length of the list
returns the average fitness of the
an agent
compute the weighted layer
compute the layer
compares the specified object with this code operator code
returns the hash code for this operator
returns the name of the operator
returns a read only operators of the bot operators
constructs a new instance of the code hash operator code
constructs a help message
this method is called to determine if the user access the specified
this method is called when the command is ignored
initializes the component
adds all the operators from the given code bot
removes all mappings from this map
returns true if the given operator is in this operator
sends a command to the server
checks whether the connection has been established
returns the hash code value for this map
check that the connection is not enabled
get the operator for the given operator
removes the operator from hand
removes all the elements in this group
a method that returns a possible bot operators
returns the first operator of the bot
creates a new target group
returns the hash code value for this
returns the hash code for this player
compares the specified object with this group for equality
compares the specified object with this code code
adds a target to this target
removes the target from the target
removes the target from the group
returns an iterator over the elements in this collection
returns an iterator over all the targets
creates a new target player iterator
returns true if there are more elements in this iterator
returns the next element in the iteration
this is a default constructor
removes the last element from this collection
initializes the connection to the initial state
returns true if the given object is a plugin manager
this method is called when the plugin is activated
disable the command
checks if the user specified in the given command
constructor for lag
this method is called when the user selects the
set the connection to the given
remove a connection from the list
registers the command to be managed by this plugin
creates a new lag check box
removes the command from the list
sets the operation set to the current bot
load the plugin
activates this plugin
returns true if the object equals the given object
creates a new instance of bot
reloads the plugin
creates a new instance of plugin
registers the platform commands for the command
registers the command to the server
this method is called when the user selects the command
sets the commands to be used for the server
activate the plugin
adds a permission to the session
adds a group to the session
returns the permission for the given permission
returns the permission by its name
returns the group for the given group
returns a group by name
returns the user by login
returns the permission group for this profile
returns the previous token
sets the previous token stream
returns the next token in this stream
returns the next token
returns the next token in this input stream
clears the content of the payload
set the value of the field
compares the specified object with this
returns a hash code for this object
returns a string representation of this object
returns true iff code o code is equal to this
returns the hash code of this object
compares the specified object with this range for equality
returns a hash code for this object
initializes the lucene index
reset all the data to the current state
this method is called when the user selects a new transaction
resets the to the initial values
writes the frequency to the given value
returns the segments file name
write the content of the code attachment code to the
write the given array of bytes to the buffer
expert set the similarity
writes the content of the payload to the
write the offset to the buffer
returns the index of the interval
writes the content of the ith header to the current position
writes the position of the current byte array to the output stream
sets the merge scheduler
make a copy of this field
adds a field to the end of the list
add a collection of names to this collection
add a boolean to the list
adds a term to the collection
returns the name of the segment
clones this payload
set the info stream to be printed
returns the value of the code read reader code property
returns the directory
returns the value of the field
writes a string to the output stream
deletes the document
checks if the file exists
returns the modified time of the file
this method is called when the user changes the file
returns the length of the file with the given name
deletes a file
creates a new output stream with the given name
deletes the document
reads a string from the input stream
clones the index
close the file
returns true if this is an implicit command
this method is used to select the resource
returns the build label
sets the build label
gets the value of the property
sets the
gets the value of the to recipient list property
sets the recipient list
returns the build subject prefix
set the build subject prefix
gets the http url
sets the http url
returns the build properties
sets the build properties
process the command line
returns the test log
returns the source directory
sets the source directory
returns the install install url
sets the install
returns the href target path
sets the href target path
returns the name of the protoj ant script directory
sets the compile logs directory name
returns the path to the target protoj ant ant task
sets the target url logs
returns the name of the manifest file
sets the name of the manifest file name
returns the name of the drop html file
set the name of the drop html file
returns the name of the drop template file
sets the name of the drop template file
returns the start tag name
the command has been executed so extract extract the needed information
creates the fields of the text field
the ok button was pressed
called when the cancel button is pressed
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
this adds a property descriptor for the start date feature
this adds a property descriptor for the duration feature
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the sampling rate feature
this adds a property descriptor for the name feature
this adds a property descriptor for the unit feature
this adds a property descriptor for the scale feature
this adds a property descriptor for the nominal frequency feature
this adds a property descriptor for the weighting feature
this adds a property descriptor for the value id feature
this adds a property descriptor for the expected level feature
this adds a property descriptor for the timestamp feature
this adds a property descriptor for the measured level feature
this adds a property descriptor for the values feature
this adds a property descriptor for the type feature
this adds a property descriptor for the scope feature
this adds a property descriptor for the scale feature
this adds a property descriptor for the date feature
this adds a property descriptor for the weighting feature
this adds a property descriptor for the validity feature
this adds a property descriptor for the value feature
creates the meta model objects for the package
this adds a property descriptor for the calculation standard feature
this adds a property descriptor for the octave band number feature
this adds a property descriptor for the octave band type feature
this adds a property descriptor for the octave enabled feature
this adds a property descriptor for the number feature
this adds a property descriptor for the name feature
this adds a property descriptor for the scale feature
this adds a property descriptor for the value feature
this adds a property descriptor for the ground effect feature
this adds a property descriptor for the temperature feature
this adds a property descriptor for the descriptor feature
this adds a property descriptor for the channel feature
this adds a property descriptor for the pressure feature
this adds a property descriptor for the mode feature
this adds a property descriptor for the humidity feature
this adds a property descriptor for the type feature
this adds a property descriptor for the peak date feature
this adds a property descriptor for the brand feature
this adds a property descriptor for the condition feature
this adds a property descriptor for the matched feature
this adds a property descriptor for the model feature
this adds a property descriptor for the serial feature
this adds a property descriptor for the type feature
this adds a property descriptor for the feature
this adds a property descriptor for the number feature
this adds a property descriptor for the length feature
this adds a property descriptor for the name feature
this adds a property descriptor for the name feature
this adds a property descriptor for the parent feature
this adds a property descriptor for the infrastructure feature
this adds a property descriptor for the sub network feature
this adds a property descriptor for the network feature
this adds a property descriptor for the x feature
this adds a property descriptor for the y feature
this adds a property descriptor for the z feature
this adds a property descriptor for the name feature
this adds a property descriptor for the sub networks feature
this adds a property descriptor for the level feature
this adds a property descriptor for the name feature
this adds a property descriptor for the location feature
this adds a property descriptor for the closed feature
this adds a property descriptor for the sub network feature
this adds a property descriptor for the size feature
this adds a property descriptor for the name feature
this adds a property descriptor for the code feature
this adds a property descriptor for the name feature
this adds a property descriptor for the code feature
this adds a property descriptor for the type feature
this adds a property descriptor for the area of use feature
this adds a property descriptor for the south latitude feature
this adds a property descriptor for the code feature
this adds a property descriptor for the north latitude feature
this adds a property descriptor for the name feature
this adds a property descriptor for the dimension feature
this adds a property descriptor for the type feature
this adds a property descriptor for the code feature
this adds a property descriptor for the left longitude feature
this adds a property descriptor for the name feature
this adds a property descriptor for the type feature
this adds a property descriptor for the right longitude feature
this adds a property descriptor for the iso feature
this adds a property descriptor for the iso feature
this adds a property descriptor for the valid feature
this adds a property descriptor for the measure feature
this adds a property descriptor for the iso code feature
this adds a property descriptor for the comment feature
this adds a property descriptor for the name feature
this adds a property descriptor for the path feature
this adds a property descriptor for the name feature
this adds a property descriptor for the id feature
this adds a property descriptor for the street feature
this adds a property descriptor for the started feature
this adds a property descriptor for the city feature
this adds a property descriptor for the finished feature
this adds a property descriptor for the province feature
this adds a property descriptor for the country feature
this adds a property descriptor for the status feature
this adds a property descriptor for the service feature
this adds a property descriptor for the start date feature
this adds a property descriptor for the end date feature
this adds a property descriptor for the name feature
this adds a property descriptor for the alive feature
sets the fixture for this operation test case
returns the fixture for this operation test case
sets the fixture for this time history sample test case
returns the fixture for this time history sample test case
sets the fixture for this noise event parameter test case
returns the fixture for this noise event parameter test case
sets the fixture for this measure test case
sets the fixture for this calculated measure parameter test case
returns the fixture for this measure test case
returns the fixture for this calculated measure parameter test case
sets the fixture for this time history parameter test case
returns the fixture for this time history parameter test case
sets the fixture for this device test case
returns the fixture for this device test case
sets the fixture for this certification test case
returns the fixture for this certification test case
sets the fixture for this line test case
returns the fixture for this line test case
sets the fixture for this point fixture test case
returns the fixture for this point test case
sets the fixture for this test case
returns the fixture for this infrastructure test case
sets the fixture for this network test case
sets the fixture for this test case
returns the fixture for this network test case
returns the fixture for this test case
sets the fixture for this sub network test case
sets the fixture for this subject test case
returns the fixture for this sub network test case
returns the fixture for this subject test case
sets the fixture for this test case
sets the fixture for this test case code
sets the fixture for this datum test case
returns the fixture for this coordinate system test case
returns the fixture for this coordinate reference system test case
returns the fixture for this datum test case
returns the fixture for this area test case
sets the fixture for this validity test case
returns the fixture for this validity test case
sets the fixture for this note test case
returns the fixture for this note test case
sets the fixture for this source test case
returns the fixture for this source test case
sets the fixture for this service test case
returns the fixture for this service test case
sets the fixture for this job test case
sets the fixture for this model test case
sets the fixture for this address test case
returns the fixture for this job test case
returns the fixture for this model test case
returns the fixture for this address test case
sets the fixture for this life element test case
returns the fixture for this life test case
this just records the information
this just records the information
create a new model
create a new model
returns the label for the specified type name
this just records the information
create a new model
handles activation of the editor or its associated views
handles activation of the editor or its associated views
handles activation of the editor or its associated views
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this just records the information
create a new model
this accesses a cached version of the property sheet
handles activation of the editor or its associated views
this just records the information
create a new model
this just records the information
create a new model
this just records the information
create a new model
this just records the information
create a new model
handles activation of the editor or its associated views
handles activation of the editor or its associated views
handles activation of the editor or its associated views
handles activation of the editor or its associated views
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this just records the information
create a new model
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
handles activation of the editor or its associated views
create a new model
this just records the information
create a new model
handles activation of the editor or its associated views
this just records the information
this accesses a cached version of the property sheet
handles activation of the editor or its associated views
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
returns a jlabel that can be used to create the icon
sets the upper left coordinate of the upper left corner of the
sets the upper left corner of the upper left corner
returns the width of the image
returns the ith color
set the color at the specified coordinate
save the file to a file
saves the current file to the given file
at startup create and show the main frame of the application
adds a factor to the weight
compares this object with the specified object for order
compare two doubles lexicographically
initializes the applet
compares this object with the specified object for order
returns the
returns the without
updates the metadata for the given metadata set
returns true if the is
returns whether the value is stored in the original state
validate the properties and returns the properties
validate the properties and returns the properties
validate all properties to their
initialize the servlet
close the session
closes the session
logs the given error message to the log
lists all nodes in the list
add a node to the
remove the node value from the list
add a connector to the network
sets the node priority
remove the node connector from the list
set the node inactive
set the node active
adds the transformation tag to the vsmapi function
remove the transformation tag from the
description of the method
sends a ping to the server
purge the history from the history
the
returns the modified element of the object
returns the import manager
this method initializes persistent connections check box
this method initializes separator
this method initializes web application text field
this method initializes defaults button
this method initializes restore button
this method initializes web application arguments text field
this method initializes apply button
this method initializes this
this method initializes browse button
this method initializes sep
this method initializes interceptors table
this method initializes server port text field
this method initializes interceptors mi table
this method initializes server host text field
this method initializes find free port button
this method initializes j check box
this method initializes this
this method initializes root document text field
returns the output stream
flush the buffer
returns the writer
returns a short description of the servlet
setter for property comment
setter for property domain
read a line from the input buffer
print the data
print a character
print a double precision floating point number
print a float
print a number of components
print a long value
insert the methods description here
prints the line to the output
print a boolean value
print a character and terminate the line
print a double precision floating point number
print a float
print a line of text to the output stream
print a long value
print method comment
this method initializes defaults button
this method initializes restore button
this method initializes apply button
this method initializes interceptor description
this method initializes sep
this method initializes server port text field
this method initializes interceptors table
this method initializes interceptors mi table
this method initializes j tool bar
this method initializes view button
removes the item at the specified index
adds a new ingredient to the list
returns the number of rows in the model
returns the value at the given row and column
returns the name of the column at code column index code
sets the list of possible
returns the recipe at the given position
description of the method
initializes the panel
this method initializes my bar box
description of the method
description of the method
this method initializes rating slider
sets the id of the
this method initializes min
changes the content panel of the panel
gets the value of the advanced search panel property
description of the method
description of the method
description of the method
this method initializes max
this method initializes limits
builds the panel for the buttons
builds the list of
handles mouse click events
description of the method
description of the method
returns the deselect button
this method initializes glass pane
invoked when the mouse has been clicked on a component
switch the panel to the right
this method is invoked when the mouse is clicked on a component
sets the
updates the selected assignee
prints the list of to the
returns true if the connection is connected
handles the action event
set the recipe object
this method changes the rating of the user to the values
description of the method
sets the glass name
returns the glass name
checks whether the ith feature is missing
returns the numeric value of the specified value
sets the value of the ith feature
evaluates the of the
sets the attribute name
adds an instance to the set
replaces all the features in the current one
returns the size of the matrix
gets the tp total
returns the value of the nominal attribute
returns the distance between two instances
returns the dataset
returns the
sets the
checks if two values are equal
sets the weight type
returns the number of intervals
sets the num intervals intervals
returns the label class for the given label
returns the label number of the current attribute
returns the context directory
returns the name of the property
returns the full name of the resource
returns the url of the
returns the maximum number of characters that this history is
initializes the applet
clean up resources
returns the maximum length of the post
returns the name of the storage factory
returns the last modified date of the file
sets the id of the
the time zone and the cache
sets the history
sets the user base
returns the number of posts in the list
returns the email
returns the password
returns the roles of this role
checks if the password is valid
sets the roles of this role
adds a new role to the list of roles
returns the filename
removes all roles from the list
returns the number of users in the list
adds a role to the list
returns the default roles
returns true if the user has a user specified name
get the user by the username
test that the bad post exception method
tests the history string
test method for
test method for business
sets the capacity of the cache
returns the discovery discovery
registers an object to be processed
executes the command
sleeps for a given millis
shuts down the file
read a word from the address
shutdown the thread
the type of the card
test of encode method of class
test method for

tests the provider
test for code get certificate code method
test the
test of auth request method of class request
sets the errors
verify that the generator is a secure random
test the add method
test add
hashes the password
test method for
verifies that the value of the certificate is valid
test for algorithm
test encode length length
test method for
test trimming multiple values
test of authorization field method of class xinco
test of set oid method of interface java
returns the position of the point
sets the current animation
adds a new animation to the animation
returns the image of this image
returns the animation
returns the text fields of the given fields
sends a message to the server
returns the family of the
returns the family of the
removes all soap message
replaces all occurrences of the result of the search result
returns a string containing the of the given
returns the component family to be used for the
this method is used to parse the soap response
fetch the url document from the database
returns the absolute path of the
sets the absolute
clean up the
adds the extra bindings to the list of bindings
returns the age of the person
returns the friends list
returns the language
returns the matches of the current user
this method is called when the user clicks the friend
returns the access level of the given code access code object
add a friend to the friend list
add a friend to the friend list
returns the access control modifier for this user
remove a friend from the database
remove a friend from the database
returns the access control page access control page
builds the tree
moves to the next track
moves the current track back to the previous screen
sets the progress bar value
returns the music at the specified resource
sets the text of the progress bar
load a sound track
this method is called when the is removed
sets the
returns the
returns the lid type
resets the ball position to the ball position
returns the static code static code node of this node
moves the right to the right
this method is called when the user modifies the energy of the
the left
this method is called when the ball is about to be
this method is called when the left coordinate of the left coordinate
set the contact
gets the points
transforms the lid to the lid
resets the to the wireframe state
resets the physics scene
the lower right
returns the dynamic physics node
the lower left lower left lower left
launch the synchronizer
launch the launcher
this method is called when the stripes document is removed
launch the launcher
returns the right
returns the left
updates the current scene
this method is called when the is removed
returns the chance to use to perform the
returns the screen position of the screen
returns the right chance to use for the right hand side
returns the type of the
launches the ball
sets the text
returns the text in the text field
updates the
sets the scale of the node
returns the scale of the node
adds a menu page to the page
attach the page to the active page
returns the catcher catcher
moves the selected window up to the active game
moves the selected page down by the current game
returns the left
resets all the controls
returns the right
returns the launcher
performs action
moves selected item to the selected item
sets the first position of the first text in the text box
sets the text to the second text position
moves selected item down
sets the first text
sets the second text
resets the selected items
perform the action
set the color to be used for the color
sets the text
sets the position of the item
sets the scale of the
returns the position of the screen
sets the position of the screen
returns the height of the surface
returns the width of the image
sets the menu page node
updates the screen
draws the screen
perform action
returns the energy of the energy needed to solve the
resets the timer to its initial values
returns the action callback
loads the previous high scores file
returns the score of the given string
returns the keyboard handler used to display the keyboard handler
returns the mouse look handler
sets whether the button should be pressed or not
get the value of up vector
set up the vector of up the vector
returns the camera handler
calculates the gravity of the camera
returns the near distance
sets the near x coordinate
returns the x coordinate of the far far position
sets the x coordinate of the far point
returns the near y coordinate
sets the near y coordinate
returns the far y coordinate of the center of the cameras
sets the far y coordinate
returns the z coordinate of the camera
sets the near z coordinate of the camera
returns the far z coordinate of the point
sets the far z coordinate of the point
initializes the music key bindings
adds a new camera boundary
creates the transformation matrix
updates the camera boundary
returns the current transformed location
returns the current transformed direction
get the current transformed object
returns the current value of the code transform code
sets the machine to the given
returns true if the camera is parallel to the camera
this function will transform the camera perspective to the camera
this function will be called when the camera is about to be
normalizes the camera to its initial values
returns the width of the image
sets the node map
returns the height of the image
returns the texture coordinate of the pixel in pixels
converts a pixel height from the texture coordinate to the pixel height
returns the node
set the position of the image
sets the maximum value of the range
sets the scale of the image
set up the axis
returns the movement speed
sets the speed of the movement
this method is called when the camera is selected
this method is called when the camera is about to be used
returns the physics space
returns the machine
releases the lock
returns the debugging flag
sets the frames flag
sets the
sets whether the glass pane should be shown on the screen
sets whether the textures are drawn
sets whether or not the room is shown or not
toggles the wireframe state of the
toggle the wireframe state
toggles the visibility of the
prints the camera info to the output
prints the memory report
take the screen and the screen
toggles the mouse cursor to the mouse
returns the energy bar
returns the input handler
restarts the dr rc
initializes the textures map
populates the textures textures map of the texture
removes all the textures
restores the textures state to the texture
removes the room node from the room
restore the rooms room
handles activation of the editor or its associated views
handles what to do with changed resources on activation
show the conflict
this method is called by the super class to indicate that the
sets the context of the action
fills the context menu
fills the action bars with the specified
updates the action bars
the default action for selecting a new selection
handles the key pressed event
this method creates the model
initializes the context menu
fills the context menu with the context menu
initialize the content provider
set the label provider for the given code tree viewer code
initialize the listeners
make the actions
handles the given event
handles double click events
this method is called when finish button is pressed in
called when the user selects the list of the finish properties
this method is called when the plug in is stopped
adds the initial action to the perspective
the command to execute the command
creates the context menu for the given menu
this method gets called when a bound property is changed
this adds a property descriptor for the nom feature
this adds a property descriptor for the login feature
this adds a property descriptor for the password feature
this adds a property descriptor for the nom feature
creates a new adapter for an object of class
this adds a property descriptor for the feature
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the nom feature
this adds a property descriptor for the feature
this adds a property descriptor for the feature
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the feature
creates the meta model objects for the package
creates the meta model objects for the package
this adds a property descriptor for the feature
this adds a property descriptor for the feature
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the nom feature
this adds a property descriptor for the feature
this adds a property descriptor for the feature
this adds a property descriptor for the date feature
this adds a property descriptor for the note feature
this adds a property descriptor for the feature
this adds a property descriptor for the feature
adds a key listener to this component
called when the drop is done
create the popup content
returns whether the footer is visible
removes the user who the collection of listeners who will be notified
sets the text in the editor
sets the font to be used for the text area
sets whether the footer should be visible or not
sets whether the grid is visible
sets the decimal separator to be shown on the
sets the receivers image to the argument which may
sets the locale of the receiver
sets the theme for the widget
disposes the popup
returns true if the button should be shown on focus
handles the event
sets whether the text field is editable or not
handles the event
close the connection to the server
gets the number of messages in the inbox inbox
gets the unread message count
returns the number of messages in the inbox
returns the message with the given message
this method is called when the mail is being sent to the
initialize the properties
validate the service
starts the server
stop the timer
set the destination for this message
setup the adapter control
returns the output impl
sets the output impl
adds a method to exclude
returns the name of the element that is the name of the
adds a method to include
returns true if the method is
checks if a method is included in the method
add a mapping from the class name to the tag map
returns a method to invoke the method on a method
adds a new to the
reads xml content from the given input stream
reads xml from xml input stream
reads an xml document from the given xml document
reads an xml document from the given xml document
writes an xml representation of this object to the given xml writer
get the login for the user
this method is called by the lexer to set the
this method is called to indicate that the context has been traversed
this method is called when the user selects a token
saves the secret token in the preferences
deletes the token secret in the preferences
create and return a user entity data object populated with the data
create and return a task entity data object populated with the data
describes the instance and its content for debugging purpose
describes the instance and its content for debugging purpose
create and return a test entity data data object populated with the
describes the instance and its content for debugging purpose
create a new facade for the
creates a new instance of the facade
sets the action attribute of the object
draws the image
show a message
gets the value of the property
paint the background
sets the
sets the label text
release any acquired resources
returns the percent done
returns the task
sets the end date
sets the percent done
sets the start date
sets the task
create and return a user entity data object populated with the data
gets the value of the property
gets the value of the property
gets the value of the property
sets the
sets the
sets the
reset all properties to their default values
returns the default component that is the focus
returns the first component that is the first component of the component
returns the last component in the container
sets the value at the specified location
adds a row to the table
get the index of the
commit all changes made since the current commit
returns the table model for the specified table
updates the table model with the given
returns the zip entry with the specified name
reads a line from the zip file
close the input stream
make the canonical string
process tree node
this method displays the vector of the agents
validate the name of the given name
builds a string from the given vector
set the configuration file name
print the quick representation of the quick open
this method sets the parameters of the
sets the time the timer will be used
returns the time in milliseconds
returns the end time of the event
returns the
returns the plane coefficient
returns the x coordinate of the x coordinate
returns the y coordinate of the center of the
called whenever the value of the selection changes
sets the end time
sets the end
returns the number of in the
fake to the
removes all the elements from this collection
returns the record
returns the root of the tree
returns the table cells
returns the zip
make a padded matrix
make a padded integer with the given length
method to copy a file from a file
returns a polygon object
creates a new image plus the given image
invoked when the mouse is moved
sets the value of the field
initialise the comment
sets the value of the field
parses the content of this element
returns true if the value is a number
returns the integer value of the field
check the value of
returns a string representation of this node
logs the given message to the console
returns the tag name
set an attribute
returns the value of the attribute with the given name and default
remove an attribute from the list
returns true if the given attribute exists
returns the number of elements in this list
returns true if the list contains any elements
clears the elements of the list
add an element to the bloom filter
inserts the element at the specified position in this list
adds a new text element to the list
adds a new text element at the specified index
returns the ith child
replaces the element at the specified index in this list
removes the element at the specified position in this list
removes the element at the specified element from this list
find a tagged element by its name
returns the index of the element with the specified name
sets the elements
set the location of the cell
adds a sprite to the sprite
returns the sprite at the specified position
invoked when a mouse button is pressed on a component and then
adds a sprite to the list of sprite sprite
remove a sprite action listener
called when the mouse has been released
this method is invoked when the mouse is pressed on a component
fires a game action event to all listeners
paints the graphic elements
invoked when a mouse button is pressed on a component and then
called when the mouse is pressed
called when the mouse has been released
sets whether the next drag is disabled or not when moving
returns the time in milliseconds
sets whether to snap to the destination
resets the coordinates to the coordinates
invoked when the mouse exits a component
invoked when the mouse button has been moved
invoked when the mouse enters a component
add a graphic element to the list
invoked when the mouse button has been clicked pressed
checks the screen area
creates a new sprite
creates a new sprite
returns the image of the given image
returns a new image based on the given image
sets the snap to destination
the phase change
prints the graphic elements to the graphic element
resolves the package name to the given package name
registers the controller to the event queue
registers the take of the scene on the board
register the board event to board event
register the board event with board event
sets the sprite manager for this sprite
registers a collision event for collision
adds a graphic filter to this graphic filter
returns the url to the mbean server
create a new url from a url
sets the spring context object name
read the next byte from the input stream
starts the game
updates the coordinates of the
returns the distance between two points
counts all characters in the database
validates the password
returns true if the game is a game
checks if the given item is a item
sends a round message to the nearest message
sell the sell item to the given item
sends a message to the server
waits for the next round of the next turn
returns a random location in the
returns a random location in the
spawn a spawn task
returns the current value of the current
returns the mp of the current user
returns the value of the map id property
returns the x coordinate of the x axis
returns the y coordinate of the location
called when the action is performed
sets the
broadcasts a packet to all the packets in the packet
broadcasts the given code packet code to the code net
returns true if the specified coordinates are in the
returns the inventory
sets the effect id
notifies all listeners that a players logged out
broadcasts a packet to all players
broadcasts a message to all clients
returns the current attack speed
get the maximum pattern of the given
returns the x coordinate of the end of the map
returns true if the map is
check if the is enabled
returns true if the map contains the given map
returns true if the given map is a recall
returns true if the map is usable
returns the number of type1
deletes the faction info
sets the house info for the given house
deletes the note
returns the distance between the point and the point
checks whether the point contains the given point
returns the distance between the point and the point
returns the distance between the point and the point
returns true if the point is within the same point
returns the type of this object
returns a connection to the database
saves the current state of the table
returns the last pk
adds items to the list of items
returns true if the is
sets the flag
returns true if the is disabled disabled
stop all
returns true if the method is trusted
returns true if the method is a href http www
returns true if the is
returns true if the timer is ready to be
copy the waypoints of the given file to the destination directory
deletes the track
deletes all tracks from the current track
closes the connection
returns the score of the
set the tempo factor
sets the tempo of the
returns the tempo of the technology
set the to the specified array of
sets the program to the given program
this method initializes this
adds a morphism to the morphism
adds a new vertexs range to the list of
resets the selected coordinates to the current position
process the list of tracks
creates a new sequence
plays the sequence of the midi midi midi midi midi
processes the event
pauses the playback
resume midi track
gets the
returns the number of traffic stored in the model
set the tempo of the tempo
returns the temp model of the given row
returns the index of the given object in the module
returns the position of the sequencer
processes a key stroke from the hardware
returns the index of the given model
sets the sequencer position
processes a key press event
returns the position of the current position in degrees
processes the control change
sets the position of the
sets the coordinates of the coordinates
sets the coordinates of the y coordinate
initializes the track
returns the value of the cell editor
returns true if the sequencer is open
listens for the selected item in the tree
returns true if the sequencer is running
initializes the table
invoked when the mouse has been clicked on a component
runs the given and collects its results
returns the value of the cell editor
generates a for the given tick
sets the current morphism of the current morphism
create a pitch based on the given key
set the list of paths to the given paths
creates a new midi event
create a new instance of
creates a new
make a tempo event in a tempo event
this method handles events associated with the buttons
produces a duration of a duration
returns the group name
returns the name of the component
make a voice from the channel
returns true if the properties are set
applies the form properties to the form
reverts the current form to their default values
returns the table
sets the expression
sets the expression
returns the vm object of this vm
parses the current file
evaluates the input type and the result
parses the given number from the input stream
evaluates the given type and return the result
returns true if this type is a
remove a note from the note
returns the number of smallest layer in the list
extract note from a note
convert a to a
sets the model property with the given name to the given value
compares this object with the specified object for order
creates a melody with a
starts the
sets the parent form
returns the parent form
adds a new note to the melody
clears the table
remove selected rows from the table
creates a new with the current score
moves the selected rows up to the selected rows
moves the selected rows down in the table
resets the column to the specified column
creates a note based on the values in the given
create a new note
returns the nearest object to the given key
set the parent form form
set the global degree of the node
removes the global
reverts the properties to the current values
returns the number of selected objects in the list
returns the form at the specified index
returns the start percentage of the measurement
invoked when a component loses the keyboard focus
returns the end percentage of the measurement
returns the scale map
returns the text of the
invoked when the target of the listener has changed
description of the method
returns the group name
show the splash screen
hides the splash screen
sets the message to display in the message area
add a link to the link
sets the manager
gets the value of the property
gets the value of the property
returns true if the selected item is selected
returns the manager
returns the x coordinate of the pointer
returns the pointer y coordinate
adds a list of to the
set the window to be used in the
zooms in the view
adds a prototype to the
set the action
adds a point to the point
remove a prototype from the
adds a points to the polygon
removes all points from the list
loads all plugins
set the network to be used for the network
sets the network model for this network
adds a problem to the model
add a list of to the given model
draws the axes
starts the game
returns the value of this number as a int
draws the points of the given graphics object
returns the value of this counter as a long
returns the value of this object as a float
draws the selection of the background of the selection
returns the value of the real number
returns the one that is the imaginary one
draws the selection points
returns the number of complex numbers
returns the string representation of the dictionary
returns the factor for the given word
this method generates a new
this method is called when the screen is about to be shown
returns a new ring sum of the given ring
returns the sum of the complex number
adds a ring to the dictionary
adds a complex number to this one
returns a new ring difference
subtracts the given key from this map
this method constructs the difference of the complex number
this is a code imodel selection code method
returns a new
returns the difference of this complex number
multiply the given by the given key
subtracts the given complex number from this one
returns a deep copy of the ring ring ring
returns the product of this one
negate the dictionary
computes the product of this product
returns a new
multiply this real with another one
scale the map to the given value
returns the complex number of this complex number
adds a point to the screen
compares this object with another
returns the of this complex number
adds a point to the world
divides this complex number by a real number
adds a new word to the dictionary
divides squared distance
removes a point from the screen
returns the inverse of this complex number
destructively remove the specified factor from the bag
invert this real number
draws the zoom rectangle
returns the negated value of this complex number
this method returns the real number of this complex number
returns the imaginary part of this complex number
returns true if this node is zero
returns the zero rational number
returns true if this is a one
returns the first one
returns true if the number is zero
returns true if this is a real number
invoked when the mouse has been clicked on a component
returns the abs magnitude of this complex number
returns the sum of the values of this rational number
returns the argument of this complex number
returns the sum of the n n elements in this rational
returns the square root of this complex number
adds a rational to the
returns the arithmetic code of this code complex code number
adds a new number n
returns the expression that is a complex number
returns the difference of the given rational number
handles the mouse entered event
compute the complex conjugate of this product
returns a new
subtracts the given number from this rational number
gets the value of the list property
subtracts the given number from this number
returns a product of this rational number
returns the value of this code product code
returns a product of this rational number
returns the complex number
shows an error dialog with the given objects
multiplies the number of attributes and multiplies the
compute the code code of the given code complex code
multiply the number of the coefficient of the grid
invoked when the mouse has been moved
returns the hash code value for this
returns the numerator of this rational
returns the nth number of points in this rational
called when the ancestor of the ancestor is added
sets the status of the given error message to the given status
divides this number by the given number
compares this object with the specified one
divides the specified number of points
returns the inverse of this rational number
inverts the current value of the arithmetic expression
sets the status of the given objects to the given status
returns a negated rational number
negate the value
returns the numerator of this rational
returns the denominator of this fraction
sets the status info of the given status object
returns the absolute value of this rational number
returns the value of the code double code property
sets the status of the timer
returns a string representation of this object
clears the status bar
returns a hash code value for this object
reduces the resistance of the
updates the title of the current file
creates a new project
pops all project and all the project
this method is called when the user changes the project
returns the domain
returns the received domain
open the dialog
reverts to the current file
set the matrix to the ith matrix
sets the value of the element
returns the matrix
returns the first morphism of this vertex
returns the second morphism of this transition
quits the application
returns the complex constant
returns the complex b
returns the matrix
returns true if this module is
returns the current directory
returns the polynomial for this polynomial
sets the current directory
returns the matrix
set the status of the
returns the matrix
returns the value of the module property
the given object
returns the matrix
constructs a view of the given module
returns the translate
returns the element of the element
returns the constant pool entry for the given value
returns true if this is a module
sets the status of the
returns true if this ring is a ring tuner
returns true if the morphism is a ring morphism
returns true if the ring is a ring morphism
compares two module objects based on the current state of the
this method is called when a is
returns the a coefficient
returns the current morphism of this transition
returns the b
the network model
returns the scalar
set the
returns the element
returns the morphism of the current module
sets the
this method is called when the network model is
the container
sets the
refresh the networks
returns the network container
sets the enabled state of all actions
runs the run method
starts the run of the dialog
runs the run of the given list of run
returns the ith unit element
returns true if this ring is a ring ring
returns the module associated with this module
returns true if this module is a null module
returns the ring ring
returns the translation of the given element
remove a from the list of problems
returns the value of the
returns the power of the nth power of this element
returns the ring of the ring
compares this ring to another
returns the module
returns the morphism of the current transition
returns the number of occurrences of the factor
returns the ith bounds
returns the ith value
returns the number of in the
returns the string representation of the ring
returns the ith value
returns the value of the ith value
get the value of the cell at the specified position
get the value at the specified row
returns the value of the cell at the given position
get the value of the cell at the given position
sets the matrix to the given value
returns a matrix from the given row and column
sets the value of the matrix
returns the matrix for the given cell
returns the matrix
returns a matrix from the given row and column
return the of this matrix
returns the matrix for the given cell
returns the matrix
sets the matrix to the given value
returns the form of this product
returns a matrix from the given row and column
returns a new scaled version of this matrix
returns true if the row is zero
returns the of this matrix
compares this matrix to another
returns the matrix for the given cell
power of a power supply
returns the matrix
returns the number of in the form
returns the form at the specified position
returns the form of this product
sets the labels of the list
returns a scaled object with the given scalar
return the of this matrix
returns the index of the label of the given label
returns the label of the ith form element
power of a power supply
returns true if the label has been set
returns the row at the specified row and column
create a for the current
create a new with the given address
returns the of the matrix
returns the form of this product
returns the sum of all values in the matrix
returns a new coefficient with the given values
power of a power supply
returns a normalized version of this product
returns the form
computes the dot product of this matrix and the
returns the number of items in the morphism
set the matrix cell to the given value
returns the ith morphism of this graph
computes the sum of the values of the matrix
compute the dot product of this product
set the matrix cell to the given value
computes the difference of two
returns the row at the specified row and column
returns the product of this product
computes the sum of the values of the matrix
returns the of the
set the matrix cell to the given value
returns the power form
computes the difference of two
returns the sum of all values in the
returns the value of the specified column as a rational number
computes the sum of the values of the matrix
returns the product of this product
returns the name of the component
computes the difference of two
returns the of the matrix
returns the name of the
returns the product of this product
returns the current frame coordinate
returns the sum of all the elements in this rational
returns the minor version of the matrix
compares the name of the name and the name of the
check if the name is equal to the other
checks if the form is equal to the given
returns the of the matrix
returns the minor row of this cell
compute the of this polynomial
sums the values in the matrix
resolve references to a dictionary
sum of all values in this matrix
compares two objects
returns the type of this object
returns the type of this element
returns the number of the form data contained in this form
returns the form at the specified index
returns the number of the form data contained in this form
creates a new
returns the form at the specified position
creates a new
return the form
returns the module
creates the default
creates a new
compare two objects for equality
returns true if this product is subset of this subset
returns the simple form
returns true if the given contains the given
returns the index of the first occurrence of the given model
returns the received address
returns the expected address
returns the vertex i
sets the vertex to the given vertexs value
inserts a new vertex into the graph
get the limit form
returns a copy of this object
returns true if the domain is identity
returns true if the domain type is
returns the form component
returns the element of the module
deletes all vertices and edges from the graph
returns the current morphism
appends a node to the target node
compares this object with the specified object for equality
returns the number of
returns the domain of the basis of the current node
returns the of the current graph
returns the factor for the given index
compares two power supply
set the factor for the given index
returns the for the given label
insert a new factor into the list at the given index
returns the ith factor
adds a new factor to the list
returns the name of the
prepends the to the given
returns the factor for the specified index
returns the number of in this list
returns the identifier
returns the index of the first occurrence of the specified
adds a factor to the list of values
returns the morphism of the current vertex
sets the name of the
returns true if the next value is set
sets the name of the
this method is called to map the domain to a new one
removes duplicates
compare two power
sets the identifier
this method returns the current mapping of the given
removes the at the specified index
returns the dimension of the graph
returns the element that is currently being edited
returns the number of in the map
get the dimension of the given
returns the index of the first occurrence of the given
compares this form with another form
clones this object
returns a hash map of all the mappings from this map
compares this form with another
returns a copy of this tt hash map tt map
returns the value of the element
displays the system
returns a copy of the current morphism
returns the value of the modulo integer field
this method is called after the given is stored in the
display the form print stream
returns the hash code of this object
returns a copy of this tt copy tt
returns the real value of the complex number
registers the given code form code to this instance
returns the hash code for this morphism
returns the power supply type
compares this form with another
resolve references to a dictionary
compares two
returns the value of the code code property
returns the hash code for this object
creates a new object
creates a new
compares the specified object with this set for equality
returns a copy of the object shallow copy
returns the complex number
compares two objects
returns the type of this
compare two
resolve references to a dictionary
returns the element
returns the name of the
returns the name of the component
returns the identifier of the current form
this method is not supported by this class
sets the identifier
compares the given data in the form of the given
returns the dimension of the dataset
get the dimension of the given
returns the received form
returns the expected form
returns the hash code value for this object
returns the i th form
returns the string representation of this object
returns the number of form elements in this collection
compare two objects for equality
returns the factor
set the index of the
returns the i th form
returns the name entry
returns true if the form is built in the form
returns true if the given is built
create a copy of this object
registers a entry
returns the value of the tt map tt property
compares this name to another name
creates the default
creates a new
returns the frame of the frame
returns the current model object
power of a form
returns the group of the group
put a property in the properties
returns the property with the given key
returns the current frame module object
returns the properties of this component
returns true if the properties are set
returns a form list form the given form form
returns the arity of the current node
returns the input form of the ith input form
returns the output form
returns the name of the component
returns true if the form has a form input
returns the view
returns the limit form
compares this contig to another
returns true if the info has been set
returns the form of the given list of specifiers
compares its two arguments for order
string description of the short description
returns the negated negated negated negated
returns the tip text for this property
checks whether the given predicate is compatible with this
returns the tip text for this property
adds all the to this
this method adapts
adds all the of the given list to this list
adds the given to this set
creates a new instance of the class using the class
returns the primitive value
compare two
remove a form from the form
removes all form elements from the form
removes a from the list
sets the car
sets the second
removes all from the list
returns the new environment for the current environment
pop the top off one
add a symbol to the symbol table
rolls back the current transaction
adds a symbol to the set of the given expression
returns the given symbol sym in this class
sets a symbol to the given expression
add a primitive to this store
the variables value
returns the scheme environment for this environment
reset the state of this object to the global values
resets the standard environment to the default values
returns the scheme code
set the scheme code
returns the
close the connection
returns the port
resets the internal state to the initial state
returns the port
returns the rational number
returns the environment for this class
returns the form
returns the arguments to the argument
returns the body of the message
compares two triple objects for equality
compare two triple triple triple
reset the global environment variables
returns the double value
compares two objects for equality
compares two pair
set the environment for this environment
open the window
sets the run info
close the current connection
parse the given reader
evaluate the given string
sets the indent size
evaluate the given list of statements
opens a block of the tag
evaluate the given eval eval
opens a block with the given element
open a block with a given name
opens the tag and adds the text to the element
returns the output port
parse a string from the given string
returns the value of the code complex code property
returns the input port
close the block
close the inline element
empty the contents of the element
sets the error message
empty the contents of an element
sets the error message to be used to execute the
writes the text node to the output
sets the error
replaces all occurrences of a given text with the given text
writes the given string to the output
resets the state of the
this method is used to define the module to be used
writes a module element to the specified module element
parses the start element of the tree
writes a code module code to the current location
write the form to the given form
write the form reference to the form
parses the module definition and adds it to the module
writes the list of forms to the list of forms
writes the to the given
writes the to the
prints the given repeat
parses the element definition element definition
write the reference to the given
converts a path to a relative path
parses the given jcr jcr morphism
parses the given jdom element
parse the form definition
parses the form and returns the form
parse the network definition
parse the definition
parse the scheme code
prints the list of modules to the server
prints all the elements in the list
prints the forms data
prints the
returns the module element with the given name
returns the module with the given name
returns the object that is stored in the model
returns the with the given name
returns the form associated with the given name
returns the scheme code
adds the form to the form
adds a to the list of resolved
converts a path to an absolute path
read a byte memory
write the memory to the specified address
adds a memory to the memory
adds a new offset to the end of the queue
adds a new cycle to the cycle
adds a number of cycles to the cycle
returns the number of cycles
sets the number of cycles
returns the constructor constructor for the constructor
creates a new operand
get the operand of the operand
returns the processor object
returns the opcode of the instruction
executes the program
returns the pc of the
sets the pc address
returns the a
sets the value of a byte
returns the x coordinate of the x coordinate
set the x coordinate
returns the y coordinate of the image
sets the y coordinate of the point
returns the byte
set the byte buffer
returns true if this is a c
sets the c
returns the value of the code d code property
sets the d
returns true if this is a
sets the value of the b
returns true if the is a
sets whether to automatically the
returns true if the value is a v card
sets the v attribute of the object
returns true if the component is z
sets the z axis
get the value of p
set the byte to the specified byte
verifies the given length of the specified length
sets the value to the specified value
copies the given array of bytes to the stream
returns the number of unprocessed characters
align the text to the alignment
returns a string representation of this object
returns the length of the encoded length
begin user doc
get a object
begin user doc
get a object
begin user doc
returns the ith
begin user doc
returns the ith
begin user doc
returns the object for the given
begin user doc
returns the object for the given
begin user doc
returns the object
begin user doc
get a object
begin user doc
get a object
begin user doc
returns the byte array for the given byte array
begin user doc
returns the for the specified character
begin user doc
returns the object for the given string
read a byte from the specified buffer
returns the length of the raw data
marshall a raw data from a given object
returns the length of the raw data
read a byte buffer from the text
marshall a raw data from a given object
this is a code code method
returns the length of the raw data
sets the parent of this component
deletes the given repeated tag from the parent
this method is called when the model is beeing removed
copies the data from the object to the som
this method is called when the object is removed
called when a object is removed from the object
handle an object removed event
this method is called when the object is discovered
returns the increment of the time
returns the seconds value of the recurrence
wait for the given state to be
wait for a buddy to become the state of the given
make the time advance to the time
this method is called when the user cancels the event
called when a is detected
enables the and
register the interests
runs the action
shuts down the
this method is called when the user presses the one
this method is called when the simulator is paused
run the simulation
converts this object to a double
this method is called when the model is linked to the model
this method is called when the is discovered
updates the data from an array of
update the given tag
sets the simulation time
adds a component to the list
removes a component from the list
returns a list of all components
returns the delegate
sets the delegate
wait for the next tick to be waiting for the
adds an object to this
reads the data from the given row
writes the row to the given row
this method initializes this
this method initializes j content pane
this method initializes j tabbed pane
this method initializes j federation name field
this method initializes j fed filename field
this method initializes j fed filename button
this method initializes j name field
this method initializes j vehicles file button
this method initializes j textarea file
this method initializes j time management panel
this method initializes j process panel
this method initializes j log panel
this method initializes j debug panel
reads the data from the given row
writes the row to the given row
close the application
add a new object to the table
removes the object from the table
read the row
writes the row in the row to the given row
returns the number of children of parent
sets the value of the finished
returns true if the connection is joined to this
shows the specified property
initializes the applet
connect to the server
starts the tick timer
start a tick timer
sets the som file
create federation demand
admin
this method is called when the user selects the
publish the subscription
initializes the time constrained crontab
initializes the time
initialize the tick
this method is called when the user joins the joined
this method is called when the step is set
this method is called when the next tick is finished
this method is called when the user has started
shuts down the application
destroy the federation
disconnects the current connection
exits the application
sets the simulation time
called when the federation is not not already restored
called when the federation is not already saved
restores the federation to the default value
called when the federation is restored
called when the user logs off
encodes the
this method is called when the user selects the
returns the dead deltas for the given time
parse the file
returns the indent
sets the indent
clears the indent
returns the current tab
sets the tab
adds a new tab to the tab pane
removes the
writes the indent of the current line to the
starts the line
called when the federation is not already restored
called when the federation is not null
restores the of the federation
wait for tick to be currently being displayed
registers a simulation time listener
unregisters the simulation time listener
returns the managed object object for the specified class
called when the user has the federation
returns the object
this method will be called to request the attributes of the request
called when the user logs in
this method is used to load the attributes from the
returns the time manager
sets the time manager
gets the value of the property
gets the value of the property
sets the values of the given list of attributes
sets the value of the given field
returns a list of all changed attributes
updates the object with the given tag
updates the state of the
delete instance from the
remove an object instance from the list
remove an object instance from the given instance
returns the object class of the given handle
returns a string representation of this object
returns the interaction class associated with the given model
register a new listener to the list of listeners
return the class of the object with the given name
returns the first of the given class name
sets the current state of the event
returns the object associated with the given handle
called when the turn is paused
returns the codec factory
returns the adapter
sends all the events to the server
begin user doc
creates a new interaction
receive notification of the
publish the data to the publish view
subscribes to the model
the
unsubscribe from the model
register a new listener to the list of listeners
unsubscribe all the classes in the
gets the attribute at the given offset
returns the number of attributes in this complex number
add an attribute to the current utterance
get the set of all managed objects
add an object to the list of managed objects
lookup the attribute for the given attribute
this method is called when the object has been created
extracts the value of the attribute with the given name
returns the value of the named attribute
creates an object class
returns the attribute with the given name
returns the value of a byte
set a new value to a string
returns the model
registers the object as a object
returns the local name of this qualified name
set the value of the named attribute
returns the value of the named attribute
deregisters the object to the
set the value of the named attribute
returns the value of the named property
set the value of a double to the given name
this method is used to create a new object
returns true if this is a ancestor of this node
returns the object with the given name
returns the map of objects
returns true if the receiver contains the specified key
checks whether the specified object is a valid value
this method returns the number of objects in the list
returns true if the given value exists in the map
register a new listener to the list of listeners
returns the set of entries in this map
returns the value to which this map maps the specified key
returns a set view of the keys contained in this map
puts the specified key into the map
copies all of the mappings from the specified map to this map
removes the mapping for this key from this map if present
publish the event to the new attributes
the
returns a collection view of the values contained in this collection
subscribes to the
unsubscribe from the subscription
returns the value of the attribute with the specified name
resolve the current
set the value of the named attribute
get a value from a byte
returns the length of the specified object
get the collection of registered codecs
get a short value
compose a key for the given list of elements
set a short value
set the to the given object
returns the value of the attribute with the specified name
set the value of the named attribut
add a alternative to the alternate list
get the value of a property
returns the alternative object associated with the given
returns the alternative name of the given alternative
returns the value of the attribute with the specified name
returns the value of the attribute with the specified name
adds a new value to the set
returns the value of the given type as a code string code
returns the enum value for the given enum
set the name of the object
gets the implementation of the
this method is used to set the registered
returns the given list of primitives in this list
this method is called when the is about to be removed
returns the object
set the value of the attribute
returns a string representation of this object
composes a list of all the elements of this list to be
called when the state of the object has been removed
sends a message to the server
sends a data object to the server
receive notification of the incoming receive event
handle the given tag
receive a request
called when a tag is deleted
this method is called when the object is a value
mark the given as deleted
override to set the tag attributes
applies the given value to the given object
updates the object with the given tag
update the given tag
delete the given tag
delete the given from the database
tests parsing of a file
write the logger to the logger
write the logger to the logger
the junit setup method
returns the model
test method for
test of send method of class
notifies the that the given has been
test method for
test the lookup object method
tests lookup for interaction interaction
test the lookup object class
tests lookup for interaction class
tests the constructor
tests that the property attribute is set correctly
test of remove method
test that the list of discover is correctly set
test delete of the object
test of register codec method
test that the factory can resolve a
test method for
test method for
returns the data types
marshall a raw data into a byte buffer
returns the length of the raw data
unmarshall the data into a byte buffer
marshall a raw data from a given object to the given object
returns the length of the raw data
returns the sbj object for the given enumeration
returns the type for the specified type name
returns the encoding of the given encoding
resolve the
register a codec to the codec
register a new encoding
this method is used to parse a fixed record
register variant of
returns the octet octet
encode the
returns the length of the encoded encoded encoded encoded encoded encoded encoded
decodes the given object from the given byte array
sets the value of this field
returns the handle to the class handle for the current handle
adds a parameter to this message
gets the parameter handle for the given parameter name
returns the class handle for the class handle
add an attribute to the list
returns the attribute handle for the given attribute
set the attribute handle for the given set
set the attribute handle for the attribute handle
set the behaviour of this object
returns the class name of the class
returns true if this event is relevant to the event
sets the relevance flag
sets the value of this field
invoked when a component gains the keyboard focus
returns the value of the field specified as a code string code
this method is called when the application is closed
sets the current look and feel
returns the string value of the given key
this method is used to set the rating of the movie
writes the current document to a writer
set the background color
returns the details of this object
sets the status of the status bar
returns the paint for the components
show the printer dialog
add a new page change listener to the list
remove a listener for changes to the page change listener
sets the map
returns the object
set the data buffer for this
compares the specified object with this code code
read a from the stream
read a read name from the input stream
returns all glyphs in the given text
returns the string representation of this object
returns the bounding rectangle of the bounding box of the rectangular
returns the width of the bounding box of the
returns the height of the bounding box of the cone
initializes the code graphics2 d code object with the
adds a new code page code to the code code
cleans up the state
close the view
returns a clone of this object
called whenever the tree selection changes
starts the application
starts the application
returns the admin route model
starts the application
clears the selected route
returns the form model
saves the current page to the database
clears the form item form the form item form
starts the application
add a new admin route to the group
saves the current page to the database
removes the admin route
adds the form item to the form
removes the form item form from the list
starts the application
saves the database to the database
returns the age of the
this method is called when the processor is removed from the processor
search for a string in the database
search for a string in the database
clears the given processor
returns the current processor model
updates the status of the status panel
selects the given
saves the table model
remove the table from the table
starts the application
starts the application
starts the application
starts the application
returns the fee schedule
returns the invoice format
returns the invoice charge model
clears the invoice format
this method is used to set the to the
clears invoice charge
saves the data in the database
saves the service data to the database
saves the data in the database
add invoice format to invoice
add invoice charge to invoice charge
add a fee schedule schedule
returns the facility account model
removes the invoice format from the list
remove an invoice charge
this method is used to remove the account from the
removes the fee schedule
starts the application
start a new patient
saves the users preferences
creates a new instance of database
add facility to the user
start the
remove the user account from the users list
returns the charge model
saves the data in the database
returns the invoice model
returns the invoice model
starts the application
clears the invoice model
clears the invoice type
starts the application
saves the data to the cart
saves the data in the database
returns the patient model
add invoice type to invoice
remove an invoice type
returns the charge model used by the
sets the charge algorithm to use
saves the current discount
adds a new charge to the list of charge
removes the charge from the
returns the charge item model
clears the charge item
saves the data in the database
adds charge to the charge
removes the charge item from the cart
copy the given directory to the target directory
changes the label of the selected form
starts the application
starts the application
get the control panel
start the component
starts the component
starts the search
start a new editor
returns the transition form definition
refresh list of data
clears the transition transitions from the forms state
saves the form
starts the application
starts the search
starts the application
starts the
returns the type of the model
removes all the terms from the given model
returns the record item type
saves the current document to the database
clears all record types
add a term type to the model
removes the selected term type
saves the data to the database
starts the application
removes the item type
this method is called when the popup menu is set
starts the application
this method is called when the transition is definitely cancelled
returns the form definition
start the form
clears the form definition
returns the default state model
clears the state of the form state form
saves the data in the form
saves the current state of the form
returns the form model
clears the form
adds the form state to the form
saves the form data to the database
removes the form state from the form
adds a form to the form
starts the new instance
saves the changes to the database
returns the record item model
starts the dialog
returns the model term
starts the application
removes the form definition
start a new editor
action to popup the transition
clears the record item
creates a new panel with the specified size
saves the current document to the database
returns the left view
returns the right view
split the split pane
adds a new record to the database
returns the pref model
sets the size of the label to fit the given size
adds the left to right of the current state
adds the right clicked column to the left
adds the left to right of the table
move down the selected
this method adds the right to the table
moves the selected row to the selected list
removes the selected term from the model
print the hierarchy level components
moves the selected row to the selected list
moves the selected row to the right
sets the default value of the
returns the default save
this method is called when the button is pressed
starts the application
returns the model term
returns the custom controller
this is used to remove the custom controller from the wizard
saves the current logbook settings
add a custom controller to the controller
removes the custom controller from the list
saves the current term
returns the value of the specified model
sets the value of the given object
gets the destroy listener
changes the category label
get the control panel for the view
check if the view is a menu item
refreshes the panel
returns the form panel
get the first panel
changes the label of the item
returns the second panel of the given view
start the component
starts the application
refreshes the list of
starts the editor
this method is called when the application is started
starts the view
returns the default base model
start the view
clears the form type
saves the data to the form
remove the form type from the form
register the actions for the form
starts the view
returns the role view
saves the preferences to the database
returns the control list
starts the application
returns the rule map
clears the rule map
saves the current state of the current action
adds a new rule map to the map
removes the rule map
starts the applet
executes the action
starts the user
returns the login model
helper method to handle the
this method is called when the model is about to start
this method handles the event for the selection change
shows the properties of the view
add custom view custom view
returns the setting of the setting
returns the application view
adds a new view to the model
starts the user
removes the view from the application
starts the
returns the model model
this method is called when the application panel is pressed
imports the current selected models list
imports the given class into the database
imports the current model into the default model
copy the items from the selected tree to the clipboard
starts the base dialog
paste the items in the clipboard
starts the base dialog
starts the dialog
starts a new panel
starts the
this method is called when the view is definitely removed
highlights the selected control
sets whether to save the current state of the
exports the selected objects to the selected list
export the given class to the model
this method is called when the model is built
start the access to the specified list of
starts the application
start the access list
starts the application
saves the current access list to the database
create a new access list
returns the role model
clears the selected role
clears the setting
starts the application
saves the permissions in the database
saves the preferences to the database
adds a new role to the list
add a setting to the current setting
removes the selected role from the list
remove the current setting from the user list
starts the application
returns the role group model
removes all the role group
saves the permissions to the database
changes the password to be used for the user
adds a new role to the group
removes the selected role from the list
import all users from the database
remove an item from the list of models
changes the label of the current form
returns the number of columns in the model
this method is invoked by the framework when the user selects the
returns the value of the specified column in the table
starts the application
starts the application
returns the translation of the current translation
clears the current translation
saves the current view
adds a translation to the list
returns the unit conversion
removes the selected translation from the list
this method is used to set the unit conversion to the given
starts the applet
saves the current settings to the database
add a unit conversion to the unit
starts the application
removes the conversion unit from the selected project
starts the application
returns the location type of the model
returns the identifier source
clears the location type of the given model
clears the given identifier from the source
saves the current state of the service
executes the action
add a location type to the list
saves the current page
remove the location type
adds a new identifier source to the list
starts the application
removes the source source id
starts the application
returns the address model
clears the selected data from the list
saves the current logbook entries in the database
adds a new address to the list
returns the audit model
clears the audit dialog
removes the selected address from the list
adds a new audit to the audit
starts the application
starts the application
returns the location model of the current location
clears the location of the given location
saves the current page
creates a copy of the current view
adds a location to the list
removes the selected item from the list
remove the selected reference from the tree
returns the reference model
show the properties of the child
clears the reference to the specified ref
checks if the drop is a drop
saves the properties to the current state
start the
starts the application
add a reference to the list of references
starts the application
removes the selected ref
returns the order state
clears the order state
saves the current state of the
adds the order state to the order list
removes the order state from the list
returns the order instance state
start the model
clears the order state
saves the current state of the
starts the transition
adds the order instance to the database
removes the selected order instance
returns the order model
saves the current patient
returns the order model
starts the transition
clears the model
starts the application
saves the properties to the database
clears the order of the given order
returns the order model
clears the order model
edits the current view
clears the location of the given location
saves the data in the database
start the application
adds the order to the order
saves the logbook
returns the order model
starts the user
clears the order type
returns the user model
saves the data in the database
clears the selected portal
adds a new transition to the list
add portal user to database
adds a new transition to the current state
remove portal user
removes the selected order type
refreshes the list of refresh
checks if the transition is in the table
changes the password to be used for the user
this method is called when the transition is definitely cancelled
starts the application
removes the selected location from the list
returns the visit type
clears the visit type of the given type
starts the application
search for the selected patients if the selected patients
saves the current
add a visit type to the end of the list
removes the selected type from the list
visits the rows selected in the graph
returns the content type of the content
clears the content type
saves the current data
search for the patients
add content type to the content type
removes the selected content type
starts the application
starts the application
displays the visits in the list
starts the
returns the default job model
returns true if the patient has selected patient
clears the job
returns the icon model
saves the current job to the database
clears the icon
add a job to the job manager
saves the settings to the database
returns true if the selection has been marked as selected
removes the job from the list
adds the icon to the model
removes the icon from the list
starts the application
returns the first selected patient
returns the current scheduler
returns the first selected visit in the model
clears the reference to the selected
clears the job history
performs the extraction of the patients
starts the application
starts the application
displays the patients of the patient
returns the number of intervals in the table
exports the patients
returns the model of the current item
returns the type model
clears the selected item type
clears the selected item from the list
saves the current project
saves the current project
returns the value for the cell at code column index code and
add a new item type to the list
adds a new item to the list
removes the item type
removes the item from the list
get the control panel
returns true if the current thread is
starts the
opens the appointment and shows it in the database
saves the current page to the database
this method is called when the form is started
show the dialog
saves the current state of the database
starts the applet
returns true if the model is
show the data model
returns true if the entity is no model
returns the form screen image model
saves the properties to the form
starts the dialog
returns the form type image
clears the form image
saves the current view
removes the form screen
clears the form type
saves the data to the database
add a form type to the form
selects the appointments
returns the form model
returns the form record
saves the form data to the database
remove all records from the form
remove all the details from the company
creates a new item record
starts the application
submits the user to the user
returns the default template model
clears all the schedule template
saves the current schedule
adds the schedule template to the schedule
starts the application
returns the currently selected appointment
removes the selected template
starts the application
returns the code model code
clears the frequency model
saves the data model to the database
removes the current from the list
starts the application
add slot to slot
returns the current appointment type
returns the resource model
clears the selected resource
clears the appointment type
saves the current model to the current file
adds a user resource to the group
adds a resource to the container
saves the current state of the current activity
adds a new resource service to the service
removes the appointment type
start the patient
saves the current settings to the database
starts the application
setup the command line
returns the current appointment status model
clears the appointments
saves the current state of the current activity
adds a new appointment status to the list
removes the appointment status
updates the appointments
returns the order of the given patients
returns the service call
returns whether the control is
sets the control
sets the new table columns
returns whether or not the content of the content of the content
returns true if the group is a reference
sets the replace column and content
set the selected nodes
sets the selected objects
returns the tree selection event
sets the tree selection event type
returns the first selected action
returns the first selected control
sets the select action ref
returns true if the first selected action is selected
returns the first selected parent control
returns the first selected tree node
sets the default action for the default action
returns the first selected parent of the tree node
returns the action
sets the action
adds a target node to the target node
sets the target node
adds a source node to the source node
sets the source node of the given node
sets the target nodes
returns the source node of this node
returns the target node
sets the source nodes
sets the selected columns
gets the action reference
sets the selected model
sets the selected models
sets the action reference
sets the selected rows
returns the view ref id
returns true if selected rows are selected
returns true if the selected row is currently selected
sets the view ref id
sets the view ref id
returns the event action type
sets the event action type
returns the item event
sets the item event
sets the mouse event
returns true if the mouse click is double clicked
removes the filter from the list
returns the context identifier
sets the context ref id
sets the context reference id
sets the selection event
add a node to the parent
deletes a node from the list
move a node to another node
sets the parent dialog
updates the node with the specified label
sets the added nodes
sets the deleted nodes
sets the update nodes
returns the base model
sets the base model
returns true if the model has the base model
returns whether the table has fixed table
sets the base models
add a new to the list monitor
returns whether the patient has a patient
clears the patient
adds a new view view to the list of available views
prints the last time to the last time
returns the parent frame of the given component
starts the application
returns true if the context has a context id
returns true if the context id has a context id
returns the current report model
clears the report
saves the current report
adds the report model to the report
removes the report from the report
this method is called when the user submits the file
checks whether the current frame is a file
checks whether the current frame is a file
set the view to the given view id
shows the html xslt file
set the view to the given view
this method is used to determine if the file is an instance
setup the wizard
returns the component associated with the specified reference id
starts the application
starts the application
move the up one step up
moves the down move to the next move
returns the default base model
this method is called when the state of the buttons state is
clears the default base
rebuilds the view with the given id
clears the results
this method is called when the panel is removed
select the selected object
starts the application
submits the form
returns the selected results
returns the selection as a list of selected objects
set the results to the given
start the script
sets the search results
saves the current settings to the database
returns the script
displays the list of the given list
executes the action
start the model
starts the modal dialog
populate the table with the data from the database
rebuild the view
open the access record
saves the changes to the database
updates the models list of models and updates the table
returns whether the send model update is currently being updated
this method is called when the is selected
sets the parent of the update model update on the
rebuild the panel
returns the horizontal split panel
check if the view is a menu item
returns the id of the object
gets the top left top left corner of the panel
sets the id of the object
returns the active ind
opens the system open server
returns true if the current state is active
start the application
returns true if the current state is active
opens the import system
sets the active active indicator
called when a frame is started
sets the active indicator
returns the display order
sets the active ind of the active indicator
returns true if the volume has volume
get the component of the
sets the item id
this method is used to set the reference to the reference to
submits a form builder to the form
open the base save form builder
sets the id of the object
sets the deleted ind
open the application view
returns the insert date time
sets the insert dt
gets the insert user ref
returns model of package type
returns the application view for the application
sets the user reference to the given user
open the application panel
get the value of med item id
sets the active ind of the active indicator
sets the id of the item that was transfered
returns the admin route to be used for the admin
returns the message model for the current route
returns the system reference
sets the admin route to the given string
sets the display model for this reference
gets the admin route reference
sets the id of the object
open the control tree
sets the admin route reference
gets the admin route
gets the system transaction seq
set the of the admin
sets the transaction
opens the dialog
gets the update date time model
returns true if the default route is a default route
sets the update dt
sets the active ind of the active indicator
opens the tree builder
returns true if the default route is not default
getter for property update user ref
returns the price
set the default route to the default default default route
updates the user reference to the new user
sets the price of the
sets the default route for the
sets the version of the version
this method is used to set the data to be monitored
collects the
returns true if the deleted book is deleted
handle the patient record
sets the deleted ind
select the given access list
sets the insert dt
opens the default builder
returns the form reference
sets the user reference to the given user
sets the form ref to use for the form
gets the facility location reference
sets the facility location of the facility reference to the given
sets the display model for this reference
returns the status ref
saves the given panel to the given panel
opens the builder
sets the status of the
open the inventory for a given inventory
sets the transaction
sets the insert dt
opens the job scheduler builder
sets the update dt
get the control panel for the view
sets the id of the object
sets the user reference to the given user
updates the user reference to the new user
returns the application frame
returns the reference to the code code property
sets the version of the version
sets the active ind of the active indicator
clears the cache
sets the ref to the new value
gets the value of the tb item type ref property
maximizes the window
sets the type ref for the ref item
sets the deleted flag to the last deleted
opens the view in the focus
returns the reference
opens the patient
sets the reference
opens the patient chart
sets the insert dt
returns the order template ref
sets the user reference to the given user
sets the order template reference
opens a control preference dialog for the given control action
returns the amount of per
opens the column preference controller
sets the id of the
set the per time strength of the
returns the maximum time in which the unit is used
sets the display model for this reference
set the time the unit is proportional to the time
opens the template builder
opens the section
sets the transaction
opens the user management controller
sets the update dt
getter for property settings form id
opens a resource builder
updates the user reference to the new user
sets the settings form
opens an appointment controller
sets the version of the version
sets the strength of the
opens the given frequency builder
returns the strength unit ref
sends a message to the parent mq message
opens the job builder
sets the strength unit for the target
opens the given setting and returns it as a controller
sets the id of the object
returns the volume of the
sets the strength of the
opens a custom view controller for the given user
returns the application mediator
returns the strength volume unit
opens an email form
this method is invoked when the action is invoked
sets the value of the code volume code property
enables or disables the dialog and notifies all listeners that
sets the display model for this reference
sets the active ind of the active indicator
enables or disables the dialog and notifies all listeners that
returns true if the card is deleted
sets the transaction
notifies all listeners that the user has been canceled
sets the update dt
updates the user reference to the new user
sets the version of the version
disables the ok cancel cancel
sets the id of the object
disables the apply ok
enables the apply ok button
prepares the form
sets the active ind of the active indicator
removes the listener from the list of listeners
returns the check script
sets the check script
sets the insert dt
sets the user reference to the given user
returns the component of the frame
returns the maximum unit reference
set the maximum strength unit for the target
get the value of med id
sets the id of the
sets the insert dt
returns the min strength unit
set the min strength unit
sets the user reference to the given user
closes the window
set the time the unit is proportional to the time
when the window is cancelled
sets the id of the object
returns the display
returns the current weight unit ref
returns true if the volume is carrying the volume
sets the reference unit weight unit
returns the rules
sets the active ind of the active indicator
sets the id of the object
returns the range of the range axis reference to the longest unit
cancel the submit form on the form
sets the maximum age of the range of years to the given
sets the id of the object
opens the cancel form on the window
sets the active ind of the active indicator
returns the background color
returns the range of the reference unit range
sets the active ind of the active indicator
sets the insert dt
sets the background color of the cell
gets the check digit
sets the maximum weight of the range of the target
sets the value of check digit
sets the user reference to the given user
disable the action
returns the range min age
returns the item volume unit ref
sets the min range min age
set the action to be used for the given
sets the volume unit ref
getter for property index
returns the location reference of the location of the location
sets the index
returns the foreground color of the cell
sets the location reference to the given location
enables or disables the action
sets the id of the item that was transfered
returns the range min weight
sets the insert dt
sets the insert dt
sets the min weight of the reference range
enables or disables the
sets the display model for this reference
sets the user reference to the given user
sets the user reference to the given user
gets the range route group ref
sets the id of the object
returns the item icon ref
returns the source ref
sets the range of route group reference
sets the item display model item
sets the source reference of the source
sets the transaction
sets the update dt
sets the display model for this reference
sets the active ind of the active indicator
sets the display model for this reference
updates the user reference to the new user
sets the settings form
sets the version of the version
sets the transaction
sets the display model for this reference
sets the update dt
sets the transaction
updates the user reference to the new user
sets the transaction
sets the insert dt
sets the version of the version
sets the update dt
sets the user reference to the given user
sets the update dt
updates the user reference to the new user
updates the user reference to the new user
sets the display model for this reference
sets the version of the version
sets the display model for this reference
sets the version of the version
sets the transaction
sets the update dt
updates the user reference to the new user
sets the version of the version
sets the transaction
sets the update dt
sets the id of the object
updates the user reference to the new user
returns true if the file is modified
sets the active ind of the active indicator
sets the version of the version
sets the price of the
this method is called when the form is removed
sets the description of the object
sets the insert dt
sets the id of the object
sets the id of the object
sets the user reference to the given user
returns the answer model check for the current state of the
returns the item form ref
sets the item form ref
sets the id of the object
sets the active ind of the active indicator
sets the active ind of the active indicator
returns the indication of the answer model of the current state
returns the volume of the item
sets the volume of the item
sets the id of the object
sets the active ind of the active indicator
sets the volume unit ref
sets the insert dt
sets the insert dt
returns the
sets the active ind of the active indicator
sets the user reference to the given user
sets the user reference to the given user
sets the directions
gets the value of the tb alert ref property
sets the alert ref
sets the insert dt
checks if the level is higher than the given currency
checks if the level is the maximum level
sets the display model for this reference
returns true if the range is an integer range
sets the user reference to the given user
sets the display model for this reference
returns true if the weight is an integer range
returns true if the specified route is in the range
returns the default ind
sets the id of the object
sets the transaction
returns true if the is
sets the display model for this reference
returns true if the default is not
sets the transaction
sets the update dt
sets the default
getter for property generic name
sets the not default value for this
updates the user reference to the new user
sets the update dt
sets the generic name of the object
sets the default ind
sets the transaction
sets the active ind of the active indicator
sets the version of the version
updates the user reference to the new user
sets the update dt
sets the value of check digit
sets the display model for this reference
gets the deleted ind attribute of the pvmsystem control object
updates the user reference to the new user
sets the version of the version
sets the version of the version
sets the deleted
sets the insert dt
sets the transaction
sets the user reference to the given user
sets the update dt
sets the reference
gets the sequence
load access to the access table
updates the user reference to the new user
sets the sequence
sets the index
sets the version of the version
load access results from the access bean ref
sets the settings form
sets the insert dt
sets the display model for this reference
access access to access to the access list
sets the user reference to the given user
load access results from the given access access
sets the id of the object
sets the transaction
sets the source reference of the source
load access results from a reference
sets the update dt
sets the display model for this reference
updates the user reference to the new user
sets the active ind of the active indicator
load access results from the ref
sets the version of the version
sets the id of the object
sets the transaction
sets the id of the object
load access results from the given ref reference
sets the update dt
returns the effect type reference for this effect
this method is used to set the access to the background
sets the active ind of the active indicator
sets the value of effect type ref
updates the user reference to the new user
sets the value of check digit
returns the entity ref
alert the user about the alert model
sets the active ind of the active indicator
sets the reference to the entity reference
sets the version of the version
load access results from a ref reference access
sets the insert dt
sets the user reference to the given user
returns the reaction reference to the reaction reference
this method is called when the access list of the access access
sets the reaction reference to the given
returns the severity reference
sets the severity reference for this reference
sets the id of the object
sets the display model for this reference
sets the index
sets the id of the object
sets the transaction
sets the insert dt
load access results from the given access id
sets the user reference to the given user
sets the id of the object
sets the update dt
sets the reference to the entity reference
load access to the access model
updates the user reference to the new user
sets the source reference of the source
sets the active ind of the active indicator
sets the insert dt
sets the display model for this reference
sets the version of the version
returns the custom schedule phase
load access results from the given access model
sets the user reference to the given user
returns true if the custom schedule is an custom schedule
sets the active ind of the active indicator
sets the transaction
returns the interaction entity ref
returns true if the custom schedule is not a custom schedule
sets the reference to the interaction model
load access to the
sets the update dt
set the custom schedule for this schedule
returns the interaction type ref
updates the user reference to the new user
set the custom schedule for this schedule
load access results from the given access model
sets the reference to the interaction type ref
returns the database table ref
sets the database table reference to the given database reference
sets the custom schedule for the schedule
sets the reaction reference to the given
sets the version of the version
returns the rule model ref
action to perform the default access table action
sets the rule execution ref
returns the rule script ref
sets the rule script ref
refreshes the table
sets the id of the object
sets the severity reference for this reference
sets the display model for this reference
refreshes all tables in the context
sets the id of the object
sets the error message to be used to display the error message
sets the insert dt
foreign key key to foreign key
sets the transaction
refresh the table
sets the foreign key id
returns the directions prefix
sets the update dt
sets the value of directions
sets the user reference to the given user
refresh table with the given id
sets the active ind of the active indicator
sets the active ind of the active indicator
getter for property
returns the instance reference of the instance
updates the user reference to the new user
sets the value of the property
the given table
sets the reference to the given instance
returns the company reference
getter for property
sets the company model reference
sets the version of the version
returns the interface reference to the
getter for property credit card number
sets the value of the property
sets the credit card number
returns true if the table is refresh in the database
returns the exact amount of drives of the
sets the interface processor ref
gets the credit card type reference
sets the credit card type
checks if the amount of the amount of is
returns the time model that was last executed
sets the last error message
checks if amount of amount is not or not
exact amount of exact amount of funds to
sets the id of the object
amount of exact amount
sets the insert dt
sets the reference to the given instance
returns the interface transaction sequence
set the amount of exact amount of exact nearby
sets the user reference to the given user
sets the error message to be used to display the error message
sets the interface transaction sequence
sets the display model for this reference
sets the active ind of the active indicator
gets the date time model
returns the quantity
sets the last process time of the process
select a row
sets the location reference to the given location
sets the quantity quantity sold
sets the system transaction seq
sets the value of check digit
select a row
sets the value of the property
sets the update dt
returns the suffix to the suffix of the
returns the reference
updates the user reference to the new user
returns the value of verification verification value
sets the suffix to the suffix of the
adds a quantity to the quantity
sets the reference
returns the state ref to use for the state
gets the value of message errors
sets the verification value
sets the state of the reference to the given model state
add a new node to the tree
returns the reference
sets the value of the message errors property
returns the indication of the indication of the indication of the
sets the version of the version
sets the reference
gets the messages processed
removes a node from the tree
sets the indication of the indication of the indication of the indication
sets the value of the code messages processed code property
sets the id of the object
sets the id of the object
returns the outbound ind
sets the transaction
returns the account balance
gets the description
sets the index
returns the transaction class ref
returns true if this is a outbound entry
sets the balance of the account balance
returns the sound
sets the reference to the new transaction
returns the amount of the account charges
sets the description
sets the active ind of the active indicator
sets the value of the property
returns true if the outbound message is not a message
sets the amount of the charges of the account charges
returns the transaction display
sets the charge of this charge
returns the reference
returns the charge reference for the charge of the
gets the account closed date
sets the outbound message
sets the insert dt
sets the reference
returns the duration of the
sets the display name of the transaction
sets the charge for the charge of the given
sets the time of the account closed
get the charge item id
returns the reference
set the not empty
sets the value of charge item id
gets the value of the transaction date
sets the user reference to the given user
sets the reference
sets the duration of the
sets the number of outbound nets
sets the transaction dt
returns the account credits credits credits the credits
sets the source reference of the source
returns the code date queue code of the peaks
sets the credits of the credits
returns the duration text
gets the integer value of the setting
set the dt queue
sets the display model for this reference
gets the string setting
sets the duration text of the
sets the insert dt
gets the date time model
sets the insert dt
gets the account open date model
returns the duration unit ref
sets the transaction
sets the user reference to the given user
gets the double property b as double
sets the date this account is now now in
gets the script
sets the user reference to the given user
sets the script
sets the update dt
sets the durations duration of the durations
getter for property transaction object
gets the size of the compressed queue
getter for property show discount on invoice ind
sets the transaction object
updates the user reference to the new user
returns the account payments
returns true if discount is enabled
sets the reference to the given instance
returns true if discount is not enabled or disabled
sets the size of the
sets the account
returns the transaction type ref
sets the show discount on invoice
sets the version of the version
returns the interface control reference
sets the not show discount on invoice
gets the poll script ref
sets the reference to the data type ref
sets the value of the show discount on invoice ind
sets the interface control reference to the given device
sets the id of the object
sets the script to be used for the poll
returns the trigger ref
returns the interface message sequence
sets the display model for this reference
sets the interface message sequence
sets the trigger reference
returns the process custom controller reference
gets the unit ref
sets the custom controller for this code code
sets the transaction
sets the rate for the
sets the update dt
getter for property process settings form id
sets the active ind of the active indicator
show the table columns
gets the billing provider ref
updates the user reference to the new user
set the value of the process settings form id
sets the location reference to the given location
sets the billing provider reference for this instance
returns the rate of the
sets the version of the version
sets the active ind of the active experiment
returns the queue capacity
sets the charge of this charge
sets the labels of the table column
sets the rate of hourly rate of the
sets the capacity of the queue
sets the message
sets the value of charge item id
sets the labels for the table column
returns the charge rate
returns the start dt date time model
getter for property message control id
returns the rate of the
sets the charge rate
gets the value of the charge type ref property
sets the start dt date time
sets the message control id
sets the charge type reference to the given value
sets the minimum rate of the
returns the message dt
get the facility account id
sets the message dt
returns the rate time
sets the facility account id
getter for property initial form id
sets the value for the control action with the specified value
sets the initial form id
sets the time of rate
returns the stop time model
sets the facility account id
sets the insert dt
sets the value for the specified control context
returns the time unit ref
sets the stop dt
sets the insert dt
sets the user reference to the given user
sets the time of the
sets the value for the control
sets the user reference to the given user
get owner form id
returns the message info
set the owner form id
sets the message info
getter for property patient id
getter for property line item
sets the patients id
sets the item
sets the id of the object
returns the message trigger
getter for property line item description
sets the trigger message trigger
sets the description of the item
returns the unit ref weight
sets the system model for this reference
sets the display model for this reference
sets the unit ref propagating unit
sets the active ind of the active indicator
sets the value of the specified control context
sets the message type
sets the id of the object
returns the business rule ref
sets the business rule ref
sets the focus on the page
sets the transaction
sets the display model for this reference
sets the focus on the reference to the given context
returns the custom controller reference
update the date time of the update
set the custom controller for this controller
sets the transaction
returns the volume unit reference unit
sets the definition of this definition
getter for property total processing time
sets the transaction
updates the user reference to the given user
gets the tax ind
sets the volume unit
sets the time of the processing time
returns true if tax is balanced
sets the version of the
returns true if tax is not tax
gets the ind attribute of the object
sets the tax
sets the active ind of the current active indicator
sets the tax indicator
gets the audit
sets the number of outbound nets
sets the tax ind
returns true if the is
sets the audit
sets the update dt
sets the update dt
sets the insert dt
returns true if the is not
sets the user reference to the given user
updates the user reference to the new user
returns the priority sequence of this node
sets the charge of this influences
sets the
updates the user reference to the new user
sets the priority sequence of the task
sets the version of the version
sets the patients name
sets the not
returns the filter that is used to create the filter model
sets the charge for the charge of the given
sets the version of the version
sets the state of the reference to the given model state
sets the ind
gets the value of the charge currency ref property
selects the tab with the given number
sets the charge for the charge of the flight
sets the value of the show discount on invoice ind
sets the display model for this reference
sets the display model for this reference
sets the value of charge item id
sets the transaction
returns the charge sequence
sets the id of the object
sets the update dt
sets the charge sequence
sets the transaction
updates the user reference to the new user
gets the value of the charge status ref property
getter for property transaction name
sets the version of the version
sets the charge status reference
sets the active ind of the active indicator
sets the transaction name
updates the selected table
sets the charge type reference to the given value
sets the update dt
get the contact form id
sets the deleted ind
sets the insert dt
sets the contact form id
sets the facility account id
updates the user reference to the new user
sets the insert dt
gets the cost currency ref
sets the version of the version
sets the user reference to the given user
sets the user reference to the given user
sets the currency code for this currency
get the credit charge
sets the id of the object
getter for property item form ref
sets the patients model
sets the credit credit id
sets the item form ref
returns the payment value
clears the current patient
sets the payment value
sets the active ind of the active indicator
sets the id of the object
returns the algorithm script
gets the payment currency ref
sets the algorithm script to be used
sets the payment currency ref
returns the value of algorithm value1
saves the current patient controller
sets the id of the object
sets the algorithm value of the
sets the item form ref
returns the algorithm value
sets the of the algorithm
returns the patients controller
sets the active ind of the active indicator
returns the item package number
sets the charge for the charge of the given
gets the value of the charge algorithm ref property
sets the charge reference algorithm
sets the value of check digit
returns whether the patient has a patient controller
sets the package number of the item
sets the active ind of the active indicator
sets the definition of this definition
sets the id of the object
returns the payment type ref
sets the deleted ind
sets the charge of this charge
sets the balance of the account balance
sets the description of the task
sets the payment type ref
gets the fee schedule ref
sets the display model for this reference
clears the patients state
sets the charge for the charge of the given
sets the deleted ind
sets the index
sets the account name
sets the fee schedule ref
gets the value of the charge code property
sets the insert dt
sets the insert dt
sets the column to the given column
getter for property form id
sets the charge code
sets the user reference to the given user
sets the transaction
sets the user reference to the given user
returns the rounding value
gets the charge code sequence
sets the form id
sets the source reference of the source
sets the rounding value
sets the update dt
sets the fixed result grid column
sets the charge code sequence code
returns the strength strength
sets the display model for this reference
get the form record id
sets the active ind of the active indicator
sets the display model for this reference
updates the user reference to the new user
sets the strength strength of the item
sets the record id
sets the transaction
sets the fixed calendar table column
sets the version of the version
sets the update dt
sets the transaction
gets the charge item status reference
gets the item strength unit
updates the user reference to the new user
sets the fixed result grid column
sets the charge for status ref
sets the update dt
sets the insert dt
sets the version of the version
returns the value of charge item text
sets the target strength unit
sets the charge for the charge of the item
updates the user reference to the new user
sets the fixed result grid table column
sets the version of the version
returns the value of the item volume volume
sets the user reference to the given user
getter for property inventory item id
check if the panel exists
sets the volume strength
gets the value of the charge item type ref property
sets the item id
sets the charge item type ref
returns the item strength for the item
update the table
get the invoice id
sets the currency code for this currency
sets the insert dt
sets the intensity of the wind bars to display in the wind
sets the id of the invoice
sets the id of the object
close the form
sets the user reference to the given user
getter for property item cost
returns the of the of the
sets the type reference for this
sets the definition of this definition
sets the cost of the item
sets the volume of the item
sets the active ind of the active indicator
returns the item unit ref
sets the background color of the cell
sets the display model for this reference
sets the item unit ref
sets the volume unit ref
set the custom controller for this controller
export the models model to the given class
returns the code display info code that is associated with this
sets the transaction
sets the order id
returns the charge of invoice model
sets the display alert override the given code set code
sets the update dt
returns the display name of the item
builds a charge based on the charge of the recurrence
sets the id of this object
sets the id of the object
returns the duplicate checkbox
updates the user reference to the new user
sets the duplicate check ref check box
sets the version of the version
sets the foreground color of the cell
gets the patient location reference
gets the effective start dt
sets the active ind of the active experiment
sets the insert dt
sets the effective start dt time
returns the charge of charge items charge
get the value of med order sequence
sets the patients location reference
sets the active ind of the active indicator
sets the user reference to the given user
get the bill contact form id
returns the invoice icon ref
sets the value of check digit
sets the id of the bill of the gadget
returns the program reference
sets the display model ref
set the value of the code order sequence code property
returns the bill from text
sets the value of the code bill from code property
sets the reference to the program
getter for property bill patient id
sets the id of the object
gets the record item type reference
gets the medical condition reference
sets the patients purchase patients id
sets the record type ref
returns the bill program
sets the deleted ind
sets the program ref to the specified value
sets the price
returns the value of the code bill to text code property
gets the value of the effective stop dt property
sets the settings form
sets the medical reference condition
sets the value of the code bill to code property
sets the effective stop dt time
gets the billing location ref
sets the display model for this reference
sets the billing location reference
returns the value from the control
sets the index
sets the billing provider reference for this instance
sets the reference
sets the active ind of the active indicator
sets the transaction
gets the value of the quantity unit ref property
returns the value of the control
sets the update dt
sets the insert dt
sets the charge of this charge
sets the quantity of the unit that should be displayed in the
returns the component reference associated with the specified context
updates the user reference to the new user
sets the user reference to the given user
gets the order admin route ref
returns the record item state
returns the component associated with the specified component
sets the charge for the charge of the given
sets the source reference of the source
sets the version of the version
sets the facility account id
sets the order admin for this
returns the component that is used to display the given name
sets the state record record item state
sets the display model for this reference
gets the order admin route text
sets the charge code
returns the label component for the specified context
sets the facility location of the facility reference to the given
sets the order admin id
sets the id of the object
returns the label component for the specified context id
gets the order admin site ref
sets the transaction
sets the charge code sequence code
sets the insert dt
returns the control panel
returns the service provider reference
sets the order admin site ref
sets the update dt
sets the charge for status ref
returns the control panel
getter for property order admin site text
sets the service provider reference for this instance
returns the form model ref
sets the active ind of the active indicator
updates the user reference to the new user
sets the user reference to the given user
sets the form to use for the form
sets the order admin site text
set the custom controller for this controller
returns the service ref
sets the version of the version
sets the charge for the charge of the item
gets the order daily
sets the reference to the given service reference
gets invoice ref
sets the insert dt
sets the order daily daily order
gets the service start dt
sets the invoice ref to the specified value
returns the format type ref
returns the invoice date
returns the order
this method is called when the user selects the file
sets the start dt service
sets the format for the format
sets the user reference to the given user
sets the invoice dt
sets the charge item type ref
sets the insert dt
sets the user reference to the given user
sets the currency code for this currency
returns the invoice format ref
sets the invoice format ref
gets the order form ref
gets the invoice report ref
sets the invoice ref to the given invoice
returns the charge of invoice
sets the item unit ref
sets the definition of this definition
returns the invoice text
sets the order form
sets the invoice text
sets the id of the object
gets the value of the service stop dt dt property
getter for property order form text
getter for property invoice form id
sets the display model for this reference
sets the stop dt dt
sets the invoice form id
sets the order text
sets the active ind of the active indicator
sets the settings form
sets the transaction
popup menu popup menu
sets the duplicate check ref check box
returns the short display name of the current element
returns the invoice status ref
sets the update dt
sets the effective start dt time
sets the short display
sets the invoice status ref
updates the user reference to the new user
returns the order min
sets the version of the version
sets the insert dt
sets the minimum order min value for this order
sets the user reference to the given user
sets the invoice text
sets the system model for this reference
sets the effective stop dt time
returns the invoice type ref
sets the id of the object
sets the invoice model ref
sets the active ind of the active indicator
returns the order unit ref
sets the facility account id
sets the transaction
sets the order of durations to use for the order
sets the display model for this reference
sets the facility location of the facility reference to the given
getter for property term id
returns the dialog ref
sets the dialog ref to the given value
sets the term id
sets the state record record item state
sets the form to use for the form
returns the statement text
sets the display model for this reference
sets the update dt
sets the insert dt
gets the order total
sets the statement text
sets the transaction
sets the user reference to the given user
sets the order total
sets the transaction
gets the value of the form status dt property
sets the display model for this reference
sets the status of the date time
updates the user reference to the new user
sets the id of the object
sets the update dt
sets the item unit ref
sets the update dt
set the per time strength of the
sets the version of the
updates the user reference to the new user
returns the form type ref
updates the user reference to the new user
sets the transaction
sets the reference to the form type reference
sets the active ind of the active indicator
sets the version of the version
sets the insert dt
sets the record type ref
getter for property application control id
sets the version of the version
sets the user reference to the given user
sets the application control id
set the time the unit is proportional to the time
executes a script
sets the settings form
returns the data type reference
sets the data type reference for this data source
sets the update dt
returns the per weight of the
sets the short display
sets the display model for this reference
sets the per weight of the
updates the user reference to the new user
sets the version of the version
returns the display script
sets the reference unit weight unit
sets the display script to use for the given script
sets the transaction
returns the display text value
pops up a menu item with the given values
sets the display model for this reference
returns the type ref
sets the text value for the display text field
returns the display type reference for this reference
sets the update dt
sets the tooltip for the given tooltip
sets the type ref
sets the display type reference for this display
get the form type id
sets the transaction
set the form type id
returns the
updates the user reference to the new user
returns the image icon ref
sets the title of the titled border
sets the image icon ref
sets the
returns the image x1 x2
sets the version of the version
sets the update dt
sets the image x1 y1 to the image
sets the id of the object
returns the image x2 of the image
updates the user reference to the new user
sets the image coordinate of the image
returns the image y1 coordinate
sets the y coordinate of the image
sets the version of the version
sets the active ind of the active indicator
returns the image stretched alignment
returns the indication of the influence indication of the cone of the
sets the value of check digit
sets the image stretched pixels of the image
returns true if the component is publicly extended
sets the insert dt
returns the value of the code boolean code value
returns true if the indication of the indication of the
sets the user reference to the given user
get the record for the given detail record
sets the id of the object
this method is used to set the indication of the
this method is called when the is suppressed
returns true if any records of the form records are present
sets the active ind of the active indicator
returns true if any of the records contain the given records
sets the index
sets the suppress indication indicator
returns the short display indicator
returns true if any of the values of the given records are
returns true if the display is a short display
returns true if the display is not a short excerpt
set the short display to 0
sets the display model for this reference
sets the insert dt
sets the not short display
returns the value of deny transition ind
sets the display indicator of the page
returns true if the transition is a deny transition
sets the user reference to the given user
returns true if the transition is not a valid
sets the display model for this reference
sets the deny state of this transition
sets the source reference of the source
sets the deny transition
sets the deny transition ind
sets the display model for this reference
sets the insert dt
sets the system transaction seq
sets the transaction
sets the user reference to the given user
sets the transaction
get the record item type transition id
sets the id of the object
sets the update dt
sets the transition record id
sets the update dt
gets the role group reference
sets the role group reference for this group
updates the user reference to the new user
sets the update dt
updates the user reference to the new user
sets the version of the version
sets the display model for this reference
sets the id of the object
sets the transaction
updates the user reference to the new user
sets the active ind of the active indicator
sets the update dt
sets the value of check digit
updates the user reference to the new user
returns the state of the form
sets the version of the version
sets the version of the version
this method is called by the machine
sets the id of the object
sets the index
sets the active ind of the active indicator
sets the insert dt
gets the value of value term id
sets the background color of the cell
sets the user reference to the given user
sets the value of the code value code property
sets the source reference of the source
returns the value
set the custom controller for this controller
sets the display model for this reference
sets the value for the
returns the value of the code value unit ref code property
sets the transaction
sets the value unit ref
sets the update dt
sets the id of the object
updates the user reference to the new user
sets the version of the version
returns the form icon ref
sets the form icon ref
sets the version of the version
sets the insert dt
remove a tree node from the tree
sets the user reference to the given user
sets the id of the object
remove all records from the form
sets the active ind of the active indicator
removes the given tree node from the tree
returns the reference to the child form model
sets the display model for this reference
removes all records from the list
sets the reference to the form element
set the custom controller for this controller
returns the form type for display or form
sets the transaction
sets the update dt
sets the data type reference for this data source
updates the user reference to the new user
sets the active ind of the active indicator
get the child form id
sets the version of the version
sets the id of the form
sets the reference to the form element
returns the identifier source
sets the identifier source
returns the term category
sets the data type reference for this data source
sets the term
returns the term id value
sets the facility location of the facility reference to the given
gets the group record item ref
sets the tree model
sets the record ref
sets the insert dt
sets the tree expand paths
sets the id of the object
get the maximum number of detail sequence for this form
returns the detail sequence of the
sets the user reference to the given user
sets the detail sequence
sets the tree collapse paths of the tree
sets the active ind of the active indicator
returns the item definition ref
gets the form record listener
sets the value of check digit
sets the ref definition of the item
set the form record to be updated
gets the record item domain ref
refresh the form control
sets the value of the code record item domain ref code property
sets the id of the object
sets the id of the object
returns the record item ref
refresh form control
sets the record ref
sets the active ind of the active indicator
sets the active ind of the active indicator
sets the index
updates the form
returns the charge model representing the term charges
gets the value of the record value type ref property
sets the insert dt
mark the records as deleted
set the value type ref
sets the record id
sets the user reference to the given user
sets the expand tree node id
returns the detail of the detail model
sets the source reference of the source
returns the report print ref
sets the display model for this reference
sets the print print print reference to the given print
returns the term model of the current term
sets the insert dt
sets the deny transition ind
sets the transaction
getter for property form definition transition id
sets the insert dt
sets the id of the object
sets the user reference to the given user
sets the transition definition id
sets the update dt
sets the display model for this reference
sets the insert dt
updates the user reference to the new user
sets the user reference to the given user
returns the term order term of this model
sets the settings form
sets the version of the version
sets the user reference to the given user
sets the transaction
sets the role group reference for this group
sets the record ref
sets the id of this object
sets the display model for this reference
returns the result status ref
sets the active ind of the active indicator
sets the status ref to the given result
sets the abbreviation of the abbreviation
sets the update dt
sets the id of the form
sets the transaction
updates the user reference to the new user
sets the update dt
sets the reference to the form element
sets the display model for this reference
sets the version of the version
updates the user reference to the new user
sets the data type reference for this data source
sets the version of the version
sets the active ind of the current active indicator
sets the transaction
sets the id of the object
sets the display model for this reference
sets the update dt
sets the active ind of the active indicator
updates the user reference to the new user
sets the value of check digit
sets the detail sequence
sets the transaction
sets the update dt
set the form record to be updated
sets the value for the
this method submits the form record to the detail form
sets the id of the object
updates the user reference to the new user
sets the id of the object
sets the value unit ref
sets the description of the filter
sets the index
gets the value of the values reference group property
sets the active ind of the active indicator
returns the display sequence of the current sequence
sets the id of the object
sets the values reference group
sets the display sequence of the display
sets the insert dt
gets the value of the values term id property
sets the record id
sets the user reference to the given user
sets the id of the object
sets the facility location of the facility reference to the given
sets the value of the code values term id code property
gets the value of value
sets the insert dt
sets the insert dt
sets the source reference of the source
sets the user reference to the given user
sets the active ind of the active indicator
returns the order action ref
sets the value of the flagged model reference property
sets the order action ref
sets the user reference to the given user
sets the display model for this reference
sets the insert dt
sets the version of the version
sets the display model for this reference
sets the active ind of the active indicator
sets the record ref
sets the transaction
sets the user reference to the given user
sets the active ind of the active indicator
sets the transaction
sets the status ref to the given result
sets the reference to the form element
sets the display model for this reference
returns the dynamic view script
sets the update dt
sets the record ref
sets the dynamic view script
sets the update dt
updates the user reference to the new user
sets the data type reference for this data source
returns the file id
sets the file id
sets the version of the version
updates the user reference to the new user
get the form type id
sets the settings form
sets the id of the form type
sets the transaction
sets the insert dt
sets the version of the version
sets the user reference to the given user
returns the screen name
sets the term id
sets the screen name
returns the screen sequence of the screen
sets the screen sequence of the current screen
returns the term sequence number
sets the display model for this reference
sets the system model for this reference
sets the value of the term sequence property
sets the value of the code value code property
returns the text of the term
sets the transaction
sets the text of the term
sets the update dt
sets the value for the
updates the user reference to the new user
sets the transaction
sets the version of the version
sets the update dt
returns the view ref
sets the value unit ref
sets the view reference to the given model
updates the user reference to the new user
sets the version of the version
sets the insert dt
returns the model category ref
sets the category model
sets the user reference to the given user
sets the id of the object
sets the name of the term
returns the term name index
sets the index of the term
sets the value of the flagged model reference property
gets the time model
returns the sound name
sets the id of the object
sets the record dt
sets the sound name
returns the reference to the model that is used to display the
sets the id of the object
sets the id of the object
sets the active ind of the active indicator
sets the active ind of the active indicator
sets the reference to the model element
returns the reference to the model
sets the active ind of the active indicator
sets the reference to the source code of the source code
sets the id of the form
sets the value of check digit
returns the term ref
sets the reference to the of the
sets the active ind of the active indicator
sets the reference to the form element
sets the record ref
sets the insert dt
returns the model type ref
sets the data type reference for this data source
sets the user reference to the given user
sets the state record record item state
sets the reference to the model of the reference model
sets the data type reference for this data source
returns the record sequence
sets the record sequence
sets the value of the code value code property
update the update date time for the date time
sets the value for the
sets the index
sets the status ref to the given result
updates the user reference to the new user
sets the insert dt
sets the value unit ref
sets the insert dt
sets the user reference to the given user
sets the version of the version
gets the value of the record relationship column ref property
sets the user reference to the given user
sets the record relationship type reference
sets the display model for this reference
sets the version of the version
gets the related charge item ref
sets the related charge item ref
sets the source reference of the source
sets the transaction
sets the insert dt
sets the insert dt
sets the display model for this reference
sets the update dt
returns the related form type ref
set related form type reference
updates the user reference to the new user
sets the user reference to the given user
gets the related order template ref
sets the user reference to the given user
sets the transaction
sets the related order templates related to the given
sets the version of the version
returns the related record item ref
set related record reference
sets the update dt
returns the related model term reference category
sets the display model for this reference
sets the related term category reference
updates the user reference to the new user
sets the record dt
getter for property related term id
sets the related term id
sets the version of the version
returns the related model ref
sets the related term related to the given reference
sets the display model for this reference
sets the transaction
sets the id of the object
sets the record ref
sets the system transaction seq
sets the state record record item state
sets the update dt
sets the active ind of the active indicator
sets the record sequence
updates the user reference to the new user
sets the background color of the cell
sets the status ref to the given result
sets the display model for this reference
sets the update dt
sets the form icon ref
sets the id of the object
updates the user reference to the new user
sets the value for the
returns the form status ref
gets the value of value currency ref property
sets the form status reference
sets the transaction
sets the value unit ref
sets the value of the currency reference
sets the insert dt
sets the active ind of the active indicator
sets the version of the version
sets the id of the object
sets the term id
sets the user reference to the given user
returns the state sequence of the state
sets the charge for the charge of the given
sets the state sequence of the state
returns the value of the field
sets the display model for this reference
sets the value of the term sequence property
sets the active ind of the active indicator
sets the id of the object
sets the transaction
sets the text of the term
sets the update dt
updates the user reference to the new user
sets the insert dt
sets the active ind of the active indicator
sets the update dt
sets the version of the version
sets the insert dt
sets the user reference to the given user
sets the id of the object
sets the user reference to the given user
set the custom controller for this controller
returns the rule sequence number
sets the value of the flagged model reference property
sets the rule sequence number
updates the user reference to the new user
sets the display model for this reference
sets the display model for this reference
sets the transaction
sets the transaction
sets the value of the currency reference
sets the update dt
sets the update dt
updates the user reference to the new user
sets the active ind of the current active indicator
updates the user reference to the new user
returns the reference to the state of the
sets the version of the version
sets the state of the transition
sets the version of the version
sets the insert dt
sets the user reference to the given user
returns the record action ref
set the record action ref
returns the record transition ref
sets the dialog ref to use
returns the type of the role
sets the transition record ref to the given value
sets the value of the flagged model reference property
sets the value of the code value code property
sets the id of the object
returns the transition model for this transition
sets the facility location of the facility reference to the given
sets the settings form
sets the id of the object
sets the active ind of the active indicator
sets the value for the
sets the display model for this reference
sets the background color of the cell
sets the active ind of the active indicator
sets the transaction
sets the background color of the cell
sets the value unit ref
returns the code display model state code that is associated with
sets the state of the reference to the given model
returns the entity table ref
returns the transition form model reference
sets the table reference to the given value
sets the transition form state
sets the version of the version
sets the id of the object
returns the transition display ref
sets the foreground color of the cell
returns the value string
sets the transition icon ref
sets the value string to be used for the given string
returns the transition rule ref
sets the insert dt
sets the id of the object
returns the form state ref
sets the transition rule ref
sets the state of the form
sets the user reference to the given user
sets the active ind of the active indicator
returns the record item icon ref
sets the value of the code value code property
sets the update dt
sets the item display record item
sets the status of the date time
updates the user reference to the new user
sets the state record record item state
sets the active ind of the active indicator
sets the display model for this reference
sets the insert dt
sets the value for the
sets the version of the version
sets the state sequence of the state
returns the form action ref
sets the user reference to the given user
sets the form action ref
sets the display model for this reference
returns the model type ref
sets the value unit ref
sets the model type reference model
sets the data type reference for this data source
returns the record icon ref
sets the display record ref
sets the insert dt
sets the transaction
sets the transaction
sets the version of the version
sets the user reference to the given user
sets the update dt
sets the reference to the form type reference
returns the visit id
sets the display model for this reference
updates the user reference to the new user
sets the visit id
insert the methods description here
sets the version of the version
sets the transaction
sets the detail sequence
sets the user reference to the given user
sets the display model for this reference
sets the update dt
sets the insert dt
sets the user reference to the given user
sets the update dt
updates the user reference to the new user
sets the transaction
sets the version of the version
sets the record ref
updates the user reference to the new user
sets the display model for this reference
sets the update dt
updates the user reference to the new user
sets the version of the version
returns the owner user reference
sets the transaction
sets the version of the version
sets the owner of the user who owns this user
sets the term id
sets the update dt
updates the user reference to the new user
sets the id of the object
adapts the model to a role model
sets the patients location reference
sets the id of the object
sets the id of the object
sets the reference to the given service reference
sets the active ind of the active indicator
set the custom controller for this controller
sets the active ind of the active indicator
gets the value of the active list form model type ref property
sets the display model for this reference
sets the selected list form type reference
this shows the screen
sets the background color of the cell
sets the value of the code value code property
returns the value of the code value term text code property
sets the id of the object
sets the value of the text field
sets the transaction
sets the version of the version
gets the template business rule ref
sets the id of the object
sets the rule that is used to display the data in this
returns the number of template ind
sets the active ind of the active indicator
returns true if this is a template
sets the active ind of the active indicator
returns true if the template is not a template
returns the active ind
sets the template to the template
sets the form action ref
returns true if the active list is active
set the template to be used
sets the facility location of the facility reference to the given
returns true if the active notebook is active
sets the id of the object
sets the value of the template ind property
returns the form transition ref
sets the insert dt
sets the insert dt
sets the active list update active active
sets the transition to which this transition is being dragged
returns the priority of the template
sets the user reference to the given user
sets the active active active status of the active list
sets the state of the transition
sets the user reference to the given user
sets the priority of the template
returns the role reference
sets the display model for this reference
sets the active inactive ind
sets the path to the image path
gets the backing user access reference
sets the active ind of the active indicator
sets the display model for this reference
sets the title of this titled view
sets the insert dt
sets the id of the object
set the access access access access access permissions for this user
sets the column name
returns the comparison operator reference
sets the comparison operator for this model
sets the user reference to the given user
sets the transaction
sets the data type reference for this data source
set the custom controller for this controller
sets the update dt
sets the active ind of the active indicator
getter for property application view id
returns the default zoom value
sets the application view id
updates the user reference to the new user
sets the default zoom value
sets the display model for this reference
sets the id of the object
returns the filter field type reference
sets the version of the version
sets the field type ref
sets the update dt
returns the place order place
sets the deleted ind
sets the transaction
returns the reference to the input type ref
sets the active ind of the active indicator
returns true if the order is a place order
sets the reference to the data source
sets the insert dt
returns the template form type ref
updates the user reference to the new user
returns true if the order is a not empty order
sets the insert dt
sets the form type ref template to use for this form
sets the user reference to the given user
sets the place order
returns the term ref icon type ref
sets the user reference to the given user
sets the rule sequence number
sets the version of the
sets the not place order order
sets the insert dt
sets the reference to the icon that is used to display the
returns the model ref
sets the display model for this reference
sets the place order ind
sets the user reference to the given user
sets the model reference model
sets the display model for this reference
gets the value of the negate comparison ind
sets the dialog ref to the given value
sets the visit id
returns true if the comparison is negated
sets the settings form
sets the transaction
returns true if the comparison is negated
returns the display form type reference
sets the update dt
set the comparison to comparison
sets the update dt
sets the transaction
set the negation of comparison
sets the display form type reference for this form
sets the display model for this reference
updates the user reference to the new user
sets the number of comparisons to the satisfaction of the comparison
sets the template name
updates the user reference to the new user
returns the form definition ref
returns the template text
sets the version of the version
sets the text of the template
sets the form definition reference for the form definition
sets the version of the version
sets the update dt
returns the form display type reference for this form
sets the display model for this reference
sets the transaction
updates the user reference to the new user
sets the reference to the form
sets the state of the reference to the given model
sets the transaction
sets the id of the object
sets the version of the version
sets the form to use for the form
sets the update dt
sets the transition form state
sets the id of the object
returns the form group reference
gets the access term id
updates the user reference to the new user
sets the access term id
sets the form group reference for this form
sets the transition icon ref
returns the form location ref
sets the active ind of the active indicator
sets the transition rule ref
sets the location of the form
sets the active ind of the active indicator
returns the form type ref icon
sets the update dt
set the form type ref to the given form type
returns the authorization ref
sets the authorization ref
returns the controller type ref
sets the controller type reference for this model
sets the reference to the form type reference
sets the id of the object
updates the user reference to the new user
returns the header display type reference for the header
sets the header display type
sets the version of the version
sets the active ind of the active indicator
sets the insert dt
sets the insert dt
returns the application group reference
sets the application group reference
returns the application ref
sets the user reference to the given user
sets the application model to use for the application
sets the data type reference for this data source
sets the user reference to the given user
sets the version of the version
sets the id of the object
sets the id of the object
sets the display model for this reference
sets the label of the
sets the insert dt
gets the list hide ind attribute of the object
sets the user reference to the given user
sets the transaction
sets the active ind of the active indicator
returns true if the list is hidden
sets the active ind of the active indicator
gets the value of check action ref property
sets the update dt
returns the code ref code object that is associated with
sets the checkbox for the check box
returns the setting for the setting
sets the audit reference
sets the id of the object
returns the context ref
updates the user reference to the new user
returns true if the list is not a list hide the current
sets the value of the setting
gets the value of audit user ref property
sets the value of the context ref property
sets the audit user reference to the given value
getter for property system change
sets the insert dt
sets the list of hidden resources
sets the version of the version
sets the system change
gets the value of the system change user ref property
sets the not list hide list
sets the user reference to the given user
sets the user ref to the given user
sets the active ind of the active experiment
get the jar file id
sets the number of hidden resources
returns the system log dt
sets the jar file id
returns the deny phase
gets the value of the record model type ref property
set the dt dt time for this system
returns the reference to the menu form ref
returns true if the ntlm authentication is a deny
sets the record model type reference for this model
sets the menu form type ref
checks if the domain is not a deny
returns the entity id
gets the value of the settings form type ref property
set the deny
sets the entity id
sets the settings form settings type
sets the deny
sets the deny percent
sets the insert dt
sets the display model for this reference
sets the display model for this reference
sets the insert dt
sets the user reference to the given user
sets the insert dt
sets the user reference to the given user
sets the user reference to the given user
sets the transaction
sets the transaction
sets the display model for this reference
sets the location reference to the given location
sets the update dt
returns the permission date value
sets the display model for this reference
sets the update dt
returns true if the permission is a permission
updates the user reference to the new user
sets the transaction
checks if the permission is not a valid date
updates the user reference to the new user
sets the id of the object
sets the owner of the user who owns this user
sets the update dt
sets the transaction
sets the version of the version
sets the permission date
sets the version of the version
updates the user reference to the new user
sets the update dt
sets the permission date for the current date
gets the value of the permission entity ref property
sets the version of the version
updates the user reference to the new user
sets the id of the object
returns the value of the field
sets the permission entity reference
setter for property application controls
sets the version of the version
sets the active ind of the active indicator
this method is called when the application is about to be active
sets the id of the object
returns the preferred height of this component
sets the active ind of the active indicator
sets the preferred height of the component
sets the data type reference for this data source
set the custom controller for this controller
set the preferred width of the image
sets the active ind of the active indicator
returns the model of the model that is returned by the
sets the preparation model for the current state
sets the facility location of the facility reference to the given
get the value of the preview file id
returns the group ref
sets the display model for this group
sets the preview file id
sets the application group reference
returns the source entity ref
sets the insert dt
sets the insert dt
sets the source entity ref
returns the print report ref
sets the user reference to the given user
sets the user reference to the given user
getter for property calculation update script
sets the settings form
sets the system model for this reference
sets the print report print to the given print report
returns the reference group ref
sets the display model for this reference
sets the calculation of the
sets the reference to the reference to the selected page
sets the filter pattern to be applied to the model
returns the column spec
sets the id of the object
returns the rule parameter ref
sets the rule parameter ref
returns the value of the data type
sets the column spec to the given column
sets the transaction
sets the transaction
returns the pull action list ind
sets the id of the object
returns the value of the code boolean code value
returns the fixed width of the control
sets the reference to the data type ref
sets the display model for this reference
sets the id of the object
sets the update dt
sets the fixed width of the control
returns true if the current thread is pull
sets the active ind of the active indicator
update the date time of the update
returns the control lost focus
updates the user reference to the new user
returns true if the current pull is no pull
gets the value of the user group type ref property
sets the active ind of the active indicator
sets the control lost focus control
sets the user group type reference to the given value
returns the application dialog that is used to display the application
updates the user reference to the new user
sets the application dialog
sets the pull action to the pull active list
sets the active ind of the active indicator
sets the term id
sets the version of the
sets the version of the version
sets the not pull active list to the pull active list
sets the insert dt
sets the preferred control to the model control
sets the update dt
sets the user reference to the given user
sets the pull action for the list pull all items
updates the user reference to the new user
returns the rule input type ref
returns the code display model context code associated with this
sets the type ref rule for the given type ref
sets the model control to the current state
sets the security context ref
sets the insert dt
sets the display model for this reference
returns the form control columns
sets the user reference to the given user
sets the columns control columns
sets the transaction
returns the functions script
sets the settings form
sets the insert dt
sets the functions script
sets the update dt
sets the display model for this reference
sets the user reference to the given user
updates the user reference to the new user
sets the id of the object
sets the help url
sets the maximum width of the given column
sets the version of the version
sets the transaction
returns the min width
returns the icon reference
sets the minimum width of the table
sets the update dt
sets the icon ref for this object
gets the original column id
returns the action form type ref
sets the original column id
updates the user reference to the new user
returns the owner ref
sets the value of the code value code property
sets the insert dt
sets the display model owner
sets the version of the version
sets the id of the object
sets the form type ref
sets the display model for this reference
sets the value for the
sets the user reference to the given user
sets the active ind of the active indicator
returns the min control width
gets the value of the add view ref property
sets the value unit ref
gets the value of the action order type ref property
sets the id of the object
adds a new view ref to this view
sets the transaction
gets the access list term id
sets the minimum control width of the control
sets the display model for this reference
sets the access list of access to the given term
returns the application control group reference
sets the version of the version
returns the min label width
sets the control group for this group
sets the foreign key order type ref
sets the update dt
sets the background color of the cell
sets the minimum label width
updates the user reference to the new user
returns the minimum row height
returns the control icon reference
sets the active ind of the active indicator
returns the action view ref
sets the icon used to display the control
sets the version of the version
sets the minimum row height
sets the authorization ref
sets the transaction
returns the model class name
sets the model class name
sets the view ref action view
returns the model default script
sets the foreground color of the cell
returns true if the portlet is a separator
sets the default script
sets the insert dt
returns whether the tab is a tab or not
sets the user reference to the given user
returns true if the control is full
sets the update dt
sets the settings form settings type
returns true if the type is a section section
sets the display model for this reference
returns whether the section panel is a section panel
sets the id of the object
sets the display sequence of the display
returns whether the panel is a group panel
updates the user reference to the new user
returns true if the section is not full
sets the form to use for the form
returns the access type ref of this reference
sets the transaction
sets the access type ref
compares this object with the specified object
sets the insert dt
sets the update dt
returns the model of the model
updates the user reference to the new user
returns true if focus is a default focus
sets the version of the version
sets the user reference to the given user
getter for property post layout script
sets the version of the version
sets the display model for this reference
sets the active ind of the active indicator
sets the post layout script
returns the row spec
returns true if the model is bound
sets the row spec for the row
sets the transaction
returns the model ref id
returns the source reference model
sets the update dt
sets the source reference model
sets the display model for this reference
returns the source reference model
updates the user reference to the new user
returns true if this source has a source
sets the id of the object
sets the version of the version
sets the id of the plugin
sets the active ind of the active indicator
sets the transaction
sets the active ind of the active indicator
returns the tab layout
sets the display sequence of the display
sets the tab layout string
returns the application control name
returns the reference to the code tabbed pane code
sets the insert dt
sets the reference to the code code
sets the insert dt
sets the active ind of the active indicator
sets the user reference to the given user
sets the update dt
sets the application control name
sets the user reference to the given user
sets the display model owner
sets the class name of the plugin
updates the user reference to the new user
sets the selected list form type reference
returns the plugin ref
returns the validation script
sets the plug in reference
returns the view ref id
sets the validation script
sets the system model for this reference
returns true if the image path has the same path
checks the validity of the
sets the version of the version
returns the application control for the given application id
returns the row script that is used to render the cell
sets the transaction
returns the application control model for the given application name
returns the model control
sets the script ref
sets the update dt
sets the view reference to the given model
sets the reference to the form element
gets the select action ref
returns the view type ref
updates the user reference to the given user
returns the script action script
sets the selected action ref
returns the id of the action view
sets the view type reference for this view
sets the version of the version
returns the right click action ref id
sets the control action script
sets the display model for this reference
returns the right arrow action ref
sets the transaction
returns the table context ref
sets the table context ref
sets the data type reference for this data source
sets the update dt
sets the id of the object
returns the background processing phase
this method is called when the models model is
updates the user reference to the new user
sets the id of the object
sets the active ind of the active indicator
sets the id of the object
sets the version of the version
returns true if the background processing is a background image
sets the active ind of the current state
returns true if the background processing is not background
sets the insert dt
sets the business rule model
sets the application group reference
sets the id of the object
sets the user reference to the given user
gets the original panel id
sets the active ind of the active indicator
sets the background image to be rendered
sets the original panel id
sets the application model to use for the application
sets the display model owner
gets the pref panel id
sets the preference page
sets the data type reference for this data source
sets the active ind of the active indicator
sets the display model for this reference
sets the background processing background image
sets the reference to the form type reference
sets the transaction
sets the update dt
updates the user reference to the new user
gets the value of the business rule type ref property
sets the background of the background image
sets the value of the code business rule type ref code property
sets the version of the version
returns the name of the application panel
sets the insert dt
sets the name of the application panel
sets the user reference to the given user
sets the insert dt
sets the id of the object
returns the base model type reference
returns the application panel type reference
returns the value of multiple value
returns true if this is a multiple value
sets the application panel type reference
sets the insert dt
returns true if the value is not a multiple value
sets the user reference to the given user
sets the base model type reference from the given model ref
sets the user reference to the given user
sets the multiple value of this object to the multiple value
sets the active ind of the active indicator
returns the overview
sets the not multiple value of the simple property not
sets the overview of the overview
sets the application control id
sets the application view id
sets the value of the multiple value of the property
sets the type ref rule for the given type ref
returns the background color
gets the rule check ref rule check ref
sets the value of the setting
sets the rule check ref check box
sets the background color of the background
sets the insert dt
sets the user reference to the given user
sets the display model for this reference
sets the rule sequence number
sets the order template reference
sets the system model for this reference
sets the display model for this reference
sets the transaction
returns the template ref for the templates
sets the category ref
sets the owner of the user who owns this user
sets the update dt
sets the transaction
updates the user reference to the new user
sets the system transaction seq
returns the qualification of the qualification
update the date time of the update
returns the number of exceptions
sets the class name of the class
returns true if the exception is a throw exception
sets the qualification script
updates the user reference to the new user
returns true if the current exception is not throw exception
sets the id of the object
sets the version of the version
sets the value of charge item id
sets the value of the context ref property
sets the throw exception
sets the version of the version
sets the not throw exception
returns the default tab ind
gets the class instantiate script
returns true if the menu is a menu item
sets the record ref
sets the throw exception
returns true if the toolbar is currently visible
returns true if the default tab is a default tab
sets the active ind of the active indicator
sets the update dt
sets the class instantiate script
returns true if the default tab is not default tab
returns the view with the given id
returns the control panel with the given id
returns the reference to the application toolbar
sets the settings form
sets the default tab
updates the user reference to the new user
returns the control panel with the given control name
sets the form type ref
returns the panel with the given id
returns the chart menu form type ref
sets the chart menu form
sets the default tab for the default tab
returns the chart tool form type reference
returns the panel with the given name
sets the version of the version
sets the chart tool form type
sets the default tab ind
sets the settings form settings type
returns the name of the application control
replaces the current application with the new name and the
sets the name of the application control
sets the insert dt
sets the user reference to the given user
returns the system action ref icon
sets the role group reference for this group
sets the icon for the system action
sets the settings form
sets the id of the object
sets the display model for this reference
sets the transaction
sets the display sequence of the display
sets the update dt
sets the active ind of the current state
sets the id of the object
sets the display model for this reference
getter for property divide top ind
updates the user reference to the new user
returns true if the is a top bottom
sets the version of the version
returns the child panel model
returns the parent panel of the parent panel
sets the top bottom
sets the view ref action view
sets the id of the object
sets the insert dt
sets the top bottom bottom top bottom
sets the user reference to the given user
sets the top bottom ind attribute of the scan2 d object
returns the combo model ref
returns the parameter view ref
sets the active ind of the active indicator
sets the view ref
returns the current location reference
returns the target control context
returns the display class ref
sets the current location of the current location
sets the return class ref to use for the given class
returns the current role reference
returns the display sequence of the current sequence
returns the model reference
sets the current role reference of the current role
returns the amount of the divider that are used to restore the
sets the target control context for this target
sets the category reference
returns true if the current touch point is one touch one touch
returns the script language ref
sets the id of the object
getter for property target control term id
returns true if the current touch point is one touch one touch
sets the script language ref
returns the script reference
sets the current
sets the script ref
sets the control term
sets the not touch one touch point
returns the script type ref
gets the value of the combo search ind property
sets the insert dt
sets the touch percentage
sets the script type ref
sets the active ind of the active indicator
getter for property hide tab ind
sets the user reference to the given user
sets the system model for this reference
sets the database table reference to the given database reference
sets the active ind of the active indicator
returns true if the tab is currently being a tab
sets the category model
returns true if the tab is not hidden
sets the id of the object
returns true if the combo box is
hide the tab
sets the id of the object
sets the transaction
hides the tab
sets the term id
returns true if the search is not enabled
update the update date time for the date time
sets the application control id
sets the display model for this reference
sets the reference to the data source
sets the hide tab ind
getter for property term
updates the user reference to the new user
sets the active ind of the active indicator
sets the insert dt
sets the search combo
gets the value of the add term ref property
sets the transaction
sets the active ind of the active indicator
sets the version of the version
sets the term
sets the new value of the add term category ref
sets the user reference to the given user
sets the update dt
sets the not combo box dynamic search
sets the application control name
sets the application control id
updates the user reference to the new user
returns the reference
sets the reference
sets the insert dt
sets the reference to the of the
sets the search combo for the given searchable
gets the sql expression of the sql expression
returns the column class
returns the reference
sets the sql join list
sets the column class
sets the version of the version
sets the reference
returns the context entity reference
sets the user reference to the given user
sets the reference to the new element
sets the text of the term
sets the display model for this reference
returns the column format
returns the layout constraint
returns the current context sequence
sets the column format
sets the context sequence number
returns the term editable indicator
sets the transaction
returns true if the text content is editable
returns the x coordinate of the location
sets the data type reference for this data source
sets the column name
sets the update dt
sets the x coordinate of the location of the camera
returns the combo model ref
returns true if the text content is editable
sets the class instantiate script
updates the user reference to the new user
sets the selected group reference
returns the y coordinate of the location
sets the text editable
sets the version of the version
sets the y coordinate of the location of the y axis
sets the not term text editable
returns the maximize ind
sets the facility location of the facility reference to the given
sets the edited value of the code term text em ind
returns true if the maximize state is a maximize state
sets the control class
sets the insert dt
sets the comparison operator for this model
returns true if the maximize state is maximize
sets the id of the object
returns the combo value for combo indicator
sets the user reference to the given user
sets the access term id
sets the maximize environment
sets the update dt
sets the value of the context ref property
maximizes the maximize button
sets the display model for this reference
sets the id of this object
returns the control description
returns true if the combo is displayed in the combo box
sets the maximize value
sets the active ind of the active indicator
sets the control description
gets the auth role group reference
updates the user reference to the new user
sets the transaction
sets the reference to the selected role
returns the control format
sets the active ind of the active indicator
sets the update dt
sets the authorization ref
returns true if the combo is not a display
sets the application dialog
updates the user reference to the new user
returns the minimum size of the minimum width
sets the control format
gets the detail record item record
sets the minimum size of the window
returns the default allow phase
sets the detail record
returns true if the default value is allowed
set the combo to display
returns the title of the panel
returns true if the default editor is allowed to be default
sets the default value for the default protection
sets the title of the panel
sets the insert dt
sets the default indicator for the
returns the preferred height of the component
returns the free text term reference
sets the default allow auto unassigned value
returns the control type reference to the control type
sets the user reference to the given user
sets the id of the object
sets the preferred height of the window
sets the value of free text term ref
sets the display to not
returns the preferred size width
sets the value of control type ref
sets the preferred size of the window
sets the active ind of the active indicator
sets the display model for this reference
returns the focus indicator for the focus
returns the number of embedded panels
sets the edited combo field of the combo
returns true if focus is not null
sets the default focus
returns true if the panel is created
sets the default focus to the default focus
sets the insert dt
sets the transaction
sets the default focus ind
sets the user reference to the given user
sets the update dt
getter for property combo values term id
sets the value of the code value code property
returns true if the panel is not already created
updates the user reference to the new user
sets the value for the
sets the panel to show embedded panel
sets the version of the version
sets the value of the combo values term id property
gets the role type ref
getter for property init script
sets the display sequence of the display
sets the role type ref
sets the value unit ref
sets the script
returns the size of the image
this method sets the not create embedded panel
sets the settings form
sets the size height
sets the version of the version
sets the value of the create embedded panel ind
sets the system model for this reference
sets the insert dt
sets the comparison operator for this model
returns the size of the width of the image
sets the size of the width of the window
sets the insert dt
sets the user reference to the given user
sets the transaction
sets the user reference to the given user
gets the original control id
sets the value of the context ref property
update the date time of the update
sets the original control id
returns the maximum width of the maximum value
returns true if the maximum limit is allowed to limit the maximum
sets the display model owner
updates the user reference to the new user
returns true if maximum width is less than max width limit
sets the display model for this reference
sets the maximum width of the maximum
sets the version of the version
sets the maximum width to max width
sets the control description
sets the maximum number of allowed maximum number of characters that should
returns the limit min width indicator
sets the transaction
sets the value of the code value code property
returns true if the limit is allowed in the limit window
sets the update dt
sets the display model for this reference
returns true if the limit is allowed in the range limit
updates the user reference to the new user
sets the control format
sets the maximum width of the charts
sets the value for the
sets the version of the version
sets the minimum width of the charts
sets the maximum number of allowed
returns the locked ind
returns true if the current lock is locked
sets the value unit ref
sets the transaction
returns true if the current lock is locked
sets the locked appearances
sets the locked flag
sets the id of the given object
sets the version of the version
gets the value of the control report ref property
sets the locked ind
sets the default focus ind
sets the maximum width of the given column
sets the active ind of the active
sets the reference to the code code
sets the control report to use
sets the minimum width of the table
sets the entity id
sets the update dt
sets the insert dt
sets the user reference to the given user
sets the model reference model
sets the id of the object
sets the model reference model
updates the user reference to the new user
returns the model script
sets the value of control type ref
sets the system model for this reference
sets the model script
sets the version of the version
returns the render custom controller reference
sets the active ind of the active indicator
sets the transaction
gets the category reference id
sets the category reference id
returns the number of visible parts
set custom controller ref to the current view
sets the update dt
gets the search term reference category
returns true if the current component is visible
updates the user reference to the new user
returns true if the current position is visible
sets the category term ref category
returns the user language language ref
sets the id of the given object
sets the user language to use for the user
sets the visibility of the cone
sets the version of the version
sets the visible indicator
sets the description of the object
sets the active ind of the active indicator
sets the visible ind
sets the display sequence of the display
returns the document type ref
sets the reference to the given document type
sets the insert dt
sets the value of the create embedded panel ind
sets the file id
sets the display indicator of the page
sets the user reference to the given user
gets the key sequence
sets the insert dt
sets the key sequence for this node
sets the user reference to the given user
sets the source reference of the source
sets the security context ref
set the custom controller for this controller
sets the system model for this reference to the given
sets the display model for this reference
sets the transaction
returns the template ref for the current template
sets the short display
sets the value of the code template ref code property
sets the system change
sets the update dt
sets the display sequence of the display
sets the transaction
updates the user reference to the new user
sets the reference key
sets the user ref to the given user
sets the version of the resource to be used
returns the number of selected rows in the model
set the dt dt time for this system
returns true if the model selected by the
sets the id of the object
sets the display model for this reference
returns true if the current model is currently dragged
sets the active ind of the active indicator
sets the id of the object
sets the id of the object
sets the transaction
sets the drag selected model to the current one
sets the reference to the model of the reference model
sets the active ind of the active indicator
sets the update dt
sets the active ind of the active indicator
returns the child reference
sets the drag selected
sets the description of the object
sets the child display model
gets the value of the implementation number property
returns the child sequence number
sets the value of check digit
updates the user reference to the new user
sets the child sequence number
sets the implementation of implementation of the
sets the selection of the selected model
sets the update dt
sets the insert dt
sets the version of the version
returns the embedded view layout
sets the user reference to the given user
updates the user reference to the new user
sets the deleted ind
returns the reference category reference
sets the layout view layout
sets the reference category reference
sets the insert dt
gets the reference group attribute of the object
sets the reference group for the reference
sets the version of the version
sets the user reference to the given user
returns the reference type ref
returns the parent reference of this instance
returns the embedded view reference
sets the reference type reference for this reference model
sets the parent model for this reference
sets the index
returns the reference relation ref
returns the system defined ind
sets the reference relation to the given relation
returns true if the system is defined
sets the embedded view reference
returns true if the system is not system defined by the
sets the display model for this reference
sets the system defined by the current setting
sets the insert dt
returns the flat effect ind
sets the not system defined property
sets the transaction
sets the system defined ind
sets the user reference to the given user
returns the system group only ind
sets the update dt
sets the default focus ind
returns true if the flat effect is flat
returns true if the system group is a system group only
updates the user reference to the new user
returns true if the system group is only only one of the
sets the version of the version
set the system group only for the system
sets the source reference of the source
sets the not system group only for the system group
returns true if the flat effect is not a composition
sets the number of the ind to be marked for the
sets the display model for this reference
returns the default
sets the display model for this reference
set the flat effect for this flat effect
sets the transaction
sets the default
sets the transaction
sets the flat flag inversion
sets the update dt
sets the update dt
updates the user reference to the new user
updates the user reference to the new user
sets the flat ind
sets the id of the object
sets the version of the version
sets the version of the version
returns the default unit ref
returns the focus gained from the focus script
sets the id of the object
sets the active ind of the active indicator
set the focus gained from the form
sets the default unit ref
sets the background color of the cell
sets the active ind of the active indicator
returns the focus lost script
sets the id of this object
sets the focus lost script
returns the display model of this unit reference
sets the deleted ind
sets the reference to the unit reference
sets the insert dt
sets the active ind of the active indicator
returns the form view ref
sets the user reference to the given user
sets the category reference id
sets the form view reference
returns the numerator of this rational
sets the numerator of this rational
sets the display model for this reference
sets the insert dt
sets the user reference to the given user
sets the transaction
returns the to unit ref object for this unit reference type
sets the description of the object
sets the reference to the unit that is used to display the
sets the update dt
returns the default value rule ref rule
returns true if the status is active
updates the user reference to the new user
sets the display sequence of the display
returns the status of the status
sets the id of the object
returns the transition model of the transition
returns the location form type ref
sets the version of the version
sets the insert dt
sets the location form type reference for this form
returns the order name
sets the default value rule for the default value
returns the grow height
this method is called when the transition model is cancelled
returns the location icon for the location of the
sets the user reference to the given user
sets the active ind of the active indicator
returns the charge charge charge
sets the location icon location for the given icon
sets the background color of the cell
sets the id of the object
returns the list of in the list
sets the key sequence for this node
returns the location type ref
sets the grow height
returns the item display order item name
sets the location type ref to the given value
returns the grow width
sets the security context ref
sets the active ind of the active indicator
sets the short display
sets the settings form settings type
sets the grow width
returns the maximal order model of the current state
sets the display model for this reference
sets the background color of the cell
sets the display model for this reference
sets the insert dt
sets the id of the object
sets the id of the object
sets the transaction
sets the user reference to the given user
sets the transaction
returns the order icon ref
sets the update dt
sets the order icon ref
sets the update dt
updates the user reference to the new user
gets the order instance status reference status
sets the version of the version
updates the user reference to the new user
sets the status of the status change
sets the version of the version
sets the state sequence of the state
sets the insert dt
sets the display model for this reference
sets the active ind of the active experiment
sets the user reference to the given user
gets the value of the order form type ref property
sets the order form type reference
returns the chart form type reference
sets the path to the image path
sets the order icon ref
sets the id
sets the transaction
sets the chart form type
gets the value of the order item type ref property
sets the order item type reference
returns the first element of the container model
sets the update dt
sets the id of the object
updates the user reference to the new user
sets the comments
returns the report ref
sets the version of the version
sets the script
sets the report reference
sets the settings form
set the custom controller for this controller
sets the id of the object
returns the default duration of the
sets the display model for this reference
sets the detail record
sets the insert dt
sets the default duration of the task
sets the active ind of the active indicator
returns the duration unit ref resolution
insert the methods description here
sets the transaction
sets the default duration of the default durations unit
returns the transition order state id
sets the id of the object
sets the update dt
sets the insert new lines
updates the user reference to the new user
sets the id of the object
sets the transaction
sets the version of the version
sets the active ind of the active indicator
sets the active ind of the active indicator
sets the deny transition ind
sets the insert dt
sets the user reference to the given user
sets the user reference to the given user
sets the id of the object
getter for property order instance transition transition id
sets the insert dt
sets the order of the transition ids to transition to
sets the deleted ind
sets the user reference to the given user
returns the instance time model
sets the role group reference for this group
set the instance of the date time
sets the deny transition ind
sets the inset of the text area
sets the display model for this reference
sets the active ind of the active indicator
sets the insert dt
sets the value of check digit
sets the user reference to the given user
returns the instance state reference of this instance
sets the transaction
get order type transition id
sets the state instance state ref to the given state
sets the order type id
sets the form id
sets the update dt
returns the instance of the reference model
sets the role group reference for this group
sets the status ref to the given status
updates the user reference to the new user
sets the insert dt
sets the display model for this reference
sets the version of the version
returns the key stroke
sets the display model for this reference
sets the transaction
sets the id of the object
sets the key stroke
sets the user reference to the given user
sets the index
sets the update dt
sets the transaction
returns the instructions
sets the sound
updates the user reference to the new user
sets the display sequence of the display
sets the update dt
returns the role of the order of the role
sets the insert dt
sets the instructions for this transition
sets the version of the version
updates the user reference to the new user
sets the id of the object
sets the user reference to the given user
returns the order as needed
sets the version of the version
sets the active ind of the active indicator
returns true if the order is needed
sets the source reference of the source
returns true if the order is not an order as needed
sets the display model for this reference
sets the active ind of the active indicator
sets the default duration of the file
set the custom controller for this controller
sets the transaction
sets the default duration of the default durations unit
sets the id of the object
sets the update dt
sets the order as needed by the
updates the user reference to the new user
returns the order as needed
sets the active ind of the active indicator
sets the version of the version
sets the background color of the cell
sets the order as needed by the code code
sets the locked ind
gets the order frequency ref
this method is called when the group is ordered
sets the order frequency for this column
sets the model reference model
sets the id of the object
sets the id of the object
sets the insert dt
returns the number of the order instance count
sets the selection of the selected model
sets the order instance count
sets the user reference to the given user
sets the insert dt
sets the active ind of the active indicator
sets the model script
sets the state of the transition
sets the user reference to the given user
sets the active ind of the active indicator
gets the negative comparison ind
sets the insert dt
sets the order icon ref
set the custom controller for this controller
returns true if the negative comparison is negative
sets the user reference to the given user
sets the insert dt
gets the order status ref
sets the order item type reference
sets the layout view layout
sets the order status ref
sets the user reference to the given user
returns true if negative 0
sets the order as needed by the
sets the state sequence of the state
returns the order priority ref
set negative comparison
sets the priority priority ref
sets the display model for this reference
sets the order as needed by the
sets the display model for this reference
gets the order protocol ref
set the not negative negative comparison
sets the order protocol ref
sets the id of the object
sets the number of negative negative negative negative negative negative negative negative
sets the transaction
returns the order provider reference
sets the transaction
sets the order action ref
sets the order provider reference
returns the parameter model ref
sets the update dt
sets the update dt
sets the embedded view reference
sets the order frequency for this column
sets the active ind of the active indicator
updates the user reference to the new user
updates the user reference to the new user
sets the version of the version
sets the value of parameter model ref
returns the overview ref
sets the version of the version
sets the overview ref
returns the parameter ref
gets the order quantity unit ref associated with this item
sets the state of the transition
sets the settings form
sets the order item type reference
sets the value of parameter ref
sets the order quantity unit ref unit to the given value
sets the display model for this reference
sets the insert dt
returns the parameter source ref
sets the priority priority ref
gets the order start dt
sets the insert dt
sets the user reference to the given user
sets the value of parameter source
sets the order start dt
sets the order protocol ref
sets the user reference to the given user
sets the transaction
sets the display model for this reference
sets the state of the reference to the given model
sets the parent id
sets the transaction
sets the update dt
sets the transition form state
visits all patients losing patients
sets the order quantity unit ref unit to the given value
sets the id of the object
updates the user reference to the new user
sets the transition icon ref
sets the version of the version
sets the order start dt
sets the active ind of the active indicator
sets the order action ref
returns the order state ref
sets the transition rule ref
returns the order transition reference
sets the transition ref to the given value
sets the state of the order model
sets the deleted ind
sets the update dt
sets the not required flag
sets the insert dt
updates the user reference to the new user
sets the user reference to the given user
sets the flat ind
sets the settings form
sets the id of the object
sets the order status ref
sets the order status ref
returns the right arrow action ref
sets the version of the version
sets the display model for this reference
sets the display model owner
returns the order stop time model
sets the right arrow action ref
sets the display model for this reference
sets the active ind of the active indicator
returns the focus gained reference
sets the order stop time
sets the order stop time
returns the right click action reference
sets the background color of the cell
sets the transaction
sets the transaction
sets the right click action reference
sets the table context ref
set the focus gained from the focus
sets the state of the reference to the given model
sets the update dt
sets the transition form state
updates the user reference to the new user
sets the id of the object
sets the order template reference
sets the version of the version
sets the transition icon ref
gets the value of the ordering user ref property
sets the active ind of the active indicator
gets the order location ref location
sets the ordering of the list of models to the given one
sets the transition rule ref
sets the insert dt
sets the location of the order template
returns the ref
set the focus gained from the form
sets the insert dt
sets the user reference to the given user
sets the user reference to the given user
sets the update dt
sets the source ref source model
sets the settings form
sets the display model for this reference
returns the reference object
updates the user reference to the new user
sets the display model for this reference
returns the focus lost action reference
sets the order template reference
sets the model for this
sets the transaction
sets the update dt
sets the version of the version
gets the order type ref
updates the user reference to the new user
sets the focus lost action for this field
sets the transaction
sets the version of the version
sets the order type ref
sets the update dt
updates the user reference to the new user
sets the focus lost script
sets the version of the version
sets the ordering of the list of models to the given one
returns the visit of the top left corner of the
sets the visit model for visit
sets the selected action ref
returns the owner user group reference
sets the id of the object
sets the id of the object
sets the owner of the user group
returns the number of skip focus
sets the active ind of the active indicator
returns true if the current focus is a skip focus
sets the display model for this reference
returns the font ref to use for the current font
returns true if the current cursor is not skipped
sets the owner of the user who owns this user
sets the id of the object
sets the font ref to use for the font
sets the focus to the next child
sets the insert dt
sets the user reference to the given user
sets the current focus to the next child
sets the transaction
sets the active ind of the active indicator
sets the focus indicator to the given value
sets the display model for this reference
sets the value of check digit
sets the font size of the
sets the patients location reference
sets the system transaction seq
returns the font style ref
sets the source reference of the source
sets the update dt
sets the deleted ind
updates the user reference to the new user
sets the font style reference for the font
returns the user reference to the user
sets the value of the code record item domain ref code property
sets the user reference to the given user
sets the value of the template ind property
returns the user role reference
returns the identifier list for the given identifier
sets the system change
returns the identifier list for the given code
sets the user role reference to the given value
sets the index
sets the version of the version
sets the id of the object
sets the update dt
sets the reference to the form
sets the insert dt
sets the user ref to the given user
gets the value of the scheduled until dt property
sets the user reference to the given user
updates the user reference to the new user
sets the active ind of the active indicator
sets the scheduled deadline
set the dt dt time for this system
sets the source reference of the source
sets the version of the version
sets the display model for this reference
sets the deleted ind
sets the insert dt
sets the user reference to the given user
sets the transaction
sets the update dt
sets the id of the object
returns the provider role reference
sets the display model for this reference
sets the provider role reference
updates the user reference to the new user
sets the end dt time
sets the version of the version
gets the value of the role start dt property
sets the id of the object
sets the reference to the given service reference
sets the start dt dt
sets the active ind of the active indicator
sets the settings form
sets the transaction
gets the value of the birth date property
sets the display model for this reference
returns the next group in the group
sets the birth date
returns the unit height
sets the source ref source model
sets the system transaction seq
sets the height of the unit
sets the update dt
sets the model for this
returns true if the group is next control
updates the user reference to the new user
returns the reference
sets the system model for this reference
sets the width of the unit
sets the version of the version
sets the reference
returns true if the next group is not group
sets the visit id
returns the death dt
sets death of time
sets the update dt
sets the next group control
sets the transaction
returns the death ind of the death
returns true if the is a death vm
sets the id of the object
updates the user reference to the new user
sets the next control to the next group
returns true if the is not a death vm
set the death of the death
sets the id of the object
sets death death
gets the value of value data type ref property
sets the active ind of the active indicator
sets the death ind of the death
returns the reference
sets the id of the node
sets the next control ind
sets the death status of the living
sets the value data type reference
returns the reference
sets the active ind of the active indicator
sets the deleted ind
sets the reference
sets the insert dt
sets the id of the object
sets the value of the template ind property
sets the user reference to the given user
getter for property group panel layout
sets the display model for this reference
sets the version of the version
sets the id of the object
sets the insert dt
sets the active ind of the active indicator
sets the system transaction seq
sets the term id
sets the active ind of the experiment
sets the user reference to the given user
sets the update dt
returns the level reference for this
sets the layout panel layout
sets the active ind of the active indicator
updates the user reference to the new user
sets the level for the
gets the portal role reference
sets the portal role reference
returns the source ref
sets the user reference to the given user
sets the source reference of the source model
gets the value of the role end date property
returns the type ref
sets the user role reference to the given value
sets the end dt time
sets the type ref
sets the version of the version
gets the dt
sets the insert dt
sets the date time dt
sets the user reference to the given user
sets the first name of the user
sets the location reference to the given location
sets the update dt
sets the start dt dt
sets the insert dt
sets the grow height
sets the patients id
returns the status ref
gets the identifier answer
sets the user reference to the given user
sets the status of the
sets the reference to the given service reference
updates the user reference to the new user
sets the identifier answer
sets the display model for this reference
sets the visible ind
returns the arrival mode of the arrival mode
sets the display model for this reference
sets the version of the version
sets the middle name of the
sets the arrival mode of the object
sets the insert dt
sets the transaction
gets the password reset ind
returns true if the password is a password reset
sets the update dt
sets the visit id
returns true if the password is not empty
sets the transaction
sets the user reference to the given user
resets the password reset to zero
updates the user reference to the new user
returns the warning
resets the password to 0
sets the grow width
returns the language ref
sets the update dt
sets the warnings
sets the version of the version
sets the password reset ind
sets the language ref to use for the language
updates the user reference to the new user
gets the portal role group reference
returns the disposition ref
sets the version of the version
sets the new value of the portal role group reference
sets the disposition reference property
sets the id of the object
returns the help file id
sets the last name of the user
gets the dt
sets the date time dt
sets the active ind of the active indicator
returns the association reference
sets the display model of this association
sets the help file id
sets the suffix
gets the to location
sets the display model for this reference
sets the location to the given
returns the status ref
sets the insert dt
sets the status of the
sets the user reference to the given user
sets the location of the facility to which the facility
sets the transaction
sets the location reference to the given location
returns the system user reference system
sets the display model for this reference
sets the user reference to the given user
sets the middle name of the
sets the initial form id
sets the system transaction seq
sets the update dt
returns the status ref
sets the update dt
updates the user reference to the new user
sets the status of the
sets the insert dt
updates the user reference to the new user
sets the version of the version
gets the value of the multiple rows ref property
sets the version of the version
sets the user reference to the given user
sets the new value of the new
returns the reference
sets the location reference to the given location
sets the reference
sets the id of the given object
sets the patients id
sets the id of the object
gets the hide patient portal ind attribute of the company bean object
sets the reference
sets the prefix
returns the reason for visit for visit for visit
returns the primary care location reference object
sets the reason for the visit
returns whether the patient is currently being hidden
sets the active ind of the active experiment
sets the id of the object
set the reference to the primary location
gets the primary care model reference
sets the birth date
sets the active ind of the active indicator
sets the active ind of the active indicator
set the primary care of the user
returns whether the patient should be hidden
sets the level for the
sets the insert dt
sets the source reference of the source code
sets the user reference to the given user
sets the reference to the given service reference
set the hide patient portal
sets the type ref
sets the system model for this reference
sets the provider role reference
returns the identifier list of the given identifier
returns the name of the patient
returns the identifier list associated with the given ref
sets the date time dt
sets the end dt time
set the hidden patients portal
gets the age of the person
sets the id of the object
returns the age in years
sets death of time
returns the age in months
returns the age in days in days
sets the visit
returns the visit of the visit
begin user doc ast
sets the start dt dt
sets the transaction
sets the system change
sets the hide patients portal ind attribute of the credit card portal
returns the display name of the current patient
sets the active ind of the active indicator
sets the status of the
sets the value of check digit
sets the display model for this reference
sets the user ref to the given user
sets the arrival mode of the object
returns the value of the code html max length code property
sets the id of the object
sets the update dt
sets the system transaction seq
set the dt dt time for this system
sets the update dt
sets the active ind of the active indicator
updates the user reference to the new user model
updates the user reference to the new user
sets the max length attribute of the object
sets the index
sets the version of the version
sets the version of the version
sets the death ind of the death
sets the id of the object
sets the insert dt
sets the display model for this reference
returns the status ref
sets the disposition reference property
sets the user reference to the given user
returns the html size of the html
sets the status ref to the given
sets the death status of the living
sets the date time dt
sets the source reference of the source
sets the active ind of the active indicator
returns the content type ref
returns the visit model ref
sets the content type reference to the given content type
sets the icon ref for this item
sets the display model for this reference
returns the icon type reference
sets the visit status reference
sets the icon type ref
sets the html size of the
returns the image file id
returns the reference to the visit type ref
sets the transaction
sets the image file id
sets the transaction
sets the visit type ref
returns the execution type ref
sets the insert dt
sets the execution type ref
sets the update dt
returns the external application
sets the update dt
sets the user reference to the given user
sets the external application
sets the location to location
updates the user reference to the new user
returns the resource path
sets the insert dt
sets the resource image path
sets the image icon ref
sets the version of the version
sets the user reference to the given user
updates the user reference to the new user
sets the insert dt
sets the system model for this reference
sets the display model for this reference
sets the user reference to the given user
sets the version of the version
sets the transaction
sets the transaction
sets the path to the image path
update the date time of the update
sets the update dt
this method will be called by the to set the queue
sets the location reference to the given location
sets the id of the object
updates the user reference to the new user
updates the user reference to the new user
sets the version of the version
sets the version of the version
sets the patients id
sets the active ind of the active indicator
sets the script
sets the reason for the visit
sets the deleted ind
sets the insert dt
sets the user reference to the given user
sets the reference to the given service reference
returns the printer location ref
sets the printer for the printer
sets the identifier answer
returns the printer for printing the printer
sets the printer to use for printing
sets the insert dt
sets the system change
returns the printer printer string
sets the printer model
returns the printer printer
sets the user ref to the given user
sets the printer for this printer
sets the initial form id
returns the printer for printing the printer
sets the printer for this printer
sets the display model for this reference
set the dt dt time for this system
sets the insert dt
sets the transaction
returns the test printer indicator
test if the printer is a printer
sets the user reference to the given user
test if the printer is not a
sets the printer to the default value
sets the insert new lines
sets the printer to the default value
sets the display model for this reference
sets the test printer indicator
sets the help file model
sets the language ref to use for the language
sets the update dt
sets the id of the object
sets the help message for this help view
updates the user reference to the new user
sets the version of the version
sets the id of the object
sets the last name of the person
returns a copy of the model of the current file
sets the transaction
returns the local file directory
returns the directory path
returns the path to the file
sets the active ind of the active indicator
sets the id of the given object
sets the id of the object
sets the user reference to the given user
sets the update dt
sets the active ind of the active indicator
sets the database table reference to the given database reference
sets the active ind of the active indicator
updates the user reference to the new user
sets the active ind of the active indicator
sets the insert dt
sets the version of the version
sets the status of the
sets the content type reference to the given content type
sets the user reference to the given user
sets the status of the
set the middle name
sets the insert dt
sets the inset of the text area
sets the display sequence of the display
sets the user reference to the given user
getter for property entity table id
sets the entity table
sets the display model for this reference
sets the deleted ind
sets the status of the
sets the id of the object
returns the access sequence for this
sets the access sequence of the current record
sets the visit status reference
sets the transaction
sets the id of the object
sets the new value of the attribute
sets the update dt
sets the insert dt
sets the visit type ref
returns the file device
updates the user reference to the new user
set the file device name
sets the user reference to the given user
sets the active ind of the active indicator
sets the active ind of the active indicator
sets the version of the version
returns the file directory
sets the directory to be used for the file
sets the scheduled deadline
sets the display model for this reference
sets the nickname of the current user
returns the file type ref
getter for property nickname index
sets the reference to the file type ref
set the file device name
sets the insert dt
sets the transaction
sets the current nickname
sets the user reference to the given user
sets the directory to be used for the file
returns the scheduler job status ref
sets the status of the scheduler job
sets the display model for this reference
sets the file id
returns the scheduler reference
sets the key stroke
sets the display model for the scheduler
returns the topic reference
sets the transaction
sets the reference to the topic
sets the reference to the file type ref
sets the display model for this reference
sets the update dt
sets the insert dt
sets the update dt
updates the user reference to the new user
updates the user reference to the new user
sets the transaction
sets the user reference to the given user
sets the prefix
sets the version of the version
sets the update dt
sets the version of the version
returns the environment node that is the current environment node
sets the insert dt
updates the user reference to the new user
returns the original file path
sets the id of the object
set the reference to the primary location
sets the original file path to the original file
sets the version of the version
sets the user reference to the given user
returns the label action ref
sets the display model for this reference
sets the system model for this reference
sets the primary care of the relation
sets the label action ref
sets the transaction
sets the database url
sets the transaction
sets the update dt
sets the username to use for the database
updates the user reference to the new user
update the date time of the update
sets the id of the object
sets the version of the version
updates the user reference to the new user
returns the environment reference
sets the environment reference to the given environment
sets the version of the version
returns the path to the code path code
returns the text contents of the virtual text
sets the path to the code location code of the
returns the production technology of the
sets the contents of the text contents
returns true if this production is a production
sets the id of the job
returns true if this production is not a production
sets the production technology
sets the production concept
sets the suffix
sets the production technology
getter for property environment id
sets the active ind of the current event
sets the environment id
getter for property default settings form id
sets the system model for this reference
sets the default settings form
sets the transaction
sets the id of the object
sets the hostname of the server
sets the id of the server
sets the active ind of the active indicator
returns the model of the connectivity graph
sets the connection type ref
sets the ip address
returns the node reference
sets the insert dt
sets the node reference of the node
sets the transaction
returns the node type reference for this node
sets the user reference to the given user
sets the reference to the node that represents the node type
returns the job action ref
returns the service port
returns the number of patients
sets the selected custom action ref
returns the dns name
sets the service port
gets the reference to the job ref
sets the dns name for this server
sets the custom job controller reference for this instance
checks if the patient is a test patient
sets the insert dt
returns the label preferred height
checks if the patient is not already in patients
sets the id of the object
returns the job script
sets the test patient
sets the user reference to the given user
sets the local hostname
sets the job script
returns the filter ind
sets the transaction
sets the patient
returns true if the filter is
sets the preferred height of the label
sets the view ref
sets the test patient ind
returns true if the filter is not
sets the filter
sets the system model for this reference
sets the active ind of the active indicator
sets the not filter
update the date time of the update
sets the filter ind
sets the transaction
returns the name of the node that this node represents
sets the transaction
returns the preferred width of the label
sets the node queue name
updates the user reference to the given value
sets the id of the object
update the date time of the update
sets the insert dt
sets the version of the version
sets the id of the object
updates the user reference to the new user
sets the user reference to the given user
sets the preferred width of the label
sets the version of the
sets the active ind of the active indicator
set the instance of the date time
sets the currency code for this currency
sets the active ind of the active indicator
returns the printer ip address
gets the job status ref
set the ip address
sets the value of check digit
sets the status ref to the given status
returns the left click action reference
returns the scheduler job id
returns the printer port
sets the job scheduler
sets the port printer port number
sets the display model for this reference
returns the printer queue ref
gets the expiry time model
sets the printer queue for this connection
sets the expiry time of the time model
sets the left click action reference
sets the transaction
returns the printer for the printer
sets the printer for the tray icon
sets the update dt
getter for property link application control id
updates the user reference to the new user
sets the display model for this reference
sets the version of the version
sets the link to the given id
sets the insert dt
sets the index
sets the id of the object
sets the transaction
sets the user reference to the given user
sets the id of the object
sets the insert dt
sets the update dt
sets the abbreviation of the abbreviation
sets the item cost
sets the user reference to the given user
sets the active ind of the active indicator
updates the user reference to the new user
sets the background color of the cell
returns the item location ref
sets the version of the version
sets the id of the object
sets the location of the item to be displayed in the list
sets the source reference of the source
returns the quantity of the item
sets the active ind of the active indicator
sets the quantity of the item
sets the display model for this reference
sets the value of charge item id
returns the quantity of the component
sets the active ind of the active indicator
sets the quantity of the components in the component
sets the volume of the item
returns the component unit ref
sets the reference to the given unit
sets the transaction
sets the volume unit ref
sets the value of check digit
sets the update dt
returns the label text
sets the barcode
updates the user reference to the new user
returns the current appointment
sets the insert dt
sets the version of the version
sets the id of the object
sets the user reference to the given user
gets the value of the item form type ref property
sets the form type ref
sets the description of the item
sets the item display model item
sets the insert dt
sets the id of the object
gets the lot number
sets the active ind of the active indicator
sets the index
sets the lot number
sets the user reference to the given user
returns the reference to the appointment status ref
sets the locked ind
sets the item cost
sets the insert dt
sets the display model for this reference
sets the appointment status ref
get the id of the item form
sets the active ind of the active indicator
sets the state record record item state
returns the slot slot for the given sequence
sets the item form id
getter for property supplier business form id
sets the user reference to the given user
sets the appointment status ref
sets the value of the supplier business form id property
getter for property item image file id
this method returns the model attachment model
sets the background color of the cell
sets the source reference of the source
sets the id of this object
sets the item image file id
sets the transaction
sets the display model for this reference
sets the display model for this reference
sets the update dt
sets the item name
sets the active ind of the active experiment
updates the user reference to the new user
returns the item name index
returns the completed date model
sets the duration of the file
sets the transaction
sets the date completed
sets the transaction
sets the item name index
sets the version of the version
sets the update dt
returns the name of the item that is used to display the
sets the update dt
sets the insert dt
updates the user reference to the new user
sets the sound name
getter for property hide from date
sets the user reference to the given user
returns the item price
sets the version of the version
returns true if the current time is hiding to show the
updates the user reference to the new user
returns true if the user is hidden
sets the price of the item
set the instance of the date time
sets the hide from calendar
sets the not hide time to the calendar
sets the version of the version
sets the insert dt
sets the hide from date
sets the user reference to the given user
sets the insert dt
sets the display model owner
sets the volume of the item
sets the user reference to the given user
returns the status icon reference
sets the location reference to the given location
sets the id of the object
sets the status icon for this status
gets the status change reason ref
change reason ref status
sets the display model for this reference
sets the active ind of the active indicator
gets the reminder status ref property
sets the display model for this reference
sets the reminder status ref to the given value
getter for property reminder text
sets the transaction
sets the reminder text
sets the update dt
sets the transaction
sets the system model for this reference
updates the user reference to the new user
sets the insert dt
sets the update dt
sets the user reference to the given user
sets the version of the version
get the value of med item package id
returns the resource reference model
returns the instance of the model
updates the user reference to the new user
sets the resource reference to the given resource
sets the transaction
sets the duration to the time
sets the id of the package that contains the item
sets the display model for this reference
sets the version of the version
update the update dt
sets the id of the object
sets the id of the object
updates the user reference model
sets the transaction
sets the update dt
sets the model reference model
sets the version of the
sets the active ind of the active indicator
sets the active ind of the active indicator
getter for property appointment instance id
updates the user reference to the new user
gets the value of the price ref property
sets the value of the code appointment instance id code property
sets the currency ref
sets the version of the version
sets the file id
sets the insert dt
sets the user reference to the given user
this method returns the model of the current message attachment
sets the insert dt
sets the display model for this reference
set the value related to the column recipients
sets the display model for this reference
this method is used to set the message recipient
sets the user reference to the given user
sets the model script
sets the transaction
sets the id of the message
set the instance of the date time
sets the update dt
updates the user reference to the new user
sets the version of the version
sets the transaction
sets the active ind of the active indicator
returns the frequency of the recurrence
sets the update dt
sets the id of the object
getter for property appointment id
returns the resource text
sets the id of this object
sets the appointment id
sets the resource text
returns the slot sequence number
sets the slot sequence
updates the user reference to the new user
sets the active ind of the active indicator
sets the display model for this reference
sets the active ind of the active indicator
sets the version of the version
returns the volume unit reference
sets the id of the object
sets the transaction
sets the volume unit reference
sets the insert dt
sets the insert dt
sets the id of the object
sets the user reference to the given user
sets the update dt
sets the user reference to the given user
returns the time of the time phase
sets the insert dt
returns the slot of the current appointment slot
sets the active ind of the active indicator
returns true if the time is one of the time
sets the user reference to the given user
updates the user reference to the new user
returns true if the time is a not one or more one
sets the time to the next time
returns the message channel ref
sets the active ind of the active indicator
sets the id of the object
sets the not one time one
sets the version of the version
sets the channel reference to the specified message channel
sets the time of the time indicator
gets the value of the message flag ref property
returns the value of repeat value
sets the message flag
sets the value of the repeat value
sets the file id
returns the message format ref
returns the value of the repeat value unit ref
sets the value of the repeat value property
sets the message format ref
sets the insert dt
sets the number of negative negative negative negative negative negative negative negative
sets the active ind of the active indicator
returns the message template ref
sets the user reference to the given user
returns the reference to the code datatype code property
sets the insert dt
sets the message template ref
sets the value of the code appointment form type ref code property
sets the system model to use for the system
sets the user reference to the given user
returns the reference to the appointment type
sets the display model for this reference
sets the reference to the repeater reference
sets the transaction
returns the reference to the appointment type icon
returns the gap column gap
sets the resource text
sets the transaction
sets the value of the code appointment type icon code property
gets the sending address
update the update date time
sets the slot sequence
sets the update dt
returns the reference to the appointment model
set the address to send to the server
returns the message status ref
sets the user reference to the new user
updates the user reference to the new user
sets the gap column gap
sets the appointment type ref
gets the value of the sending owner ref property
sets the display model for this reference
sets the status of the message
sets the owner of the
sets the version of the version
sets the version of the
getter for property receiving address
sets the background color of the cell
sets the receiving address of the rtp address
sets the subject of the message
returns the block schedule ind
sets the transaction
returns the receiving owner reference
returns true if the block is a future schedule
sets the receiving owner reference
sets the update dt
sets the display model for this reference
returns true if the block is not a block
returns the value of the recipient error text
updates the user reference to the new user
sets the block schedule
sets the value of the recipient error text
sets the not block schedule
returns the number of that will be used to solve the
sets the version of the version
sets the block schedule ind
sets the id of the object
sets the transaction
sets the display model for this reference
sets the update dt
sets the active ind of the active indicator
getter for property appointment type id
updates the user reference to the given user
sets the transaction
returns the default appointment status ref
sets the appointment type
sets the default appointment status ref
sets the update dt
sets the version of the version
updates the user reference to the new user
sets the visit id
sets the version of the version
sets the value of parameter model ref
returns the conflict strategy reference for the conflict
returns the time of the model
set the conflict strategy reference for the conflict
sets the id of the object
sets the id of the object
sets the id of the object
sets the active ind of the active indicator
sets the facility location of the facility reference to the given
sets the active ind of the active indicator
sets the duration of the file
sets the active ind of the active indicator
sets the foreground color of the cell
sets the insert dt
returns the duration unit ref
merge the given model into this one
sets the user reference to the given user
sets the duration unit ref
returns the schedule template ref
returns the reference to the appointment frequency
sets the form view reference
sets the value of schedule template ref
sets the id of the object
sets the value of parameter ref
sets the insert dt
returns the schedules for the schedules schedules
sets the value of the field
returns the free text free free free free free free free text
sets the reference to the schedules
sets the user reference to the given user
returns true if the text is free
sets the display model for this reference
returns true if the free text free free notebook is not empty
sets the slot sequence
sets the insert dt
returns the value of the code em ref code property
sets the free text free free text free free text free free
sets the display model for this reference
sets the value of the code appointment priority ref code property
sets the not free text free free text free free menu items
sets the user reference to the given user
sets the transaction
returns the appointment start time model
sets the free text free free free free text free free text
sets the update dt
sets the start dt date time of the appointment
sets the transaction
returns the schedule start date
updates the user reference to the new user
sets the insert dt
sets the value of parameter source
sets the start dt dt
sets the id of the object
sets the update dt
sets the version of the version
sets the user reference to the given user
updates the user reference to the new user
sets the active ind of the active indicator
sets the version of the version
sets the value of check digit
sets the security context ref
gets the value of the schedules date dt property
sets the id of the object
set the stop dt dt
sets the appointment status ref
sets the settings form
getter for property appointments stop date
sets the active ind of the active indicator
sets the stop time of the appointment
sets the display model for this reference
sets the appointment id
sets the index
sets the display model for this reference
sets the insert dt
sets the insert dt
sets the transaction
sets the user reference to the given user
sets the user reference to the given user
sets the appointment type ref
sets the transaction
sets the update dt
sets the source reference of the source
sets the display model for this reference
sets the display model for this reference
sets the update dt
updates the user reference to the new user
gets the patient portal template attribute of the company bean object
updates the user reference to the new user
sets the transaction
sets the transaction
sets the version of the version
sets the update dt
sets the version of the version
sets the update dt
updates the user reference to the new user
sets the duration of the file
updates the user reference to the new user
sets the patients portal template attribute of the portal bean object
sets the version of the version
sets the duration unit ref
sets the version of the version
sets the insert dt
sets the user reference to the given user
returns the preferred height of the component
sets the ordering of the list of models to the given one
sets the id of the object
change reason ref status
sets the id of the resource
sets the preferred height of the window
sets the system change
sets the active ind of the active indicator
sets the active ind of the active indicator
returns the default appointment type ref
sets the user ref to the given user
returns the preferred size width
sets the default appointment type
returns the model instance of the appointment
set the dt dt time for this system
sets the id of the object
sets the preferred size of the window
returns the current appointment resource
sets the active ind of the active indicator
sets the insert dt
sets the id of the object
gets the ind attribute of the object
sets the display model for this reference
sets the user reference to the given user
sets the insert dt
gets the frequency id
sets the frequency id
sets the user reference to the given user
returns true if the is
sets the location reference to the given location
sets the insert dt
sets the resource id
sets the user reference to the given user
returns the resource type ref
sets the transaction
returns true if the is not
returns the quantity of resources in the resource
sets the display model for this reference
sets the resource type ref
sets the quantity of resources for the resource
sets the active ind of the active indicator
sets the security context ref
sets the title of the titled border
sets the start dt dt
sets the
sets the transaction
returns the title abbreviation
sets the settings form
sets the update dt
sets the title abbreviation
updates the user reference to the new user
returns the slot duration
sets the value unit ref
sets the not
sets the duration of the current item
sets the update dt
sets the version of the version
set the stop dt dt
returns the slot duration for this unit
sets the duration of the unit ref
sets the value of the field
updates the user reference to the new user
sets the system model for this reference
sets the ind
sets the value of the code appointment priority ref code property
sets the version of the version
sets the reference to the schedules
sets the transaction
sets the start dt date time of the appointment
update the update date time for the date time
sets the display model for this reference
updates the user reference to the new user
sets the version of the version
sets the record ref
sets the transaction
sets the update dt
sets the appointment status ref
updates the user reference to the new user
gets the value of the repeating section view ref property
sets the stop time of the appointment
sets the version of the version
sets the view reference to the given model
sets the appointment type ref
sets the print print print reference to the given print
sets the duration of the file
sets the duration unit ref
sets the insert dt
sets the user reference to the given user
sets the ordering of the list of models to the given one
sets the scheduled deadline
gets the status change dt
sets the status change dt
sets the right arrow action ref
change reason ref status
sets the display model for this reference
sets the right click action reference
sets the transaction
sets the title of the titled border
sets the title abbreviation
sets the update dt
updates the user reference to the new user
sets the user id
sets the version of the version
sets the id of the object
returns the current image
returns the section column specification for this column
sets the id of the object
sets the id of the entity
sets the active ind of the active indicator
sets the id of the object
sets the section column specification column specification
sets the active ind of the active indicator
returns the user id
gets the user ref id attribute of the user object
sets the active ind of the active indicator
sets the user id
sets the id of the object
sets the active ind of the active indicator
sets the background color of the cell
returns the section control columns
sets the insert dt
sets the value of the context ref property
sets the user reference to the given user
gets the report id
set the custom controller for this controller
sets the report id
set the custom controller for this controller
sets the column control columns
sets the display model for this reference
sets the insert dt
sets the default settings form
sets the user reference to the given user
sets the transaction
returns the jasper file id
sets the id of this object
sets the id of the jasper file
sets the update dt
returns the section layout
get the file id
updates the user reference to the new user
sets the file id
sets the version of the version
sets the form to use for the form
sets the insert dt
sets the view ref
sets the active ind of the active indicator
insert the methods description here
sets the user reference to the given user
sets the value of check digit
sets the section layout
returns the report icon ref
sets the user reference to the given user
sets the display of the report icon
sets the report reference
sets the id of the jasper file
returns the report sql
sets the file id
sets the report sql attribute of the report log object
sets the settings form
returns the section specification
sets the view ref
sets the display model for this reference
returns the pdf file id
sets the pdf file id
sets the index
sets the preview file id
sets the transaction
sets the report reference
sets the section specification
sets the insert dt
sets the update dt
sets the report sql attribute of the report log object
sets the display model for this reference
returns the report type ref
sets the user reference to the given user
updates the user reference to the new user
sets the report type ref
sets the source reference of the source
sets the system model for this reference
sets the version of the version
sets the transaction
returns the number of section in the expand environment
sets the id of the object
sets the display model for this reference
sets the transaction
sets the update dt
sets the transaction
sets the transaction
updates the user reference to the new user
update the date time of the update
sets the active ind of the active indicator
sets the update dt
updates the user reference model
returns true if the section is expanding
sets the version of the version
sets the value of check digit
updates the user reference to the new user
sets the version of the
getter for property html file id
sets the version of the version
set the xslt stylesheet file id
returns the file extern file id
sets the id of the given object
sets the file to be used as a pdf file
returns true if the section is a section of the section system
sets the index
sets the active ind of the current event
sets the section to expand the
sets the background color of the cell
sets the insert dt
sets the user reference to the given user
sets the flag that determines whether the section is expanding
sets the source reference of the source
sets the display model for this reference
returns the class of the class
sets the expand ind attribute of the object
sets the transaction
add a new object to the list
removes the specified object from the list
returns the username
sets the display sequence of the display
sets the update dt
returns the value of the field modified
returns the name of the field with the given name
returns true if this object is new
sets the modified field of the file
updates the user reference to the new user
returns true if the current session is not new
copies all the values from the given model to this model
sets the facility location of the facility reference to the given
returns true if the field is modified
sets the id of the object
returns the section view reference
returns true if the field is modified
sets the id
sets the id
returns the database table field model
sets the version of the version
gets the hide display ind attribute of the object
resets the modified fields to null
returns true if the is a valid
returns true if the identifier has a identifier
sets the id of the object
reset the modified all fields
returns true if the display is hidden
returns true if the given display model is the same as the
sets the active ind of the active indicator
returns the short display name of the current element
checks if any of the modified fields are modified
returns true if the display is not hidden
sets the view reference to the given value
returns true if the id is a id
compares two objects
returns true if the given id is a valid id
sets the data type reference for this data source
sets the display to hide the display
returns true if the list is empty
hides the display
merge the given model into the given model
returns the value of the data type
sets the display indicator for the given display
checks if the value is null or not
sets the active ind of the active indicator
compares this alternate sorting with the specified object for order
sets the id of the object
returns the database table name
sets the insert dt
sets the database table name
sets the insert dt
sets the user reference to the given user
sets the active ind of the active indicator
returns the value of the specified field
returns the auto assign sequence indicator
get the location form of the location form
sets the user reference to the given user
returns true if the sequence is auto assign sequence
sets the location form of the form
sets the auto assign sequence
returns the date time value for the specified model
sets the selected action ref
sets the display model for this reference
returns the user group model of this group
sets the value of the auto assign indicator
sets the insert dt
returns the parameter model
sets the location icon location for the given icon
returns the parameter model for the given parameter
sets the user reference to the given user
returns the value of the column at the given column index
sets the system transaction seq
returns the name of the sql where where to be executed
set the index fields
returns true if the time is a null value
sets the migration where sql where the connection is
gets the location of the location status ref
sets the update dt
returns true if the current value is not null
returns the migration type ref
returns the role model of the current user
copies all of the values from the given model to this date
sets the location of the status change
sets migration type ref
updates the user reference to the new user
returns the model cache type ref
sets the model cache type ref
sets the hql hql to the hql hql
sets the location type ref to the given value
sets the id of the user
returns the hql persister object for this
returns the average ms of the current
returns the model number of the model
returns the class of the result
sets the settings form
returns hql hql query
returns the hql to be used for the query
returns true if the model is a model
returns the sql string for the given ids
returns true if the results of the search results are available
sets the search results
returns the patients location ind
sets the facility location of the facility reference to the given
returns true if the model is not a model
returns the hql to delete the sql
returns the day end date time
returns the hql query to be used for the
returns the generation script
returns true if the patient is a patient location
set the model to the model
returns the end time model
sets the generation script
get the time model
sets the model to the last one
checks if the patient is not a patient
returns the day start time of the month
sets the model ind
sets the patient location
sets the active ind of the current user
returns the field name
returns the identifier source ref
sets the patient location
sets the identifier source ref
sets the birth date
sets the patients location ind
sets the id of the object
returns the suffix to use for the
get the primary contact form
sets the value of the code value code property
sets the identifier suffix
set the package name
returns the identifier type ref
sets the primary contact form id
sets the value unit ref
returns the primary column
returns the nearest date time model
sets the identifier type ref
returns the schedule for the schedule
sets the primary column
sets the version of the version
returns the time model from the days model
returns true if the schedule is an asynchronous schedule
get the date time model from the given number of days
sets the insert dt
returns the time model that this date time span is
sets the source reference of the source
returns true if the schedule is not the schedule
returns the default location ref
sets the user reference to the given user
sets the schedule to the schedule
sets the default location ref
returns the match unique id
sets the display model for this reference
sets the not schedule flag
time zone offset
returns true if the current lexicon is unique
sets the schedule scanning schedule
returns true if the match is a match
returns the day of the month
set the match to match the match
returns the value of the data hash value
set the not match to match
returns the time zone offset
sets the settings form
sets the transaction
sets the match unique id
merge the given model into the given model
returns true if the date time model is after the given date
sets the system model for this reference
sets the display model for this reference
returns true if the time value is after the given time
returns the patients model
returns true if the date time value is before the given date
sets the first name of the user
returns the time of the
returns the patients model
sets the transaction
sets the transaction
returns true if the given date is before the given date
this is used to convert the given model object to a model
returns true if the given date is after the given time
sets the update dt
sets the update dt
returns true if the given date time is after the given time
sets the focus indicator to the given value
returns true if the query model has a patient model
sets the update dt
updates the user reference to the new user
returns true if the model contains the given class
updates the user reference to the new user
sets the version of the version
returns the model for the given class
updates the user reference to the given user
sets the insert dt
sets the version of the version
returns the view model of the view
sets the id of the given object
returns whether the patient has view patient query model
sets the version of the version
sets the user reference to the given user
sets the transaction
sets the id of the object
returns the model visit of the model
sets the last name of the user
returns true if the model contains the view visit query model
sets the active ind of the active indicator
returns the address error
sets the address error
sets the active ind of the active indicator
gets the address type ref
sets the reference to the data source
returns the city of the city
sets the city
gets the city reference
sets the city model of the city
sets the middle name of the user
returns the country free text
sets the country free text
gets the value of the county free text property
sets the value of the county free text property
gets the county reference
sets the reference to the reference to the given model
sets the source reference of the source
sets the insert dt
gets the value of the state field type ref property
sets the password reset ind
sets the user reference to the given user
returns the java field name for the given field name
returns true if the is a indicator
returns the name of the field
sets the id of the object
sets the insert dt
sets the value of the field type ref property
returns the value or code null if the
returns the primary language reference
sets the user reference to the given user
gets the value class attribute of the object
returns the reference to the string that represents the reference to the
returns the last word of the string
sets the primary language reference for this language
set the reference to the field
sets the notes
sets the active ind of the active indicator
getter for property provider form id
getter for property other designation
returns the time zone setter
sets the value of check digit
sets the provider form id
sets the designation
this method returns the value for the is valid property
retorna ind ind
returns true if the view is in the view
returns true if the view is not a view
sets the display model for this reference
returns the text that will be used to get the state free
sets the text to be used for the free text field
sets the settings form
sets the source reference of the source
returns true if the listing of the current
sets the state of the reference to the given model state
returns the value of the parameter model
sets the suffix
street the street
sets the index
sets the system model for this reference
sets the id of this object
sets the display model for this reference
sets the system model for this reference to the given
returns true if the listing of the current
sets the insert dt
sets the system transaction seq
sets the transaction
sets the user reference to the given user
sets the active ind of the active indicator
set the listing
update the date time of the update
sets the update dt
sets the transaction
sets the comparison operator for this model
sets the source reference of the source
updates the user reference to the new user
updates the user reference to the given user
sets the data type reference for this data source
sets the display model for this reference
sets the version of the version
sets the version of the version
update the date time of the update
set the not suppress listing flag
returns true if the given matches this interval
returns true if the given matches the date
updates the user reference to the new user
sets the transaction
sets the update dt
increases the amount of the amount of the amount of the amount
updates the user reference to the new user
sets the login user name
sets the suppress listing indicator
sets the version of the version
gets the user pin
sets the insert dt
sets the user pin to the given value
sets the user reference to the given user
returns true if this component has a component
returns true if the form has a form display
sets the model reference model
returns the suppress sort ind
returns true if the model has the base model
sets the version of the version
returns true if the suppress sort is suppressed
sets the number of negative negative negative negative negative negative negative negative
returns true if the current sort is suppressed
sets the value of parameter ref
this is used to determine the owners value for the given user
sets the suppress sort
sets the system model for this reference
sets the not suppress sort flag
clean up the database
get the time from the given time
sets the system transaction seq
get primary key
remove a database statement
allocate a new member to the given column and allocate it
sets the suppress sort ind
builds a cache object with the given properties and
sets the update dt
updates the user reference to the new user
returns the identifiers of the service id
runs the
returns true if the contents of the given contents matches the
sets the display model for this reference
this method initializes this
returns the value of the selected item
sets the value of the field
adds a table to the list
returns the context id of the given ref link
returns the table context id
returns the links with the given parent id
returns true if the specified context id is a child of this
returns the number of tables in this collection
this method is called when the user selects the
this method initializes this
adds a child to the list
adds a new table to the list
returns the value of the object
send a table update to the table
sets the value of the field
removes all the
adds a select action to the selection
sets the value of the code value code property
sets the value unit ref
this method is called when the edit is about to edit
sets the version of the version
sent when the indices has been removed
called when the list data changes
invoked when an action occurs
sets the transaction
add an object to the list
removes the specified object from the list
updates the id of the application control
returns the id of the application control
this method is called when the user selects the
reports a bound property change
sets the value of the field
clears the text
adds a new instruction text to the text area
applies the background color to the container
clears the text instruction
configures the mediator
returns the value of the field
returns the title of the given container
returns the table model associated with this
sets up the default font for the current component
returns the selected listener for the selected tab
sets the table model for the table
adds a new item to the list
returns the template control ind
returns true if the template control is a control
prepares the editor to edit the selected object
sets the editable flag
returns true if the template control is not a template control directive
sets the value of the field
returns true if the connection is mirrored
sets the free flag
sets the image to the given value
adds a new action to the list of selected action
set the control to the template
sets the editable flag
sets the value of the field
set the control to the control control
adds a listener to the model
sets the editable
sets the value of the field
returns the value of the text field
adds a listener to the collection of listeners who will
sets the value of the field
returns the action associated with this action
set the action for the menu
adds a menu item to the menu
adds a menu to the menu
sets the action that is used to display the action
converts a string to a string
sets the editable flag
sets the date value
sets the value of the field
returns the value of the property
sets the control perspective
sets the value of the text field
adds a listener to the model
adds a listener to the model
sets the flat
returns the instance free
sets the free value for this
update the model with the current state of the model
adds a list of containers to the container
runs the thread
returns true if the contents of the given contents is valid
returns the control layout
sets the control layout
returns the height of the
sets the height of the tile
returns the width of the
sets the width of the unit
removes the selected models from the table
returns the control model
applies the to the given table model
sets the control object
sets the default format for the charts data
sets the model to the given model
this method is called when the user changes the model
sets the required lock flag
update the listeners
binds the control to the given component
returns the model at the given row
adds a row to the table
adds a row to the model
returns the string representation of this object
adds a list of models to the list
sets the value of the template ind property
inserts a row into the model
inserts a list of data into the model
removes a row from the model
sets the cell rendering to be used in the table
remove all rows from the table
set the model class
sets the resize columns
sets the resize columns to the resize rows
sets the list of original
test if the given row is a valid state
move the selected rows upward in the table
returns true if the selected row in the table
this method is used to load the rows
returns true if the selected row is allowed to move
load the rows from the given number of rows
sets the foreground color of this component
displays the current chunk of the table
set the background color
returns the label of the current request
sets the column editing of the given column
register the focus listener
displays the rows of the given rows
clears the rows of the table
sets the value of the document
initializes the panel
returns the value of the text field
sets the enabled state of the buttons
adds a listener to the model
load the
applies the current component to the current model
applies the current location to the current location
applies the current model to the current location
adds the left container to the container
adds the specified container to the container pane
adds a list of containers to the container
applies the current settings to the current location
creates the blur
adds a list of containers to the container
sets the term id
adds a model listener to the model
returns the default node format
sets the default node format
returns true if the current selection is selected
initialize the model
adds the listeners to the tree
returns the selected node
loads the initial load
this method is called when the background load of a node
returns the selected object
returns a debug string representation of the object
returns the node label
sets the node label
returns true if the socket is executable
adds all nodes in the specified collection to this set
executes the action
returns the value of the field
adds a new node to the tree
deletes all modifications
build the layout specification
updates the tree node
sets the value of the field
removes the given range from the list of segments
this method initializes this
sets the value of the term sequence property
highlights the text in the document
lookup the item with the given pattern
returns the selected model
expands all paths in the tree
add a control to the component
creates a new row
expand the tree
returns a string representation of this object
returns the growth of the control
sets the cell renderer to use for the cell
get row growth
build the row spec for the
returns the number of the text controller monitor
sets whether or not the component is editable
sets the date value
returns true if the text controller is a monitor
returns the value of the selected item
sets the tree model
called when the mouse is clicked
adds the listeners to the button panel
returns true if the text monitor is a monitor
returns an action listener for this item
adds a new row to the table
remove the model from the table
inserts a new item into the table model
returns an action listener for the selected item
returns the action listener for the move action
returns the action down listener for the move button
returns the number of rows in the table
initialize the component
returns an action listener for the selected item
returns the specification of the given layout
adds a listener to the model
adds the button to the bottom up panel
executes the refresh control action
sets the text controller to be used for the text controller
gets the cmd method
executes select table rows
gets the value of the cmd property
sets the cmd finish
gets the cmd cmd
sets the cmd button
gets the cmd initiative
sets the cmd initiative
shows the mouse wheel
creates a form control
creates the form control
sets the label of the label
set the text controller to be used when the user presses the
adds a select action to the select list
processes an event
this method is called when an interaction is about to be shown
sets the text controller of the current time
adds a selection model to the list of selected items
returns the number of columns in the text field
replace the given column with the given
sets the size of the columns
returns the view with the given id
returns true if the context id has a component
returns true if the context has a component with context
sets the height of the unit
returns the component with the given context
returns the component with the specified context id
returns whether the context id has a label
handles the event
transfers focus to the current page
returns whether the context has a label component
initializes the local vars
returns the label for the specified context
sets the width of the unit
returns the label component with the specified context id
returns the label component with the specified name
returns the scroll component with the specified name
returns the form control with the given name
sets the update dt
validate the shell
sets whether fixed width should be used for the columns
updates the user reference to the new user
returns the references to the given
returns the references to the specified component
returns the control script for the given control
returns true if the column is currently selected
returns true if the column is in the first in the current
returns the panel of the
sends the action to the screen
returns true if the panel has the panel
returns true if the form field is empty
returns true if the form is required
returns the control with the given context id
sets the pattern to be used for filtering the pattern
returns the component with the specified name
returns the parent panel of this panel
returns the control with the specified name
returns the user defined tag defined by the user defined tag
sets the user defined tag defined property
sets the value data type reference
sets the value of the code value code property
sets the version of the version
sets the visible ind
puts a key value pair into the cache
clears the data
append a sql string to the buffer
append a string as a string
converts the code long code to a code long code
returns the model class of the given script
adds a collection of parameters to the parameter
add a list of parameters to the list
stores a new object in the form
returns the hash value of this object
create a sound index
remove a key value pair from the cache
returns a string that represents the upper index
clears the cache
creates a new task
call the method
get the result of the column
creates a list of all the models
adds a reference to a reference
create the model reference
modify the application
create a group reference
create a table schema schema
modify the container
runs the file
executes the insert
this method is called when the migration is completed
upgrade the database to the database
creates a list of all the models
converts the table model to a table model
saves the rows to the file
creates the model sets the model
process a row
processes a list of results
creates the model
returns the database object
clears the cache
creates a list of all models from a list of models
this method creates a file
store the transaction
show table
get the form model for the given item
get the form model for the given item
returns the model of the given number of
get the poll for the given poll
invokes the specified method
this method checks if the given column is a missing reference
queries the database for the given service
this method is called when a message is pushed
the list of models to the model
switch to the switch
starts the service
get a model for a given
get the ref for a given ref and ref
get a new model for a given
returns the table model for the given table column
store an error message to the given message
returns true if the table is a child of a table
invokes the specified method
returns the interface message model
call a service
get the interface message
get the interface processor model
get the interface processor model
get the interface processor model
method called when a service is being removed
executes the processing of the given message
returns the transaction model
returns the effect model for the given code transition code
get the interface model
executes the transaction transaction
set inbound reference to a reference to a
returns the transition model for the given code code
store a account in the database
returns the account model for the given account id
returns the account model for the given account id
get the model product of the given product
returns the model interaction model for the given
returns the model of the given code code
get the form definition with the given id and
get the form definition with the given id and
returns the model for the given id
returns the model for the given id
returns the state of the form
returns the type model for the given id
store a given data store
generate a charge model for a given
returns true if the table contains the field name
returns the type model of the given item type
returns the state model for the given state and the given state
get the charge algorithm model
returns the table column model
returns the first table column model
returns the model item model for the given code item code
clears the cache
returns the model item model for the given code item code
store a new patient record
get the charge item for a given charge
get the form type
get the charge item for a given purchase order
get the datatype model from the form
store a form model into a customer
returns the application view for the given view id
get the application control for the given control id
store the given record to the database
get the application control column for the given column id
get a user from the cache
get the tree
returns the panel node for the given node
get the user defined user for the given service delegator
get the model product of the given product
get the user by its reference id
store the data store
display a reference to a reference to a reference to a
get the model for a given product
store a reference relation to a foreign two
determines whether the dialog has the given status
returns the node of the panel
store a model to the store
return the container by reference
add a request to the given url
get access to the remote device
add a web service to the given web service
get a form record model for a given form record
get the container of the given
store a form model to the database
get the access for a given service
get the application panel
stores a new logbook
get the application panel tree model
get a form model for a given form
get date time setting
returns the primary column model for the given column
get the location type for the given location
get a form model from a form
returns the model for the given code code
get the location type for the given location
returns the primary column name
get the string setting for the given runtime settings
returns the model of the given number of
get the string setting for the given
returns the singular table name
store a new
get the charge model for a given charge
get the double value of the given
get the reference to the model associated with the given group
get the charge model for a given charge
get a reference to a model element
get the integer value of the given
perform the given service
get a single setting for a specific service
get a reference to a model ref
get the application column preferred for the given application
get a reference to a tree model
get the application column preferences for a given service
get the tree
create a child node
add a new to the dialog
get the tree model for the given node
removes the specified reference from the cache
get a reference to a reference to a specific service
get reference model for a given cache
store a model in the database
get a reference to a reference to a specific service
get a reference to a reference to a specific
get a reference to a reference to the specified
clears all the data in this form
get a reference to a reference to a
get a from the database
store a reference to a model
get a reference to a reference to a reference
get the tree for the given call
checks if a reference exists
get a model for a given
get the order instance of the given container
get a reference to a specific service ref
get the order instance of the order
get the application control configuration
get a reference to a specific service
get the display model reference for the specified group
get the application control configuration for a given service
get the display no cache display
get the panel tree for a given model
get a display model from a group
returns a display model for the specified group reference
returns the value of the specified display value
returns the value of the display value for the given code null
returns the short display value for the given primitive code value code
store a controller
get the facility account for the given post
get the display model for the given id
returns an instance of the model for the given id
store a child reference
get the order model for the given id
get a display model from the given display
get the facility account of the given post
create an instance of
returns the value of the display value
returns the short display value for the given short
duplicates the node and its id
store a template
get a reference to a reference to a reference to the
get the order model instance state
get the next value of the source code
get the order model state object
get the application control type for the given application
get the template model from the given template
returns the transaction data
get a reference to a reference to a reference
get the application control type for a given application
get the template for a given template
authorize a given service
get the contents of a script
get a by its id
get the record item state
get the first search result
returns the order model
get the record item state
stores a given code code
get the facility account for the given facility
get the order model
adds a list of model to the given model
get access model for given service access id
get the investigator model for the given thesis
retrieve a translation model from the given view
get the translation model for the given
get the application configuration panel
get the order state for the given state id
get a list of the sql parameter
get the order state for the given state id
get a script by its reference
get the application configuration panel
removes a relationship from the given relation
get a form model from a form
get access by ref
get a form model given its id
get the unit conversion unit conversion from the given conversion object
get record type
returns the fee schedule for the given schedule
conversion of unit conversion conversion from a unit to a conversion object
store a child reference
get the fee schedule
get the record item type for the given record
get order type
get order type
customize the layout for the given view
customize layout panel
updates the given patient id
stores the given service data
stores the given order model into the chain
clears the cache
store a new patient id
store a new patient id
returns the order of the given model
get reference builder tree
get the order of the given database
get the order model and the given id
get record record record record
get the application panel tree
returns the order of the given patient id
get record item
get the tree model tree model
get the application panel tree
get invoice format for the given invoice
get invoice format
get the form type tree model tree
get the record item for the given record
create a child reference node
store the transaction
get the view order instance
get the view order instance
prepares a order for a given patient id
get a script file
returns the id of the ref object for the given identifier
get invoice payment payment
returns the id of the reference to the remote object
get an invoice payment for a payment method
returns the patient visit at the given patient id
get order catalog controller
get order catalog controller
get a reference to a service ref
import the user from the database
get a reference to a remote reference
store the audit information
get the invoice model for the given invoice
sets the patient model
get the application panel
get the identifier reference for the given ref service
get the invoice type
get the boolean value of the given service setting
get patient id from a patient
display a given model
returns the concept model for the given concept
get the application panel
returns the time integer as a long
get the term model for a given concept and return it
get the version of the service
get the user by user login
get the database version
store a new patient
get boolean setting
returns a patient model for the given visit id
stores a patient to a patient
store the invoice model
store the role of the service
store the given data store
returns the term for the given procedure
returns the display of a given
display a model
store the given data in the database
get patient id for patient id
get the invoice for the given invoice
returns the model procedure for the given term
store a reference to a model
get the invoice for the submitted invoice
get the database for the given service
returns the patients id and visit the query
change the role of the user
returns the application view for the given application
change the user location to the given location
returns the order model for the order
get patient id for given form and publishers id
get the application view
get the role model
store the given to the store
get the portal user by user login
returns the type of the given term
store a model in the database
returns the term type of the term
get a from a
get the display model for a given category
returns a model definition transition from the given state
get a model for a given
starts the refresh thread
adds a job to the quartz scheduler
store the given audit store
returns the content type of the given content type
returns the content type of the given content type
return the visit visit visit for the given id
store a job instance
get the scheduler job model
returns true if the cache has a cache changed
execute the given job
called when the cache is changed
get the job by reference
get the audit of the given audit
store the given environment
store a term in the database
starts the job scheduler
get the audit model for the given service
starts the scheduler
get a environment model for a given call
get the location model for the given item
get patients list of patient
get the location model for the given item
get a environment model from the given
store a file to the given file
get patients list of the patients
get a file contents
store a file model
get a file from the given file
get the term term
get a file model for the given code file code
get the model type for the given item
get the type of the item in the given queue
get a file model for a given file
get the model model for the given term
returns the time model
returns the id of the language
store a item in the database
get patients patient user
get patient portal user
get the item model
store the given location into the data store
get the item model
returns the help content model for the given
get the help content model for the given
get the custom controller for a specific controller
stores a patient model
get the location model for the given location
get the custom controller for a specific controller
get the patients model
get the patient model
get the location of the location
method to clear the cache
stores a new study in the database
get the location model for the given location
store a appointment
store the given model to the given model
get the appointment for the given appointment
returns the appointment status model for the given appointment
returns the patients model for an appointment
get the appointment status model from the given appointment
retrieve patient for appointment
get the icon for the given icon
stores the given appointment to the given model
returns the type of the report
returns the type of the report
get the location tree node
get the icon model for the given icon
store a report
get the portal user model user model id
returns the report model associated with the given report
schedules a new resource to be scheduled
get a report from a report
get the portal user model
store a permission
get a reference to a reference to a reference to the cache
returns the last command executed
sets the last command executed
executes the given session
this method is used to execute the
returns the appointment type
connect to the database
execute the query
get the appointment type
get a permission model for the given permission
returns the patients model for a given patient id
executes the query
call the method
store the job model
get the view patient model
get a permission model for the given permission
visits a model of the given service
stores a new snapshot of the given appointment
get the job model for the given job
method visit view visit
this method is invoked by the calendar model to be performed
get the patients form model
get a job model from the queue
this method is used to retrieve the aggregated data from a service
get the appointment from the given appointment
store a printer
returns a filtered term tree model tree
get the patients form model
get the appointment for a given appointment
returns a visit type for the given visit
get the view model record for the given patient record
returns the visit type for the given visit
store the given appointment in the store
get a printer by its printer id
get a new patients record model
get a printer by its printer id
store a new visit in the database
get the scheduler instance for the given job
store a new instance of a given frequency model
get the job instance for the given job
returns the visit model for the given visit id
get the frequency model for a given frequency
returns the visit of the given visit in the given visit
get the frequency model for the given code call code
get reference id for a given reference
wait for the pause to be interrupted
returns true if the wake queue is sleeping
polls the processor for the given processor
this method is called when the command is completed
wake up the thread
returns the processor by key
this method is called when the processor is about to be executed
the thread run method
get reference id for a specific reference
this method is called after the next time is about to be
adds a new object to the queue
pauses the application
this method is called when the command is about to be executed
updates the process processors
get the scheduler job model
refreshes the patients
store a plugin
store a message in the database
get the scheduler job model
refreshes the records
refresh patients preparing for the patients preparing for the search
get a message model from the given message
checks if the group can be used in the list
check if the given model node matches the given model
adds the list of parameters to the list of parameters
get a message model from a queue
get the plugin
sets the tree model
compares this object with the specified object for order
refreshes the patients
get the plugin
refreshes the records of the list
this method is called when the user changes the record
performs the action
refresh patients preparing for the patients preparing for the search
refreshes the patients
stores the given server to the database
refreshes the patients
stores the given model to the given model
get the server model for the given server
refreshes the
get the server model
called when a client is started
handle the new action
get the reminder for the given reminders
get the model for the given id
edit the given patient order
display order of the order
visits the visits
refresh patients patients
returns the role of the given group
refresh patients patients
returns the resource appointment model for the given appointment
creates the update
create a new
creates a phone number
download a from the download
creates a directory name
creates a new id
download the
get a role group model for a given group
add conversion conversion to the conversion
execute a request
returns the conversion or null if this datum contains
create a new form
get the resource appointment model for a given appointment
converts a unit to a unit measure
multiply two value by casting this value
returns the fraction of the fraction
returns the rounded value of the given number
returns the conversion unit measure for the given unit
downloads the given file
execute the given sql statement
refreshes the list of records
returns the location of the reference of the
returns the default appointment type for the given date
store a new patient record
returns the number of intervals in the model
starts the
this method is called when the form type is started
starts the
end the current tab
returns the html content of the image
adds a separator to the model
returns the end of the
starts the
store a role model
returns the end of the
returns the resource schedule model for the given schedule
adds a separator to the design
updates the form
adds a text to the text
adds text to the font
adds text to the text area
adds a new font to the text area
adds a font to the text area
adds a text line to the text area
returns a resource schedule model for the given resource
adds a text to the font
start the form
adds a new to the text area
returns the end of the model
adds a separator to the view
get the role for the given role
store a resource model
get a role model
returns the resource model for the given resource id
returns a resource model for a given object
returns the filter rule for the given rule
returns a schedule template for the given schedule
returns a schedule template for the given template
get a rule filter rule that matches the given regex pattern
returns the user resource that this user has to be made
get the user profile model
get a rule model for the given rule
get the view appointment appointment model
get a rule map
get a view of the appointment model
deploys a script
get a script for the given script
get a script that will be used to execute the given script
store a setting in the database
get the setting for a specific setting
get the model for a specific timestep
get the state model for the given user id
get the state of the user state
get the user profile for the given user
get the user template text model
get the user profile for the given user
get a user template for the given user
search for a query
pushes the indentation
a unit test for junit
tests the of a
test that the is correctly checked
test that the is correctly checked
sort the map to string
returns the next node
registers the adapter and registers it as a new one
set the bounds of the impulse graphs
checks whether the command can be executed
creates a color from the given display
this method is called when the palette is pressed
returns a string representation of this object
sets the value of the property identified by the location
creates a new cell editor
sets the value of the property identified by the given id
calculates the alignment of the request
draws the outline of the outline
adds a point to the polygon
returns the bounds of this shape
returns the point of the first point of the polygon
inserts a point at the given index
removes all points from the collection
removes the point at the specified index
sets the end point of the polyline
sets the point of the point
sets the points of the polyline
set the start point of the polyline
sets the current point of the panel
sets the scale of the image
sets the rotation of the rotation
sets the scale of the image
set the scale of the image
translates the coordinates by the given x y
sets the scale of the image
returns the first point of the first point in the list
returns the transformed point of the point
returns the target decoration
returns true if the y coordinate is a north
returns true if the y coordinate is a south
returns true if the east of this point is adjacent
returns true if the current position is a west
handles selection of the active workbench selection changed event
clears the font cache
disposes the graphics object
finalize the image
returns the rendered image
returns the image of the image
returns the image of the
returns the root element of the tree
returns the image descriptor for this image
returns the rendered image
returns the rendered image
returns the rendered image
returns the rendered image
returns the rendered image
returns the rendered image
map a map of figures to their
returns a unmodifiable list of all the values in this list
sets the extra data
returns the hash code for this object
returns whether aspect ratio is enabled
override hash code
copies the state of this state to the given state
draws the outline of the
this method initializes the graphics contexts
returns the buffered image
creates a buffered image from a buffered image
returns the web application colour for the current colour
handles the destination button on the server
updates the page complete
paint the figure
reset the font cache to the default font
sets the absolute clip to the given position
sets the alpha component
sets the anti aliasing value for this paint coordinate graphics
sets the dash pattern
set translation to the current state
sets the interpolation to the specified parameters
sets the text antialiasing
returns the offset of the translation
logs the warning to the graphics context
returns the value of the given user
sets the value of the given user
returns the value of the given code user code object
sets the value of the vertex
sets the value of the given user
returns the code code value
returns the type of the element
returns the style of the specified value
returns the end shape of the given value
returns the location for the specified code
returns a new color red color
returns the major version of the
returns a new green component
creates a new version number
returns a new blue color
returns the minor version
creates a new version
returns the patch version of this patch
creates a new version
returns the figure that is used to perform the
returns the figure definition string
returns the
returns the y axis value
returns true if the list contains the specified element
returns true if the collection contains all of the elements in the
adds a point to the list
add a point to the list
returns the index of the first occurrence of the specified element
returns true if the polygon is empty
returns convex hull of the convex hull
returns the index of the last occurrence of the given element
returns the point to the point specified by x y
returns the point to the nearest point to the given point
returns the number of points in this map
returns the segment that is the segment
resizes this rectangle to the given dimension
computes the size of the dimensions
returns the negative of this component
translate the point
returns the angle of the angle
calculate the scaling factors for the given dimension
returns the scale of this viewport
returns the difference of the given point
returns the distance between this point and another
returns the distance between two points
returns the length of the vector
returns the point of this point
returns the vector of the vector
this method returns a new point x y
returns a new point in the y coordinate
translates x y coordinate
translate the point and returns the result
returns the
sets the scale of this scales
translates a point by a given coordinate
negate the vector
returns a point representing the point
returns the magnitude of the vector
returns the dimensions of the image
computes the scalar product of this vector and another
returns the centre of the centre of the centre of the centre
returns a vector of the magnitude xs vector
returns true if the receiver intersects the receiver
checks whether the point contains the point
returns true if the envelope contains the envelope
translates a point from the world coordinate system to the
returns the bounding rectangle of the receiver
returns the source point of the receiver
returns the dimension of the envelope
set the file to read the file
set the directory to which this directory is deployed
add a fileset to the set of files
set the name of the xml schema file name
sets the default grouping
set the file to read the file
this method is used to set the configuration of the
derives the output file path
set the directory where the files are stored
set the file to read the file
add a set of files to the set
set the directory where the file is located
add a fileset to the set of files
sets the database engine
sets the database engine properties
set the package for the given code package code
set the ddl file name
sets the global properties
this method is used to create the file
sets the
sets the
set the file to be used for the given file
set the directory to which this directory belongs
add a fileset to the fileset
set the package for the given code package code
sets the
sets the
sets the
set the
sets the
sets the code string code for this code text field code
set the verbose flag for this
sets the warnings property
sets the
sets the verbose flag
sets the
sets the
sets the flag indicating whether this is biological
sets the name of the strategy for the named conflict
sets whether imported schemas to be imported
set the value of the code code property
sets the case of the case insensitive
set the strategy for automatic compiling conflict
sets the properties of this interpreter
executes the command
sets the schema
sets whether or not the message is a warning
set the package name
set the line separator
sets the force
sets the flag
sets the type of the factory
set the directory name
sets the flag
sets the flag indicating whether this is capable of being
sets whether imported schemas to imported schemas
sets whether the database should be generated
sets the flag
sets the case to be used in the case insensitive
sets the target file to be used by this file
sets the properties of this object
sets the output directory
sets the jclass for the jclass
returns the file to which this file belongs
sets the lib directory
sets whether the mapping should generate the mapping of
sets the name of the
sets the grammar file
process the file
loads the
sets the report
sets the print flag
sets the profile
set the value of the code rendezvous code
sets whether the dfa is interested in the
set the flag
enables or disables
sets the flag
sets the
enables or disables the grammar
sets the flag indicating whether or not this class
set the trace flag
add a classpath entry to the classpath
runs the given command
scan for a file list
scans the file
a regex pattern
ensures that the pattern matches the pattern
ensures that the pattern matches the pattern
clears the map
returns true if the given name is already in the set
log a message at the trace level according to the specified format
log a message at level trace according to the specified format and
log a message at level trace according to the specified format trace
is error logging currently enabled
returns true if fatal is enabled
p log a message with trace log level
p log an error with trace log level
p log a message with debug
p log an error with debug log level
p log a message with info log level
p log an error with info log level
p log a message with warn log level
p log an error with warn log level
p log a message with error code for the
p log an error with error log level
p log a message with fatal log level
p log an error with fatal log level
log a message at tt level tt
log a message at the
log a message at the
log a message level object
log a message at the
p log an error with info log level
log a warning message
log an error with warn log level
issue a log msg with a level of error message
p log an error with error log level
log a message at the
issue a log msg and throwable with a level of error
get the effective level of the current level
returns the level of the
returns true if the level is enabled for the given level
description of the method
description of the method
description of the method
this method delegates to the trace message
returns a logger with the given name
debug method for debug messages
description of the method
description of the method
log an exception
logs the message to the log
begin user doc
format the given array of lines
log an informational message
log a message at the info level according to the specified format
log a message at the info level according to the specified format
shows the info and output the info
trace a message
log an exception and then log a message with the info level
log a message at the trace level according to the specified format
is warn enabled
log a warning message
log a message at the trace level according to the specified format
log a message at the warn level according to the specified format
log a message at level trace according to the specified format trace
log a warning message with a code warn code object
log a message at warn priority and sends a
log a trace message
log an exception with a message
log a debug message
log an error with message
log a message at the debug level according to the specified format
log an error and prints out the message
log a message at the debug level according to the specified format
log a message at the error level according to the specified format
log a message at level debug according to the specified format
log an error and prints out the message at the
log a debug message
log an exception and a throwable at the
log a message at the level info
log a message at the info level according to the specified format
log a message at a code info code object according to
log an array of messages and its associated message
log an info message
returns the logger for the given logger
log a warning message
log a message at warn level according to the specified format and
publish a code log message code to the log
log a message at a code warn code priority according the specified
log a message at warn priority and writes the message to the
log a warning message
log an error message
log an error and logs the message
log a message at the
log an error with internationalized messages
log an exception and a severe error
logs a message to the logger
returns the map of the map to be validated
returns the validation report
returns whether or not this control was validated with the
returns true if this is a
returns the notation
checks if the ready to validate the
returns the factory
returns the report builder
loads the root library library
loads all the libraries in this library
returns the id of the given object
report an error
reports a warning
sets the
get an int value from a string buffer
returns true if the empty string is empty
sets whether or not the form is empty
returns true if this is a parent
sets the
prepares parsing of parsing rules
returns whether the report has been validated
sets the size of the component
this method is used to log the error message
logs a message with a level
description of the method
find the source of the given source file
load the resources from the file
setter for property output directory
sets the value of the force relative output property
sets the input directory
returns the full path of the file
returns the vocab file associated with the given vocab
returns true if the gts is a
returns true if the dfa is a pure
returns the library directory
returns true if the trace is a trace trace
returns true if the profile is a profile
returns the report
returns true if the output directory is a force
returns the timeout for the conversion time
returns the message format
returns the number of errors encountered during the
returns true if this is a
sets the format of the message
sets the timeout for the conversion time
sets the generate closure
sets whether this dfa is to be generated
sets the lib directory
sets the profile
sets the report
sets whether to print the grammar
sets the force all files to output dir
sets the
the
fills the specified int array with the specified data
returns the ith data element
returns a string representation of this object
returns the next element in the enumeration
returns the type of the token
returns the string representation of the token type
this method is called when the tree is about to be processed
draw the mid line
draws the corner handle
sets the layout calculator for this layout
lays out the canvas
the element
adds a child to this shape
returns the error message
returns true if the date time is expired
get user prefs
clones the font and returns it
returns the cell at the specified row
create a new sessions sessions
create a new sessions sessions
updates the status table
delete a session
delete the given session from the database
insert a new session into the database
deletes a sessions
delete a session
insert a new session into the database
deletes the given id from the session id
delete categories from database
insert a new session into the database
delete categories by id
update the status of the session
delete the topics
operate on the given transition
this method is used to answer as a destination message
checks if the given message is a message
returns the next in the pattern
sets the letter
sets the tiles of the tile
returns the width of the rectangle
creates the
starts the training process
starts the training
starts the training
writes the file to the file
returns the ascent of the font for the specified font
executes the
prints all rows in the table
writes the file to a file
get the value of the
connect to the server
closes the socket
sets the next
returns the next list
sets the previous prev list
returns the previous list
destroy the next link
send a news to the server
returns the value at the given offset
returns the offset of the given field in the given field
return the static field of the given jdofield
this method determines the equality of cards
compares this card to another card
returns a string representation of this card
returns a hash map with the parameters of the
add a thread to the list of threads
returns the jsc scanner code scanner
returns the singleton code scanner scanner code
returns true if the specified character is a word
returns true if the specified character is a word
returns true if the character is a word part
returns true if the given character is a word part
this returns the document of the given element
evaluates the text
called when the user clicks the ok button
the action has been activated
the action has been activated
sets the path
set the stream listener to be used for the stream
adds a new object to the list
evaluates the solutions of the given array
evaluates the solution
test the match method
returns the exit value of the exit
sets the command line
sets the exit value
sets the mp value for this
sets the working directory value for this
sets the property null if the string is null
read the lock from the lock
acquires the write lock
returns true if the lock is locked
set the job type name
creates a xml representation of the given element
return the name of the job type
gets the project name
returns the list of parameter lists of the given parameter list
converts a root element into a string
get the id
returns the date of the
sets the child nodes of this node
returns the id
sets the
cancels the job
clean up resources
returns the action for the given object
encode the given string to a string
returns the id
returns the
returns the id
returns the maximum number of retries
get the global parameter of the given parameter
adds a new identifier to the session
returns the retry attempts
sets the page only page definition
returns the seconds before retrying the retry button
sets the active session to the given id
getter for property parameter required
returns the value of remove parameter
returns the value of the code remove parameter value code property
setter for property parameter name
sets the flag indicating whether or not the parameter is required
setter for property parameter value
sets the remove parameter
sets the value of the remove parameter value
setter for property value seperator
refresh the lock
sets the
returns the cancel
sets the action
this method creates a new hash map for the given
returns the smallest session for the session
release the lock
sets the cancel job
returns the session for the specified object
sets the
remove a server from the server
stores the given session into the cache
sets the
remove the specified session from the cache
sets whether the page is valid
sets the
sets the current date
returns true if the page is valid
setter for property directory
setter for property host name
setter for property new method
sets the protocol
sets the maximum number of retries
sets the template to the given value
sets the valid status
sets the valid page parameters value for this get data request parameters
sets the weight
set the value of the global parameter
this method is called when the user is bad
sets the close out mode
adds a new session identifier to the list
returns the
sets the variable name attribute of the search method refactoring object
sets the retry attempts
set the retry time limit before retrying the retry
sets the hash map to the given code hash map code
stops scanning the scanning
this method is called when the application is expired
returns the of the
returns the sleep period
returns the best matched by the code match code
returns the status
returns the parameter value of the parameter
returns the current algorithm match algorithm
sets the parameter value of the parameter
returns a list of all the nodes that are not in the
returns a list of all parameter list
returns the current session matched by the match
copy the values from the database to the
returns the id
check if the session is expired
returns whether the first click in the session is allowed
sets the parameter
returns the number of databases that can be used
returns the maximum number of rows in the table
returns the first click session
sets the maximum number of rows to display
returns the number of update
returns the
setter for property database driver class
sets the number of statements that will be executed
setter for property database password
sets the sleep period
returns the
sets the global parameters value for this
returns whether or not this is disabled disabled
setter for property database user
sets the result set
sets the action attribute of the object
returns whether the main session identifier can be allowed by the
sets the update count
sets whether the should be automatically disabled
this method is called when the activity is terminated
returns the value of the em main em indexed em exclusive
sets the
returns the id
sets the
sets the date
returns the date
sets the code
returns whether or not the identifier is allowed
returns the code of the code that identifies this code
sets the code code property
returns the message
sets the details
returns the details of this
sets the step name
returns the step name
returns true if the identifier is
cancel a job
kills the thread
returns the number of job count
return counter of the shared
returns the current size of the queue
returns whether the application is on main session
returns the current working thread count
getter for property job executor class name
returns the repeat visitor
returns the maximum number of threads that can be used
returns the maximum number of queues that can be used to allocate
returns the number of threads that have been executed
returns true if the given date is valid for this time
sets the maximum number of queues to allocate
returns the total count of all the values in this container
resets the indexes of the
sets the exception
returns the exception
sets the first click session identifier
sets the statistics for a given query
returns the dump file
set the state
sets the value of the main session identifier indexed
returns the path to the root of the path
sets the metadata url
sets the matched by date
returns true if the is
sets the value of the match algorithm property
sets the index of the last exclusive
sets whether the application is on main session identifier
this method is used to convert a pattern to a formatted pattern
sets the repeat visitor
toggles the state of the
returns the default date when the start of the
returns the node that contains the current node
returns the date format symbols
returns the status code of the status code
returns the status message for the given status code
checks if the status code is valid for the given status code
sets the statistics for this node
prints the tree to the console
configures the given
set the class of the output class
set the maximum number of elements in the array
parse ambiguous dates and setters
removes and returns the first element in this list
returns true if the iteration has more records
provides serialization support
test method for
test method for
test method for
test method for
test method for
test method for
test method for
sets the start date of the
test method for
get the class of the given file
returns the map of backing map
sets the date format symbols
creates a new set of store
sets the cache time to the given time
sets the time from the given field
add a new object to the sorted list
sets the value of the calendar cache field
returns the last exception
closes the metadata connection
convert the pattern to a localized format
returns the pattern to be used for the pattern
executes the job
sets the value for this weather parameters type
returns the standard error message
returns the message to be used for the standard output
returns the alternate insert value
sets the alternate insert value
getter for alternate update value
sets the alternate update value
sets the source class
returns the source class
returns the parameter definition
sets the value wrapper for the wrapped
returns the data file
returns the parameter list
returns the code code property
creates a pipe
sets the sql string
initializes the file
returns the description of the type of this object
returns the config node
returns true if the property has a property
sets the flag indicating whether the connection is in use
sets the column
sets the column property
sets the property of the property
converts a binary representation of the binary value to a binary value
sets the column name
returns the month of year
returns the name of the column at the given column name
returns the hour of the day
get the job object from the given
returns the minute of hour
returns the date of the time when this task is
returns the date of the
returns the disable date
returns whether or not the job is validated
read the object from the given stream
returns the owner of this
sets the owner of this
returns the date part for the given date
returns the version of the metadata version
lookup the lookup
returns the thread manager
returns the source queue of the queue
returns the comparator for the aggregate
adds a new step to the list of
returns the maximum number of sort needed for the
generate the core imports
adds a worker to the list of worker threads
returns the maximum number of merge the
returns the maximum buffer size
returns the batch manager
returns the job executor
returns the comparator to use for sorting
get the number of threads alive
returns the code field code value for the given code field code
returns the total read buffer size
increment error count
override to override this method to provide custom merchant
returns the write size of the buffer
increment the number of in the given object
returns the generation of the output
sets the comparator used to sort the comparators
returns true if the current record can be read
returns the core class name
increment the number of objects in the given number of objects
sends a simple aggregate to the output channels
returns the port at the specified position in the
sets the jdom element
returns the node
set the thread group for this thread
set the array of groups to the specified array
returns a thread group for the given port
sets the node class
returns the class of the node
returns the of the
returns the target source for the ith queue
traditional getter method that returns the
returns the source thread
returns the source object
returns the step
returns the error code for this exception
returns the event handler
returns a new in the port
returns the new port
returns the channel name
returns the
lookup the shared lookup
adds a executor to the service
returns the port at the specified index
returns the executor for the given name
adds a state to the pool
get the list of used lists for the given node
adds a new executor to the pool
returns the server details for the server
returns the servers servers count
checks if the server is alive
checks if the server is alive
returns the name of the
returns the number of records processed by the
returns the name of the node
returns the name of this
get the port index for the given port
returns the error code
this method is used to set the to the given
adds a collection of to the
returns the xml element
returns the node with the given name
handle an event
sets the string to the given code prepared statement code
handles an event code
set the connection pool
handles an exception thrown by the given exception
puts the given array into the data array
returns the call object
returns the namespace of the element
this method is used to convert the to a
checks if the memory is low low
interrupts all steps
get the unique object name for the given object
get the unique object name for the given object
returns the id of the
creates a new project
convert a string to a string
returns the timing information
returns the total time of the
sets the waiting time for this node
returns true if the current thread is waiting
returns the hash code for the given objects
clears the batch log batch
write headers to the table
returns the string for the given
clears the batch log
traditional getter method that
returns the id
returns true if this is a method
sets the
returns true if the given object is a object type
returns the class of the data type
returns true if this type is an array
returns the node element
returns true if the constant pool is a constant
returns the code of the code that is the current content
returns the index of the port
sets the index
sets the data type from the port
returns the value of the constant value
this method is used to set the data type of the
returns the job executor
returns the class name for the given class
returns the list of for the given parameter
get the value of a parameter
returns the id for the given
this method will be called to set the to the given
returns the required message for the given group
checks if the parameters are included in the parameter set
returns the directory cache directory
add a trigger to the database
returns the key from the database
get the xml configuration from the xml node
returns the
records a log entry
returns the job queue
set the job executor to use
returns the number of error messages in the list
returns the date of the
returns the last error
increment the error count for the given error
increment the error count
creates the cache cache table
checks if the given handler is a event handler
create a new load command
returns the cache file name
adds a batch of connections to this database
returns the number of rows in the batch
p this method is used to handle the event
returns the connection
this method is called when the command is ready to be run
sets the boolean value at the specified position
sets the byte array value for this
handles the error message
sets the double value of this field
sets the float at the given position
sets the four bytes of the specified position into the
sets the long at the given position
p this method is used to handle the error
set a null value to null
set the object to be used for the
sets the designated parameter to the given code pos code
sets the timestamp at the specified position
returns true if the is the first thread to start
sends a job message to the server
create a new load command
adds a new file to the list of statements
checks if the thread is currently running
returns the first thread to enter state to enter
set a null value to null
returns the last thread to enter complete state
returns the triggers of the event
get the target step for the given target
sets the object name to be used for the code generation
returns the port index
sets the source port
sets the sort
returns the sort order
returns the source field definition of this object
get the files state
configures the given builder
returns a list of all the files in the list
returns the number of channels in the open channels
returns the current file channel
returns whether or not the file downloaded is downloaded
initializes the object
sets the user name to the given user
shutdown the server
get a database connection
get the java type of the given
shutdown the database
returns the code code property
returns the path
shutdown the server
pauses the server
get results of the
converts a xml node into a string
pauses the server
getter for property channel
returns the simple date format
returns decimal format
get the format for the given class
this method is used to commit the timestamp of the
the of a
load the table name
returns the primary key columns name
returns the source key columns in the table
returns the key of the surrogate
puts the given array into the pool
convert a string to a string
sets the value of the field
sets the double property b
sets the float at the given position
sets the four bytes of the specified position
sets the long value of the field
set a null value to null
set the object to be used for the
sets the content of the object
create a string command
adds a new row to the end of the database
set a null value to null
sets the string at the specified position
returns true if the next node is more nodes
load node list from a string
sets the static type of this code gl20 resource builder code to
removes the entry at the specified index
returns true if the constructor is an constructor
set the class name of the variable
sets the value of the element for equation property
sets the type of the element that is stored in the
returns the name of the variable
removes the last element from the list
returns true if the method is open
returns a hash map of the current values
prints the array list of variables to the output
prints the map to the output
stores the specified variable in the array
adds a variable to the list of variables
adds a variable to the list of variables
returns the occurence of the variable
clears the variables
adds the variables to the list
destroy the window
destroy the window
returns the match of the receiver
returns the reader for the given input stream
sets the total price
removes a product from the cart
check stock cart check
cart buy cart
sets the id of this node
sets the gender
sets the client name
sets the balance of the account
sets the list of children
sets the order list
sets the quantity sold
sets the price in cart
creates a child bean
creates a new child
this method is used to get the account from the database
checks if the given password is valid
this method is called when the user selects the account
deletes the account with the given username
this method is called when the user selects a product
change the price product of the current product
changes the stock product stock
add stock product to the stock
changes the description of the product
this method is used to change the picture of a picture
delete a product from the database
sets the id
this method is used to get the account from the database
checks if the next time the program is running
set the start of the message
set the start value
check if the setup is setup
sets the delta
sets the parameter
sets the parameter
sets the number of the
sets the time stamp of the frame
returns the current measure of the current measure
sets the duration of months
checks the time to calculate the next time ramp
adds a new generator to the list
sets the time of day of the given hour
add a new configuration to the configuration
adds a parameter to this parameter
sets the parameters of this object
sets the group by config generator
returns the current time in milliseconds
returns the current time stamp
returns the time server
returns the value as a double
sets the double value of the double property
validate the given object
gets the price mid
returns the expected result message for the incorrectly incorrect type
returns the value as a string
set the string value of the property
sets the trading system
returns the value
set the integer value
set the value of the product as a code product code
sets the description
sets the param id
returns the average of the average
returns the length of the moving average
returns the last price of the last price
get the error code
sets the
sets the time stamp
returns the
sets the
returns the value of the is buy property
returns the event
returns the position in the table
round a double to a double
returns the decimal places
calculates the average value of the given array length
returns the number of decimal places
this method is used to convert a value to a double
returns the average of the
initialises the values of the arrays
returns the last value of the last time
returns true if the value is initialised
sets the product name
increment the index of the oldest entry in the list
set the dao for communication with the data
sets the data source
sets the filter
sets the parser
sets the file path
sets the timer
imports a new snapshot to the data source
sets the country
sets the exchange
sets the suffix
clones the attributes by copying the attributes from the given object
returns true if the other attributes represent the given object
checks if the product is a valid one
adds a validator to the list
sets the transactions
sets the
set the cash manager
set the service
gets the cash balance of the account
sets the initial balance
sets the account name
sets up the current book
computes the percentage of the weights required for the
computes the sum of the margin required for the given
returns the sell value
returns the value of the product
sets the sell value
sets the ticker
returns the type of this event
removes all the books from the list
sets the type
add an alias to the cache
set the product type
returns the alias of the source
computes the number of points in the
calculate the stop loss of the flight
sets the valid from
sets the underlying underlying underlying underlying underlying underlying underlying kernel object
sets the alias of the user
sets the valid to
deletes the entity
deletes all of the entities
deletes the given transactions
save an entity
this method is called when an entity is loaded
scan the last scan entry
add a transaction to the persistance layer
this method is used to update the cash account
checks if the given parameter is a
find a cash account
create the cash manager
returns the balance of the account with the given account name
sets the cash balance of the account
returns the of the
compares two times and return the time stamp
validates the transaction
returns the hour of the day
get the millisecond value of the field
initializes the file
saves the given data to the file
close the file
writes the row to the output stream
returns the time in milliseconds
append the given code object code to the end of the
returns the string representation of the given parameters
returns true if the year is a leap year
returns the last open position of the side
returns the post method
sets the input
sets the mail sender
sets the from address
returns the size of the fleet
calculate the quantity of the price of the given
creates a configuration
gets the price of the given price
create a composite configuration
combine the configuration of the configuration
returns the profit on the given transaction
checks if the thread is closed
notifies all observers that the transaction has been closed
returns the time stamp generator for this
import the customer prices from a given stock
get the id of the bean that is used by the broker
returns the time stamp generator for this
updates the side of the given transaction
the given object
checks if the given object is a copy of the current object
test for the fields of the given object
adds the tester to the list of tester
returns whether the class is called by the class
returns true if the value of the equals method is called
returns true if the node has been called
builds the price for the specified price
returns the value of the code some value code
sets the value of the code some value code property
adds the given transactions to the list of transactions
returns the default test product product
set the product
count the number of elements in the list
creates a new transaction
creates the default product parameter
populates the list with the data from the product
creates a http status for the given http status and
creates a http client exception
this method is called when the player changes the
sets the current game field
sets the object
sets the field
sets the position of the quad
sets the field
sets the turn
this method is called when the player changes the
returns the other team
returns the strategy used to calculate the strategy
returns true if the player is currently playing a team
this method is called when the player changes the technology
set the value of the field
generate the next bit
returns the next pseudorandom gaussian normally distributed
sets the seed of the random number generator
returns a new
returns the value of this
returns the sign of this value
returns a new
returns the hash code of the value
returns the precision of the
sends a message to the server
initialize the node
updates the routing table
returns the node that is connected to this node
returns the degree of the constant
send a req message to the server
called when the is removed
matches the match against the match pattern
add a query data to the database
adds a map of key storage to the storage
returns the value for the given node
get the long value of the node
executes the query
get the double value of the node at the given
executes the
this method is used to set the value of the receiver
executes the query
executes the query
moves the node to the next node in the neighborhood
process the incoming message
returns the ith neighbor
returns the degree of the polynomial
removes the specified network from the network
removes the specified network from the network
return the node that is being used by this node
returns the number of segments in the cache
returns the ith neighbor
adds a node to the neighborhood list
returns the degree of the constant pool
removes the given node from the list
returns the degree of the degree
this is the entry point method
fired when the user clicks on the send button
called when the user types in the name field
sets the default namespace prefix
adds a namespace declaration to the namespace
visits an argument
adds a namespace declaration to the namespace namespace uri
this method is invoked when the node is being visited
prints the special tokens
test of program method of class org
test method for
initialize the options
returns the name of the
this method is used to generate the data for the class
this method is called when the is re init
test for code has transitions code
test for
this method is called when the spider is a severe
test of can start b ascii method of class
close the connection
test method for net
this method is called when the user selects the from
this method is called when the mouse is moved
this method is used to set the regular expression
this method is called when the test is set
this method will dump the state of the debug state
test dump of the
test dump of the correct state and with the
test the dump method
returns the hash code of this object
test dump a nfa
this test checks to see if the dump state is consistent with
this method is called when the is set

visits an analysis
append the given node to the given parent node
returns true if the property exists
returns the value of the property
returns the javascript representation of the
performs the constructor
add update to the list
initialize the document
create a document node
parses the contents of a document
opens a connection to a url
writes the contents of this object to a writer
writes the contents of the to the given print writer
sets the type of the field
returns the type of this event
checks if the object is equal to this one
writes the contents of the code write writer code to the specified
sets the decl
sets the items
returns the declaration of this declaration
sets the item at the specified index
sets the
sets the default value
returns the item at the specified index
writes the contents of the to the given print writer
gets the value of the property
writes the contents of the to the given print writer
sets the items
writes the contents of the to the given print writer
writes the contents of the to the given print writer
sets the item at the specified index
writes the contents of the to the given print writer
sets the
returns the item at the specified index
gets the value of the property
writes the contents of the to the given print writer
writes the contents of the to the given print writer
writes the contents of the to the given print writer
adds an item to the list
removes an item from the list
sets the pub
returns the pub
sets the items
writes the current object to a print writer
writes the token to the given print writer
sets the item at the specified index
set the attributes
returns the item at the specified index
returns the ith attribute
sets an attribute
writes the content of this entry to the specified print writer
sets the text
sets the system
sets whether the parser is parsed
set the attribute
returns true if the file is parsed
get the attribute with the given name
sets the content of the content
returns the content of the content
sets the
this method is called after the next request is finished
parses a document
sets the
gets the value of the property
parse a element
set the namespace attribute of the element
clears the list of all the definitions
at startup create and show the main frame of the application
returns the user id of the inserted user
get the type reference for the given type
returns the reference field for a field
returns the reference type reference for the given type
return the reference for a method
compute the method map
dead
compute the type reference for the current file
clears all the cached values
returns true if the inner class is static
returns the outer class of this class
returns the declared target
returns true if the class is static
the
remove all modules from the given set of modules
returns the index of the bytecodes
returns the number of instructions in the
returns a reference to the bytecode for the bytecode
load all the sources from the given set of sources
returns the bytecode stream for the current instruction
this method is used to determine the contents of the jar file
returns the class loader for this class loader
returns the program counter
initializes the random walk
adds a random edge to the seed
handles the normal edge
returns the number of parameters in the current locale
clears the cache
checks if the given pair is in the list
returns all edges for target nodes in the given target
returns the set of all the in the set
this method initializes the variables for this variable
make an equation factory for the given instruction
creates the variables
called when a call node is made
builds the analysis scope
adds the application modules
a basic implementation of a class
returns true if the given is a program
starts the query
checks whether the given collection of the predicates are propagated
returns the number of arguments
sets the basic block
add a node to the
add a node to the
checks whether the given is a
returns the list of parameter types
set the default value for the given parameter
returns the ith parameter
ensures that the value has been set
returns the number of arguments
returns the value of the specified number as a
compute the subroutine for ssa
returns the exception value
the cache
method to be called prior to the method to perform the
method to handle the
this method is called when the method is called
sets the values of the array
this method is used to remove an existing object
returns the index of the first instruction in the list
returns true if this block is a catch block
get the slot that is shifted in the specified slot
returns the nth for the given number of local
returns the def
returns true if the method is static
returns true if the call is a dispatch call
returns true if the current line is a special call
returns the type of the declared result
returns the declared target
returns true if the block is a block block
this method builds the
this method is called after the
initialize all instructions for this modeler
returns the def element
returns the use of the given
returns the number of defs that are used for the given
returns the number of uses in the given
returns true if the given basic block is an edge
check if a basic block is a normal edge
returns the enter state
returns the value of the array reference
setup the location map
visit normal instructions
visits all instructions in this subroutine
gets the call instruction indices for the given call
returns a new code site reference code object for the given
returns the index of the given code site code
get the basic block for instruction
creates a new code basis code and determines whether
creates a new code basis block code for the given code
checks if the given method is indirectly
this method is called when the advice is being tested
sets the value of the designated column in the given code position
handles a tracked handle for an assignee
checks if the method is a method invocation
returns the stack height
initializes the instance of the
visit a field access
this method is not supported in this class
initialize the variables
returns the entry
exits the application
sets the catch block of the block
returns the number of blocks
this method is called when the is
computes the edges of the edges
computes the edges of the edges
returns the type of the variable
create the empty block
clear the instructions for this
adds all classes to the
private method to be called to perform a private method
adds the exceptional influence to the list of white spaces
updates the pi pi pi pi pi pi pi pi pi
finds a method with the given selector
the cache and all its children
sets the to the next
returns the node object for the given number of the node
returns true if the given method is
returns true if the given class is an interface
returns the type of the given class
constructs a slice of the problem
returns true if c1 is assignable to c1 c2
populates the tree with the given node
this method is called when the graph is updated
add a block to the block
returns the context item associated with the given key
adds edges to the ssa graph
adds a new node to the return list
add a instruction to this grammar
add a new allocation to this
creates a new instruction reference for a given length
adds a to the graph
adds a new allocation to this constructor
return a statement object for the given
registers a node
creates the nodes for the given key
visit cos amp
creates the callee params
this method is used to create a node from an explicit node
creates a special statement and creates all the nodes
this method will be used to create the normal statements
adds a call to the call
initializes the object
initializes the core
initializes the synthetic class
returns the loader
returns the extension loader for this extension
returns the application loader
returns the synthetic loader used to hold the gathered data
adds a source file to the specified scope
adds a class to the specified scope
adds a class to the current scope
adds a loader to the module
adds a new analysis to the module
adds a new module to the head of the list
sets the method selector
sets the target selector
returns the use constant flag for the constant pool
sets whether to use constant constants specific to the
returns whether lexical stacks should be used
set whether lexical should be used for stacks
returns true if lexical should be used
set whether lexical should be printed
returns whether or not the handle is static
sets whether the handle is static init
creates a new method
get def use
register a class to be used
adds a new constraints to the list
adds a call to the
adds a field constraints to the list of constraints
adds a new node to the mix
records a code
add a new record to the set of key values
sets the associated element
given a class to find the create create
this method is called when the element is removed from the
unify with the given set
records a key for the given key
visit abstract type declaration
advance the current iterator
returns the number of points in the map
updates the side effects of the given unification
add a new node to the list of nodes
sets the fixed value set to be fixed to the given one
returns the pointers for the given key
assigns an instance to the catch block
the source for the parent
checks if the is a
returns true if the given is already in the
returns the method reference
returns the ith parameter type
evaluate the instructions in this genetic code
returns the constant value of the constant test
register a class to be added to the given class
returns the reference to the
set the interpreter context interpreter
returns the synthetic method for the given method
returns the method for the given method
extract the package from the given type
returns the timed out timed out
reads a byte from the input stream
clears the buffer
process the
this method is used to ensure that the singleton serialization
returns the raw name of this object
process the
returns the number of parameters
returns the class loader for the given class
returns the class type of the given class
adds a new node to the list of discovered nodes
expand the tree node
returns an image icon or null if the path is invalid
returns the plugins resource bundle
sets the value of a set of instances
checks if the given function is a primitive call
sets the major version number of this version
sets the minor version number of this version
returns the number of in the given string
returns the ith
returns the value of the
returns the value of the
returns the number of in the specified range
returns the number of in the given string
returns the number of in the given string
a constant field
this method is used to convert a string into a constant
a constant
the of a
sets the access flags of the receiver
sets the index of the constant pool entry
set the index of the super class
sets the indices of interface names
sets the name of the
sets the names of the interfaces to be used for the
adds a method to the given class
adds a node to the end of the node
adds a field to the
adds a method to the given class
add a field to the fieldset
adds a class attribute to the list
set the raw table
set the raw table
set the raw table
returns the value of the pool value designated by the given
sets the index to the given index
sets the value of this entry
sets the value of the
sets the value of the
sets the value of the column
sets the value of the field
sets the index to the given index
sets the code
sets the raw handlers
sets the attributes
initializes the iterator for the values of the object
returns the offset of the raw data
returns the size of the raw data
returns the offset of the data in the data source
returns the size of the data set
returns the index of the constant pool entry
returns the name of the class
advance the current position to the next one
initialise a field attribute iterator
initializes the iterator for the values of the iterator
initializes the instance of the attributes for this class
returns true if the address is an address
returns the next class in the stream
writes the current object to the output stream
write the output of the class file
sets the print line number option
set the print constant pool
deletes the method
visit the method
method visit method
get a method code
replaces the given method with the given name
returns true if the last call to the current object
removes the specified class info from this list
set the class hierarchy
prints the path to the output directory
verify that the current instruction is valid
compute the types of the given values
visit constant declaration
returns the results of the specified key
stores the given value into the map
compile the source bytecode
writes the given prefix to the output
writes the contents of the to a writer
returns the output
emit a label on the stack
emit a new instruction to the
emit a instruction as a
starts the
this method is called when the is finished
returns the number of bytes that are equal to the
insert a patch into the start of the living
insert a new one or more
insert a patch into the list
replaces the current with the one
returns the zip entry for the entry
adds a method exception handler
opens a jar file and returns the jar file
inserts a new situation to the
set the output file
adds an input stream to the jar
adds an input jar entry to the input input
adds a file to the list of input classes
adds a file to the directory
sets the ith index
this method is called when the traversal is traversed
returns the resource name of the resource class
insert a patch into the history
returns the output file
insert a new editor at the given patch
replaces the patch with the patch
add instruction handler
writes a comment to the given jar file
sets the ignore
adds an output jar entry to this zip file
ends the output jar file
closes the jar file
returns true if the connection has been built in the
returns the merge function
test the code cell code method
test the method
tests retrieving the class file
a unit test for junit
ensures that the mutable bit set is mutable
tests the code write mutable int code method
tests the code code method
tests the code get code method
ensures that a
tests the creation of a mutable long
returns true if the given is already in the list
returns the first analysis of the given class
set the name of the
sets the new
adds a node to the graph
returns the label of the specified node
returns the node with the specified label
returns whether the call apply call should be applied
returns the plugins resource bundle
adds a module to the model
add a module to the module
adds a module to the system
returns true if the node is a node
adds a new module to the list of available modules
method that returns the callee target
returns the method reference
adds a new to the current scope
creates a field reference reference to the given field reference
create a method reference
create a getter reference for a property
create a new reference
returns the loader
returns the extension loader for this extension
returns the application loader
returns the synthetic loader used to translate the
add a class file to the archive
returns true if the field is a field
prints the given code node code to the given code
factory method for instantiating a code file code
factory method for instantiating the superclass of the specified context
factory method for instantiating the specified code context code
create a local context for a local context
create a new context
returns the parent entity of the given entity
sets the parent of the given entity
visits the given entity
called when a new entity enters this object
post process an entity
visit a entity
leave the entity
returns the parent entity of the given entity
visit a file
leave the entity
sets the parent entity of the given entity
visit a field of the entity
visits the given entity
leave the entity
visit a type entity
leave the type entity
returns whether this object has implicit attributes
visit function entity
leave the function entity
visit a script entity
returns true if the variables are special
leave the current interpreter
visits the given tuple
enter the node
post process a node post
visits a node in the tree
leave the node
visitor function for calling
leave the function
visits the function in the function visit
read the value of the given local variable
leave the function
visit local scope
leave the local scope
visits the block expr
leave the block expr
visit a block statement
leave the block stmt
visits a loop
leave the loop header
leave the loop
visit the given code code
this method is invoked by the
visits a tuple of c
visits the given tuple
leave the manager
visits the superclass of the superclass
visits the assignment of the assign assign node
visits a call to the given terminal
called when a call is going to be removed
visits a tuple of the
leave the manager
visit a constant pool
leave the current node
visit a binary expression
leave the leaving expr
called when the node is defined as a field
visits an array expr
remove the unary expr from the stack
this method is called when the is removed
visits an array length
make a global ref field for a given global name
leave the array length
visits an array of
leave the ref array
visit a declaration statement
leave the declaration statement
visit a return return value
leave the current object
visits a
leave the
visits a block of the object
visits the label statement
leave the label statement
visits the node in the list of objects to be visited
leave the statement condition
leave the statement statement
leave the statement
visits the expr
process the given code code
this method uses the to generate the classfile
leave the condition
leave the statement
leave the current
visits a new object
leave the manager
visit a object literal
called after a new value is done
leave the literal
visit array literal
this method is responsible for dispatching of a literal to the object
called before the given array of elements
leave the array literal
visits an object reference
leave the reference to the given object
visits a a assign
leave the list of replicas
visits an array of ref
leave the array of
visit array reference
leave the leaving value assignment
helper method to create a object reference
leave the object ref
visit a reference
this method is called after the referent is not transient
called when the translation is finished
visits a block expr
this method is used to deal with the
leave the block expr
visits a block expr
returns true if the unary statement is unary or not
leave the block
visit a var assign var var
leave a leave variable
visit a var assignment op expr
leave a leave guard
visitor method for the switch
initializes solve the solve order
leave the switch value
leave the switch leave the replicas
visits a the tuple of the given
add a work to the work list
add all statements to the work list
called by the system when the value of the variable is removed
leave the manager
creates a new statement
visits a catch node
creates a new statement
creates a new code
creates a new code
leave the joining of the given catch block
update the work list
internal method to handle the
visits a
this method is called when the user selects the
leave the
visits a try
called when the maintenance is
returns the interval between the activations
leave the block
returns the interval for maintenance operations
evaluate the operand
returns the lhs of the left hand side of the
checks if the cell contains a variable
leave the
visit an empty list
checks if the graph is well formed
leave the collection
evaluate the condition
checks if the given cell is a variable
visit a primitive
leave the given
visits a the
leave the leaving node
copy the bits from this set to another
this method is called when the bit size is set
visits the cast of the given member
called when the multicast cast to a tuple
returns the set of backing store
visits the object of the given object
removes all occurrences from this collection to all their stored values
returns true if this collection contains all of the elements in this
adds an element to the array
replaces the first element of the array with the given
called when the instance of the object is leaving
puts an array of integers into the array
returns an iterator over the set of all the elements in this
adds all of the sparse elements in the collection to this set
appends a sparse set to the sparse array
adds all elements in the given bit set to this
adds all the elements of the given vector to this bit vector
add a new object to the list
clears the object
returns true if the given object is contained in this list
compares two bits set
the given bit set
removes all the elements from this collection
sets the field of the object
intersects the given set and the other set
computes the difference between this and another set
returns the intersection of this set with another
adds a delayed edge to the graph
ensures that the internal array size is stored in the array
sets the
adds a new element to the list
removes the i th element from this cs
intersects with intersection and intersection
checks if the given block is exited
expands the given node
appends a sparse set sparse array to this enumeration
sets the value of the bit at the given index
clears all bits in the bit set
clears the value of the bit at the specified position
returns the value of the bit at the given position
this method is called when the is closed
performs a logical operation of this set of bits
this method is used to set the bit set
logically the bit set of the receiver
returns true if the sparse set intersects the other sparse vector
copies the bits of the bits set to this bit set
counts the number of populations in the population
returns the length of the buffer
counts the number of pairs of the current object
adds a new object to the end of the list
removes the ith element from the list
return the intersection of this
appends all of the values in the given set to this object
intersects the given object with the given set
add a new to the set of
adds a new pre node to the node
checks if the given element is contained in the queue
returns the ith value
returns the number of items in this collection
returns true if the queue is empty
returns true if the queue contains the given element
removes the item at the top of the queue
returns the object at the top of the queue
transfers the backing store into the backing store
this method is used to setup the
sets the value at the specified location
returns an iterator that returns the index of the indexed
pops the last item from the stack
ensures that the internal capacity is consistent with the given capacity
this method is called when the debugger is executed
waits for the connection to the server
build the classpath for the classpath
sets the input
returns true if the node has any successor of the successor of
add a new successor to the list
adds a number of numbers to the
remove an from the list
this method is called after the value is removed
adds a new edge to the graph
returns true if there are more elements in this iteration
returns true if there is at least one more element
returns the next element in the iteration
returns true if there is a next element in the queue
sets the pending children of this collection and thus
returns the next element in the iteration
initializes the iterator
initializes the graph
initializes the given object
returns true if the iteration has more elements
returns true if the given node is a
returns the node with the given node
this method is called when the position of the instruction
evaluate the operand
checks if the cell contains a variable
this method is used to set the node for the given node
adds all the bits in this vector to the given bit vector
adds all the elements of the given vector to this receiver
compares the value of the receiver with the same values
the vertex
sets the bit at the specified position
returns the value of the bit at the specified index
adds all of the elements in the specified collection to this
adds a new object to this queue
adds a new value to the set
returns true if the specified value is contained in this list
test the constructor
test the
test the
test the
test the
test the
test the
test for
leave the given code code
visits each element element element element
tests that the graph is propagated to the
tests the constructor with a constructor
tests the constructor with a constructor
test constructor with a constructor
adds a new point to the map
returns the current set of the current sparse set
add an instance to the instance
returns the state of the given
returns the next in this tree
this method is invoked when the node is being removed from the
removes the specified node from the tree
returns the string describing the exception type
handler method
handler for the error handler
handler for fatal errors
returns true if the file is a directory
returns true if the file is a directory
sets the maximum heap
sets the paths with other root directories
clears the map
this method returns the paths of the path to another copy of
checks if the given access path contains the given access path
add a access to the list
remove the specified access path from this
returns true if the anchor point is a
returns the head element of the file
returns the number of elements in this path
returns the ith element at the specified position
returns a string representation of this path
compares this path with another
sets the kill path to the given path
set the access path to the given code access path code
assigns the given code access code to the given value
set the local access path to the given path
assigns all the values of the given set of access to the
set the access path to the given absolute path
returns the boolean value of the boolean property
records the fact that the given record has been processed
persist the map
returns true if the given two nodes are the subset
test whether the ith dataflow value is true
returns true if the ith value is a constant
records a number
records a number of records
extends the dfa behavior to be removed
returns the name of the component
returns true if the given is still ongoing
returns the current state of the current
extends the given history into this one
returns true if the given codepoint is a than another one
given a path transform
initializes the domain
constructs a new instance of a
creates a normal flow function for the given block
returns a string representation of this object
compares this code hash code and another object for equality
returns true if the given is still ongoing
returns the index for the given
returns true if the given is equal to the given ammount
returns true if the given node is a tracked instance
auxiliary method to allow subclasses to override
allocate alloc flow for given model
returns the must be not equal to the given
return a kill local variable for the given access path
this method is called when the state machine is
returns the size of the dfa
returns the event with the given name
returns the rule
returns the number of states
returns the state with the given name
returns the initial state of the automaton
returns the successor of the given event
initialize the properties
returns true if the transitions of this transitions has
builds a whole whole
initializes the collapse state
adds a message to the list
constructs a program subroutine with a new one
returns true if the given state is a transition
computes the of the given call graph
returns the type of the property
initialize the instances of the tracked instance
called by the to add a to the
returns true if the given input is a valid one
returns the index for the given
constructs a new instance of allocation
returns the type of the solver
the method
adds a type to the end of the list
creates all the nodes in the tree
returns the simplified representation of this assignment
adds a new instance to the internal state
returns the index of the auxiliary instance of the given state
returns true if the given is equal to the given ammount
add a block to the
creates a new flow function
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visiting the node declaration
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the array creation
returns an iterator that can be used to iterate through the pointers
visits the given type specific ast node
visits the given type specific ast node
visit array type
visit array type
visits the given type specific ast node
visits the given type specific ast node
visiting the block node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visit boolean literal
visits the given type specific ast node
visit boolean delete literal
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the constructor invocation node
visits the given type specific ast node
visits the boolean expression node
visits the given type specific ast node
visits the constructor invocation node
process the given code code
visit the node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
runs the dialog
visiting the node declaration
start the
visit the node
visits the given type specific ast node
visit the node declaration
this method is called after the compilation unit is
visit a
visits the given type specific ast node
visits the given type specific ast node
visit a
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
this method is called after the refactoring
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visit the method invocation
visits the given type specific specific specific annotation
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific specific specific ast node
visits the given type specific ast node
visits the given type specific ast node
visiting the package declaration
visits the given type specific ast node
visits the given type specific ast node
saves the current expression
visit the node declaration
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
sets the calls to the
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visiting the single variable declaration
visits the given type specific ast node
visits the given type specific ast node
insert the methods description here
visits the given type specific ast node
sets whether the modifier is before the query
creates and returns new code mirror code
adds the page to the list of available pages
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific variable declaration
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visit a tag
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visiting the node declaration
visits the given type specific ast node
visit while statement
visits the given type specific ast node
visits the given type specific ast node
checks if the node is a valid node
visits the given type specific ast node
populates the tree with the
visits the given type specific ast node
visit while statement
visits the given type specific ast node
creates the nodes for the given map
create the normal statements for the given
adds the page to the list of pages
resets the document to the initial state
description of the method
this method is called when the user changes the changes
hook method for subclasses to add the data to the load
this method is called after the load of a url is loaded
override to override this method to provide custom resolution
called after the component is done
loads the classes and caches the classpath
modify the security manager
adds a target package to the target package
sets the packages packages in the target package
sets the excluded packages
sets the packages that should be ignored
prints the to the printer
parse a sequence graph from a given graph
adds edges to the graph
adds a node to the tree
this method is used to set the signature of the signature
counts the number of targets in a given type
build the hierarchy of the target class
adds a method to the current method
returns the method data for the given method
executes the command
sets whether or not the libraries should be analyzed
sets the search path
sets the close world analysis property
sets the value of the report report
sets the
sets the main class
setter for property modules
sets the directory where the modules are to be exported
set the output directory
set the property graph for the property graph
set the directory
sets the select classes
set the must power
sets the statistics for this file
sets whether the current node is marked as being
sets the rules to be used in the
sets the performance tracking
sets the timeout for the http server
sets the type state of the option
sets the value of the type state type kind property
sets the type of the option
test of connect method of class
test the regression
test the regression
test regression
test a of
test of get piped stream method of class
test of get piped stream method of class
test of add method of class
test iterator for
test regression
this method is called when the is removed
adds a new access to the given access
returns the reference field for a field
returns the reference for a method
the given arguments as a
returns the invocation string for the given invocation
load all the sources from the given set of sources
union of two objects
returns the collapsed node
returns the collapsed node
builds the analysis scope
adds the application modules
a basic implementation of a class
add a node exception to the
add a node to the
add a block instruction to the block
add a node to the
resolve the classpath entries
returns the analysis scope for the given class scope
returns the ith parameter
ensures that the value of the number is in the index
returns the value of the specified number as a
returns the index of the first instruction in the list
returns true if the block is a block block
returns true if the block is a block block
returns the basic block number
checks if a basic block is an appropriate basic edge
check if a basic block is a normal edge
returns the ir file
creates a new statement
creates a new code statement code and updates the
checks if the given cell contains a variable
visit abstract type declaration
checks whether this class is a
this method is called when the advice is alive
returns a copy of this instance of machine machine state
sets the value of the designated column in the given code location
assigns a value to the given value
initializes the instance of the stack
returns the type of the given number
resets the counter to the initial values
computes the edges of the edges
adds all classes to the classloader
updates the pi to pi pi
returns the index of the last instruction in the stack
adds a block to the list of blocks
this method is called after the is
adds a new node to the return list
adds a to the graph
add a return return value to the list
creates a new
adds a class to the specified scope
add a class to the current scope
add a new module to the scope
adds a new analysis to the module
add a class loader to the list of things to be included
register a method for the given
adds a node to the
process a field access
add a block instruction to the basic block
this method returns the points to the given set of points
given a class find the create create create method
records a structured event
add a new record to the current set of key
this method is used to set the transitive transitive root
records a points
adds a new node to the list of nodes
returns the value of the pointer key for the given key
translate the given module and translate it to the given
checks if the given is a limit
sets the value of the is factory property
returns the synthetic method for the given method
process the type
this method is called when the method is called
returns true if the given is a
process the
this method is called when the is closed
puts an object into the array
appends to the sparse set
returns an iterator over the elements in this collection
returns the intersection of this set with another
sets the of the
adds a collection of sparse objects to this set
appends to the sparse set
set the value of the bit at the given bit
clears the value of the bit at the given bit
returns the value of the bit specified by the given bit
performs a shallow and operation
returns true if the sparse set intersects the given
adds a new object to the end of the list
return the intersection of this
intersects the given
add a new to the set of
adds a node to the list of constraints
returns the ith value
copies the backing store into the backing store
sets the pending children of the given set of objects
initializes the iterator
sets the bit at the given bit
sets the parent of this object
starts the code code
waits for the network to be interrupted
build the classpath for the classpath
sets the string value
returns the parser constant pool
set constants for preset constants
returns the number of in the given string
sets the fake line number field
set the class info for this class
analyses this instruction set
write this instruction array to a stream
insert a patch into the state
sets the code notebook builder code
adds a instruction handler to the given register
this method is used to convert the superclass to a
adds a method exception handler
set whether to pass the class to the
visit instructions for each instruction
close the jar file
test the cell
test the obj init method
test that the analysis is able to return the
test that the solver node is a graph node edge
tests that the bit set is mutable bit set
tests the creation of a mutable int
tests the write method
tests the code set bits bit set int code method
a unit test for junit
tests the creation of a mutable long
prints the given code node code to the given code
make a file context for the given uninitialized context
factory method for subclasses to allow subclasses to create a
make a context for the given context and return the
create a local context
creates a context for a given uninitialized context
visits the entity
this method is called when the is entering
post process an entity
visits the entity
removes the entity from the context
visits the entity
visit a file
leave the entity
visits the given entity
leave the entity
visit a type of the given
leave the type entity
visits the function entity
leave the function entity
visit a pig script entity
leave the current entity
visits the given tuple
this method is called when the node enters this node
post process a node
visits the node
leave the node
visits the expression of the expression
leave the function
visits the function in the given function
leave the function stmt stmt
visit a local scope
leave the local scope
visit a block expression
leave the block
visits a block statement
leave the statement block
visits the loop
leave the loop header
leave the loop
visits the given tuple
visits the event that is thrown during the visit of the
this method is invoked when the destroy method is caught
visits the assignment of the assign assign node
this method uses the to find the given code code
visits the tuple and its object
leave the object
visits the super of the given super class
leave the super
visits a call to the given context
leave the call
visits the variable of the tuple
leave a var
visit a constant pool
leave the current node
visit binary expression
leave the expression
visitor method perform cast of unary expression
remove the unary unary expression from the current list
visits an array length
leave the array length
visits an array of visiting the given array of elements
leave the reference to the specified
visit a declaration statement
leave the declaration statement
visit a return return value
leave the node
visits the object of visiting the
leave the
visits the outer of a goto
visits the label statement
leave the label statement
visits the the given tuple statement
leave the statement condition
leave the statement statement
leave the statement
visits the expr and returns the decorated expr
leave the condition
leave the clause
leave the internal fsm
visits a new object
leave the node
visits the object literal
hook method that is called after the object is initialized
leave the literal
visit array literal
this method is invoked when an array element is encountered
hook for subclassers to process an element of the list literals
leave the array literal
visits the object reference
leave the object reference
visits a the assign
removes the assign from the list
visits an array of ref
leave the array of the successors
visit array reference
helper method to handle the execution of a reference to a
helper method to create a object ref
leave the ref object
visit a reference
this method is called after the referent is not transient
visits an expr expr expr
leave the block expr
visits a block expr
leave the block
visit a var assign var var var var
leave a var assign var var var var
visit a var assignment op expr
leave a leave guard
visits the switch of the switch
leave the switch value
leave the switch leave the node
visits the given code code decorated code
leave the context
visits an catch catch catch catch primitive
leave the catch
visits the object of visiting the
leave the
visits the given tuple
leave the given block
leave the node
visit an empty list
leave the node
visit a primitive
leave the internal code
visits the given tuple
leave the node
visits the cast of the given code cast code
leave the cast
visits the object of the given object
leave the object manager
marshall all entities
list entities list
list entities with given collection
gets the id of the route route
sets the id route
starts streaming the server
starts the track
pauses the track
stops the track
stop the service
checks if the current recording is a recording
returns the altitude of this coordinate
returns the point of the current
returns the name of the placemark
returns the id of the given position
returns the chart description
returns the start point of the geo control point
save the route
save the to a string
routes the route to the specified route
delete the record
returns the last geo point of this control
deletes a route from the list
displays an error message
returns the end point of the geo point
deletes the route
saves the given name to the specified name
saves the data to the whiteboard
returns the id of the video
sets the photos
returns the point of the geo point
returns the file name for this video
sets the
sets the g point
returns the video
sets the points
deletes the video from the current video
saves the current state of the file
constructor for photo object
sets the distance
sets the
returns a string representation of the object
returns the id of the photo
adds a point to the polygon
set the user name to be used for the given user
returns the chart description
returns the user name
returns the password
returns the path to the photo
returns the description of the
deletes the photo
gets the type attribute of the object
returns the
adds a point to the end of the polyline
this method is called when the application is about to be processed
plays the video
creates a new photo
show the photo
returns the
sets the user pass
insert a new photo into the destination layer
deletes the user password
inserts a new path into the body
returns the route for the given id
returns the current location
update the photo with the given id
starts the track
stops the track
set the upload
returns a route for the given id
get path for the photo
insert a new route
sets the upload id
saves the to a given
this method is called when the view is about to be drawn
returns a temporary directory for the given
delete the photo
deletes the temporary file
insert a new video into the database
insert a point into the shelf list
updates the route view
deletes a route from the database
update the video
set the upload
update a route
inserts a new file into the database
get path for a given video file
updates the details of the
open the database connection
insert a point into the database
sets the upload file id
get first geo point of the given
delete a video from the database
get the last point of the given route
get last geo point from a route
deletes a route from the database
insert a placemark into the database
update a placemark
returns the first geo point of the first point of the given
set the upload as a new file
create a new discussion
inserts a new value into the data
update the route
sets the upload id
returns the last geo point of the flight
update details using the details provided
delete the row with the given row id
delete a given row from the database
deletes a route from the database
checks if the given user has already been created
set the details of the room
checks if the given host id is already exist in the database
creates a new
returns a placemark object with the given placemark id
update a placemark
sets the upload place
deletes a placemark from the persistance layer
create a new photo
saves the given data to the file
get the photo object from the photo
update the photo with the given id
set the upload photo
deletes the photo
create a new video
save the video
returns the video
update the video data
deletes a video from the database
computes the frequency of the hole
cumulative optimal double ceiling for a hole
updates the display
updates the
unload the specification
this method is responsible for getting the object
unload the
this method initializes this
handles the event
fires the selection changed event
removes all the from the world
initializes the server
sends a message to the server
close the connection
returns the next word in the list
prints out the current
prints out the current state
returns the next character in the buffer
sets the parameters of this parameter
sets the parameters
returns the character at the given position in the list
moves the x position from the given left side
moves the to the right side of the given x and
rotates the left side of the
creates a new point
resets the index to zero
rotates the by 90 degrees in radians
moves the x position from the given left side
moves the to the right side of the given x and
moves the robot to the left direction
moves the right side of the x coordinate at the right side
moves the to the left of the current position
rotates the left side of the
moves a creature to a
rotate the with the given angle
moves a to a
moves a to a right right
moves a creature to a
moves a to a right
moves a creature to a creature
moves a creature to a right side
moves a to a right right
rotate the with the given angle
move the to a specific left direction
rotates the by one
rotates the by the given amount
move the to a left
move the to a specific right direction
move the to a new position
move the left side by the car
move the to a left
move the to a specific right direction
rotates the by one
rotates the by the given amount
rotate the with the given rotation
rotate the with the given angle
move the to a new
move the to a new
move the left position in the given position
move the to a new
move the to a new
rotate the with the given rotation
rotate the with the given angle
stops all the joints and the camera
resets the command
checks if the given file exists
fixes types of predefined types
returns the type index of the reference
returns the int value of the property
returns the long value of the property
returns the current float value
set the impl
returns true if the given is in the
returns the fold of this fold
build the expression
checks if the type is a constant
packs the component and its size
creates the code jroot pane code
show the dialog
returns the value of the dynamic algebra property
returns the target object
returns the first object that is the most recently returned
updates the database database
creates a popup menu
called when the mouse has been released
called when the mouse is pressed
invoked when the mouse button has been clicked pressed
start the result set
shuts down the window
creates a new editor popup
displays the editor
this method is called when the observable object is changed
construct a new code code object with the same number of
configures the browser
creates a new code prolog list code with the given
append a new path to the classpath
stop the search
returns the display name
returns the display name
compares two objects for equality
find all files in the given directory
initializes the game
restarts the game
create the screens to the screen
returns the type of the menu item
sets the type of the menu
move the current selected index
updates the loading screen
moves the selected index to the next index
paint the menu
this method is called when a logo is activated
starts loading the screen
draws the title of the screen
draws the about help
draws the menu
loads the images of the image
runs the
moves the current line up to the next line
setter for property title
draws the options
returns whether the background image is currently being loaded
adjust the sound as a sound
stops the loading thread
free the current resources
sets the size of the view
pauses the game
resumes the game
this method is called when the player is resumed
checks if the given is a http result
updates the game state
changes the screen mode of the screen
this method is called when the error is encountered
returns the list of network data
go back to the screen
sets the time in millis to this test
returns the time in millis
creates an image based on the data structure
move the current line to the next line
save the palette
returns the number of palette entries
find the color of the specified color
sets the position of the sprite
find the next color
sets the color at the given index
sets the color at the given index
release the release of the
sets the color at the specified index
frees the image
returns the screen
returns the screen
sets the animated tile for the given tile
pauses the current playing screen
returns the animated tile
resumes the current screen
returns the cell at the specified position
returns the height of the cell
this method is called when the user selects the
returns the width of the cell
returns the number of columns in the grid
returns the number of rows in the grid
sets the cell at the specified position
pushes the screen at the screen position
returns the last index of the stack
returns the x coordinate of the x coordinate
returns the y coordinate of the reference to the
set the position of the sprite at the given position
returns true if the specified rectangle is a reference
sets the visibility of this sprite
returns the current sprite index
returns the next stack index for the specified index
sets the current sprite index
returns the current sprite
sets the sprite at the given index
called when the sprite is paused
returns the tile at the given position
paints the sprite
returns the damage amount
called when the animation is finished
notify the collision of a collision object
returns the states of the state of the given key
free the current screen
initializes the sprite
show the menu
hide the menu
plays the sound at the specified position
opens the loading screen resources
close all sounds
this method is called when the loading of a file is loaded
releases the sound
description of the method
called when midlet is destroyed
starts the thread
stops the thread
returns the number of frames in the
returns the main canvas
sets the type of the menu
draws the options
this method is called when a new user is being removed from
resumes the game
updates the game state
starts the application
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the kind feature
this adds a property descriptor for the symbol feature
this adds a property descriptor for the pin count feature
this adds a property descriptor for the port reg feature
this adds a property descriptor for the index feature
this adds a property descriptor for the reg feature
this adds a property descriptor for the pin index feature
this adds a property descriptor for the config feature
this adds a property descriptor for the latch reg feature
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
this method is called when the selection is active
creates a new adapter for an object of class
creates the meta model objects for the package
this method ticks the current frame
resets the current selection to the next available
returns the mouse released event
handles the mouse released event
handles the mouse released event
invoked when the mouse cursor has been moved onto the mouse
set the image
returns the selected number
resets the current selection
returns the mouse click point of the screen
invoked when a mouse button has been released on a component
this method will move the to a random position
set the arrow icon to the given code image code
this method will be called when the is
set the animation speed
sets the color of the airfoil
sets the grid grid
forces the window to be
draws the puzzle
randomizes the current
this method is called when the animation is playing
returns the corresponding node
a message from the input stream
load the given program from the given program
resets the mappings
reloads the values from the result set
returns a string representation of this object
clones this node
returns the number of mappings in this map
returns true if the key is contained in the set
parse a flat vector from a string
convert a string to a position
returns the value to which this map maps the specified key
sets the value for the specified key
changes the parser type
put all the values from the given map to the map
clears the internal state
returns a set view of the keys contained in this map
returns a set view of the mappings contained in this map
adds a node to the list
returns the inode at the given position
removes the element at the specified position in this list
returns true if the queue is empty
returns the iterator for the iterator
returns the value of the given variable
returns the message for this exception
returns the message for this exception
adds a statement to the list
returns the number of statements in the list
returns the inode at index
returns the label of the label
returns the expression
returns the block
returns the finally block
sets the finally block
returns the statements
sets the block
sets the statements
removes the element at the specified position in this list
returns the inode at the given index
adds a node to the list
removes the given node from the list
returns true if this is a
compares this variable to another one
returns the value of the node
sets the node value
returns true if the current value is a boolean
returns true if the modifier is protected
returns the hash code value for this object
compares this method with another
returns the transformation
sets the transformation
returns the expression type
returns the message
returns the hash code value for this
returns a clone of this code code
returns the parent node of this node
update the text in the document model
returns the line number of the text area
loads the master config file
sets the file to update
sets the config
returns the configuration for the given type
returns a template for the given template
copy the given template from the given template
changes the name of the file
updates the template
sets the default
add a new behavior to the given name
get the tag set for the tag
creates a template
returns the exclude tag set
returns the tag set
returns a template that defines the template
returns the tag set for the given action
scrolls the left position of the scroll position to the left
scrolls the position to the right position
writes the document to the given source file
sets the accepted revisions
sets the list of accepted revisions to the given list of
returns the accepted revisions string
converts a column to a map
saves the current configuration to a file
returns the comparison set
returns the document with the given id
saves the current session to the given file
adds a new document to this document
sets the current document to the given text
returns the document manager
returns the current collation
returns true if the box is currently moving
removes the document from the document
returns the content range of the given node
sets the component to be displayed when the mouse is dragged
enables or disables the revision of the tool
returns the save file
set the save file to save the file
marks the modified as modified
this method is used to close the underlying code collection code
method to set the comparison
parses the document and sets the guid for the given
causes the current canvas to redraw itself
handle the click event
intersects the given difference with the
initializes the list of difference between the given arrays
removes all of the elements from this container
insert a difference between differences about the
creates the status pane
returns true if the url is still alive
find the id of the method specified by the name
cancel the export operation
begins a new file
scrolls the current position to the specified position
get the status of the request
centers the view in the center of the current view
setup the document
sets the type of the configuration
returns the config
create the template panel
create a panel for the template picking panel
this method is called when the user selects the panel
cancel the undo
enables editing of the editable button
writes the given code file code to this file
this method will be called when the template file is removed from
writes the given code file code to this file
edit the template
saves the current template configuration
removes a witness from the database
creates a document builder
parses the given file
tokenizes the text
the
returns a string representation of this object
compares two objects for equality
returns the length of the symbol in the given list of symbols
returns the type of this lvalue
sets the value of the em witness length em em em in
sets the base length of the
checks if the two arrays are in the same length
saves the document to the document
remove the document from the manifest
loads the master config file
sets the
gets the value of the property
removes the annotations from the document
creates a template
returns the current collation object
saves the current session to a file
sets the document model to be used when creating the
removes the document from the document
returns the base path
close the session
removes the given document from the collection
returns the document model associated with the given id
setup the document
called when the template template is removed
edit the template
saves the current template configuration
intersects the given difference with the
paint the tag
returns the current document
returns the line number of the line
scrolls the viewport to the left of the scroll pane
scrolls the viewport to the right position
sets the difference for the intersection of this view
show a new template help
returns the tooltip text for the specified mouse event
cancel the undo
enables editing of the editable components
returns the number of lines in the text area
sets the scroll position
returns the scroll position of the current view
adds a listener to scroll viewers
draws the caret
switch to the language
this method is called when the user space space
returns the color of the color
returns the color of a
returns the color for cia 1
returns the color for cia
returns the color map
sets the som group member to the given code
sets the random color
sets the gray scale
removes the group element
sets the data branch group of this
sets the scale gray value of the scale
returns the data branch group
sets the red green color scale
removes the data branch group
set the viewing translation of this transform
sets the color to be used for the red green blue
translate the current view back to the current one
set scale color scale
sets the color for the temperature
returns whether the text display is a display display
shows the output of the regular som
show the som
sets the graphics flag
sets whether or not the axis is visible
sets whether the layer is visible
set the background color of the grid
sets the capability for this branch group
returns the background color of the background
returns the rotation behaviour of this rotation
paint the color
returns the current vis group
display a list of output points to the end of the data
set the radius of the sphere
returns the neuron radius of the clusters
sets the flag
returns the topology
updates the screen rotation
applies the diff around the given
all color nodes
sets the size of all
initializes the popup menu
invoked when an action occurs
sets the transparency of the given shader
sets the current sampling
sets the transparency of the appearance
sets the color of the appearance
sets the visibility of this shape
toggle the selection
sets the selected color or color to the specified color
updates the display
updates the geometry
sets the to the given color
show the transparency of the
returns the code small neuron code
updates the coordinates of the current coordinates
set the radius of the cylinder
update the coordinates of the
updates the appearance of the appearance
sets the line to be used for the line
show the dialog
returns the number of lines in the current line
initializes the ray plate
calculates the number of lines in the convex hull
sets the capability of this shape3 d geometry
returns the axis of the axis
returns the matrix for the given matrix
returns the matrix to be
sets whether or not the axis is visible
sets the capabilities of this transform group
test of method neighbors method of class
sets the busy message
sets the cursor to the cursor
adds a canvas to the canvas
action performed when the field action is performed
returns the classification panel
returns the menu bar
returns the train control
gets the toggle img view button
gets the neuron size
returns the spinner size spinner
returns the som microarray som trainer
set the fields to the param values
creates a dist combo box
the distance of the to the nearest
sets the vis config
this method is called when the user selects the train combo box
checks if the ok button was pressed
cancel the cancel button
set the icons
sets the description vector
sets the code color code for the given code code
converts this object to a string
returns the number of descriptors
returns next random pattern
sets the action listeners
returns the next line in the iteration
returns true if the iteration has more elements
resets the counter to zero
initialize the random sequence
returns the number of activities in the list
sets up the classes for the classes
returns the activity counter
this method is used to parse the
returns the number of lines in the line
returns a random line
sets the button default state
returns the number of in the specified network
resets the action to the initial state
sets the next button to the next action
starts the action
called when the user presses the button
pauses the
sets the interval to be used for the update interval
this method is called when the training
updates the
this method is called when the is finished
returns the balance of the
runs the training process
returns the balance of this
starts the training thread
set the training thread
returns the index of the
stops the training thread
returns a string representation of this object
returns a string representation of the given number
called when the selection is updated
this method performs the actual transformation
this method is called after the training date is updated
returns the vertices
returns a string representation of the vertices
sets the table
returns the concatenation of the table as a string buffer
returns a string representation of this vertex
initializes the topology
sets the value of the property dimensions
returns the weight of the ith weight
sets the weight of the node
sets the weights of the weights
set the maximum trainer for the trainer
returns a string representation of this object
adjust the
adjust the of the
adjust the
builds the table
adjust the learn speed
sets the vertices of the given coordinates
sets the table
returns the linear index of the grid
checks if the grid bounds intersects the given grid point
returns a string representation of this object
creates a grid coordinates for the given grid coordinate
returns the of the time at the moment
returns the current learn rate
calculates the strength of the
initializes the topology
sets the default values for the network
sets up the name of the
trains the svm
sets up the name of the
trains the svm
builds the table
builds the triangulation
initializes the parameters of the applet
returns the number of training objects in the queue
initializes the coordinates of the coordinates
returns the maximum time in milliseconds
returns the init
set the som init parameter
returns the final
set the
set the frequency of the frequency
returns the current time in the som
returns the number of som durations
set the som learning rate
set the frequency of the
returns the final learning rate
returns the linear index of the given grid
set the final learn speed
returns the current learn probability
checks if the bounds intersect the receiver intersects the receiver
returns true if the current time is a training
returns a string representation of this object
returns a new
resets the statistics
checks if the given number of iterations is valid
sets the tooltips
returns the number of dimensions of the
sets the param values
initialize the
returns the topology
this method computes the fast value of the transform
checks if the values are filled
checks if the spline curve contains the values
returns the absolute label position of the current node
returns the absolute label position of the given position relative to the
returns true if the component is enabled
returns the absolute label position from the given relative relative relative relative
paint the background of the background
paint the background image
paints the foreground
creates a handle to the root node
clears the offscreen area
sets the visibility of the grid
creates a buffered image
returns the offscreen dirty
adds a offscreen to the offscreen buffer
clears the dirty flag
release any resources allocated by this object
sets the background image
sets the background color of the background
this method is called when the view has changed
sets the model to be used
sets the code graph layout cache code that will be used to
highlights the given cell
returns the bounds of the cell view
creates a new workflow
transforms the xsl document to a java
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the pattern constraint of em bpel variable name em
validates the min length constraint of em bpel em em em
validates the item type constraint of em bpel variable names base em
validates the min length constraint of em list em
validates the pattern constraint of em bpel variable name em
validates the min length constraint of em bpel em em em
validates the item type constraint of em bpel variable names base em
validates the min length constraint of em list em
validates the item type constraint of em em
initializes the version id
description of the method
initializes the annotations for b http www
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
checks if the given version is a version
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the meta object for class
sets the property style for the given property
sets the style property with the specified name and value
returns the css class for the
called when the theme is changed
called when the theme is changed
returns the element that contains this element
sets the element to be used for the element
returns the element that is being dragged from the
set the element to be
sets the element to be used when creating the element
sets the bottom margin of the bottom border
sets the left margin left
sets the right margin
sets the top left top of the top left corner of the
sets the bottom margin of the bottom margin
sets the left margin
sets the right margin
sets the top margin of the top of the stack
this index is called by the index at the specified index
inserts a child widget at the specified index
returns the spacing between cells in the table
sets the height of the cell
set the cell horizontal alignment
set the alignment of the cell
sets the width of the given widget
sets the spacing between cells in the table
adds a new component to the container
adds a html fragment to the list
ensure that the given widget is unchanged
returns the horizontal scroll position of the scroll pane
returns the vertical scroll position of the scroll pane
scrolls the widget to the bottom of the scroll pane
scrolls the widget to the left of the scroll pane
scrolls the widget to the right side of the given widget
scrolls the widget to the top of the widget
sets the scroll position of the given scroll position
sets the scroll position of the given position
sets the scroll bars horizontal scrollbar
returns the horizontal scroll bar for the given scroll bar
sets the vertical scroll bar for the given scroll bar
returns the vertical scroll bar for this widget
initializes the engine
build the rendering engine
loads the template from the given template
initializes the widget
called after the engine is created
build the rendering
called when the engine is being destroyed
returns true if the engine is ready to be ready
returns true if the state has the given state
returns the element for the given attribute
return true if this is a ready message
sets the element to attribute of the element
set an attached element to the given element
returns true if the state of this state has a state
returns the value of the attribute specified by the name
sets the element for attribute
set attached element
checks if the given item is valid
called when the user selects the given item
called when the user selects the specified item
override to be called after the selection of the item
override this method to perform the focus on the given item
creates a new
creates a new css class
returns the value of the key
updates the
sets the
returns true if the is
attaches the content of this css class to the
detaches the contribution from the set of decorations
this method is used to publish the given code style code to
loads the html file
detaches the component from the container
creates a new style sheet
creates a css class for the given css style sheet
sets the attribute of the object
set the
returns true if the engine is
returns the style name for the row
returns the style of odd rows in the table
returns the style name for the selected style
returns the cell selected style
returns the style of the focused style
returns the cell focused i
returns the document associated with this component
return the css class for this css class
returns the base class
adds a list of classes to the list of superclasses
adds a list of css class to the list of css class
applies the widgets to the widgets widgets
applies the widget to the given widget
applies the elements to the given elements
applies this element to the given element
imports the current imports
adds a declaration to the list
adds a declaration to the list
gets the value of the property
gets the value of the property
sets the declaration of this node
sets the declaration of the given code
returns true if the queue is empty
returns true if the class is anonymous
sets the published
returns the portion of the text
returns true if the data is read only
simulates clicking the button
selects all the text in the tree
set the read only state of the code read only code
sets the selection range
sets the text alignment for this text
returns the element to which the given document is
toggles the class of the given element
called before the item is before it is removed
called after the item is after the end of the list
called before the removal of the element
called after the item has been removed from the list
sets the value of a given style
notifies all listeners that the state changes
notifies all observers of the change of all observers
open the dialog
opens the title dialog
this method is invoked when the action is invoked
adds a child to this node
returns the child of the specified child
sets the parent of this object
description of the method
description of the method
returns the level of the specified type
returns the number of children of this node
adds a child node to this node
inserts a child at the specified position in the list
remove a child node
returns true if the mob is empty
returns the number of mob
prints the mob to the system
sets the
find a creature by its name
appends the given code monster code to this mob
removes the mob from the list
this method is called when the player dies
adds a player to the group
sets whether or not this leader is static
returns the leader of the leader
move monster to monster
sets the active position of the player to the given position
checks if this player is a member of a player
returns the position of the player in the list
returns the c1
sets the c1
returns the color of the
sets the c2
sets the rectangle to be used as the rectangle
process window event
returns the character that contains the given string
adds a listener to the list of listeners
saves the document to the given file
at startup create and show the main frame of the application
returns the underline style
returns the valid at time
returns the valid object
description of the method
returns true if the data flavor is annotated with the given
show the image
this method is called when the user selects the command
sets the render property for this cell
returns the render property
sets the renderer to be used for each cell
returns the number of visible rows in the table
updates the state of the controls
creates the button bar
called when the window window has been created
returns the amount of gold this item
creates a new user
adds a account to the account
returns the move that has the given move
starts the battle
returns the number of possible
returns the uuid of this node
returns whether or not the is enabled
sets the possible
returns the species data
returns the number of specifiers
checks if the ability to use the ability to use the given
sets whether the is enabled
returns the data set
sets the type of this
creates a substitute
returns the of the given
returns the hold item data
disposes this object
returns the move data
this method returns the current data set
checks if the given data can be
returns the
saves the modifications to the file
set the
set the data length for this data
returns the random number generator
saves the species database to the database
returns the value of the mod data length property
runs the battle
returns the number of strips in the
attaches the field to the
removes all the moves and their values
sets the abilities of the given abilities
returns true if the given ability is a thesis
returns whether the text contains the value of this component
checks if the associated code ability code participates in
returns the species
returns the number of species
handles the of a species
returns the name of the by the given name
returns true if the can learn the given
modify the species
removes all effects of the
removes the given effect from the list of
returns the effect by type
release resources used by this object
get the trainer
this method is called after the patch is read
applies the effects of the given code code to the
switch the in the
returns the opponent for the given opponent
replaces the current with the given
sorts the array to fit the list
sets the flag
description of the method
returns the number of alive
this method is called when the is reached
returns whether the is
returns the gender of the user
called when the session is created
normalizes a given
returns the ability name
move the to the given move
returns true if the given move is a special move
returns the effect at the ith valuation
returns the
returns the
returns the ability
sets the ability to the given ability
checks if the item can be used in the list
returns a sorted set of the species set
saves the data to the output stream
load the data from an input stream
removes an exclusive item
adds an exclusive item to the collection
returns the item name
switch to a
tick the tick means the player has been killed
returns the tier of the tier
returns the item
checks if the ai is
switch to a
this method is called when the user selects the tick
returns the tier of the tier
the
returns the move
switch to the given switch
tick is ticking
set the
returns true if the
returns the
returns the lock
apply the given to the given
returns true if this is a
returns true if the
returns true if the connection is allowed to be
sets the percent of the
returns true if the given exclusive lock is an exclusive exclusive exclusive
returns a clone of this code code
sets the item
returns true if the given is a
returns the tier of the tier
returns true if the door is
returns whether the given field is a
ticks the tick
sets the types of the given types
returns the tier of the tier
returns the field copy of the field
tick
the given field to the given
this method is called when the tick starts
switch to the given
switch to a
this method is called when the game is about to be used
this method is called when the game is about to be used
this method is called when the user selects a
switches to the given field in the field
this method is called to check to see if the user wants
switches to the given field in the field
this method is called to check to see if the user wants
returns true if the glyphs should be treated as a
returns true if the is transformer transformer
this method is called when the game is about to be used
this method is called when the game is about to be used
switches to the given field in the field
switches to the given field in the field
executes the given roll
applies the to the given
mult
this method is called to check to see if the user wants
this method is called to check to see if the user wants
returns the transformed sprite
returns the transformed data from the given
this method is called when the user selects the next tick
calculate statistics for the given number of objects
returns true if this is a special
returns the multiplier for the given type
compares this object with the specified object for equality
increases the by one
returns a string representation of this object
returns true if the door is a
returns true if this node is an raise
returns the number of stat
returns true if this is a listener
this method is called when the status of a has been
this method is called when the user has hit a hit to
returns true if the given is in this
compares the specified object with this receiver for equality
saves the properties to a file
sets the attacker
returns true if the given target is effective
saves the current data to a file
calculate the statistics for the
returns the move list entry
prune the
returns true if the mech is special
revokes the hit of the mech
this method is called when the user selects a copy of the
this method is used to get the battle speeds
loads the given url from the given url
returns true if the is
loads a file from the file
loads the object from a file
sets the accuracy of the
returns true if the given switch can switch to the given
returns the type of this object
returns the number of moves in the list
returns the exception
returns the of the given
sets the move set to be used for the move set
this method can be used to determine whether this instruction can switch
returns true if this type can be critical
sets the power power supply power
moves a one entry
returns true if the rate has high critical slots
returns true if the player is a attack
this method is called when the tick starts
returns true if this is a
moves all the players in the given category
loads the file from the file
checks if the given entry is in the list of move
returns true if the given object is equal to this one
returns the trainer name
checks if the given move is worth of special
returns the opponent attribute of the object
checks if the given type is a type
returns the critical factor
returns the transformed data from the given move entry
returns true if the system is critical
sets the value of the ith field
returns the ith ammount of the i th
returns the maximum number of elements in the array
returns the ith move
returns the first turn
switches the current state of the players
gets the value of the original ability property
this method is responsible for enabling the
sets whether the root pane is enabled or not
returns the effect for the given index
sets the appearance for this button
adds a listener to the scrollable key
returns true if the given effect is currently in the status
removes the listener
returns true if the position is within the list
adds a controller listener to the controller
removes a controller listener from this controller
returns true if the animation has effect and
adds a mouse wheel listener to the mouse wheel
removes a mouse wheel listener from the
sets the background color of the pane
updates the appearance of the
returns the increment of the button
returns the background color
returns the current spinner button
returns the effect for the given type
returns true if this effect has effect at the given type
sets the title of the title
returns the title of the title
checks if the given ability has a ability to be played
adds a child component to the pane
adds a child component to the expandable pane
returns a rectangle describing the rounded bounds
returns true if the item with the given name exists
removes the child component from this component
returns true if the current status is active
returns the name of the species
sets the name of the user
returns the name of the player
returns the statuses by the given tier
returns the statuses of the current state
returns true if the current status is active
notifies all listeners that the state of this change has changed
starts the next processing process
this method is used to remove all the from the list
creates a thumb button
creates a scroll button
set the state of the
the effect of the effect
removes the given status from this state
removes the specified status from the list
returns the text for the display
fires an action event
removes the specified status from this state
sets the spacing between the columns
sets the active layer
returns the party
sets the visibility of this object
returns the field that represents the field
returns the display of the receiver
returns the name of the ith move
returns true if this canvas is showing
returns whether the is
renders the component to the specified container
clones this object
sets the padding pad
set the insets at the bottom of the cylinder
sets the values of this point to another
returns a string representation of this object
sets the enabled state of this event
checks whether the given code exception code is a
called when the controller is removed
called when the controller is released
returns the x coordinate of the relative x coordinate
returns the character used for the key
sets the key code
returns the vertical of the
sets the key of the character
returns the absolute x coordinate of the center of the
returns the absolute y coordinate of the relative center of the
returns the amount of the changed amount of the changed bitmask
this method is called by the
compares this object to the specified object
adds a child component to this component
returns a clone of this object
returns a string representation of this object
adds a child component to this container
removes the child component from this container
sets the foreground color
returns the child component at the specified index
updates the appearance of the
returns true if the given component is contained in this container
returns the current transformed list of the given move
returns the index of the child component of the given component
removes all children of this node
renders the graphics context
updates all the children of the given container
returns a copy of this point
returns a string representation of this object
sets the background color
sets the opaque value for this paint request
called by the container to update the component
renders the to the given container
move the weapon
updates the appearance of the
returns the size of the packed size
reinitialize the current view
inform all registered about a
sets the foreground color of the component
sets the location of the button to the given location
returns the foreground color
sets the text
sets the horizontal alignment
returns the horizontal alignment of the text
sets the vertical alignment of the cell
sets the location relative to the context relative to the location
returns the vertical alignment of the cell
converts a string to a font
returns the component that this component is currently being focus
returns the image for the given state
returns the down image
returns the rollover image
sets the image to be displayed disabled
sets the context
sets the down image
sets the image that will be displayed when the image is rolled
this method is called when the user presses the button
the
restarts the timer
starts the timer
returns the status of the active process
returns the health of the player
sets the appearance for this component
translates the coordinates by the given coordinates
hook method to be called when the text changes
returns the absolute x coordinate of this node
returns true if the is
set the wait delay for the
returns the absolute y coordinate of the relative relative to the
this method is called when the key repeat is pressed
this method is used to stop the key repeat
returns whether the key repeat is enabled
returns whether the given is in the list
sets the bounds of the receiver
sets the height of the image
sets the width of the image
returns the multiplier for the ith parameter
sets whether this component is focused
called when the session is opened
called when the session is closed
releases the current focused component
handle the event
returns true if the specified point is inside this
returns true if the given coordinates are inside the
sets whether the glass pane should be automatically
returns true if the glass pane is a glass pane
updates the
sets the padding around the left side of the
returns a string representation of this object
fires a mouse wheel event
fire a controller event to all listeners
sets the value of the code border rendered code property
register the ability to activate the ability
returns true if the given is in this
returns true if this is a
returns true if the effect is
compares this object with the specified object for order
removes the statuses from the list
adds statuses to the list of listeners
returns the layers of the given layers
adds a to the
removes a from the list of
returns the move list
returns the move of the given name
load a move from a stream
plays the game
this method is called upon plug in activation
returns the current state of the field
returns true if the current line is a preview mode
returns the handle of the screen
returns true if the file is a saver
test that the field is notified when the
test that the field is not set properly
test the flag indicating that the field flagged field
test method for
tests that the open neighbor is open
tests that the open method is opened on the open field
tests the open many neighbors
tests the open neighbors method
reads the next from the input stream
substitutes the of a string with the given name
cuts the given input string into a string
extended request data key to hold editpart visual id
creates nodes palette tool group
creates links palette tool group
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the target feature
this adds a property descriptor for the source feature
this adds a property descriptor for the label feature
this adds a property descriptor for the descricao feature
this adds a property descriptor for the software feature
this adds a property descriptor for the label feature
this adds a property descriptor for the descricao feature
this adds a property descriptor for the label feature
this adds a property descriptor for the feature
this adds a property descriptor for the descricao feature
this adds a property descriptor for the software feature
this adds a property descriptor for the feature
this adds a property descriptor for the feature
this adds a property descriptor for the software feature
this adds a property descriptor for the source feature
this adds a property descriptor for the target feature
this adds a property descriptor for the target feature
this adds a property descriptor for the source feature
loads the term
search for terms that are found in the criteria
returns the index of the term in the list
returns the number of terms in this collection
sets the data of this packet
returns the data
begin uml doc
generates a list of all interfaces of this network interface
returns the links vector
displays the given node
returns the interfaces of the given node
this method is called when the user presses the quit button
saves the current object to the current file
returns a description of the test
removes all the from the list
removes all supplies
the command to execute the command
returns the shell that will be used to display the
wait for a wait to the specified amount of milliseconds
this method returns the hexadecimal string representation of the
returns the color used to draw the bars
sets the progress
test of send request method of class
invoked when an action occurs
invoked when the target of the site name changes the
returns the field that is binded to the given field
set the colors for the
shows an error message
returns the file url as a file
returns the child for the given key
test that the target target is not already in the
gets the text attribute of the xmleditor doc object
returns the name of the text
returns the of the
this method is called when the progress bar is pressed
returns the email address of the email
returns the phone number of the current user
returns the buffer of all the
adds the listener to the button
appends the specified buffer to the buffer
show the popup menu
sets the default values of the preferences
sets the preferences for the given key
copy the location of the link to the clipboard
shows an error message
the main method of the tree
tree selection listener
rolls the treasure in the treasure to the current state
prints the treasure to the given format
parse the percentage of the
parses the fraction to the
modify the given item in the list
this method is invoked by the handler
checks if the category is valid
disables the item types
prints the log
adds a new listener to the list
prints the and and
creates an instance of the default treasure item
removes the treasure item from the list
prints the contents of the and
adds a property to the properties
prints the to the user
appends a property to the end of the properties
prints the list of items
rolls the current roll back to the roll
get the rolled rolled result from the table
prints out the and
creates a new tab
this method initializes this
removes the selected tab
prints the
removes all tabs from the tabbed pane
add a new table to the list
prints the
returns a copy of the data set
prints out the
roll the dice
prints the
check that the table is a table
prints the
test of item method of class xinco
initialize the treasure chest
level
prepare generator for a random value
prints the
prints the
adds a new amount to the
adds a new to the
adds a new to the list
adds a new to the
adds a material to the material
add a new name to the list
adds a prefix to the properties file
adds the second weapon to the
adds the size of the properties to the list
adds spell to the list
disables all the
adds suffix to the suffix
enables or disables all occurences of the item
enables or disables the minor items
this method initializes j
reloads the configuration
initializes the captcha service
flush the stream
flush the session
set the application context
creates the field editors
print the given script
close the connection
print the ant call task to the ant task
this method is used to compile a project
print a new artifact to the project
run the command
print the given property as available
print the given property file
print the ant task
prints the specified line to the output
print the string as a string
print a comment
print a string
writes the given file to the file
print a file set with the given file set
prints a string
prints a new
print a brand new path
prints the given message to the console
prints a structure structure to the given path
prints the current project declaration
prints the current project end
prints a property
prints the given string to the output
print the start tag
print the end tag
prints the tab to the console
prints the given message followed by the given string to the current
prints the given message to the output
print the line
prints the given task to the task
prints the given name to the target
prints the target end of the target
print the refresh local task
print the given path to the eclipse classpath
print the name of the given property
sets the condition of the given property
get the parameters for the parameter names
returns the value of the parameter
creates a new user
method to send a user request to the server
sends a request to the server
deletes a user from the database
get all resources
gets the resource by code code
create a new
update the database
method delete
returns the with the given name
returns the with the given id
returns the host
get all the
counts all in the database
updates the user with the given
updates the user not logged in user
deletes a user from the database
retrieves the user by email
get the user by its id
updates the user with the given user
get all the users approved
update the required
returns all the approved users
returns the user role
returns the user id for the given user id
this method is called when the user submits a list of mail
returns the intermediate elements of this request
this method is called when the list of the productions is removed
this method is called when the user submits a list of mail
gets the op
returns the first element of the data store
create a new
create a new
creates a new
creates a new
construct a with the given
construct a with an argument
report the exception to the standard output
returns true if the first second is a second
returns the first element in this list
returns the number of records in the record
returns the second element
returns the value of the record start value
this method is called by the thread pool
called when a new soft back handler is received
returns the value of the record dropped record
returns the result list
returns the total search hits
returns the number of response
create a new provider provider
returns the url string
returns the script path
returns the failure state
returns the message that caused the failure
returns the software
returns the send time
returns the id of the
returns the source of the event
returns the protocol query
sets the mail host
sets the from addr
sends a mail message to the server
replaces the underscore with the given
returns true if the request is a
returns the time needed for the time
returns the content of the content
returns the record count
returns the record dropped
connect to the server
gets the value of the software property
sets the status of the resource to the given resource
returns the send time
zibog auto generated method
sets the protocol query
sets the time needed to connect to the server
sets the record start
handles users users green and green and green and green and
sets the record dropped
sets the total search hits
notify all registered clients that it has been removed
sets the software
called by the to perform the
the
sets the send time
sets the type of the attribute
sets the search criteria
sets the diagnostics
sets the url
returns the url
returns the sub criteria for this criteria
adds a feature to the sub search criteria attribute of the search
clears the list of
removes the ending segment from the end of the
adds a new end segment to the end of the given
returns the number of records in the record
returns the value of the simple property record start value
returns the value of the simple property record dropped record
returns the total search hits value
notify the user that a client request to the given client request
returns the failure state
returns the failure message
returns the software software
returns the send time
this method is called when the user is the recipient
send a new client request to a client request
called when a new plant is added
creates the email
counts all of the database
returns the last job date
returns the number of concurrent threads
sets the number of concurrent threads
returns a string representation of this object
add a concept to the list
add a new concept to the list of concepts
adds a query to the query
returns the length of the elements in the list
returns the concept at the specified index
clears the list of all the entries
sends a mail message to the server
executes the operation
sets the count
adds a post processor to the list of post processors
returns the total record
returns true if the iteration has more elements
clears the session
gets the value of the total returned property
resume the
adds a ping query to the query
clean the data
adds a metadata query to the query
adds a capabilities query to this query
returns the thread that is being used
set the current
returns the number of operations in the query
returns the request string
replaces all occurrences of code char code with code name code
called when the body of the text content is encountered
report the report to the standard output
setter for property concepts
returns the total matched matched
returns a list of all objects
returns the number of records dropped
returns the record start
updates the client
creates a new client
deletes a client from the database
updates the start time of the
returns a list of that are newer than the given date
returns a list of the for a date
returns a list of the that are after the given
returns the first job date
returns all admins
returns all admins admin admin admin lists
get the total number of in the pool
returns admin list of all clients
returns admin list of all clients
returns the parameterized type
returns the first lower case of the first character in the string
returns the first character of the first letter in the string
returns the property with the specified name
method that renders the actual text
render a message to the renderer
get the conversation
retrieves the text of the response text
returns the title of the response page
assert title is equal to title
checks if the parameter named parameter exists
returns true if the form parameter has a form parameter
tests removing the page from room cache
assert that a form element is not present
returns true if the text is in the table
returns the web table by its summary or null if the
submit the form
assert that the given checkbox is selected
assert that a checkbox is not selected
assert that a specific option is present in the radio group
assert that a radio option is not already present in the radio
assert that a specific option selected is selected
assert that the given string is equal to the expected values
assert that a specific value is equal to the given value
assert that a submit button with a given name is present
assert that a submit button with a given name is not present
asserts that the given button submit or not
assert that a button with a given id is present
assert that a button with a given id is not present
opens the frame
this method is called when the user clicks the request
sets the broker
called when the servlet is pressed
returns the broker service
creates a broker context
process the get request
check that the checkbox is valid
this method is called when the user selects a checkbox
close zip entry
close the stream
dump the response to the given stream
returns the format for the request
returns a string representation of the given
replaces the string with the
converts the given xml document to xml
converts a string to a string
get the method from a method
generates a dom document from the given document
returns the template text for the template
get the referrer of a given
returns the http uri for the http server
returns the referer for the given http request
renders the specified text
checks if the tag is a tag tag
the
returns the size of the image
converts the date time into a long
returns the user to the user specified user
returns true if the room id is a room id
gets the user id from the session
returns the for the given request
returns the url for the request
returns the room
checks if the macros contained in the specified name
handles a element
returns the element of the given element
returns the template element that matches the current template
render the component
add a page to the list
returns true if the given focus is a child of this component
renders the element to the given element
adds a java script snippet to the stack
returns the element as a dom element
adds the selected pages
generates a string representation of the current
edit the template
returns the information about the given element
render an element
remove all pages in a folder
returns the file name
adds a java script string to this inline buffer
returns the code channel code of the code code
returns the user for the given user
join the collaboration element
returns the xml element containing the
opens a dialog with the given
returns the sharing directory
adds a channel registration to the list
returns the element that encloses the element
adds a channel to the
creates a new
builds the subscriptions of the client
checks whether the given node is a dom node
adds macros to the list
returns the last author element
checks whether the given node is a dom node
returns the last edit time from the given element
render a child string
returns the view of the view
adapts the jdom element to a dom element
handles the of a node
handles a preview button
returns true if the given name is already in the list
returns true if the given name is contained in the list
returns true if the given name is contained in the list
handles a element to be used as an xml element
returns true if the given name is contained in the list
handles a element to render an element
this method is used to determine if the macros of the specified
handles a element
returns a jdom element element containing the content of the
returns the color for the given
this method is used to determine if the macros of the specified
handles a element
handles a element
this method is used to determine if the macros of the specified
handles a element to be used in the xml element
sets the attribute for the parent element
processes a form element
show the user
returns the link to the given link name
returns the link type of the given character type
returns the link type prefix
render the display string to the display
returns the html for the given hash map
saves the data to a string
create the room
returns the edit string
description of the method
this method initializes the xml tree
returns the object from meta data from the given element
save the text into a string
returns the plain text of this plain text
get the persistent object from the given key
sets the user
returns the plain text of the given id
returns the persistent object with the given key
returns the persistent object for the specified name
get the persistent object
this method is called when the content is removed
returns a collection of all the entries in the collection
this method returns a sorted set sorted set
returns the names of all the elements in this collection
stores the object to the persistent persistent store
adds a to the list of
removes the object from the persistent persistent object
sets the xml tree from the xml element
returns the next starting string with the given name
method called by the object when a name is renamed
removes all objects from the database
returns the key for the persistent object
returns true if the user has a duplicate names
reads the read lock and write the latch
this method is used to set the id of the
write the subscribers to the subscribers
clears all the entries in the cache
removes all objects from cache
adds a key to the
finalize the garbage collection
returns the string representation of this object
returns the string that matches the given string
return a vector of tokens that are in the given source
returns the plain text content of this plain text
returns true if the field is indexed
register a persistent object to be removed
starts the reading thread
reads the data from the given element
starts the write thread
adds a session to the session session
returns the equation for the given
create a new object from the given class
returns true if the page contains the given page
clean the garbage table
unload the object to the persistent object
returns the name of the next folder in the folder
sets the persistent object to the given object
returns true if the mail report is in the mail report
returns true if the player is
remove the room
remove the user from the list
returns the author info of the author of this object
returns the last edit time stamp
returns the color for the given
returns the name of the
creates a new version object
returns the author info of this object
returns the author of the author of this link
returns the folder
compares two objects for sorting by their date
returns the status of the
returns the most recently generated page
returns the plain text content of this rtf text content
returns the left
returns true if the field is indexed
returns the right
returns the room of the current version
returns the next page in the queue
inform subscribers of a new object
returns the description of the attachment
returns true if this node is a new node
check if the user has read a read lock on the user
returns the previous page of the mail
subscribes to all subscribers of the list
returns a list of all personal keys for a given room
the root element of the tree
returns true if the given time is a fresh
returns the path to the file
copy the persistent data from the persistent store
copies the data to a new bucket
adds a child to this room
returns true if the time is
returns the icon file name
returns the top mailbox in the mail page
get the upper mail in mail page
returns true if this is a printable hand
returns the author of the current user
retrieves the object from the meta data object
sets the content type
get the persistent object from the given key
returns the object with the given key
returns the persistent object for the specified name
get the persistent object from the persistent object
loads all lazy fields
removes all entries from the collection
returns a collection of all the names of all the objects in
removes the object from the persistent persistent persistent persistent persistent persistent persistent
checks if a given user is a fresh
returns the next starting string with the given name
adds a room to this room
get the key for the persistent object
moves the target to the specified destination
returns the equation with the given equation as a equation
returns true if the current version is currently edited
returns the name of the class
associates a user with session id
returns true if the status is showing status
returns true if the inline is a inline inline or not
terminates the session
returns true if the file has a file
returns the admin
returns the content of the content of this element
stores the object in the persistent object
returns the plain text content of this message
returns the top page in the mail thread
get the upper in mail thread
returns the left
returns the right of the given email
returns the previous mail in the channel
update the list of all the mails
returns the next page in this page
returns the element
sets the xml tree from the xml element
clean up the garbage collection
returns the object that is the same object as the given
method to be called to delete the object in the session
returns a copy of this object
returns the title of the given conversation
copy the persistent store to the persistent store
deletes the object
this method is called when the object is dirty
this method is called when the is dirty
returns true if the status is showing status
drops the object
returns the container
returns the title of the given code locale code
returns true if the current component has changed
this method deletes the given object
creates a new page with the given name
returns a description of the type of the given
returns the identifier of the channel
renders the specified context
publish the clients to the phones
returns the header of the request
returns a set of personal keys for a room
returns a string representation of the current url
returns the url string for viewing the current
initialize the instance variables
returns the title of the feed
returns the channel of the channel
returns the is deleted attribute
return the default type name
returns the room
returns the last edit time stamp
returns true if the given room is already in my room
returns the name of the ith viewing platform
prints the current object
register the current object
clears all objects in this cache
set the container for this database
sets the creation time
returns the display name
sets the display name of this object
sets the deleted flag
sets the description
set the value of id
removes all room entries
stores the given set of changes to the store
returns a string representation of this object
unloads the object
inform all listeners that an event has been updated
returns the name of the file
returns all the owner of the room
returns the xml path of the xml file
updates the timestamp and time stamp of the time stamp
inform all subscribers of a set of changes
returns true if the current song has changed
test the of the database
returns the child room with the given name
returns true if the player is
returns the full name of the element
remove a session from the session
returns the full name of the last
checks if the password is valid
returns the current home page
returns the next folder name starting with the given name
returns the name of the first sub room that the given name
sets the locale
sets the
returns the root room for this room
returns a string representation of the url
returns the user type
returns true if the room is a descendant of this room
returns true if the user is a owner of the given user
returns a set of all room that intersect the room with
moves a page to a parent page
creates a new template
begin user doc
returns the relative path of the relative path
removes a room from the list of children
remove the parent room
returns true if this node is inherit from parent
adds a task to the group
sets the inherit from parent
sets the specifier
connects to the given port
connects to the given port
sets the count
returns the port
get the properties property data
returns the index of the in port
returns the output port
sets the quiet flag
sets the properties
returns the amount of verbose level
returns the port index
sets the value of the
returns the type of this port
sets the verbose amount
returns true if the port is connected to the server
returns the value of the property
returns the left value of the left hand side
returns the properties object
returns the amount of quiet
connects to the port
returns the count type
returns the value of the right coordinate of the right side
checks if the task is valid
disconnects the wii connection
sets the quiet amount
gets the value of the direction property
returns the top of the top of the top of the top
sets the value of the parameter
get the properties property data
returns true if the port is valid
returns whether the classpath is inherit
load the bundle
returns the parameter specifier
returns the bottom right value of the line
returns the message with the given key and locale
returns the use solution folder
count the number of the current values
returns the current position of the end point
sets the use solution folder
sets the parent of this task
returns the child parameter of this group
returns the token type of the given token
returns the document
executes the strong strong strong strong strong strong strong strong
creates an element with the given name
generate a description of the filter
appends a new child node to the end of the node
adds a new connection to the list
returns the root node of the tree
removes the specified task from the list
returns the first extension of the list
returns the result of the execution of the current result
read the file from the file
gets the friendly name
writes the document to the output stream
removes the connection at the specified index
returns the parent of this task
sets the long parameter
returns true if the group is a group
returns the connection associated with the given index
updates the state of the data from the selected object
gets the long parameter
adds a value to the list of allowed value
returns the data
updates the enabled state of the
clears the connections
returns the number of allowed values
updates the selected text
sets the short parameter
description of the method
sort the rank of the
returns the data
updates the data in the data panel
returns the value of the specified index
gets the short parameter
called when the ok button is clicked
returns true if the given cell is editable
sets the port to use for the port
handles the working directory
returns true if the given cell is a cell
returns the display name of the current request
updates the enabled state of the project
calculates the crossing crossing number of the crossing
creates the list from the model
handles the click on the button
returns true if the given cell is selectable
updates the data of the user
returns true if the given cell is valid
handles the click on the click event
returns the data property data
sets the task group
maximizes the component
sets the task to be used for the given task
adds a component to the component
sets the parameter that is selected in the panel
places the elements in the neighborhood map
returns the task group
updates the text in the text area
sets the selected state of the window
sets the status text
closes the current tab
set the x coordinate of the point
returns the parameter
sets the divider location
called when the action is called
sets the dirty flag
returns the divider location
this method is called if the object is changed
returns the horizontal location of the jsplit pane divider
sets the y position of the viewport
returns the size of the view
paints the component
sets the left component
sets the current file
sets the right component
updates the selected paths from the selected rows
generates the string representation of the
sets the components left component
verifies the component and the current component
sets the selected task
removes the specified pipeline
returns the graph model
sets the list of projects
updates the port data
sets the new project name
returns the port
returns the wizard dialog
sets the selected project
returns the selected project
updates the enablement of the selected project
returns the selection only
adds a task to the list of tasks
sets the selection only flag
updates the data in the data source
clears the current task
returns whether or not the default prefer short parameters are used
returns the task with the given index
sets whether short parameters should be used
returns the pipeline
updates the data from the current text
returns the number of tasks in the task
handles the ok button
creates a cell from the given task
returns the undo manager
adds a parameter to this parameter
sets the task to be used for the task
sets the solution to the given solution
updates the dialog
returns the parameter with the given index
adds a project to the tree
updates the settings of the library
returns the number of tasks in a connection
returns the path to the given node
returns the number of parameters in the list
called when the user clicks the ok button
returns true if the project has a solution to the project
selects the selected file in the
updates the of the
returns true if the tree has a project
selects the library file chooser
returns the cell at the specified index
checks if this tree contains any pipeline item
registers an action to be used for the given action
returns true if the given class has an action
returns the action with the given class
returns the port at the specified index
returns the current editor
creates a new task browser
updates the status of the project
updates the enablement state of the tree
updates the current project
returns the number of all ports in the port
returns the total number of the ports
returns the attribute from the node
returns the result
notifies the observers that the current node has changed
returns the attribute from the node
exports the solution to a file
check if the port is a valid connection
called when the user clicks the button
exports the project to a file
creates a dom node for the document
requests the focus to the browser
exports the pipeline to a file
creates a child element
requests the focus to the current component
exports the project to a string
returns the tree node
returns the preference browser
returns the center of the center of the window
returns the name of the connection to the next connection
creates the preference browser
adds a task to the queue
creates the menu bar
creates the project menu
creates the help menu
parses the given code task code
returns true if the token is a token
creates a node with the given name and type
generates a task from a task
returns the attribute from the attribute node
returns the double value of the attribute specified by the node
this method returns the value of the attribute node as an int
returns true if the user has a role
returns true if the given roles has a role
signs the user session
returns the name of the file
returns the current list of current files
returns the file at the specified index
clears the table
adds a row to the table
this method is used to create the content of the property
returns the value at the specified row and column
sets the value at the specified location
compares this file with another file
sets the marked
gets the currency from the user
gets the value of the return property
sets the value of the currency from property
sets the value of the return property
gets the currency to
sets the value of the currency to property
create an instance of
sets the value of the amount property
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
called when the user selects to check for a
returns true if the dependency is a resolved dependency
returns true if the plugin is resolved
adds a plugin name to the plugin
loads the jar from the given jar file
returns the url for the
returns the name of the name
returns the plugin class name
test that a manifest is correctly loaded
test that a manifest is correctly loaded
set the endpoint address for the specified port name
returns the entity
sets the entity
returns the entity
sets the entity
returns the entity
returns the name of the entity
sets the entity
returns the entity
returns the entity
sets the entity
sets the entity
returns the entity
sets the entity
returns the entity
returns the entity
sets the entity
sets the entity
returns a string representation of this object
returns the current sail string representation of the object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this currency
returns a string representation of this object
returns a string representation of this object
adds a string buffer to the buffer
returns the name of the data
returns a string representation of this exception
returns a string representation of this object
returns the object to string
returns a string representation of this object
returns the entity
login to a user
sets the entity
sends a password message to the server
returns true if the range is a range
deletes the membership entity
deletes an entity from the database
starts the transaction
the transaction is done
deletes the membership type entity
check that the user has paid to a given id
returns the name of the entity
this method is called after the servlet is not supported
description of the method
p the initialized servlet context is initialized
p the service has been destroyed
process a class
format the date format
extract the label from the method
handles the cancel command buttons
returns the footer for the page footer
extract the name of the entity
test the of the
adds a email to the email
handles a login view
adds a profile action to the list
checks whether the user password is already entered
update the profile action
sets the start time of the simulation
sets the format of the formatter
sets the flag that controls whether or not the
this method will insert a new record into the database
inserts a new row into the table
create a new table with the given name
creates a new db table
loads the given file
print the status of this object
returns the table with the given table name
outputs the given cursor to the output
returns the for the given column and the
returns the first of the specified table
drops the table
compares two bytes in the given array
this method returns the code code object that contains
create a new index with the given definition
closes the indexes
returns the index of the given index
create a new index with the given definition
sets the last
deletes the record from the database
moves to the next character
moves to the next character
moves to the next character
check if the given index is in the list
this method returns the intersection of this structure element
this method builds a new intersection with the given structure
this method builds a structure structure element for the given data structure
returns the structure of this structure element
this method is responsible for creating a new structure
this method is responsible for creating a new structure
returns a string representation of the current
this method is used to retrieve the name of the wsdl
returns the definition of the definition
returns the number of elements in this collection
returns the number of names in the list
sets the parameters of the given query
adds a query to the query
locates the order by the given query
called when the user sees to redirects to the last call
sets the value of the town
show the charts
adds a divisor to the computation
grupo
returns a connection to the specified name
converts a cube to an object from a cube
returns the name for the given
this method returns the object corresponding to the given name
returns the object for the given name and its name
this method is used to convert an element to a
this method will be called by the to convert a
this method is used to convert a to a string
this method is used to convert a to a string
returns the element name of the element
returns the for the given name
returns the data for the given cell
font font font font font font font font font font font font
close the splash screen
returns a short description of this action
returns a string describing this object
returns the value of the boolean property
returns a string representation of the debug message
this method is used to login to the user
gets the must filled attribute of the field data object
returns the commands
returns the value of the is must value property
returns a string representation of this block
returns the type of this code block
returns the expression
returns the value of the calendar property
returns the block that this block is mutable
returns the password for the given
returns the start date
gets the end date
test that the password correctly
returns the is
returns true if the is in the tier
returns true if the is in the tier
returns whether or not css is allowed for the tier
returns true if the is in the mobile
initialize the device scan
detects if the mobile agent is
detects if the current device is
detects if the current device is
detects if the mobile agent is or not
detects if the is
detects if the current device is a android android
detects if the current location is a valid phone
detects if the mobile device is
this method returns true if the android android android android
detects if the current user is an agent
detects if the current is
detects if the mobile device is
detects if the black white space is available
detects if the black white is enabled
detects if the black white of the is
detects if the black white in the is
detects if the blacklist is black black black
low deg 5
detects if the current user is an agent
detects if the current user is an agent
detects if the current device is a device
detects if the is touching the
detect
detects if the device is
detects if the is
detects the mobile mobile
detects if the current player is
detects if the current is
detect if the is
detects if the current device is
detects if the is touching the
detects if the current device is
detects if the current device is
this method starts the game console
detects if the mobile is
detects if the current device is
detects if the is
detects the mobile mobile agent
detect tier to
detect tier to be shooting in
detects whether css style sheet is available
this method returns true if the is other than the other
returns the value of the modified property
sets the parser
append a node to the end of the list
inserts a node into the tree
remove a node from the list
sets the handler
returns the node at the specified position
returns the handler for this event
returns the length of this node
returns the component type
parses the node and returns it
parses the stream
returns the date value
returns the comment
returns the value of the field
append a node to the end of the list
inserts a node into the list
returns the node at the given position
sets the parser
parse the content of the code parse code method
parses the specified input source and parses it to the
sets the handler
parse the specified system identifier
parse the content of the specified input source and parse it
parse the xml document
sets whether this rtf paragraph is a whitespace
returns true if this is a whitespace character
sets the comments
returns whether the comments is marked as comments
parse the
returns the rank of the card
sets the rank
returns the suit of this card
sets the suit of the card
returns the color card
sets the description
sets the selected frame rate
returns the current clip rectangle
sets the clip to an absolute value
checks if the color code color code is a color
set the color code for the given color code
set bytes per second
returns the block color for the given block
close the stream
returns the chunk at the specified position
returns the x coordinate of the region
returns the z coordinate of this region
get a region data for a given region
returns the root tag of this node
returns the region file
apply the luminance of an image to the
apply the to the specified
checks if the emitter is a emitter
checks if the given is excluded
returns true if the surface is a surface
render the region of the given regions
returns the maximum height of the image
returns the height of the
renders the thread
sets the heading of this object
sets whether or not the column is sortable
returns whether or not the column is sortable
sets the
sets the checkbox to the default value
set the state of the
returns whether this object is checked
checks if the value is valid
returns true if the resource is checked
returns the radio button
returns the radio button
returns the version of the version
returns the row at the specified index
returns the cell at the specified row and column
sets the cell at the specified row col
adds a row to the table
adds a row to the table
replaces the current row in the table
sorts the column with the given column
adds a listener to the list thats notified each time a change
returns the column descriptor for the given column
removes a listener from the list to be removed
removes all listeners from this set
notifies all listeners that a cell has been updated
fires the event to all listeners
the
add a new to the
this method prints the data to the console
sets the value of the accepting property
insert the methods description here
returns true if the player has a loop accepting a
add a to the
removes the from the
checks if the is a valid state
returns true if the entry has been selected
returns true if this is a wrong
sets the output level
checks if the agent is a goal
returns true if this is a release
returns the goal
returns true if the given set of characters are in the bag
returns the agent
checks if the is a valid state
returns true if this is a proposition
compares this object with the specified object for equality
returns the in
returns the in r
this method is called when the state is
returns true if the node is currently expanded
compares this object with the specified object for equality
returns true if the node is a
checks if the is a valid state
this method is called when the state is
initializes the
returns true if the current state is a
returns true if this property is accepting or not
removes all from the list of incoming packets
checks if the is a
checks if the state passed in is the state
returns true if the queue has been canceled
adds a collection of to the list of incoming
returns the state of the given state
checks if the is
gets the value of the property
returns the
removes the given from this state machine
checks if the agent is a
has the state of the current state
returns the property that determines whether or not the
returns the
this method will be called when the state of the state of
returns the next empty state
adds a state to the list of statemachine
checks if the agent is
checks if the is a valid state
updates the of the
returns true if the dfa is considered
returns the action
tests if this is equal to another
returns the agent
returns the next element in the iteration
gets the value of the property
returns true if the given set of individuals are in the
gets the value of the property
returns true if this is a proposition
checks if the is a valid state
returns true if the channel is until the time is until
checks if the agent is a
compares this matrix with the specified object
checks if the is a valid state
returns true if the given set of individuals are in the bag
gets the value of the property
gets the value of the property
compares the given object with this code code
returns the proposition of this proposition
returns true if this is a release
compares this object with the specified one
returns true if the dfa is considered
returns true if the agent is currently running
wakes up the agent
runs the action
returns true if the vm satisfies the given vm
this method is called when the user presses the
this method is responsible for checking whether the search is running
returns true if the agent is
search for the losing hit
returns true if the agent has
this method is called when the is closed
returns true if the agent has a goal
returns the name of the
returns the error message
set the output stream to write to the
begin uml doc
unsets the notification
returns an agent with the specified name
returns the specification of this specification
returns true if the current transaction has been notified
sets the output level of this
returns true if the timer is
checks if the properties are stored and then
starts the
trigger a trigger to trigger the event
adds a new property to this set
creates the automaton
renews all agents in this object
returns the properties
this method is called when the agent is
adds an action to the
checks whether the agent is already initialized
returns true if the is
returns true if the given is in the
returns the
the given ag
adds a plan to the list of goals
adds a plan to the list of flows
removes the goal from the list
adds a new to the consequent
adds a new to the consequent
adds a new to the consequent
returns the stage num
compares this object with the specified object for order
adds a message to the queue
adds a message to the queue
this method is used to determine if the agent is
returns the next message
this method is used to check the agent
returns true if the agent is a
returns the object
compares this object with the specified object for order
executes the action
executes the action
returns the string representation of the given
adds a message to the queue
method to send a message to the server
this method is used to determine if the agent is
returns the next message
executes the action
this method is used to check if the agent has pending
consume the next channel
skip the channel at the specified index
sets the token source
consume the last time
reads the next token from the input stream
sets the token boundaries for the search
sets the token source
returns the tokens of the specified type
returns a string representation of this object
indexes all child components
reset the state of the rule
returns the index of the child node
returns the parent tree of this node
this method is invoked when the input is encountered
returns the tree node that is being expanded
skips the token
returns the ancestors of this element
returns the string representation of this tree node
emit a token to a token
emits a token
reports an error to the error
returns the text of the input text
sets the text
compares this object with the specified object for order
returns the number of syntax errors
this method is called to indicate that the input buffer has been
sets the
this method is called when the is removed
returns the name of the
returns the name of the player
adds a goal to the
pushes the given follow state to the end of the list
adds a new to the abox
removes all from the list
choose a plan for the
selects plan with given plan
update plan usage
returns the force
sets the prop cont
returns the prop cont
sets the sender of this packet
returns the value of the given plan
sets the receiver
returns the rule index
returns the message id
sets the msg id
returns the annotation
sets the annotation
set the usage status usage
this method creates a new structure of this atom
apply the to the
checks if the rule at the given index is already already parsed
returns a string representation of the list
returns the event
sets the annotation
returns the annotation
sets the top guard
removes the from the list of
returns true if the category is a valid category
gets the value of the property
returns the size of the rule cache
this method will be called after the given node is a
returns true if the term is unchanged
the
returns true if the given xsd code of the given code
set all the occurrences of terms of the term
returns the
suspends the thread
returns the of the given
returns true if the thread is suspended
begin uml doc
sets the source of the source
returns the base term for the given term
returns the source of the event
sets the receivers names to the specified value
this method builds a structure structure element to the event
returns the id of the
returns the of the given
returns the
checks if this plan is equal to another
returns true if the is a locked state
returns a string representation of this object
returns the string representation of this object
locks the
release the lock
sets the value of the code base code property
push a new row into the table
returns the row at the top of the stack
pop the last row
returns the number of rows in the list
get the row for the given row
attempts to drop a goal
returns a string representation of the object
adds a new to the consequent
return a event object that represents the value of the
returns the nth in this matrix
returns the code i code th guard
the given event to the
reset the hash code
drops the specified number of rows from the
drops the number of rows in the matrix
sets the value of the property
returns the of the
returns true if the category is an action
returns the category
returns the event at the end of the event queue
returns true if this is a
returns true if this category is
returns true if this category is a lock
returns the transition that this is a
apply the given transformation to the current transform
this method returns the structure of the structure
adds a new to the consequent
returns true if this category is a null value
returns the of the
adds a new code rule code to this rule
removes the code rule code from this code rule code
this method is called when the is removed
returns a string representation of this rule
adds a new rule to the list
removes the specified rule from this list
adds a new to the consequent
adds a new trigger to the list
this method is responsible for creating the
add a belief base to the given
replaces the current with the given
returns true if the is
returns true if the stack is empty
adds a belief base to the given string
sets the top guard
adds all plan to the list of plans
adds all plan items from the list
returns the
returns the number of quads in this list
sets the label
sets the plan library
returns the label of the label
sets the event to be used when sending or
sets the list of contexts to the guard
set the body of the body
sets the rule base
reverse the body of the body
sets the prefix of this node
sets the id
returns the rule base
returns the goal type
returns the event
returns the goal base
sets the goal base
returns a new guard object describing this fuzzy guard
returns the content of the expression
returns the literal
adds a rule to the list of rules
makes the vars
returns the functor of the current functor
returns the number of terms in the terms
adds a term to the end of the list
returns the ith term
returns the string representation of this object
returns a string representation of this goal
returns the type string for the expression
adds a plan to the list
returns the predicate indicator
adds a plan to the list
returns the term of the goal
returns the library
set the constraint library
add a constraint to the end of the
sets the goal
returns the
sets the
make the vars to the
sets the
returns the structure of the current structure
returns true if the group is a category group
returns true if the constraint is a category
returns true if the category is a valid plan
clears all the applicable plans
returns the name of the agent
sets the content of the content
returns the first part of the triple
adds a content to the content
returns true if the given variable is a variable
returns the action type
sets the action type
returns a clone of this equation
removes the content of the given content
returns the op operation
returns the lhs of the lhs of the node
returns the rhs of the rhs
returns true if this expression is a unary unary
sets the trigger
sets the guard
gets the value of the property
returns a object that contains the given
sets the list of context
returns the string for this connection
returns the
adds a string to the context
remove a context from the context
set applicable solution
creates a deep copy of this object
sets the annotations
returns the op operation
returns the left operand of this assertion
returns the matrix
sets the list of actions to be used
returns true if the annotation has an annotation
add a constraint to this compound
imports a new concept into the array
adds all constraints to the given library
sets the inbox
adds all constraints to the given list
removes the given code paragraph code from this one
returns true if the current value is negated
returns true if the given subset of the current one
sets the negated flag
adds a new
adds a list of msgs to the list of messages
returns the sources of this structure
clears the inbox
returns true if the given name is already in the list
sets the value of the variable
sets the list of message receiver
returns the value of the field
the method is invoked when a message is sent to the server
returns true if this expression is a
returns the cycle of the
evaluate the expression
returns a clone of this expression
returns the op
sets the cycle
returns the
sets the annotation
returns the
returns the receiver associated with this term
gets the value of the th id property
returns the term of this term
returns the environment
returns a message with the given name
returns true if the given guard is a
removes the goal from the graph
returns the term as a term
add a to this set
checks if the achievement is fulfilled
returns true if the is trivial
stops the timer
returns the literal of this literal
set the
this method is called when the user presses the
returns the
returns true if the category is true
clone this object
returns true if the goal is a variable
returns the value of the code code property
begin user doc
the
returns true if the category is a start
returns true if the is
returns true if the variable is a variable
returns true if the thread is currently running
returns the ground predicate
creates a clone of this node
prints the current
returns the ith term
make all the vars
make all substitutions variables
set the reason for the
returns true if the thread is running
returns the name of the
returns true if the is
returns the term of this node
returns the id
returns a message with the given name
removes the given code entry code from the
returns the literal that contains the given literal
returns true if the given indicator is contained in the list
returns the string representation of this object
adds a new code code to the list
returns a literal that is the following literal
sets the current stage to the given
returns true if the socket is connected
writes the socket to the socket
returns true if the stream is ready to be read
reads a line from the input stream
close the socket
sets the plan indexing type
executes an action
this method is used to indicate that the given name is pending
this method is used to determine if the thread is a separate
set the output level
writes the given string to the output stream
returns true if the stream is ready to be read
close the socket
starts the
terminate the
reads a boolean value from the input stream
reads the value of the data stored in the input field
reads the normalized value
reads the value of the data value
activates this component
this method is called when the is set
adds a abstraction engine to the engine
opens the bluetooth device
compares this object with the specified object for order
add abstraction to a list of abstraction
notify all listeners that have registered interest for
notifies all listeners that an event has been shared
sets the connected attribute of the object
this method is called when the name of the menuitem is removed
this method is called when the user is terminated
this method is called when the is removed from the
returns the of the given wait
the given int
returns true if the given is a valid
returns true if the is accepting
adds an edge to the end of the queue
removes the from the end of the list
initializes the
returns the number of
returns the hash code of this object
gets the to state
returns the from state
annotates the edges in the given location
removes all entries from the cache
returns true if the current state has already been selected
returns the ith tuple
annotates the edges of an edge
returns the model
returns the model state
returns true if the model state has been set
called after the jvm has been loaded
starts the
executes the shutdown method
search for the losing hit
this method is responsible for updating the pvs state
returns the error message
adds a plan to the
adds an phenotype to the phenotype
adds a new to the phenotype
removes a from the
adds a goal to the goal
returns true if the goal is a goal
remove all goals from the goal
adds a plan to the list
updates the given plan usage
adds a literal rule to the goal
returns a string representation of the current stage
returns the of the given
returns the id of the
sets the id of the thread to be used for the given
adds an agent to the list
adds an element to the end of the list
adds a to the
removes the from the
removes all the appenders from the list
adds a listener to this
notifies all listeners that the has been changed
notifies all listeners that a string has been changed
prints the action to the output pipe
returns the string representation of the ith string
compares this object with the specified object for order
adds a new agent to the message
removes all messages from the collection
adds a message to the
this method is called when the is
returns the rdfs predicate of this predicate
removes all from the list
sets the source annotation of this arc
returns the source
returns the belief base of this
returns a clone of this code predicate code
returns the ith term
make all variables
make all substitutions variables
sets the belief of the given
sets the action type
returns the source annotation
adds a new to the phenotype
make the vars to the
returns the term
returns the rdfs goal of the goal
returns the name of agent agent name
returns a code predicate code representing this
adds a new to the phenotype
returns a shallow copy of this list
the given predicate and returns true if the
the
adds a new to the phenotype
set the value of the annotations
set the tail of this node
sets the value of the variable
returns the last element in this list
appends the given term to the end of this code term list
concatenates all terms of this list and the
returns the library
set the plan library
set the rule base for this rule
returns the rule base
adds a rule to the base rule
adds a new plan to the list of
adds a plan to the list of
returns the constraint library
set the constraint library
add a new annotation to the source
returns true if the annotation has an annotation
returns the literal of this literal
returns the goal base
sets the goal base
returns a string representation of this goal
adds a new message to the given channel
returns the left hand side of this formula
returns the logical formula that is used to compute the logical formula
sets the event
set the list of to be used for the guard
set the body of the body
reverse the body of the
sets the prefix of this node
returns the event
returns the string representation of this object
set the
sets the number of in the
returns the
add a to this set
returns the receiver of this receiver
returns the content of this element
clones this expr
returns a deep copy of this abstract list
returns the left hand side of this expression
returns the rhs of the rhs
returns a string representation of this object
sets the agent
adds a new goal to the list of
adds a new to the end of the list
adds a new to the
add a rule to the grammar
adds a plan to the list of plans
returns a code predicate code representing the
creates a new
sets the environment to the given value
adds a new to this agents agents
removes the specified from this agents agents
returns the object
configure the configuration
adds a vehicle to the list
removes a from the list of
removes all the from the list
finalize the environment
adds a new agent to the
returns the name of the agent
adds a message to the inbox
removes a listener from this
removes a message from the messagebox
clears all the messagebox
sets the name of the
adds a to the list of sensors
removes all the from the list of sensors
removes all the
add a sensor to the sensor
sets the environment
this method is used to print the action
returns the string representation of the given
removes the given from the
adds a to the
removes a from the
removes all the from the
the
add an agent to the list
notify all listeners about the event
returns true if the is
this method is called when the action is removed from the
check if the given proposition is in the set
checks if the agent is
check if the given proposition is a proposition
checks if the given proposition is set
check if the set of properties are set
the current
returns the truth value of the truth
returns the
returns the current formula
returns the goal
returns the action
returns the functor of the functor
check if the set of properties are set
returns true if the dfa is a
compares this object with the specified one
this method is called when the scheduler is currently active
called when the is changed
this method is called when the scheduler is being updated
formats the log
checks if the proposition is set
adds a new property to this instance
creates the automaton
returns the initial properties of the
executes the action
begin the
checks whether the agent is a
executes the action
this method is used to initialize the field
this method is called after the schema is loaded
initializes the applet
returns true if the is complete
returns the same line as
sets the xsl fo xsl fo xsl fo xsl fo xsl
sets the xsl xsl xsl
setter for property data
returns the data
returns the xml
setter of the property tt xml tt
returns the data
returns the
sets the value of the road property
returns the data type
set the
returns the data
sets the data
sets the data
returns the current
returns the xml
setter of the property tt xml tt
returns the current period
sets the current
sets the current period
sets the numero
sets the credit value for this
sets the debit
returns the journal data
sets the
sets the journal data
sets the
sets the credit
returns the data
returns the data
sets the data
sets the data
sets the
sets the
sets the journal
sets the journal
sets the journal
set the m journal
sets the accounting currency
sets the
sets the value for this
gets the pk of this
sets the renewal pk of this renewal
gets the password
gets the value of the j username property
sets the password
sets the username
returns the code of the code
sets the code
returns the pk
sets the pk attribute of the bean object
sets the primary key
returns the key
sets the key
gets the todo todo
sets the todo todo
gets the numero of this code code
sets the session
sets the numero of this code code
returns the todo
sets the todo todo
returns the todo
sets the todo todo
returns the
decreases the of the
gets the value of the property
gets the numero of this mesa
sets the numero of this detalle
returns true if the current user is free or not
returns the current
sets the current
returns the current period
sets the current period
returns the maximum number of times the last occurance of the
sets the max counter
starts the timer
initialize the timer
pauses the timer
resume the simulation
stop the timer
sets the clock of the clock
prints the help about the application
prints the version and exit the application
prints the help and exit
returns the address of the server
sets the machines
load the configuration from a stream
saves the configuration to the file
sets the host name
saves the configuration to the given file
sets the dhcp address
sets the name of the property
sets the port to which this port
sets the comment
returns the current configuration
returns the explanation of the
returns true if the current location is a global one
returns the value of the
remove a component from the list
adds a component to the list
remove a component from the list
refreshes the display
starts the
adds new map to the map
removes the last map from the map
display a view of the screen
prepares the conversation
sets the attribute for this object
returns a new controller for the given class
set an attribute of this class
called when the user wants to navigate back the back to the
returns the value of the attribute specified by the given key
returns the value of the attribute specified by the key
this method returns the back controller
returns the cancel controller
remove an attribute from the map
returns the object
returns the controller
switches the current display to the previous displayable
returns an initiliazed instance of image component
sets the recipient
sets the recipient
called when midlet is started
called when midlet is paused
destroy the midlet
override this method to do nothing
cleans up the keyboard and the tool
add a directory to the directory list
search the search search
check the server to see if the server is trusted
initializes the proxy server
tests if the document returned by the next sibling of the
test if next document exception is thrown when the exception is thrown
test if the next document partial is performed
test that get attribute value method returnes value for the property if
test if the document skipped skip document
test if property is set null
test if constructor throws invalid arg constructor
test calling get constructor with null argument constructor
test if constructor is null or not
tests if set of properties are excluded
creates a new instance of the mock value
creates a new instance of the
creates a mock instance of the current property
set the size of the table
called after subclasses is initialized
test if the user is hidden
test if the item is not editable
test if exclusion is set
test if exclusion is set
tests if set of properties are excluded
tests if set of properties are excluded
test if exclusion is set
tests if set of properties are excluded
test if default authorization manager is enabled
tests if the context manager is able to support the
tests if authentication is already authenticated
returns the sql query to be used in the query
test the server
test if the http connection is allowed
test if failure to a null value is not allowed
test if the is ignored
test if the user can access rights
test method for net
an empty method that is not empty
test that get hidden items return the same type as
test that the equals method is called when the test is set
check that we can get the items subtype subtype plus plus plus
ensures that an invalid item is invalid
returns the class under test class
test the
test if the repository is included
test if the repository is excluded
get the identity domain
parses the date and returns the date
validate the given form
returns a string representation of this object
sets the shared password
sets the authentication managers
returns the localized message for the given resource bundle
logs a message to the logger
test method for
returns the traversal manager for this node
returns the authentication manager
sets the server
sets the port to the given port
runs the thread
processes the request
sets the connection
test method for
sets the username to use for the username
tests that the configuration is valid for the configuration
test the validation of validate and configuration
sets the password
returns the content handler for the content handler
test that the validation of configuration parameters are valid
sets the hint for the batch
sets whether to use http responses for the http
test that the configuration is ignored when the
test that the configuration is ignored when the https properties
begin user doc
test that the validation of configuration parameters are ignored
sets the https
sets the enable flag
sets the http username to use for http requests
returns the error response for the given error
sets the http password
sets the verify server
sets the ca falling
returns the ith parent id
sets the domain name
returns the id of the object
returns the key at the given key
sets the provider url
sets the security principal pattern
sets the url for the display
this method is used to set the resource bundle for the current
close the stream
returns the exception message
returns the exception message
sets the actions for the display
collects the attributes of the category
checks if the user id is group id or group id
insert the methods description here
add a property to this property
adds a property to this property
returns the cookie value
returns the matches of the current match
adds a property to this object
set the next checkpoint
returns the string representation of the current
advance the date
puts a node in the map
returns whether the database has changed
merge two objects
restores the date and the time
logs the of the given tree
returns a format for the given format
tests the
tests the
tests the proxy
test the external directory services
test that the directory services
set up the test instance
method test authentication manager chain
test method for
set the username password for the web server
setup the setup
sets up the connection to the database
sets up the connection to the database
sets up the connection to the connector
set up the data source for the external connection
setup the internal data structures
set whether to use the http authentication authentication
set up the test
test of direct connection method
tests the direct connection with domain
test the config service
test the validation of configuration properties
test method for
test that the configuration is ignored when the https properties
tests that the is disabled
test method for
test of overriding method of class user
test method for
test method remove identity
creates a new instance of the client
creates a new instance of the
creates a new instance of the client
this method is called when the
sets the start date
sets the username to be used for the username and password
sets the url to the url of the url
sets the username for the
sets the excluded node types
sets the value of the excluded volume bands
sets the included object info
sets the version info for the given version
sets the included categories
sets the code exclude categories code property
sets the hidden items hidden property
sets whether or not the track has been deleted or not
returns the value of the code track changed items code property
sets the status
returns true if the is
sets the
sets the domain domain name
sets the domain of the receiver
set the authentication server
set the authentication port
set the authentication connection
sets the https client
enables or disables authentication
sets the authentication
sets the authentication check server flag
sets the modifiable list of ca authentication
set the authentication domain name
sets the content handler
sets the feed type
returns the authorization manager authorization manager
sets the try lowercase letter
returns the state of the
this method initializes menu estimation
this method initializes menu
handles the of the
this method initializes menu specification
computes the data for the next node
this method initializes menu structural analysis
this method initializes menu
the selected card
this method initializes menu bar
returns the symbol table for this table
checks if the user action performed the text
returns the symbol table symbol table
set the symbol table for this symbol table
sets the selection
returns the
sets the code code to be used for the
returns the symbol table
set the symbol table for this object
checks if the matrix is a rank
executes the action
check the item state changed
action performed when the user clicks the edit check action
toggles the visibility of the
checks the size of the rank
check the state of the checkbox
sets the new to the selected values
checks the value of the box
toggles the visibility of the
check the item state changed
checks if the is
check the of the card
clears the button action events
check all item state changed
this method initializes opt set dialog
this method initializes this
computes the data for the next node
show the
this method initializes box
this method initializes box
this method initializes box
this method initializes box
this method initializes graphics check box
shows the first stage of the
this method initializes mult graph check box
this method initializes card panel
returns the symbol table for this table
this method initializes stage one indi
this method is called when the user clicks the button
sets the action events to show the dialog
returns the
this method initializes struct coefficient dialog
this method initializes menu
action performed when the user clicks the edit check action
this method initializes menu specification
this method initializes menu
this method initializes opt set dialog
this method initializes menu bar
initialize the
returns the symbol table
set the symbol table for this object
returns the object
returns the data table
compute the of the
compute the of the
compute the
compute the names of the
toggles the status of the panel
initialize the table
resets all the values to their default values


correction error

show the
compute the estimation of the stats file
sets the boolean to be used when the beta is
get the struct
set the for this
this method initializes this
this method initializes j panel
the field
this method initializes j panel2
this method initializes cancel button
called when the selection changes
show the
this method initializes
this method initializes
this method initializes j radio menu
this method is called when the tree is changed
this method initializes trend radio radio button
this method initializes no no radio
sets the data
this method initializes one break radio
this method initializes two radio
sets the range of dates in the range
reset the
called by the user when the exception is thrown
this method is called when the user selects the view
this method is called when the component is shown
this method is called when the user selects the view
returns the name of the
returns the residual names
returns the date range name
this method is called when the of the
this method is used to convert the to a string
sets the name of the
this method is used to set the code code
this method is used to convert the to a
this method is used to set the file to be used
this method is used to write the contents of the
returns the
set the global settings for the global settings
sets the global settings for the given view
this method is called when the model combo box is selected
this method initializes cfg
this method initializes cfg
returns the object
returns the data matrix
configure the application action handler
this method is called when the user clicks the right hand side
returns the ex
cancels the action events
returns the
returns the
returns the minus the current selection
sets the enabled menus bound to the given boolean
sets the enabled menus bound to the given shells
returns the default file for the
returns the state of the project
this method initializes this
this method initializes this
y y
this method initializes ar
this method initializes ma selector
this method initializes j panel1
this method initializes this
sets the
this method initializes menu bar
this method initializes j menu
this method initializes card display panel
this method initializes est menu
sets the
this method initializes j scroll pane
sets the
this method initializes this
this method initializes this
this method initializes j tabbed pane
this method initializes kern panel
this method initializes spectrum panel
this method initializes j plot res res panel
this method initializes tests panel
returns true if white image families is selected
this method initializes j selector bar
this method initializes ci selector
this method initializes graph check box
returns the number of in the
this method initializes start date selector
this method initializes j tabbed pane
this method initializes scroll pane
this method initializes table
method generated to support the promotion of the white white selected attribute
rolls back the action
this method is called when the user presses the button
this method is called when the user clicks the button
returns the name of the
sets the est box
clears the list of
returns the name of the range of the
returns the name
this method initializes init
executes the action events
sets the name of the
sets the
sets the
returns the model type
returns the selected check box
sets the state of the
returns the state of the project
clears the model
returns a string representation of this object
set the model type for the
returns the number of in the pool
returns the of the coverage
show the
returns the number of seed generators
resets the to their default values
returns the number of in the pool
sets the model type
returns the number of in the std
gets the value of the coefficient coefficient property
returns the name
returns the value of the code seed code flag
method generated to support the promotion of the check selected attribute
returns true if the current is a
sets the range of the nodes
returns the name of the struct matrix
sets the levels to the given
returns the variable names
gets the levels
returns the selected
called whenever the part throws an exception
returns the model
gets the value of the property
cancel the cancel button
sets the coefficient name
returns the number of selected columns
returns the selected
returns the variable names
sets the name of the
returns the threshold for this field
sets the model type
sets the name of the struct matrix
sets the variable names
this method is called when the user clicks the button
this method initializes this
this method initializes j panel1
this method initializes j panel2
this method initializes j button
this method initializes j table
this method initializes default button
checks if the legend is visible
if true then the component is shown
returns the
show the plot button action
auto
returns the maximum number of text in the text field
cancel the plot
sets the legend to the default legend
returns the maximum number of retries for the selected
sets the selected data
sets the model type
sets the name of the
sets the variable names
returns the
returns the rel param change
returns true if the is
returns the
returns the radio method
returns true if the plot is auto plotted
returns whether the is selected
returns true if the plot is a plot
this method initializes the plot controls
returns the port man
returns true if this is a
sets the action events to be shown on the screen
returns the plot control model
set the default values for the
sets the model type
converts a double to a integer value
returns the value of the given point
sets the visibility of the control
this method initializes j
this method initializes step selector
this method initializes minor ticks selector
adds a new route to the
checks if a message has a session session
reports a property change to the delegate
returns the value of the property value
returns true if the object is a property set
this method is called when the property value is about to be
sets the value of the property identified by the given id
this returns a adapter for the adapter
returns the parent of this node
returns true if this node is a leaf
visits the item
add a type to the list
sets the id
sets the map
sets an attribute with the given name and value
writes the current request to the specified output directory
gets the message type
process the response to the given document
sets the message type
reads the translate file
creates a new context from the request context
returns the request document associated with this request
translate the xml document to a document
sets the request document to be used for the request
reads the content of the file
this method is used to get the message for the given input
sets the response
sets the mode
returns the url for the given type
set the url of the url
sets the test attribute
clones the message object and the message handler
expand the template
the template
returns the name of the component that is the name of the
returns the data in the
returns the application properties
called when the user selects the select
adds a filetype dot extension to filter against
returns the description of this filter
returns the number of elements in this list
returns true if the queue is empty
clears the cache
returns the number of objects in the database
returns the load factor for the
sets the value of the code code property
notifies all registered tree listeners that a tree node has changed
adds a listener for tree model events
returns the number of children of parent
returns the root of the tree
returns true if node is a leaf
removes a listener previously added with
returns the next model in the model
prints the current statistics
sets the value of the value property
sets the next element in the chain
returns the next element in the queue
this method is used to determine the directory of the directory
returns the list of elements in the list
opens the system open editor to open the system
initializes the default preferences
returns true if the given is deleted
sets the value of the bv with the given value
returns the ip address
gets the value of the sw con property
returns the observation
sets the lista nome
the software to the given
grabs the request from the servlet request
closes the prepared statement
rolls back the transaction
sets the ip address
returns the construct
creates a topic
resolve the local reference with the given identifier
creates a topic
called when the document starts
writes the end of the document
write a local element
start a new element
write an element to the output stream
writes a newline to the output
write the text to the output stream
writes escaped characters to the xml stream
writes escaped characters to the string buffer
this method is used to create the given
returns a topic map for the topic identifier
this method is called when the user is removed from the remote
returns the construct by its id
returns the topic with the subject identifier
returns the topic with the subject locator
merge the source code into a target topic
this method returns the construct by identifier
returns the index of the given construct
writes an association to the given association
writes the given occurrence of the given code document code to the
write the given object to the output stream
writes the name of the element to the specified
write the type to the output stream
writes the scope to the scoped data
writes the locator to the given locator
write the item identifiers to the given
write the locator set to locators
this method will be called when a topic reference is added to
add attributes for a given attributes
adds a to the
fires an event to the listeners
disposes the resources
returns an iterator over the elements in this collection
returns the object associated with the given key
returns the number of elements in this list
returns true if the given object is a valid object
returns true if the list contains the specified object
removes the first occurrence in this list of the specified element
removes the first occurrence in this list of the specified element
rehashes the map to the new capacity
clears the internal array
dump the system to the system
returns true if the topic is associated with the given topic
rehashes the map to the new capacity
test method for
returns the additional properties for this properties object
test of set feature values method of class feature
test the feature
test association of association
method test name basic topic name
test the
tests the association typed
check if topic is instance of self
test method for
creates a new document
attaches a child element to the given parent
attaches an element to the parent element
at startup create and show the main frame of the application
returns the expression that contains this expression
returns true if the axis is empty
returns true if the x value is before
returns true if the object is after the specified point
checks if the specified x coordinate is at the specified position
converts this byte sequence to a byte sequence
starts the
returns a char sequence representing the current character sequence
starts the reader
the object
code set code sets the current position
returns the message to be sent to the message
code set code sets the current position and offset to the given
read a char array from the buffer
prints out the given format using the given format and prints it
print out the format of the format
outputs the given format to the output format
consume the specified character
push the given code output stream code to the specified output stream
returns the top object of the queue
sets the handler to the given object
declare a prefix to be used for the given uri
add a new namespace to the xml file
add a new include
add a type to the
add an element to the end of the list
report the occurrence of the given number of times the
parses a string into a object
write the end of the xml element
called when the task is started
called when the task is finished
starts a new task
saves the data to the disk
updates the animation based on the current screen time
returns the interval of the period
returns the file chooser
sets the selected file
returns whether preview is shown
sets whether preview should be shown
sets the dialog title
saves the current state of the current state
returns whether preview is shown
sets whether preview is show preview
adds an entry to the list
inserts the given element at the specified position in this list
returns the element at the specified position in this list
sets the element at the specified position
removes the element at the specified position in this list
resizes the array to the data buffer
returns the type of this byte array
returns true if the current value is a battery
returns the string representation of the
get the sensor type
returns the version of the server
returns the value of the digital value of the specified channel
appends the given text to the current line
get analog value
this method is called when the server is being
returns the distance between the specified channel
returns the pressed level of the specified channel
reads a value from the channel
calculate the power supply point
calculate the derivative of the function interpreting it as a double
this function is used to calculate the for the given function
this function is not supported
this function analyses a double and returns the result
sets the description of the
set the name of the
returns the activation function of the given value
this function is used to calculate the for the given function
this function is used to calculate the activation function
this function is used to calculate the for the given function
this function is not supported
sets the derivative function
set the derivative function
this function is used to calculate the activation function
computes the derivative function of the curve
returns the winner of the input
turns on the current forward
turns off the
returns the node parent of the node
returns whether or not the display is displayed
returns the user id of the inserted user
returns the class name of the
save the member to the given member in the database
oracle form method
returns true if the given database is open
set the logged in user
adds a row to the panel
adds a row to the table
adds a row to the table
adds a new row to the table
adds a new row to the table
adds a new label to this table
show the popup window
adds a row to the layout
close the window
adds a sub menu to the list
creates a tool bar
updates the label with the given string
returns the active instance
change the skin to the given skin
checks if the message is a valid state
commit the current transaction
add a field to the form
adds a field field to the given field
adds a field field to the given field
called when the dash is being painted
returns the message text
refresh the dash state
saves the preferences to the preferences
returns the of the given forum
closes the window
centers the dialog
sets the visibility of the popup window
registers a permissions object to the list of available permissions
creates the permissions for the permission
add a forum to the group
removes a forum instance from the forum
set the lookup of the map
remove the given lookup object from the lookup table
add admin admin admin to the list of tasks
returns the lookup of the given lookup type
adds a new task to the table
removes the admin use case from the list of tasks
removes a task from the set of forum tasks
removes the admin task from the list of tasks
returns the content of the given task in the current forum
unregisters the contributions for the given contributions
returns the admin component for the given task name
pops a task from the registry
sets the event admin
creates a new task
returns the menu factory for the given menu
adds a context menu to the context menu
returns the position of the menu item
remove the context menu
register a permissions object
set the event admin for this menu item
register a target
unregister a target
starts the workflow
goes to the next step in the workflow
show a notification message
show the notification
creates a fully qualified name for the given class
send a task to the event dispatcher
sends an event to the server
create a key object from the given state
returns the notification text
creates a new order object
returns the notification text
this method is called when the server is disconnected
returns the notification text for the notification text
reset the state of the dialog
creates a new instance of a given
set the
saves the data in the database
get the attribute value
executes the import
executes the import
returns the creation time of the current time
returns the last time the time was last accessed
returns the context class name
returns the task manager
get int header method comment
returns the context for the given http servlet request
returns the name of the system
returns true if the header contains the header
encode the redirect url
returns the protocol name
sets the version of this application
returns the remote address
set the serialized form of the given page
returns the remote host name
method set status
returns the default task for the current default task
returns the error task
initialize the table
sets the parameters of this object to the given parameters
converts an object into an instance of
returns the instance of the system
returns the parameters of the parameters
returns the parameters of the object
returns the session associated with this request
is user in role
make a task to forward to the given class
creates a new count
returns the count of the given object
empty context menu
returns a column count for the column list
returns a string that will be used to select all the
request the lookup of the given request
creates a string select for the given key
returns the parameter
returns the name of the object class
returns the string representation of the object def
adds a domain object to the list
adds a new domain object to the list
returns the extern def string
returns the value of the attribute def name
oracle form method
creates a search result
returns true if the given object is an sortable
returns the hash code value for this code code
returns the first item in the list
this method is used to create the sortable item
sets the value of the state property
adds a to the given
checks if the selection is a source source
checks if the given property is selected
creates the completion component
returns the state of the given state
checks if the editor input text is an input text field
creates a new member
create a member to a specific member
creates the bookmark
creates a subscription
renders the given view to the given name
renders the given view to the given name
create a new member
create a new
saves the to the given actor
creates a new instance of the given object in the database
send a warning message to the user
changes the value of the selection status
edits the
create a new
changes the value of the property
creates a new edit component
process the state change notification
the value change listener to be notified of changes to the
accept the authorization request
delete all downloads in the download list
returns the current downloads
processes the selection of the given selection
saves the to the given state
create a member of the member of the member
this method is responsible for creating the
get the group name
returns the subject text message
this method is called when the user wants to start the
returns the text of the message
creates the mail address
create a member of the given member in the database
write the given text to the echo
runs the
shuts down the launcher
updates the state of the assignee
registers a component to the component
this method is called when the object is instantiated
prepare the connection to use the database connection
creates a new
description of the method
saves the to the given date
removes all the
returns the html representation of the given html code
parses a plain text document
create a group
creates a group admin object based on the admin id
creates a new question
get the author of the
this method calls the
creates a question
saves the data to the given configuration
save the application to the given bean
returns the position of the buffer
deletes the given
whats the best role of the best
returns the actor
saves the to the given password
get the member
sets the to the given string
updates the member cache
check structure for a structure
get the member cache home
create a subscription
creates a new completion
send a message to the user
creates a new completion deployer
deletes the admin
saves the user to the given group
reads the next byte from the input stream
create a question producer
creates a new completion producer
resets the stream to its initial state
register the given data source factory
check the state of this state
creates a new text producer
unregisters the given
returns the data source factory for the given properties
set the context
oracle form method
returns the content of the url
returns the connection pool data source
sets the active configuration
oracle form method
returns the document as xml document
set the factory used to create the data source
returns the file input stream for the current file
returns the last page number
prepares the transformation to be used by the
returns the source strategy for this class
returns the query result
returns the value of the parameter
writes the xml document to the xml document
forwards the next page to the page
set the stylesheet parameter to be used as a stylesheet
returns the file item associated with the given name
returns the serialized xml domain
goes to the previous page
flush the stream
returns the serialized domain object
create the begin tag
returns the html end of the html element
sets the page to be used for the page
adds a view to the list
returns the adapter type of the adapter
renders the view
sets the number of rows in the table
sets the page size
returns the file name
returns the home object
returns the adapter type for the given
sets the page to the given page
returns true if the parameter contains the parameter name
set the column to sort
returns the sql select statement
set the specified column to the current page
adds a script link to the list
returns a string representation of the object
sets the current page number
adds a css link to the list
sets the parameters of this object to the given value
returns a string representation of the object
sets the first page to the first page
sets the href attribute of the jmeter class object
sets the file items
compares this resource to the specified resource
sets the last page number
returns the string representation of this object
set the parameter to the given string
set the media media
creates a test entry
creates a new task
creates a new instance of class task
returns a list of all the tasks
returns the content of the url
returns true if the given parameter name exists in the list
returns the value of the parameter
delete all instances from the database
returns a string representation of this object
create begin of the current page
adds a new parameters to the parameters
sets the url
sets the delay in milliseconds
returns the html string for the html element
initialize the root object
sets the servlet path
initializes the jetty server
this method is used to convert a
sets the server info
returns the base path
sets the html string for the
returns the home path
sets the remote address
write the response to the response
sets the transformer
returns the language of the current language
oracle form method
returns the locale of the current locale
returns the transformer
compares this view to another view
sets the remote host
begin user doc
returns the html end tag
returns the css link list
initialize the servlet
returns a list of script links
returns the html head
sets the url of the request
sets the css style for the css style
creates a new exception data
returns the title of the titled border
returns true if the cause of the exception is thrown
handles the given exception
returns the message data
returns the instance of the system
returns the css links that will be used for the docking
this method is called when the object is a handle to the
returns the script link list
get the object associated with the given name
initializes the task manager
returns the error message
returns the localized message for this throwable
returns the data
returns the localized message for the current file
returns the localized message for the given locale
returns the localized message for the given locale
returns the message
loads the context object
returns the message
returns a message with the given locale
returns the status message
get the parameter value of the given parameter
puts an object in the form
determines whether messages are included in the view
sets the locale
returns a new object
accepts a domain object
this method is used to convert a
compares the specified object with this item
emits a property value
returns the hash code value for this object
end a domain object
returns the object
this method is called when the iterator is done
sets the link to the given css link
this method is called when the end tag is encountered
end of the property set
this method is called after the
this method is called when a domain object is constructed
returns the cache object
this method is called by the framework
sets the css link for the given css
set the schema name
this method is called when a property is about to be used
set the property set to be used as a property set
this method is called after the start of a array of elements
checks if the request type is a valid request
returns the value of the field
sets the script link
clears the cache
this method is called when the is about to be added
sets the
this is called by the http servlet request handler
create a new instance of this class
sets the script link list
returns the current value of the current value
creates a select string for the given sql select
set the error message
returns the session id
add an object to the list
returns an iterator over all objects in this domain object
compares this object with the specified object for equality
creates a prepared statement to select a string
accepts a domain object visitor
adds a new set of home objects to the home
set the on load method comment
creates a new
adds a sorted domain object to the list
sets the select string to be used for the
creates a string for the given key
sets the count string
set the message status
selects the given order
select a query result
get the number of records in the database
returns the element at the specified position in this list
clears the status message
sets the value of the given key
creates a new
returns the element at the specified position in the list
checks that the query result is a query
checks if the given is a type
returns the adapter def in this adapter
clears the error message
returns the adapter for the given object def
compares this page to the given page
returns the column name for the given property name
compares this object with the specified object for equality
returns the name of the column in the property name
returns the hash code of this object
returns the for the given
sets the list of inserts
whats the number of records in the database
renders the given domain to the given domain
returns the object def
removes the specified element from this list
returns the modifiable collection of objects
reads the first element of the list
returns the number of elements in this list
returns the hidden property
get the number of the given key
returns true if there are more elements in this enumeration
returns the object def
sets the
returns the next element in the enumeration
returns the xml content
get property def def
returns the number of objects in the group
compares this semantic object with the specified object for equality
get the property value
returns the key
ends a property set
returns the hash code of this object
executes the update sql insert update delete on all prepared statements
sets the property with the specified name to the specified value
returns the property def for the given property name
sets the updates
this method is called after the
sets the
adds a new to the given domain
creates a query result object of the given object
returns the property def for the given property name
initialize the object
creates a new instance of the named property
notify all listeners that the value has been added
sets the characters in the string array to replace
sets the
sets the flag
returns the result set
emits a property value
modify column name
set the property set to be used as a property set
returns the property def for the given column name
sets the value of the column
sets the value of the column
compares this object with the specified object for equality
sets the locale
returns the hash code of this object
returns the structured text serializer
returns the next domain object in the domain
creates a new domain object
compares the specified object with this query
returns a connection to the database
returns a string that contains all the data in the table
executes the query
create a string for the given key
oracle form method
returns the visitor associated with the given key
creates a string representation of the current connection
create a string for the given key
creates a query result and returns the result
create a string that represents the given key
accepts a domain object
oracle hook method to allow to update the sql statement
called after the load of the load is loaded
this method creates a string in order to display the
compares this object with the specified object for equality
returns the hash code value for this object
load the cache from the given collection
create a string for the given key
returns true if there are more results available
returns the key of this object
creates a new count all the string names of the database
sets the sql string to be used to identify the
releases the object
returns a collection of all the domains of the domain object
returns the key
this method is used to create the count
returns the name of the object
returns the of the given number of
executes the sql statement
select a query result
returns a string listing the column names
executes the sql insert update or delete statement
prepares the statement
returns the hash code value for this map
checks if the given property name is a key property
returns a result of the query
creates a new instance of the given object
this method initializes this
returns the sql to the given number of
returns the joined object def
returns the
returns the
initialize property set
returns the object def
select a single item in the database
returns the domain order based on the domain object
returns true if the last property change
returns the hidden property
sets the position of the camera
returns true if the is allowed to be used
returns the temporary domain object for this connection
select a single item in the database
returns the list
initialize property change
select a query result
creates a new instance of the beans domain object
returns true if the component is loading
release the resources
returns the render domain of the given domain object
select a query result
executes the code database code method
called when the domain object is about to be removed
selects the given order
called after the iterator has been terminated
this method is called when the property is being removed
find the type of the given type
override this method to handle the creation of a property set
this method is called when the array list of elements in the
oracle form method
this method initializes the domain object
called by the framework to start the iterator
this method is called when the property is about to start
returns the of the given domain object
subclasses should override this method to provide specialized properties
this method is called when the array list model is sorted
creates a new order by its order
updates the database
creates a limit of the limit in the limit part
returns a result select
resets the to its initial state
updates the database
returns the value of the code query code
sets the connection setting
returns a code structured text serializer code
deletes the current record
create a new instance of this class
returns the key
prepare the statement
returns the of the given domain object
create delete string for a given user
creates a string containing all the data in the database
sets whether or not the cache is used
deletes the current record
returns the domain order of the given domain object
close the connection
close the connection
commit the transaction
creates a string representation of the given object
oracle form method
creates a new count string for the given key
rolls back the transaction
trace a trace message
accepts a domain object visitor
converts a string to a sql type
gets the value of the number of ci property
returns the tablename
prepares the connection to be used for the connection
returns the maximum value of the given column
returns the adapter
returns the of the given domain object
creates a prepared statement to be used in the database
returns the maximum value of the given column
returns the adapter for the given def object
returns the object for the given object def
returns the column modifier for the column
returns a column count column list of the table names
check if the server is authorized to authenticate with the given url
deletes the current record
creates a select string for a given user
this method is used to delete the data record
retrieves the code long code object
creates a prepared statement for the given key
creates a prepared statement to create a prepared statement
inserts the given sql data into the database
set the base
updates the database
closes the underlying context
updates the underlying database
sets the request control to the given values
build the db select all string
set the limit for the limit of the current set of items
set the order of the specified array
create a string for the given key
returns the filter string
returns the modifier of this object
returns the expression of the grouping expression
sets the name of the filter
returns the column definition key
create a string for the given key
returns true if the given object is equal to this one
returns the hash code of this object
returns the name of the class to use for the enterprise beans
create a new property set
checks if the given property name is a key property
creates a select string for the given sql select
adds a hidden element to this group
returns the domain object def for this object
creates a new count of the given object
returns the name of the placeholder
returns the hidden property
returns the key for columns
creates a select string for the given user
checks if the specified object is equal to this one
returns true if the object is a joined object
get the property type
returns the name of the column
this method creates a string in order to select the
returns the join def join def
returns the hash code value for this
creates a select string for the given user
return the table name for this table
returns the value class type
returns the value type
create a string for the given key
add a grouping definition to this group
get the table name for the given table
returns the name of the element
returns the hash code value for this property
returns the key of the column definition for the key
this method creates a count of the given object
returns the hash code of this object
returns the query string
sets the join def
returns the name of the property definition for the given column name
compares the specified object with this code marshal def code
set the table name
create a string for the given key
returns the hash code for this cimclass
adds a nested def nested definition to this nested def
adds a key name to the list of key values
returns a string representation of this object
compares the specified object with this key for equality
create a string representation of the given object
adds a placeholder element to the list
adds a property definition to this definition
placeholder for the placeholder
returns the hash code value for this
returns whether the given placeholder is in the placeholder
compares this object to the specified object
sets the table name
returns the mapping definition for the specified property name
compares the specified object with this code join state code
adds a column def to the table
creates a string representation of the given
returns the hash code of this object
sets the query
fills the placeholder with the given name and aliases
returns the name of the expression
sets the parent join def
end the key definition
returns the parent join def
returns the primary key definition of this definition
sets the child join def
returns the child join def
internal method to set the key item def name
creates a string representation of the given object
get a property def for a given name
compares this def to another
returns the hash code of this object
ends the mapping def
returns the hash code of this object
adds a placeholder element to the list
this method is called when the object def is to be removed
returns whether the given placeholder is a placeholder or placeholder
sets the primary key definition for the given key
this method is called when the property definition is added
add a mapping to the mapping def
creates a select all of the columns in the table
returns the join def def
create a prepared statement
returns the joined object def
returns the key def for this key
returns the mapping def def
start the key generator
private helper method for private private key
creates a prepared statement
creates a select string for a given user
returns the def def def
returns the grouping definition
helper method to create a new mapping def
returns the def def def
returns the placeholder def definition
helper method to create an object def
start the property definition
returns the object def
creates a new joined object def
helper method to create a new relationship def
visits a domain object
returns the buffer
visits a domain object
visits a property in the property
returns the string representation of the current
visits a property set in the system
sorts the array of the elements in the array
ends the column definition
create a string select from the given model
returns the temporary domain for this
ends the current selection
returns the code list code of code code s in the
ends the join condition
ends a nested element
gets the value of the property
ends the end of the column
called when the document is finished
returns the label for the given label
creates a new instance of the domain object
sets the to the given language
this method is called after the object is finally closed
checks if the given code selected code is a selected
compares this object with the specified code object code
called when the parser starts a document
checks if the given collection is selected
compares this object to the specified code abstract code
create a general domain object
ends the join def
returns the label for the given language
returns the hash code value for this
returns true if the tokenization is equal to the given one
returns a string representation of the
this method is used to handle the end of an object
converts the selected array into a string representation
returns the selected text in the list
returns the raw unescaped string representation of the raw data
checks if the given object is a object
returns a string representation of the object
accepts a
adds a new paragraph to the current paragraph
adds a new to the current paragraph
deletes a key value pair from the database
returns the paragraph type
returns true if the list has a sub elements
returns a string representation of this object
accepts a
visits a structured text bullet
returns the paragraph type
removes the given key from the database
visits a structured text
returns true if the has a sub elements
returns the paragraph type
visits the given structured text plain text
accepts a document
adds a new bullet to the list
adds a new paragraph to the current paragraph
returns the paragraph type
returns true if the list has a sub elements
accepts a document
start the attributes
create a structured text
returns the hash code value for this object
compares the specified object with this object for equality
returns a string representation of this object
oracle form method
join a join condition
returns the bit field of this disk
add a row to the tuple
adds a row to the table
returns the hash code for this object
compares two objects for equality
returns a string representation of this object
returns the tuple object
returns the tuple bit row
sets the row set for the row in the table
creates a new instance of class def
checks if the element at the specified position is at the given
invert the current row in this array
returns the tuple
returns the index of the row in the table
returns the object at the given position
compares two tuples for equality
returns the hash code value for this object
returns the bit row for the given position
returns a string representation of this object
returns the index of the column in the table
clones the tuple
description of the method
adds a new row to the table
helper method to create nested element
converts a string to a string
returns the hash code value for this code code
compares this bit to another
returns a string representation of this code code
converts a string to a string
clones the row
start the result of the statement
converts a string to a string buffer
removes a row from this row
returns the differences between the given columns and the
returns the checked state of the given
returns the hash code for this object
helper method to create a new element
converts a matrix to a matrix
compares this bit field with another
create a prepared statement for a given user
returns the checked row position of the given row in the table
creates a new instance of the default name
add a new dynamic dynamic dynamic dynamic dynamic call to the list
returns the list
description of the method
adds a sorted string to the list
sets the value of the property
adds an element to the collection
sets the value of the property
returns true if the current string contains more lines
returns true if the current position is a delimiter
returns the hash code value for this
returns the element at the specified index
compares this object with the specified object for equality
create delete string method comment
creates a string representation of the given table
returns code true code if the specified object is a list
returns the document that contains the document
returns the hash code value for this object
creates a string representation of the given
creates a default value
adds an entry to the list of entries
adds an entry to the list
returns the sql part of the sql part
add a new name to this
join the join string
outputs the content of this to a stream
get the value of the property name
checks if the given name is a value
renders the given writer
sets the value of the specified field
sets the value of the property with the specified value
this method is called when the error message is encountered
adds a new sortable item to the list
returns the value of the given property name
returns a string containing the default select string
create a string representation of a domain object
opens a message in the message
returns the number of elements in this collection
clears the messages
clears the cache
removes the specified element from this list
clears the error messages
sets the xml element for the given tag
returns the number of elements in this list
returns the hash code of this object
returns the version of the version
returns a prepared update
create a prepared statement for the given table
method to enter a workflow
this method is called when a workflow is in the form
creates a string representation of the given table
returns the actual state name
returns the state of the workflow
this method is called to invoke the action method of the action
returns a string that represents the given object
sets the initial state name
returns the initial state name
returns the count of the keys in the given domain
returns the state with the given name
add a html part to the body part
adds a new state to the state machine
sets the mail host
adds a transition to the state
delete the given key
adds a part to the view
returns the multipart content
sets the bcc addresses
returns the maximum value of the given column
sets the cc addresses
sets the from address
sets the subject
sets the email address
returns the maximum value of the given column
returns the table name
removes the given key from the database
returns a new object
check the structure of the given schema
returns the column name
checks if the role has already checked
returns the cache cache for this cache
saves the role of the member
select all members in the given group
notifies the listeners that a new user has changed
returns the message to be used for the given member
executes the specified query
creates a new password
returns true if the user is logged in
returns true if the is
returns the body of the message
deletes the member
returns the authors for the given
returns the rating events for the given rating
returns the of the given
saves the contribution of the given contribution to the given contribution
sets the author of the customer
returns the text published for the given
sets the reviewer for the given reviewer
creates a new entry in the database
returns the current form
returns the sort string
returns the authors completion type
returns the form of the oracle oracle oracle oracle oracle form
returns the actor
returns the unique id of the current transaction
get a member by its name
get a member by its unique id
returns the id of the customer
returns the
accepts a visitor
returns true if the given object is a same member
checks if the given member is equal to the same member
get the id of the member
get the member by its name
returns the email address of the email
returns the name of the member
checks if the gender of this gender is female
returns the authors of the given
returns the name of the member
sets the current transaction to be persisted
oracle form method
returns the name of the class to be used
add the key to the
returns the authors completion
returns a result of the query
gets the questions attribute of the transaction bean object
method to create a new instance of a given
returns a result select
returns the authors
check if the customer id is already assigned to the given subscription
delete the given persistent object from the database
returns a result of the given code query code
updates the given
returns a code result set code instance that is
returns the query result
oracle form method
returns the name of the member to be used to create the
returns the authors of the given
returns the number of group of instances of the given number of
returns a result select from the given group
returns a result select tt transaction tt instance that is
creates a new instance of the given class
returns the ratings of the ratings of the given
returns true if the given permission is associated to this
returns the authors questions
returns a code query result code that is published
returns the result of the select of the given order
creates a new
returns the permission for the given
create a permission
returns the query result
gets a question with the given id
oracle form method
oracle form method
method for assigning a question
returns the root questions
returns the admin view for the given
updates the selection filter
checks whether the given code code is the root
checks whether the given database contains the questions
checks if the rating is a rating of a given rating
checks whether the given customer is a participant
check that a rating is completed
saves the personal language to the given users
returns the filtered result of the given
checks if the given is a participant
retrieves the associated question with the
returns the admin view for the given
checks that the given code name code is a valid
returns the participants of the group with the given id
create an author key
returns the admin view for the given
this method is called after load is loaded
returns the id of the oracle oracle oracle oracle oracle oracle oracle
remove a participant from the database
returns the maximum version of the given
returns the result of a group
this method is called when the user changes the status of the
sets the oracle
indicates whether the current instance of the oracle oracle is completed
accepts the given visitor
returns the authors of this oracle form
returns the name of the relational attribute
returns a result set that holds the given
returns true if the current user is the root of the form
add a new item to the
creates a new admin form
returns the code result code objects of this
returns true if the bookmark id is already marked as a bookmark
returns the completion object for a given
delete the customer
oracle form method
sets the author of the customer
returns the entry at the given position
sets the reviewer for the given reviewer
oracle form method
returns the child of the given object
deletes the given positions from the database
decorates the given code completion code
returns the childs first state of the given node
creates the
returns the published childs oi model
returns a result select tt transaction tt instance that is
creates a link
oracle form method
fills the history with the given history
insert a new entry into the history
creates a new history object
returns the notification text for the
returns the authors of the given
returns the of the given
returns true if the customer id is admin
checks whether the given group is admin for a given group
set the message to be displayed in the
returns a result select of the given group
this method is called when the user selects a start
sets the answered from the given list of related tickets
returns a query result
description of the method
return the number of instances in the database
returns the parent of this question
get the responsible
returns the author of the given
sets the answered from requested list of all questions
called when the user enters the
sets the version of the database
returns the version of the version
sets the current state of the given activity
returns the result of a group
checks if the given is a completion
accepts a visitor
this method is called when the user fulfills the bot
creates a new
returns the parent id of the given
creates a new
called when the user leaves the leave
sets the open state of the assistant
oracle form method
check if a role already exists in the role
grants a question to the assistant
checks if the given password is valid
sets the open to the given
oracle form method
returns the name of the
the of the given
returns the child of the given child
associates a role with the given roles
returns the number of contributions
changes the group state of the given group
deletes the roles of the role
returns the siblings of the given
creates a group admin role
creates a new participant role
creates a history member of the history
counts the number of childs of the given join objects
deletes the group admin role
returns the search result for the given
deletes a participant role
delete a role
creates a new admin instance
get a group by its name
checks if the given role has a role participant
creates a new new instance of a new user
check if the given database id is already in the database
returns the maximum version of this oracle oracle
returns true if the given admin group has a admin
oracle review state
returns true if the given is visible
creates a select recursive
accepts the given visitor
saves the given to the database
checks if the value is an integer
a for a
returns the id of the actor
sets the id of the actor
sets the id of the user who owns this user
oracle form method
returns the user id of the user
returns the authorization object for this authorization
checks if the given user is already registered
returns true if the group is admin
refresh the authorization properties
checks if the guest is a guest
adds a question to the index
adds a new completion to the current index
adds a member to the index
deletes the member in the index
update the member in the database
removes the given content from the database
called when the transition is admin
called when the transition is admin
interface for presentations
saves the to a persistent store
helper method that checks if the given name is already in the
oracle form method
called when the transition is admin
called when the transition is admin
called when the transition is admin
called when the transition is admin
returns true if the given database has open tasks
registers a user task to be added to the registry
returns true if the state is a private state
returns true if the is
checks if the group is a
returns true if the state is published
returns the number of instances of the current
adds a new value to the map
oracle form method
oracle review state
sets the states
sets the action
indicates whether the database is private
delete the customer
returns the name of the transition to use
inject the given into the xml stream
inject the given content into a string
inject the xml representation of this builder
sets the root node name
deletes the current object
returns the transition to oracle oracle
check mandatory information of the given model
oracle form method
returns the notification
sets the notification flag
returns the value of the node
returns the mail body
sets the mail body
sets the value of the specified element
sets the subject of the mail subject
gets the mail subject
convert to xml string
sets the group name
returns the number of logged in user
sets the
returns true if the stack is empty
returns the top element of this stack
pops the top and off the stack
pushes a new task onto the stack
oracle form method
clears the stack
returns the minimum group size
returns the first or second or second or second or second or
returns the checked state of the given check box
returns the checked state of the given
get the guest user guest
private method that checks if the user can be added to the
check if the index is an index
returns the content index of the file
this method is called after load is loaded
returns the next domain object in the iteration
search for a query
reloads the content of the reader
get a member index writer for the given
called after the current page has been changed
reloads the index reader
adds a new search string to the list
called before the file is committed
creates the test indexes
closes the index reader
returns true if the value of the field is created
whats the best role of the customer
returns the unique id of the document
returns true if the current state is active
checks if the file exists
returns true if the value is open
returns true if the given user is a participant
check activation state
register a to the registry
activate the preferences
unregister a from the registry
adds a new to the list
register a to the
removes the given from the list
returns true if the given user has the given permission
add a new to the
unregisters a from the
remove an existing from the database
get the current active member
returns the active
check if the given role is already in the list
checks whether the given permissions are allowed
returns a xml representation of this object
compares this object to the specified object
returns the value of the given key
returns the hash code for this permission
returns the value of the specified property in the preferences
returns the body html
sets the preferences to the given preferences
sets the body of the message
set the database schema
returns the mail
returns the name of the application
returns the locale for the given code locale code
returns the date pattern
returns true if the database supports the
returns true if the user is embedded with the current user
get the database connection
set the database connection to the database
returns the
creates the mail address
returns the subject text
adds a new mail to the email address
starts the service
starts the service
adds a to the given
returns the state of the given state
saves the question to the given question
this method grants the user to the edit
publish the state of the transition
changes the value of the property
delete the transition
sends a change notification to the user
publish a transition to the current state
deletes the given transition from the current state
changes the value of the
process the answered event
rejects the
the
rejects the
returns the localized message for the given locale
oracle form method
converts a throwable into an
converts the throwable to a code throwable code
converts a throwable to a code throwable code
returns the view
handle the exception
returns the text published for the given
creates a new entry to the given
returns a code result code object representing the
returns the published published transaction
returns a new
get the actor from the given context
returns the authors of the given
checks if the given member is the same member as the same
get a member by its id
returns the
returns the authors of the given
gets the questions attribute of the transaction bean object
returns the authors completion
returns the authors
returns the authors of the given
returns a code result set code delegates to the
returns the authors questions page
gets the questions attribute of the object
check if the subscription id is already assigned
delete the given attribute
updates the given
creates a new instance of the given object
returns the result of published
returns the permission for the given
creates a new checked attribute
returns a question with the given id
checks whether the given code code is the root
checks whether the user has a given group
returns the filtered result of the role
returns the maximum version of the given
this method is called when the user selects a review
checks if the given code name code is a valid
returns true if the user is the root of the form
called when the user chooses to enter the
delete the customer
returns the child of the given
called when the user leaves the leave
returns the childs first child
decorates the given completion
selects a published item with the given
returns the published childs oi model
decorates the given code completion form code
returns the notification text for the notification
resets the content of the document to the given string
sets the message to be displayed in the
returns the authors of the given
returns a query result for the given
returns the parent of the given
returns the parent of the given question
returns the child of the given
sets the answered from the given list of related responses
returns the siblings of the given child
sets the answered from requested list of all the phases
returns the number of childs of the given identifier
oracle form method
sets the open statement to be used in the given
sets the open state of the given
moves the ancestor to the given code code
this method is called when the transition is about to be removed
this method is called when the transition is about to be removed
this method is called when the user selects a review
return an object that matches the given order
called when the transition is admin
called when the transition is admin
called when the transition is admin
called when the transition is admin
returns the query result for the given
creates a new
returns true if the state is
check if the user is allowed to authenticate the user
returns a code result code in the database
returns the user id of the user
helper method that checks if the given name is already in the
render the given locale to a string buffer
checks if the given actor conditions down
returns the html for the current document
saves the given to the database
disposes all the resources associated with this
adds a to the
renders the given locale to the given locale
convert the given xhtml string to an url
renders the given locale to the given actor group
renders the
renders the begin of a message
renders the end of the given actor
removes the given from this
renders the given actor group
renders the given actor actor actor actor actor actor actor actor actor
returns true if the user is publicly member
disposes the manager
returns a message for the given message
returns the error message for the given message
returns the selected options for the given locale
checks if the state is reachable from the state of the
oracle form method
oracle form method
returns a string representation of this object
this method is used to set the fields to the given
returns the xml representation of the xml
load a bit map from a field
returns the value of the given permission
gets the value of the property
adds a permission to the project
returns the id of the specified
returns true if the current page is sorted
returns true if the stack is empty
returns the top view element of this element
converts the given resource bundle to a path
pops the top view from the stack
pushes the given html onto the view
clears the stack
returns the object
sets the blocked attribute of the object
search for a query
get the content index writer for the index
get the index writer for the index writer
reloads the content of the reader
this method is called to refresh the index reader
adds a task to the list of tasks
registers a permissions object to the list of available permissions
gets the app menu
adds a to the admin list
render the given locale to a string buffer
removes the given from the list of
adds a to the list of installed applications
renders the default locale
adds a menu manager to the list of applications
returns the permission of the task
checks if the file exists
remove a menu manager
disposes the task
filters the filter characters from the given string
returns the page number of the given page
creates the login page
creates a navigation string
returns the sql query to be used in the sql statement
returns the show group
oracle form method
remove a from the list of
returns the question show question
called when a new request is forwarded to the server
returns the show
oracle form method
removes the task from the task manager
adds a menu to the manager
registers a new
set the serialized data to the given page
processes the preparation page
renders the menu
renders the menu
builds a string buffer
oracle form method
removes the task from the list of items in the list
sets the new actor
remove a menu item from the list
returns the serialized sql to the given string
disposes the menu
returns the serialized sql to the given string
sets the actor attribute of the object
returns the user id of the actor
check for redirect
returns the name of the task search form
register a permissions object
returns the show member of the show
adds a new task to the cache
sets the
returns the show hide member of the form
oracle form method
returns the view stack
registers a new bundle to the given bundle
adds a skin to the skin
checks if the actor is allowed to be logged in
registers the specified search form
removes the specified task
sets the cascading contribution handler
instantiate a new instance of a given task
remove skin from the skin
gets the contribution deletion handler
checks if the given request type is a request
registers a context for the given context
adds a new user task to the list
sets the parameters of this component
returns the lookup context for the given
returns the text of the message
this method is called when the request type is a
returns the member history bean
sets the view
removes a user task from the list of agent tasks
sets the view view to be used in view view
returns the locale of the current locale
activate the component
returns the url for the
sets the http service
returns the code code object that the
returns the active authenticator
sets the preferences to the given preferences
returns true if the has the
returns the authenticator instance for the oracle
get the member cache home
returns the active member of the active member
returns the message with the given key and locale
returns the skin name
adds a skin to the skin
returns the message for the given locale
returns the width of the menu
returns the heading height
removes the skin from the skin
returns the login view for this profile
creates the mail address
returns the name of the active skin
returns the role home
returns the for the mail
returns the active configuration
returns the configuration for the given skin
returns the skin name of the skin
change the skin to the given name
returns the link member role
returns the url for the request
register the given to the configuration
returns the link permission
returns the home of the permission
returns the group home
returns the group admin home
returns the participant home
returns the question home
returns the hierarchy of the question hierarchy
gets the home reviewer
returns the completion home
get the current home reviewer for the current author
get the home interface for this blog
returns the home of the bookmark
returns the join home admin group member home
returns group admin to group admin admin admin admin admin admin admin
returns the current reviewer profile
returns the join to child home code in the current question
returns the join home of this
returns the join home
returns the reviewer who want to be used
get the reviewer currently selected in the list
gets the role value for this admin player
returns the join participant to member home
creates a new permission
returns the join participant to group home
gets the joined subscription subscription
returns the join to the current user home
returns the home for the bot
get the nested group
returns the error message that is not the message
returns the message to be used in the message format
returns the path to the file
this method is used to parse the given command
creates a new order object
oracle form method
invalidates the session
creates a new delegate instance
sets the html link for the given html page
adds a html page to the view
returns the format for the date
returns xml representation of this object
returns the xml representation of this code document code
writes the specified byte to this output stream
returns a code bit code object that will be used to create
load a bit map from the given bit
returns the string representation of the given object
get the member authentication
get the member cache home
creates a new member
create a new
creates a group
creates a group admin object from a group
creates a question
creates a question
creates a new faq
creates a test entry
deletes all the objects from the database
returns a result set with the given query
checks that the query result contains a list of parameters
returns a list of for a given
returns the sum of of the
returns a list of for the given
returns the selectable gui
returns the amount of the diagram
sets the amount of the diagram
returns the number of graphs in the graph
returns the add button model
sets the graph amount value for this describe graph result list
returns the incremental incremental
sets the add button model
returns the integer value
returns the label value of the label
sets the label value
returns the switch switch
sets the switch increment
returns the panel selection model
sets the panel selection model
sets the amount of the diagram
process the queue
sets the number of graphs in the graph
process the queue
copies all of the mappings from the specified map to this one
copies all of the mappings from the specified map to this map
returns the value of the second field with the given parameters
adds a semantic vertex to the graph
add a semantic edge to the graph
removes the vertex vertex from the graph
creates a new edge
creates an edge
remove the semantic edge from the graph
process the message
called when the sax parser starts a document
initializes the graph
receive notification of the end of a document
main processing method for the queue object
runs the message queue
starts the server
sends a message to the server
receive notification of the incoming connection
sends a message to the server
sends a message to the server
this method initializes j menu item
this method initializes j menu
this method initializes j internal
this method initializes j desktop pane
this method initializes j frame
this method initializes j internal
this method initializes new menu item
this method initializes j content pane2
this method initializes j tool bar
this method initializes j menu item
show the dialog
this method initializes the main frame
at startup create and show the main frame of the application
returns the number of in this card
returns the end of the attribute
this is used to determine the content of the content
returns the type of this object
returns true if the error is a wrong document error
returns true if the current document is an error
returns true if the type error is a child of this type
returns true if the range has been set
returns true if the type is an error message
returns the content of the content
sets the content
sets the id of the service
sets the
returns the document that this is
returns the location of the
returns the end point of the event
gets the value of the property
returns a duplicate of this node
returns true if the node is equal to the given node
removes the specified markup clip
get an entity by its uri
returns the context id
returns the general identifier
returns the namespace uri of the element
sets the general identifier
set the namespace of the element
returns the entity with the given id
sets the type of this object
returns a deep copy of the receiver
create a string from the content
returns an object that represents the id of the
adds a new to the database
returns an object that uniquely identifies the given uri
creates pointer range for given range
creates an element based on the given type
creates an element with the given type
creates an element with the given element and its id
creates a new attribute
creates a new attribute with the given type
creates a new attribute with the given name and type
creates a new
creates a comment for a given type
creates a comment for a given file
returns a deep copy of the receiver
returns the collection of attributes for the given node
returns the comments of the given node
returns a collection of all the elements in the specified node
returns a collection of child nodes for the given node
returns the first child of the given node
returns the last child of the given node
returns the next sibling of the given node
returns the parent node of this node
returns the previous sibling of the given node
returns the text content of the given node
returns the user data from the given key
returns true if the given node has an attribute
returns true if the given node has a child nodes
returns true if the node has an element
returns true if the node is a equal node
check if two nodes are equal
returns true if the node is the same node as the other
sets the user data to be used for the user
returns the node that is the node
save the file to the given file
stores the given file into the file
stores the file to the given format
store the given file into the file
returns the standard document as a string
returns the prefix of the document
returns the model as a model
add a statement to the statement
add a statement to the statement
add a statement to the statement
returns a copy of this
sets the window close listener
sets the size of the window
builds the menu bar
build the north panel
tests the set configuration method
test method for
tests the get configuration method
test method for
sets the tooltip for the tooltips
test method for
sets the label
returns the value of the property with the given name
tests the get property method
sets the value of the property
returns the file chooser for the file chooser
returns the value of the property no prefix
tests the get property string method
uncheck the button
sets the value of the property no prefix
build the north panel
test method for
returns the current configuration
loads the default configuration
copy the current preferences to the current preferences
clears the properties output
handles sax warnings
clears the preferences
saves the user preferences to the given user prefs
test method for
clears all parameters
handles sax errors
returns the string value of the resource
returns the mnemonic for the given key
handles fatal errors
sets whether output properties are used
refreshes the panel
refresh the label
sets the enabled disabled checked property
refresh the menu items
sets the enabled state of the support checkboxes
returns whether this button is on
refresh the
toggles the on off button click on the button
sets whether this button is on or off
refresh the label and text
builds the north panel
this method is called when the gui is
refresh the configuration label
refresh the
create a new
this method is called when the user selects the
enables the remove check button
returns true if the given start index is a
performs the transformation
destroy the user
adds a listener to the list of log listeners
remove a from a jid
tears down the fixture for example close a network connection
create an operation operation
returns the set of all the servers
returns true if the exception is down on the server down
returns the set of server managers
returns the user properties
compose the compose method
commit the transaction
compares the specified object with this topic
returns a topic model
compares two topic objects for equality
returns the result
adds a content path to the content path
clones this object
sets the problem
copies the current state to the stream
compares two server objects for equality
compares this remote object to the specified object
returns a string representation of this object
saves the replacement of the current invoice
sets the time range of the given quarter
save the invoice
get the transaction date
sets the status of the status bar
insert the methods description here
returns true if the table row is updated
generates invoice path for the invoice
verify the invoice
highlights the given row
returns true if the given color is a color
sets the buttons read only
fired when the user clicks on the partner
this method initializes j text field label
set the title of the function
enables the buttons for the given list of buttons
adds a widget to the table
set the read only flag
show the row status
this is the entry point method
sets the
the
returns true if there are more tokens available
returns the next token
returns the next token in this string tokenizers string
calculates the number of tokens in the next position in the
returns the invoice type
sets the default value for the default value
sets the invoice type
returns the
returns the string representation of this component
sets the
set the default value for the date field
validate the partner
removes the old archive from the database
returns the comment for the given user
returns the sql statement to be used to identify the given
checks if a site exists
saves the purchase of an invoice
creates purchase invoice and
sell invoice invoice
this method is called when the invoice becomes active
gets the to
sets the value of the to property
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
sets the credits of the credits
remove book book
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
remove all the files from the root directory
shows the confirmation dialog
returns the root node of the tree
updates the console console
initializes the look and feel
setup the menus
initialize the welcome screen
sets the component to be used for the component
returns the parameter at the specified position
returns the frame controller
this method is called when the application is startup
returns the code template manager code that is responsible for
this method is called when the order is ordered
returns the view
called when the current procedure is currently disabled
initialize the toolbar
returns the recent file menu
sets the view to the given view
builds the dialog box
adds a listener to the list of recent files
select the attributes of the table
notifies all listeners that have registered for the
this method is called when the entity is changed
this method is called after the model is initialized
builds the filter
sets the property value for the given property
refresh the view
reset the database connection to the database
resets the remove buttons
selects the given array of attributes
returns the class of elements in this list
returns the value at the given row and column
returns true if the cell at code row index code and
called when the user changes the procedure
this method is called when the user selects the given assoc one
selects the parameters in the given parameters
called when the entity is changed
enables the buttons and the buttons
this method gets called when the jsplit pane is changed
returns the location of the jsplit pane divider property
remove all buttons
invoked when the target of the listener has been changed
called when the current entity has been changed
select the attributes of the table
returns the class of elements in this container
this method is used to select the relationships in the table
called when the current entity changes
resets the remove buttons action
creates a button
reloads the list of entities
creates a combo box model
returns the data node
returns true if the entity has changed since the last
returns true if the data node has changed
returns the domain channel descriptor
sets the domain channel
returns true if the domain has changed
sets the flag indicating whether or not the domain has changed
returns the path object
returns true if the data map has changed
returns the
returns the text component
sets the text of the xmleditor to the given text
returns the directory where the user is being used
creates a combo box
creates a combo box
creates a combo box
create a cell editor
this method creates a cell editor for the given jcombo box
create an instance of
returns the accelerator key stroke
called when the project is closed
returns the icon name
returns the last directory of the application
returns the preferences for this view
displays an error message
this method is used to enable the functionality of the
centers the window on the screen
displays the given status message to the status panel
invoked when an action occurs
build the menu
get the check box menu
builds the button
returns true if the component is always on the page
returns the window of this window
sets whether this component is always on or not
returns whether the text is showing
returns the jframe view
sets whether text is showing
called when a binding is updated
returns true if the specified object is contained in this list
logs the message
returns the preferences for this domain
filters the model
checks whether the given pattern matches the pattern
returns the data map for the given preferences
sets the selected index
sets whether the server is enabled
returns the data node preferences node for this preferences node
helper method to wrap the tooltip
sets whether the notification is a single notification
returns the value of the single notification
add a file info to the file
remove a file from the list
centers the window in the center of the window
remove all files from the list
handles the hyperlink update
returns the controller of the current project
pauses the watching
resumes the watching
sort the list by the comparator
accept all directories
returns the ordering key for the
returns the description of the filter
returns the number of rows in the model
returns the event source
returns the description of the data
accept all directories and all files
moves the row up to the given row
accept all directories and all extensions
moves the row down one row
invalidates the receiver
this method is called when the entity is removed
add a new strategies to the last used generation
fires a tree selection event to all registered listeners
cancel editing and cancels editing
selects the rows in the selection model
returns the path to the first selected node
sets the selected path to the specified node
updates the progress bar
returns the classloader to use for this classloader
selects the given row and column
adds the given file to the classpath
updates the custom templates list
returns the minimum number of columns in the table
sets the minimum number of columns
returns the preferred size of the column
sets the default renderer
adjust the column layout
creates a new project path
installs the table
clears the selection
uninstalls the columns from the browser
refreshes the preferred size of the table
scrolls the component to the specified column
updates the entity of the graph
performs a project controller
returns the graph map
unregisters the specified project controller
returns the selected type
sets the selected type
called when the project is opened
handles the selection of the current domain
this method is called when the entity is
this method is called when the is removed
updates the actions adjustment
shows the about dialog
set the enabled state of the given node
copies the current object to the current project
flatten an object
creates a new entity
performs the action
enables or disables the given
callback for remove callback
this method returns a confirm delete dialog
removes an existing entity from the database
remove a query from the database
removes a procedure from the event map
checks if the project is a project
checks if the dialog is close on the current project
this method is called when the object is a path
performs the actual operation
returns the free name of the given free string
performs the action
performs the action
called when the entity has changed
updates the state of the state
handles an event that is added to the tree
this method initializes j
called when an entity is removed from the
show the tree node
returns true if the given class name exists
adds a listener to the list of listeners
set the state of the
returns true if the given class name exists
rename a project listener
performs the action
selects the selected action
build the menu for the action
this method is called after the transaction is committed
returns the ordering key for the
create a new query
this method is called when the startup window is initialized
this method is called when the startup window is initialized
this method is called when the startup window is initialized
build the validation text for the validation
clears the view
creates the window
sets the window to the console
copies the selected text
toggles the console flag
show the console if necessary
set the console property
append a message to the message
returns true if the detailed status is a detailed
sets the value of the detailed property
stop the console
returns the selected schema
sets the table
returns the table name pattern
select the selected action
prepares the adapter for the connection
returns the pattern for the procedure name
returns the naming strategy used by this strategy
this method is called by the framework when the is
the method code perform action code
prepares generator for the database
add a prepared statement to the buffer
update the
this method is called by the framework when the
this method is called when the user clicks the ok button
returns the adapter
sets the token
called when the user selects the table
creates a new view
this method is called when the application is shutting down
opens the preferences dialog
this method is called when the startup context is closed
returns the problem
this method is called when the user selects the selected action
updates the current view action
fires a event to all listeners
returns the message
called when a data node has been removed
initialize the components
merge the given
fires a data map event to all listeners
invoked when a mouse button has been released on a component
fires a query event to all listeners
fires a procedure event to all registered listeners
fires procedure procedure event listener
revert the current selection to the current state
updates the combo box
clears the path
returns the platform platform name
returns a list of encodings for the given platform
runs the action
runs the action
sets the selection path
sets the database relationships
returns the object target
show the data source editor action
creates a new data source action
duplicates the data source
removes the data source from the data source
opens the data source for the data source
opens the data source and opens it
checks if the entity is allowed to be able to create the
configures the generator
this method is called after the user is executed
this method is called before the generation of the
sets the class name of the superclass
fire an event to all listeners
creates a new instance of the adapter
creates a new data source
binds the window to the specified size
notify all listeners that an attribute event
sets the data node
returns the data map
sets the data map
sets the map of data objects to be used
return the line number of the given position
returns the width of the line number
fire an event to all registered listeners
sets the delegate
returns the value of the field
binds a new binding to an existing state
binds the binding to an action binding
binds a binding to an action binding
bind the component to a field
prepares binding for binding
returns the view of the component
returns the value of the property with the given key
returns the directory where the user is stored in the
adds a listener to the list of listeners
generates the page root element
called when a new callback method is called
returns the root page of this page
called when an entity is added
this method is called when the maven version is about to be
returns the sql string to be used for quoting
sets the columns table model
sets the column types
loads the data map
creates the generation generator for this class
loads the data map from the map
returns the message that is used to display the message
shuts down the instance
adds an object to the registered listeners
called after the is removed
get the entity with the given uuid
returns the object
format the given string to the appropriate variable name
returns the package strip name
returns the namespace resolver
removes the class from the list of specifiers
returns the name of the first character of the given name
returns true if this is an abstract entity
converts the name to a string
returns true if the entity is abstract
returns true if this entity is a many to many association relationships
returns the name of the query method
returns a collection of parameter names
checks if the entity is indirectly in another entity
parses a qualifier
returns true if this entity is a many to many association
returns the parameter type of the query
add a new type to the package
returns true if the entity has one relationship
checks if the entity is a one
returns a string representation of the class
returns true if the entity is a one annotated with
returns the class name of the superclass
sets the classpath to be used for the given path
create the classpath to be used for the classpath
sets the map of the file
sets the adapter for the adapter
execute the artifacts
sets the user name
validate the attributes and attributes
executes the given artifact
checks whether or not the given string is included in the
validate the attributes
filters the entities
returns a list of all the entities that are connected to the
sets whether or not to generate the
validate the attributes
set additional maps
sets the
sets whether or not the package should be used to exclude the
sets the
sets the output pattern
sets the exclude entities
opens a writer to output a writer
sets the include entities
create an instance of the configuration
returns whether the file is old
initializes the configuration
returns a file to be used to translate the target file
adds a collection of entities to the scape
returns the adapter
returns the primary key generator
sets the pk generator
returns the adapter
returns the name of the given entity
creates a string representing the sequence of entities in the database
returns true if the column is to be printed
get the table name for the given entity
returns the name of the entity
create a adapter for the database
finds the resource with the given name
override to configure the extended types of the extended types
factory method to instantiate a code null code object
returns the factory
returns the pk generator
convert a date time to a date
writes the given blob to the given blob
writes a clob value to the output stream
writes a clob value to the output stream
returns the qualifier to the given query
drop the sequence string
returns the first action of the given query
drop the given node
returns a list of sequences for the given node
check if the given table exists
delgates operation to the current connection
executes the given insert update
returns the translator factory
set the translator factory
this method returns the primary key of the given node
returns the size of the cache
sets the size of the cache
attach this channel to the runtime
attach a channel to the given channel
sets the channel
sets the query cache
returns the event manager
add a query to the query
routes a query to a given routing agency
this method is not supported
set the relationship between two nodes in the relationship
sets the relationship between the two given
returns the user property with the given key
removes the given column descriptor from the list of result descriptor
initialize the properties with the given properties
sets the user property
deletes an object from the database
returns the current qualifier
add a new prefetch to the tree
initializes the properties with the given properties
add a collection of to the list of
clears the
returns a query query object that contains the parameters
add an ordering of the given ordering to the list
sets the fetch size
adds a list of to the list of
add a order to the list
returns the path to the prefetch
sets the value of prefetch path
returns the last prefetch comment
clears the
remove the path result from the path
adds a path to the classpath
gets the statement
this method deletes all the records in the given validation result
add a new prefetch to the tree
sets the parameter to the given parameters
returns the fetch limit
sets whether the data rows should be displayed
sets the size of the fetch statement
returns the offset of the current fetch offset
returns the fetch limit
sets the fetch limit
initializes the metadata for the given metadata
implements the visitor pattern
returns true if the locking method is used
gets the value of the db entity property
returns the page size
resets the batch index
returns the object id of this object
sets the page size
adds a new snapshot to the list
add a new snapshot to the map
sets the root of the object
adds a snapshot to the cache
adds a snapshot of the given map to the snapshot
routes a query to a given routing agency
returns the data map
returns the relationship associated with this entity
returns the root of the tree node
sets the fetch size
traverses the and
adds a path to the tree
removes the path from the node
returns the metadata for the given query
this method is used to recognize the qualifier to the qualifier
checks if the qualifier qualifier is present
this method is called when a query is received
returns the query that is returned from the query
this method is not implemented
sets the sort specification string for this column
returns true if the first sorted position is sorted
sets the path exception to be used to indicate failure of the
returns true if the path exception is
returns the sort specification string
sets the sort order
returns true if the sort order is ascending or not
returns true if the table is descending
returns true if the case sensitive
returns true if the order is case sensitive
sets the case of the case insensitive sort order
sets the case sensitive sort
returns the sort specification for this property
sets the sort specification for this sort criteria
orders the list of objects in the list
encodes the code code
initialize the properties with the given properties
returns the size of the parameters
converts a value to a clob
returns the query
add an object to the list
creates a new prepared statement
initialize the callable statement
append a part of this node to the given node
returns true if the given attribute is included in the database
gets the trim function
sets the trim function
add an attribute to the database
returns the default template
sets the default template
applies the query to the given query
append limit clause to buffer
sets the parameters of this object
returns the number of nodes in the tree
append joins to the given code join code
returns true if the distinct is
returns the column names
sets the column names
sets the result of the test
sets the relationship between two relations
returns the data domain of this channel
sets the delegate
runs the given generator
returns the delegate
executes the given sql statement
returns the failures
returns the object store
returns whether the tables are used
returns true if the object has been set
clears the cache
returns an iterator over all queries
returns the results of the query
returns the number of first updates in the query
returns the first rows of the given query
returns a list of all the results of the given query
returns a list of all registered attributes
returns the domain
check if the service is stopped
close the transaction
returns the data object from the given row
returns the event manager
create a new object to be persisted to the database
sets the event manager
returns the value of the code validating objects on commit code
sets whether the parser objects should be validated
returns true if the is using external transactions
sets the value of the using external transactions property
unregisters the object
sets the transaction delegate
adds a map to the map
returns the map of entity map
resets the cache
clears the data map
returns the number of objects in the collection
returns the data row cache object
create a transaction
perform the query
returns the cached snapshot for the given object id
respond to an incoming query
this method is called when the snapshot is changed
returns the entity resolver
sets the query builder
adds a filter to the list
removes a filter from the list
returns the number of snapshots in this collection
returns the maximum size of the queue
stops the timer
returns the data source factory
returns the data map for the specified name
adds a data map to this map
returns the data source
lookup the data node
sets the event manager
sets the entity resolver value for this get properties
returns the event subject of this event
fills the list of objects in the database
this method is called by the framework when the
prints the exception to the print writer
returns the data context
returns true if the exception is thrown during the oscar exception
this method is used to advance the iterator to the next query
this method is used to set the rows in the result
returns the expression of the expression
pushes a marker onto the stack
append a string to the current stack
append a code char code to the current stack
returns the template string that contains the template
returns the query
sets the columns table column
returns the qualified qualified name of the column
returns the objects
gets the procedure name
closes the iterator
returns whether the database has generated the generated sql statements
guess the type of the method
moves the cursor to the next row
returns the value of the is closing connection property
returns the width of the table
sets the flag indicating whether the connection is to close the connection
binds the given context to the given context
create a translator for the given sql query
returns the procedure
handle the db relationship
initialize the default factories
removes the given code code object from this factory
registers a new class type to be used for the given type
returns the default type
sets the entities
returns the type of the given class
sets the source node
unregister a type
sets the destination node
returns the type of the given class name
returns the delegate
sets the destination
sets the insert batch size
register the given enumeration to the database
returns the end value of the string
returns true if the is using the
returns true if the is
returns the database meta data for this database meta data
returns true if the table name is included in the table
disposes the resources held by this object
loads the data relationships from the database
returns the data source url
returns a connection to the database
sets the naming strategy for this instance
notifies the connection listener that the connection has been closed
returns a connection to the database
returns the description of the error
adds a validation failure
returns true if the collection has a result
returns true if events are enabled
returns true if the lifecycle event is enabled
sets the version
creates a child context object
returns true if the graph has been changes
casts the message to a message and displays its object
this method is used to create the message object
converts an object to an event
returns true if the thread is a single threaded
returns the external subject
returns true if the timer is currently running
returns true if the external event is a
receives a message
build the string of the multicast port
remove a listener from this manager
removes all subjects from this subject
remove a listener from this subject
gets the posted by attribute of the aglet bean object
removes a listener from this queue
shutdown the listener
this is a the registered listeners that an event has been an
this method is called when the user external event is fired
this method is used to notify the listeners that the
ensures that the value holder wraps a value holder
creates a new value holder for the current object
adds a factory class to this factory
removes the given entity from the database
creates a new proxy descriptor
checks if the descriptor is valid
returns the descriptor of the class
clears the event
returns true if the given type is empty
returns the owner of the given object
this method is used to set the superclass for the superclass
performs an event that will be notified when the object is
add a property to the list of properties
add a property to the list of properties
this method is called when the lifecycle of the
add a new db root entity to the database
remove a property from the property list
add a class descriptor to the class
returns the property with the given name
returns the superclass descriptor
get the value of the property
creates an object
inject the primitives into the underlying object
shallow merge two vertices
returns the accessor for this accessor
adds a callback to the list of callbacks
adds a callback to the list of callback objects
perform the save operation
returns the query cache for the given properties
returns the cache
clears the list of all the objects
returns the cache
removes the key from the list
initializes the crontab policy
sets the policy refresh policy
remove a group from the list
rotate the given string by the given string
returns the data domain object
returns the data source for the given data node
returns a list of all the deprecated properties
returns the injector
returns the channel for this channel
returns the current context
returns the context object for the given channel
returns the configuration source of this resource
sets the configuration resource
returns the location of the configuration file
returns true if the receiver is a fault
invalidates the object
returns the string representation of the given substring
returns the position of the given substring
set the string to be used as a string
create an object for the given naming object
truncates the code blob code value that this code blob code
returns the relationships in this bean
synchronizes the entities with the given data
returns the resolved list of the local references
notify all listeners that an attribute has been added
fires a relationship added event to all registered listeners
sets the naming strategy
mark the object as dirty
prints the given map to the underlying map
prints the given collection of objects to the end of the list
sets the last time the object to be used
prints the current project version
prints the attribute value
executes the query
prints a property
prints a property
prints a property
calculates the index value of the given index
sorts the list
runs the query
fires the event
retrieves the code blob code value designated by this
fires an event to the event
returns the position of the specified byte array
sets the buffer at the given code
sets the buffer at the given position
sets the designated parameter to the given code java
truncates the code blob code value that this code blob code
this method is used to resolve the information
returns true if the fault is a fault
returns the map of the key value pairs in the map
invalidates the object
returns the set of object sets
find a resource stream
clears the results
find a directory for the given name
replaces the result of the given result set with the result
returns whether the home directory should be suppressed
sets whether to skip directory directory
returns whether or not the current directory is skipped
sets the current directory to skip directory
returns whether or not to skip the classpath
sets whether to skip classpath files should be skipped
return the classloader to use for loading the class loader
returns whether or not the path is skipped
sets whether or not the path is skipped
adds a custom path to this class
adds a filesystem path to the file system
adds a filesystem to the list of filesystem directories
sets the primary key
returns the primary key name
add a field to the database
encodes the code code object
returns the name of the relationship between the last
sets the primary key attribute of the object
returns true if the is
creates a new instance of the reverse relationship
sets the generated attribute of the generated event object
add a join to the list
sets the fk name
returns the foreign key name
remove a database relationship from the database
sets the to many
returns the fully qualified name of the schema
returns true if the target type is a defining target
returns the row matching the given row
checks if entity is qualified entity
sets the catalog
returns true if the source independent of the target change
add an attribute to the database
clears the stack
returns true if this entity is dependent on the database
sets the callback method for the specified method
returns the attribute for the given db path
adds an attribute to this element
returns true if this entity is
sets the primary key generator for this primary key
returns true if this is a method
sets the used for locking locking locking flag
get the db attribute
returns the primary key generator
returns true if this object is inherited from another entity
get the db attribute name
returns true if the database is
returns the delete rule
returns true if the user has a mandatory property
called when an entity has been added to the database
get the maximum length of the database connection
returns the client attribute
sets the value of the code delete rule code property
update the db
called when a entity is removed removed
initialize the cache
returns the path to the database
returns the path to the database that the database is included in
creates a new
creates a listener for an entity
set the path to the database
called when a relationship has been added
called when the relationship is removed removed
sets the callback registry to be used for the
returns the client side resolver for this instance
this method converts the given location from the given location to the
sets the qualifier of the expression
returns the relationship relationship object
returns the collection type
returns the tree with the given entity tree
sets the entity
returns the of the given entity
encodes the converter
encodes the code code
adds a call parameter to the call
remove a call parameter from the call
returns the result parameter
returns true if the value is
sets the catalog
sets the schema
adds a new entity listener to this entity
returns the key for the given class name
remove a listener from the list of registered listeners
returns the entity lookup object for the given object
sets the relationship
returns the object associated with the given key
returns the callback map
sets the old name
returns the lock type
sets the entity listener factory to be used for the
sets the locking type
get the attribute for the given db path
returns the attribute with the given name
create a new join object
get the source attribute
encodes the code code
returns true if the client is allowed to connect to the server
adds a column to the list of columns
sets the abstract flag
returns the attribute with the given name
remove an attribute from the list
returns true if the server is only accepting only
returns the relationship with the given name
removes the relationship with the given name
returns the first relationship of the given entity
sets the server only flag
returns the declared qualifier
returns the super entity name
sets the direction of the
returns the entity source entity
sets the source entity
sets the entity to be used in the
returns the target entity name
sets the target entity name
returns true if this is a
write the xml representation of the
sets the super entity name
returns the client class name
append a prefix to the sql statement
sets the client class name
get a query from the query
add a query to the query
removes a single query from the query
returns the super entity
append a prefix to the sql statement
removes all from this map
returns the db entity
sets the database entity
find the db entity
find db attribute
find the db relationship
get the attribute for the given db attribute
adds a to this map
adds a result to the list
get the relationship for the given relationship
adds an entity to the entity
clears the database
add a db entity to the database
compares this node to another node
returns true if the entity is
adds a new listener to the list of registered listeners
applies the changes to the graph
performs the action
removes a listener for the given class name
create a replacement object for the current id
translates a expression to a db
get the db entity with the given name
returns the object entity for java class
get an entity object from the entity
returns the expression of the expression
join a join expression
creates a disjunction and returns it
gets the value of the db entity name property
returns the expression of the expression
compares the value of the object with the given object
copy this object to a deep copy
sets the property database entity name
remove a db entity from the database
implements the visitor pattern in the visitor pattern
this method implements the visitor pattern for the
handles an entity changed event
transform the transformer
remove an entity from the database
encodes the code code
called when an entity is added
remove an entity from the entity
called when an entity is removed from the entity
returns the default listeners
adds a procedure to the map
returns true if the superclasses is
returns the namespace mapping
sets the namespace of this namespace
description of the method
returns the character that is used to escape characters
returns the expression for the given index
connects to the parent
writes the to the specified
sets the values of the current object
returns the entry of the given entity node
this method is called when the sorter is made
returns the source of this event
create a new server event bridge
returns the entity resolver
set the remote channel listener
returns the channel
create a new channel object
initialize the bridge parameters
returns the context object
returns a list iterator of the list of instances
returns an iterator over the elements in this list
returns the number of messages that have been processed
returns the session
returns the name of the property mapping file
sets the root element of the tree
encodes a property
set the property value for the given property name
encodes an object to its parseable form
encodes a tag into an xml document
initialize the root element
returns the root node of the root element
decodes a boolean value from the xml stream
encodes a collection of objects to the xml
decodes a double value from a xml tag
pushes an xml tag onto the stack
decodes a float value from a xml tag
decodes an integer value from the xml
decodes an object from the xml stream
decodes a string from the xml document
decodes an object from a stream
decodes an element from an element
visit a node
visit a child of this node
tests select like
tests select like
test select like
test select with a single item
method test do query
method test do query
adapter iterator test with null argument
this test return a string with the same parameters as the
tests select compound
get the exception
get the of the query
test the of the employee
test the of the
tests company
test of department department method of a department
tests that the columns of the columns are generated
returns the row data for the given row
test the query fetch
test the creation of a single column
test multi valued property
test multi query rel
test for artist has changed
test method for
puts a snapshot into the snapshot cache
test method for
test method for
test method for bean
test that the persistence of a transaction is accessible
this method is called when the procedure is encountered
returns true if the comparison is a reverse comparison
returns whether the dialect supports the null syntax
returns true if the character supports the character
returns true if the underlying database supports the
returns true if this dialect supports
sets the template
returns the connection info object for the given conn
creates the schema
returns the data source for the given properties
the data structures
test base64 base64 base64 encoded base64
test method for
test method for
test method for
test method for
tests that a constraint is violated
test for construction of a expression
test the method
tests that a expression is rejected
tests that the is equal to the
tests that the is equal to the
tests that the parameters with no parameters are not too no
check that the is a new
test method for
returns the valid characters in the given path
returns an invalid string that contains the invalid characters path
returns true if the given property name is already
compare versions of two versions
converts a data source factory to a string
returns the query object that contains the given name
returns a collection of all the queries that have been
returns the qualified name of the given query
returns the model url
returns a map containing the data for the given path
returns an iterator over the names of the names of the model
returns a list of all the names of the current list
returns true if the prototype is prototypes for the prototypes
returns the entity mapped to the given entity
returns an iterator over all the names of the given entity
make a query to be used for querying the query
returns the sql query to be used for the given query
loads the index model from the model
loads the index map
loads the index of a query
find the model name of the given path
returns the url for the given path
opens the input stream for the current open office
opens an input stream to the database
opens an input stream to the database
sets the date of birth of the current date
tests the method
test the
test the
test the
test the
test the
removes all sessions of the given list of all sessions and their
load data map from a uri
this method converts the given location to a location
create a new locator configuration
description of the method
returns the field for a given field
create a schema element
this method is used to check the database
report a property change event to all registered listeners
returns the object representing the target of the entity resolver
returns true if the property set is a set property set
returns the element that this model represents
returns the target element
adds a connection to the connection
connects to the target
disconnects the connection from the server
deletes the current object
moves the cursor to the next record
moves the current object to the current record
sets the relationship of the object
returns the value of the object property
sets the current object
this method gets called when a bound property is changed
validates the current record
returns true if the connection is connected to the root
adds an element to the uml diagram
adds a root element
modify the bounds of this component
removes the given connection from this connection
commits changes to the model
sets the bounds of this node
returns the model element of the given element
returns the single element for an object
removes the element at the specified position in this list
rolls back the changes in the database
displays the given text in the tree
sets the auto layout flag
returns the existing editor editor
returns the editor for the given address
returns the name of the server
runs the current query
handles the event to the user selected event
returns a command line object that consists of the compound command
returns the command
returns the value of the code editor code property
handles the action event
checks if the given relationship is expanded
returns the part for the given part
returns the connection relationship associated with the given
hides the null objects and removes it from the tree
this method handles the changes of the property change
returns the model element of this model
returns the connection anchor
this method handles the event handler
sets the bounds of the element model element
adds the components to the container
sets the attributes of the object
refresh the view
handles the action event
handles the selection of the user
handles the selection of the user
checks if the is
get the dao of the given class
returns the data context
find an object with the given parameters
find the objects matching the given objects
this method is used to determine if the keywords match the given
this method is called when the inventory quantity is set
returns the order id
returns the child of code parent code at index code index code
returns the number of children of parent
returns the index of child in parent
returns true if the specified node is a leaf
returns the child of code parent code at index code index code
returns the number of children of parent
returns the index of child in parent
returns true if the specified node is a leaf
sets the root of the tree
adds a path to the tree
sets the sort specification string
this method is used to set the page size
sets the ascending order of the table
sets the sort order
returns the list of
returns the context object associated with this context
returns the service
sets the fetch size
gets the value of the encode by reference property
set the attribute to be excluded from the
returns the incoming property
returns the commit count threshold
returns the
sets the
process a db ownership event
returns the data channel for this channel
create a new object context
returns the watchdog watcher
starts the application
bind the given
creates a visitor class for the given class name
returns true if the given class is
make a array type
checks if the class is a
adds a new argument type to the list
sets the type
gets the value of the ret type property
returns the arity of this node
compares this method to another object
check that the type of the given string is assignable to the
compare two types
add a field to the field
checks if the field with the specified field name exists
check if the method has already been used
checks if the given type name is defined
returns the field type of the field
returns true if the given string is equal to this one
find a type by its name
check if the path is a proper value
adds a type to this type
adds a variable to the environment
returns true if the specified variable name is declared
returns the string type of the variable
adds an error message to the list
checks if the method has a method
create an operator
constructor for a letter
returns a copy of this pieces pieces
constructor for a letter
returns a copy of this pieces pieces
constructor for a letter
returns a copy of this piece
convert a string to a sorted list
returns the value of the code my turn code property
test loading a file
returns the list of move list
read and do nothing
sets the turn
sets the move
sets the list of move to move
returns the name of the component
copies the given pieces to the destination pieces
constructor for a move
copies the piece to another
saves the game
creates a new move
copies data from the given position to this one
returns the next move to the next turn
make the next move in the game
checks if the given list of legal transitions are legal
prints all checkers to the current turn
quits the game
checks if the game is over
initialize the
display error message
parse a command line
prints the board
runs the game
sets the pieces of pieces to the given pieces
constructor for a game controller
stores the piece info into the log
constructor for the game controller
restores the last pieces of pieces to the pieces
restores the piece info at the given position
constructor which takes a file name and a file
create a new game controller
returns the level of the player
invoked when a mouse button is pressed on a component and then
returns the number of players in the game
repeats the specified value in the iso8601 duration times
returns whether or not the squares of the squares are legal
displays the game
returns whether the legal moves the game is in legal state
this method is called when the game is removed
called when the game is about to be used
returns the type of the player
returns the machine state of the player
gets the human player
returns the name of the game
returns a copy of this pieces pieces
returns the time left of the given node
returns a string representation of the given color
constructor that starts the timer
returns the is timing status
create a king letter with a certain color
returns a copy of this pieces king
copies the piece to another
returns the other moves
returns the board type
returns the next turn turn
returns the number of pieces in the given piece
returns whether the current line is a moved state
returns the difference between the given side of the board
returns the board type
returns the number of alive piece
returns the total number of bytes that have been alive
returns the move history
returns the checked state of the element
returns a list of all the items in the history
returns king of king piece
returns the special value for the specified side
checks if the game is over
returns the piece at the given position
returns the last piece that has been moved
set whether to show the legal legal values
returns the last piece in the given position
set whether the label is allowed to be drawn
returns true if the piece has moved or moved or not
returns true if the cell at the given row col is usable
sets the timed game flag
returns a string representation of the game board state
sets the board type
gets the value of the property
sets the value of the game in progress property
sets the board type
returns the opponent color for the given opponent
sets the checked state of the specified
sets the color of the player
returns the opponent color
sets the special value for this
sets the time left and time to the specified value
sets the piece at the given position
returns the character associated with this event
sets the piece last
sets the time left in the time panel
sets the last piece of the brush
sets the board
sets the last piece moved
sets the name of the game
sets the last piece moved
sets the board
compares the given object with this board
start the timer at the specified color
checks if the pieces pieces of the pieces they are more
sets the state of the piece
stops the timer
sets the location of the cell
sets the next turn
sets the last location of the cell
toggle the turn of the opponent
starts the game
compares two pieces for equality
returns true if the player is
returns true if the game is over
saves the game to a file
reads the file from the given file
returns true if the game is over
returns true if the next turn is tie
returns true if the game is a tie
returns true if the given board is a win
returns true if the king is a
extracts the switch of the switch
returns the possible moves for the given
returns a list of moves that are all the moves
returns a list of all possible pieces that are a
make the move
make a move for a given move
make the move
this method is not allowed to be overridden by a smart other
checks if the other move is already undone
make a move for the given move
undoes the given move
called when the menu item is clicked
returns true if the game is over normal normal or not
returns true if the game is a tie normal
returns true if the given board is a normal
this method is called when the game is about to be notified
returns the context
returns the logger manager
lookup a component
sets the id
deactivates all the radio buttons
remove the behavior
returns the behavior behavior
returns the default value of the default value
returns the controller
sets the value of the controller
returns the position of the
remove this object from the parent
returns whether the window is active
called when the user presses the mouse button
returns the text
clears the contents of the buffer
returns true if the is automatically cleared
submits the current
adds the close button to the dialog
removes the close button from the dialog
returns the tab
returns the value of the constant
returns the parent controller
returns the control window
deactivates the radio button
returns the tab of the current tab
returns the id of this object
remove all the tabs from this window
removes all the components from this container
updates the tab panel
this method is called when the user changes the event
returns the papplet object
sets the title
show the coordinates of the
hides the window
returns the string value of the object
show the dialog
returns the current value of the controller
returns the value of the controller
returns the controller
returns the tab
returns the control group
returns the label of the controller
returns true if the tab is a tab or not
returns the label of this label
returns the tab at the top of this
hides the window
show the dialog
remove the current element from the container
hides the popup
opens the dialog
close the connection
scroll the scrollbar to a scrollbar
scroll the scrollbar
returns the value label
returns the value of the label
returns the text of the text
returns the font of the font
returns a string representation of this object
returns the time in milliseconds
resets the current time
sets the speed of the
returns the number of milliseconds to be used for the time
returns the second value of the second expression
returns the minute
returns the hour
returns the day of the day
adds a child to this node
locks the lock
unlock the lock
saves the current file
hide the control window
trigger the controller
returns the attribute value of the attribute with the given name
sets the arguments to use for the given arguments
adds a syntax syntax to the syntax tree
parses the given reader from the given reader
parse a string from the given string
removes a child from this node
remove a property
removes a child attribute
creates a new element
returns a new with the given name
returns a syntax error message
returns an expected input
returns an unknown element that represents the given name
this is the entry point method
called when a view is being removed from the
read a list of properties from the given bean
adds a frame to the scrollable frame
selects an explicit icon in the current frame
cascade all internal windows to internal frame
all images in the list
adds a code dispatcher code to the specified code
returns a new traits with this trait object
creates a new traits with this trait object
creates a new traits with the given class and the
creates a new
remove the given trait from the container
prints the status of the current status
returns a string representation of this object
prints the status of the system
returns a string representation of this object
prints the current status of the current
returns a string representation of this object
returns a string representation of this object
this method is called when the activity is about to be called
send a simple message to the given simple mail message
removes the element at the specified position in this
open the database
open the database
the given url to a url
return a cursor over the list of all authors in the database
return a cursor that matches the given names code matches code
this method initializes this
this method initializes j content pane
this method initializes j content pane
this method initializes j jmenu bar
this method initializes j panel
this method initializes j menu
this method initializes j button
this method initializes this
this method initializes j button
this method initializes j menu item login
this method initializes j content pane
this method initializes j scroll pane
this method initializes j
this method initializes j table
this method initializes j menu item logout
this method initializes j menu
this method initializes
this method initializes j menu item
this method initializes j panel
this method initializes j text
this method initializes txt password
this method initializes btn login
this method initializes this
this method initializes
this method initializes this
this method initializes this
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes j
this method initializes j
this method initializes j stock
this method initializes j text field
this method initializes j stock
this method initializes j text field1
this method initializes j
this method initializes j text field2
this method initializes j
this method initializes j
this method initializes j text field
this method initializes
this method initializes
this method initializes j
this method initializes j text field nom
this method initializes j item
this method initializes j item tipo
this method initializes j item pedido fin
this method initializes this
this method initializes j content pane
this method initializes j text field
this method initializes j menu
this method initializes article
this method initializes j
this method initializes j cancelar
this method initializes j menu client
this method initializes j menu
this method initializes this
this method initializes j content pane
this method initializes j
this method initializes j menu item
this method initializes j menu item
this method initializes j panel
this method initializes j text field
this method initializes j menu item
this method initializes this
this method initializes j menu item
this method initializes j password field
this method initializes
this method initializes j
this method initializes j text field nom
this method initializes j
this method initializes j combo box
this method initializes j password field
this method initializes this
this method initializes j
this method initializes j text field
this method initializes j cancelar
this method initializes j content pane
this method initializes
this method initializes j
this method initializes j text field
this method initializes j combo box1
this method initializes j button
this method initializes j text field
this method initializes j button
this method initializes j scroll pane
this method initializes j text field
this method initializes j table
this method initializes j text field id
this method initializes j password field
this method initializes j text
this method initializes j combo box
this method initializes j check
this method initializes j button
this method initializes j text field
this method initializes j password field
this method initializes
this method initializes j text field
this method initializes j button
this method initializes j login
this method initializes j radio button
this method initializes j
this method initializes j text field
this method initializes j logout
this method initializes j radio button1
this method initializes j
this method initializes j radio button2
this method initializes j text field
this method initializes j registro
this method initializes this
this method initializes j registro
this method initializes j text field
this method initializes j text field
this method initializes j ficha
this method initializes j text field nom
this method initializes j text field
this method initializes j
this method initializes j panel
this method initializes j text
this method initializes j button
this method initializes j
this method initializes j button
this method initializes j text field
this method initializes j
this method initializes j combo box
this method initializes j panel
this method initializes j button
this method initializes j button
this method initializes j
this method initializes j scroll pane
this method initializes j
this method initializes j table
this method initializes pedido
this method initializes j pedido
this method initializes this
this method initializes
this method initializes
this method initializes
this method initializes j check box
this method initializes j
this method initializes j cancelar
this method initializes
this method initializes j text field
this method initializes j text field1
this method initializes j button
this method initializes this
this method initializes j text field
this method initializes j combo box
this method initializes j scroll pane
this method initializes j table
this method initializes j jmenu bar
this method initializes j menu item login
this method initializes j menu item logout
this method initializes j menu
this method initializes j menu item
this method initializes j menu item
this method initializes j menu
this method initializes j menu item
this method initializes j menu item
this method initializes j menu item
this method initializes j menu item
this method initializes j menu
this method initializes j stock
this method initializes this
this method initializes j panel
this method initializes jcb tipo
this method initializes jcb
this method initializes jbtn add
this method initializes this
this method initializes j content pane
this method initializes
this method initializes j text field
this method initializes j text field1
this method initializes j text field2
this method initializes j
this method initializes jcb
this method initializes j jmenu bar
this method initializes jcb
this method initializes jbtn add
this method initializes jcb
this method initializes this
this method initializes jcb
this method initializes jbtn add
this method initializes j text field nom
this method initializes jcb
this method initializes j text field
this method initializes jcb
this method initializes jbtn add
this method initializes j panel5
this method initializes j text field
this method initializes j
this method initializes j panel6
this method initializes j text field
this method initializes j scroll pane compra
this method initializes j table compra
this method initializes j button
this method initializes j button
this method initializes j button elimina
this method initializes j families
this method initializes j table import
this method initializes jbtn compra
this method initializes j menu
this method initializes j button
this method initializes j menu item login
this method initializes this
this method initializes j content pane
this method initializes article
this method initializes j
this method initializes j cancelar
this method initializes j text field
this method initializes j text rol
this method initializes this
this method initializes j
this method initializes j
this method initializes j combo box
this method initializes j
this method initializes j combo box1
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j button
this method initializes j text field
this method initializes j
this method initializes this
this method initializes j aceptar button
this method initializes j cancelar button
this method initializes this
this method initializes j aceptar button
this method initializes this
this method initializes j cancelar button
this method initializes this
this method initializes j
this method initializes j
this method initializes j text field
this method initializes j
this method initializes j cancelar
this method initializes j text field
this method initializes j text field nom
this method initializes j text field
this method initializes this
this method initializes
this method initializes this
this method initializes j table
this method initializes j
this method initializes this
this method initializes j cancelar
this method initializes j content pane
this method initializes j text field
this method initializes
this method initializes j button
this method initializes j cancelar
this method initializes j text field
this method initializes j text field1
this method initializes this
this method initializes j password field
this method initializes this
this method initializes j
this method initializes j cancelar
this method initializes j password field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text
this method initializes j button
this method initializes jcb
this method initializes this
this method initializes j check box
this method initializes j text field
this method initializes j text field1
this method initializes this
this method initializes j button
this method initializes j button1
this method initializes this
this method initializes jcb
this method initializes j aceptar button
this method initializes j text
this method initializes j stock
this method initializes j nombre text
this method initializes jbtn add
this method initializes j text
this method initializes j table
this method initializes j descripcion text area
this method initializes j modificar button
this method initializes j stock
this method initializes j cancelar button
this method initializes j cancelar button
this method initializes j tipo combo box
this method initializes jcb
this method initializes j text field
this method initializes jcb
this method initializes j button
this method initializes jcb
this method initializes jcb
this method initializes j item pedido fin
this method initializes jcb
this method initializes jcb
this method initializes j table compra
this method initializes j table
this method initializes j aceptar button
this method initializes j modificar button
this method initializes j button
this method initializes j button
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j aceptar button
this method initializes j button
this method initializes this
this method initializes j text field
this method initializes this
this method initializes j panel
this method initializes j text field
this method initializes j text field nom
this method initializes j menu item logout
this method initializes j text field
this method initializes j button
this method initializes j panel
this method initializes j password field
this method initializes j password field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text
this method initializes j button modificar
this method initializes j text field num
this method initializes this
this method initializes j text field num
this method initializes j login
this method initializes this
this method initializes j logout
this method initializes j ficha
this method initializes j
this method initializes j
this method initializes this
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes j text field
this method initializes j text field nom
this method initializes j panel
this method initializes j button
this method initializes this
this method initializes j combo box
this method initializes j text field cod cliente
this method initializes j button
this method initializes this
this method initializes j table import
this method initializes j button
this method initializes this
this method initializes j panel
this method initializes j text
this method initializes txt password
this method initializes btn login
this method initializes this
this method initializes
this method initializes
this method initializes j
this method initializes this
this method initializes j
this method initializes j button1
this method initializes jb stop
this method initializes j
this method initializes j content pane
this method initializes j stock
this method initializes j
this method initializes j
this method initializes j
this method initializes
this method initializes
this method initializes j
this method initializes j menu item
this method initializes j menu item
this method initializes j menu item consulta
this method initializes j menu item
this method initializes j menu
this method initializes j menu item
this method initializes j menu item
this method initializes j menu
this method initializes j menu item
this method initializes this
this method initializes j
this method initializes j
this method initializes j menu item
this method initializes j menu item
this method initializes j jmenu bar
this method initializes j
this method initializes j cancelar
this method initializes j
this method initializes j combo box
this method initializes j combo box1
this method initializes this
this method initializes j
this method initializes j
this method initializes j text field
this method initializes j
this method initializes
this method initializes
this method initializes j
this method initializes j cancelar
this method initializes j text field1
this method initializes j stock
at startup create and show the main frame of the application
converts a given xml string to a xml content
returns the number of children of this node
sets the name of the
sets the value of the attribute
returns the explorer view
adds an error message to the frame
returns the file model
returns the
returns the menu model
gets the value of the property
adds a new frame to the desktop
sets the model
sets the standalone flag
tests the method get plugins
adds a new info message to the frame
adds a thread to the job
adds a process info to the progress bar
adds a temporary buffer to the list
returns the copy move buffer
returns the current directory
returns the current select buffer
returns the temporary buffer
confirms that a confirm dialog box is already confirmed
set the current directory
sets the launcher
runs the action
add a process to the list
returns the current frame
this method is called when the thread is started
returns the size of the desktop
returns the jframe that this container belongs to
returns a child with the given name
pops up a dialog box
returns an input stream for the given input stream
returns the local file
returns the magic number type
returns an output stream for writing to the file
returns the parent
sets the parent of this node
returns a object with the given name and value
returns an input stream to the specified log file
returns the local file
get the magic number type
returns the name of the
returns an output stream for writing to this socket
returns the path to the file
returns true if the file is a directory
returns true if the provider is valid
sets the launcher
sets the parent of this node
add ftp disks
remove the ftp bean
add ftp menu to the linux linux
adds a menu to the menu
returns a child with the given name
retrieves a list of all the records in the container
returns the local file
adds a listener to the list of registered listeners
removes all windows that have been selected
returns the magic number type
applies the zoom factor to the zoom factor
returns the name of the path
returns the size of the image
returns an output stream for the given ftp connection
returns the image view
returns the lst object of the menu item
returns the size of the image view
returns the name of the image
returns the component that is being edited
returns the maximum size of the view
returns the minimum size of the component
returns the preferred size of the image
returns the menu bar
refresh the view
sets the buffer to be used for the image
set the file to be used for the image
sets the zoom factor
returns the tool bar
check if the database is valid
adds a listener to the list of registered listeners
applies the zoom factor to the current font
displays the text in the text area
returns the file name
returns the preferred size of this component
sets the buffer to be used for the buffer
set the file to read the data from the file
adds a listener to the list of defect viewers
applies the zoom factor to the current font
sets buffer to the buffer
set the file to read the data from the
the main method of the application
returns whether this node is allowed to be
returns the child at the specified index
returns the number of child elements
returns the index of the node
sets the parent of this node
returns the shortcut
returns true if the component is a shortcut component
sets the shortcut attribute of the form object
compares this object against the specified object
gets the ef
returns a short description of this action
returns the hash code of this object
sets the file
adds a child to this element
returns the children of this node
returns the children of this code children code
returns whether this node is allowed to allow children
returns the child at the specified index
returns the child at the specified index
returns the number of childs of the receiver
returns the number of child elements
removes the component from the desktop
returns the index of the given node in the receivers children
returns the index of the given node
returns the parent tree node
returns the parent of this node
returns true if the receiver is a leaf
make the children node
make the children of the node
sets the done
returns the string representation of this object
the given code code object
returns a string representation of this object
returns true if the user has children
returns the child at the specified index
returns the number of child nodes in this group
returns the ftp ftp ftp server
get the index of the node
returns true if the receiver is a leaf
set the ftp ftp ftp ftp server
sets the object
performs the action
set the to the given array of
sets the frame
handles the action event
set the parameters for this shader
the launcher method
sets the parameters of this object to the given array of values
sets the object
returns the
returns the disk
add a recursive file to the list
returns the disk
returns the viewer
adds a message to the message
initializes the view
runs the action
make the given type
gets the current directory
invoked when an action occurs
returns the root of the tree
add a recursive search
returns the root of the tree
get the station of the atlas
initializes the applet
initializes the applet
returns the station root of the tree
returns the station of the station
invoked when the mouse button has been clicked pressed
sets the station to the default root node
starts the search
set the station to cd
sets the root of the root
description of the method
invoked when an action occurs
lists the properties of the properties file
invoked when an action occurs
set the list of file names to the file
adds a new entry to the list
returns the working registry
sets the
method set
returns the quality of the jpeg image
adds a shortcut to the desktop
returns the
returns the number of childs of this node
set the file to be
returns the shortcut with the given name
returns true if the is
returns the shortcut at the specified index
returns the index of the shortcut
returns whether or not the images should be shown on the window
returns whether or not preview images should be shown
sets the shortcuts shortcuts
returns the use drag and drop
gets the value of the use magic number for a local file
returns the use resume
returns the zoom factor
set the quality of the quality of the jpeg picture
compares two objects
compares two objects
compare two objects for equality
compares two for order
compare two objects for equality
sets the language
compare two objects
returns the image for the given file name
returns the image for the given byte array
sets the flag
sets whether the images should be shown on the button
sets whether the images should be shown in the
returns the ith
sets whether or not this component should use the drag and drop
sets whether to use the magic number of files
sets whether or not the should be resumed or not
sets the zoom factor
add an entry to the
returns whether the user wants to show in disk list
add ftp ftp ftp server to ftp server
returns whether or not passive mode is enabled
returns the number of child nodes
sets the host
returns the ftp ftp ftp ftp server with the title name
sets the password
returns the ftp ftp ftp ftp
sets the port number
returns the index of the ftp server
sets whether the user wants to show in the disk list
sets whether or not passive mode is enabled
sets the
sets the user name to the given user
returns true if the specified file is a abstract directory
accepts the specified file
accepts files
accept the specified file
returns true if the specified abstract pathname should be
adds a filter to the filter list
accepts a file
accepts zip files
this is the default implementation for the acceptance of
returns true if the given string matches the given regular expression
accept the specified file or directory
clears the filters
returns true if the given string contains a substring
returns true if the given string with the given string
matches a property against the given regexp
sets the search recursive flag
sets whether to use case sensitive
set the port number
sets the socket timeout
gets the socket timeout
returns the server name
returns the user name
gets the reply
gets the value of the reply message property
returns true if passive mode is enabled
adds a property change listener to the listener list
remove a property change listener from the listener list
sets the reply to the reply to the given reply
sets the reply message
sets the name of the server to use
sets the user name to the given user name
changes the line separator to the specified string
check if the given string is a reply
release the resources held by this thread
add a listener to the paint
returns the context render strategy
returns the relation icon
returns true if the cell at the specified row and column
make the view options to be shown in the view
creates the rule pane
returns a new
updates the style of the dependent attributes
generate the support for the given specific support
sets up the fixture for example open a network connection
tests that the dependency of a style
factory method for the
this method is used to convert the configuration to a
sets the draw parameters
returns the thickness of the edge
builds the strategies for the strategies
returns the thickness of the edge
returns the thickness of the edge
builds the strategies for the strategies
hook for subclassers to create the default editor model
make the drawing options
creates the layout options pane
returns true if the query is accept the query
returns the concept description of the extent
returns the connected concept
sets up the fixture for example open a network connection
test of accept method
calculates the radius of the node
calculates the radius of the node
set the expected number of visits
verify that the current thread is a valid dht
create a menu for the given key
create a menu bar
adds a menu to the given menu
adds a menu bar to the menubar
adds the given tool to the tool bar
sets the separator to be used as the separator
called when a view is changed
returns the action chain
describes the protocol
make a relation with the given relation id
returns the relation of the relation
returns the number of relations in the database
returns a string describing this strategy
describes the instance of the strategy
returns a relation with the given number of the
returns a string describing this object
returns the size of the
calculate the size of the relation
creates the relations
computes the size of the
describes the instance of the strategy
make a relation with the given relation id
add a relation to this relation
returns the ith relation sequence
returns the number of relations in the sequence
adds a new experiment to the list
returns the experiment at the specified index
returns the number of experiments in the experiments
returns a copy of the current concept collection
override to override this method to perform the
this method is called by the code code
returns the model of the model
returns the value of the model
returns the value of the button property
adds a parameter to the table
add the parameters to the table
returns the value of the nearest lower bound
sets the resolution
sets the value of the field
returns the value of the optimum optimum
set the value of value
h4 sets the value of the code code property
setter for property property change
returns the veto property change
sets the veto property change
logs the given information to the log
calculate the attributes of the given set of sparse
logs the given measurement to the screen
find the closure for the given code code
sets the lattice to the given lattice
calculate the length of the matrix
called when the animation is finished
calculates the arrow for arrow amounts
calculates the of the given
calculate the distance from the current one
starts the
find the closure for the given
search depth search for the search
returns a new concept collection
calculate the of the given attributes
finds the lattice element from the lattice element
returns the next edge in the list
returns true if there is a next edge
returns the next edge in this chain
returns true if there is more elements
initializes the stack variables and sets the stack variables
initializes the given iterator with the given indices
the given edge
this method returns the lattice element that is a new lattice element
computes the force of the lattice element
sets the force direct parameters of this
the given edge
returns the distance between the current lattice and the
computes the force of the given lattice element
sets the lattice to which this lattice
the
test for a fixed number
calculate the projected coordinates
calculate the rank of the concepts lattice
this method is called when the local machine is initialized
creates the concept info object
tests the linear ring and the linear ring
performs layout of the
sets the lattice to the current position
creates the concept info object
calculates the total number of rows in the model
this method is called when the local machine is initialized
this method is called by the probe to convert the matrix to
calculates the total number of rows in the model
returns a collection of all the elements in the given concept set
returns true if the time is done
returns the local concept info for the given concept
returns the low for the given concept
creates the concept info object
test that the is set correctly
resets the internal pointer to the initial state
indicates whether some other object is equal to this one
returns the size of the vector
calculate the normalization factor
forces the current to be set
this method is called after the component is removed
performs layout of the layout
returns the force distribution
returns true if the cellular automaton has been done
updates the coordinates of the concepts in the list
computes the current lattice order
returns the number of entities in the database
returns the number of in the
returns true if the specified value is an entity
sets the context
returns a short description of this action
calculate the for the given base
calculate the for the given base
test that the of a lattice is not full
returns the base of the given
computes the order of the relation
returns a set of all the lattice elements that are neighbors
returns the number of entities in the current session
returns true if the specified value is an entity
calculate the of the
factory method for instantiating the superclass chain
factory method for creating a new chain strategy
calculate the of the
returns true if the number of phases to be done
test for the code lattice code
returns true if the lattice contains the specified lattice element
returns the concept info object for the given index
indicates whether some other object is equal to this one
performs the layout of the layout
returns true if the current object is valid
returns a string representation of this object
sets the concept set
tear down the test
assign the lattice to the current lattice
returns true if the is done
returns a clone of this code code
returns a string representation of this object
performs a on the given bit set
performs a on the given
sets the set of values to be used for the given set
this method is used to atomically set the set of to
test method for
test method for
test creation with subtraction
test method for
returns the first in the current iteration
test method for
test method for
returns a hash code value for this object
indicates whether the specified bit is in the bit set
test of out upper bound method of class coordinate
returns the length of the
test method for
test method for
test the upper bound of the
puts an int at the specified index
removes the bit at the specified index
sets the relation to the relation
find min concept and type and attrib
sets the relation
resizes the array to the new size
returns true if the given set is a subset of this set
add an object to the list
add a new object to the list
returns a new
compares this object against another
determines whether the specified index is an output bit at the specified
print the differences between the two print writer
dump the differences between the current
returns true if the current page is valid
returns the upper bound of the upper bound of the
increments the number of reserved attribute count
increment the own obj by one
returns an iterator over the list of all the objects in this
returns an iterator of all the objects that have no own own
returns a string representation of this object
set the context
returns the lattice for the given
this method checks if the given dependency is in the same set
the junit setup method
test the conclusion of the
tests the confidence method
test method for
test method for
compares this code dep code to another code lattice code
returns true if the given set is a subset of this set
fires a relation changed event to all registered listeners
tests the code contains code method
set the expected call to the number of calls
find the lattice element whose components are associated with
returns the height of the current image
test method for
this method is used to convert the model into a
test method for
returns the number of edges in the graph
called when the user is being updated
resets the expectation
verify that the is correct
returns true if the component is valid
builds the build environment for the
sets the permissions for the given file
retrieves the binary data for the given artifact
move the image to the specified position
rotates the nearby elliptical around the vector
make the cursor
sets the delay in milliseconds to wait before the mouse cursor is
called when the user changes the command
advances the animation to the next
resets the animation to the next command
starts the mode
end mode
finish the animation
returns true if the animation has finished
opens the specified text
this method is used to escape the
interpret the given file
parse a string
parses the given line from the given line
process conditional tree
converts a file into a string
returns the word in the given word
returns the expr
handles the parameters
returns a number of the child
initialize the component
checks if the given object intersects with the given rectangle
returns the stub for the given target
returns the local partner
returns the item with the given identifier
returns the identifier for the given item
adds a schema to the list
returns the namespace alias for the given uri
creates a binding for the given name
create a message with the given parameters
create a service
returns the qname for the given qname
starts the server
stops the timer
returns the configuration
returns the scanner for the current scanner
returns the crypto manager for this crypto object
returns the alias for the endpoint name
save the rule to the given namespace
returns the resolver associated with the given id
returns xml representation of the object
returns a string representation of this event
processes the result string
decodes a character
set the buffer to be
generate a string for the given data
generate crc 32 apdu
register this object to be notified when the
this method is called when the user presses the
initializes the reader
updates the frequency freq of the poll
updates the configuration
stop the comm port
read the data from the stream
close the serial port
returns the xquery xquery for xquery interchange xquery interchange list
create a new context from a string
returns the index of the next unused index
removes the context code context code from the context
notifies the manager that the changes have changed
creates a property element
save the given object to the end of the list
cleans up the class
returns the object for the given config item
initialize the inspector
initializes the list of objects
initializes the given config item
load the configuration from the server
fills the superclass with the given object
fills the superclass with the given class
loads a class from the pool
saves a configurable object to an object
saves the configuration to the file
returns the query
get the schema persistency object
sets the catalog index
returns the catalog index
returns true if the is update
returns the response query
returns the qname of the type
get the documentation for the given locale
returns the short name of the given locale
returns the description of the given locale
returns the qname of the soap action
returns the message
returns the partner partner
returns the slot name
returns the response object that is associated with this message
returns the body of the message
returns the item
returns the catalog name
sets the property value
returns the value of the property
sets the index
returns the index of the
returns a connection to the database
returns true if the current page is embedded
returns true if the given property exists
returns the updated rights of the list
returns the class name of the driver
loads an internal rep of the internal rep
create an event
this method is called after the node is not already written
called after the parent element has been processed
called after the data is deserialized
called before the start of the instruction
after the begin of the element has been added to the
called after the end element has been reached
called after the end of an element has been end
end the document
returns the default locale of the user
returns the configuration
returns a short description of the servlet
stores a user to the user
generate the hash code for the given code code
this method returns the name of the specified dn
creates the endpoint options for the
returns the identifier of the given uri
returns a link to the item
this method is called when the user presses the
cancel the cancel button
adds a widget to the container
sets the vertical alignment of the cell
sets the horizontal alignment of the cells contents
flushes the buffer
returns the selected date
set the date of the selected date
starts the server
reloads the page
reloads the page
show the password dialog
updates the frequency freq of the current patients
perform the keystore
resolve the endpoint
returns the store
prepares a remote call to the endpoint
returns the config
returns the endpoint
create the empty
creates the empty keystore
loads the given file and loads the data from the given file
loads the keystore from a stream
save the file to a file
save the current state of the keystore
generates a key pair generator for a given algorithm
this method is used to create a x509 certificate by a given
returns the decrypted password for the given alias
imports a certificate from a file
returns the certificate of the given alias
returns the private key for a given key
sets the certificate associated with the given certificate
loads the from the xml file
finds the label of the current locale
returns the value of the key
returns the value of the key
returns the value of the specified key
returns the payload of this packet
create a description of the
escape the given field to the given string
remove the string from the string
checks if the database is valid
creates the tables
closes the result set
close the statement
close the connection to the database
create a service
init the service
destroy the service
validate the array for location sequence
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
gets the documentation for this item
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
whenever a new property is set ensure all others are unset
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
creates a query available for the given item
creates a query for the given entity
creates a new description instance
creates a new documentation object
creates a code query code object for the given
parses a response description
parse response documentation documentation
parses the given element name and returns it
creates a new object based on the given description and
creates a new object for the given entity
creates a new object for the given name
shows an error message
resolve the text field to the given text
resolve the text field to the given text
try to resolve the given text
disposes the frames and the windows
lists the current
sets the identifier
enables or disables the
updates the look and feel
creates a new empty empty label
creates a new client
select the node
initializes the partner authentication
adds a panel to the panel
exits the application
open the file
loads the dialog and show the dialog
saves the current file
save the dialog to the save file
saves the tree to the given file
centers the frame in the window
show the dialog
apply the current settings to the panel
reverts the current state to the current state
shows an error message
shows an error message
select the panel
sets the caret position
close the frame
adds the window to the window
reloads the keystore
displays the list of
saves the current file to the current location
description of the method
opens a new file with the given password and opens it
disposes the user interface
loads the xml file from the given file
saves the document to the given file
creates a new
shows an error message
shows the modal dialog
sets the list of message types to display
sets the message type
sets the level of the selected tab
sets the partners
set the list of partners to show the partner
called when the user presses the cancel button
handles the ok button
cancel the cancel button
show the modal dialog
shows an error message
shows an error message
displays the edit dialog
initializes the
shows an error message
shows an error message
called when the panel is changed
returns the current configuration
generate the
exports the given keystore to the given local host
select file for the given field
process the security
returns true if the given string is null or empty
save the keystore to the given xml document
adds an option to the list
removes the specified indices
move the element at the specified position
move down the index
sets the object at the specified index
removes the specified indices
adds the action to the list
removes the selected element from the list
performs the
move down the selected item down
select the selected panel
sets the selected status of the selected entry
toggles the checkbox state
checks if the given value is empty
sets the partner to the given name
sets the partner editable flag
sets the distinguished name of the user
load the fields from the database
show the modal dialog
sets the labels of the editor
adds a partner to the table
show the partner table
adds a string to the list
removes the items at the given indices
selects the panel
apply the gui widgets to the xml interchange xml element
apply the dialog panel to the xml document
applies the xml attributes to the xml document
fills the fields of the given table with the given index
fills the gui panel with the gui
fills the table with the data from the panel
fills the event panel with the given
process the communicator
load partner certificate
method called when the user selects the partner of the partner
fills the partner frame
sets the partner text to the partner
clears the communicator and sets all the listeners
clears the security profile
show the modal dialog
show the modal dialog
clears the text and the content
returns true if the text field is empty
starts the process of a runnable
opens the dialog
closes the dialog
show the dialog
called when the panel is changed
loads the configuration file
process the config file
process the interfaces
saves the configuration to the given file
insert an interface into the configuration
inserts an interface into the database
sets the alias of the alias
sets the class name
sets the reference to the reference
set the config to be used for the given config
load the configuration from the given xml element
saves the configuration to the file
cleans up the resources
returns the object for the given config item
initialize the given object
initializes the item
fills the superclass with the given object
distribute the service
set the context for the service
finish the current tar archive
get the configuration element for the given
destroy the service
creates the tables
initialize the configuration
destroy the service
returns the object associated with the given alias
initialize the service
loads a class from the class loader
auto generated getter method
auto generated setter method
auto generated setter method
test that the mock class is read correctly
test method for
a unit test for junit
test that the of a is set to the
test method for
adds a value to the target
sets the runtime exception to the runtime
adds a mock method to the method
prints the mock object to the system
prints the mock method to the standard output method
replaces the current call with the result of the given method invocation
replaces the current result with the given result set
resets the instance to its initial state
returns the method for the method
calls the call with the given result method with the same name
test method for
test method for
test that the is set correctly
checks if the class exists
adds a to the
returns the value of the
returns the value of the long
returns the value of the long field
gets the of the
returns the of the
sets the strength of this action
sets the value of the constant
returns the value of the
returns the value of the specified position
sets the value of this counter
open the file
reads a byte from the stream
close the stream
p automatically managed component initialization
returns the menu
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p return a reference to the scoped data bean
returns the login module
p return a reference to the scoped data bean
returns a
p return a reference to the scoped data bean
p return a reference to the scoped data bean
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
cleans up the editor
loads a sound file with a given filename
read a sound from a stream
returns a sound from the audio stream
returns an audio input stream for the given filename
sets the last updated
gets the value of the property
sets the
this method creates a new customer
gets the value of the product property
sets the product
create a membership object
saves the data to the given customer
sets the
gets the value of the property
this method is used to create a new guid object
saves the given payment to the database
sets the product id
saves the given inventory data to the database
gets the transaction line type
delete the message
set the category id
sets the
this method is used to create the object
sets the map of map
gets the value of the property
description of the method
sets the
sets the average cost
creates a new
returns the
this method is called when the backup of the backup is
saves the data to the given data
sets the
sets the date of the
this method is called when the user selects a product
this method is used to save the data in the database
set the print format
returns the photo set
sets the
gets the value of the property
sets the
sets the
gets the value of the property
sets the
this method is used to create the object
gets the value of the property
sets the
delete the message
this method creates a new object
this method creates a new photo set
this method is used to create the data object
saves the given photo set to the database
saves the data to the database
gets the value of the property
creates a new guid object
creates a new guid for the product
sets the
this method is called when the user selects a station
sets the
creates a new coupon bo
saves the data in the database
sets the
this method is used to create the backup object
this method saves the given airport
gets the value of the property
sets the
this method is used to create the discount bo
gets the is printed picture value for this request
set to true if the picture is printed
set the file name
returns the file extension for the file extension
set the file extension for the file
sets the phone number
sets the actual file
saves the given discount to the database
returns the file size
set the file size
gets the value of the property
sets the deleted attribute of the transaction object
gets the value of the property
sets the
insert a new backup of the given application
creates a new object
sets the print type
gets the discount bo
sets the photo type
sets the password
sets the discount bo
gets the value of the property
sets the date
sets the
this method is used to create the object
set the store
this method is used to create the object
saves the data to the database
set cust bo
sets the number of the
saves the given database to the database
gets the value of the property
sets the
saves the given service to the database
gets the value of the property
gets the value of the property
gets the value of the property
sets the
gets the value of the property
sets the
performs a transaction
returns the online sale
gets the value of the property
sets the
sets the value of the code for rent code
gets the value of the property
sets the
sets the last name
sets the price of the product
sets the transaction line list
returns the
sets the
sets the membership
calculates the total of the total of the stock
process the http code get code method
process the http code get request code
process the http code get code method
calculates the total of the average value of the totals
gets the return transaction value for this get transaction result
sets the return transaction
gets the value of the property
gets the value of the property
get a transaction template by userid
returns the exit status
returns whether isolated is isolated
returns the prevent system exits framing this
sets whether isolated is isolated
sets the method signature method signature
update the
sets the dao for the given person
adds a new contact to the contact list
login to the user

deletes the phone
set the
deletes the address
check if the bill is paid
builds the based on the person
returns the position position of the child at the given index
returns the value of the matrix v
returns the cross product of this vector with another
compute the norm of the vector
returns the normalized representation of this vector
returns the matrix or a result of a given matrix
subtracts all the values from this vector to the given vector
returns the coordinates of this
returns the coordinates of the
this method returns the identity matrix
returns the result of summing the
returns the column at the specified position
set the values of the given vertex
returns the point of the given point
set the array of all the vertices
returns the value of the column
this method returns the y coordinate of the given point
this method returns the object
set the values of the given model
sets the value of the ith field
returns the ith value
returns a copy of this
returns a copy of this matrix
returns the value of the given
returns the cross product of this
returns the matrix to the given value
returns the first of this matrix
returns the norm of the square
returns the result of summing the
returns the normalized representation of this matrix
returns the result of the multiplication of this matrix
computes the distance between this point and the given
returns the result of applying this to the given
returns the coordinates of this
returns the inverse of this matrix
returns the of the
solve the equation
print the system
compares the precision and returns the value of the
plane intersection point
returns the matrix to be subtracted
returns the matrix with the given matrix and return the result
returns the matrix with the given matrix
the given geometry
draws the line segments in the given region
sets the gl open gl gl state of the gl open gl
sets open gl gl texture state to gl
sets the draw
returns the number of points in the given lod
the point
print the geometry of the given gl
returns the geometry number for the given geometry
the
adds a geo to this object
the
add a drawable to the list
draw the curves
draw the cells of the list of clusters
draw the view to the display
draw the highlighting of the current scheme
draw the label of the label
draw the hiding of surfaces
remove the drawable from the list
sets the material to be used for drawing the material
returns the current plane
set the current plane
returns the geo element of the i th geo element
begin uml doc
returns the matrix of the current matrix
returns the label matrix for the current matrix
creates a new point point
returns true if the current node is visible
create a new point
draw the draw geometry of the pickable
sets the thickness of the line
creates a new point
draw the label of the label
creates a new point
returns the geo element
sets the geo element
called when the mouse is moved
handles the right press right press
returns the pick from the scene
rotates the camera to the right location
this method is called when the user releases the right
returns the point of the given point
sets the coordinate of the point to the given point
sets the coordinate system to be used for drawing the grid
sets the coordinates of the given geo point
returns the point of the given
sets the layer of this layer
creates a dependent point3 d
sets the matrix to be used for drawing the
a
returns the matrix
point3 d on a point3 d
point3 d on a label with the given label
returns the drawing matrix
returns the matrix to be used for scene matrix
returns the label matrix
sets the drawing matrix
a
sets the label matrix
returns the of the screen
a
initializes the matrix
returns whether this node is a pickable
returns the rotation matrix that is used to compute the rotation matrix
sets the coordinate system of the coord
returns true if this object is a pickable
set the alpha value
initializes the matrix
returns the xml representation of this object
returns the string representation of this object
resets the current matrix to zero
set the line dash mode
removes the geo element from the list
draws a segment
sets the coordinates of the given coords and sets it
updates the coordinates of the coordinates of the
mouse movement to mouse mouse move
set the corners of the current canvas
returns true if the grid has been set
draws a quad
sets the points of the polygon
creates a new
creates a polygon
creates a new coordinate system object
returns the coord sys
draws the sphere
set the coord sys
set the coord sys
draws a point on the screen
returns the coord sys
returns true if the system is made
add a point to coordinate system
returns the
returns the part of closed surface
returns the length of the unit
returns a copy of this object
sets the geo element of this object
returns a string representation of this object
starts the polygon and starts the transformation
compute the line plane
the line of two points
sets the coordinates of the line
sets the coordinate system of the given
sets the coordinates of the point and y
returns a point representing the point of the
returns the area of the area
this method is called when the is removed
updates the display
adds a polygon to the polygon
update the
returns the of the euclidian view
ends the polygon
resets the polygon and resets the matrix to zeros
draws a circle with the given coordinates
draw a circle in the given circle
draw a circle closed
sets the mouse location to the specified value
draws the path
this method is called when the view is in ortho mode
adds a dictionary to the dictionary
writes all the entries in the current directory
processes all the elements in the list
adds the patterns to the list
returns the number of images in the dictionary
writes the dash to the current line
writes the warning message to the output stream
returns a font reference to the font reference
reads all the data from the current file
reads the
adds a font to the font
returns the font for the given font
puts the specified key value pair into the map
removes the key and its corresponding value from this
returns the angle of the given angle
removes a rotation from the set
returns the tag associated with the given tag
returns the action at the specified code action code
reads four bytes from the input stream
sets the bounding box for this
writes an integer to the byte array
sets the value of the boolean property
sets the value of this field
sets the value of the field
sets the value of the date field
sets the value of the type
sets the value of the val
sets the value of the field
sets the value of the field
sets the value of the field
sets the value of the field
sets the value of the field
hold the argument to the arguments
adds a rule to the rule
adds a rule to the rule
adds a pattern to the given pattern
returns the number of precision
returns the extra info pointer to the pointer
this method is used to set the extra information
returns true if this is a int
convert a big decimal to a string
dumps the debug info to the output stream
set the local to the given value
set the local to the given value
set the local to the given value
set the local to the given value
add a field to the constant pool
add a field to the field
add a field to the field
set the local to the given value
set the local to the given value
set the local to the given value
set the local to the given value
set the local to the given value
add a new load to the
returns the value of the code or param code constant pool object
set the local to the given value
wrap the object to a scriptable object
adds a new to the
returns the id of the object that is associated with the given
returns the id of the object associated with the given id
adds a new constant to the stack
returns the value of the object with the given id
adds a new to the stack
set the value of the id field
returns the script stack trace
writes the contents of the receiver to the output stream
returns a message with the specified locale
returns the next pseudorandom uniformly distributed int value
generate a random integer value uniformly distributed between
generate a random long value uniformly distributed between
generate a random integer value from the specified range
generate a long value uniformly distributed between
generate a gaussian random gaussian gaussian gaussian gaussian gaussian gaussian gaussian gaussian
generates a random value for the poisson distribution
returns the next available value
loads the data from the data source
loads the data from the given file
creates a data adapter from the given data object
returns the next available digest
returns the next replay in the file
set the seed of the random number generator
sets the seed of the random number generator
sets the whole number format
sets the whole number format
p return the value of the fraction of this fraction as a
sets the denominator format for this format
sets the numerator format
rescale the normalization
set the y state
shifts the current time
store the current time in the current time
scale the current jpg image
estimate the error value for the given error
reset internal state to the initial state
returns the value of the
sets the starter
computes the grow factor for the given
returns the time in seconds
returns whether the output is required
sets the window size
increments the values of all the values in this array
checks if the current instance is empty
checks if the current instance is empty
sets the quantile function
returns the sum of all the errors in the current
returns the matrix
computes the correlation coefficient for the dataset
returns the covariance matrix of the covariance matrix
checks if the matrix is a data matrix
adds the observation x y to the regression data set
sets the y coordinate array
sets the x coordinate of the
removes the data from the regression data
validates sample data
checks if the covariance data is compatible with the
returns the sum of squared errors in the
checks if the given array is in the array
returns the slope of the
checks if the given code array code is filled in
checks if the given array is positive
returns the mean std standard deviation
checks if the given code input code array is a negative number
checks if the given code input code array is an array
returns the significance level of the slope
adds a value to the dataset
set the distribution
adds a value to this property
parses the input string and returns the result
sets the imaginary character
sets the imaginary format
compute the cumulative svm function
sets the real format
updates the of the
updates the cost of the
add a new to the graph
returns the real subtraction of this matrix
compute the key for the given row and column
sets the distribution
compute the values of the vector
parses the string and returns the result
check if the row index is valid
checks if the given matrix is a valid index
check if the matrix is an addition compatible compatible object
check if the matrix is a compatible compatible matrices compatible
check if the is compatible with the given matrix
checks if the value is zero
sets the epsilon
optimized method to add a map to the map
check if the index is a
checks if the given dimension is in the array
returns true if the matrix is symmetric
returns the distance between this node and the
the
returns the of the given
returns the determinant of this matrix
returns the maximum number of entries in the given
the block
flip the flip flop
counts the number of values
returns true if the given is a
returns true if the given simplex is a optimal function
the of the
returns the number of variables in this
initializes the variables
returns the basic basic row number
discards all
updates the of the
returns the of the
set the solver to use
compute the values of the vector
returns the value of the given double
compute the linear of the polynomial
returns the result of the computation
returns the value associated with the given key
returns true if the key is contained in the cache
removes the mapping for this key from this map if it exists
sets the expansion mode of this node
sets the initial capacity of the pool
returns the value for the specified key
returns the current population with the given initial state
returns the next generation of the population
removes the mapping for this key from this map
constructor that creates a list of chromosomes
constructor that creates a new population list
returns the message with the specified locale
set the shape of this shape
sets the scale parameter
sets the alpha value of this color
sets the beta parameter
returns the value for the x coordinate
sets the numerator degrees of freedom
modify the denominator degrees of freedom
returns the cdf for this point
sets the number of successes
sets the size of the population
modify the degrees of freedom
returns the real matrix
sets the scale of the image
sets the sample size
sets the number of trials
returns the value for the x axis
sets the probability of success
sets the gamma distribution
sets the mean
set the standard deviation of the gaussian
returns the probability of the distribution
returns the probability for a poisson distribution
sets the normal
sets the mean
returns the probability to the poisson distribution
sets the number of successes for this distribution
this method returns the probability of the distribution
returns the alpha value of this code vector code
returns the delta of the inclination vector
parses a string into a
returns the of the
returns the of the
returns the l f l f
returns the resource url
returns an input stream for reading the current resource
sets the discover resources
returns the discovery of the resource
returns the normalized direction vector
returns the orthogonal plane to be used
adds a new resource name to the list of discover
get the current point of the rotation
set the dictionary
get the rotation angle
find a resource name for a given resource name
returns an iterator for the given resource name
find a resource with the given name
returns an iterator for the given resource
returns a resource collection for the given resource
sets the class loader
adds a class loader to the loader
find a resource name for the given resource name
returns an iterator for the given resource name
returns an iterator for the given resource
set the class loader to be used for the given class
add a class loader to the given class
returns true if the given class loader is ancestor of the given
returns the system property for the given property name
returns the classloader used to load the context
returns the system class loader to be used for resolving
loads the class loader
computes the invariants
intersect the conic and the given point and
set the coordinate system to be used as a geo point
sets the points of the polygon
sets the points of the polygon
removes a segment from the list of segments
creates a segment
sets the array of segments to be used for the given array
set x y z coordinate
calculate the distance squared distance squared between this point and the point
evaluates the expression
a simple way of to make fit the embedded
sets the value of the gaussian gaussian function
returns true if coord values are set
set the region of the geo point
returns whether this jdofield has a polar parent
initializes the start point of the specified point
returns true if the redo is possible
returns the string representation of this object
checks if the given string is equal to the given string
returns the xml representation of the
register a new
adds the algorithm to the given set of parameters
returns true if the construction of the construction of the construction
compares this construction to another construction
returns the string representation of this object
returns the string representation of this object
translate the vector by the given geo point
initializes the
the diameter of the polygon
translate y coordinate
sets the file name
returns the
returns the maximum parameter value of this parameter
returns the minimum parameter value of this chromosome
evaluate the curve at the given parameters
evaluate the boolean value of the function
initialize the conic and all points in the
initialize the poly with the given
returns the maximum parameter value of the kernel
returns the minimum parameter value
returns all children of this set of all children
returns true if the experiment has a division by variable
returns the list of all controllers that are not a list of
returns the default geo element of the given type
replaces all the values in this map with the given geo element
creates a polygon
set the value of the
returns true if the function is a polynomial function
returns all subnodes of the tree
sets the interval between two parameters
replaces all the children of this object with the given geo element
set the value of the derivative function
sets the expanded state of the node
sets the integral of the integral
translate the given geo point to the given vector
translate the given vector to the vector
returns the string representation of the
adds a number to the number
returns the list of all the elements in this list
builds the construction
returns the element at the specified position in this list
clears the construction and sets the values of the parameters
compares this construction to another construction
returns true if the matrix is possible to be
returns all independent predecessors of the given key
returns an array list of free input points for the
returns construction element at specified index
intersection of two points
returns the xml representation of the object
returns the
returns the of the
returns true if this conic is possible to support the
initializes the undo manager
returns the free input points of the current
returns the label for the given label
mirror points mirroring on cartesian coordinates
add a geo to the table
registers a listener for the event
polar coordinates
removes the label geo element from the list
returns the string representation of the current
removes a number of random numbers from the
sets the step to the next step
makes this conic a circle with midpoint m
sets the expression of this expression
sets the conic of this circle
returns true if the constant pool is a constant
evaluate the function
update the number of random numbers
updates the construction and sets the current position in the
returns the description of this object
returns true if this is an implicit valued command
returns the derivative of this function with the specified
resolve the current geo element
returns the integral of the integral function
returns the variable name for the ith variable
returns the expanded function
sets the abscissa of the conic
checks if this prob geometry has a constant
returns a copy of the wrapped tree node except the default
applies the value to the left property
applies the right operation to the right
returns the matrix columns size
returns the number of rows in the matrix
sets the points of a geo point
translate the given vector to the given vector
replaces the current node with the given expression
returns the spreadsheet of the spreadsheet of the spreadsheet
this one of the points angle points
parses the expression and returns it as a expression
angle from v
angle of angle
returns true if the x y coordinate is hit
adds a geo to this polygon
returns the hits of the given result set
returns the other hits
returns the point hits
returns the top hits
the map of points in the geo point
returns the string representation of the symbolic representation of the
returns the xml representation of the
parses the expression
x axis tick
returns whether or not the label has a label
y axis
parses and returns the equation
parses a node and returns the result
build the of the
transforms the given graphics object to the given affine transform
returns the bounds of the bounding box of the current
returns true if geo geo geo is a geo element
checks if the value is equal to the given value
adds a geo to this graphics object
returns true if the euclidian view is visible
circle conic and polygon
circle points from a point
circle with midpoint m
returns a point of the column label
construction of construction construction construction
draw the paint to the specified graphics object
construction with label construction
creates a new point
creates a new point point
covariance list list
returns true if the label is a label value
returns the defined defined of the specified geo element
creates a dependent boolean dependent representation of the given geo expression
returns true if geo depends on geo element is set
creates a dependent function of a given label
returns the moved geo point
returns a list of all the points in a given
creates a dependent text node with the given label
creates a dependent vector with the given label
returns the derivative of this function with the given label
product list list list list list list
split a line
line distance
distance from geo point p
distance from g
a ellipse to a given point
removes the algorithm from the given algorithm
the cas
evaluates the interpreters expression

expand the expanding of a geo function
compute the factor for the function
returns true if the background image has the background image
returns true if the trace is tracing
returns the coefficient of the coefficients
format the x value
convert a string to a string
sets the label of the given label
returns the value of the literal as a string
returns the value as a string
updates the label and the label
returns the
set the mouse mouse movement mouse movement
returns the evaluator node evaluator
flush the stream
sets the point style of the current point
returns the macros macro
the method not supported
set the color depth of the
convert screen coordinate x to screen coordinate x coordinate
converts screen coordinate y to screen coordinate y coordinate
converts the screen coordinates to screen coordinates
converts a double to a screen coordinate
converts a coordinate to screen coordinate space
integral f x f f f f f f f f f
intersect the line with the line and line
writes the point and the given string to the output buffer
list list list
returns the expression for the given expression
returns the string representation of the given
evaluates the given expression
returns the error message that the error occured
returns the preferred row height for the given row
inserts a new row into the table
insert a new row at the given row
handles the action event
sets the command
this method is called by the
returns the value of the nth row
returns the default file path
returns the default image path
handles the key events
returns the default locale for the current locale
sets the default application for the
loads the file list from the file
this method is called when the application is
saves the current image to the default file
save the default locale
saves the file list to the file
saves the current application to the given xml
invoked when an action occurs
returns true if the x y is equal to a given x
sets the label of the help button
adds a new history entry to the history
parses the specified string and returns the
called when the user selects the button
adds a perspective to the list
initializes the applet
remove the perspective from the list
show the save dialog
called when the button is pressed
closes the panel
removes the frame from the frame
show the panel
parses a label and returns the label
updates the text of the popup menu
updates the panel
update the title of the application
updates the title bar
show the window
downloads jar files
sets the labels of the panels
this method is called when the panel is dragged
disables the component
the event to the given event
counts the number of characters in the specified character
returns the layout
parses the value from the vector
parses a special node
returns the default toolbar string
applies the settings to the current locale
this method is called after the rules is made
called after the user has to be updated
returns the codebase url for this plugin
returns true if the x axis is zero
invoked when an action occurs
updates the menu bar
updates the menu
updates the angle of the menu
updates the menu menu
updates the menu
updates the selected style coordinates
updates the latex style
attach a view to the view
inits the gui
set the labels to the current language
returns the of the
translated a floating point description
detach the view from the view
this method is called when the construction of the is about
invoked when an action occurs
writes the graphic control extension to the output stream
writes the image to the output stream
write the header to the output stream
write the ext
encodes the image
writes a short value
writes a string to the output stream
returns the url
the
this method handles the event handler
returns the current mode
sets the mode of the current mode
line with line and line
handles the throwable
returns true if the event is an event
returns the event handler that is used to create the event queue
waits for the event to be done
line with midpoint points
method to edit a cell at the specified row
invoked when the mouse cursor has been moved onto a component
listens for changes to the check box
locus label at given label and point
looks up a label at the label
listens for changes in the box
load the image from the given point
listens for the selection of the item
returns the help tool for the given tool
returns the editor to be displayed in the context
median median median median list of data values
point p
listens for changes in the list
a segment
listens for images
the
listens for the check box
initializes the translated commands
shows the construction protocol
show the pad pad popup
label the label of the geo element
shows a dialog that the dialog should be visible or not
show the options dialog
show the properties dialog
show et
steps the current step and sets the current step to the next
invoked when an action occurs
show the slider
this method handles events from the superclass
returns a geo object with the given label
line point with line line
line of the line
updates the layout manager
a line of points
save the file to the specified file
updates the current step
returns the current step number
the file to the url
returns the last step number
removes the given geo element from this group
sets the labels to the current node
sets the label for the given node
updates the object
insert geo element into geo object
listens for changes in the list
point of a geo point
saves the macros to the given kernel
inits the gui
point point in region
listens for changes to the selected box
function function for function
sets the font size of the axes
function from d list
switches the current step to the previous step
product list list
sets the font size of the font
invoked when an action occurs
sets the font style of the font
adds a filetype dot extension to filter against
returns the extension portion of the file
invoked when an action occurs
sets whether the document should be ignored
updates the font to be used for the font
applies the settings to the panel
closes the dialog
sets the labels to the current settings
show the tab
update the gui
clears the tree
returns the path to the geo geo geo geo geo geo geo
returns the path to the tree path
removes the selected geo element from the list
description of the method
sets the current language
updates the trace selection
sets the labels to the default values
sets geos selected in the geo art list
set the listener to be notified when the selection mode is selected
sets whether the construction of the construction of the
updates the list of all the nodes in the tree
sets the labels of the dialog
updates the tool bar
increases the capacity of the table
code put value code is used to put the value in the
removes the object associated with this key
removes the specified key from this map
clears the internal state of the
row number
clears the cache
returns a clone of this entry
returns the key
returns the value of the attribute
set the value of this mutable string
compare the current object with the given object
returns the hash code of this object
sets whether the view title bar should be shown
returns the next element in the iteration
removes the last element returned by the iterator
code put code adds a new key to the buffer
listens for changes in the list
returns a clone of this object
point to the point of the point
sets the font style of the font
returns a string representation of the kernel
returns the xml representation of the file
returns the xml representation of the file
write the to the given file
translate a command
adds a jar file to the classpath
returns the download status message
returns the local jar directory
returns whether the given class path is currently in the classpath
loads the text file from the given text
action listener for the action listener interface
returns the class path manipulator
evaluates the of the given math command
listens for changes in the list of visible guis
simplifies a function
update the tabs
invoked when an action occurs
handles the pane to handle the pane
handles the perspective
unpack a point from p p p p p p p p
stereo the function
returns the label text of the specified geo element
this method is used to pass a text to a point
translate a vector label to a vector
list list with list of points
description of the method
orthogonal vector of line
orthogonal vector of plane
overwrite to set variance list
vector with cartesian coordinates and v
set the un bind bind
unbinds the symbol
returns the symbol of the algebra
returns the of the current object
returns the identity matrix
returns a specific algebra disjunction algebra of a symbol
add a new to the
returns a vector containing all the vectors
returns the equations
add an element to the list
adds a new to the end of the list
adds a new equation to this army
adds a new equation to the list
adds a new equation to the equation
adds a new equation to the equation
returns a new algebra representation of the given
returns the info for the specified orientation
this method returns the effective alloc plan info
returns the info that should be used to compute the
this method returns the effective alloc of the
returns a query for the given generator
returns the term term of the term
add a gen term to the given term
removes the given term from the list
delete the current record
deletes the given code transfer info code from the
this method is used to convert the given string to the
returns a info object for this
builds a info object with the given
this method is used to determine if the is already
generates a for a
returns the number of in this product
removes the given vector from the list of
this method returns a list of all the elements in this intersection
returns the difference between this and another
returns a list of all the that are currently in this
returns the focal terms
apply a rule to the
returns true if the term is a effective term
computes the of the current object
returns the init instruction for this instruction
returns the of the structure
resume the
returns a symbol of the given symbol
returns a vector of of the current
get the sex of the given term
resets the counter to its initial state
returns the for the specified element
returns true if the first two productions is a recursive function
this method is equivalent to
this method is equivalent to
adds the specified component to this component
deep clone this object
clones the object and returns a clone of this object
this method is used to calculate the product of the product
generate the for the
returns the term of the given term
expands the list of types
checks if the given arrow symbol matches the one
returns true if this arrow is a arrow
returns true if the product is equivalent
equivalent to mult mult
returns the minimum size of the component
returns the preferred size of this component
compares this algebra to another object
initializes the
sets the arrow type
sets the value of the symbol
returns the value of the value property
returns the value of the given algebra
returns a map containing the key maps
unbind the current transaction
returns true if the matrix is identity element
maps terms of terms to terms of the term
returns true if the algebra is a gender
maps the given string to the given value
returns the term for the term
set the algebra of two
returns the algebra of the algebra of algebra predicates
returns the term of the term
set the algebra of a given algebra
returns the term of the given term
returns true if the generator is a generator
returns the generator
returns the symbol type for the symbol
set the algebra to the algebra given the value
returns sex of the current term
sets the algebra of the algebra
returns a vector containing the of the symbol
returns a clone of this algebra of variables
returns the opposite gender of the current algebra
unbinds the symbol table
returns the values of the list
get the focal element for the given position
returns whether the receiver has the focal elements
returns the identity matrix
add a new to the
returns the split of the given type
returns a vector representing the split plane vector
return a for the given input
returns true if the given equation is a equation
adds a new equation to this unit
returns the of the given equation
adds a new equation to the left
creates a new equation
adds a new equation to this algebra
adds a new equation to this algebra
creates a new equation
remove sex of a
at startup create and show the main frame of the application
animate this node to its initial state
flips the vector to the one flip of the surface
render the graphics object to the screen
renders the to the given graphics
renders the layers
moves the x y position to the specified point
updates the maximum size of the window
returns the x coordinate of the upper left corner of the
returns the value of the code min y code property
render the sprites of the current view
draws the
animate the sprites
adds a new layer to the layer
adds a new layer to the frame
adds a tile layer to the layer
adds a sprite to the layer
renders the current camera
draws a sprite
flip the
change the screen size to the given screen size
moves the camera to the given x value
set the animation
renders the camera to the given graphics
set the delay in the animation
initializes the window
sets fullscreen mode
returns the java class for the subject of the given namespace
executes the loop
destroy the worker
returns the next worker to the pool
creates a new worker
returns the next ready worker thread
returns the forced force
returns the building object
returns true if the door is centered at the center of the
return the of the
returns the
sets the email
this method is called to initialize the book
reset the properties to defaults
initializes the
returns the author of this item
returns the title of the title
sets the author of the item
sets the title
returns the new price of the flight
sets the item
sets the isbn
returns the expiry date
sets the expiry date of the server
sets the new price
sets the current publisher
returns the edition
sets the image
gets the sell price value for this candle
sets the edition
sets the sell price
sets the owner of this user
sets the module
sets the version of the version
sets the hashed password
sets the email
sets the firstname
sets the lastname
returns the value at the specified row and column
updates the
sets the user in user condition
set the class name of the class
sets the correct center of the panel
sets the correct center of the panel
deletes the user selected
execute the command
sets the condition edit to the current one
executes the add operation
executes the service edit
sets the window close event
sets the key
set the key to the
make the panel
resets the properties to the default values
refresh the list of
returns the service interface
returns the resource with the given key
called when the observer is changed
updates the view
make the panel
cancel the cancel button
exits the application
returns the settings object for this editor
returns the choice with the given name
adds a choice to the list
replaces all the fields in the given string
runs the command
remove the current settings from the project
starts the application
stops the timer
execute the specified command
returns a string representation of this object
returns a string representation of this object
adds an option to the list
this method returns a string representation of this object
get the option with the given string
returns an input stream for the given filename
get the of the
runs the protocol command
count the number of children
installs the given code url code to the specified code url code
returns the proper child for the given element
loads all packages from the packages list
checks if the given file exists
checks if the given package name exists
overwrite this to start the given file
inserts an element into the buffer
returns the number of elements in this list
at startup create and show the main frame of the application
build the parser
process the http code get code method
sets the visibility of this window
shows a dialog box
reports on the outer service
sets the model of the node selected
process transformation process
initialize the servlet context
this method is called when the user releases the window
returns the type of the given image
this method is called when the user clicks on the button
this method initializes j progress bar
this method initializes download
this method initializes
this method initializes exit button
this method initializes download button
this method initializes this
this method initializes j content pane
this method initializes j button
this method initializes cancel button
this method initializes current language text field
stores the specification to the given code file code
returns the results as a string
create a lucene index file
invalidates the cache
removes the specified code v code from this linked list
creates a sort field entry
creates a sort sort sort sort sort sort seperator
compares two entries for equality
compare the two two objects
returns the number of hits
sets the hit count
returns the facet facet for the specified name
returns the number of hits
returns the number of facets that have been added to the list
sets the number of hits
set the facet spec for the given facet spec
returns the total number of documents in the document
returns the facet spec for the specified name
set the total number of documents in the document
adds a facets to the facets
adds all facets to the facets
sets the hits
sets the query
returns the current document id
adds a new selection to the list
returns the selected code table code
adds a sort specification to this sorter
sets the sort criteria
returns the order facet
sets the order by attribute of the sort object
returns the maximum number of
returns true if the property is strict
sets the maximum number of iterations
set strict mode
returns whether the selection is currently selected
sets whether the selection should be expanded
returns the depth of the tree
set the depth of the node
set the values of all values in the set
returns the selection operation
sets the selection operation
makes a bit set in the current bit set
load the field data cache from the given cache field
returns true if the selection is editable
test the of the
returns the entity by the given id
get the current principal
returns an account entry by its id
inserts an entity into the database
returns the project with the given id
returns the user specified property
returns the entity by its id
gets the entity by id
insert an external activity into the database
update the entity
deletes an external activity from the database
returns true if the file is finished
this method deletes an existing activity from the database
get the activity by id
update the state of the event
insert an external activity into the database
this method is called after the entity has been deleted
add a field to the table
returns the of the
convert date to date format
returns the id of the
returns the company id
returns the quality of the category
returns the user doc category id
this method returns the path to the upload file
returns the path to the report
returns the number of objectives of the child
returns the minimum number of objectives of all the child nodes
returns the maximum number of child objectives
returns the date the time was updated in milliseconds
this method returns the property value
returns true if the is using external style
returns the root directory of the root directory
returns the host mail address
returns the port to use for the mail
returns the username of the mail
returns the mail password
returns the admin requires authentication
returns the root path of the root directory
returns a file path for the given file
checks if the given point is active
get the call method for the given method
returns the property value for the given property name
initializes the mail
returns the of the given contact
populates the cell with the given content
returns the line of the line
edit the user
creates a new credit card
returns the detail of the portlet
save the current page
delete the credit card page
returns a string ratio of the current form ratio values
returns a string representation of the list
returns a string containing the navigation results
resets the list of the search
search for the navigation results
returns true if the title is selected
returns the detail of the portlet
create a new
returns the detail record
save the current state of the entity
delete the financial institution
returns the value of the code financial ratio selected code property
returns the stack trace of the current stack trace
fills the stack trace with the given exception
changes the mode of the log
orders the given list of items to the date
calculates the total bill of all peaks
calculate the total traded account
returns the detail of the
creates the selected date
edit the user
create a new entry in the database
edit the user
save the current item
returns the detail entry for this edit
delete the item from the database
save the notebook
delete the account
returns the detail entry for this edit
returns true if the account entry is selected
returns true if the bill is selected
initializes the servlet
returns the version of the application
this fixtures code
returns true if the user is available
returns whether the user is available
checks if the account is already available
returns true if the user is available
returns whether the user is available
returns whether the user has been available
create the new date
returns the detail record
save the current state of the
delete the date
returns whether the position is selected
create a new link
returns the detail form of the user
save the
delete the collaborator
returns true if the collaborator is selected
creates a new interaction type
returns the detail record
save the current state of the entity
delete the current entity
delete the
returns whether the interaction type is selected
creates a contact tags
show the contact tags
remove contact tags from the contact list
creates the position tags for the position of the tag
returns the label for the current position
remove the position tags from the list
returns the html for the department tags
show the department
removes the department tags from the department
creates organization tags
show the organization tag
delete organization tags
returns whether the user is available
returns whether the geolocation permission is available
checks if the user has been available
creates a new date
returns the detail of the user
save the current entity
delete the current entity
returns whether the tag is currently selected
creates the user interaction
returns the detail form
saves the current state of the entity
create a new role
delete the current page
edit the role
delete the roles
creates a new costs attribute
returns true if the currently selected element is selected
returns the costs of the delivery date
p delete the costs of the current record
returns true if the user is available
checks if the user is available
checks if the user has been available
inserts a new offer
show the detail table
save the interactions of the diagram
delete the offer
returns true if the offer is selected
returns the detail of the user
returns true if the user is available
returns true if the user is available
returns true if the user is admin user
returns true if the user has been available
search contacts from the database
create the contact
returns the detail record
save the organization
delete the contact
creates a new department
returns the detail form of the user
save department to the database
returns true if the contact is selected
delete the user
returns true if organization is selected
creates a new categories
edit the categories
this fixtures code
delete the categories from the database
gets the change change value
creates a list of versions of the current version
edit the versions
returns the value of the code change new value code
removes the versions of the current document
returns true if the user can create the
checks if the user is available
checks whether the user has been available
returns true if the user is available
creates a new category
returns whether or not this user is a edit
returns the detail of the portlet
saves the current document to the database
returns true if the user has been available
delete the current document
create the status of the user
returns true if the document is selected
returns the detail form of the user
save the current page into the database
delete the date
returns true if the is selected
creates a new user
returns the detail of the portlet
this fixtures code
save the current page
delete the user
returns whether the request holiday is selected
this method is called when the letter is clicked
gets the change change value
returns the value of the changed new value
creates a new navigation project
returns the detail view of the portlet
save the current page to the database
delete the current project
returns whether the holiday is selected
creates a new interactions model
edit interactions
removes the interactions element from the
creates a new navigation page
returns the detail of the portlet
save the current page to the database
delete the user
returns true if the user selected the current setting
creates a new project
returns the detail of the portlet
save the current project
delete the project
returns true if the project is selected
create the idea to be used in the
returns the detail record
save the current project
delete the current project
go to the current document
returns true if the idea has to be selected
resets the password
creates a new department
returns the detail of the user
save the current department
returns true if the permission is available
delete the user
returns true if the selected department is selected
returns true if the user is available
checks if the user is available
checks if the user has been available
creates the user
returns the detail of the user
save the current transaction
delete the user
returns true if the user is selected
returns true if the user is available
create the organization
returns the detail of the organization
sets the date selected date
save the current indi
delete the user
returns true if the is selected
called when the selected project changed
gets the selected organization
returns true if the user is available
create an instance of date
returns true if the user has granted or
returns the detail of the portlet
save the current state of the database
checks if the user has been available
delete the user
checks if the user has been already added to the database
returns true if the objective is selected
save the current activity
delete the selected activity
lists the selected items in the list
returns true if the activity is selected
returns true if the activity is selected
sets the week end cell class
p return the value of the code week end cell class code
sets the working day hours
p return the value of the code working day hours tt attribute
set external activity duration
this fixtures code
this method is called when the object is persisted
this method is called after the object is created
this method is called when the mouse is released
computes the for the given
returns the name of the select statement
returns the name of the object
returns the connection context
initialize the engine
returns the entity name for the given name
this method is used to commit the transaction
this method is called when the user is being posted
returns the namespace name of this component
rolls back the current transaction
returns the components name
returns a string representation of this object
returns the for the given code second code
prepares the view for the current vote
forget the current object
returns the shared connection context
returns the connection context
creates the provider support provider support provider
returns the elements in the list
create the map of element map
returns the map of element
returns the declaration of this declaration
get the set of entities for the given service
this just records the information
this adds separators for editor additions to the tool bar
the framework calls this to see if the file is correct
this method is called when finish button is pressed in
returns true if the current page is complete
perform the action
this populates the pop up menu before it appears
handles activation of the editor or its associated views
handles what to do with changed resources on activation
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the is abstract feature
this specifies how to implement
this returns
this returns the label text for the adapted class
this handles model notifications by calling
return the resource locator for this item providers resources
this returns
this returns the label text for the adapted class
this returns the label text for
this adds a property descriptor for the name feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the namespace feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the kind feature
this adds a property descriptor for the text feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the separator feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the open feature
this adds a property descriptor for the close feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the is error feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the open feature
this adds a property descriptor for the close feature
this adds a property descriptor for the separator feature
this specifies how to implement
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
this returns the label text for
this specifies how to implement
creates a new adapter for an object of class
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this adds a property descriptor for the initial priority feature
creates a new adapter for an object of class
this returns the label text for the adapted class
this handles model notifications by calling
this specifies how to implement
creates a new adapter for an object of class
this handles model notifications by calling
this adds to the collection of
this returns
this returns the label text for the adapted class
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the language feature
this returns
creates a new adapter for an object of class
this returns the label text for the adapted class
this handles model notifications by calling
this specifies how to implement
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this returns
this adds a property descriptor for the keyword feature
this returns the label text for the adapted class
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this handles model notifications by calling
this adds to the collection of
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this specifies how to implement
this adds a property descriptor for the context feature
this returns
this returns the label text for the adapted class
this adds a property descriptor for the language feature
this handles model notifications by calling
this returns
creates a new adapter for an object of class
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the multiplicity feature
this returns
this returns the property descriptors for the adapted class
creates a new adapter for an object of class
this adds a property descriptor for the priority feature
this returns the label text for the adapted class
this specifies how to implement
this handles model notifications by calling
this returns
this returns the label text for the adapted class
this handles model notifications by calling
creates a new adapter for an object of class
this adds to the collection of
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the kind feature
creates a new adapter for an object of class
this adds a property descriptor for the text feature
this adds a property descriptor for the default context feature
this specifies how to implement
this adds a property descriptor for the include feature
this returns
this specifies how to implement
this returns the label text for the adapted class
creates a new adapter for an object of class
this handles model notifications by calling
this adds to the collection of
this returns
this returns the label text for the adapted class
this returns the property descriptors for the adapted class
creates a new adapter for an object of class
this adds a property descriptor for the is expression statement feature
this handles model notifications by calling
this adds a property descriptor for the kind feature
this specifies how to implement
this adds to the collection of
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
this returns
this returns the label text for the adapted class
this returns the property descriptors for the adapted class
this adds a property descriptor for the context feature
creates a new adapter for an object of class
this adds a property descriptor for the language feature
this specifies how to implement
this specifies how to implement
this returns
this returns
creates a new adapter for an object of class
this returns the label text for the adapted class
this returns the label text for the adapted class
this handles model notifications by calling
this handles model notifications by calling
this adds to the collection of
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this specifies how to implement
this returns
this adds a property descriptor for the text feature
this returns the label text for the adapted class
this adds a property descriptor for the ignore case feature
this handles model notifications by calling
this returns
this adds to the collection of
this returns the label text for the adapted class
this handles model notifications by calling
this returns
this returns the label text for the adapted class
this returns
this returns the label text for the adapted class
this returns the property descriptors for the adapted class
this adds a property descriptor for the text feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
creates a new adapter for an object of class
this specifies how to implement
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this adds a property descriptor for the prefix feature
this adds a property descriptor for the feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
creates a new adapter for an object of class
this adds a property descriptor for the kind feature
this specifies how to implement
this returns
creates a new adapter for an object of class
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
this returns the property descriptors for the adapted class
creates a new adapter for an object of class
this adds a property descriptor for the name feature
this adds a property descriptor for the feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this specifies how to implement
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the is list feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
creates a new adapter for an object of class
this adds a property descriptor for the keyword feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this adds a property descriptor for the import name feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
creates a new adapter for an object of class
this specifies how to implement
this returns
this returns the label text for the adapted class
this handles model notifications by calling
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
preprocess the language language language
this method will be called after the object has been updated
this method is used to generate a syntax error
method that handles an error
returns the name of the current context
returns the current context
sets the active editor part of this viewer
creates the actions for the given collection
this will create the actions for the given collection
handles events associated with the editor
handles what is changed
this adds a property descriptor for the name feature
this adds a property descriptor for the is abstract feature
returns the references to the given objects
this handles model notifications by calling
this adds a property descriptor for the name feature
this handles model notifications by calling
this adds a property descriptor for the name feature
this adds a property descriptor for the namespace feature
this handles model notifications by calling
this adds a property descriptor for the kind feature
this adds a property descriptor for the text feature
notification that the given resource has changed
this returns the label text for
this adds a property descriptor for the separator feature
this handles model notifications by calling
this adds a property descriptor for the open feature
this adds a property descriptor for the close feature
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the open feature
this adds a property descriptor for the close feature
this adds a property descriptor for the separator feature
this adds a property descriptor for the bracket content feature
returns the references to the given object
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the property feature
returns the references to the given objects
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the context name feature
returns the references to the given objects
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
this adds a property descriptor for the initial priority feature
this handles model notifications by calling
returns the references to the given objects
this handles model notifications by calling
this adds a property descriptor for the context feature
this adds a property descriptor for the language feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this method is public for the notification
this adds a property descriptor for the name feature
this adds a property descriptor for the language feature
this handles model notifications by calling
this adds a property descriptor for the keyword feature
this handles model notifications by calling
returns the references to the given objects
this handles model notifications by calling
this adds to the collection of
this returns the label text for
this adds a property descriptor for the name feature
this adds a property descriptor for the context feature
this adds a property descriptor for the language feature
this handles model notifications by calling
returns the references to the given object
this handles model notifications by calling
this method is called when the page is changed
this adds a property descriptor for the multiplicity feature
this handles model notifications by calling
this adds a property descriptor for the priority feature
returns the references to the given objects
this handles model notifications by calling
returns the property editor for the given key
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the default context feature
this adds a property descriptor for the merge feature
returns the references to the given objects
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the kind feature
this adds a property descriptor for the text feature
this adds a property descriptor for the property feature
returns the references to the given objects
this handles model notifications by calling
this adds a property descriptor for the is expression statement feature
this adds a property descriptor for the kind feature
returns the references to the given objects
this handles model notifications by calling
returns the references to the given objects
this handles model notifications by calling
returns the references to the given objects
this handles model notifications by calling
this adds to the collection of
this adds a property descriptor for the text feature
this adds a property descriptor for the ignore case feature
this handles model notifications by calling
this is called by the view when a site is
this adds a property descriptor for the text feature
this handles model notifications by calling
returns the references to the given objects
this specifies how the notifications about the given
this adds a property descriptor for the prefix feature
this adds a property descriptor for the feature
this handles model notifications by calling
this adds a property descriptor for the kind feature
returns the references to the given objects
this handles model notifications by calling
this adds a property descriptor for the name feature
this adds a property descriptor for the feature
this method is handles notifications to the model
this adds a property descriptor for the name feature
this adds a property descriptor for the is list feature
this handles model notifications by calling
this adds a property descriptor for the keyword feature
this specifies how the notifications has changed
this adds a property descriptor for the import name feature
this handles model notifications by calling
returns the references to the given objects
this handles model notifications by calling
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
process the request
test of method of class edu
test of method of class edu
test of por method of class edu
test of modificar method of class edu
test of method of class edu
test of buscar cliente method of class capa negocios
test of buscar cliente method of class capa negocios
test of cliente method of class capa negocios
test of cliente method of class capa negocios
test of tipo method of class com
test of modificar method of class com
test of de method of class com
test of obtener tipo method of class com
test of method of class
test of obtener por method of class
test of obtener tipo por nombre method of class com
test of obtener method of class
test of tipo method of class com
test of modificar method of class
test of method of class
test of obtener method of class
test of no method of class
test of no ref method of class
test of method of class
test of obtener cantidad method of class
test of pack method of class
returns the
returns the alpha component of this color ramp
get the red color
returns the green component of this color
returns the blue component of this color
sets the
set the alpha value
set the red value
set the green component of this color
set the blue component of this color to the given value
returns the pixel at the specified pixel in the image
reset the state of the
returns the
returns the name of the url
returns the url for the url
returns the score of the player
returns the name of the exception
returns the image descriptor for this image
reset the status
the action has been activated
executes the action
the action has been activated
selection in the workbench has been changed
save ontology file
returns true if the given entity is a local
this method initializes this
this method initializes j button
this method initializes j text area
this method initializes j table
this method initializes this
this method initializes j tool bar
this method initializes j panel
close the preview window
this method initializes j tree
returns the element at the specified position in this vector
rebuilds the list of elements in this list
queries the database and returns the common list
insert into the database
inserts the given item into the database
executes the sql
returns the type of the column
returns the column names for the given column
set the dao for communication with the data layer
set the dao for communication with the data layer
set the dao for communication with the data layer
this method is designed to catch when users login and login
called when the user has been removed
p the servlet context event
get all roles in the role
paint the component
sets the order
removes the element at the specified position in
gets the value of the enum property
returns the utterance with the given index
returns the current value of the last coded utterance
returns the start bytes
returns the end time
returns the end bytes of the buffer
returns true if the current character is a parsed end
returns true if the current character is a coded
returns the misc code
sets the end time
set the end bytes
sets the misc misc by value
sets the misc code
returns the string representation of this coded object
creates a new player button action
this method initializes button play
returns the button replay
this method initializes button
this method initializes button and replay
this method initializes button
this method initializes button
returns the slider for the slider reset
sets the seek slider position
writes the contents of the code element code to the
sets the proxy to use
send buddy list to buddy list
returns true if the message has been updated
adds a message to the collection
adds a listener to this listener
remove a listener from this uow
called when the user has been registered for this fsobject
called when the typing event is registered
called when the application is being updated
this method is called when the user is being called
returns the cell editor value
returns the width of the image
returns the height of the image
returns a darker version of this color
returns the average number of samples
indicates whether some other object is equal to this one
returns true if mouse cursor should be translated
returns the string representation of this code value code
maps a key to a game action
returns a list of all the maps contained in the given game
adds an object to the list
removes the object from the list
returns the transparency level of this bitmask
checks if the object collides with the specified object
draws the given line
marks all visible objects that are visible
marks all visible objects as visible
adds an object to the list
moves a object to a new location
adds a game object to the given game object
removes the object from the list
updates the object
draws the given graphics object to the given graphics object
returns intersection of the intersection of two points
loads a map from disk
builds the room manager
returns the objects in map
checks if the given object is inside the collision
adds a vertex to the vertex
adds a spawn object to the list
builds the tree
build the tree
returns the
adds a vertex to the mesh
choose a
draw the tree
creates a vector of
creates the
builds the neighbor list
adds a new neighbor to the list of neighbors
remove a neighbor from the list
visit a node
draws the tree
finds all of the objects in the given direction
adds a new health time to the health
the tree
returns a random top top
notify the that an object is dead
draws the current polygon
build the surface surface
draws the given screen
called when the screen is added to the end of the frame
fire a shot
returns the color of the pixel at the specified location
returns the color at the specified location
returns the color of the specified color
returns the checked color for the specified point
creates a new object loader
sets the lights lights
loads a group of the specified path and returns it
returns the vector of the vector
this method is called when the surface is resized
adds a polygon to the polygon
adds a polygon group to the polygon
clones this polygon group
returns the group with the given name
resets the iterator to the first element of the list
returns the next polygon
the next polygon
updates the sprites of the actors and all the sprites in this
inserts a vertex at the specified position
construct a path node from the given node
sets the path finder
converts a vector of path points into a path
set the angular distance
computes the next path to the next file
draws a with the given speed
draws a
initializes the applet
runs the game loop
sets the bounds of the view window
copy the given vector to the given vector
returns the title of this field
deletes the object from the given object
initialize the class
collects all objects that have been created
returns the cache
sets the enabled state of this component
insert a new object into the database
this method is used to collect all objects of the object
adds a text message to the text area
sets the title of this dialog
refresh the object
setter for property jsp path
this method is used to get all the objects of a given
retrieve all objects from the given array of objects
sets the local drive prefix
returns all objects that are not in the given
this method is used to evaluate the given collection of objects
set the recursive flag
insert the methods description here
this method is responsible for generating a collection of
retrieves objects matching the given objects matching the given
retrieves objects matching the given criteria
this method will be called after the given object is a collection
adds a tool to the tool
adds a listener to the listeners list
handles the event
returns the object matching the given parameter
centers the viewport
this method is called when the is painted
returns whether the field is activated
find the given class in the cache
returns the text of the text field
update the object with the given object
returns the panel of the panel
report a bound property change to an code
retrieve all objects in the given array
this method is called when the painting of the background image is
returns the name of the field panel
paint the status text
this method is called when the bot is removed
retrieves all objects contained in the given
returns true if the user is activated
sets the status text field
returns the result of the query
retrieves objects matching the given query object
show the text in the status bar
sets whether the field is activated
write the message to the log
translate the given destination
sets the panel to the new value
set the name of the panel
retrieves a single object by its example object
sets the component to the given color
applies the component to the component
applies the dialog to the given dialog
returns the object at the specified position
update the given collection
returns the value of the specified property
description of the method
returns the value of the specified key
applies the label to the given label
this method is called when the user presses the logoff
called when the logon is sent to the server
adds a throwable to the code throwable code
applies the foreground colours
set the component to be used for the component
handle the event
apply the panel to the given panel
handle the exception
adds a throwable to the given throwable
set the component to be used as the component
constructs a new transaction not existing exception
applies the tooltip to the component
p this method is called when the object is about to be
begin uml doc
adds a handler to the list
returns the trace level for the given level
hook method to continue a transaction
returns the application object
create a new transaction context
sets the trace level
returns the default handler
logs the specified object to the log
sets the prefix
returns the name of the field
this method is invoked when the rollback is completed
logs the given object to the log
reports a report
handle the event
logs the object to the log
get the stack
handle an exception
logs the specified message to the log
returns the information about the event
sets the default handler
called when the user is clicked on the
this method is used to get the reflective
returns the suffix for the given class name
the application object
called when the user selects the
returns the suffix for the given class name
setter for property date
insert the methods description here
sets the name of the field
called when the user presses the button button
flushes the output stream
write a portion of an array of characters
write a portion of an array of characters
sets the stack
write a portion of a string
returns a vector of the string representation of the current object
writes the given string to the trace output stream
writes the specified byte to this output stream
returns an enumeration of the elements in this collection
set the root node of the node
called when the user presses the button button button
get the spacer
compares two nodes by their value
print a node
adds a node to the graph
insert the methods description here
add a cache object to the cache
returns the node at the specified position
returns the node at the specified index
called when the user selects the button
returns the container for the given container
adds a new object to the list
returns the domain object
returns the length of the node
returns an iterator for the given class
adds a vector to the cache
sets the domain of the object
returns an enumeration of the keys in the cache
returns the sequence id
returns the objects objects associated with the given class
print a boolean and then terminate the line
returns true if this node has children
returns true if the given class name is already in the cache
returns true if the class is sorted
returns true if the queue is empty
writes the given byte array to the buffer
adds a panel to the panel
returns a vector containing all the rows that match the given
removes a node from the tree
writes the specified code byte code to this buffer
removes the given object from the list
set the sequence id
writes the given string to the trace log
sets the value of the field
retrieve a new object from the cache
sorts the data in the database
get the object referred to by the given name and its
this method is called when the panels panels are returned
sorts the list
sets the initial capacity of the
handles the event when a tool is clicked
returns the graphic
returns the singleton instance of the registry
returns true if the field is selected
applies the file path to the file
collects all the objects in the collection
returns the object at the specified location
add all the given objects to the top of the collection
returns the value of the specified property
returns the value for the specified property key
returns the block that this is a block
gathers all the objects in the collection
returns the exception
returns the path to the platform
this method is used to determine the objects matching the given query
sets the component to use
setter for property key
sets the properties
setter for property registered
returns the fully qualified name of the class to use for the
computes the package name for this package
returns the object as a string
returns the class name for this class
this method is used to delete the object
returns the class package name for this class
returns the attached values
this method is called when the mouse is over its
returns the short name of this class
returns true if the class is a class
convert to
returns the enclosed expression
returns true if the class is declared as a kind
returns the suffix for the broker
returns the method object
returns the suffix for the given class name
paint the image
returns the cache id
returns a new species
returns true if the argument is one of one argument
sets the graphic attribute of the object
returns the suffix for the suffix of the package
returns true if the cache contains the key
prints the current state of the given
prints the string representation of the current object
returns true if the method is a three argument
sets the is selected flag
returns the current template broker
returns the value to which this map maps the specified key
returns the object of the class
this method is not yet implemented
returns true if the method is a two
returns a string representation of this object
initializes the component
returns the base property
returns true if the method is calibrated
removes the key and its corresponding key from this
returns the sub property
sets the base property
convert the value to a value
insert the methods description here
setter for property display name
sets the name of the
sets the sub property
insert the methods description here
returns true if the current value is valid
returns a filter expression and return the result
sets the type of the underlying code generation
returns a string representation of this object
set the value of the field code value accessor code
sets the enclosed expression
returns a list of all the filterable properties
insert the methods description here
returns the registry
refresh the current page
returns the value of this constant
sets the registry
returns a not negated expression
convert a boolean to a string
print the timestamp as a string
returns a string representation of the given code character code
returns a string representation of the value
returns all objects that are not traced
set the type of this field
returns the where clause
returns a string representation of the specified double
initializes the registry
returns the value of the specified array
set the value of the field accessor
register a new class
returns a string representation of the object
setter for property class name manager
retrieve all objects in the given order by
returns the boolean operator of the boolean operator
returns a string representation of the given field
compares its two arguments for order
returns code true code if the two objects are equivalent
applies the sorting criteria to the given list
compares its two arguments for order
compares their two objects
returns the value of the field
gets the key attribute of the object
compares their condition to the current object
compares two strings
returns the enclosed expression
returns a string representation of the given boolean
convert the given value to a java
returns code true code if the two objects are equivalent
compares two objects
gets the key attribute of the panel object
this implementation prints the given character
returns code true code if the given objects match the given
compares its two arguments for order
method that implements the interface
returns the end expression
returns the string representation of the double value
sorts the list of items in the descending order
returns code true code if the given objects match the given
converts a float value to a string
convert the converter to a
returns a string representation of the given field
resets the expression to the initial state
sets the valid values
returns a string representation of the object
adds a selection to the list
returns the next element in the iteration
insert the methods description here
compares two objects
returns the next expression
sets the default converter
returns a string representation of the given object
returns the comparator for the specified type key and type
sorts the columns by descending order
returns a single object by example the example
returns the string representation of the given value
returns the operator
returns a sorted order expression
returns the end expression
prints a date format
returns the next expression that is used to evaluate the
returns the map of all comparators in the specified interface
returns the value of the value property
returns the expression that is the same as the
returns a string representation of the object
sets the ascending order
format a boolean value
returns the map of comparators in the specified type map
returns true if this expression has another one
adds a property with the given name and expression
find a comparator for the given type
insert a new expression
returns the filterable properties
formats a filter expression and returns it
returns the expression that is enclosed by this filter
format the order by replacing the values of the given values
this method initializes comparable
saves the current object
returns the expression that is contained in the expression
returns a string representation of the given filter expression
creates a boolean expression
maps a string to a sql clause
saves the given collection of data to the current object
filters a given string and matches the given condition
returns the default array of all the keys
removes all expressions from the list of expressions
filters a given string and match the filter
this method is used to save the data in the
removes the next expression from the list
returns the default collection of all the keys
returns the wild card character
sets the enclosed expression
insert the methods description here
returns a string representation of this object
setter for property department
set the value related to the column selected
applies the elements to the given list
sets the number of the field
sets the broker
returns a string representation of this object
inserts the list of the constraints into the list
lookup comparator for sorting the given comparator
returns the domain factory for this domain
retrieves a single object by its example
starts the
get the
close the current filter
checks if the given person is a same family
sets the
the same name method that doesnt work in the members of the
sets the model
returns a string representation of this object
the same family for the same family
returns the name of the object
writes the header of the html document to the output stream
displays the initial population of the population
writes the header of the html document to the output stream
this method is used to encode the document
sets the comparable comparator for the sort comparator
required by the servlet container
retrieves the of the mobile device
returns the employees employees
generates the document
this method is called when the writer is triggered
generates the document
returns the mediator
sets the mediator
gets the
set the comparator for the comparator
generates the html file for the given code format code
generates html file for html html file
sets the default collection of values for this map
returns the open expression
returns the primary expression
sets the default sort comparator
returns true if the current cursor is open
insert the methods description here
returns a bool expression
p this method is used to get the content of the
p begin creating a new
opens the
applies the file path to the file
applies the given file to the given document
returns the string value of the string
applies the file path to the file
apply the given file to the given file
set the component to be used as the component
returns the object at the specified key
report a new page
waits for the to pause
initialize the map
wait for the to wait for this thread
sets the component to be used for the given component
returns the factory used to create the
returns the factory used to create the
returns a string describing this applet
this method is responsible for instantiating a list of all the
returns a string describing this applet
set the value related to the column listing search
deletes the selected item
returns the value of the code department listing selected code property
returns the value of the employee listing selected
create a new listing entry
returns the expression that is used to filter the given
select the selected department
adds a boolean to the filter
this method is called when the user selects the selected department
select the selected project
deletes the selected departments
this method creates a new department object
select the given listing of the selected entries
saves the current department
p select a department
filter a value
sets the selected department listing
set the selected department
sets the state of the employee listing
setter for property employees
setter for property
insert the methods description here
set the value related to the column selected employee
returns the list of
returns the name of the method to create a new
returns the selected object
set the value related to the column selected listing
invokes the method with the given mediator
set the list of to the given list
sets the new method name
sets the selected object
sets the primary expression
set the value supplied to the value supplied to the value supplied
returns a string representation of this object
clears the results
this method is called when the user selects the given
returns the value of extension
get the name of the first field
returns the last name
returns the location of the field
returns the name of the field
returns the results
add a filter expression to the filter
returns the next department id
returns true if the current match is a match
returns the next employee school id
checks if the target is a match
this method initializes the mediator
this method is used to close the underlying
search for the list of items
sets the extension to the given string
sets the first name of the user
sets the last name
sets the location of the field
sets the middle name
sets the results
this method is called when the user presses the
set the mediator
setter for property navigator
sets the mediator
refreshes the state of the component
set the mediator of the message
closes the frame
loads the projects
loads the protocol
this method is used to set the connection to the given connection
close the connection
returns the use ms for the
get a source
returns the content pane
get the title
add a source to the list of
this method is called when the surface is resized
adds a title to the list
gets the ms database connection
sets the ms conn conn
adds a project to the current project
returns the use ms
get the project
returns the source
add a vector of files to the list
sets the source
sets the selected project
sets the protein type
returns the selected project
returns the code protein type code
sets the list of files to be uploaded
set the
sets the mass of the call
set the value of obs mass
sets the score of the player
sets the type of this object
sets the value of var
returns the query
returns the value of the var property
returns the type of this
returns the variable modifications
sets the ratio group query numbers
returns the composition of this node
returns the mass
get the observation mass
gets the charge of this atom
returns the reference of the hit hit number of the parent hit
returns true if the provider is identified by
adds a to the
returns the parent hit
adds a ratio to the group
returns the label for free var mods
returns the number of hit
returns the ratio
returns the
sets the ratio of the absolute group absolute
returns the number of in the group
returns the number of
returns the ratio for the given group
returns the peak start
returns the peak end
sets the correlation value for this
returns the region start
sets the fraction of the nobel prize
returns the quality of the image
returns the region end
get the value of mean scan
sets the ratio of group partners to rank
returns the absolute intensity value of this peak
adds a non valid reason for this status to the given reason
sets the stored in database
returns the fraction of the fraction
sets the validity of the message
sets the comment
returns the comment for this document
returns the correlation of this clientes
returns the parent ratio group
returns the comment for this document
returns the parent ratio group
returns a string representation of the object
returns the parent collection
returns the factor for the
returns the factor
returns the peptide peptide peptide identification
returns the profile score
returns the peptide type
returns the number of in the list
returns the number of in the list
returns the number of types
returns the
adds a identification to the peptide
this method selects a list of
adds a ratio to the list of
gets the ratio of the ratio of the given type
returns the channel name by id
returns the peptide sequence
get the peptide peptide identification for the given type
adds a new reference to the list of references
returns the selected attribute
sets the selected attribute of the option object
adds a tower to the group
returns the ratio of the group at the specified index
sets the component types
sets the ratio of the ratio to be normalized
sets the metadata for the given meta data
returns the meta data for the given type
gets the value of the protein accession property
sets the peptide types
returns the ratio of the data type
sets the ratio to use for the type group
sets the source
sets the m protein accession
set index of attribute
adds a ratio to the group
set the flag to used when the test is used
returns the number of groups
sets whether or not this is a collapsed state
returns the number of peptide groups in the peptide
returns the full sequence name of the sequence
clears the total reference set
returns true if this is a method
returns the post sequence name
returns the pre sequence of the sequence
returns true if this is a collapsed property
returns the protein ratio
returns the
gets the number of used
returns the number of valid for the given type
returns the start position of the first segment
sets the start position
returns the end position of the end point
sets the end position
adds a log to the list
returns the log
sets the value of the pre sequence property
returns true if only uppercase values are used
returns the coverage of the
sets the post sequence
returns true if the protein is mean to a
sets whether only valid protein per protein is used
returns the ratio of the type of the image
returns the ratio of the ratio
gets the value of the property
returns true if the current page is valid
returns the comment
sets whether only the protein mean is
adds an to the
sets the name of the file to be used for the
returns the name of the file that is being used
returns the protein accession
returns whether this is a validated file
returns the type of the
sets the type of the user
returns the spectrum file name
sets the spectrum file name
returns the ratio of the group of the group
returns true if the database is a database mode
returns the value of the string property
returns the value of the specified attribute
returns the
returns the title of this object
the file
adds a ratio to the validated code
returns the component number of the title
returns the index element
returns a collection of for the given
sets the value of the i b property
this method will return a vector for a noise matrix
reads the xml file from the xml file
adds a protein to the list
returns the number of in the given vector
returns the path to the file path
returns the name of the file
removes all selected from the list
adds a protein to the protein list
returns the ratio of the ensemble group
removes a previously added protein protein object from the protein list
sets the all
removes the given protein protein from this protein
adds a protein to the list of
returns true if the
returns the usage of a sequence
returns true if the is
returns the collapsed status for the given sequence
returns true if the is
returns the string representation of this object
returns the database type
sets the database type
sets whether the label is valid
returns the right graph border
sets the border of the right graph border
returns the left graph border size
returns the reference set
sets the reference set
returns the
sets the
sets the enum set enum
gets the reference set enum
returns the number of in the
sets the number of in the
sets the data type
gets the value of the max score type property
returns the number of in the group
sets the max score type
calculate the
returns the frame
calculate the two for the given
returns the number of unique groups
returns the number of unique group
this method initializes ratio group
gets the protein list attribute of the list object
returns the protein code protein panel code
writes the log to the log file
prepare the sync manager
creates a new user
this method is called when the user is a user
this method deletes a user from the
runs the raw sync file
this method is called when the channel is being removed
returns a resource url for the specified resource name
add a new label field to the editor
returns the counter
sets the counter
creates a body part from the given body
create toolbar actions
sets the code
set listener to be notified of changes to the tree
returns the selected item
collapse all the nodes
the action has been activated
enables or disables the search and trigger the background for the
returns true if the background agent is enabled
sets the ignore event flag
get the active editor
sets the code search code that is responsible for
adds a search event listener to the list of listeners
returns the code listener code that will be notified of the
returns the result of the search
sets the java source code of this type
returns the primary type of this node
adds a listener to the list of listeners
returns the query
notifies all listeners that a search event has been
returns the keyword query
called after the time is done
returns the source of the exception
returns the property as a string
returns the simple name of the signature
returns the value of the property as integer
returns the type of the type
returns the duration of the time
returns the value of the specified property
set the kind of the search
returns the creation date
this method returns a string representing the given string
update the result list
returns the compilation unit
returns the source version of the file
returns the number of tests in the list
find a uri based on a uri
finds the method that is associated with the given uri
returns the result item with the given url
returns the source url for the given url
adds a source to the given source
returns the search id
returns the number of fetched from the
returns the type of the root element
creates a copy of the properties of the given body
returns the number of elements in this collection
assigns a room to a room
returns a allocation of a given room
sets the team result for the given team
returns the hash of the given room number
this method is called when the team is a valid team
adds an observer to the list of observer
this method returns the round of the round
adds a new team to the list of teams
returns the score for the given round
returns the total score of the
returns the total number of the speaker points
get the teams
returns the total points in the
sets the speaker points
compares two
returns the number of people in the room
called when the model changes
invoked when the target of the listener has changed its state
show the absent window
print the current message
generate random
sets the team
evaluates the permutation to the given permutation
generate random string
validates the form
shows the child window
log the specified entry
returns the panel with the given index
sets the tooltip text
changes the model
displays a message dialog to the user
launch the window
sorts the list
returns the current status of the current player
saves the tab to the specified format
close the window
called when the component has been resized
this is the entry point method
returns the month of the ith month
returns the model
returns the specification of this specification
this method finds the goal at the given location
returns the generic bound variable for the given entity instance
returns the name of the method
returns the instance of the
returns true if the is
returns the definition kind of this assignment
returns the package definition for this package
returns the virtual type of the virtual machine
returns true if the is virtual
returns true if the given variable is already in the list
returns the method specification
returns the location of the
define the type of the variable
returns true if the is virtual
returns true if this is abstract
returns true if the variable is already in the database
returns true if this is final
define the type of the variable
returns the entity solver
returns the entity solver
sets the horizontal alignment of the icon
sets the vertical alignment of the text
returns the poly type
sets the polygon type
returns whether the file is being close
sets the closed path
returns the of the curve
checks whether the given image is in cache
sets the curve
drives the given images
draws a shape
set the base size
returns the shape of the given item
returns the base size of the
returns the stroke that this item applies to
updates the arrow head
returns a shape that is the interior of the rectangle
returns the shape of the ellipse
returns the shape that is the path to the
returns the downward for the specified x and y coordinate
returns a triangle left
returns the shape of the triangle
returns the path to the point x y
returns the width of the specified item
returns the diamond point for the given shape relative to the
sets the default renderer
returns the stroke that is used to draw the outline
sets the rounded corner of the bounding box
returns the default renderer
sets the default renderer for the renderer
returns the default edge renderer
add a predicate to the chain
add a predicate to the list
returns the renderer for the given item
returns the label text field
translate the given item to a new one
compares the two items by their distance
sets the type of the edge
set the label text field
returns the edge type
sets the arrow type
sets the size of the arrow head
returns the height of the arrow head
returns the text of the item
returns the width of the arrow head
returns the image field
sets the image field
returns the number of rows in the specified row
adds a new aggregate to the given row and column
removes a single member from the group
removes all records from the specified row
sets the size of the image to be used for the
clears the entries in the given row and notifies all listeners
returns the row for the given row and the current row
returns an iterator over the aggregated tuples
get the tuples
returns the location of the image
get hash code
checks if a row is valid
fire a table event to all listeners
set the width of the line width
returns the image associated with the given item
returns the width of the line
get the group of the given group
adds a new parameter to this group
initializes the table
initializes the table
sets the visualization
returns the index of the node with the given key
returns the image factory
initializes the table
returns the number of columns in the model
returns the horizontal text alignment
returns the data source for the specified group
returns the type of the column
sets the horizontal text alignment
get the source data object for the given code tuple set code
returns the column type of the given field
returns the vertical text alignment
returns the number of rows in the model
sets the vertical text alignment
returns the item at the specified row
returns the minimum row of the row
returns the visual item associated with the specified group
returns the horizontal image alignment
returns the maximum row of the table
get the group for the specified group
returns true if the row is validated
sets the horizontal image alignment
returns true if the cell at the specified row and column
checks if the specified group is in a group
sets the value of the specified row
returns the modification count
returns the vertical image alignment
returns true if the item is visible
adds a group to the group
set the tuple manager
sets the vertical image alignment
sets the visibility of the item
adds a new group to the group
returns the schema
returns true if the specified row is visible
returns the image position
sets the start of the row
returns the size of the group
invalidates the schema
sets the image position
returns true if the item is visible
returns the row at the specified row and column
get the visual group for the given group
sets the visibility of the item
returns true if the row is interactive
returns the focus group for the specified group
sets the interactive flag
adds a row to the table
invalidates the item
returns true if the item at the specified row is currently expanded
adds a row to the table
invalidates all the items in the list
sets the expanded state of the item
updates the row count
returns an iterator over the items in the list
sets the fixed state of a row
returns an iterator over the group of all the visible parts
returns true if the row is highlighted
returns the padding for the image text clipped
returns an iterator over the items in this list
sets the highlighted state
set the padding in pixels of the image icon
returns whether the specified row is a hovered row
clears the table
returns an iterator for the given property
adds a new row to the root row
adds a root node to the tree
sets the value of the specified row
adds a new child to this node
returns an iterator for the given group
add a child node to the parent node
returns the x coordinate of the cell at the specified coordinate
adds a new child node to the end of the list
returns true if the row is valid
adds a child node to the parent node
removes the given child from this node
sets the x and value of the cell at x y
removes the specified element from this set
returns true if the column contains the specified column
returns the y coordinate of the cell at the specified coordinate
returns the root row of the tree
sets the y coordinate of the given position
returns the root node of the tree
returns the name of the column at code column index code
returns true if the selection is a multiple selection or not
returns the child row of the node
returns the child node at the specified index
returns the x coordinate of the start of the row
fires a data event to all listeners
returns the predicate
returns the column number of the given field
returns the index of the child of the specified child
sets the predicate
returns the search set
create the component
create a new search panel
create a new panel
returns the index of the first child of this node
sets the x coordinate of the start of the row
sets the group of the visual item
this method sets the value of a range
returns the column number of the column
returns the first child node of this node
sets the value range for the values
sets the value range for the values
returns the y coordinate of the start of the row
sets the value range for the values
sets the value range lo
sets the interactive state of the given group
returns the last child node of the given node
set the minimum value of the range
returns the column at the given column
sets the y coordinate of the start of the row
set the maximum value
returns the row of the leftmost row of the node
set the low value of the range
returns the previous sibling node of the current node
set the value of the low value range
puts a action into the action
returns the x coordinate of the end of the row
returns the row of the leftmost row of the node
returns the column with the given field name
this method is unsupported by this class
this method is not supported for this class
returns the next sibling node in the parents node
returns the depth of the specified node
sets the x coordinate of the end of the row
returns the list model
returns the action with the given name
create the component that will be used to create the
returns the number of children of code node code
adds a column to the table
create a jlist jlist
creates a combo box
creates a new checkbox group
creates a new radio group
returns the parent edge of the node
returns the end y coordinate of the cell at the specified row
returns the comparison predicate
returns the parent edge of the given node
returns the model that is assigned to the model
adds a column to the table
executes the given action
returns the number model
returns the parent of the node
set the y coordinate of the cell at the specified position
returns the model object for the model
creates the component
creates a range for the
returns the parent node of the node
creates a new range of vertical cells
creates a new range for the given orientation
returns a code object code
returns a child of the node that has the given node
adds a column to the table
returns the bounds of the specified row
runs the given action
returns the object at the specified index
returns an iterator over all the edges in this node
returns the index of the object at the given index
returns the children of this node
sets the bounds of the component
adds a column to the table
runs the action at the given start time
checks if the given node is valid
returns the stroke color for the specified row
returns the spanning tree for this node
add a constant column to the class
runs the next action
sets the color of the specified row
returns the spanning tree spanning tree spanning tree
returns the name of the column
adds the child listeners to the component
removes all listeners that have registered interest for
returns the stroke color for the specified row
this method is unsupported for this iterator
this method is not supported
after the run method is called after the activity is executed after
read a long value from the tuple
returns the value of the given tuple
get the double value of the given tuple
this method is not supported
returns the comparator
removes a column from the table
sets the start stroke color
cancel the given activity
returns the stroke color for the specified row
removes a column from the database
returns the middle expression
sets the color of the stroke
removes a column from this column
set the renderer factory to use for this object
disposes the table
returns the fill color for the specified row
sets the edge table
iterate over all columns and columns
get the tuple
fills the interior of the fill color
initializes the table
returns the renderer factory used to render the
returns the fill color for the specified row
returns an iterator of the columns
creates the table for the table
returns the renderer for the specified item
sets the color of the row at the specified location
updates the degrees of the given amount of rows and then
returns an iterator over all columns in this collection
returns the number of parameters
returns the fill color of the cell at the specified row
returns the bounds of the group
updates the degrees of the given
get the metadata for the given field
this method is not yet implemented
set the color of the cell at the specified row and color
add a link to the list
returns the bounds of the specified group
returns the index of the given field
returns the color of the row
remove a link from the given link
returns the number of display layers in this list
get the index of the given field
sets the color of the specified row
returns the display for this item
updates the node data for the given node
returns the index of the field with the given field name
returns the start color of the cell at the specified row
a region of damage
returns the predicate
returns the node key field
adds a predicate to this clause
removes the given predicate from this list
remove an entry from the table
returns the number of clauses in the list
sets the start color of the cell at the specified position
returns the predicate at the specified index
sets the predicate
sets the predicates to be executed
returns the sub predicate for the given predicate
returns the string representation of the given op expression
returns the left expression
returns the right expression
sets the left hand side of the expression
sets the right expression of this expression
returns the operation
returns the tuple
returns the text color of the cell at the specified position
returns the test predicate
returns the then expression
returns the else expression
sets the test predicate
sets the then expression
sets the else expression
add a tuple to this table
sets the color of the text area
set the tuple
returns the size of the row
remove a tuple from the tuple
sets the size of the row
checks if the given tuple is contained in the tuple
returns the start size of the specified row
adds a new row to the table
returns the number of tuples in this model
sets the start size of the table
add a node to the tuple
returns the end size of the row
returns true if the column supports the column
adds a new edge to the graph
sets the end of the row
returns true if the field can be used
adds a new edge to the graph
returns the shape of the specified row
returns true if the column is set to the given type
sets the shape of the shape
removes a node from the list
returns the stroke object
gets the value of the field at the given row and column
removes a node from the tree
sets the stroke
sets the value of a field
removes an edge from the graph
returns the font for the specified row
removes the given edge from this set
sets the font to the specified row and column
clears the edges
returns the font for the given row
sets the value of the cell at the specified location
check if the node is a valid node
sets the font of the table
returns the default value for the given field
returns the value of the code set code property
returns the end font of the row
revert to the default value
returns the node table
sets the font of the table
returns the number of nodes in the tree
returns the value of the specified row in the table
selects a subset of the tuples
sets the doi to the given row and column
returns the nth node of the graph
remove the given predicate from the list of predicates
returns the node with the given key
returns the rows in the collection
returns an iterator over the rows in this table
returns an iterator over tuples
returns an iterator over all tuples in this collection
returns an iterator over tuples
this method is called when the filter is selected
returns the column projection
sets the projection column for the column
returns the number of rows in the matrix
returns the row filter
sets the filter to be used for filtering
check if the given edge is already in the graph
returns an iterator over the rows in this list
returns the edges of the graph
returns the number of columns in the table
returns an iterator over the rows in this matrix
returns the parent table
returns the edge table
returns the row parent of the row
returns the row of the child
returns the number of edges in the table
returns an iterator that returns the range of values sorted by the
returns the edge at the specified location
adds a row to the table
remove a row from the table
returns the edge of the given target
returns an iterator that returns the range of values in the given
returns the edge at the given target node
returns an iterator that returns the range of values sorted by the
returns the node of the given edge
invalidates the current schema
returns an iterator that returns the range of values in the given
returns the source node of the given edge
this method initializes the table
returns the tuple type
ensure that the tuple array contains the tuple array
supplies a range of values for the given field
returns the tuple
returns the target node of the given edge
create a new tuple tuple
invalidates the current row
invalidate all tuples in this node
returns an iterator over all rows in this set
returns the node that is associated with the given edge
adds a new set of values to the set
returns true if the given name exists
returns the adjacent node adjacent to the given node
returns true if the set contains the set of elements in this
returns the value of the specified key
returns an iterator of all the set sets
remove a set of values from the tuple set
remove all the values from the set
clears the map
returns the rows in the tree table
remove a tuple from the table
returns the number of edges in the table
fire a tuple event
fire a tuple event
fire a tuple event
returns true if the column supports the column
adds a column to the table
adds a column to the table
adds a row to the container
adds a column to the table
returns the row of the parent of the given row
returns an iterator over edges reachable from the given node
returns the row number of the given parent
puts a row in the tree
removes the child at the given row from this container
adds a name to the list
removes the specified name from the list
removes the last element from the list
returns the table
returns the minimum row of the row
returns the maximum row
returns the number of rows in the model
clears the internal buffer
adds a row to the table
release the row
returns the row of the column
returns the row of the given column
returns a column row iterator for the given column
add a field to the list
returns a column iterator across all rows in the table
returns the number of fields in this list
returns a column row iterator for the given column
returns an iterator over the rows in this table
returns the ith field
returns an iterator over the rows in this matrix
returns true if the ith card is ascending or not
returns an iterator over the nodes in this collection
initializes the tuples
handle a column changed
returns the next available int value
removes the last row
modify the current counter
adds a listener to the list of listeners
returns an iterator over edges in the graph
returns the boolean from the given data source
returns an iterator over edges in the graph
get the depth of the given tuple
returns an iterator over all neighbors
removes a listener from the list of listeners
returns a clone of this object
initialize the lookup table
returns an iterator over edges in this graph
sets the code schema code to use for this node
fires a table event to all listeners
returns true if the file is locked
returns an iterator over edges in a node
add a column to the default
adds a column to the table
returns the number of columns in the model
returns an iterator for edges adjacent nodes to successors
disposes the resources associated with this device
returns the name of the column
returns the column index for the given field
returns true if the case sensitive
add a word to the tree
clears the node
returns the column type
removes a tuple from the tuple
returns the type of the column
returns the default value for the given column
find a trie node by its word
returns the default value for the given field
this method will be called by the first index to the tuples
add a tuple to this model
sets the default value for the given column
removes the tuple
set the default value for the given field
sets the default value for the given field
returns an iterator over the tuples
sets the default value for the given field
sets the default value of the field with the specified default value
sets the default value for the given field
returns an iterator over the tuples
sets the default field to the given value
returns true if the driver is supported
clears the list of all the elements
set the default value for the given field
search for a string
search for the given search prefix
set the given value to the specified value
add a tuple to the list
returns the spanning tree for this node
set the value of a default interpolation
clears all the
set the default value for a given field
set the given value to the default value
returns the spanning tree spanning tree spanning tree
set the value of the default interpolation default
returns the delimiter
sets the delimiter
compares this object against the specified object
returns whether the header is a print header
sets the print header
returns true if the given field is assignable from the given
sets whether header row is set
clears the spanning tree
returns the hash code value for this list
returns a string representation of this object
instantiates a new table
this method is used to set the column types
adds a listener to the graph model
sets whether or not the parser is unknown
adds a handler to the list
returns whether unknown types are ignored
removes the specified handler
instantiates a new table
load the data from the given table
load the data from the given data table
returns the next node from the node
this method is used to set the column types
load data from a table
removes a listener from the list of listeners
load the data from the given data
executes a query string
checks if the given row is a valid cache
invalidate the cache
revert to the default value
disposes the table
calculate the values of the values in the table
sets the comparator used to compare the values
returns the default value
returns the minimum row of the table
returns the maximum row of the table
returns the row of median row
returns the unique count count for the current object
returns the mean
returns the deviation of the matrix
returns the sum of all the values in this matrix
returns the ordinal map
returns true if the connection is read only
returns the value of the row
set whether the data read only
sets the value of the specified field
returns true if the cell is editable
returns true if the type of this type can be set
returns the column type
adds a listener to the list of listeners
removes a listener from this column
returns the default value
set the default value for this column
revert the value to the specified row
returns true if the type of this type can be used to
returns true if the type of this property is compatible with this
parses a boolean from the text
parses the given text into the given string
returns true if the current user can get the
parses the given text into the string
sample for a specific value
returns the type of the specified column
returns the next available parser data
returns true if this object can be added to the set
parses a string into a string
parses the given text into the string
reset the tree
returns the value of the specified cell as an int
parses the given text into the string
adds a new attribute to the list
returns the expression
returns the color of the palette
get the tuple
sets the palette color
returns the parser for the data
sets the value of the specified cell
adds a predicate to the tail of the list
removes the given predicate from this list
clears the internal buffer
returns the parser for the specified type
returns true if the class can be used
clones this item
returns a spring instance of the spring environment
returns the parser for the given data array
adds an to the list of
returns the parser for the given data type
returns true if this object can be set to the
returns the speed limit for the speed limit
set the maximum speed limit for the speed of the
returns the value of the specified row as a long
returns the
sets the long value of the specified row
sets the
clears the spring
this method is not supported by this class
returns true if this can be used to convert to float
insert an item in the tree
this method is not supported by this class
adds a force to the current set of
grow the size of the array to fit the specified size
this method is used to set the high water mark to be
returns true if this object can be added to the
adds an item to the list
this method is used to acquire the low level
removes the specified item from this item
chooses the mean capacity of the matrix and returns the
returns the float value of the cell at the specified row
returns an iterator for the items in this list
chooses the shrink to the size of the cache
add an item to the given item
this method is used to force the of the given
increases the capacity of this object if it is already in
add a new item to the array of two points
sets the float value of the specified cell
returns true if the queue is empty
add a two dimensional transform for the given
returns an iterator over the elements in this collection
returns the next prime number
run the simulator
returns true if the current line is double
returns the number of distinct entries in this list
returns true if the current value can be set
this method is called when the buffer is removed
returns the double value stored at the specified row
sets the value of the specified field to the given value
returns the boolean value of the boolean property
returns true if this object is allowed to be used
returns the value of the boolean boolean property b as boolean
sets the value of the boolean property
returns true if the user can be able to get the string
returns true if the current document can be set
returns the string value of the specified row
clears all the values in this group
clones the underlying trove collection and returns the clone
returns true if the key is contained in the receiver
sets the value of the specified string as a string
returns true if the specified value is contained in the map
add a comparator to the list
this method removes the given comparator from this
increases the capacity of this code hashtable code instance if
returns true if the date is allowed
returns the value to which this map maps the specified key
returns true if the date is allowed
returns the key of the given value
returns the date value at the given row
returns the keys in the receiver
set the date value
resets the status
removes the specified key from this set
this method is called when the user changes the status of the
set the clip to an graphics
sets the clip rectangle
shrink the capacity of the internal buffer to the
sets the clip
this method is used to set values in the list
sets the image to be used when drawing the image
returns the scaled image of the given image
called when the user changes the state of the slider
returns the scale value of the slider
clears the array
adds a new item to the queue
this method draws a set of shapes
adds a new item to the picking queue
sorts the overlay queue
sorts the picking queue
returns true if the interior of this intersects the clip
sort the items in the table
this method is called when the clip is a clip
returns the identity transform
returns the clip
this method is called when the clip is scaled
paint the graphics object
intersects this clip with another one
returns true if the database is persistent
intersects this rectangle with the given rectangle
sets whether to persist the given object
sets the content of this component
this method is used to the clip
expand the clip
expands the clip
increases the size of the clip
returns the x value of the coordinate
returns the minimum y value
returns the value of the specified field
returns the cell renderer for the specified cell
sets the value
initializes the row map
returns the maximum x value in the list
returns the row number of the given row index
returns the maximum y value in the array
sets the value of the slider
returns the width of the clip
sets the field value
adds a listener to the list of listeners
returns the height of the clip
removes a listener
returns true if the queue is empty
fires a change event to all registered listeners
returns the status of this object
returns the tree
creates a new range change listener
initialize the gui
destroy the activity manager
stops the activity manager
returns the text
sets the text of this text view
sets the vertical alignment of the text
requests focus on the request
sets the horizontal alignment of the icon
returns true if the quality is high enough to be used
returns the value of the low value
sets whether the quality is scaled to be scaled to
sets the low value of the range property
sets the lock
sets the axis type
returns the axis type
returns the current high value
returns the margin of the page
returns the authentication password
sets whether the results count should be displayed
sets the spacing between the cells
sets the high value
prints the given string to the output
returns the spacing between cells in the area
sets the list model to the data model
prints out the given string to the output
sets the range of the range
sets whether the border should be shown on the border
returns the model
prints the current connection to the
sets the selection model
called by the to indicate that the crawler is being started
returns the selection model
begin the
sets the labels of the labels
sets whether to show the cancel button
print a comment
sets the background color of this component
sets the foreground color of this component
sets the font of the component
search for the search
sets whether or not this component is focusable
sets the query
p adds a tag to the output
adds a extension to the list
returns the user data
returns the query
sets the minimum extent
returns the extension of the extension
sets the cancel color
set the empty state
returns the color of the thumb
starts the tag
p ends the tag
sets the color of the thumb
writes the content of the given tag to the output
puts content into the content
this method is used to finish the current
returns the model
clean up the footer
this method computes the space of the current document
sets the label text
sets the model to the given model
sets the insets for the interior of the margin
sets the bounds of the component
returns the anchor point of the current layout
set the anchor point of the layout
adds a change listener to the list of listeners
set the x and y values for the given item
set the y coordinate of the given point
sets the columns
sets the normalization flag
returns true if the is normalized
remove a listener
returns the padding percentage
sets the padding percentage
returns the threshold
set the threshold for the threshold
returns the current range model
fires the change event to all listeners
returns the orientation of the cell
sets the orientation of the text
sets the polygon
paint a custom paint
returns the number format
sets the number format
returns the spacing between the columns
set the field to be used for the field
invalidates the current state
returns the field
sets the spacing between the columns
sets the model to use for the range model
returns the scale of the image
sets the filter
sets the scale of the scale
returns the filter
converts the given coordinate to a local coordinate system
returns true if the sort is ascending or not
sets the scale of the scale
sets the sort flag
returns the axis of the axis
sets the model to which this range is
sets the axis of the axis
returns the frame rate
returns the data type of this
set the type of the data
returns the data type for the given data set
sets whether to high quality
sets the value of the given item
lays out the given parent
returns the radius of the radius
set the radius of the circle
sets the orientation of the dipole orientation
set the spacing between the activations of the
returns the breadth of the given rectangle
returns the spacing between the activations
sets the breadth spacing
returns the visualization
returns the breadth spacing
computes the value of the scale of the given double
sets the spacing between paragraphs
returns the spacing between cells in the grid
sets the offset of the root node of the node
returns the linear step of the given linear
returns the offset of the root node of the node
sets the visualization
returns the predicate
returns the number of step spacing between two points
sets the predicate
removes all the columns from the given table
returns the number of visible items in the list
returns the visual table model for this visual table
set the width of the frame
returns the width of the frame
returns the item sorter
this method is responsible for adding a node to the tree
returns the maximum time step for the time step
sets the max time step
returns the force simulator
returns the maximum number of iterations
sets the maximum number of iterations
sets the force simulator simulator
sets the root node of the tree
returns the layout root
returns the number of iterations
returns the radius of the radius of the current one
sets the radius of the radius
sets the number of iterations
creates a new tool tip object
returns whether or not the scale is automatically negotiated
sets the node group
sets whether or not the scale is automatically scaled
returns the minimum radius of the circle
sets the minimum radius of the radius
sets the angular bounds of the shape
sets the tooltip for the
resets the visual state of all the items
calculate the angular length of the node
sets the seed for the random number generator
returns the number of columns in this grid
sets the number of columns in the table
returns the number of rows in the table
sets the number of rows in the table
returns the tooltip for this tool
returns the mass value of the given
sets the orientation of the orientation
returns the
sets the field
returns the
set the y field of the
returns the length of the given edge in the current
returns the fixed field value
sets the fixed field
returns the value of the spring coefficient
runs the visualization
set the location of the
returns the value of the switch value
sets the value of the switch
returns the data field
set the data field
sets the default font for the charts font
set the type of the data
sets the default stroke
returns the default font
returns a new offscreen buffer with the given size
returns the default stroke
adds a font to the list
add a predicate to the polygon
adds a new font to the list
adds a stroke to the list
adds a predicate to the list
returns the number of bins in this bins
adds a predicate to the polygon
adds a new font to the list
adds a new expression to the list of buttons
sets the number of bins in the bin
sets the default color to the given color
returns the font for the given visual item
returns the stroke for the given item
set the ordinal map
sets the default shape of the default shape
returns the default shape
returns the default size of the
sets the default shape
sets the default size of the
adds a predicate to the end of the list
adds a shape to the polygon
adds a string to the list of expressions
adds a new expression to the list
adds a predicate to the list
adds a new expression to the list
adds a shape to the list
adds a new expression to the list
returns the size of the specified item
sets the field
returns the default color
returns the shape of the item
set the default color for the default
adds a predicate to the chain
adds a predicate to the polygon
returns whether or not the is
returns the value of the specified item
adds a string to the list of attributes
adds a predicate to the polygon
removes all the chain
adds a new expression to the list
sets the area to be displayed in the area
removes the given predicate from this chain
paint the buffer to the screen
returns the color of the specified visual item
returns the minimum size of the component
setup the test
sets the minimum size of the
called when the finish button is pressed
returns the maximum size of the
sets the maximum size of the
this method is not supported
set the x coordinate of the second point
sets the size
returns whether the size of the is sized
set the y coordinate of the
sets the visualization of the given visualization
returns the number of actions in this list
adds a new action to the set
returns the predicate that this filter is currently
add a new action to the list
sets the predicate filter
returns the ith action
remove the given action from the set of actions
removes the i th action
this method is called when the quality value is considered
set the array of fields to the given fields
sets the predicate to be used for the predicate
returns the distance in the
returns the distance from the to the distance
sets the distance to the distance
sets the distance to the distance
returns the sources
runs the activity
sets the sources attribute of the object
called when a node is removed
visit ancestors
cancels the activity
adds a listener to this activity
schedule a new schedule
returns the activity associated with the given key
removes the specified listener
runs the specified action
performs the actual activity
perform the actual activity after performing an action
returns always true if the given key is always equal
cancel the given key
add an activity to the map
zoom the display in the given point
returns the maximum scale of the image
sets the maximum scale of the image
returns the minimum scale of the
sets the min scale
returns true if the zoom is over or not
sets the item on the item
renders the specified item
moves the mouse event to the specified mouse event
runs the action
sets the filter
returns the filter
sets the margin of the label
checks whether the given item is a filter check
sets the neighbors of the neighbor to the given state
clears the region
clears the
returns true if the thread is running in progress
adds a paint listener to the list of listeners
removes the paint listener
called by the paint to paint the pre paint
notify the listeners that the given code graphics2 d code
adds an item to the list of listeners
removes an item bounds listener
checks if the given bounds is changed
add a control listener to the controls
remove a control listener
edits a text item
stops the editing
returns the date at the given row and column
runs the
handles the file
saves the key to the given file
this method is used to add the given commands to the list
called when the is loaded
called when the user selects to remove the
registers an observer to this object
callback called when the user chooses to notify the note
get the item data scope
this method is called when the user presses the
sends a list of data to the list
shows the given panel in the panel
this is the entry point method
initializes the controller
initializes the controller
this method initializes macro command
initializes the model
adds a sub command to this container
this method will be called after the command is executed
initializes the view
register a new command
adds an observer to this object
notify all observers about the given model
returns the notification name
remove a command from the list
registers the mediator mediator mediator
register a proxy to this proxy
removes the specified mediator from the
removes a proxy from the proxy
returns the mediator for the given name
retrieve a proxy for the given proxy
sends a notification to the server
notify observers of a new view
initializes the model
register a proxy to the proxy
remove a proxy from the proxy
returns the proxy proxy
this method is called after the view is being closed
notify all observers of a new observer
initializes the controller
registers the mediator to the user
executes the given note
register a new observer
registers an observer to this object
removes the specified mediator from the list
remove a notification from the list
returns the mediator for the given name
connects to the output stream
disconnect from the server
registers a new pipe with the given name and type
returns the message that is used to wrap the message
handle the message received from the server
handle a pipe message
returns the category dao
sets the dao for the dao
returns the string representation of this object
sets the limits of the given
returns the value of the min property
returns the z value of the z coordinate
sets the min max value of the range
sets the flag
returns true if the is
set the
sets the view attribute of the object
at startup create and show the main frame of the application
performs the work
terminate the thread
returns a term object from the given object
lookup the bean
register a bean in the bean
unregister a bean
adds a bean to the bean
p set the bean to the given bean
returns the result of the given string
set the magnification of the object
adds an animation object to the list
draws the image
returns the bounds of the shape
make a copy of the receiver
returns the view of the shape
returns the identity of the object
set the rotation of the current shape
removes all terms from the list of compound terms
returns the unified term of the given goal
returns a clause for the ground goal
eliminates all the rule bases
creates goal goal goal goal goal goal goal goal goal goal goal
sets the fail unknown predicate
updates the window menu
creates a new predicate
parses the
returns the result of the least
starts the recording
stops the recording
paste the content of the given clipboard into the buffer
deletes the selected text
action performed when recording button is pressed
adds a point to the graph
close the window
adds a points to the graph
adds a points to the graph
action performed when play button is pressed
called when the slider state changes
this method is called when the mouse is clicked
this method is called when the mouse is pressed
this method is called when the mouse is released
this method is called when the mouse is dragged
called when the mouse enters a component
sets the zoom percent
runs the thread
runs the algorithm
returns the short name of this
print the text table
writes a line to the end of the table
method called when the end of an entry is added to the
print the result of the print data
this method is called when the user selects the test
handle an error
handle the uncaught exception
handle uncaught exceptions
handle an exception
checks if the specified permission is a permission
returns a label for the current
prepare for the socket
returns the host name
returns the port number of this socket
override to override this method to create the delegate data
dispose of the data
called when the thread starts
called when the thread finishes
handles a connection
called when the thread is encountered
create a new param data structure
creates a new instance of the given connection
dispose the instance
returns true if this is final
returns true if the thread is currently running
returns true if the is terminated
converts the text to a given
append the given text to the current row
clears the internal buffer
resets the internal state to the initial length
start the process
this method is called when the user aborts the
adds a reference to the
release the lock
clears the internal counter
adds the specified element to this collection
removes the first occurrence of the specified element from this list
sorts the data in a collection
swaps two data items
reverse the given range of elements in the collection
deletes a range of values from the range
sets the data
removes the entry at the specified index
removes the fast element at the specified position
prints the text to the table
disposes all objects that have been removed from the
allocate the cache
disposes the object
returns the buffer limit
set the maximum number of bytes that will be used to limit
this method is used to remove the object from the queue
this method is called after the other
returns true if the iteration has more elements
returns the next element in the iteration
returns true if the iterator has more elements
returns the previous element
returns the index of the next element in the iteration
returns the index of the previous index
sets the object to the given object
add an object to the list
removes the last element from this list
sorts the data in the model
compares two objects
clears the collection
sorts the collection
returns the parent of this node
returns the current value
appends the specified code printable code
returns the default page
adds a new code code to the current page
prints the current value
creates a desktop pane
starts the waiting thread
called when the is terminated
called when the preferences have changed
creates the menu
set the icon
create the main menu
returns the window
returns the frame
close the user
called when the preferences have changed
returns the icon of the icon
sets the icon
returns the icon for this image
sets the icon for this image
returns the frame
returns the window of this window
returns the frame
called when the value of the tree changes
notifies the spinner listener that the value of the
called when the preferences have changed
called when the value of the property has changed
called when the preferences preferences has changed
notifies the listener that the value of the value changed
called when the user changes the changes to the
this method builds the list model
notifies the listener that the value of the value changed
insert a new entry into the queue
called when an element is removed from the list
called when the preferences have changed
called when the is hit
called when the preferences preferences changes
this method is called when the selection is selected
returns true if the viewport height is resized
returns true if the viewport has been resized
creates the component that will be used to render the component
handles the selection changed event
called whenever the value of the selection changes
returns true if the given object can be applied to the given
load from file
load from an input stream
load from a reader
adds a new tab to the panel
adds a row to the table
adds a new row to the table
returns whether the popup trigger should be shown on the popup menu
pops up the popup menu for the given mouse event
commits the given cell
processes the mouse event
invoked when the mouse button has been clicked pressed
moves the user to the next row in the table
invoked when a mouse button has been pressed on a component
invoked when a mouse button has been released on a component
invoked when the mouse enters a component
delete row in table model
invoked when the mouse exits a component
called when the user changes the state of the input event
adds a number to the list of
returns true if the given number of resources are acceptable
returns the value of the control
sorts the array
returns the format for the
called when the preferences preferences has changed
factory method for creating a format factory
returns the control value of this control
sets the control value
called when the preferences preferences has changed
starts the thread
adds a button to the list of components
sets the simulation
adds a button to the layout
indicates whether multiple instances of the
sets whether or not the user can specify a new value to
resizes the window to fit the given frame
invoked when an action occurs
returns the object to save to the given object
called when an error is encountered
sets the default generator
returns the seed for the random number
sets the seed for this object
inverts the
returns the
clears the internal values
this method is called before the given node is
returns the id of the associated schema
returns the for the given name
the connection to the underlying
returns the prepared statement
locks the
attempts to read the lock
after the initialization is done after the initialization
starts the
handle an error
pauses the timer
do the actual work
returns the logger
returns the error handler
execute the job
starts the
aborts the
clears the buffer
initialize the buffer
initializes the buffer
returns the number of bits in the bit set
clears the buffer
skips the number of bits in the input stream
returns the number of bits available for this
writes a boolean to the output stream
writes a byte to the output stream
writes a 16 bit short
reads the specified byte array from the input stream
reads a code byte code array from the given
writes a char to the output stream
writes an int to the output stream
reads a boolean from the data store
writes a long to the output stream
reads a signed byte from the input stream
reads an unsigned 8 bit integer
writes a float to the output stream
reads the next byte from the input stream
writes a double to the output stream
reads an unsigned 16 bit integer from the bits array
writes a string to the output stream
read a character from the current channel
writes the given string to the buffer
read int int from the stream
returns the 64 bit long
writes a string to the buffer
reads a float from the input stream
reads a double from the input stream
reads the bytes from the input stream
creates the text destination
returns the encoding of the encoding
iterate through the list and returns the current state
returns the padding character
returns the index of the run
create a new instance of the
adds a listener to this node
removes a listener for the code tree code
returns the maximum line length for the line
this method is called when the event is about to be
called when the user selects the
this method is called when the is about to deliver
returns true if propagation event is in the domain
resets the internal map to their initial values
instantiates the object
returns a new object with the given parameter
returns a new instance of this object
fail the iterator
this method is called when the object is falling back to the
reset the formatting to the initial state
flushes the cache
appends the specified character sequence to this
returns the encoding of the file
appends the specified character to this text
writes the object to the given object
writes the specified byte array to the destination
writes code len code bytes from the specified byte array starting at
flush the stream
writes a boolean value to the output stream
writes a byte to the byte stream
writes a 16 bit short
writes a char to the destination
writes an integer to the output stream
write a long to the stream
returns the end section of the label
writes a float to the end of the vector
writes a string to the output stream
writes the given string to the buffer
write a portion of an array
write a character array
write a portion of a string
writes the given string to the destination
ensures that the current line has been created
returns true if the line is a new line
writes the time to the specified date
writes the time stamp
writes the time to the specified time
returns the width of the current triplet
returns the title of the title
write the content of the content to the content
sets the width of the
instructs the printer to output the destination
returns the locale for this component
this method is called when the destination is about to be written
increases the indent by one
this method is called when the children of this node is
returns whether the destination is formatting
called when the group is removed
decrease the indent by the current indent
called after the group is removed
returns the auto flush threshold
set auto flush threshold
begin a new array
this method is called when the end of the array is an
writes the item separator to the end of the list
write null to the write write
returns the encoding of the destination
start the element
end the element
called when the text is written to the text
clears the receiver
start a document
called when the end of the document is finished
test of get method of class org
this method is called when the entity is being started
end an entity
test of get method of class org
test of get method of class org
comment for method
this is a method that is called by the
internal use only
returns the value of the specified feature
write the attributes of the table
write the current xml file to the xml file
this method is called when the task is completed
returns the tag
assigns the data to the
sets the feature flag
returns the property with the given name
returns the tag
emits the element
sets the property with the given name to the given property
end an element
called when the text is being removed from the text area
sets the parent
adds an element to the list
returns the parent
returns the instance of the
sets the entity resolver
log the event to the logger
called when the user selects the
returns the entity resolver
sets the dtd handler
returns the dtd handler
sets the content handler
returns the content handler for this content handler
sets the error handler
returns the error handler
sets the lexical handler
returns the lexical handler instance that is used to construct the lexical
sets the decl handler
returns the declaration handler for this declaration
parses the specified input source and returns the
parse the specified system identifier
returns the public identifier of the locator
returns the system id
returns the line number of the current line
return the column number of the current locator
returns the next character in the buffer
sets the function name
sets the value of the argument argument argument
checks if the syntax is a syntax expression
returns the error message
adds arguments to the arguments
adds a list of arguments to the list
define the arguments to the argument
define a function argument
returns the constant name
returns the index of the argument to be used
sets the constant name
returns the value of the code license code property
returns the argument with the argument name
returns the argument at the specified index
adds a base case to the base case
returns the number of parameters
sets the parameters of the parameters
returns the arguments number
removes the arguments from the function
remove the given arguments
removes all arguments from the function
returns the verbose mode of the output
adds a constant to the constants
adds a list of constants to this list
returns the recursive mode of the
define a constant to the specified value
returns the time in seconds
returns the index of the constant pool entry with the specified name
sets the name of the argument to be compared
returns the syntax status
sets the expression to use for the argument
returns the constant specified by the given name
returns the constant specified by the given constant
returns the argument type
returns the constants constant
removes the specified list of constants
checks if the syntax is a syntax uml syntax
initializes the variables
removes the constant expression
returns the error message
returns the value of the argument
removes all the constants
adds arguments to the arguments
adds the given functions to the function
add an array list arguments to the arguments
defines the arguments to use
sets the expression string
define a argument to use the argument
returns the function index of the function
returns the index of the argument argument
returns the function with the given name
returns the argument with the argument name
returns the argument at the specified index
returns the function at the specified index
returns the arguments number
returns the number of functions in the function
returns the expression string
removes arguments from the argument list
removes the specified list of functions
remove the given arguments
removes all functions from this function
removes all arguments from the list
removes all functions from this magnet
adds a constant to the constants
adds a constant to the list
define a constant to the constant pool
clears the expression
returns the verbose mode
returns the index of the constant expression
returns the constant specified by the given name
returns the constant specified by the given constant
returns the number of constants in this expression
returns the recursive mode of the function
removes the specified list of constants
returns the time in seconds
removes the constant expression
removes all constants from this magnet
adds the given functions to the list of functions
returns the function index of the function
returns the function with the given name
returns the function at the specified index
returns the number of functions in the function
removes the specified list of functions
removes all functions from this list
removes all functions from this instance
clone this argument
returns whether verbose mode is enabled
returns the recursive mode
returns the time of the
add arguments to the list
add arguments to the list
define the arguments to the argument
sets the argument value
defines a new argument to be used as a value
returns the index of the argument argument
returns the argument at the specified name
returns the argument at the specified index
returns the arguments number
sets the value of the argument argument
returns the value of the argument argument
removes all arguments from the argument list
remove all arguments from the given argument
removes all arguments from this list
adds constants to the constants
adds a constant to this list
define a constant to be a constant
returns the index of the constant pool entry with the given name
returns the constant specified by the given name
returns the constant specified by the given constant
returns the constants number
removes the constants defined in this constant pool object
removes a constant that has the given constant
removes all constants from this expression
adds the given functions to the list of functions
returns the index of the function in the function
returns the function with the specified name
returns the function at the specified index
returns the number of functions in this list
removes all functions from the given list of functions
removes all functions from this function
removes all functions from this
sets the value of the token
removes the first occurence of the next occurence of the given position
removes the first occurence of the next occurence of the given position
removes the next token from the list
removes the next occurrence of the given position
calculate the decrease of the
this method is called when the value of the remove is set
this method is used to set the parameter argument
method to create a constant
recursive function to add a single argument to the end of the
removes the next occurrence of the given position
removes the next occurrence of the given position
decrements the value of the constant
subtracts the given value from the current position
removes the next occurrence of the given position
this method is used to set the value of the
removes the next occurrence of the given position
this method is called when the is removed
this method is called when the is removed
decrements the position of the line
removes the next occurrence of the given position
this method is called when the next token is added to the
removes the next occurrence of the given position
this method is called when the is removed
this method is called when the position is set
moves the current position to the given position
removes the next occurrence of the given position
removes the next occurrence of the given position
removes the next occurrence of the given position
removes the next occurrence of the given position
removes the next occurrence of the given position
removes the next occurrence of the given position
this method sets the position of the next element in the
decreases the position of the next token
decreases the position of the next token
this method is called whenever the is
this method is called when the position is added to the
update missing tokens
the given position
removes the from the given position
checks whether the syntax syntax is set
check if the parameter contains the keyword
check if the argument is a valid parameter
check if the token is a valid token
adds the arguments to the arguments list
adds the functions words to the map
adds the constants in the constants
adds a token to the token
copy the tokens from the initial state to the
print the parsing of the text
returns the help string
stops the
returns the number of bytes written to this stream
extracts the stream from the given stream
runs the thread
returns a string representation of this object
returns whether this is a geo point
returns the number of bytes loaded from the file
gets the value of the property
returns the url of the
returns the string representation of this object
returns the url of the file
returns the url of the
returns the input stream for this request
returns the preview input stream for the connection
returns the sample file
returns the preview file
returns the id of the extension in the given file
returns the audio sample object with the given id
returns the input stream to use for the given audio
gets an input stream for the given resource id
sets the directory where the cache is stored
returns the id for the given id
returns the id of the
returns true if the user has a id
returns true if the given search query is cached
returns true if the file is cached
returns the sql query to be used for the search
converts a file name to a string
called when the state of the game state has been updated
writes the content of the given file to the given file
returns a string containing the hash of the given query
creates the file cache for the current file
logs out the user
checks if the login page is valid
returns the url for the given http urlconnection
returns the url for the given http urlconnection
closes the reader
returns true if this filter is a filter
returns an image from the given icon
this method returns the string representation of the
compares this object against another
clones this effect
returns the target
returns the hash code value for this code code
sets the target device
checks if the given phase is active
returns the bit mask for the current state
returns a string representation of this code code
compares this object to the specified object
returns the hash code value for this object
returns the elements of the given position
validate the section
returns a string representation of this object
sets the name of the
returns true if this is a real real number
returns true if this is a virtual virtual
returns true if this is a
set the id attribute
returns true if this is a db4o file
rotates the left side of the direction
this provides the name of the external file
rotates the direction counter clockwise
rotates the direction of the direction
clones this movement
rotates the direction clockwise
sets the name of the
returns the current turn
returns true if the is north
sets the author attribute of the object
returns true if this node is a east location
returns true if the current component is a south
returns true if this element is west
sets the series
sets the skill
sets the skill
returns whether the vertical part is vertical
returns the position of the current position in the given direction
returns true if the horizontal axis is horizontal or not
set the rotation to the next rotation
translate the position of the position
checks if the two coordinates are equal
rotates the current facing clockwise
compares two position objects for equality
sets the minimum number of players allowed in this game
returns a string representation of this object
returns the hash code value for this
load the robot
returns a string representation of this object
returns the number of cards in the pile
draws the card
discard discarded card
returns the robot id
shuffles the deck
sets the maximum number of players allowed to play a player
fire a persistence attribute changed event
fire a detached attribute changed event
sets the grid width
sets the absolute flag for the current file
set the grid height
set the destination location
returns the series
returns the destination for the given position
decrements the distance from the current clip
set the value of player id
decreases the distance between the current distance and the distance
returns a shallow copy of this tt tt object
returns true if this device is flat flat
translates the given graphics position to the specified
returns true if the given state is active
set the direction of the camera
returns the current program
returns the string representation of this object
returns the effect attribute of the effect object
sets the effect state
this method registers the server configuration and its logger
returns true if this is a
returns true if this is a high
returns true if this is a
returns true if this is a
returns a string representation of this object
set the value of name
set the value of image filename
set the value of identity
set the value of the code score code property
set the value of flag
sets the status of this code player code
set the endpoint address for the specified port name
returns the
sets the value for this
sets the value for this curriculum1
sets the weekday value for this get history
sets the time pattern value for this
returns the
sets the
sets the job code description value for this job description
returns the value of the b b
set the enable flag
returns the job code
sets the job code
sets the value for this curriculum1
returns whether or not the table is automatically
sets whether or not the match is automatically
returns the smart card card card
sets the smart card flag
returns true if the is a fingerprint
sets the value of fingerprint
sets the model number value for this model
sets the other name value for this type
sets the trigger value for this get user event
sets the admin level value for this weather report
sets the firmware version value for this pessoa
sets the value for this curriculum1
returns true if the password is used
sets the terminal name value for this
sets the department description value for this fwtproperty
sets the value of image photo
returns the registered users
sets the use password
sets the registered users
sets the access right value for this get user
gets the maximum number of users that are logged in
sets the access method value for this
sets the maximum number of users in the database
setter for property from
sets the registration time value for this remote
sets the last update value for this web service tracker update
sets the to value for this sms
returns the users
sets the last check value for this
returns the last check status
sets the employee name value for this user profile
sets the last check status
sets the users value for this
sets the value for this curriculum1
gets the maximum number of users to whom the user is
sets the value for this curriculum1
sets the maximum users value for this admin order
returns the
sets the
sets the current status value for this
returns whether or not this is a quick access
sets the quick access setting
sets the time spec value for this get history
returns the
returns the
sets the
sets the
sets the value for this curriculum1
sets the name value for this
sets the terminal type value for this type
sets the description value for this type
set the value related to the column enable
set the value related to the column
sets the value for this curriculum1
sets the fingerprint level level value for this
sets the status value for this get status response
sets the value for this get
sets the value for this
returns the
sets the
sets the
sets the
pop the last item from the stack
retrieves the code array pointer code without removing it
find the closest to the given point
returns the nearest neighbor to the given point
this method initializes j scroll pane1
exports the given reference to a writer
writes a line to the output stream
save the screenshot to the given location
opens a file chooser dialog to select a file
prompts the user to choose a file name
create a file filter file file filter
returns the insets of the border
invoked when an action occurs
sets the bracket type
returns a random pass
returns a random word sampled by the given length
returns a random number
writes the given marker to the end of the given marker
returns the list of all users in the list
returns the current shared list
this method is responsible for creating the output
reset the current output to the current output
begin the survey
ends the survey
start the section
ends the section
close the connection
invoked when a mouse button has been pressed on a component
invoked when a mouse button has been released on a component
invoked when the mouse button has been clicked pressed
adds a listener to the list of listeners
returns true if the next call can be executed
show the popup menu
displays the next question in the list
this method is called when the user selects the
set the current response
compares this section to the specified object
sets the order
shuts down the server
compares this object with the specified object for order
runs the
handles the action event
prepare the panel for the panel
this method is used to set the percent of the
clean up the temporary files
reads the file and returns the
reads the file and write it to the file
returns the audio file for the given audio file
returns the audio header for this audio
sets the
sets the
gets the value of the property
sets the
sets the
sets the
gets the value of the property
deletes a file from the database
returns the first genre of the first node
writes the code to the code write code
returns the xml file name
returns the structure as plain text
sets the tag
returns the name of the object
gets the value of the property
returns the length of the time
sets the
gets the value of the property
sets the
sets the location of the
returns the length of the time in minutes
sets the number of frames in the
returns the tag info
returns the number of peaks in the
accept all directories
loads the extended extended data from the given file format
returns the tag info impl instance
loads the data from the file
load the info from the given file format
sets the bands
update sliders for the sliders values
returns the
sets the
called when the user presses the cancel button
press the button
adds a listener to the list of
initializes the audio input stream
initializes the input stream
stops playback of playback
resumes playback of playback
event listener for the event
set the pan factor for this view
set the gain of the
set the stylesheet to use for the stylesheet
sets the parent of this node
returns the style sheet for the current view
returns the base path of the root directory
gets the value of the property
returns the frame
invalidates all the components of the
returns the tool bar
returns true if the component is ready to be added to the
this method sets the focused code of the code
returns the current focused code work code object
register a new workbench workspace
removes the work manager to the
closes all work pending work
undoes the last change
redoes the last undone command
this method loads the new file chooser
updates the given tool
invoked when a mouse button has been released on a component
invoked when a mouse button is pressed on a component and then
update the tool
pushes a tool onto the tool bar
pops the current tool and returns it
selects the current offscreen canvas for this renderer
deselect the cursor
returns the root of the
returns the workspace space
this is the implementation of the
inits the work space
applies the given component to the component
returns the component that is being used to the component
returns the selection layer
this method is called when the mouse coordinates are clicked
reloads the component
creates the components
invoked when a key has been typed
called when a key has been pressed
handles key released event
expands the given node and then expand the tree
set the grid step
invoked when the mouse has been clicked on a component
invoked when a mouse button has been pressed on a component
invoked when a mouse button has been released on a component
returns the of the node
invoked when the mouse enters a component
sets the stereo mode
sets the distance distance
sets the distance of the eye to the distance
runs the
invoked when the mouse exits a component
returns the type of this event
executes the run
waits for the task to wait for the
initializes the context for the given
this method is called when the password is removed
draws a new pass
invoked when a mouse button is pressed on a component and then
invoked when the mouse cursor has been moved onto the mouse
enables or disables the
this method is called when the window is
creates a window
called when the mouse is moved
this method is called when the is removed
set the renderer for this renderer
this method is called when the user closes the application
called when the component is gained
this method is called when the user selects the
sets the icon to be displayed in the icon
set the canvas
this method is called when the canvas is added to the canvas
invoked when a component loses the keyboard focus
starts the applet
sets the number of that will be used to compute the
waits for the current thread to stop
returns true if the current canvas is in context
sets the settings
returns the pass manager
login to the specified user
logs out the specified guest
returns the command line
check if the given code error code is a valid
checks if the handle is handle
releases a handle to the platform specific
disconnect from the host
get the interface instance
disconnects the connection to the server
deletes a directory in the guest system
deletes a file in the guest os
checks if the guest os exists in the guest directory
checks if the guest exists in the guest file exists in the
returns the power state of the vm
returns the number of hardware named snapshot in the current device
returns true if this power is off
returns true if the power supply is on the power supply
returns true if this state machine is suspended
description of the method
power off the electronic component
power on a power on the electronic component
this method is called when the platform is disconnected
this method is used to handle the
get the memory size of the native library
get the cpu cpu platform
returns the real statement
returns the real connection
returns the jdbc driver for this connection
creates a real driver
connects to a database connection
checks if the url is a url
returns the major version number of the current
returns the minor version number of the current version
returns true if the current jdbc driver is a jdbc compliant jdbc
initialize the filter
aggregates the aggregate
reports a report to the given reporter
starts the tracker
returns the aggregator name
stops the timer
returns the time in milliseconds
request to the request to retrieve the parameters of the request
initializes the filter
destroy the component
creates a new
returns the default tracker aggregator
creates a new tracker based on the given aggregator
reports the reporter of the given
this method is called when the user selects a message
starts the tracker
creates a new
creates a new
returns the elapsed time
returns a hashtable of all ports of the port
the port type
getter for property port type
returns a string representation of this port
returns the port data
calculates the pressure of the
set the port type
calculates the pressure in the
calculates the mm of the pressure mm
getter for property port type
calculate the venous pressure mb
returns the pressure
this method is called when the user presses the quit
returns the mm pressure
returns the pressure of the
returns the slope of the slope
returns the offset
sets the units of the current army
returns the voltage of the input voltage
returns the offset of the voltage in degrees
returns the number of units in this army
returns the output voltage of the
update the rate of the
sets the units of this component
returns a string representation of this object
updater for field
calculate wind wind wind wind wind wind
this method searches for the information
frees all the sensors
returns the
the data from the sensorbase
returns the current time
calculate humidity from humidity sensor
calculate the temperature of the sensor
returns true if the application is shutting down
sets the name of the
test method for
create an instance of
returns the of the scenario
returns the error strategy for the exception
returns the number of pending steps
returns the reporter of the
returns a new
returns a reporter to print a reporter
returns a string representation of this object
open the window
this method is called when the user selects the people
ends the
this method is called when the object is created
method to be called when the item has been created
this method is called when a player is created
this method is called when the room is created
sends a line to the server
move a player to a room
quits the thread
called when the user quits the bot
runs the timer
loads a file from the file
trims the content of the line
called when the invite is removed
get the statistics for the given channel
runs the thread
logs the line to the log
called when an error is encountered
returns the user that the bot is connected to the specified nick
runs the timer
returns a vector of all properties for the given property
returns the string value of the property
get the boolean value of the property
get the int value of the property
add a file to the list
runs the timer
this method returns the test goto
check the switch and returns the goto
returns the
this method is used to check the of the
returns the number of bytes that have been entered into the input
checks if the input value is valid
check if the is
check if the is
returns the number of bytes in the input
returns the number of bytes in the input
factory method for instantiating the drivers factory
checks if the input is valid
checks if the input can be converted to the input
pushes an item onto the stack
returns the maximum depth of the interfaces
moves all the static fields references in the static fields
executes the instruction
description of the method
returns the name of the field
compares its two arguments for order
compares its two arguments for order
returns the group identifier for the class
executes the method
this method is used to set the reference to the
this method is used to set the reference information about the reference
executes the semantics of the
returns true if the instruction is removed from the instruction
returns the values of the phase
sets the field put to the given field
sets the status of the field to the given value
generates the for the
insert a new monitor into the given
generate a code for the current instruction
return a list of classes that are all the classes
returns true if the given instructions are contained in the
returns true if the given instruction is overlap
returns the number of bytes in the spreadsheet
returns the path to the root directory
returns the path values of the root path
returns true if the combination is valid
calculate the stat for the current record
clears the internal data structures
increments the counter by incrementing the count
returns the current value of the
returns the total traffic reduction of the given
returns the value of the given code value code
returns the current value of the
combine the two elements by their combine values
returns the instruction type
checks if the given simulation has already been added
returns a sorted collection of jpg keys
get the global index of the given class
create a new freq record from the database
creates a new instruction factory
pops the top level instruction from the given code instruction code
this method is called after the constructor
returns the constant value for the field
this method is used to indicate that the
checks if the instruction handler is able to be registered
checks if the given method is a class
performs the instruction
this method is called when the is pushed
add a list of records to the next record
this method is used to consume the and return the result
sets the type of the given index to the given type
returns the top of the stack
return true if the type is a four byte literal type
marks the current position as a mark of the underlying stream
returns the number of blocks
sets the super class of this
set the class of the
executes the command
execute the command
executes the method
this method creates a map of info objects
compares its two arguments for order
sets the string info to the string value
get method or field address
returns true if the field is a small code attribute code
returns the address of the address
sets the address of the address
add the given node to the graph
adds a method call info
returns the number of descendant graphs in the graph
sets the node
returns the instruction corresponding to the given id
saves the given data to the given heap
check if the given class is a class
check if the casting mechanism is being used
creates a new state
this method is called when the thread execution is finished
sets the thread started multiple times
adds a function to the given method
sets the instruction id
returns the function return type
add instr instruction record
get the class of the pointer
description of the method
add a child to the current instruction
returns the string representation of this object
sets the value of the code code property
this method is called when the access level is set
add fake class path to the classpath
write the write work to the output
returns the key of this descriptor
returns true if the class is private
returns true if this is a class or an interface
creates the pools
returns true if this is a public
add a log to the log file
returns true if this is a protected flag
returns the pool of the specified pool
add a log file to the log
checks if this is a private member of this
add a log file to the log
returns true if this method is static
writes the logs to the log file
returns true if this is an abstract method
returns true if this member is final
returns the name of the source file
returns true if this is a native flag
returns true if this is a native or abstract
returns the class of the allowed class
returns the code attribute code that represents the
returns the exception
returns the index of the specified object
searches for the first occurrence of the specified argument first
clears the pool
adds all the elements in the specified collection to this pool
sorts the pool
sorts the pool
validate the pool
description of the method
returns a vector of all the objects that have a given pool
this method is called to update the length of instructions in the
returns the current size of the pool
returns the number of bytes in the buffer
returns true if the current instruction is a branch source
returns the number of operands
sets opcode for the opcode
returns the value of the code long code value as a long
returns the maximum number of elements in this list
replaces all occurrences of a given array with the given value
this method is called when the
this method is used to execute the command
print a byte array
returns the name of the method used to get the method
returns the name of the class
print the serial port
executes the command
returns a string representation of this object
returns a string representation of this object
returns true if the stream is ready to be read
mark the current position in the stream
returns the protocol
returns the instance of the
returns the
removes the first occurrence of the current element from the queue
enqueue an object to the queue
checks if the queue is already already already in the queue
update the parent of the
returns true if this route has a route
returns the parent of this node
returns the of the
set the new parent address
set the of the
returns true if the receiver contains info
shuffles the list of
prints the contents of the
prints the raw data to the stream
prepare for the additional data members
add a new info to the list
returns true if the cip mask is already set
creates a packet local from the packet
add additional information to the last event
prints the system
returns the initial routing information
reset the info to the default state
this method is called when the timer expires
prints the to the target
returns the route for the specified target
prints the contents of the header to the print system
prints the current print format
returns the forwarding route
search for a sequence number
insert a route from the list of routes
search the route with the given propagation
prepares the packet
prints the list of all the waypoints
adds a new message to the queue
sets the distance
sets the forwarding
returns the info for this node
called when a new data packet is received
sets the uptime
returns the time in milliseconds
returns the size of the payload
prints the
set the time of the last time
returns the route request
returns the length of the length of the payload
sets the broken
sets the own address of the
prints the current object
increments the sequence number
prints the packet
the main loop of the game
sets the off off the
sets the on all attribute
blink blink blink button
create an instance of
returns the driver
returns the of the mote
returns the serial driver
returns the radio driver
returns the instance of the
starts the
stop the timer
sends a packet to the socket
creates a packet for the current packet
creates a packet with the given size
returns the maximum length of the payload
begin user doc
returns true if the is
sends a message to the
returns the name of the error
sets the granted authorities
flush the queue
runs the main window
called when the data changes
add a header to the header
returns the file name of the header
returns the name of the guard
checks if the given class is a byte array
generates the header
add a page to the request
returns the border builder
returns the slide center
returns the border type
fill the current group with the fill properties
creates the component
clones this and another one
clones a new
returns whether numbering is enabled
returns true if the numbering is in reverse order
returns the diagram model
sets the level ordering of the
marks the modified state as dirty
gets the value of the ordering level property
returns true if the user has saved unsaved changes
returns the image maker used to create the image
creates the application help menu
saves the current diagram
adds a new diagram pane to the diagram
returns the current diagram
returns the diagram model at the specified index
returns the index of the specified diagram
closes all open tabs
returns the last display point
loads the file
called when the circuit is changed
invoked when the mouse button has been clicked on the
updates the text field
creates the application diagram options
returns the link controller
returns the peer peer
returns the peer z
returns the color of the selected item
sets the color of the item
returns the node group with the given name
switches the mouse point on the mouse
returns the node group associated with the given node
returns the name of the node group associated with this node
adds a group to the group
sets the component to the given one
removes a component from the list of available hosts
computes the origin point of the area
compute the size of the image
prepares the image for the given area
returns the node spec for this
generates the offscreen image for this frame
remove a group from the group
sets the content of the document
exports the image to the given file
update the position of the node
returns true if the content has content content
exports the image to the given file
edit the edit operation
remove the group from the group
exports the image to the given file
saves the current to a persistent file
sets the state of the content
rename a group
sets the end of the point
returns the content of the content of the url
sets the end z position of the point
sync group list
sets the end point of the line
save the diagram
clears the list of groups
returns the end point of the end point
sets the text of the component
returns the end point of the point
returns the text of the text
returns the options
displays the given element to the group
displays the given window
sets the title of this dialog
updates the text of the presentation
returns the distance between two points
adds a component to the presentation
removes the given component from the content pane
returns the distance to the point
returns the size of the content
destroy this component
returns the value of the is conflict property
sets the value of the
sets the color of the component
returns a new
adds a effect to the view
returns an action that will be used for the
returns the
removes the given node from the list of edges
returns the action factory
adds a node to the graph
adds a leg to the list
removes all edges from the given list of edges
remove a leg from the list
returns the ith component
locates the
returns the gap between the current location and the
adds an item to the list
removes the specified item from the list
called when the state of the state is changed
adds a new content to the list
returns true if this state has the state
returns the diagram specification
checks if the specified item is contained in the list
adds a listener to this scheduler
removes the code consumer consumer code listener
returns true if the given edge is contained in this graph
returns the number of consumers
returns the index of the issue
returns true if this permission is allowed
updates the location of the window
add a new entry to the set of data
returns the level of the node
this method is called by the framework when the
sets the level
returns a new point for the given node
returns a new point in the tree
returns the point of the given point
test of get state method of class
set the line parameters for the current point
sets the index of the
sets the stroke width
sets the shape type
clears the board
sets the width of the image
sets the height of the image
sets the text
sets the selected attribute of the object
sets the point to the given point
set the name of the client
returns the point of the point
returns the index of the
returns the width of the stroke used to draw the line
returns the shape type
sets the
sets the id of the client
returns the
returns the selector
set the selector
set the flag
sets the name of the client
sets the shape name
sets the shape info
sets the server
this method sends a shape to the zvtm server
sets the selected text in the
creates a copy of this operation
returns a string representation of the object
returns the operator for the given interval
this method is used to retrieve the deferred
loads the order of the order
sets the element to store element classes
load a single element from the given element
loads a new from the given element
loads a new from the given element
this method is used to store the element in the given object
set the value of the store element class
loads the ini data from the given file
sets the element to store element classes
loads the given xml element from the xml
store an element in the xml document
removes the preferences items
sets the feedback modes
returns the block with the given name
compares this object with the specified object for order
this method is used to set the value of the named element
returns the operation
checks if the bean is already set
disposes the resources
checks if the system is in use
creates a new
get the first element with the given name
remove the given transit type
register a user object
adds an operation to the list
returns the operation with the given name
updates the types of all the objects in the array
returns the matching operation for the given
returns the matching procedure for the given
store the given object
loads the element from the given element
sets the element class of the element
loads the given element from the xml
this method is called when the object is removed
sets the element class of the element
stores all the files in the given file
loads the given xml element from the xml
stores the preferences to the preferences
sets the element class of the element
loads the object from the xml
this method is responsible for returning the conditional manager
this method is used to refactor the manager instance
stores a common element to the store
load the common properties
returns the user name for the given bean name
returns the user name for the given element
returns the name of the system
stores the configuration to the file
sets the code store element code for this code service code
loads the routes from the given xml element
sets the element class of the element
loads the given from the
replaces the current signal head manager of the
replace the route manager
returns the named
get the with the given name
returns the user object with the given username
creates a new
this method deletes a route from the database
get the route from the user
returns the text of the closed text
returns the text that is being tested
returns the sensor for the given name
get a sensor by its name
get a sensor by name
create a new sensor for a given user name
load the xml file from the xml file
register a shutdown of this task
deregister a shutdown task
creates a new sensor for the given user name
returns the parent for the given name
deletes a conditional conditional
returns the conditional with the given name
returns the light for the given name
returns the light for the given name
returns the light light with the given name
returns the light light with the given key
activates all the lights to the system
this method returns the name of the system name
convert the given alternate name to alternate format
find the file with the given file name
creates a new reporter to the given system name
returns the reporter to use for the given name
get the reporter to be used for the given name
returns the for the given user name
returns a reporter to the given user
returns true if the given user can own multiple tasks
register the factory instance
deletes the given
get the object by name
returns the instance of the system name
returns the instance of the user with the given username
get a bean by system name
returns the bean with the given name
creates a new
get a named bean by name
register a new user
deregister a bean
this method handles the change of the property change listener
returns the number of in the database
creates a new light
get a named bean by name
returns a bean for the specified named bean
create a new named bean
returns the light
adds the given item to the preferences
returns the light light object for the specified light name
returns the number of known
returns the light light object with the given system name
returns the light object for the given user name
returns the number of characters that match the given
creates a new light
checks if the given system name is valid
register a new instance of the system
checks if the given system name is valid
deregister a named bean
normalize the system name
converts the given alternate name to alternate format
activates all light objects
returns the name of the preference item for the given name
returns true if the specified system name exists in this system
returns the description of the item in the list
returns the default value for the specified class
sets the default value for the given class
returns true if the given user can own multiple problems
get the object
sets the state of the session preference session
returns the value of the property
returns true if the property exists
sets the property attribute of the property object
returns the state of the session preference preference
remove a signal signal
remove the signal second logic
show info message
register the factory instance
deletes the given section from the chart
returns the section name for the given name
initialises the signal
initializes the
initializes the
adds a selected item to the combo box
returns the thread that is waiting for this thread
returns the last selected selection of the combo box
sets the last selected date
format the byte array to a string
store an object in the xml format
extends the element to the element
updates the given name and the given name
subclasses may override this method to provide unpack
returns the name of the nth combo box
initializes the serial node
this method is called when the user changes the request
get the
inherits the node from the given element
called by the client to set the message
returns the last selected number of the nth selection
dispatch a reply to the client
this method is called when the server is about to be
returns true if the user has been set to send to the
singleton method for the serial sensor instance
configure the sensor
send a message to the server
the instance of the receiver
method called when a new state is encountered
configure the baud rate
adds a header to the output buffer
this method is called when the is
returns the length of the bytes of the stream
sets the state of the output bit
creates a new packet
register a sensor to be used in the sensors
constructor for serial message
constructor for serial message
creates a new light
returns true if the specified system name is valid
checks if the specified system name is valid
normalize the system name to the given system name
convert the given alternate name to alternate format
returns the instance of the serial port instance
cancel the cancel button
invoked when the user attempts to close the window
restores the notes
setup the
requests the throttle for the given address
resets the status to the
read the address
returns the name of the system
cancel the throttle on the specified request
returns the number of headers in this request
cancels the throttle request
configure the
returns the entry of the ith map entry
returns the speed mode of the speed mode
adds help menu to the help menu
configure the command station
setup the manager
this method is called when the user chooses to adjust the text
this method is used to set the value of the field
returns whether the read can be read
returns the length of the record in bytes
store the given object
set the byte array to the byte array
returns the buffer of the buffer
set the content of the data source
sets the unit configuration for the given
returns the description of the given class
handles tree selection
this method gets called when a property is changed
updates the user object
displays the message details for the given item
returns the number of rows in the model
reads the bytes from the input stream
description of the method
set the button action to the selected text
writes the given to the stream
reads the selected devices button
connect to the server
get the ith security element
returns the aspect generator for the ith aspect
returns the size of the multiple choice size
returns the current state of the last
returns the name of the choice
disposes the toolkit
this method is called when the message is received
configure the
set the serial port
notifies the listener that a new shot has been changed
sets the address of the channel
returns the slot number for the given row
configure the manager
returns the multiple choice value for a given choice
all
returns the default option choice
sets the
sets the not busy flag
this constructor is called after the state of the
runs the
return the of the
this method is called by the whenever a message is received
notify the note that the note has changed
this method is called when the channel is read
write the block to the write complete
reads all rows from the table
disposes the toolkit
notifies the server that the message has been added to the
writes all the rows in the table to the table
wait until the given number of bytes are waiting
construct a string from a string
sets the type of the station
returns the speed of the
returns the speed of the servo
sends a function to the
release the resources
define how an event dispatches to the user
disposes the toolkit
returns the string representation of the given id
wait for the next to be used
read the next slot
start the timer
sets the clock
stop the timer
restarts the timer
dispose of the
creates a new light
checks if the given system name is valid
this method is used to set the timer to the current time
returns true if the system name is valid
set up the for the given bandwidth
returns the speed mode of the speed modes
notifies the listener that a new shot has been changed
returns true if the address is a long address
returns true if the address is a short
this method is called by the to notify the server that
returns the size of the preferences file
sets the delay between the and the
returns the number of items in the specified item
sets the value of the specified item
note this method is for internal use only
write the complete block of the note to the end of the
read the image from the stream
write the to the output stream
returns the message for the given message
connect to the server
this method is called when a slot address is pushed
disposes the
handles a message from the server
this method is called when the message is about to be processed
scan the button action
handles a message channel
handles the scan report
returns true if the field group name is valid
sets the mode
returns true if the is valid
checks if the password field entered in the password field
sets whether the program should be off
sets whether the connection can be read
sets the command station type
sends a message to the server
returns true if the given mode is a mode
sets the last value of the last query
push an state to the
returns the value of the last value property
insert an address into the agenda
returns the numeric address of the
returns the high level
returns the string representation of the current value
sends a message to the network
connect to the network
disconnect the port
returns true if the is busy
returns true if the serial port is currently
adds a to the table
handles the of a message
called when a new slot has changed
this method is used to set the of the data
configure the
queries the server for a group of
connect to the port controller
this method is called when the port controller port is exited
set the
method action performed
this method is called when the user selects a message
disposes the editor
set the channel for the communication channel
connect to the port controller
notifies the listener that a new value is done
this method is called when the port controller port is exited
reads a byte from the stream
set the password
notifies the scheduler that a new program has been restarted
sends a new programming reply to the server
set the group id
this method is called when the is
request the throttle for bandwidth
stop the power timer
reset the statistics
returns the number of received messages received
returns the number of received bytes
returns the number of messages
restarts the power timer
sets the board id value
creates a new mode with the given status and type
creates a status message
the power supply power supply
override this method to provide custom status line
set the status message
this method is called by the to update the next slot
returns the number of days in the
appends the given line to the end of the line
disposes the dialog
set the value of the days
send a message to the server
reads all the data from the input
configures the project
returns the slot number of the
send a message to the specified slot
sets the type of the word
configure the
set the slot number of the
configure the managers
writes all the data in the current to the console
load a byte array from the given buffer
returns the number of minutes in the
load byte array
writes the given byte to the selected text
sets the slot minutes
load byte array
load byte array
load byte array
returns the number of in the
load a byte array from the buffer
load a byte array from the buffer
load byte array
go to the next available thing
returns the number of in the
load the byte array from the buffer
sets the slot rate
load byte array
returns the number of slots in use in the list
returns the head of the
returns the total length of all elements in this collection
load a byte array from the given buffer
initializes the
this method is called when the user selects the request
set known state
disposes the
send a net message to the server
returns a string representation of this object
compares this net net message to the specified object
the of the
returns the hash code of this object
forwards the message to the client
return the address of the
called by the client to handle the reply to the client
set the header of the header
send a message to a message
adds a message to the trailer
this method sets the value of the
returns the length of the bytes of the data
configure the
decodes a from the hardware
returns the current mode of the selected item
the given hardware to the hardware
decodes a from the hardware
the message to the given hardware
this method sets the value of the
returns the header of the header
send a message to a message
decodes an from the hardware
returns the header of the
the given hardware
returns the number of bytes in the buffer
returns the byte value of the byte given by the byte
sets the mode of the current mode
sets the header at the specified index
returns the value of the header
returns the number of bytes in the buffer
this method sets the value of a byte to the
returns the byte value of the byte given by the given byte
compares the specified object with this receiver for equality
send a message to a message
decodes an from the given hardware
updates all the components in the list
the given hardware
this method is called to change the current message to the
returns true if the given type is a
this method is called when the timer is closed
set the state of the sensor
send the to the
this method is called when a message is received
this method is called by the to indicate that the
the of the
creates a new
sends a function to the
set the speed of the speed speed
returns a message describing the specified header
starts the request
add help menu
this method is called when the application is closed
this method is used to wait for the timeout
returns the speed mode of the speed modes
the speed of the
p returns the boot parts header and associate a
filters the message
set the address of the nn to connect to
set the enabled state of the
sets the type of this
returns the initial
this method sends a signal to the remote device
returns true if the read can be read
returns the boot pool for a specific i2 c
sets the mode of the
sends a packet to the server
returns the boot resource for the specified header
releases the session
set the speed direction
sets the functions for the given group
sets the steps of the message
returns the boot test
returns whether the driver is a service mode
this method is used to notify the listener that the job is
returns the boolean value of the in service mode
returns the version string for this version
returns true if the given class is a memo
configure the table
this method is called when the user selects a message
this method is called to notify the server that a reply message
test the
configure the managers
initialize the serial node
saves the current table
called by the timer when it is closed
saves the current file to the selected file
this method is called when the message is about to be processed
this method is called when the user is about to be executed
configure the sensor
sets the output bit of the given bit
returns the output bit value
this method is called by the to notify the server that
notify the that a new value has been created
initializes the light
this will create a new state
checks if the address is a node address
this method is used to create the packet
mark the specified as described by this
register a sensor to be used in the sensor
adds a header to the output buffer
notify the dialog that the project has been created
adds a message to the trailer
returns the length of the bytes of the byte stream
constructor for the serial message
constructor for serial message
request the throttle for bandwidth
configure the toolbus
connect to the port controller
this method is called when the port controller port is exited
the traffic controller
runs the thread
send a message to the
returns true if the address is a long address
this method is called when the function is about to be
checks if the address is a short
configure the managers
returns the value of the property
forwards the message to the client
dispatch a reply to the client
send a message to a
configure the
checks if the given system name is valid
sets the filter
sends the request to the server
invoked when the user attempts to close the window
forwards the message to the client
dispatch a reply to the client
send a message to the
the traffic controller
runs the thread
read the address
this method is called when the thread is closed
this method is called when the is
this method is called when the sequence is
runs the uc
forwards the given code reply code to the client
returns the message that contains the message
returns the serial message for the specified length
checks if the given system name is valid
configure the manager
creates a new code light code with the given
creates a new code specific message code with the specified
constructs an instance of the specified class
configure the
this method returns the corresponding string representation of the
returns the string representation of the monitor
initializes the intensity
configure the camera manager
returns the number of steps
creates a new code gl20 resource light code with the given
configure the
adds a function to the list
adds an address to the server
adds an extension to the device
returns the command
a class that creates a new
configure the manager
creates a new reply
configure the
returns a specific
get the
returns the number of steps in the current intensity
configure the manager
configure the
initializes the intensity data
adds a function to the
adds an address to the
a private class to test the
creates a new light
returns true if the given string is valid
checks if the given system name is valid
this method is used to normalize the system name
constructor for serial message
returns the manager
returns true if the given type is a
configure the managers
starts the timer
starts the timer
sets the mode of the current mode
the of the
sends a function to the
decodes an encoded message
forwards the message to the given listener
forwards the reply to the given reply
send a message to the
called when the timer is closed
traffic controller instance
returns the traffic controller
configure the managers
returns the name of the host
register the
returns true if the given class is a
configure the
send a packet to the server
forwards the message to the client
forwards the reply to the reply to the given reply
send a message to the
returns true if the element is empty
returns the result code
the traffic controller
returns the speed of the
configure the manager
returns the speed of the servo
returns true if the given type is a
returns whether this node is capable of being reordered by this instruction
this method is called when the property name is selected
configure the
deregister a object
configure the
returns the length of the bytes in bytes
stop the button
forward command change to the current state
constructor for the serial message
constructs a new serial message object with the specified value
configure the
connect to the port controller
this method is called when the port controller port is exited
the
the
returns the traffic controller
configure the managers
returns the controller
this method is called when the user presses the
configure the managers
configure the
returns the msg address of the given
returns true if the given is a command
returns the instance of the controller
connect to the port controller
this method is called when the port controller is connected to
checks if the is a valid
sets the mode of the current mode
sends a message to the server
connect to the port controller
this method is called when the port controller is exited
called when the timer is closed
the traffic controller
returns true if the is
returns true if the object is an error
returns a string representation of the message
returns the value of the element
returns the number of characters in the specified string
sets the mode of the current mode
sends a packet to the server
return the slot slot at the specified slot
find the free slot of the
find the address of the address
called when the timer is closed
returns the speed mode of the speed detector
adds help menu to the help menu
returns the number of rows in the model
configure the
returns the slot number of the given row
returns the version of the
returns the major version number of the
checks if this version is a
returns true if the line has blue
returns true if the current iterator has the current limit
returns true if this is a firmware or not
the timeout
starts the timer
restart the timer
set the speed at the given address
this method changes the address of the radio button
initializes the components
set the roster entry
all slots in the
this method is called when the slot is
returns true if this is a
opens the file and returns the open connection
returns true if the type is a
called when the user clicks the timeout
opens the file and returns the output stream
returns the block length of the block
close the connection
returns the block length of the given block
returns true if the address is valid for a given address
returns the hex value of the high level hex
initializes the components
write the to the
eat the
returns the type of the record
returns the number of slots in the list
set the timeout
returns the address of the address
returns the address of the address relative to the address
returns the address of the address
writes a byte to the output stream
writes the given byte to the hex
writes a byte to the output stream
configure the
this method is used to set the value of the tcp transport
returns the traffic controller
returns true if the mode is possible
configure the command station
configure the manager
send a to the
sends a function packet
sends a function packet
sends a function packet
set the payload to the given payload
configure the sensor
send back the count
register a sensor to be used in the sensors
returns a packet message
returns the html tag
this method is used to convert a digit into a
forwards the message to the client
forwards the reply to the reply to the given reply
send a message to the
creates a new
compares the specified object with this receiver for equality
checks if the given type is a object
returns the name of the
this method is called when the user presses the
set the state of the sensor
returns the name of the
this method is called to change the message to the
get the speed of the speed of the
checks if the parity is allowed to be
returns true if the buffer is currently being watched
this method is called when the port is about to send
configure the
configure the
returns the response message encoder for the feedback message
returns true if the message is a feedback message
called when the user presses the
returns true if the is broadcast broadcast message
returns the timeout for the thread
called when the user presses the display timeout
returns the current throttle addr
returns true if the message is a throttle of this message
reads the from the
this method is called after the throttle is spawned
reads a byte from the input stream
returns whether or not this message is over the message
returns the manager
requests the throttle for the given bandwidth
returns true if the message is
returns the speed mode of the noise speed
sets the state of the socket
send a message to a reply
this method is used to set the rtcp data
returns whether the read can be read
configure the
requests the throttle for the given bandwidth
set the station type
set the value of command station software version
set the software station to the station software version
adds a header to the output
returns the length of the bytes of the byte array
returns true if the mode is possible to allow a
send a packet to the server
configure the
send a message to the server
creates and returns a normal mode
returns true if the
returns the name of the
this method is used to set the cache for the connection
returns the system connection memo
sets the system connection
sets the reply to the given reply
stores the given element to the current element
sends a message to the
connect to the server
disconnect the port
notify the sender of a new message
returns true if the station is capable of updating the
returns true if the status is ok
returns the name of the
this method is called when the station station station is
configure the
reads the content of the given code
calculate the address of the
configure the
creates a new light
sets the host name
set the port number
reconnect to the server
singleton method for the sensor manager
called when the connection is established
this method is called when the timer is closed
notify the dialog that the project has been created
returns true if the given system name is valid
checks if the system name is valid
the system name to the given system name
returns the instance of the light manager
initialize the
sets the starting output address

returns the starting position of the output
sets the ending output address
creates a new message
constructor for the message
initialize the light
sets the state of the node
returns the ending address of the output
set the number of retries
notify the that a new value has been created
checks if the given system name is valid
checks if the given system name is valid
singleton method for the instance of the manager
set the
sets the starting position of the
returns the traffic controller
configure the managers
returns the minimum node address
returns the maximum number of nodes in the tree
returns the starting position of the sensor
sets the ending address of the sensor
returns the instance of the traffic controller
connect to the port controller
this method is called when the port controller is exited
returns the ending value of the sensor
request the throttle for the given bandwidth request
disposes the throttle for the given throttle
initializes the node with the given node
lookup the sensor address
returns the output bit readed from the
forwards the message to the client
returns true if the sensor is active or not
dispatch a reply to the client
returns the output compressor
send a to the
sends a function to the server
send a message to the
returns the speed increment
the
initializes the node
registers a node to the pool
returns the node from the address
get the object
this method updates the node from the given poll
updates the current pointer to the next node
adds a header to the header
adds a message to the trailer queue
returns the length of the bytes of the byte stream
run the action
method called when the button is pressed
stop the simulation
stops the
configure the sensor
adds the button to the dialog
stops the countdown
this method is called when the server is about to be
notify the that a new value has been created
invoked when the user attempts to close the window
creates a new state
deletes the button
this method is called to set the serial port
returns the sensor type for the given sensor
returns the output bit readed from the
returns the number of cards in the card
returns the number of output cards in the deck
sends a function to the
sends a function to the
set the node type to the given type
returns the number of bits per card
set the number of bits per card to the given number
check if the address is a node address
read the address
returns the delay transmission delay time
reads the address node address
sets the delay transmission delay to the given value
returns the pulse width
sets the pulse width
returns true if the card is a card
sets the node type string
checks if the card is a input card
returns the index of the card in the card
returns the index of the card in the
notify the dialog that the project has been created
returns the number of output bits
returns true if the given bit is a search bit grayscale
check if the address is a node address
forwards the message to the client
dispatch a reply to the client
send a message to a
returns the instance of the
returns the sensor bits per card
register a sensor to be used in a
sets the delay transmission delay to the given value
sends a function to the
sends a function to the server
configure the managers
returns the model tree model
runs the node
get a node from the given component
changes the current state of the sensor
register a sensor to be added to the sensor array
returns the sensor at the specified index
returns the name of the hardware clock
checks if the clock is currently being used
can this clock be
sets the rate of the
determine if the user require a specification
description of the method
returns the rate of the
send group1
send
stops the hardware
this method is called when the is
add an entry to the list
disposes the listener
remove an entry from the list
returns the combo box
this method is called when the is
returns the roster entry associated with the given title
this method is called when the is
description of the method
send message to the server
returns true if the device can be locked
enables or disables the lock operation
sets the mode of the current mode
returns the value of the first element in the queue
creates a new light
configure the
adds a to the
remove from
this method returns a message that can be used to send the
kill the
this method is called when the is received
sets the reply length
adds a to the list
checks if the is valid
configure the
reads the memory and memory
send a packet to the server
forwards the message to the client
forwards the reply to the reply to the given reply
sets the command options
sets the usb system
returns the prog mode
sets the prog mode
configure the command station
returns true if the given type is a
send a message to a
recover the connection recovery
setup the manager instance variables and managers
reconnect to the server
this method sets the and to the specified value
returns a string representation of this object
returns true if the is possible
configure the
forwards the message to the client
forwards the reply to the reply to the given reply
send a message to the
the traffic controller
returns the traffic controller
configure the managers
grab the entity from the database
convert a double to a double representation of the object
convert an object to a nice way of reading
kill the
returns the reading
returns the id of the object
returns true if the current point is ok
returns the code associated text code of this code
returns the path to the shape
set the origin of this sprite
set the coordinate of the center of the point
this method is called after the menu bar is initialized
grab the entity from the database
adds a region to the list
adds a listener to the list of reading the listeners
removes a listener from the list of reading listeners
adds a listener to the list of listeners
removes a listener from the list of listeners
unpack the element
sets the maximum number of receiver to send to the receiver
configure the thread
sets the receiver to the given address
sets the value of the property
convert a double to a double representation of the given
convert the given data to a double
returns the current state of the entry
this method is called after the menu bar is initialized
description of the method
the given reply
store the object in the xml tree
loads the object from the given element
adds a message to the trailer
configure the sensor
returns the length of the bytes of the data
creates a new state
send back message to the output
sets the node address of the node
returns the address of the node
sets the address of the node
creates a new serial message object
constructor for serial message
get poll for a poll
returns the formatted data
connect to the port controller
initializes the button for the
this method is called when the port controller port is exited
returns the value of the element
configure the
wake up the timer thread
returns the traffic controller
configure the managers
returns the name of the file
configure the baud rate
this method is called when the is
sends a message to the listener queue
returns the name of the connection pool
returns the remote address of the socket
returns the prefix from the list of known
set the current socket to be used
runs the script
returns the filename for a given filename
sets whether the container is resizing
returns whether the container is resizing
returns true if the aspect ratio of the are
loads the given element from the xml element
sets the aspect ratio
load an element from the xml element
adds a revision to the svn revision
returns the state from the given state
returns the name from the state
convert a value into a string
adds a message to the trailer
returns the scaled image
converts a string into a string buffer
generate a string with the given value
returns the length of the bytes of the given byte stream
generates the window ref
convert a byte array into a string
sorts the array
the method will be called when the files are dropped
sorts the array
sort the upper case insensitive
sort the given array of values
adds a help menuitem
returns a string representing the quote in the form
returns hint hint for the given attribute
sets the escape key to the given java
dispose of the window
disposes all the resources associated with this
returns the action for the action
sets escape window to the given window
returns the escape key window
returns the preferred size of the component
this method handles the event handler when a property changes
initialize the context
returns the port name
returns the position of the current user
this method is called when the port controller is exited
returns the location of the slider
returns whether the size of the buffer should be reused
this method is called when the server is ready to send
returns the name of the selected user
sets the flag indicating whether the window is modified
returns the name of the selected system
returns the name of the selected display display
sets the value of the first item blank property
returns the root element of the given file
reports an exception to the server
dispose of the window
reads a byte from the stream
can this server be disconnected
write the specified color to the output
close the image
disposes the page
sets the color of the text
prints the image to the line
writes the image to the specified component
returns the name of the service
writes a scaled version of the given scale to the output
returns the name of the service
check if the path is set
returns the type of the service
returns the service info object
returns true if the service is published
write the given row to the end of the line
publish the services
sets the state of the transit state
stop the service
add a transit section to the list
returns the current line number
writes the contents of the to the
removes all sections from the list
returns true if the section is contained in the list
increase the line spacing
returns true if the given block is already in the list
returns the number of blocks in the block
returns a section of a lexeme
this method resets the value of the cv
returns the value of the field for cv constants
gets the direction from the given section and
returns the index of the
sends a list of message to the server
sends an error status message to the server
send the train to the current list
sends the location list list to the server
returns the number of in the block
train the jobs
train the given string and return the name of the current train
train the given training string into a string
returns the power supply being used
the constructor for the manager menu
train the train weight
this method builds the train number of the given training
sets the title of the window
train the
train the given
sends a full status message to the server
change the reporter to be used for the reporter
returns the name of the sensor blocking
disposes the resources
stores the given object to the
loads the object from the given element
stores the given object in the list
sets the current reporting current
store the object in the xml tree
store the element in the given object
load the given element from the given element
store the object in the given object
store the element in the given object
store the element in the given object
store the given object
set the value of state
sets the value of the property
returns the value of the specified key
round a value to a decimal value
executes the action
this method is called when the action is pressed
add a block to the list of known
disposes the toolkit
disposes the toolkit
returns true if the current lock is available
adds an output to the
clears the output
initializes the signal logic
returns the output by index
returns true if the given is included in the
returns the output compressor for the given name
returns the output for the specified k
sets the state of the inverted list
returns the output state
returns the name of the forward stopping sensor
returns the number of in the list
adds a new sensor to the sensor
this method is called when the user is inactive
clear the output sensor list
returns the conditional value of a conditional conditional
returns the sensor output file by index
adds a new conditional to the list
returns true if the specified sensor name is included in the
returns the sensor set of the sensor data
returns the sensor associated with the specified k
this method is called when the is about to be
returns the sensor sensor state
activates the
sets the script name
returns the script name
returns the sound name
set the aligned aligned
get the state of the given state
returns the aligned sensor
sets the enabled state of the signal
clear the route route sensor
this method is called when the is activated
returns the sensor sensor name for the specified sensor
returns the number of blocks in the block
returns the sensor sensor for the specified index
returns the sensor mode for the sensor
returns true if the given destination is active
returns the length of the
set the control name
returns the control
returns the block with the given number of sequence numbers
set the lock control name
returns the lock control
returns the block number of the given block
returns the current state of the
removes all blocks from the block
sets the delay the delay will wait for the next time
returns the delay of route
this method will be called to use the custom editor to the
sets the control state
set the state of the
sets the lock control state
returns the lock control state
returns whether or not the given editor can be used
locks the
set the route to the current state
returns true if the are automatically crossed
returns the begin block name
sets whether or not the is automatically
set the lock flag
adds a new entry to the forward list
sets the
set the busy flag to the current one
dispose the resources
sets whether this component is held by the given
returns the aspects of this vertex
returns true if the busy state is busy
this method is called when the state is
returns the current state of the
sets the aspects of this node
sets the state
set the state of the
returns the state of the
this method is called when the state machine has been updated
returns true if the state is consistent
sets the report
sets the state of the
set the value of the current value
returns the state of the machine
starts the hardware clock
sets the type of this action
get the name of the device
returns the inverted state
returns the action data
returns the state
sets the action data
initialises the
returns the action string
sets the state of the locked
returns the value of the report locked lock
set the sound
returns the operator
returns the type of the item
returns the feedback mode for the operation
returns the string representation of the option
starts the
initializes the multicaster and sets the property
returns true if the variable is a intensity variable
sets the time duration
returns the state of the
sets the comment
returns true if the variable is a intensity variable
sets the intensity of the intensity
updates the intensity value of the intensity of the intensity
updates the empirical intermediate calculation
updates the intensity value of the high intensity of the
returns the current intensity value
disposes the toolkit
returns the current intensity value
checks that the prompt is needed for the current prompt
this method is called when the user presses the
close the connection
disposes the resources
returns the maximum intensity value
check that the given is a signals
gets the expression
executes the command
executes the operator
returns the min value of the intensity
returns the logic type of this constant
this method gets called when a bound property is changed
sets the time in minutes
move a bean to the given listener
sets the type of the transition
returns the operator for the given operator
notify the listener that a state change occurred
method new new state
activates light light
deactivates the light
sets the variable variables to the given code
this method gets called when a property is changed
recalculates the source audio manager
sets the value of the store element class property
loads the given audio from the given xml clip
sets the action attribute of the object
calculate the position of the current time
resets the current position to the current position
initialize the
parse the format
initialize the state
calculate the pitch for the current pitch
set the gain of the current gain
sets the pan control of this sound
sets the pitch value of the audio file
lays out the frame
populates the data from the game
returns the memory
sets the value of the vector
returns the value of the clip
sets the value of the spinner
returns the value of the audio
resets the frame to the initial state
initialize the audio
returns the audio format
cleans up the resources
returns true if the is a
sets the state of the current state
sets the end loop point
sets the forced flag
parses the format of the
calculates the number of loops
returns the fade factor
toggle the play on the play
toggle the pause state
returns the fading fading level
this method is called when the mud is
sets the operation
this method will be called after the jtable is made to the
this method returns true if the property name is a property name
sets the column to hold the given column
called when the user presses the button
returns the component that is used to render the cell
create the jtable for the jtable sorter
adds a component to the bottom box
this method creates the model
adds the control pressed to the end of the window
returns the control type for the specified control
deletes the control table model
this method creates the model for the table
adds a frame to the list of elements
set the menu bar
returns the help target
this method creates the model for the table model
returns true if the property name matches the property
set the action mappings for the given action
called when the user presses the pressed button
create the audio data model
returns the instance
returns true if the button is selected
returns the selected mode
returns the object
sets the enabled state of the button
updates the status of the current status line to the given mode
returns the of the currently selected
this method gets called when a property is changed
initializes the applet
returns the signal
sets the signal to the given name
sends a list of all the listeners to the server
sends the list of the system to the list
returns the name of the watch
returns the name of the watch
sends a message to the device
returns the watched name
release the current release
returns the watched name
returns the watched name
invoked when an action occurs
returns the watched name
returns the watched name
sets the speed of the servo
returns the watched name
sends a list of all the listeners to the server
this method gets called when a bound property is changed
this method will deregister the jmx service
returns the current address string
handles the message from the list
send the list to the server
loads the file from the given file
returns the approach
build the list of
this method is called when the user clicks the save button
applies the values of the current component to the current values
remove the current time from the list
returns the next page in the current page
notify device info about device change
load a single element
returns the icon for the given name
loads the given tree from this set of archives
set the rotation of the component
register the current state
opens the directory chooser
insert a node in the tree
shrinks the objects by the given width and height
get the directory for image files
adds a leaf node to the tree
adds a new leaf node to the tree
deletes the subtree of the tree
creates a new branch
adds a new catalog tree to the tree
this method is called when the user chooses to update the scroll
invoked when the user selects the file
performs the action
initializes the object
handles the
returns the folder
registers a new
removes the given code automaton code from the list of
returns the automaton with the given name
this method will be called when the animation loop is
this method is called when the user presses the
set the output of the output
initializes the applet
this method is called when the user selects the output
sets the output of the current
handle the event
handles the
this method is called when the user modifies the object to the
loads the given element from the xml element
start the thread
runs the thread
returns the model for the given node
adds a new code choice code to the list
adds a setting to the variable
removes the given node from the tree
confirm that the confirm button is asked to be removed
returns true if the given value is a
changes the node to the given node and the tree
set the state of the cv
checks if a node is a
set the state of the
selects the value in the current state
set the tooltip text
waits for the thread to sleep for the given msec
wait until the given thread is waiting
sets the state of the variable
set the state of the
returns true if the variable is read
this method is called when the sensor sensor handles
set the state of the cv
wait for a sensor to wait for a sensor
returns true if the variable is a write state
returns the value of the specified string
wait for the sensor to wait for a sensor
reads the current value and reads it from the
check if the name is a name
this method is called when the sensor process is exited
returns the
initialize the components
returns the currently selected node
handle the event
called when the user selects the
set the state of the cv state
writes all the data in this object to the given
the method code code
the
opens the button
returns the value of the cv at the given time
opens the
called by the decoder when it starts
a
sets the value of the field
set the state of the
sets the busy attribute of the object
notifies all registered listeners about the event
sets the information if the file is not already added to the
returns the information if the is only
sets the write only flag
this method does nothing
returns the write only attribute
creates a new element from the given list
creates a new pane
returns the mode pane
disposes the resources
returns the mode pane
adds a new box to the
add an item to the list
adds a string to the array
invoked when an action occurs
sets the value of the text field
set the state of the cv
reads the content pane
called when the decoder is started
this method is called when the view is read
reads the next pane from the list
writes the contents of the pane changes
set the tooltip text
writes the pane to the end of the list
save the current settings to the current value
this method is called when the pane is removed
returns the value of the specified cv
this method is called when the user wants to confirm the delete
confirm the
show a confirmation dialog
set the default value of the variable
adds a value to the list
sets the number of to the given value
updates the cv for addr and sends a
this method handles the scrollbar events for the slider
enables or disables the buttons for the given button
reads all the changes from the panel
reads all the components from the panel
writes all the text in the panel to the console
writes the text to the console
returns the representation of the name of the variable
reads the ith variable from the table
set the of the
writes a row to the table
store the object in the xml
sets the type
loads the object from the given element
store the object in the
store an element in the given object
returns whether the file is dirty
store an element in the current group
store the given element in this object
loads the svg element
returns the single route
sets the signal head of the given
set the
returns true if the data source is dirty
checks if the given key is a valid state
sets the icon of the given icon
store an element in the given object
stores the element in the given object
returns the head of the buffer
this method is called when the sensor icon becomes active
initializes the applet
initializes the applet
initialize the component
set the level of the
makes the icon for the icon
initializes the table
initialize the table
returns the table model
called whenever the value of the selection changes
called whenever the value of the selection changes
returns the table selection model
set the detector
returns an icon for the given key
initializes the applet
initialize the component
initializes the update
invoked when a mouse button has been clicked on the editor
updates the size of the component
adds a new family set to the dialog
delete the family set
pops up a pop up menu
initialize the families list
updates the map of icon groups
adds a new font to the given
disposes the resources associated with this
remove the specified icon map from the map
deletes the icon
called whenever the value of the selection changes
this method deletes the icon
add the panel to the add set button panel
create a new family
initialize the applet
adds a new family set to the parent
remove the family set
action done when the user clicks the button
initializes the action
initializes the button
called whenever the value of the selection changes
sets true if the is
remove the current element from the list
sets the security element
returns the icon for the given state
store the object in the xml
loads the blx object from the given element
store an object in the database
loads the xml element from the xml element
store an element in the xml document
loads the xml element from the given element
sets the element to store element classes
loads the given xml element from the xml
replace the layout manager instance with the new one
invoked when a mouse button has been clicked on the component
store an element in the buffer
loads the element from the given element
store an element in the xml document
loads the xml element from the given element
performs the actual of the mouse double click on the
performs the
the mouse click on the graph
disposes the resources
remove the parent element from the container
returns the value at the given row and column
returns an icon that represents the specified icon
disposes the resources
hides the hidden components
activate the
this method is called when the user selects the view
invoked when the user attempts to close the window
returns true if the track is
sets the center of the shape
returns the next node in the track
invoked when the user attempts to close the window
paint the target panel
sets the next location to the given location
sets the busy attribute of the project object
sets the busy flag
returns true if the is
sets the betting thread
returns true if the ray is indexed
show the pop up up
sets the layout block of this block
removes the layout block
returns the layout block with the specified name
sets the track connection for this track
remove a menu item
returns the block with the sensor assigned to the given sensor
returns the block with the given memory
method for filling the selected data in the given menu
removes the last element from the list
set the signal to the
set the name
returns the aspect of the
adds a new layout editor to the editor
redraws the panels layout block
sets the to the given block
set the sensor sensor for this sensor
returns the block color
sets the icon for the given icon
returns true if the track segment is a
set the memory name
returns the name of the sensor
returns the sensor for this sensor
set the name of the sensor
returns a layout block by the given
returns the block with the given sensor
returns the sensor sensor value
get a block by sensor
set the of the sensor
set the block
returns true if the file is a non terminal
deactivate the block
sets the icon for the given status
returns the icon for the given state and its state
enables or disables the advanced routing
returns head from the head of the
sets the memory of the portlet
set the list of memory used by this component
returns the flag
set the text to popup menu
returns the last routing change
sets the memory of the portlet
set the list of memory used by this component
sets the icon for the given icon
updates the path of the view
sets the layout block of this block
checks if the user is a portal icon
adds an icon to the map
returns true if the track segment is a
sets the icon for the given icon
activate the
pops up a popup for the given popup
set the list of memory used by this component
displays the current state
toggles the state of the
prints the information
returns the block at the given position
removes the given block from the list
this method is called when the user selects the view
returns true if the given destination is a route
invoked when the user attempts to close the window
sets the next location in the list
returns the direction of the given
set the origin of the
sets the current location of the
returns the number of neighbours the is
returns the i th block of the block
saves the selection group to the given list of selection
get the ith direction
returns the ith metric
handles mouse dragged events
returns the icon for the specified index
returns the ith packet flow
updates the size of the popup window
set the light name
set the
sets the icon for the given name
returns the icon for the given state
sets the reporter name
singleton implementation of the
this method deletes a panel
adds a editor panel to the editor
this method updates the editor panel
this method will show the editor panel
returns true if the name of the editor is used
returns the icon for the given index
returns the number of routes
this method is called when the user modifies the object to the
returns the ith route at the ith index
get the ith route block at the specified index
invoked when a mouse button has been clicked on the editor
returns the next block at the specified index
removes all from the list
returns a string describing this plugin
writes the given code file code to the given code
adds an entry to the list
returns the hop count for the ith hop
remove an entry from the list
returns the roster entry associated with the given title
update the given
returns the entry at the specified index
returns the length of the ith route at the ith index
returns the ith group entry
returns the file name of the title
returns true if the cell at the specified row and column
returns the value at the given row and column
returns the ith route metric
returns a filename suitable for valid filenames
adds a component to the top of the list
sets the flag to quit or not
reloads the roster file
returns the ith route state
this method is called when the roster changes
returns the route in the current route
adds a roster group to the list
adds a roster group to the list
description of the method
remove a roster group
removes the roster group entries from the list
returns the number of hops in the block
replaces all the groups in the group
returns the block metric value
returns the block length of the block
sets the label function for the given label
returns true if the user is defined in the user group
returns the group menu
returns the label for the function
returns the menu entries
returns the new window menu action
set the function to be used for the given node
returns the value of the specified function
short for warning
sets the state of all editable components
set the use global flag
change date updated value of the date
sets the selected item text
gets the value of the non selected item property
set the global sets flag for this
read the file
set the state of all the
returns the value at the given row and column
this method is called after the user is initialized
this method is used to convert a string to a
sets whether the is in mode
method from combo box
returns a file file object from the given title
returns the number of paths in the path
start the applet
set the show hide
method to set the
returns the source path of the i th source or null if
returns the title of this view
reads the file
writes the list of to the file
returns the i i i i i i path i destination i
sets the button with the given id
returns true if the ith path is active
set the state of the panel
sets the menu for the given menu
shows the coordinates for the coordinates of the given menu
returns the value at the specified location
set the display level for the given popup
sets the index
adds a popup menu to the given popup
adds a point to the graph
redraw the panel
this method is used to convert the given data source to a
sets the icon change
removes all from this
initialize the service
returns the background left left coordinate of the left side of the
resets the dirty state to dirty state
sets the value of the dirty flag
adds a new editor editor to the editor
sets the transit name
sets the speed factor
this method is called after the thread is finished
wait until the thread is stopped
resumes the automatic execution of the current simulation
this method will be called when the is stopped
this method is called when the user changes the
starts the clock clock clock clock
delete the train station
find the header for the specified element
initializes the
initializes the data
returns the data start offset
returns the size of the data in bytes
returns the end data of the data
description of the method
called when the user selects the button
adds a property change listener to the listener list
removes a property change listener from the listener list
icon for the signal head
returns the signal of the signal
description of the method
plays the sound
loop until the thread is blocked
stops the playback of the clip
returns the light icon
sets the number of the
returns a string representation of the road
find the road engine index for the road road
puts the icon into the display
sets the type of this event
sets the time source changed
synchronizes the current state of the synchronization manager
called when the user changes the correct state of the
called when the display of the display has changed
starts the timer
creates a new engine with the given parameters
creates a new object
sets the start time to the next available clock clock
returns the combo box
starts the timer
sets the weight of the
stop the timer
this method is called when the property is changed
adds a new
this method is called when the timer changes
invoked when the user attempts to close the window
sets the model
sets the built attribute of the object
sets the type of the model
set the hp
sets the length of the model
sets the weight of the model
method add day change listener
gets the value of the property
returns a destination for the given location
returns the location name of the location
returns the location id
returns the adjusted weight for all
returns the size of the group
set the lead
this method is called when the property is changed
sets the track position
returns the name of the track
returns the track id
writes the current file to the database
set the location of the gps device
find car by road
set the destination for the given track
adds a new type to the list
replaces the current occurrences of the given type with the
returns a jcombo box box with the given type
returns a combo box with the given type
gets the priority combo box
returns a string representing the destination track
gets the load types combo box
adds a new entry to the list
checks if the named property exists
returns a car with the given road road road
sets the destination location
get the car object by its number
get the car object from the road
creates a new kernel with the default name
deletes a kernel from the kernel
returns the kernel with the given name
returns a combo box
updates the kernel and assigns the jcombo box accordingly
load the given file type
load a type from the given type
sets the priority of the specified object to the specified
store the element in the database
sets the track point
returns the priority of the specified type
writes the current file to the xml file
sets the last location id
set the train to the given train
deletes the panel
returns the priority of the car
sets the value of the property
returns the number of entries in the table
gets a single stock
get the stock at a specific road
get the stock at the specified field
returns the adjusted weight for the
sets the
get the stock for the given
sets the route destination
deletes all the values in the database
sets the order
returns the number of in the model
sets the destination for this item
set the location of the unknown location
sets the out of service
sets the car destination for the given
disposes the object and frees all resources
backup the files in the backup directory
checks if a directory exists in the directory
reset the directory
saves the properties to the current properties
sets the kernel to use
show alignment on popup menu
sets the name of the property
creates a new schedule with the given name
registers a schedule to the database
deregister a schedule
returns a jcombo box box
gets the select combo box
updates the combo box
store the schedule to the schedule
returns the departure time of the flight
returns the time minutes
gets the expected time for the given route
build the
creates a report file
creates a new mo manifest
creates a file list for the given name
creates a csv file list file for the given name
sets the requirements of this
store the current element in the database
returns the number of requirements
adds the location to the list of locations that the location has
remove the location property change listener list
sets the train carrying the given id
adds a new directory to the suite
returns the name of the train route
adds a new file shutdown script
returns the name of the train station
train the given name
register a set of properties to the database
deregister the object
returns the name of the train station
sets the location of the current route
returns the location of the current location
updates the combo box with the given
adds a track to the list
removes a track from the pool
returns the current location
this method handles the change of the property change event
returns the name of the next location
creates a new schedule with the given name
registers a schedule to the schedule
returns the combo box
updates the combo box
this method is to replace the of the
replaces all the road in the list by the given road
returns the name of the next location
load the given file
this method handles the changes of the property change
add a new item to the list
adds a item to the list
creates a new location with the given name
register a new item
registers a new location
deregister a reference to this object
delete an item from the list
the ids of all items in the sequence
get the item by type
sets the length of the text
this method handles the changes of the property change
returns the item with the given id
add a new anchor to the anchor point
sets the type of this event
sets the road to be used
sets the location of the
sets the load property
sets the ships name
sets the direction of the train
sets the number of
add a new end to the end of the list
returns the
sets whether the switch list is enabled or disabled
returns true if the switch list is enabled
sets the status of the status
sets the status of the line
returns whether the train is in route
sets the train icon
adds a train to the list of locations
checks whether the given location is already in the list
adds a new to the database
add a new type name to the list
add a new type name to the list
returns true if the given type is a name
add a track to the list
register a track with the current state
gets the road option
converts a comment into xml string
converts a xml from xml to xml
resets all tracks to their own tracks
sets the value of the road option property
updates the combo box with the selected tracks
adds a pool to the pool
sets the value of the reservation factor
adds a road to the road list
add a location to the route
sets the mode of the synchronization
add a route to the route
register a route to the route
remove the location from the list
returns true if this pool has already been
the
returns the route location list
returns the last location of the given name
returns the mode of the tournament
deletes the road name from the road
gets the location by the given id
checks if the road is allowed to be
returns true if the car is available
creates a new route with the given name
registers a route object to the route
remove a route from the route
returns a deep copy of this route
gets the value of the load option property
returns the direction of the train
sets the number of used characters in the percentage of the
get the direction of the train
sets the load option
sets the length of the current treasure to the given length
sets the weight of the train
returns the maximum number of car moves
sets the number of
sets the can drop property
perform a sensor movement
sets whether the connection can be selected
sets the cars number of the
sets the car moves
sets the number of engines
loads the given load name and loads the given
load a new name from the database
adds an address listener to the list of listeners
returns the layout block for the given block
removes a listener from the list of listeners
returns the selected roster index
returns true if the given load is in the list
adds a new to the end of the database
selects the roster entry
notify all listeners that a spawn shot has been found
notifies the throttle that the object has been disposed
set the roster entry
sets the owner option
add a new owner name to the list
dispatches the event to the listeners
sets the forward direction
release the current release
delete the owner name
returns the xml element for this
returns true if the slider has been available
check if the owner of the given owner is banned
returns the display slider
description of the method
sets the year
sets the end year of the end year
sets the function listener
adds a listener to the list of listeners
removes a listener from the list of listeners
find the destination and tracks the route
performs the action
gets the cars in the current north
loads the given load name and loads the given
load a new name from the database
sets the location of the window
sets the drop option
invoked when a key has been released
method that removes the cars from the
sets the pickup option
invoked when an action occurs
description of the method
creates the throttle window
creates the throttle frame
handles the key released event from the text field
checks if the given set of values are acceptable for the given
this method is called when the title of the field changes
called when a key has been pressed
sets the timer to the specified value
disposes the toolkit
adds a new pickup id to the list
returns the number of the engines
invoked when an internal frame is activated
returns the second leg readed
returns the third leg of the engines
returns the order of the service
sets the road to be used in the road
returns the name of the schedule
handles the key released event
returns the engines engine
sets the second leg engine road
gets the schedule item id
returns the second leg engine road road
sets the third engine road
sets the engine model
gets the entrance speed
get the object by name
enables or disables the
set the second leg engine model
set the enable flag for the load
sets the speed controller
enables or disables the of the continuous load
set the third engine setting
enables continuous loading on off generation
this method is invoked when the property is changed
adds a new icon to the
set whether or not to load the
sets the road road
get the user name from the system
get the user object by name
returns true if the block is enabled
add a list of paths to the path
sets the name of the
sets the second leg leg
sets the direction of the forward light
sets the third leg of the road
returns true if this buffer is free to the current state
returns the block
show all buttons
adds a block order
allocate a new name
returns the order block of this block
returns the last order of the current block
returns the allocation
notify the that an order has been queued
generate the speed to the specified wind
halt the simulation
remove the background image from the list
returns the block order at the current position
this method is used to generate a property change listener
this method is called when the user is inactive
this method is called when the user activates the
returns the root from the xml file
returns the index of the block
returns the index of the specified block
sets the interval of the interval
sets the maximum number of attempts to wait for a new
returns the block order at the given index
returns the block at the given index
parses the input stream and returns the content of the
writes the xml document to a xml file
returns the block state index for the given
check if the file exists
find a file
backup a file to the backup
this method is called by the code get groups code method
reverts to backup the backup file
backup the file name and returns the name of the
ensures that the file name is present in the directory
create a new document
apply the values to the current values
create a new document
adds a default info to the content
creates a copy of this operation
returns the operator for the given interval
notifies all listeners that a run status is run
store the element in the given object
loads the data from the file
stores the given element in the given object
store the given object
this method is called when the user modifies the object
registers the given object as a
loads the given element from the xml
returns true if the current state is free
stores the given element in the given object
stores the given element to this object
stores the given object in the xml tree
this method is called when the object is added to the script
loads the given element from the xml element
loads the given element from the script
initializes the application
returns true if the queue is near the current one
sets the second leg options
runs the training on the given queue
post the post method
set the config file name
this method is called when the application exits
this method is called when the application is about to restart
enables or disables the buttons
initialize the application
initializes the application
returns the button space
set the
sets the third leg options
called after the initialization of the init is initialized
updates the table
hook method to be called by the system
this method is called when the orders of this object is already
sets the current state of all the editable components
post the init method
adds a new file to the build
initializes the
this method is called when the program info is not running
returns the locale for the current locale
adds a new file to the build
set the state of all
returns the name of the project
is the given version a string
compare versions of the same version
compare two versions
returns the version of the version
the main method of the application
test method for
test method for
adds a new file to the list of pieces to be used
sets the help frame help window help
sets the state of the animation
updates the text area
adds a new file to the list of resources
this method is used to output stream output stream
create an instance of
sets the style of the receiver to wrap
returns the wrap style for the wrapped style
sets the font size of the font
returns the name
sets the font style of the font
called by the system to notify the application that the menu bar
updates the font of the font
sets the name of the
set the current foreground color
returns the scheme for this scheme
returns the tip text for this property
returns the number of the test cases
sets the name of the
adds a route to the tree
sends a test message to the server
test the method that waits for the message sent to the server
check that the expected method has been signaled before the
invoked when the user attempts to close the window
called when the is received
sends a test message to the server
sets whether the build is enabled
returns true if the build is enabled
sends a test message to the server
sends a test message to the given test
sends a test message to the server
sends a test message to the server
build whether the build is selected
builds the object
sends a test message to the server
set the config file name
returns the build failed attribute
sends a test message to the server
test method for
prints the manifest for the current
sends a test message to the server
sends a test message to the server
sends a test message to the server
sets wheather the icon should be used for the train icon coordinates
returns the number of the test cases
sends a test message to the server
sends a test message to the server
moves the location to the next location
activates the options
test that the service mode is not unique
test method for
test method for
returns the lead engine
sets the status of switch to switch status
reset the current state of the
test of add method of class
returns the sensor from the sensor
wait for a time entry to be sent
this method is called when the semaphore is received
clears the expired entries
loads the attributes of the given node into the
get the signal signal signal from the name
multiply this quaternion by the correlation q
check validation of the component
clears the errors and validation
sets up the component
sets the icon to use for the icon
sets the tooltip text
fires a validation event to all registered listeners
returns the tool tip text for this tool
sets the popup menu for the popup menu
returns the popup menu for the current user
sets the tray icon
method set layout
adds a property change listener to the listener list
adds a property change listener to the listener list
adds an item to the list
remove a property change listener for a specific property
removes an item from the list
sets the rollover state
sets the selected index
sets the selected item in the list
returns the selected item
returns the item at the given index
sets the margin between the border and the
removes all items from the current list
sets the enabled state of the button
this method is called when the user changes the status of the
returns the tool tip text for this tool
checks if the frame is already being added to the internal frame
set the maximum row count
sets whether the border should be painted
called when the user presses the button
loads the editor
called when the is removed
returns true if the border is painted
set the flag indicating whether this is
processes the event
paint immediately after the component is repainted
paints the component
adds a jbutton to this button
repaints the given rectangle
returns the number of selected rows
paints the component
adds a component to this component
adds a radio button to this radio button
executes the code exec run code
paints the component
enables or disables the
returns true if the component is enabled
returns the tooltip text for the mouse event
disposes the toolkit
returns the top level level of this component
returns the location of the tool tip for the mouse event
adds an code action listener code to the button
returns a debug friendly string representation of this object
removes an action listener
asserts that the current peer
processes key events
the method code code adds a new button to the container
creates the default margin
scroll to the given rectangle
returns the properties of the client
adds a button to the group
removes the button from the group
returns the selected model
sets the selected state of the button
returns true if the model is selected
returns the preferred size of this component
called when the is removed
sets the bounds of this component
returns the layout manager for this layout
sets the layout manager to be used for laying out the layout
sets the image
sets the layout of the layout
called when the is removed
returns a debug friendly string representation of this object
called when the is removed
disposes the toolkit
sets the validity of the message
set action to action
this method is called when the is
creates the default margin
create the accessible context for this component
adds a component to the container
adds a component to this component
adds a jinternal frame to the internal frame
adds a component to this group
set whether to use the tabbed handler
returns the location of the next frame
insert a new component into this group
returns the icon for this icon
called when the user selects a new tab
shows the selection
refresh the frame
sets the icon to use for this icon
updates the frame at the specified index
removes the specified internal frame from the desktop
adds a new menu item to this menu
adds a new menu item to the list
sets the icon to be used when icon is pressed
adds a component to this component
adds a component to this component
sets the icon to be disabled
removes the component from the list
remove the component at the specified index
sets the icon to be selected
sets the icon for the rollover icon
returns the popup menu for the component
sets the icon to be displayed in the rollover icon
sets the icon to be disabled when the user selects
sets the number of rows visible in the table
returns the debug information for this debug info
sets the background color of the cell
insert the methods description here
sets the foreground color of the cell
sets the indeterminate property
creates a new jdialog for the dialog
registers the tree to the tree
creates a new internal frame
draws the outline of the container
sets the data contained in this list to the given array
sets the data contained in the list
refresh the frame
this method is called after the layout of the layout
returns true if the list is a default value
set the row selection
processes the process frame
set the grid to show the grid
fires a tree to the tree
sets the header renderer
changes the state of the dialog
returns the path to the root node of the tree
process mouse event
processes key events
sets the style of the custom style
insert the methods description here
this method is used to create the shell
returns the insets of the border
reinitialize the insets parameter with this borders current insets
sets the horizontal alignment of the text
returns the debug information
sets the font
sets the color of the fog
setter for property border
returns the horizontal alignment of the text
checks if component can handle a component
sets the vertical alignment of the text
sets whether decoration should be drawn
returns the debug information
adds the specified component to the layout
removes the specified component from the layout
returns the vertical alignment of the text
returns the preferred dimensions for this layout given the components
returns the minimum dimensions needed to layout the components
returns the maximum size of the specified container
adds the specified component to the layout using the specified
check if a given path is already in the list
returns the alignment along the x axis
removes the decoration from the list
returns the alignment along the y axis
invalidates the layout
adds a component to the tabbed pane
updates the view of the panel
invalidates the canvas
returns true if the is
add a component to the list
returns the default renderer for the specified column
processes the action events
converts a boolean value to a text string
this method is called when the item is selected
scrolls the tree to visible the current node
creates the default margin
process action events
this method is called when the item is about to be removed
sets the margin of this component
returns the margin between the border and the
sets the label of the text
returns the text
sets the selected index
sets the text
focus the next component in the focus
focus the previous component
sets the mnemonic of this action
returns the path for the given row
sets the tooltip text for this tool tip
returns the text of the url
this method is used to reference to the reference to the reference
sets the model
returns the model
click on the button
description of the method
updates the text from the text
returns the text of the document
registers the listener for the events
returns true if the dialog is selected
adds the caret to the current paragraph
sets the selected state of the dialog
apply all the to the current state
this method is called when the peer is about to be used
sets the selected state of the button
sets the filters to the given file
returns the of this document
gives notification that an attribute or set of attributes changed
returns the mnemonic of the command
handles the event of the text portion of the document
sets the keyboard mnemonic
sets the button group
calculates the columns of the columns
updates the action with the values of the action
updates the tooltip and tooltip
sets whether the root node is visible
sets the tooltip text
sets the text
returns true if the root node is visible
returns true if the cursor is currently currently currently currently currently
shows the open dialog
show the dialog
sets whether columns in the model should be automatically created
show the select dialog
refreshes the table
sets the model to use for drawing the model
returns the maximum size of the component
returns the action command
sets the frame menu bar
calculates the rows of the rows
sets the text
sets the icon to use for the icon
sets the horizontal alignment of the text
sets the vertical alignment of the text
this method is used to set the background color
notifies all registered listeners about the event
creates a new position
inserts a string into the content
removes a resource from the given position and returns it as an
returns the string at the specified length
returns the characters contained in this code text code enclosed
this method is used to set the foreground color
adds an formatting to the formatting formatting element
updates the text from the document
adjust the size of the icon
sets the document
returns a debug debug string describing this object
computes the preferred size of the component
removes the document from the document
inserts a string into the document
toggle the window state
returns the text of this entry
this method is called when the render is done
returns the debug text
updates the selection state of the table
notifies all listeners that a list selection event will be changed
insert the methods description here
create a new
returns the divider location of the jsplit pane divider
sets the size of the jsplit pane to the specified size
copy the model to the model
sets the value of the resize weight property
set the value of one touch expandable
resets the preferred size to the preferred size
sets the divider location
ensures that the problem is fixed
set the model dirty flag
updates the list
generates the default column model for the default table
handle the selection of the receiver
sets the dirty flag
adds the selection to the selection
registers the listener for selection events
paints the component
called by the awt ui when the container is
invoked when editing is canceled
returns the control that is currently being used
creates the
invoked when editing is ended
process column click
add demo demo demo demo demo demo demo demo demo demo demo
sets the event id
returns true if the popup is trigger trigger
adds a listener to the
show swing
sets the button
removes a listener from the root panel
creates the splash screen
hide the window
sets the character used to represent the key
sets the visibility of this frame
resets the polygon
returns true if the given l f is available
translate the shape and all the points in the given
adds a new polygon to the polygon
returns the debug level for this debug window
returns true if the component is visible
this fine grain notification tells listeners the exact range
returns a copy of this point
adds a component to the layout manager
returns the applet
recomputes the bounds of the jsplit pane
sets the location of the peer location
disposes the splash screen
sets the layout manager to use for laying out the components
returns the maximum window bounds of the window
sets the layout manager to be used for painting the
returns whether or not this component is showing
creates a graphics2 d object
returns the content pane
returns a debug string for debug purposes
revalidate the cache
called when the user selects to validate the request
adds a component to the layout
creates the table cursor
sets the enabled state of this peer
returns the string value of the given key
removes the specified component from this component
removes a component from the cache
returns true if the component is enabled
disposes the toolkit
requests focus on the screen
insert the methods description here
sets the current values of the current look and feel
this method is called when the user presses the focus
finds the component at the specified position
create the accessible context for this component
prints the containment debug to the debug level
repaints the component
returns the type of the cursor
returns the name of the component
creates the peer
replaces the java code to the receiver
returns true if the background image is set
returns whether the foreground color is set
initializes the dialog
brings the window to the front
this method is called when the user presses the back button
set the background color
runs the test
runs the test
tests that the page is able to be used
runs the test
sets the foreground color
this method creates a graphics object for this component
returns the size of the peer
returns the size of the component
returns the size of the rectangle
sets the size of the image
returns the width of the image
returns the height of the image
sets the width of the image
sets the height of the image
returns the bounds of the receiver
sets the bounds of this component
returns the location of the object on screen
returns the location of the
set the location of the window
returns the x coordinate of the center of the point
returns the y coordinate of the location
invalidates the cached state of the component
this method is called when the component is removed
sets the preferred size of the component
returns true if the preferred size is set
sets the maximum size of the component
returns true if the maximum size is set
returns the maximum size of the component
returns the minimum size of the component
returns the minimum size of this component
set the minimum size of the component
returns true if the minimum size of the is set
the preferred size of the component
returns the preferred size of this component
calculates the preferred size of the component
returns the alignment along the x axis
returns the alignment along the y axis
sets the alignment along the x axis
sets the alignment of the text in the y axis
returns true if the given point is in the list
checks whether the point contains the point at the specified point
checks if the given coordinates are inside the rectangle
this method enables or disables the focus traversal keys
creates a new image
set the font to be used when the font is
returns true if the font has been set
set the tooltip text
transfers the focus to the receiver
transfers the focus to the current input
transfers focus up to the next available focus
returns the name of the component
sets the name of the component
set the cursor to the given cursor
returns whether the component is focusable
sets whether this component is focusable
disposes the toolkit
removes all the components from the
adds a listener to the component
removes a listener from this component
adds a mouse listener to this
removes a mouse listener from the canvas
adds a mouse wheel listener to the mouse wheel
removes a mouse wheel listener from the canvas
adds a mouse motion listener to the mouse motion listener
removes a mouse motion listener from the canvas
adds a listener to the list of listeners
removes the listener
removes the specified focus listener
adds a listener to the input method
removes the specified input method listener from the input method
adds a hierarchy listener to the hierarchy
removes a hierarchy listener from the hierarchy
process the action event
process the mouse event
process mouse motion events
this method is called when the mouse is clicked
process key event
processes focus events
processes input event
registers the events to the
this method is called when the component is removed
returns true if the receiver has focus
returns the tree lock
returns a string representation of this object
gets the code accessible context code associated with this
create the accessible context for this component
returns the debug component
returns the length of the list
returns the type of this event
returns the current
returns the system
returns the signature type
returns the type of this event
close the connection
returns the data type of the tag
returns the data type of the given tag
returns the data type of the tag with the given name
sets the tag of the given tag
sets the tag of the tag
returns the xml representation of this object
set the tag for the tag
get the id of the tag for the tag name
returns the name of the tag name for the given id
returns true if the given is valid
returns true if the current component is valid
writes this object to a writer
sets the index of the current character
test method for
test method for
test that old binary format is valid
test that the old ascii format is valid for ascii format
checks if the file name is
test the type of the
returns the file name for the given resource
this method is used to create the file name and returns it
returns the url for the given file name
sets the format of the file
puts the given element into the queue
returns the filesize in bytes
finishes the tar archive entry
close the stream
returns the header size
returns the byte of the given byte array
close the entry
reads the next byte of data from this input stream
sets the filesize of the filesize
set the mode of the
returns an iterator over all prefixes in the given prefix
prepares the library manager
handles the update of the sketch to write to the server
gets the deleted dirs count
returns the number of created dirs
adds the deleted dirs count
adds the number of created dirs to the list of resources
returns the number of files in the list
gets the number of deleted files
adds the number of deleted files to the list
returns the number of bytes read from the file
returns the time of the copy
adds a number of files to the list
add bytes to the total number of bytes
adds a time elapsed time to the time elapsed time
returns the average speed in the time estimation
returns the average size of the file
add stats to the cache
test method for
sets the pattern
returns the error attribute of the object
sets the error attribute of the object
adds a tag to the store
checks if the node is valid
load the document from the database
getter for property
sets the
adds a new attribute
returns the tag
adds an attribute to this store
returns the content pattern
sets up the test
tests the tag method
tests that an attribute is required
sets the error attribute value
returns the name of the error attribute
test null attribute
sets the error tag content
test method for
adds a tag to the tag
sets the file pattern
returns the name of the error tag
returns the file pattern
sets the pattern
getter for property
sets the error tag name
returns the error code for the error messages
checks if the current directory is valid
set the directory to use for the
sets the recursive flag
returns true if the error is a directory error
adds a new to this store
returns the file error value
adds a new directory to the list
executes the subdirectories
check if the file exists
check if the file exists
checks if the given directory exists in the directory
sets the required attribute of the field bean object
sets up the fixture for example open a network connection
test that the directory path is propagated
test that the directory path cant be set
test the constructor
test the file with a file
test the err err
add a file to the list
tests that the file is not empty
adds a new pattern to the store
test the file with the pattern
tests the directory directory
tests that the directory is correctly formed
tests that the directory doesnt include a directory
returns the arguments
returns the required arguments
gets the parameter with the given name
returns the value of the specified name
adds a new data container to this container
executes the command
sets the data
checks if the is checked
get the error for this group
returns the checked state of the user
returns true if this object is a match
returns the name of the parameter
adds a parameter data parameters to the parameters
returns the name of the argument
adds a listener to the set of parameters
checks if the constraint is a valid constraint
returns the code ok code property
returns the value to check name
returns the exception
sets the value of the field code ok do code
checks if this object is already checked
returns the identifier of this object
checks if the object is checked
checks if the current page is checked
checks if the is checked
returns the identifier of this object
returns the identifier of this object
returns the identifier of this object
adds a parameter to the request
adds an error message listener to the container
returns an enumeration of all the elements in this collection
this method is called when the error is encountered
checks if this object is already checked
returns a new instance of the code code property
returns an enumeration of the error messages
returns true if there are more elements in this container
returns the identifier of this object
returns the next element in this iterator
returns the field name
returns the message
sets the regular regular expression
returns an enumeration of the errors
returns the regular
returns the action for the struts java
returns the struts exception
sets the
returns the
sets the directory
getter for property
sets the file
getter for property file
adds a to this
add a new to the list
check if the file exists
checks if the file is one of the file file
checks if the given directory exists in the directory
add a new to the store
check if the is checked
called after the has been initialized
get the error for the error
sets the data
sets the body
sets the date
sets the email
sets the subject
executes the given ok or return
returns the ok button
set the error handling
sets the ok button
checks if the current state is checked
returns the identifier of this object
sets the regular expression to use for the regular expression
sets the
sets up the test
sets the indent
remove a container from the container
sets the container
returns the container component
adds a component to the container
updates the components
adds a new component in the panel
adds a component in panel
notifies the listener that the selected list item has been selected
returns the dragged component for the given component
replace the component with the given component
removes the specified panel from the list
returns the position of the panel
snap the value to the grid
moves the component to the right side of the component
returns true if the grid cache is a grid cache
initialize the servlet context
logs the specified message to the log
logs the specified message and exception to the log
returns an output stream for writing to the output stream
this method is used to determine if the http servlet request is
this method is called when the is
called when the is terminated
returns the number of heartbeat
returns the initial node
ends the end of the instruction
sets the initial node
merge the given trace node into the list
push bytecode to push the function
returns whether the end of the node is a loop node
returns the node that is the given node
adds a new node to the stack
returns the node with the given instruction
trace instruction method invocation
returns true if the node is a loop node
connects to the target
returns the end of the given node
writes the given file to the dot file
returns true if the edges of this node is a branch
connect to the given graph
returns true if the edges of the branch edges are traversed
returns the recursive instructions for the given instruction
refines the node
connects to the end of the edge
converts the instruction to a dot readable string
checks if the instruction is a instruction
the edges of a
removes the specified code code from the end of the
returns true if instruction is a instruction
the pointers of the node to the preorder
creates a new for edge
creates a new edge
returns the value of the property
returns the value of the specified option
returns the value of the option value
adds an option to the list
returns the value of the specified option as an int
returns the value of the specified option as a double
returns true if the command line option is available
get the device name
returns the value of the shared file
returns the value of the pay pal field code code
initialize the options
returns the file to be displayed in the file
returns true if the file has been set
runs the
returns the media name
returns true if this reducer is a flush
returns the statistics
returns true if the file has been selected
returns the option
returns true if the file is a recursive
sets the option
returns true if the target has a target
returns the target value of the target
initialize the options
search for the current search
sets the standalone value for this
this method is called when the is closed
returns the usage of this command
show usage information
shows the version of the application
initialize the options
sets up the fixture for example open a network connection
initialize the list
initialize the options
method tear down
initializes the applet
export the current music
returns the help flag
returns whether verbose mode is enabled
runs the
checks if the exit is a
starts the thread
exits the application
forces the current to be calculated
sets the template
returns the template as a string
initialize the abstract options
returns the hashtables hash
converts a song to a filename
increments songs song count
increases the current playlist
increments the number of songs in the playlist
runs the import
returns true if the file is required
returns the display name of the current page
returns the file name
returns true if the file has been set
returns whether or not this option is overwrite to overwrite the file
initialize the options
sets the song to be analyzed
compares this object with the specified object for order
delete the
sets the songs of the songs
sets the of the spok
this method performs the actual mutation of the transitive
this method is used to perform the actual conversion
method that returns the album of the given reference
this method is called by the
this method performs the actual work of the better fingerprint
runs the scan
deletes the playlist
returns the artist at the given index
returns the first artist of this artist
returns the last artist
saves the given playlist
saves the playlist
adds a song to the playlist
adds a song to the list of songs
returns a list of songs of a photo
adds a playlist to the list
adds a playlist to the playlist
returns a playlist for the current playlist
returns the playlist
returns all songs of the songs in a database
add artist to the artist
add an artist to the database
adds a new artists to the list
sets the artist attribute of the object
returns the artists artists artist
get the artists
sets the composer of the item
returns the amount of completed
adds a new artist to the list
adds a composer to the list
adds a new artist to the list
returns the composer of this artist
returns a playlist composed by its
add a genre to the playlist
add a genre to the list
removes a genre from the playlist
removes a genre from the database
clears the genres from the playlist
set the genre name
gets the genres
gets the additional genres
add a rating to the list of available cards
add a rating to the list of rating
add a rating to the rating
remove a rating from the model
remove a rating from the rating
remove the rating from the rating
set the rating of the given user
returns the user with the given index
sets the rating
returns the first user object
returns the last user of the list
returns the genre at the specified index
returns the first genre
sets the rating
returns the last genre
returns the rating of the given user
returns the rating
returns the user owners
sets the owner of this user
sets the owner of this user
sets the label of this element
returns the number of songs in the current playlist
returns the
returns the number of songs in the list
returns true if artist has to be revised
this method returns a new songs in the database
shuffle the deck
returns the name of the
compares this playlist to another playlist
mutating method to set the minimum length of the
returns the minimum length of the object
sets the minimum value of the constant pool
returns the maximum number of characters in the range
sets the maximum value of the field
resets the internal state to zero
returns true if the specified range is in the range
returns a string representation of this object
returns the criteria
sets the criteria
saves or update an existing entry
saves or update an update
merge the given genre entry into this one
compares this object with the specified object for order
delete the
delete the current playlist
delete the song
returns the owner of this user
this function adds associated entities to an example criterion
this function adds associated entities to an attribute
returns the shared flag
returns whether or not the ignore case is ignored
sets the sort order
sets the owner of this user
sets the owner of the user
sets whether to create a shared file
sets whether or not the object is ignoring case
adds a group to the group
removes the group from the group
opens a group with the specified group
opens a group with the specified value
this method is used to close the group
compares this rating object to another
returns the open groups
delete the
returns a list of grouped groups for the given level
this method gets a for the given database
gets the songs of a contact
gets the songs of the current playlist
returns a list of all playlists
returns the list of open groups
returns albums by level
returns the albums group
encrypt a text
sets the password
performs the refactoring
compares this object with the specified object for order
delete the user
compares this genre to another
delete the
returns the song at the specified index
returns the first song
returns the last song
returns all artists defined in this playlist
compares the current entry with the current one
compare the current artist with the artist
returns true if the current song is identical to the same
compares the current year and returns true if the
imports the given application configuration
description of the method
forces the artist to be removed
forces the artist to be stored in the artist
this is used to set the song genre
forces the owner of the
this method is used to set the year of the current song
format the year
returns a string representation of the object
returns the of the
saves the current file
saves the value of the
delete the photo
add artist to the artist
removes a artist from the list
removes a artist from the database
clears all songs
gets the artists artists
returns a object representing the artists
clears all songs
add a song to the artist
sets the name of the attribute
returns the column
sets the column
returns the column that is being used
sets the value of prolog column
returns true if the unknown property is set
sets the unknown attribute
returns whether or not the unknown property is not unknown
sets whether or not the unknown value is null
returns the sort column
sets the sort column
returns the joins
returns the unknown
this function adds a criteria to the current criteria
this function adds associated entities to an joins
this function adds associated default instances to the criteria
this function adds associated entities to an example criterion
adds a given criteria to the criteria
returns a object that represents the
compares this group with the specified object for equality
adds a genre to the genre list
removes a genre from the playlist
clears the genres from the list of songs
returns the additional genres
add a rating to the list of
add a rating to the list
remove a rating from the list
set the rating of the given user
returns the rating of the given user
returns the audio file
returns the filename of the file
sets the filename
returns the filesize in bytes
sets the filesize of the file
returns the media object
sets the media object
sets the media media type
returns the location of the audio file
returns the quality of the file
sets the value of the quality property
sets the quality of the
returns a new
get the filesize of the file
adds a playlist to the playlist
returns the playlists
sets the album
returns a reference to a playlist
sets the current album
sets the year
this method is called when a user has played a given date
this method is called when the user selects a user by the
clears the data from the database
add artist to artist
compares this song to another song
deletes the photo
returns the website object at the specified index
returns the first website of the website
returns the last website
add a new artist to the artist
returns a list of artists
compares the object to the specified object
delete the entry
deletes the playlist
returns a list of all the elements in this list
returns a string representation of this object
returns a string representation of this object
deletes the song
save or update an artist
saves or update the object
returns the name
adds a genre to the genre
removes a genre from this artist
clears the genres from the genres
returns the genres
returns the additional genres
returns true if the given artist matches the
returns true if the given artist matches this one
adds a new website to the website
returns the of this
compares this object with the specified object
delete the artist
compares this quality to another rank
delete the
compares this label to another
delete the
adds a new song to the list
adds a comment to the current playlist
add a new to the list of songs
add a new location to the room
adds a lyrics component to the list of
add a new name to this room
add played to the list of users
add a new playlist to the list
adds a new to the
adds a new song to the list
adds a string to the list of position
adds a duration to the list
add a new player to the campaign
adds a rating to the rating
adds a year to the end of the year
adds a year to the year
adds a duration to the list
saves a media object
saves a cs or update
sets the location of the location
merges the media object with this one
compares this media to another
delete the media
saves the given status or code null code to the specified
returns the filename of the current file
set the file name
set the media media type
set the mime type
set the quality of the
clears the picture
returns the string representation of this object
saves or replaces or replaces the given song
merge the given track object into this one
delete the song
deletes the song
returns a playlist at the specified index
returns the first playlist
returns the newest playlist
deletes all the
initialize the options
runs the action
returns true if the file is required
returns the value of the album
returns the artist of this artist
returns the composer of the current user
returns the comment
returns the genre of the current record
returns whether or not this option should be ignored
returns the label of the label
returns the lyrics value of lyrics
returns the owner of the item
returns the range
returns true if the has been
returns the quality of the quality
returns the query string
returns true if the query has a query
returns the rating of the current item
returns the sort string
returns the title of the title
returns the location of the option
gets the year
set the value of drive
returns the drive drive
set the value of server
returns the category
returns the string representation of the
returns the code of the code that is the
returns true if the is
returns true if the data has been inserted
returns the url
returns the number of songs found in the songs
returns the number of songs added
returns the number of songs in the playlist
gets the value of the songs property
called when the path is about to start
returns the integer value at the specified index
returns the value at the specified index
returns the first integer
returns the first integer value
returns the last integer
returns the last int value
returns a string representation of this object
returns a list of all the elements in this list
returns the most frequent number
returns the least number
return a distinct list
returns the number of distinct times this object is currently
returns the minimum value of the property
returns the maximum value in the list
adds all items in the specified list to this
returns the string value at the specified index
returns the first string
returns the last string
returns the string representation of this object
returns a string representation of this object
returns the most popular
returns the least
return a distinct list
compare the index of the given value
returns a list of the
returns a list of the
this method returns the metric for the specified metric
p convert a value into a string
normalizes the form
returns true if the is similar to the given
initialize the options
initialize the
this method takes a file name and returns the file to be
incrementally constructs a object from the given array of values
get the endpoint
returns true if the has been set
called when the object is about to be completed
called when the download is finished
called when the activity is finished
returns true if the file is created
returns the start flag
returns the stop flag
returns the information if the file is a
returns the force
sets the template to the given string
search for the songs in the search
the main method of the application
print the data
initialize the
runs the
show the dialog
runs the job
called when the user selects the close button
this method is used to set the selected file
description of the method
returns the size of the options
invoked when the target of the listener has changed its state
runs the import
initialize the page
set the endpoint address for the specified port name
this method handles events for the buttons
returns the of the given item
invoked when an action occurs
invoked when an action occurs
returns the tool for the given description
returns the song at the specified index
returns the first song
returns the last song
remove a song from the playlist
clears the playlist
get the artists
deletes the playlist
delete the playlist
returns the music map with the given index
returns the first music map
returns the last music map
this function adds associated entities to an example criterion
returns a list of grouped groups for the given level
returns a playlist tree
returns albums by level
returns a list of all artists
returns a list of years
shuffle songs of the list
returns a new with the specified number of songs
returns a new department
returns the file names
this function is adds a criteria to sort by the given criteria
sets the lyrics
returns the lyrics as a string
find a rating of the given user
set the rating of the given user
sets the position of the given string
deletes the photo
returns the feature
returns the first feature feature
returns the last feature
adds a new song to the list
adds a comment to this table
add a new to the list of songs
add a new to the room
adds a lyrics file to the list of open records
add a new name to this table
adds a new played song to the list of people
adds a new playlist to the playlist
adds a duration to the
adds a new song to the list
adds a duration to the list
add a new player to the campaign
clears the content of the file
delete the song
returns the value of the code code property
initialize the database
called when the tree is finished
description of the method
called by the project when the project is changed
called when the object is finished
returns the owner of the item
returns true if the is a
returns the current playlist
returns true if the list has a playlist
returns the value of the code substring code property
returns the usage of the application
initialize the options
runs the
returns the number of rows in the model
returns the name of the column at code column index code
returns the most specific superclass for all the cell values
returns the value for the cell at code column index code and
returns the general configuration options
returns the name of the column at code column index code
returns the value at the given position
returns the number of rows in the model
returns the name of the column at code column index code
returns the value for the cell at code column index code and
invoked when an action occurs
invoked when an action occurs
returns the number of rows in the model
returns the name of the column at code column index code
adds the specified component to the container
invoked when an action occurs
invoked when an action occurs
highlights the selected items
highlights the given point in the tree
description of the method
invoked when a mouse button has been released on a component
sets the playlist
adds a playlist to the playlist
clears the data model
called when the mouse button has been released on a component
invoked when a mouse button is pressed on a component and then
description of the method
updates the songs record
returns the most specific superclass for all the values in the specified
returns the name of the column at code column index code
returns the number of rows in the model
returns true if the cell at code row index code and
clears the songs
highlights the current selection
highlights the given point in the list
invoked when an action occurs
invoked when a key has been released
returns the number of children of parent
adds a listener for tree model events
removes a listener for tree model events
returns the child of code parent code at index code index code
returns the index of child in parent
adds a node to the tree
returns the for the given node
adds a new search criteria
returns the search criteria
adds a search criteria
adds a search criteria to the tree
returns a search criteria for the given node
returns a search based on a node
returns a search criteria for the given node
adds a node to the tree
returns the node that matches the given node
adds a search criteria to the portfolio
add a search criteria
returns the search criteria
loads the map map
refresh the tree model
sets the data
called when the is finished
this method is called after the transaction is being released
initialize the options
plays the sound
close the player
plays the audio file
starts the game
change the parameter to a new value
returns the available available available available
resets the buffer to the next buffer
add a bean to the
get a bean from the bean
get a bean from the bean
add a list of parameters to the list of arguments
put a bean into the bean
configures the given object
initialize the
set the configuration file to be used
sets the configuration to the given configuration
set the bean property with the specified name and value
sets the logger
set the configuration for the resource
sets whether the panel should show the beans
returns true if this is a debug message
add the given configurations to the configurations
initialize the map
returns the external bean to the given key
the agent
sets the debug flag
configure the writer
sets the writer
this method is used to generate the message for the given message
post the given data object to the given bean
this method is called after the bean is initialized
search for a variable
checks if the session control is required
creates a temporary job folder
generate the unique string
this method initializes j panel
this method initializes j panel1
this method initializes j scroll pane
this method initializes j panel2
this method initializes input
this method initializes delete
this method initializes j scroll pane1
this method initializes editor
this method initializes j text area
this method initializes btn timer
this method initializes j panel3
this method initializes host port
this method initializes btn conn
this method initializes chat test
this method initializes j panel4
this method initializes this
this method initializes j content pane
sets the direction of the
returns true if the is done
sets the thread name
write the specified message to the output stream
flushes the output stream
returns the name of the thread that this thread is running
returns the direction of the
returns true if the given string is a chunked
fires the action event
this method initializes this
this method initializes j content pane
this method initializes j button cancel
this method initializes this
this method initializes j content pane
this method initializes j content pane
closes the window
this method initializes j button ok
closes the window
returns the filename of the text field
saves the configuration to the server
this method initializes j text field client port
returns the selected direction
this method initializes j button cancel
this method initializes j text field server port
this method initializes j text field server address
opens a jfile chooser dialog and opens the jfile chooser dialog
this method initializes j text field client address
this method initializes j button ok
this method initializes j button ok
this method initializes this
this method initializes j content pane
this method initializes j panel button
checks if the given string is available
initializes the popup menu
sets the list of active plugins
returns the server address
sets the list of active plugins
returns the default file name
returns the port number of the server
loads the configuration file
returns the clients address
stores the configuration to the server
returns the port number of the client
returns a string representation of the list of strings
this method loads the properties from the server
stores the configuration to the server
sets the server address
sets the clients address
sets the server port
sets the client port
sets the size of the window
initializes the content pane
toggles the of the
adds a row to the table
clears the table
parse the request
parse the response header
returns the indent string
returns the filename of the file
returns the default file name
begin the scope of a prefix uri namespace mapping
opens the file
set the file to be monitored
this method initializes j
this method initializes j button
updates the tree
initializes the tree
expands all nodes in the tree
stores the given message to the
collapses all rows
exports the data to a file
returns the timestamp
adds a message to the list of available messages
sets the timestamp
returns a message with the given id
sets the direction of the camera
returns the size of the
returns the message
returns the complete state of the challenge
returns the raw data
set the raw data
sets the raw body
sets the raw header
sets the body of the message
set the header of the message
returns the header
returns the raw header
sets the relay model
checks if the method is
returns the body of the message
loads all plugins from the plugin
returns the raw raw raw data
returns the content length of the request
updates all the active plugins
checks if the regex is set to be chunked
updates all the active plugins
set the active list of plug ins
set the active plugins
clears all the active plugins
removes all the plugins active plugins
shuts down all plug ins
updates the message pane
this method initializes j btn send to server
this method initializes j btn send to
this method initializes j text pane client raw
this method initializes j tabbed pane client
this method initializes j scroll pane client raw
this method initializes j tabbed pane server
this method initializes j scroll pane server raw
this method initializes j text pane server raw
this method initializes j jmenu bar
this method initializes j menu file
this method initializes j menu item exit
this method initializes j menu view
this method initializes j menu item clear all
this method initializes j menu item clear left
this method initializes j menu item clear
this method initializes j menu help
this method initializes j menu item pas
this method initializes j menu item about
this method initializes j menu item pas
this method initializes j menu item export
this method initializes j split pane horizontal
this method initializes j panel right
this method initializes j tool bar
this method initializes j panel center buttons
reloads the plugin configuration
this method initializes j split pane vertical
this method initializes j panel history
this method initializes j scroll pane table history
this method initializes j toggle button relay
this method initializes j toggle button
enables the send to actions
disables the send to actions
enables the export action
disables the export action
this method initializes j status bar
set relay server address
register a new comment
returns the source code source reader code
returns whether or not the print method should be used
sets the path to the end of the path
sets the include path
set the comment to be used when reading
define a macro body
define a macro
returns true if the debug level is enabled
is trace enabled
returns true if info level is enabled
returns true if the given string is defined
returns true if warn level is enabled
is error logging currently enabled
returns true if the log4j level is enabled
returns true if silent mode is set
sets the include locator
sets the file to read the file
set the file name
end a comment
returns the current output source processor
set the source of the output source
returns the
sets the
returns the current output source processor
set the source of the source
starts the
returns whether or not the justification segments should be preserved
sets the source locator for this locator
sets whether or not the line segments preserved should be preserved
print a string
start the
this method is called when the end of the buffer is finished
sets the source locator
print the string
prints the string to the buffer
end the end of the end of the
sets the file to read the file
set the file name
returns the output planes
register a comment to this
set the set of outputs
adds a source processor to the list
removes the specified code source processor code from this
sets the logger
sets the reader
returns the processor that this object is being processed
sets the processor
returns the line number of the current line
returns the source locator for this locator
set the writer to a writer
start the
print a string
print out the line terminator
close the writer
close the stream
returns the parent environment
returns the value of the named macro as a string
define the specified component to be set
define a named property
set the optional macro name
removes the given macro from the macro
define a macro
define a macro
sets the macro
returns true if the given string is defined
sets the file to read the file
set the file to read the file
this method initializes s shell
this method is called upon plug in activation
this method initializes this
returns the value of the specified key as an int
returns the value associated with the given key
returns the value of the specified key as a long
returns the value associated with the given key or the
sets the property
checks if the output was successfully written to the output stream
sets the project container
set the project build dao
sets the
set the build dao for the build
sets the dao
adds a new project to the list of threads
sets the ant project runner
returns the project build
sets the publish base directory
sets the builder
sets the project base
sets the quiet period
sets the branch name
sets the branch summary
sets the projects container
returns the publish directory for the project
returns the project name
getter for property dependent projects
returns the status string
returns the status of this object
sets the project def filename
returns the project with the given name
returns true if the status has been set
returns the project with the given index
parse the project defs
returns true if the current building has been initialized
start a new element
returns true if the current status is a
returns the changed files
build the build status
adds a project build to the project
build a project build from the database
get build by id
set the action sequence for the
returns the build files for the build
build the project logs
get all project builds id builds the query
sets the dao for the task dao
returns a list of all project logs
returns the action for the given id
updates the project build
returns a list of all actions that are currently registered
sets the svn client
sets the svn
sets the svn password
remove an action from the database
returns the current version of the repository
removes the from the
returns the last revision of a branch
returns a list of all the project project objects
returns a list of all build build summaries
returns a list of all tasks for the specified action
returns all build summaries for a given branch
create a new task
builds a list of all the items in the database
remove a task from the database
get build from the database
returns the row object for the specified row
updates the database with the given build parameters
returns the number of builds for branch branch
returns the summary branch summary for the given id
returns a list of all iteration
returns the last revision of a branch
gets the branch summary by its name
get the iteration by id
returns the current iteration of the current iteration
returns the most recently generated build for the given branch
updates the iteration with the given iteration
get all the branch list
removes the iteration at the given index
creates a new summary
get the build notices for a given branch
updates the given summary branch summary
set the user sequence
returns the user by id
returns a list of all action for the specified action
creates a new user
sets the name of the
set the surname
sets the email
sets the city
sets the notes
returns a string representation of this object
returns a string representation of this object
returns a collection of all members of this group
returns a collection of events in this list
returns a font object for the current font
set the center of screen
sets the screen in center of the center of the current location
end the time
prints the to the
returns the for the given point
adds a new string to the default
returns the for this panel
loads the image to the panel
sets the font to the
set a property of the bean
creates a new instance of file template
sets the resource
create a cell mapper
create a bean object from the given class
adds a new wait to the end of the list
adds a test to the list
adds an element to the end of the queue
add an entity to the list
add a new simulation to the list
returns the result of the specified test index
returns the current frame
handles the arrival of a sim event
returns the
pauses the simulation
returns the simulation gui object
returns the wrapped entity
returns the type of the entity event type
returns whether the user has been activated
returns the time in seconds
returns a string representation of this object
wait for time to wait for a time
pauses the
pauses the simulation
sets the before target
add a classpath to be used to create the classpath
sets the
sets the reference to the reference to the ami reference
sets the reference to the reference to the ami reference
updater for
sets the
generates the declarations
performs the analysis
returns a list of all files in the list
get the files of the given filter
returns the file that is being imported
this method creates a jar file from the jar file
sets the time to save the time
the truth of the
creates a knowledge base with the given entity
sets the owl model element
creates the default error panel
returns the iri for the given property
returns the name of the property
returns the
returns the selected node
set the
resets the components
resets the components
returns the option panel
returns the framework framework
sets the framework
initializes the listeners
resets the components
returns the owl model holder object
creates a new property selection dialog
returns the ontology change listener
returns the selected value
returns true if the specified extension is supported by this
returns the description of the supported files
returns true if the file is defined in the file system
generates a reasoner
resets the components to the model
returns the owl model holder object
extract an instance of an existing event
shows a dialog box
this method returns the
returns the launch properties
returns the default value for selection in multiple property
sets the launch properties
gets the value of the property
sets the
returns the mapping argument for the mapping of the
returns the protege jmx service
sets the protege bundle launcher
returns the sleep time waiting in the result set
extract the name of the ontology
returns the sleep time waiting in the result
sets the content of the combo box
reads the version of the stream
sets the property map for the owl property
reads an owl file from the input stream
this method builds a file list from a list of file
sets the
this method is called when the application is initialized
returns true if the specified file is supported
builds the formula tree node
returns the value from the map
this method makes the the tree
removes a from the list of
shifts all the networks in the network
outputs the discriminator
sets the value of
sets the second
returns the number of in the list
gets the value of the property
returns the
returns the second
returns the adjacent road at the given index
adds a new network to the list of networks
creates a list
returns the
this method is called when the is removed
returns the network
tree
returns the tree
verify consistency of the consistency
the tree
makes a path to the network
this method builds the of the
returns true if the specified extension is supported by this
process the
distributes the
saves the network to a file
initialize the
cycle to the network
returns the internal frame
generates a description of the given types
returns the file extension
returns the description of the given ontology
sets the file extension
returns true if the is
sets the
returns the file extension
sets the file extension
returns the prefix manager manager for the given ontology
gets the value of the property
sets the
shows the help of the command
help about action performed
help about action performed
sets the map name to which this map belongs
help about action performed
auxiliary tree visitor method to classify a node
returns the root node of the tree
evaluates the classifier
prints out the ground truth of the
sets the map to be used for the map
sets the entity cache
sets the map of nodes loaded from the map
sets the
removes all the parts in the
returns true if this cache is reset to reset cache
sets whether to cache the cache
sets the type of the resource
sets the map of argument maps to the specified argument
sets the expression cache
returns true if the node has a child of this node
sets up the button for all the buttons
method for changing the button to change
returns true if this node is immutable
sets whether this node is immutable
builds and returns the status bar
returns the single entity network
the given resident node
returns the
returns the internal frame
initializes the gui
returns the instance of the current
checks if the class name is a class name
returns the node with the given name
returns the popup menu for the node
sets the popup menu for the node
returns the selected class
sets the selected class
returns the
renews the current list of the active
initializes the plugin
add a new to the list
returns the plugin manager
sets the plugin manager
returns the next token ignoring any characters
removes the given from the list
returns the name of the test case
returns the index of the ordinary variable in the list
returns the ordinary variable variable with the given number of ordinary variable
set the input instance of the node
sets the name of the node
set the input instance of the input node
removes the given resident node as a child of this node
returns the ordinary variable bound to the given node
deletes the node
deletes the resident node
initializes the formular with the given text
this method is called when the user selects the window
creates a entity definition
a
remove all nodes permanent from the list of permanent nodes
initialize the
returns the context node associated with the given name
returns the resident node for the given resident node
returns the extractor
returns the input node from the node
returns the name of the node
returns the probability for the given node
adds an argument to the current instance
adds an argument to the list
adds an argument to the current instance
sets the status bar text
removes all arguments from this node
gets the value of the property
sets the list of
returns the
sets the to be used for
sets the cache for this
sets the module name
this method is called when the is
removes all parents of this node
this method is called when the is removed
destroys the given node
returns the level of ordinary variable
returns the name of the node
executes the given command and returns the number of commands
returns the description of the node
sets the value of a parameter
sets the context cache
this method adds a node to the tree
removes the given resident node from the list of resident nodes
deletes all from the database
returns the maximum number of in a query
add a context node to the context
adds a new resident node to the resident list
sets the maximum number of attempts to execute the query
this method adds a node to the tree
adds a variable to the list of ordinary variables
returns the maximum number of attempts to wait for a
returns the object entity with the given name
removes all instances from the model
sets the model
sets the list of parents
set the maximum number of attempts to wait for a kowari
removes the node from the list of possible value nodes
sets the fragment to be used for the
removes the specified ordinary variable from the list
returns the factory
add a new child to the tree
adds a node to the tree
sets the factory
returns the compiler to use for the compiler
returns the owl owl owl cs
sets the compiler to use the compiler
gets the value of the property
shows the edition pane
sets the owl reasoner to owl reasoner
read the next character from the input buffer
get the owl class expression parser
sets the
returns true if the resident node is already in the resident node
updates the tree
this method is responsible for determining whether this node is contained in
returns the node with the given name
sets the description of the icon
sets the description text of the icon
sets the node resident node
sets the
checks if the is valid
reloads the list of
updates the selected entities
removes all from this collection
returns true if the given resident node is a fragment
returns the path to the file path
returns the index of the original text
sets the file path
reset the cache
returns the knowledge base for the current knowledge base
returns the state at the specified index
the view
returns the size of the
returns the type of this object
returns the network network
returns the evidence tree
execute the command
sets the status
unselect all tabs
returns true if no clauses is empty
saves the to a given network
load entities of the eclass
returns the main content pane
sets the main content pane
returns the plugin manager
sets the plugin manager
returns the plugin distribution scroll pane
gets the value of the property
all individuals in the model
returns the tool bar
sets the tool bar name
this method is called when the user selects a to the
returns true if the given string is supported by this
returns the button bar
adds a node to the tree
returns the text field
save the formula to the current node
sets the name of the plugin node
loads a graph from a file
returns the
returns the token
sets the token
saves an individual relationship
saves the to a file
saves the values of the given values into the given
returns true if the specified extension is supported by this
gets the value of the has argument property name
test method for
returns true if the is
test method for
sets the
sets the has argument property name
test method for
loads finding the module for the given knowledge base
test method for
test the
test the
test of get method of class nl
test method for
test method for
records the log record
test method for org
start the network
ensure that finding the
sets the to the given
this method is called when the user selects the
returns the number of nodes in the tree
returns the node at the specified index
returns the node with the given name
returns the index of the node at the specified index
removes the given edge from the list of edges
adds a node to the list
adds an edge to the graph
inverse of the cumulative poisson distribution function
returns the cumulative probability for the x and y values
removes an arc from the list of destinations
returns the probability of the given
returns the probability of the x
clears the tree
clears the edges
returns the edge of the node
creates the order queue
sets the constant at the specified position in this list
sets the constant at the given index
initializes the order queue
compile the tree
returns the tree builder
set the tree builder
sets the mean of the mean and the mean
updates the
sets the mean of the mean
returns the at the specified index
initializes the buttons
set the variance of the
returns whether the current entity has the evidence
returns the index in the queue
set the variance of the
adds a finding to the list
adds finding to the next state
calculate the factors of the discrete polynomial
creates a new object
add
returns the linear coordinate of the linear linear linear
returns the size of the function
returns the associated
sets the mean
sets the associated
updates the of the
set the variance of the
sets the likelihood of the inode
sets the constant at the given index
test method for
normalizes the current node
returns the conditional probability extractor
sets the parent of this node
make the list for a node list
adds a child to this node
this method is used to determine if the is valid
test method for
removes a child
creates a new detail list item object
clears the list of
test method for
copy data from the data set to the copy
verify that the cycles of the cycles
restores the data from the data store
the
removes the input node of the input node from the input node
initialize the belief
initializes the
creates a path to the node
verifies the
returns all nodes intersecting the given nodes neighbors
the connectivity node
returns the probability function
returns the default clause
build the node
returns the class of the node
sets the class of the class
sets the create log
clones the object and returns the object
returns the probability function
clone this node
returns the information type of the
sets the value of the specified coordinate
sets the type of the node
this method is called when the network is removed
sets the value of the ith field
called when the tree is added to the tree
returns the value of the ith value
sets the name of the node
sets the mediator to the mediator
returns the listener that will be notified when the node is removed
returns the value of the given coordinate
sets the listener to ancestor virtual nodes ancestor
returns true if the node is a node
moves a variable to the specified position
sets the children
sets the nodes parents
returns true if the current node is a isbn
returns the likelihood of the likelihood of the likelihood
method that takes a second argument and returns the result
sets the explanation description
returns the linear coordinate of the linear linear linear linear linear linear
compute the factors of the variable
returns the explanation description
set the
returns the linear linear linear linear of the given array
returns true if the state is a state
compute the factors of the
appends the state to the table
removes the last state from the list
checks if the given tables are potential compatible
removes the state at the specified index
sets the state at the given position
returns the number of states in this automaton
returns the table of the current user
returns the state at the specified index
returns the txt description pane
makes this node logically
returns the txt name
removes all the from the list
sets the sum operation
sets the
returns the sum operation
updates the list of all the elements in the list
updates the of the
normalizes the current position
returns the weight of the node
returns true if the node is an arc node arc
verifies that the tables are
verify consistency of consistency of the given network
verify the
verify that the given node is a utility
resets the nodes to the new copy of the current node
returns the create log
sets the add node button
returns the add node button
sets the remove node button
updates the tree
gets the remove node button
initialize the
sets the value of the first initialization property
sets the last table
returns the last table
returns the option panel for the option panel
sets the option panel
build the main panel
builds the main table
builds a likelihood likelihood likelihood likelihood based graphs tables
sets the number format
returns the tree
lets the user know that the text they entered is
show the table
sets the menu of the popup menu
returns the main button
returns the button that is used to display the dropdown
returns the popup menu for the drop down menu
description of the method
adds an action listener to the main button
accept all directories
this method initializes j
adds a button to the container
adds a menu item to this menu
adds a button to the menu bar
remove a menu item from the menu
print the text to the print text
sets the action for the tree
prints the text to the given text area
sets the list of the nodes
expands the tree
reset the tree
returns the text area
retrieves the text content of this component
returns the internal window
set the value of the field
sets the text content of this component
sets the arc
returns the number of evidence dialog
evaluates the evaluation of the current value
the drag gesture has been recognized
returns the virtual node prefix
the drag end of the drag end node
sets the virtual node prefix
returns the node data transfer object
checks if the given option is already already already already already already
returns the plugin node manager
returns the selected algorithm option panel
sets the plugin node manager
returns the current entity
sets the value of the code likelihood extractor code property
returns the plugin directory
returns the number of extractor instances
gets the value of the property
returns the class of the
set the class
sets the
returns the algorithm extension point
sets the algorithm extension point
creates the basic basic basic menu
returns the of the given node
set the default class loader
returns the resource bundle with the specified name
gets the value of the property
sets the
returns the frame
sets the frame
sets the
notify all listeners about the event
loads the plugin
adds a listener to the set of reload
sets the
gets the value of the property
registers a child node with the tree
this method returns the information about the plugin
returns the mediator
sets the mediator
gets the value of the property
sets the
initializes the graph level matrices for the graph
checks if the contents of the collection contains any elements in the
sets the list of ignored arguments
returns the identification number
returns the button that is used to add the button to the
setter for property btn add plugin button
creates the plugin tool bar
returns the code jcomponent code to be used to draw the graphical
sets the code jcomponent code to be used to freeze the
reloads the plugins
returns the resident node resident object for the given resident node
constructor for an entity and constructor
the
clears the cache

assigns the action listeners to the server
invoked when the user attempts to close the application
reloads the plugins
returns the extension point param param
sets the value of the extension point class param
resets the iterator to their initial values
returns the plugin module extension point
reads the given stream from the stream
called by the to start the simulation
sets the plug point in the plugin extension point
sets up the stream tokenizer for reading arff stream
creates the sampling order queue
initializes the sampling order queue
returns the index in the queue in the queue
compute the factors of the
returns the linear coordinate of the linear linear linear linear ring
start the experiment
simulate a more event
start the simulation
sets the list of plugin map
sets up the tree for the given entity
saves the to the given stream
save the potential of a potential declaration
checks if the is
returns the button split button split pane
sets the plugin split button
creates a new split button menu
inserts a node into the list
removes the given node from the list
loads the configurations from the configuration file
initializes the tree
initialize the splash screen
loads the load configurations for this environment
ensure that the window is not empty
remove the given node from the tree
saves the given net to a file
returns the tools menu
returns the content of the entity
returns the sampling menu
insert a new continuous node into the model
insert a new node into the model
deletes the selected item from the list
returns the error
returns the separator menu separator
computes the factors of the neighborhood
returns the linear coordinate of the linear linear linear linear
returns the linear linear linear coordinate of the given array
sets the separator menu separator
print a given area to the given area
updates the progress bar
returns the counter for the counter
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets the counter for node name
create a button with the given key
the
constructs a new relations window
reset the value of the specified column to the specified row
loads a graph from a file
returns the value of the code code property
returns the of the given score
compares two integers
sets the is create user asset net
returns true if the structure is a structure change event
gets the is create user asset net attribute
saves the graph to the given file
returns true if the is
returns the type of this node
returns true if the structure is a structure change event
updates the graph
returns true if the is
sets the
returns the default tree builder
returns the explanation comparator for the current table
sets the table explanation comparator
returns true if this is a
sets the is normalized flag
the
two arguments are equal
initialize the assets of this connector
resets all the listeners in this graph
set the network to be used
returns the network of the graph
sets the property map
init the components
returns the probability that the replay delegator
initialize the potential of the given potential
find the first value in the array list
sets the original to asset map
returns true if the is
get the initial value of the default asset quantity
sets the initial default value for the default load time
sets the
propagate the findings to the target
returns true if the node is a global consistency of the
this method is called when the network is removed from the network
calculate the explanation of the given node
this method is called when the user selects the
this method is called when the undo of the
returns the cell values comparator
sets the cell values comparator
sets the is to log toggled
sets the map of network actions
returns true if this is a
constructor for the class panel
this method is called when the graph is removed from the graph
sets the transaction counter
sets the parent nodes
returns the transaction counter
resets the components
returns the network builder
this method is called when the tree is about to be removed
sets the probability of the probability margin
returns the
returns the icon controller
returns the probability margin
this method is called when the is
creates a new stream to the output stream
sets the user to asset map
returns the network for the given user id
sets up the stream tokenizer for a stream
returns true if the node has a node
returns the
returns true if the given model key is true
returns the hash code for this object
sets the id
returns true if the given model key is true
sets the value
returns the domain value
sets the domain
returns the current log base
set the current log base
returns the current currency constant
sets the current currency constant
builds the dialog and returns the dialog
builds the dialog dialog and returns the
builds the dialog
builds the dialog
returns the current chain of the current chain
sets the current chain of the current chain
adds a relation to this relation
removes the relation from the set of relations
returns the type of entity in the database
checks if the given name is a primitive
extract the facts from the given path
returns true if the relation contains the given relation
extract the facts from a path
returns the outer class of this relation
extract the facts from jar file
extract the facts from the given directory path
resolves the
returns the design
adds a relation to the given relation
creates a new relation with the given type and the given entity
the extracted extracted description of the event
returns the super class
description of the method
description of the method
returns a string representation of this object
called when the extracted event occurs
returns true if the constructor is a constructor
extract the signature from the http parameter
translates a parameter
returns the return type of this method
translate a key to a string
returns the class for the given class name
returns true if this is a visibility
returns the declaring class of this class
returns the method for the given method name
returns the field with the specified name
returns true if this method is static
add a class extracted from the list of to the given
gets the result of the result of the result of the result
build the method
adds a relation to the entity
returns true if this is a primitive type
returns the type of the relation
returns whether this class is inner class or a
returns the relation of the reverse relation
returns true if the class is anonymous
returns the package node
returns the type of relation
checks if the entity is already in the entity
returns true if this entity is a entity
returns true if this is a relation
checks if this object is an array
returns the name of this node
returns the package node of this node
returns the entity with the given name
returns the class of the given class name
returns the method for the method
returns true if this class is a class
returns the field node with the specified name
returns the package node for the given package
returns the class for the given class name
returns true if this class has a descendant of this class
gets the method for the given method signature
returns the field node with the specified name
generates the file to write to the file
reads the next line from the input file
returns the field node with the given name
returns the result of the result of applying entities to the
get the method annotated with the given name
get the inherited method
returns the class name of the class
returns true if this node is a super class
verify that the singleton method is annotated with the
returns true if the given method has any
verify the singleton instance
checks if the property has a singleton property
returns the name of the node
returns the modifier
process a file
add a file to the file
test method for
the of the
this method is used to generate the
tests the class with impact
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
test interface method
test method for
method that prints the method that is used to compute the
test for method initialization of a ensemble
tests the class level method
test num method
returns the opcode for the given code
gets the level
get the keys in the table
returns the string representation of the type of the given type
create a table with the tables
factory method for instantiating the table
returns the symbol associated with the given key
checks if the given key exists
returns the order number
returns the type of this
sets the order number
pushes a new message onto the stack
pop the last element from the stack
set the level
pushes an int onto the stack
returns the top element of the list
pop the stack
returns the second string
return the top of the stack
returns the second value of the vector
sets the child of this node
gets the child node attribute of the node object
returns the children of this node
factory method for instantiating the child hashtable
sets the parent node of this node
returns the children of the cached children
clears the cached children
sets the child of this node
returns a string representation of this object
returns an enumeration of all the children of this node
returns whether this node allows children
returns the child at the specified index
returns the number of children of this node
returns the index of the given node
returns true if this node is a leaf
evaluates the node and returns the result
evaluate the given node
evaluates the given node as a string
returns the label for the given label
evaluates the expression
set the label for the given label
evaluates the expression and returns the result
evaluates the expression
evaluates the expression
evaluates the node and the node
evaluate the expression and returns the result
evaluate the arguments
evaluates the given xpath expression
evaluates the node and returns the result
evaluates the node and returns the result
evaluate the next output node
evaluates the node and all its children
evaluate the next input node
evaluates the given node and returns the result
evaluates the given node as a string
checks the existence of a ident
outputs a message to the given node
this method is called when the error is encountered
creates a function with the given function return the corresponding
creates a procedure procedure with the given identifier
creates a parameter parameter
pop up a symbol and pushes it onto the
set the type of the node
analyses the given node from the database
sets the type of the
check if the given code type code is equal to the given
the given order to the given order
check if a symbol type is a symbol
sets the value of the nome property
create an instance of
sets the value of the id property
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
gets the value of the return property
sets the value of the return property
returns the
gets the value of the valor total property
sets the value of the valor total property
sets the value of the property
returns the
sets the value of the property
gets the value of the arg0 property
sets the value of the arg0 property
gets the value of the arg1 property
sets the value of the arg1 property
returns a new image from the given buffered image
reads a file from the specified file
this method is called when the user selects a
get the address mode
returns the minimum size of the component
adds an error to the error list
handles the event that the choice point has been selected
returns the error start
resets all values to their initial values
draws the panel
paints the image
returns the error end value
sets the error to display
returns whether the error is an error
initialises the
adds a cell to the set of
sets the value of the cell
moves the current location to the location
forward the next step
steps back to the next step
forward the current cell to the current state
initialises the data
adds the listeners to the dialog
this method is called when the thread is started
returns the instruction register
returns the number of data memory used in the data
returns the code condition code of the code code
sets the run requested
starts the
returns the value of the as a string
returns the origin of the
returns the amount of memory used by this object
returns the program line for the given index
resets the run
sets the original line
returns the location of the given position
returns the number of bytes read from the input stream
sets the cell address of the cell
sets the text label
sets the label text
sets the active color
sets the active
sets the height of the image
sets the label of the label
get the register register
sets the half carry flag to false
sets the interrupt to the next interrupt
sets the negative value of the button
sets the zero flag for the image to be plotted
sets the overflow state to the next frame
sets the carry flag to the second
clears the bit set
clears the interrupt interrupt
clears the current value
clears the zero and clears all zeros
clears the overflow state
clears the carry flag
clears all the registers
clears all flags and the canvas
sets the label mode
sets the hex mode
sets the drawing mode of the current view
sets the
returns the current value
set the value related to the column bus x
sets the active state of the frame
sets the active
returns the x coordinate of the bus
this method initializes this
this method initializes slider threads per scan
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes break panel
this method initializes btn drop
this method initializes this
this method initializes this
this method initializes btn cancel
this method initializes btn add
this method initializes j scroll pane
this method initializes btn cancel
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes menu generate
this method initializes this
this method initializes j popup menu
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes btn cancel
this method initializes this
this method initializes this
this method initializes this
this method initializes j scroll pane
this method initializes txt display
this method initializes btn ok
this method initializes btn cancel
this method initializes this
this method initializes txt tag add
this method initializes j scroll pane
this method initializes btn ok
this method initializes btn add
this method initializes btn delete
this method initializes btn cancel
this method initializes this
this method initializes j panel1
this method initializes txt proxy chain password
this method initializes this
sets the history reference
this method initializes j scroll pane
returns the current table model
saves the given file to the given file
this method initializes this
delete the history
this method initializes chk use proxy chain
this method initializes this
this method initializes this
this method initializes the table
this method initializes table auth
this method initializes this
this method initializes j scroll pane
this method initializes panel command
this method initializes this
this method initializes btn evaluate
this method initializes btn start
this method initializes txt proxy chain skip name
this method initializes txt scope
this method initializes j scroll pane
this method initializes j scroll pane1
this method initializes j
this method initializes this
this method initializes this
this method initializes j scroll pane
this method initializes chk reverse proxy
this method initializes menu find
this method initializes popup menu find
this method initializes menu report
this method initializes menu item last scan
this method initializes this
this method initializes this
this method initializes panel command
this method initializes chk request
this method initializes chk proxy chain auth auth
this method initializes chk response
this method initializes btn continue
this method initializes btn continue and tag
this method initializes btn drop
this method initializes j panel buttons
this method initializes bar progress
this method initializes btn stop
this method initializes this
this method initializes this
this method initializes j scroll pane
this method initializes table test
this method initializes btn skip
this method initializes this
this method initializes j scroll pane1
this method initializes j scroll pane
this method initializes this
this method initializes table test
this method initializes this
this method initializes j scroll pane
this method initializes btn enable all
this method initializes btn disable all
this method initializes this
this method initializes this
this method initializes pane scroll
adds a command line listener
this method initializes btn stop all host
this method initializes this
this method initializes this
this method initializes pane progress
this method initializes default pane
this method initializes log panel
this method initializes this
this method initializes btn apply
this method initializes btn cancel
this method initializes btn reset
this method initializes menu reset session state
this method initializes j scroll pane
this method initializes table filter
this method initializes txt pattern
this method initializes j scroll pane
this method initializes btn enable all
this method initializes txt result
this method initializes btn disable all
this method initializes btn search
this method initializes j panel3
this method initializes btn ok
this method initializes j panel4
this method initializes log panel cell renderer
returns true if the header is a header
returns the parameter with the specified name
returns the value of the header with the specified header
this method initializes j radio button
this method initializes j radio button1
this method initializes j panel6
returns true if the image is an image
replaces the internal header fields with the given name
adds a header field to the header
sends a request to the server to send a
notifies listeners about incoming requests
returns true if the parameter is a string
sets the time elapsed in milliseconds
get the list of objects in the map
determine if the given message uri is a
compares the current plugin with the given object
this method initializes this
this method initializes split vert
this method initializes j scroll pane
this method initializes this
this method initializes j scroll pane
this method initializes scroll header
this method initializes txt output
this method initializes split vert
this method initializes txt editor
this method initializes panel view
this method initializes this
this method initializes scroll table body
this method initializes this
this method initializes this
returns the menu edit
returns the menu tools
this method initializes scroll txt editor
this method initializes menu view
this method initializes this
this method initializes this
this method initializes menu options
this method initializes btn accept
this method initializes this
this method initializes btn ok
this method initializes this
this method initializes menu file open
this method initializes btn cancel
this method initializes menu file save as
this method initializes menu file exit
this method initializes menu file properties
this method initializes j split pane
this method initializes menu file save
this method initializes menu help
this method initializes menu help about
this method initializes menu analyse
this method initializes panel view
this method initializes j panel1
this method initializes panel param
this method initializes txt headline
this method initializes table body
this method initializes scroll txt body
validate the param table
saves the current data to the current state
this method initializes j scroll pane
this method initializes j scroll pane1
called when the framework starts
called when the osgi framework is stopped
returns the value of the given parameter
get the next job to run in the run
called when the osgi framework is stopped
sets the annotation number value value for this
sets the annotation string value value for this
setter for property annotation type
set the endpoint address for the specified port name
sets the term id value for this query
sets the term name value for this
initialize the servlet
creates a new instance of product
stops the
info
helper method to send a message to the server
returns the weight of the instance
returns an instance of the
returns the structure of the source
the action has been activated
this is the entry point method
this method initializes j button
this method initializes j text field
this method initializes j radio button
this method initializes j radio button1
this method initializes j text area
this method initializes j text
this method initializes this
this method initializes this
this method initializes j content pane
returns the
get the duration of the file
show the controls
this method initializes this
this method initializes j content pane
this method initializes j button
this method initializes j button
get the time of the start time
this method initializes j button1
this method initializes j button1
this method initializes this
this method initializes j radio button
this method initializes j radio button1
invoked when the internal frame is activated
this method initializes j text field
this method initializes j text field1
this method initializes j text field2
this method initializes j text field3
this method initializes j check box
this method initializes j check box1
set the start point of the polyline
updates the thread
sets the end point of the arrow
returns the persistence id
returns the start point
returns the end point of the event
returns the color of the
returns the first point in the specified point
writes the annotations to the given file
add a new point to the polygon
called when the end of the element is finished
returns the number of elements in this collection
writes the trailer to the output stream
plays the clip at the current position
this method is called when the user selects the given item
returns the parser for the given text
set the time of the media
starts the sync
sets the media time offset
add a file to the table
adds a new file to the list
returns the number of rows in the model
dump the to the given record
returns the name of the column at the specified column
mark the stroke as a stroke
this method initializes j text field
this method initializes j button
this method initializes j button2
this method initializes j button3
this method initializes j button4
update the current thread
this method initializes j button6
this method initializes j button7
select the index of the specified time stamp
this method initializes j radio button
starts the locking thread
this method initializes j radio button1
this method initializes this
this method is called when the error handler is about to be
sets the component of the component
returns the logger
merge the given list of into the given list
initialize the tree
initialize the tree
creates the gui
returns the selected actions
returns the tree
generates a list of all the oids in the tree
this method initializes this
called when tree is expanded
this method initializes j content pane
handles an exception
initialize the frame
returns a list of all the actions contained in this
called whenever the selection changes
returns the list of actions
reads the annotations from a file
returns true if the tree is
this method initializes j button1
clears the actions
returns the value of the named field
adds an attribute to the attributes
this method initializes j scroll pane
this method initializes j table
returns the time in nanoseconds
returns the time to be used as a string
returns the time in nanoseconds
description of the method
returns the name of the factory
returns the canvas component
sets the media time
returns the name of the
sets the flag
returns an enumeration of all the times about the month
returns the current file pointer
returns the ordered list of the elements in the given
returns the component that is used to display the tool box
returns a vector of all the elements in the specified time
returns a vector containing the time of the given time
returns the number of in this portfolio
show the current state of the current thread
returns the stroke that has the given
wait for the to prefetch
clears the cache
set the rate of the
merges the strokes to the given track
add a new bucket to the bucket
freeze the analysis of the
remove all the strokes from the bucket
removes all the strokes from the bucket
returns the device that this device is being used
removes all the elements from the list of
set the to the given value
removes the strokes from the given time
deletes the strokes
returns the start time
set the media file info
returns the hash hashtable
reads the next byte of data from this input stream
sets the size of the resize factor for the given camera
returns the time in milliseconds
returns the offset of the media time in the given media file
clears the contents of the canvas
returns the time base time
this method initializes j text field
this method initializes j button
returns the time in milliseconds
returns the time in nanoseconds
returns the nanoseconds to the given timestamps
returns the name of the player
this method initializes j radio button
clears the user id
this method initializes j radio button1
this method initializes this
returns the
reads the bytes from the buffer
returns true if the player is dead
returns the media time
skips over and discards code n code bytes of data from this
returns the name of the factory
begin user doc
returns true if the player is currently started
returns the start time of the
returns the start latency in milliseconds
set the rate of the
returns the number of bytes available in the buffer
shutdown the thread
show the stopped stopped
this method is called when the user presses the stop button
invoked when the target of the listener has changed its state
called when the starts
wait for the user to prefetch the prefetch
returns the start latency
wait for the prefetch
returns the name of the factory
reads the content of the given file from the given file
mark the current position in the buffer
commits changes to the current view
set the media time
returns the time of the start time
reads a from the database
resets the stream
starts the synchronization
returns the duration in seconds
writes the content of the code file code to the code write
clears all annotations
creates a swatch label
returns the rate of the
clears all annotations
sets the perimeter of the given rectangle
handles the mouse dragged event by invoking the
adds an item to the shopping cart
invoked when a mouse button has been released on a component
show the current time
updates the item
deletes an item from the database
sets the
loads the driver
connect to the server
this method is called when the user clicks the size of the
disconnect from the server
get a list of truststore
this method is used to set the username and password
returns the size of the player
creates the file selection frame
adds a new project to the project
initializes the logger
initialises the connection
adds an annotation to the log
add a new resource to the given file
clears all annotations in the document
adds a log to the current file
add a new bin log
returns the action for the given argument
add an array of text to the annotation
add a new drawing to the track
wait for the current thread to be executed
set the endpoint address for the specified port name
loads the background image
adds a new text file to the list
update the title of the user
runs the action
adds a new text file to the list
handles the event of a event
returns the value at the specified row and column
returns the name of the column at the specified column
returns the value at the specified row and column
returns the rate of the
sets the time of the time to time
this method is used to set the username and password
join group join group
adds a tag to the tags
returns the method with the given id
adds a child to this table
adds a symbol to this program table
prints all the puzzle
prints the puzzle as a puzzle
prints the word list to the standard output
prints the help message
adds a menu listener to be shown on the menu
adds a button listener to the button
adds a listener to the button
adds the listener to the button
adds a listener to the button listener
adds a listener to the exit menu
paints the image to the graphics object
clears the puzzle
adds a button listener to the button
sets the generation flag
sets the puzzle
sets the value of puzzle type
sets the solution
sets the solution matrix
adds a listener to the help menu item
checks if the word is legal word
removes the word at the given line
adds a listener to the user asking for a user
adds a listener to the click popup menu
adds a listener to the button
adds a listener to the save puzzle
adds a listener to the save button
adds a listener to the button
adds a mouse listener to the mouse
clears all puzzle puzzle
show a dialog with the given description
displays the about box
get the size of the puzzle
returns the selected language type
returns the word text
returns the selected text
opens a file chooser dialog to open a file
save the file to the file
displays a message to the user
this method is called when the viewport is cleared
prints the puzzle
prints the puzzle
prints all words in a list of words
selects the text in the text box
sets the size of the puzzle
sets the selection status of the puzzle
sets the solution
sets the solution matrix
updates the word area
dispatches the given object to the underlying object
send an object to the server
starts the connection to the database
dispatch an object to the socket
close the connection
returns true if the connection is connected
closes all open connections
draw the sprite at the end of the drawing
the hit
this method is called when the map is hit
returns the x coordinate of the translated x coordinate
called when the collision is moved
this method is used to set the level of the
this method is called when the map area is hit
add the scores to the
draws the graphics object
this method is called when the is removed
draws the light image
explode the
sets the direction of the camera
draws the line
updates the buffer
displays the frame rate
updates the background of the background image
paint the image
paint the sprite
initializes the stage
set the layout manager for this component
sets the controls menu
sets the frame to the specified stage
creates a new stage
registers a new script manager with the current stage
handles the cycle of the event
add a string to the end of the given subset
parse a tree
parses the given statement and executes the
clears the local variables
returns the local parameter
declare the of the given
tokenize the specified scanner
extract keyword from the keyword
extracts the number of characters from the current line
extract a string from the line
this is used to convert the to an instance of
returns the string representation of the given string
allocates a new class to be used for the given class
description of the method
sets the
sets the context attribute of the compartment
this method is used to determine if the external library is external
set the property value
close the file
returns a dynamic representation of the specified path
merges the node with the given node
clears all variables
returns the variable at the specified name
prints a string to the
executes the given statement
sets the value of the code value code property
set the pos attribute of the object
returns the x coordinate of the point
returns the y coordinate of the point
checks whether the given token is excluded from the
extract keyword or keyword
returns the length of the word
extract the number of the
utility method to populate the table
extract the string from the current line
extract the current state from the given operators set
returns the function at the given id
extract a token from the token
register a class definition
appends the expression to the expression
get the local parameter
returns the prototype with the given classname
set the classpath to be used to load the class
writes a log record to the log
starts the log
flush the log file
test method for
sets the arguments to the given list
this method is called when the plug in is stopped
runs the
returns the path to the maven ivy file
logs the given exception to the log
logs the exception to the log
construct a message from a resource type
visit type declaration
returns true if the given md has already been declared
returns the type of the ijava element
returns true if the test has a test
returns a string representation of this object
returns the name of the element
this method is called when the activity is about to be performed
checks whether the constants of the sensor constants
test method for
this method is called when the application is early
returns an image descriptor for the specified path
returns the version identifier for the version
initializes the preference page
opens the new
initialize the timer
initializes the preferences
sends the command to the server
quits the application
extracts the filename from the resource file
returns a java
returns the resource resource resource
returns the selected text editor
returns the active file
returns the file object file
method from listener
notifies the listener about the current window
method to handle the given part
called when the document is about to be changed
the user has changed the document
stop the timer
test method for bean
adds a new update to the list
returns the update with the given number of update
gets the value of the property
returns the date format
get the user name
sends a mail message to the server
gets the value of the property
sets the
sets the project set
sets the theme set
sets the category
gets the fee value
sets the fee value
returns the light set
sets the alert set
sets the portfolio set
sets the skill set
initializes the
sets the channel id
adds a data item to the data set
returns the reference resource reference for this resource
returns the static key for this class
returns the key for the component
invokes the method
called when the component is rendered
creates a new target
returns the input stream for this input stream
sets the input file
returns the
sets the
returns the current condition
sets the current condition
sets the output file name
returns the parent condition
sets the parent condition
setter for property bins
returns the added predicate
sets the added predicate
returns the best restored
sets the best impact
returns the impact of the impact
sets the impact begin
sets the projection of the projection
returns the combined impact
sets the combined impact
returns the combined optimistic rolled bonus
sets the combined optimistic rolled or not rolled or number of
returns the combined level of this
sets the combined
returns the combined parent level of the combined impact
copies the receiver to the one
sets the combined impact of this pedidos
sets the attribute
returns the statistics
sets the sum of the values
returns the value of the range
returns the deviation
sets the deviation
returns the variance
sets the cell spacing
sets the variance
set the value of minimum
sets the maximum value
returns the impact of this impact
returns the code interval code attribute
sets the impact
sets the numeric attributes
returns the optimistic impact
sets the optimistic impact of this event
returns the impact
returns true if this field is a negation
sets the impact
sets the negation of this expression
returns the parent impact
returns the target interval set
sets the impact of this impact
sets the target
gets the value of the property
sets the
gets the value of the trivial threshold property
sets the threshold
returns the threshold for the detection
sets the threshold for the given threshold
sets the count
returns the use boolean flag
set the use of the
returns the minimum coverage of the coverage
sets the min coverage
returns the path of the element at the specified index
returns the single
returns the merged read
returns true if the result is a result
the
starts the next
test the of the sensor light sensor to the
test for
sends a message to the server
sends a message to the socket
returns the value of the listen to listen
returns true if the current thread is available
queues the message to be sent to the queue
sends a message to the server
sends a message to the socket
the new message queue
toggles the freeze flag
returns the number of rows in the table
returns the value at the specified row and column
updates the coordinates of the
sets the value at the specified row and column
updates the data in the database
sets the key
begin user doc
this method is called to create the object that encapsulates the
this method is called when the activity is
returns the pc of the
get the sid
this method is called when the activity is
initialize the properties
destroy this object
returns the persistence manager
close the transaction
returns the commit on close
sets whether the database should close the commit
parse the path from the given path
runs the graph
pop the last record
pushes a record onto the stack
pushes an object onto the current record
pushes an array of new array into this record
add a collection of records to the record
pushes the current record onto the stack
set the filtered list
set the object to be processed
returns true if the object is a filtered object
returns true if the object is a processed object
executes the given object
process the graph
process the object
processes a class
process the collection of all the elements in the collection
process the map
executes the action
this method is called when the action is invoked
performs a action
p load the properties from the given request
returns true if tiles of the given tiles are
destroy the
get the properties file
sets the properties file
place this filter into service
destroy the service
process the request from the chain
sets the match flags
returns the match flags
sets the program to be used
returns the program to be used for the program
gets the paren count
get the parenthesis
throws an error
allocate the
returns true if the entry is at the given index
matches the current match against the given search string
returns true if the current search match the passed in
substitutes the substitution of this triple
compares the two characters
adds a row to the table
returns true if the table is empty
sets the id
sets the value of the field
sets the value of the created flag
returns true if the user has been created
sets the status of the cursor
returns the screen data field patch from the screen
returns true if the status is a moved state
sets the ghost of the ghost
set the status of the ghost
resets the status panel
returns the column index for the given name
commits the changes to the database
applies patch patch patch
returns the row position of the given row
sets all fields to the given fields
sets the window name
launch a project
returns the java java script class of the manager
create vertical spacer
opens a directory dialog to choose a directory
handles the use case of the button
returns the default working directory for this linux configuration
sets the default configuration for the given user
creates a label for the given text
creates a text field
returns the preference store for this plugin
initializes the values of the preferences
performs the default defaults
perform the save operation
initializes the entity
returns the servlet context
initialize the applet
close the current tar file
converts a string to a code string code
enables the dragging of the tool
returns the minimum value of the
returns the
returns the maximum value of the
selects the tab at the given index
hide the
show the dialog
returns true if the component is hidden
returns the projection of the current projection
add a marker to the zvtm layer
refresh the display
returns the number of marker points for the given zoom level
adds a control to the control
closes the window
disables continuous zoom zoom
returns true if continuous continuous continuous continuous zoom in the continuous zoom
returns the current date
returns the number of cells in the cell
updates the current date
adds a shortcut to the item
returns true if the receiver contains the specified element
searches for the first occurrence of the specified element in this list
searches for the last occurrence of the specified element in this list
searches for the last occurrence of the specified element in this
returns the note element at the specified index
returns the first note element
returns the last element of this note
sets the selected state of the button
creates the sidebar
parses a dimension
sets the code abstract note code at the specified code index code
removes the element at the specified position in this list
returns the date chooser
inserts the specified element into the list at the specified index
adds an element to the list
removes the specified note from this list
returns the note at the specified index
sets the element at the specified position
sets the marked marked status
inserts the specified note at the specified position in this list
removes the item at the specified index
returns the element at the specified position in this list
notifies all registered listeners that a content change has changed
fire an item added event to an item
fire an item removed event
returns the selected day
returns the selected date
returns the pitch value of the note
sets the
returns true if the current thread is working
returns the chemical of the current utterance
returns the root of the tree
returns the
sets the tuning
sets the property value
returns the current string value
sets the root
returns the root of the pitch
sets the logo of the logo
set the logo for the logo
sets the
returns the image
set the image to be used for the image
sets the image
sets the image to be used to draw the image
returns the screen width
returns true if the loop is a loop x
sets whether the loop is a loop
returns the screen height
returns true if the loop is looping y
sets whether the loop is a loop
get the game engine
sets the game engine
returns the lives
sets the lives
returns the warning
sets the warning
returns the clean rate
returns the full path
set the full path to the specified string
sets the clean rate
returns the time in milliseconds
returns the game engine
sets the frames frames
returns the current frame index
sets the current frame index
note on the midi channel
note off the midi channel
change the program change
this method is called when a midi channel is in the volume
returns the default channel
sets the default channel
returns the pitch value of the note
sets the pitch pitch
returns the note
returns the ith chain of the specified index
returns the string quote to the given database
returns the length of the chain
converts a type to a string
returns a type of the range of the specified type
verify that the connection is not valid
generate a query for a query
returns a detached result set with the given query string
generate a query string
returns true if the object is a
returns the element with the given name
load the header from the given header
returns the position of the element in the list
returns the text between two values
compares the values of the array with the given array of values
compare two values
compare two dates
returns the number of rows in the model
compare two values
check arguments for the specified row and column
returns the number of columns in the model
compares this filter to another object
gets the value of the end value property
compares this filter to another
returns true if the match is a match list
returns whether or not the exclude strings should be excluded
this method is used to get connection to the database
gets the value of the greater than property
sets the property to be used for the database
gets the value of the less than property
converts a boolean value to a code int code
sets the driver name
sets whether or not the should be excluded
returns the number of columns in the table
prints the
sets whether or not the pattern should be excluded
sets the greater than attribute of the requirement object
returns the number of rows in the model
sets the value of the less than property
indicates whether the designated column is automatically numbered thus read
sets the strings that are not matched
returns the number of items in the list
indicates whether the designated column is nullable
sets the ranges of ranges
adds a group to the group
returns the name of the column at code column index code
returns whether or not this is a combine with a
new root node
retrieves the designated columns sql type
set if this is a combine with a combine criteria
drill down down
this method returns the
this method is used to set the value of the receiver
whats a columns tables name
process the request
this is a method that will be called after the row of
description of the method
returns the action for the action
this method is called when the http servlet request is
a cache for key events
method for converting the object to a type
interface for a
interface listener interface
this method is called when the status of the event is about
puts the properties into the map
returns true if the type is assignable to the given class
close the stream
this method is called when the engine is being updated
puts an object into the cache
abstract implementation of abstract factory implementation
creates the cache store
creates the cache store
creates a cache for the given file
adds a test to the test
test that the test method is called
test that the write method throws an exception
test remove null
returns the time elapsed since the last time
test method for
test method for
test remove from collection
creates a new disk store
test remove all
this method is called when the user selects the
benchmark to add benchmark benchmark to the server
benchmark to test the benchmark
test the read only threads
tests the existance of the managers in cluster names
test of memory memory cache method
test that the cache manager is working correctly

writes the data to the given data
compares the argument to the receiver and returns true
test serialization of a
tests the functionality of the get method
tests the performance of the
test method for
test method for
tests the put method with explicit config
test method for
tests put of a thread with a thread with the given
test method for
put a in the config
tests the put method with empty properties
tests the put method
test method for
test method for
test method for
remove the from the cache
test remove all
remove a from the cache
test method for
remove the replicated properties
tests that removing all the requests are removed from the cache
test remove all
tests update with explicit replication configuration
tests update with explicit replication
tests that the replicated properties are empty
tests that the is via invalidate method
test method for
test overflow to disk
tests the multi threaded operations
clears the cache
shows the progress bar
returns the total keys generated by the
creates a new
disconnects the connection
sets the roster of the roster
sets the open flag
sets the close flag to the close
called when the user tries to the a text
register the view listener
removes a particle from the list
returns the java file to which this folder belongs
add a new object to the end of the list
add the parameters to the parameters
adds the parameters to the end of the list
create a new tag
returns the import list of the imported imports
creates a new instance of the
check the stack
converts a text to a string
read a single line from the data
returns the element
returns the writer associated with this writer
set the writer to which this writer is written to
returns the schema
returns the schema description
adds an element to the list
generates a new title
return the value of the specified attributes
adds an element to this link
adds the given attributes to the value of this element
returns the
sets the body of this attribute
adds a new object to the left
returns the value of the specified attributes
returns the first and of the given elements
sets the value of this attribute
adds the given attribute value to the list
this method is used to convert an annotation to a new value
adds an element to the list
adds an element to the list
adds an element to the list
adds an element to the list
adds an element to the list
returns the value of the given attribute
adds a name to this annotation
method to be used to evaluate the expression
returns the value of the specified attributes
assigns the given code object code to this
returns the value of the specified attributes
sets the given left and back side of the given object
adds an element to the list
convenience method to access an attribute
sets the given left or right or null if no arg is
sets the xor of the given object
returns the span element
adds an element to the list
sets the quotient of the given object
returns an element for the given attributes
sets the left shifted to the given left side
resolves an array of objects and the given attributes
adds an element to the list
subtracts the given left object from the given left side
adds a new infix to this infix expression
adds an element to the list
sets the given right to the right of the given
returns the value of the specified attributes
sets the value of the given attributes
assigns the right shift to the given left shifted
returns an element with the given attributes
returns the value of this code code object
translates a infix decimal object into the right shifted unsigned integer
assigns the given object to the given object
returns the value of the specified attributes
pops an element with the given attributes and value
returns the value of the given attributes
begin the compilation unit
adds an element to the list
returns the result of applying this operator to the given
adds an element to the list
returns the result of applying this object to the given
bind a new form element
returns the label and the given attributes
xor for the given xor object
transform an object and return the value
add a new to the end of the queue
selects the specified object
adds an element to the list
returns an option with the given attributes
p processes the given attributes and returns it
returns the first call to the given method
add an expr to the list
adds a new element to the list
generates a new caption and display it
adds an element to the list
adds an element to the list
this method is used to convert an object to an instance of
adds an element to the list
adds an element to the list
returns the name of the class
append an array of objects to the underlying
adds a new name to the list
adds an element to this element
adds the given attribute to this element
returns the doc item text
begin the next comment
end of comment
returns the current buffer
resets the buffer to its initial state
returns the
sets the
inserts a sentence to the sentence
returns the
adds a method to the request
builds an expression from the
builds an expression from the
returns the
returns the result of this infix
builds an expression from the
this method is used to get the question
add a new to the list
adds the given to the end of the list
returns whether or not the import is allowed
sets whether the import should automatically be imported
adds a new file header to the list
pretty print the text
add a directory entry to the directory
remove a directory entry from the directory
this method is used to set the attributes of the node
truncates the code code to the specified size
returns true if this node is a directory
puts a ini node into the table
flush the stream
puts a data node in the table
returns the unique inode id
returns the number of the last inode
returns the inode name of the inode
returns the serial path
returns the serial path
returns the current allocation table
get the parent directory for the given path
sets the suit of the card
this method is called when the rule is not classified
this method analyses the action
analyses the given rule
this method is called when the is about to forget
prepares the variable map for all variables
prepares the rule for the given rule
this method is called when the lookahead activity is removed
checks if the current state is known
returns the class name
set the class name
ensures that the given variable is already declared in the lookup table
adds a category to the lookup category
returns the infix infix infix infix infix infix string
sets the infix
returns the prefix identifier
this method is not supported
this method is not supported
this method is not supported
this method is not supported
returns true if the current node is valid
returns the first element in the list
returns true if the list contains the given object
ensures that the given variable is declared as declared in the scope
runs the application
animates this image from the screen to the screen
runs the shell
create the contents of the shell
initializes the display
initializes the component
runs the action
called when the render is finished
this method is called when the logic of the logic is ended
clean up resources
runs the thread
trim trailing whitespace from the stack
returns the character at the specified position
sets the strategy
draw the scene
load the image from the given image name
puts a date into a calendar
switch to a given
called when the user clicks on the button
converts array of bytes to float array
copies the buffer to the buffer
setup the textures
this method is used to add the texture at the given index
setup the texture
setup the views
this method is called when the task is removed from the server
p returns the xml document that contains the given document
waits for stop
notify the canvas that the component has been redrawn
this method is used to set the triangles of the given node
start the fps
stops the thread
render the scene
change the camera rotation
pauses the animation
called after the render state is ready to be repainted
called when the component is resized
called when the surface has been clicked
change the distance of the distance multiplied by the distance
callback to notify the listener that a surface has been changed
this method is called when the user has created the surface
this method is called when the surface holder is destroyed
called when the touch event is triggered
called when the user clicks on the button
called when the user presses the key down
called when a key has been released on a key
tests the constructor
test the constructor
test for xs long
tests the constructors
test of set value method of class user user
tests the constructors
tests the constructors
tests ognl to the
tests the of the
tests the constructors and constants
tests the constructors
test the split method
tests the constructor
test the constructor
test the encryption method
tests the constructors
tests the constructor
test method for
test method for
test method for
test method for
test the length of the string
test method for
test method for
test method for
test method for
test class
tests the list array list method
test method for
tests the constructors
test method for
test method for
test that the tag is closed correctly
test of close open tag method
test method for
tests the open tag with an attribute
tests the
test method for
test a tagged value with an attribute
test escape html html escapes
tests the method
test method for
test html escaping
test method for
test method for
test method for
a unit test for junit
test method for org
test of contains method
p order code
this method tests the set default method
test method for
test method for
format a string to a string
format a string to a null string
test of append two string representation
format a string to a string
test of append null object method
test of append boolean property
test method for
format a string to a byte
format a short value
format a string to a short
test escape escape sql
format a long value
test method for
test method for
test the of a
test method for
test the left of a left
tests the constructor of the constructor
tests the constructor
test method for
tests lowercase uppercase conversion of uppercase uppercase
tests uppercase uppercase
test the
tests the constructor of the constructor
test the strip chars
test of get method of class org
test of get method of class org
test of create object string method of class org
test method for
tests the on string method
test method for
test method for
test the open doc method
test method for
test of get paragraph method of class open office document
test of get section method of class open office document
returns true if the is
test method for
flushes the cache
setup the test
test log method
test reverse of the
test of add table row method of class org
tests that the exception messages are thrown
test method for
tests the read serializable method
tests that the messages messages are plain
checks if the log is not enabled
sets the factory
set up log for the given name
tests the constructor
starts the transaction
commit the transaction
rollback the transaction
logs the exception message to the log
toggles the auto commit state
logs the message to the log
returns the state of the rolled back back
returns the value of the em em flush em property
sets up the driver for the given appender
sets up the logger for the given name
test that the constructor
returns the groups
test method for
returns the user groups
tests split and set split
test of hash method of class com
returns true if the user is in the group in the group
returns the
returns the xml representation of the given
returns a clone of this object
returns the attribute with the given name
returns true if the given name is in the group
description of the method
constructor that accepts a new
returns the tags
returns the data sources
sets the name of the
returns the value of the code code property
returns the edit mask
returns the message with the specified index
returns the
sets the
returns whether the menuitem change in the is
sets the
initializes the descriptor
returns the description of this
returns the descriptor of this descriptor
returns the foreign key
returns the action context
returns the foreign key alias
returns the help id
starts the properties
stop the timer
builds a cache object with the given properties and
returns the label of this label
returns true if this is a not null
gets the value of the key
clears the cache
this method is used to unlock the lock
unlock the cache
returns the bos bos bos
gets the lower range
clears the current cursor
returns the parse error position
returns the parse error token
returns the edit
returns the value as a formatted string
this method is called when the persist status changes
returns the options
returns the value of the field as a string
returns the output length of the output
checks if the value is in the options
returns the full path name for the given file
returns the output mask
loads a new object
returns the password
loads a new
returns the string representation of the current token
compares two property objects
returns a string representation of this object
returns the for the given
check if the arguments are equal
checks if the given arguments arguments are not too long
checks if the given arguments is a args
checks if the arguments is a function
returns true if the property code ts code is a
returns true if this is inherited from the inherited
returns the value of the double property
returns the value of the double property as a long
returns the value of this property
returns the value of the code load group code property
returns the value of the boolean property
returns the fk expression for the fk expression
creates a new object based on the given class and returns the
returns the value of the fk property
returns the first mi of the specified
returns the sort attribute
returns true if handlers are loaded
parses a single attribute
returns the label as a string
returns whether the given tag is a tag
returns the value of the specified tag as a string
sets the value of the named tag
returns the description of the element
returns the label of this label
sets the value
returns the label as a string
returns the key
the
returns an attribute group
returns the value of the cached property
sets the expressions attribute of the function list object
parses the label label and returns the label of the
returns the
returns the property
sets the
clears the entries
returns the status of the given number of entries
formats a group of
returns the entry with the given name
returns a string representation of the current object
returns the go to the given expression
test
the given group
the
sets the name of the
gets the func
returns whether or not this handler has been loaded
resets the function to its initial state
get the argument value
returns the number of arguments to this argument
returns the
returns the name of the entry
returns a string representation of the current object
saves the state of the object
returns true if the given object is a handler
writes the header to the xml file
opens the tag with the given name
close the tag with the given name
opens a tag with the given name and the given name
sets the for a given
this method is used to set the value of the
returns the characters in the given string
this method is used to indicate that a value is in the
method for setting the value of a property
this method is used to set the
sets the
the given name and returns the number of
append a new to the given name
returns a string representation of the given attribute
adds a custom content to the list
returns the text of the child node
returns the value of the attribute specified by the attribute name
clone this object
returns true if the given object is a handler
returns the separator character
appends the name of the given object to the given string buffer
appends the given object to the buffer
appends the given field name to the given field
append a field value to the given field
find all fields that are declared in the given object
appends the name of the object to the given string buffer
appends the given object to the buffer
returns true if the given object is a handler
appends the given object to the specialized
append the given object to the buffer
sets the name of the
increments the counter by one
decrements the value of this counter by 1
adds a new value to the end of the list
sets the value of the code code property
resets the counter to zero
returns the file name
returns the line number of the current line
returns the name of the method
encrypt a string
returns the for the given name
p append to the code to string code field of the
p append to the code to string code a code byte code
p append to the code to string code field with specified
p appends to the specified field
appends the specified field to the end of the list
p appends a field name to the end of the list
p appends to the specified field name
appends a new field to the end of the list
append the value of the enum to the given field
appends the class name to the target class
appends the given code object code to the current
append a value to the buffer
returns a string representation of this object
clears the iterators list
creates a new instance of the class
returns true if the drop statement is already added to the list
returns the
starts the tracing of the file
returns the value of the code check code property
stops the tracing of the trace
returns the add add table attribute of the table viewer object
returns true if the is
this method is used to log the trace message
sets the type of this component
trace the expression
sets the database
returns true if the value is descending
returns the add sequence
returns the entities
returns the left hand side of the node
returns the right hand side of the
load a query from the given query
returns true if the is
gets the
returns the attribute group
returns the
returns the string
sets the
generate the insert directory
returns the value of the negate
returns true if the user may select the select
returns the
returns the
gets the value of the property
getter for property
this method is used to classify the data in the given descriptor
returns the components
returns the last change
executes the statements
returns true if the outer join should be done
returns the sql string to be used to create the sql
clears the statements
adds a new component to this component
returns the name of the model
adds a statement to the list of statements
set the
execute the query
delete a query from the database
adds a new entity to the list
returns the session id
returns the context of this context
checks if a query is a query
returns the http session
this method is called when the framework is closed
build the literal string for this literal
returns the name of the class that this class is not
returns the context data
retrieves the value of the designated column in the current row
hql clause disjunction
mark the current time as used
deletes the current row
returns the alias name
returns the comma delimited list of csv rows
moves the row to the insert row
insert the methods description here
this is used to determine if the given relative position is relative
returns the group by clause
sets the language
gets the key attribute of the object
returns the language
returns a shallow copy of this tt tt object
returns the
returns the attribute groups
returns a new with the given group name and
returns the attributes of this element
parse the configuration
returns a new with the given name
returns a object for the given
getter for property
get the data source for the given
returns the object for the given
gets the value of the property
returns the tokens list
returns the audit attributes
persists a collection of to the database
returns the use handler
getter for property fixup on
this method is responsible for the
returns the string representation of this token
returns the where clause of the given group
returns the verbose string as a string
returns the attribute with the given name and number of attributes
returns the string where the tokens are the same as the
generates a new for the given name
returns the where clause of the given data
converts an incoming string into a string
returns true if the is in time
get the value of the given attribute
returns the
returns the label of this label
returns a new with the given name
returns the last change
returns the security delete
returns the number of rows in the group
returns the security insert
construct a string with the database name and the database
returns the data cursor
connect to the server
returns the security select
returns whether the is pure
returns the security update
this method is called when the object is garbage collected
returns the handler for the given name
this method will resolve the labels
returns true if the transaction is in a tx transaction
returns the id for the given
returns the data constant group
sets the data constant group
initialize the component
returns the value to which this collection contains the specified key
returns the list of
this method is used to put the value in the map
puts the given key into the map
returns the of the given key
internal helper method
this method is invoked to indicate the garbage
returns true if the collection is empty
returns an iterator over the collection
returns true if the table is a table
copies all of the mappings from the specified map to this map
returns the number of elements in this collection
removes the specified object from the collection
removes the given key from this map
returns an iterator over the set of key values
adds an object to the list
returns the tags
returns a collection view of the values contained in this map
returns the linked map collection
returns a string representation of this object
returns the hash code of this collection
adds an object to the map
adds a new object to the list
returns the unique constraint
returns the table for the given table
returns the table with the given table section
compares this object with the specified object for order
replaces the current text with the given table
gets the search order by image
returns an array of implicit attributes
returns whether the current instance is active
sets whether the current user is active or not
returns the list of event actions
returns the value of the given java method as a java
gets the directory
returns the query directory
returns the session time out
sums the group of the group
executes the given query def
the given
returns a string representation of the current state
returns the label at the specified index
returns the description of the label
returns the label object for the label
returns the string representation of this object
returns a log instance
returns the level of the log
sets the level of the logger
returns a object for the given
returns the group safe list of the current group
test of get start of week date method of class com
some tests that the constructor
tests the constructors
test of set method of class org
test of clone method of class org
tests the constructors
returns the
returns the
returns the actual value object
sets the row count
sets the array list of rows
returns the first value of the group minus the given
sets the number of rows in the grid
returns the component that this component is being inserted
returns the label
gets the value of the property
gets the value of the property
returns the
returns the
returns the
returns the parameters
gets the value of the property
returns the fk if the property is set
returns the first group as a string
sets the
gets the value of the property
begin a new transaction
returns the force focus attribute
returns the attribute with the given name
retrieves the primary key
returns the
returns true if the given tag is a
returns the value of the specified property
returns true if the connection is closed
returns the list of references to the list of references
returns the spell check
returns the descriptor of this descriptor
adds an attribute to this element
returns the list of actions
removes an existing attribute
returns the collection
returns the
gets the value of the property
forward the to the given
returns the url for the
returns the list of buttons
sets the url
gets the value of the property
returns the
sets the url
returns whether the footer is a footer
initialize the page
gets the value of the property
returns the
gets the value of the property
gets the value of the property
returns the entities
gets the value of the property
get post load js
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
returns the
gets the value of the property
gets the value of the property
returns the
returns the value of menuitem
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
returns the collection
gets the value of the property
returns the
returns the
returns the url
returns the collection
returns the list of
returns the
returns the frame size of the frame
gets the value of the property
returns the list of popups that are currently displayed
returns the list of refs
gets the value of the property
returns the security object
returns true if the is allowed
removes the given string from the string
returns the
returns the
search for a menu item
gets the value of the property
gets the value of the property
returns the
gets the value of the property
returns the tags
gets the value of the property
returns the pk
returns the
returns the title of this object
returns the
gets the value of the property
gets the value of the property
returns the
returns true if the is
returns the
returns the
gets the value of the property
returns the generated fields
returns the web settings
sets the
returns the
returns the
returns the
sets the
sets the
gets the value of the property
sets the
returns the
sets the
sets the
sets the
sets the
sets the
sets the
returns the url
gets the value of the property
returns the
returns true if the given name is a tag
returns the
returns the name of the
returns the quick dump of the current state
returns the
append a new attribute
connect to the remote host
appends an attribute to the given string
returns the svc manager for the
returns the header of the checker
returns the spell
returns the text of the
populates the text in the text input field
internal method to append words to the text
escape a quote string
returns the
returns the confirm
sets the confirm button
gets the value of the property
returns the
returns the
returns the cells
resets the counter to zero
clones this object
returns the
returns the
returns true if the is
sets the
returns the
gets the value of the property
returns the
returns the
returns the
returns the
returns a string representing the number of bytes in the pool
returns the actions
returns the action with the given name
opens the level
gets the value of the property
close the level
pops up a message from the alert
sets the
sets the
gets the resolved attr attribute
returns the resolved entity
sets the
sets the operation
returns the send parameter
returns a string representation of the receiver
prepares the quick reply to the given instant
method to be called when the user selects a message
returns the tree node
sets the tree node
returns the
returns the base url
returns the child nodes of this node
this method is used to create the view
returns the parent node of this node
opens a view of the given path
returns the root node of the tree
returns the extension of the extension
returns the mime type of the content
saves the current settings to the given file name
replaces the file with the given name
returns a string representing this hierarchy
returns the label for this hierarchy
sets the persist freq
returns true if the freq time is persisted
returns true if the timer is paused
returns the path to the root of this object
returns the number of unread entries
resolves the given node
returns a fatal error message
returns the last receive parameter bag
format error message
returns the last send parameter
returns the list of includes
gets the value of the property
format error message
returns the values of this list
returns the name of the last last
returns the entities map
returns the
the method code debug code
sets the orientation of the dipole orientation
returns the dublin core module list
sets the action attribute of the object
sets the
returns the as a string
gets the value of the property
returns the url for the given
returns the url for the given url
sets the
gets the minimal days in the given date
returns the name of the control
extract the mof form of the given query expr
add the target property setter to the setter method
returns the name of the given
returns the of the given
extract the rules from the given target
parse the categories
opens the
extract the property from the given category
parses the specified
extract the realm from the given string
gets the base url
extract the value of the given code cell code s
closes the area
method for parsing the total number of resources
parse a from the given url
dumps the current error messages to the output stream
extract a single value from the http pattern
returns the destination of the given
extract the value from the tags
extract the value of the group element
extract the url from the http servlet request
extract the rule from the given resource
returns the for the given action
the header of the header
close the list of resources
closes the row
closes the row in the table
returns the name of the query
end of the popup menu
retrieve query order by clause
retrieve query order by clause
returns query group by clause
popup menu popup menu
retrieve query group from database
processes the request
returns query select clause
retrieve query select clause
returns the query where clause of the given query
retrieve query where clause
wraps the given url
the header for the tree
open the header for the
called when the tree view is closed
returns the tick count for the clock tick
the cell at the end of the table
the matrix to the right
called when the grid header is closed
grid row close down grid
updates the tooltip
displays the image in the screen
update the velocity of the current
creates a new fish
update the velocity of the current state
the run method
process the location of the
set the to a new one
updates the display
kill the agent
set the velocity of the particle
returns the closest target to the given target
returns true if the is a
this method is used to set all the particles
returns true if the particle is
returns the image of the right side of the image
returns the location of the
returns true if the watchdog thread is dead
returns the vector of the current
returns the image width
returns the image height
pauses the playback
load a context from a list of locations
returns the score for the given id
sets the score for the game
calculates the bonus of the
calculates the sum of all the
test method for
test method for
test method for
test method for
create the contents of the window
loads the frame icon
auto generated axis2 error handler
auto generated axis2 error handler
create the contents of the window
creates the content pane
restores the state of the application
creates a jpanel that is being used to verify the authority
destroy the
initializes the gui
returns the color of the paint used to paint the text
returns the font color
initializes the applet
returns whether or not the checkbox is selected
restore the state of the plug ins state
returns whether or not the matched is matched
this method is called when the user selects the sensor
saves the current state of the panel
destroy the
this method is called when the sensor is
called when a resource is about to be
this method is called when the user has been pressed
called when the user attempts to close the
returns the java
returns the current fingerprint
save the current object to a file
creates the content pane
load a file from a load image
set the parameters of the
returns the expected threshold for verification
returns the number of that are rotated for verification
returns the number of pes for this finger
returns the number of that are rotated for the
auto generated setter method
set whether to identify the auto receipt for the given state
set the auto extract flag
closes the tables
this method reads the data from the database
this method is called when the user presses the
show the image
writes the log entry to the given log
enables the image
enables the template button
shows the version of the
constructor that takes a file filter
returns the spi code writer spi code
returns true if the file is a file
returns the description of the file
auto generated setter method
auto generated setter method
adds a listener to the feed
adds a new feed to the feed
returns a list of all the instances
called after the component is executed
called when the progress bar is being updated
parses the given file
returns the parameters for the given key
checks if the parameter exists in the cache
this method is used to set the random number of the
generates random
opens a file to be opened
show the help
opens the url in browser window
returns the base href for the resource
returns the base uri
returns the url to the database
returns the background color of the image
converts a color to a string
returns the value of the parameter with the given key
this method is used to display the subscription
returns the file in the path
returns the input stream for the connection
returns the document as a string
connect to the server
process the header
this method is called when the user selects a string
handles the arrival of a event
returns the key of the container
returns the value of the code or code property
this method is called when the is removed
creates the conv to the
notifies all listeners that the value of the
set the ready for
interface for the
this method is called when a new named method is created
process a run on children
get a from the set of names
returns all instances of the given class
sets whether or not the event is hidden
this method initializes named map
returns the status of the current user
fire a data change event to the data change
fire a data change event to the current state
returns the list of all worksheets in the group
returns true if the current cs is valid
returns the node of the node that can be used to
removes a node from the tree
returns the html for the
returns the of the given string
returns all the options in the list
returns all the mapping files for the given node
check for
returns true if the given ancestor is an ancestor of this ancestor
returns all objects in the list
the
adds a event code to the event
removes the event code from the list of event code
adds a source to the source
removes the source code from the given source
validate the event
this method is called after the tree is cleared
adds a to this node
returns the source of the source
test the queue and event queue
fire an event to the given event
unlinks the node from the parent list
returns the tree for the given type
remove a listener from the list
test the passing of the child elements to the
returns the best language as string
returns the value of the given reference
returns the best language language language language language of the language
returns the value of the currency
returns the translation language for the given language code
returns the childrens of the given node
sets the translation of the translation
adds a translation to the language
returns true if the given object is a
returns the object for this object
subscribes to the listeners
returns a new
returns the childrens of the childrens
compares this money to the given object
test the listener method
reset all the variables
recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively
set the value of the to the given value
returns the tree base
returns a string representation of this object
this method is called when the root is set
returns true if the node is a mapping node
returns true if the given is a mapping
returns the node that this node represents
returns the division of this currency
returns the base tree code
adds a tree to the tree
adds a node to the tree
returns the parent node of the given node
returns the color for the specified tree node
returns the title code for the tree
returns the list of sons of the given node
adds all the children of this node to the given node
returns the node tree with the given value
returns the value as a string
adds a to the list of
returns a string representation of this object
returns the value of the given field
returns a compact tree representation of this tree
returns the ancestors of the given node
returns the current value of the cur double attribute
returns the title of the title
get the value of the variable def
returns the string representation of the object
returns the description of the object
removes all the from the list
sets the currency
returns the currency
sets the currency to the given currency
returns the data type
sets the currency code
refreshes the view
adds all the parents of the given node to the list
sets the
returns the maximum value of the slider
returns the of this
sets the value of the given value
sets the data type
returns a list of all the work sheets in the list
returns the min
returns true if the is
sets the min
sets the maximum value of the maximum
returns true if the current is
notifies all listeners that the value of the field has changed
returns a new compact tree root node
add a new listener to the list of
returns the rate
returns true if the is
sets the position of the node to the given position
sets the rate of the rate

fire the data change event to the data change
accepts a new work sheet
applies the current value to the given value
returns the list of mapping elements in this mapping
sets the publishing date
returns the position of the given node
returns the of this
interface transferable interface
returns the without the result
set the work sheet
fire a compact tree structure change event
returns the id license
returns the of the given
sets the id license
gets the company company name
returns the
returns the accepted type
returns the childrens of this tree
returns the lower bound
set the company name
returns the upper bound
returns the parent of this node
returns the location of the loading file
sets whether the slider is bounded to the upper triangular
returns true if the component is visible
this method is used to create the header
visitor method for setting the diagnosis
returns the tree
returns the in demo
this method is called when the user chooses to the demo
sets the boolean property to the specified value
returns true if the visibility of the current
returns the boolean property value
returns the string representation of this object
returns the value of the code or code property
sets the visibility of the window
add an accepted type to this type
remove an accepted type
sets whether or not the display is forced or invisible
returns the list of accepted types
remove the index from the list
returns true if the given type is accepted by this type
returns the type of the x
returns a string representation of this object
returns the tree node
removes the node
sets the parent of this node
the current value of the given
returns the position of the current node
sets the position to the given position
get the work sheet at index
returns the index of the work sheet
this method is invoked by the tree
returns the parent
the method public private helper for
returns the
returns the valid parent
returns true if the component is valid
initializes the data
checks if the given option can be removed
returns true if the message has been ready to be read
gets the value of the property
sets the value of the apply on property
returns the apply on
returns the pair manager
returns the number of accepted
returns the
returns the number of accepted
returns whether the given engine is currently being applied
returns the minimum value of the
sets the minimum value of this
gets the value of the property
returns the money object for the given key
returns the
creates a new line at the given point
sets the pair manager
the amount of the amount of money the amount of money
returns the rate of the
returns the fixed min value of the fixed number
private method to be called when a is added to the
returns whether this has a tiny
returns the current amount of assets in the given amount
returns the sum of the money in the given
visit bitwise visitor
private method to be called by the to indicate that the
returns the is rate
gets the per amount value for this merchant item attributes
gets the current state
creates a new code wrap flow dispatcher code
returns the applied work sheet
sets whether the rate is
gets the applied work sheet
get the applied tree item
get the applied tree item
returns the value of the code double value code property
sets the value of the code double value code property
sets the per amount value for this
returns the
returns the number of lines in the given line
returns the transaction value
sets the transaction value
returns linked of this
adds a link to the
returns the number of lines in the given line
returns true if the given is accepting or not
sets the number of lines in the list
returns a money value from the current value
returns the transactions
sets the number of contracts in the
returns a money object that represents the value of this
returns true if the current page is valid
sets the flag that determines whether or not the
returns true if the values of the given class are not copied
returns the
returns true if the source tex class is a copied copy
returns the value of the field x coordinate
return true if the given transaction is in the
sets the value of the x coordinate
returns a money object that represents the value of this
sets the value of the
sets the divider to the given divider
returns the next key in the form of the current case
returns an array of accessible accessible objects for a given
returns the sum of amount of money
returns the number of cases in this collection
displays a message with the specified component
returns the sum of all the items in this container
sets the selected case
returns the selected key
returns the index of the selected element in the list
remove a from the
maps the given node to a node
returns the first run
add a case to the list
builds the panel
this method is used to set the parameters of the table
this method initializes button panel
this method is called when a break is added to the end
removes the case sensitive
returns the case of the given key
returns the number of that can be used
returns the number of that are not allowed to be
modify the case of the
returns a node that contains the given
creates the data
returns the root of the explorer tree
this method is used to set the properties of the proxy server
creates a new
this method is called when the proxy is made
this method is called when the user presses the
this method is called when the user selects a proxy
toggles the state of the server
creates a new
applies the properties to the given mapping
returns the proposition of arg0 based on the given
gets the proposition of the given
set the percentage of the image
sets the selected
returns the selected
returns the tree node
un the given node
returns the percentage of
gets the pair tree node
returns the node that is the node of the given node
get the distribution method
set the value of the line size
returns the owner of this node
returns the node with the given id
set the distribution method
returns the cost of the node
this method is called when the map is changed
returns the node that contains this node
returns the mapping of the tree
returns the ui object for the current event
refresh the
refreshes the panel
returns the summary
returns the cost of this node
returns the trees list of all the trees
returns the cost of the node
sets the num of line
called when the child is expanded
returns the list of
refresh the
returns the cost of the node
sets the station to the velocities
refreshes the header info
interface for the interface
returns true if the node is a mapping
returns the filler node for the given tree node
generate tree tree
sets the to the given
returns the string representation of the node
returns the calculation of the calculation
returns true if this is a
this method is called when the calculation of the calculation of the
returns the amount of money the owner is currently in
returns the list of all options
handles the close button action
shows hides the panel showing the panel
import the file names from the file
drops the current
show the contents of the panel
show or hide the options
returns the amount of money in the amount of the amount of
returns whether options are shown
increases the value changed by 1
returns the work sheet at the given index
returns the index of the work sheet
shows the work sheet panel
returns the number of tabs
returns the title of the given index
called when the user has been made
sets the value changed
returns a string representation of this object
returns the percentage of the current value
returns the action panel
returns the dispatcher for the current request
refresh the panel
returns the title of the selected title
sets the button to be used when the button is pressed
returns the amount of money
returns the contents of the table
returns the option panel
commit the current node
returns the popup menu for the current frame
returns the action panel
refresh the panel
returns the work place fixed fee
returns the title of the index
this method initializes this
returns the status bar
initialize the view
refresh the recursive refresh
show the popup menu
this method initializes
sets the pie chart
this method initializes this
called when the event is occured
this method initializes
returns the parent work sheet panel
called when the user changes the data changed
called when the user event has been removed
initialize the view
initialize the class
this method initializes
this method initializes method chooser
called when the user changes the data changed
returns the option panel for the given option
returns true if this is a high
returns the foreground color
format the given date to the given value
returns true if the component is editable
returns the editor for this component
h3 menu action event
stop editing the cell
returns a string representation of this object
sets the money amount
returns the editor for this editor
returns the value input for the current user
returns the foreground color
returns the border of the panel
this method initializes j label
returns a string representation of the money
this method initializes
saves the current logbook to the database
returns the name of the column that is the column of the
returns the name of the column with the specified column
deletes the slice slice table
save the current currency to the current currency
this method is used to set the of the
returns the
sets the enabled attribute of the edit object
called when the user changes the data changed
returns the rate by the slice value
returns the rate value from the given object
the
returns the panel with the given index
the popup menu for the button
returns the minimum of the
this method initializes j table
returns the component that is used to display the component
the
returns the foreground color of the
returns a string representation of this money
returns the type of the
returns true if the is editable
the
returns the applicable number of the
returns true if the current object has value to be added to
returns the rate type
returns true if the value has the same value as the
returns the applicable rate for this
returns the data at the given row column index
returns the value of the column at the given index
visitor method generate compact tree visitor visitor visitor visitor visitor visitor visitor
returns true if the cell at the specified row and column
visitor pattern visitor
merge the given into this one
returns the tags
returns the editor for this component
returns the
stop the cell editing
adds a new to the list of children
returns a string representation of the money
starts a new
notifies the that the given has changed
returns true if the given object has value
visitor method generate compact tree visitor visitor visitor visitor visitor visitor visitor
returns the of the node
returns the tags
returns true if the given object has value to be displayed
returns the z value
visitor method translate a compact tree visit visitor
returns true if the contents of this object has value to the
visitor implementation of
this method is called when the contents of a list of objects
visitor implementation of
adds a tree path to the tree
build the popup menu
changes the content of the component to the given content
returns the first node that is used for the first node
build the options panel
expands the tree
returns the value of the edit option type
returns the path of the tree
returns true if the depth view is enabled
the
add the tree to the tree
switch to the library
returns the name of the column at code column index code
returns the width of the specified column
switch to the user directory
returns the money at the specified row and column
returns the work sheet at the given index
returns whether or not the file is a file or directory
adds a file view to the list
returns the root node of the tree
get the selected file
returns true if the node is compact
sets the enabled state of the button
returns the selected file view
this method initializes this
shows the open dialog
expands the given object
shows the save dialog
returns the list of all nodes in the given
returns the title of the document
show the dialog
returns the name of the column at code column index code
returns the width of the specified column
returns the nodes with the given objects
returns the money at the specified row and column
deletes the selected button
returns the selected option
sets the value of the spinner
returns the current month editor
create a new instance of this split pane
creates the popup button
returns the parent node of this node
returns the number field
creates a dhcp option
add a remote option
this method initializes x label
adds a option to the list
refresh the buttons
returns the work sheet
p set the code tags code property
returns the value field
this method initializes j label
sets the state of the tree
returns the value field
returns the status bar
fires a tree node changed event
sets the status of this object
this method initializes equal label
returns the text field for the title
adds an code action listener code to this action
adds a listener to the event handler
returns the tooltip for the given node
returns the option
called when the event is occured
returns the value field
this method initializes money editor
returns the
returns the field
sets the discount or flag
sets the icon to the text value
returns the
returns the number field
returns the value of the code or code property
returns the string representation of this object
refreshes the structure of the structure
discount for the
creates the components
returns true if the root element is shown
returns the number of selected states
refresh the tree
returns whether the depth view is enabled
changes the content of the viewport
set the height of the panel
returns the maximum preview of the search results
updates the title of the frame
show the tree
sets the work sheet
expand the tree
the button
transfers the options action to the
refresh the tree
returns the opened icon
returns the icon for the closed icon
returns the leaf icon
initializes the panel
returns true if the current card is highlighted
returns true if the node is locked
creates the control panel
returns the title of the chart
this method initializes menu
generates a label for a pie section section
sets the current node
sets the title
adds a listener to the timer
fire an action event
sets the preview percentage
wait for the next button to be read
initialize the
clean all the variables
sets the editable mode
sets the editable flag
refreshes the text
stops editing of the current editor
called when the user has been cancelled
refreshes the text
stop editing and remove it
returns the currency of the currency
set the dimension of the
sets the selected currency
returns the index of the currency of the specified currency code
refresh the display
save the selected item
returns true if the is on parent
this method is called when the demo is being removed
changes the icon of the icon
returns the
returns the list of
returns the number of child nodes of this node
returns the value associated with the given key
returns the tree node for the given node
sets the value of the property
returns the default value for the specified key
returns the index of the current position in the list
returns the child at the specified index
adds a child to this node
returns the parent of this object
compares this object to the specified object
returns the selected
adds a component to this component
adds a component to this component
sets the value of the attribute
adds a component to the component
sets the position of the player
adds a new tab to the tabbed pane
adds a new tab to the tab
returns the of the tree view
returns the selected component
returns the selected index
returns true if the drag is ongoing accept the default
sets the current ui
returns whether the center of the center on open
sets whether the center of this object is open
returns the number of tabs
returns true if the given node is dropped
sets the parameter key
inserts a new tab at the given index
returns true if the exit is currently on exit
checks if the is
sets the initial bounds of the component
removes the component at the specified index
removes the tab at the specified index
returns the internal display
called when the current lock is locked
returns the internal display viewer
sets the step to the next step
removes all the components from the tab panel
sets the info of this user
checks if the current selection is a
sets the icon at the specified index
sets the icon to be used for the given icon
refresh the panel
set the text
this method is called when the menu item is resized
initializes the component
sets the selected component
returns true if the radio button is checked
sets the selected index
this method initializes this
returns true if the radio button is checked
sets the title at the given index
handles the click event of the hyperlink
sets the url to the given url
returns the icon for the opened
initializes the pane
returns the inputstream for the given url
returns the icon for the closed icon
close all windows
returns the icon for the leaf
returns true if the file is done
returns a list of all registered frames
the
sets the number of characters in the digit
runs the application
compare the dst node with the given node
called when the user clicks the mouse button
sets the text of the text field
go to the home directory
sets the content of the jeditor pane
returns the text of the first occurrence of the text
maximize frame
returns the double value of this field
sets the title of this window
minimize the internal frame
returns the integer value of the field
checks if the scroll pane is
sets the column name
description of the method
sets the visibility of this frame
set the distribution monitor
adds a panel to the panel
adds a component to the focus
sets the selected panel
called when the popup button is clicked
removes the panel
removes the panel at the specified index
removes all the items from the view
refreshes the component
adds an code action listener code to the code jbutton code
returns the value of the specified currency code
returns the previous object in the list
returns the next object in the queue
acquires the permit
saves the file to the save action
returns the number of permits
decrements the number of permits
releases this semaphore resources held by this semaphore
copies the value of the given object into this
returns the selected panel
try acquire an attempt to acquire the semaphore
gets the value of the property
sets whether or not the selection is visible
sets whether the selection should be automatically selected
paints the border for the specified component with the
returns the insets of the border
puts a key value pair into the map
removes the entry at the specified index
reinitialize the insets parameter with this borders current insets
removes the entry at the specified key
checks if the given pair exists in the
returns the maximum value of the
this method returns the index of the pair of the given pair
returns the value of the given key in the array
sets the language of the current language
returns the object at the given key
set the text of the text component
returns the ordered map of the given objects
sets the tool tip for the jmeter component
returns the value of the last lower key
creates a new file
cancel the current file
returns the value of the given key
saves the default currency to the default currency
starts the
returns the first value of the first element in the
stops the timer
returns the left list of objects that are not
saves the map to the disk
returns the value of the specified key in the map
registers a tooltip for the given key
returns the list of all the objects that are currently in the
returns the key at the specified index
registers a tooltip to be used for the given field
returns the value at the specified index
returns the value of the given currency
register a new object to the list
returns the value of the code ordered map code property
returns the value of the given string
register a new object to the registry
this method is called when the user changes the simulation
returns a string representation of this object
sets the value of the given currency
returns the number of in the given object
registers the given object to be notified of the supplemental
converts the current to a
returns a copy of this map with the same size as copy
returns the list of available language language
adds a change listener to the list of listeners
sets the high light colors
notify all listeners that the currency has been changed
this method is called when the user has been saved
returns the of the
returns a list of
checks if the file is a passphrase
called when the user selects the
adds a listener to the tree
returns the selected
shows a dialog box with the given message
sets the array of
sets the trees list
sets the selected
set the major component for the class
returns a new instance of a
returns a copy of this object
returns the major component of this component
this method registers a listener for the desktop
this method is called when the user selects a frame
sets the grade exponent
returns the tree widget
this method initializes tree
returns the grade grade value
this method adds a desktop desktop desktop manager to the desktop
returns the of the
gets the value of the property
fills the with the given proposition
output the information about the
returns the control panel
p displays the given message in the phase
returns the secondary split
test of add data method
test method for
clean up the mess
notify the that a template has been added
puts an item into the tree
adds a jasper field to the project
adds a report field to the report
returns the table model for this object
returns the number of fields in this list
returns the report
initializes the working space
returns the fields of this class
returns the base name of the ith field
adds jasper field to the list of properties
returns the jasper fields
adds a report field to the report table
this method is called when the model is frozen
adds a row to the table
adds a new value to the application
adds a translated string to the list
print the report
returns the control server
sets the unit test
returns the name of the file
checks whether the given template is available
adds a listener to the list of listeners
produce a report of the tree
sets the parameter of the parameter
removes a listener from the list of listeners
adds a title to the list
notify all listeners that a source template has been raised
adds a new item to the list
generates the indent string for the given level
notify all listeners that a compilation template has been completed
returns the destination tree
returns the data source
consumes the given node
generates the technical information distribution for the given node
returns the current level
visit all subnodes of the node
format the number of bytes in the section
this method initializes stop button
generates the section number for the given section
returns the event manager
compute the toc for the given explorer
returns the section number of the given node
returns the section number for the given section
returns the space in the string buffer
increments the counter
notify the stats about the report that it has been added
returns the number of reports
adds a node to the end of the list
adds a new node to the list of titles
this method initializes continue button
returns the section number
returns the section number
brings the cursor to the active page
interface for extended interface
handles the click event of the hyperlink
show the report
this method initializes progress bar
show the tree
launches the console
this method initializes chooser
this method is called when the is set
loads the file
set the selected
returns the file view for the given extension
set the selected
creates a new file
adds a file view to the list
loads the simulation
loads the simulation
checks if the target is near the given point
returns the selected file view
this method is called when the is about to start
loads the gold from the file
insert a new head encoder
loads the gold from the file
insert a new data encoder object in the database
count the number of occurrences of the specified value
returns the percent of the
sets the name of the table to a given name
commit the transaction
removes all files from the list
returns a string representation of this object
returns the name of the file
returns the name of the specified column
insert a file
insert a file into the list
insert a list of files
remove a file from the list
remove a file from the list
remove all the files from the list
launch the update
writes the current data to the specified output stream
returns true if the radio button is checked
sets the selected state of the button
sets the checked state of this item
sets the selected state of the checkbox
propagate the selection to the tree
returns the icon for the given icon
saves the current file to the saved save
returns true if this node is an object
sets whether to expand or not to the
returns the index of the child of this node
adds a child to this node
returns true if this node is a leaf
returns the depth of the tree
returns true if the node is an ancestor of the given node
returns the opened icon
returns the closed icon
returns the leaf icon
sets the background color of the icons
returns true if this is an icon
recalculate the height of the
sets the background color of the text
adds a listener for tree model events
sets the foreground color of the node
removes a listener previously added with
description of the method
p fire a tree nodes inserted tree nodes
returns the label for this label
description of the method
this method is tree structure changed
returns the child of code parent code at index code index code
returns the number of children of parent
returns the index of child in parent
selects a node in the tree
returns true if the specified node is a leaf
returns the children of this node
returns the child at the specified index
returns the index of the immediate parent element
adds a child to this node
sets the parent of this node
removes the node from the list
sets the value of the receiver
moves the current position to the destination position
sets the user object of the user object
selects the nodes in the tree
returns true if the drag is acceptable
accept the drop operation
returns true if this is a
returns the current state of the receiver
checks if the current state is a valid state
returns true if this object is equal to another
selects the nodes in the tree
creates a new button action performed when the button is pressed
set the tree model to use for the tree
called when compact tree is selected
returns the path to the specified node
sets the ui
creates the window
returns the selected objects in the list
returns the selected multiple rows in the list
show the dialog
returns the currently selected node
creates a component that wraps the title
returns the selected object
expands the tree
tree selection listener
collapse the tree
returns a path to the target directory
checks if the tree is showing
sets whether the panel should be checked or not
returns whether or not this is a check for check
returns the closest ancestor node of the point
this will notify all listeners that have a structure changed with the
notify all listeners that have registered interest for
returns the bounds of the station
sets the station to the given station
returns true if the station is expanded
returns the expanded children of the given stations
expand the station
collapse a triangle
collapse triangle triangle
expands all nodes in the tree
expands the node from the path to the station
returns the tooltip text for the mouse event
enables the tooltip for the tooltips
sets the high light colors
returns the config property for the given key
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
generate a random chord
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated setter method
auto generated setter method
sets the status changed response value for this
auto generated setter method
auto generated setter method
auto generated method setter method for the the property status end value
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
sets the mood value for this
auto generated setter method
sets the place is value for this lon
sets the time offset value for this offer summary
auto generated setter method
sets the status icon value for this offer summary
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
sets the video value for this
auto generated setter method
sets the text value for this lon
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
sets the relationship value for this
sets the value for null
auto generated setter method
set the value for
validate the value for this field
auto generated setter method
set the value related to the column changed attributes
auto generated setter method
auto generated setter method
add an prerequisite
auto generated setter method
set the value for this notification
validate the value for this code uniqueness email code property
auto generated setter method
auto generated setter method
this method sets the value of the array value for this
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
validate the array for variables
auto generated setter method
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
create an instance of
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
validate the array for privacy types
auto generated setter method
auto generated add method for the array for convenience
gets the media object
auto generated setter method
auto generated getter method
auto generated setter method
validate intervals in the standard deviation
auto generated setter method
auto generated getter method
auto generated add method for the array for convenience
auto generated setter method
gets the value of the call status property
auto generated setter method
gets the value of the call status info property
auto generated setter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
validate the array for media info
auto generated setter method
auto generated add method for the array for convenience
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
gets the value of the call call session information property
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
validate the array for topic participants equals
auto generated setter method
auto generated setter method
validate the array for
auto generated setter method
auto generated setter method
validate the array for called set method names
auto generated setter method
auto generated add method for the array for convenience
validate the array for caller identities
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
gets the value of the get call information property
auto generated setter method
returns the end call session
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
create an instance of
auto generated setter method
auto generated getter method
auto generated setter method
validate the array for call participant information
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
validate the array for primary
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
validate the array for attributes
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
gets the value of the mood property
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
validate the array for result
auto generated setter method
auto generated add method for the array for convenience
validate the array for primary equals
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
reverse the given string and reverse it
extracts the given string from the given description
translates a string to a translated string
translate the translated string into a translated triplet
check if the given letter is a valid validity
checks if the given string is a valid validity
saves the current project
stores the given code code
set the action to be used for the action
this method is called upon plug in activation
handles selection changed events
this method is called when the plug in is stopped
shows the dialog
returns the list of all the servers
handles selection changed events
updates the action bar view
runs the server
returns an image descriptor for the given id
show the dialog
ask the user to enter a password
process the extensions of the extension
add a new server to the list of server side listeners
called when the connection is about to close
called when the user tries to close a connection
connect to the server
called after the given object is removed from the server
this method is called when the user changes the page to be
disconnects the connection from the server
adding the page to the wizard
this method is called when finish button is pressed in
called when the user changes the tree node
called when the node has changed
called when the node has changed
called when the children of the node has changed
returns true if the list is empty
adds a listener to the list of listeners
removes a listener from this model
returns true if the label is empty
returns the label of the connection
returns the target folder
removes a listener from the list of listeners
returns the target node
invoked when the user attempts to focus the focus
refresh the connection to a remote device
returns the target node
closes all open connections
returns the path name of the parent directory
returns the number of children of this node
returns the image of the uml image
returns the file extension of the file
returns the file type description of the image
returns the root node of the tree
puts a key value pair into the cache
tests the
assemble the query string and return the sql query suffix
prepares the product
prepares the item to be displayed in the given product
checks if the user is a security
returns the map with the specified id
returns the id of the map
returns true if the given object is a valid object
reset the factory
compares the specified object with this code dialog state code
returns the hash code of the dialog
clones the session description
set the attribute fields
returns a list of emails
sets the bandwidth of the rtp data
set emails
get the phones list from the phone
sets the current phone
sets the attributes
returns a vector containing the time descriptions of the time
sets the time descriptions
returns the mime types of the media
returns a vector containing the two values of the zone
get the mime parameters of the current request
set the zone adjustment
get the bandwidth of the
sets the bandwidth of the rtp device
add a to this list
returns the attributes of the node
set the attributes of this object
returns the current number of packets in the current session
returns the current version of the
returns a vector containing the media descriptions
sets the current user id
sets the version
sets the current version
returns the string representation of the object
sets the repeat times
parses the current field session name and returns it
encode the body as a string
encode the body of this body
set the call id
returns the value of the parameter
sets the to tag
returns the parameter name
sets the parameter to the given tag
this method is used to encode the body of this object
this method is called when the body is encoded
returns a list iterator of all the methods
encodes the string and returns a string representation
encodes the body as a string
sets the cause of this exception to the specified value
encode the body as a string
p encodes the body of this body
writes the body as a string buffer
sets the product list
creates a copy of this object
adds all of the elements in the specified collection to this collection
inserts all of the elements in the specified collection into this
returns an iterator over all of the methods
p return the buffer representation of the buffer
sets the alert info attribute of the object
sets the value of the parameter
sets the value of a parameter
sets the value of a parameter
gets the value of parameter name
this method is used to set the parameter
returns the parameter
for the
returns the uri of the
returns the
removes the specified from the list
returns the parameter associated with the request
removes the given parameter from the list of
set the security mechanism
sets the encryption algorithm
sets the algorithm
sets the
sets the protocol
sets the token value
set the parameter
gets the value of the property
set the parameter to the given value
sets the parameter to the given value
sets the port number
set the port to the given port
set the coefficient
gets the security mechanism
returns the encryption algorithm name
this method is used to encode the body of this
sets the charging collection function address
adds a new address to the list of
remove a address function
set the address of the address
adds a function address to the
remove an address event from the
removes the parameter with the given name from this
sets the language tag
returns the uri of the image
sets the uri of the
creates a new
returns the authentication parameters
returns the hop
set the parameter value
returns a object that contains the given
returns a list of all the messages in the message
encodes the content of the header into a string
returns the
returns the hash code for this object
this method is used to set the uri parameters
returns the header at the specified name
clears the list of
sets the post dial
sets a new value for the specified parameter
returns the content type header
returns the error info header
returns a list of all the messages that are strings
returns the contact headers
add an object to the collection
returns the destinations that are associated with this
parses the
parses the
parse the content of this element
remove the header from the list
returns the authorization header
sets the default value of the named parameter
parse the
returns the route headers
parse the
sets the value of the code parameter code property
returns the name of the parameter value or the
set the value of the sif host address to the given host
sets the user parameter to the given value
sets the method
parses the name of the
returns the record route route handler
parses the given header
returns an iterator over the names of the names of the
returns a string representation of this thread
set the value of the named property
compares this object with the other object
returns the value of the named property
returns the content of the message
returns the name value of the given name
delete the attribute
returns the number of elements in this collection
returns true if the queue is empty
returns an iterator over the values of this collection
returns an iterator over the names of the names
returns a shallow copy of this list
this method is called by the native constructors to ensure that
returns the content of the message
sets the header with the specified name and value
returns a vector of strings representing the lines of the vector
returns the next token skipping whitespace or
peek at the next token
set the value of a parameter
computes the content length of the header
sets the transport parameter
parses a string and returns the next character
returns the string representation of the given character as string
returns an iterator over all the headers in the specified header
parses the number of characters in the given code string code
returns the header as a string
returns true if the command is a multipart request
process a message
returns the state of the given set of state
send a message to the server
checks if the header contains the header for the given name
create a new context
returns true if the packet is a packet
checks if the message is
gets the value for this
gets the value for this
sets the value for this ctrc averbar
adds a service to the location resolver
returns a object for the given
returns a object for the given
add a key to the list
add a key to the list
remove a key from the list
returns the relation info for the given key
remove a key from the list
adds a relation info to the cache
removes the relation info
removes the relation info object
returns the info object associated with the given key
remove the key from the list
returns the relation info for the given relation name
returns the relation info for the given relation name
the message
the message
this method is called when the is removed
transmit the timestamp
the
the
the
the
the
handle the incoming message
sets the state of the
the
this method is called when the is set
the
transmit the timestamp stamp
sets the state of the
the
the
returns a list iterator of the headers
the current time stamp
sets the state of the
the message
the message
the
transmit the to the transmit
transmit the timestamp stamp
compares this receiver with another one
sets the state of the
sets the state of the
sets the state of the
returns the key for the given
this method returns the object
the transaction
returns the
the
return the current value of the header
returns the transaction controller for the given transaction
stops the thread
runs the thread
returns the protocol number
returns the host name of the host
sets the location resolver
returns true if the protocol is oriented connection
returns a hash code value for this host
returns a string representation of this object
returns the peer location of the specified envelope
sets the outbound proxy server
sends a message to the envelope
gets the value of the from property
gets the send to
sets the from
sets the send to
returns the xmpp message
send a new thread to the server
method that cant not be called more
gets the record route list
returns true if the route is a route
returns the command method
sets the command method
returns true if the is
gets the value of the ua class property
set the value of ua
returns the name of the job command
sets the name of the job command
returns the result code
sets the result code
returns the protocol for the given protocol
binds a new transport connector to the given address
adds a new router to the repository
returns the local address
returns the local port to which this socket is bound
returns the
returns the name of the
called when the user is being created
this method is used to handle the incoming message
the
registers a new gadget
returns the host name
set the flag that indicates whether or not the mode is going
leave this node
leave this node
gets the local address to which the socket is bound
check if a group is joined to a given group
leave group with the given key
calculates the azimuth of the given geo point
returns the distance between two points
returns the anchor point for the given point
this method is used to put a value into the cache
this method is used to put the value into the channel map
sets the of the routing to the given keys
sets the interval between the and the
set the time interval between the splash screen and the
return the value of the code code property
this method is called when the activity is a
sends a message to the server
process a message
removes the routing node from the routing context
returns the k finger table
inserts a new entry into the cache
returns the head element of the queue
count the number of different entries
forget the given node
schedules the specified runnable to be used for the
schedules a new to be fixed rate at the time
cancels the task
deletes a mapping from the given mapping
delete a mapping from the given device
sets the source of this
set the access controller
accepts socket and return the socket
returns the tag
returns the id of the
discards the table
returns the hash code of this object
runs the thread
returns the nth shifted shifted
returns the nth shifted
returns the bit of the given bit
shift left n sup n
removes a bit from the bit set
returns the n shifted left right or right n
returns the bit value of the given bit
removes all bits from this bit set
returns a string representation of the given number of digits
returns a string representation of the given number of digits
bind the binding to the local port
sets the tile to be used for the given tile
returns the tile at the specified position
this method is called when the tiles of the tile is disconnected
draws the specified applet
lookup the name of the specified object
starts the worker thread
returns the current position of the current cursor
initialize the cache
this method is used to parse the file list
extract a filename from a url
extract a filename from a url
returns an iterator of jar files
check if the command is valid
returns the main message for the given html
returns the message associated with the given email
this method is used to print the warning message
sorts the
this method is used to display the info of the
returns the parser that contains the given id
adds a header to the header
adds a subject to this subject
this method is used to print the xml of the parsers
add an attachment to this message
sorts the parser
convert a boolean to a boolean
runs the command
converts a double to a double
converts a string to a float
adds a new message to the header
converts a string to a integer
returns the last added email
find a vertex with the given object
find a vertex with the given id
adds a new person to the join
find a vertex with the given index
adds a subject to the subject
adds a new static part to the set of
adds a new info to the vertex
adds a new info info to the vertex
adds a new edge to the graph
adds a word to the vertex set
adds a word to the vertex
this method is used to extract the categories from the
gets the section
sets the category activation emails
returns the unique id for this component
adds a new to the vertex neighbor
calculates the sum of the score values for the given
normalizes the score of the curve
the main method for the file
sets the state of the vertex to the vertices
this method starts the graph
returns the mbox priority for the specified priority
sets the leaf vertices and sets the vertices of the vertices
parse the word score
returns the number of incident edges of the given edge
the given jsonobject
adds a new email to the list
prints the statistic statistic information
find the next name
removes all the words from the given string
checks if the given word is a email address
read the file from the file
finds the run of a message in the group
removes the static parts from the list of empty parts
removes the tags from the text
counts the number of lines in the given string
add a file type to the list
save the headers to the given filename
update the index of the
this method is used to set the indexes of the given indexes
returns a string representation of this note
returns a string representation of the note
returns a string representation of this exception
returns the pos number of the current position
returns the position of the end point
returns a string representation of the synthesis note
get the idx th value
sets the value of the idx th element
returns true if the queue is empty
adds a listener to the change
show the note
adds a regular expression to the text box
remove a regex
called when the user changes the outline
called when the widget is focus
called when the user clicks the paging right
loads the notes from a notes set
returns the index of the note in the note
get the first day of the month
get the last day in the month
this method is called when the test is executed
gets the today date
get the time of the cache entry
sets the selected first month
gets the value of the email part id property
sets the email part id
sets the email messages
called when an exception occurs
this is the entry point method
reset the date format to the date format
sets the date format
returns the date format
sets the date format timezone
returns the date format time zone
sets the time format cache time
returns the time zone cache time
reset the date format to the date format
description of the method
read the non blocking process
writes the non blocking message to the output stream
reads blocking and wait for the
executes a command
execute a command
write the blocking blocking until it is not blocking
execute the given command
sets the ending line ending for the line
wait for a process to be read
execute a command
execute a command
wait for the readers to be read
execute a command
execute the command
waits for the input to be written to the writer
checks if the process is still alive
terminate the process
execute the command
execute the command
waits for the next stream to read
reset the parameters
waits for this node to be read
write out the current line
sets the dtd dtd
write the stream to the stream
end of element
start a new element
sets the q
returns the feature class
returns the alternate names
returns the hash code for this peer
returns a string representation of this peer
returns the peer that is used to connect to this peer
returns the current sender of the sender
register a new object to the registry
unregisters the object from the database
dispatches the given code sender code to the given
finalize the garbage collection
returns the data source
returns the number of database tables in this database
returns whether or not the field name is used
refresh the data from the data source
sets the data source
sets the field number of the database field
setter for property db db
returns the size of the content
sets whether to use the field name
returns true if empty entries are empty
write the data to the data
returns whether or not the table is use
sets the add empty empty
sets the field number of the database field
insert the methods description here
sets the selected item
set whether to use all columns that are used
set the use field name
writes the sql data to the database
executes a query against the given query
executes the sql query
returns the db connection
insert the methods description here
setter for property db password
insert the methods description here
returns the column at the specified index
refresh the data from the data source
returns the number of columns in the table
returns the name of the column at code column index code
writes the data to the database
deletes the selected rows from the table
returns true if the row is valid
returns the class of the specified column
moves the cursor to the next row in the result set
returns the number of columns in the model
adds a new object to the list
sets the value of the column
returns the name of the column at code column index code
sets the value of the column with the given name
executes the query
sets the row is valid flag
returns the number of rows in the model
returns the database connection
returns true if the cell at the given position and column is
moves the cursor to the next row in this result set object
execute the query
returns whether the table is read only
refreshes the bound durations
refresh the data
removes the specified object from the list
sets the column names value for this describe sobject result
the query
sets the database connection to the given database
setter for property data vector
setter for property default query
sets whether the table should read only
writes the data to the current database
returns the value of the config value
handles a invalid
sets the games to be played
returns true if this is a echo
returns the selected game
stores the memory in the memory
stores the given memory in memory
handles a event
redraw the screen
causes the current window to be redrawn
executes the current selection
expect a prompt to prompt the user to prompt the user
writes a to the output stream
copies the current screen to the current screen
causes the entire screen to be redrawn
activates the widget
add a widget to the list
moves the given widget to the top of the list
remove the widget from the widget
moves the current top level to top
handles the of the given
destroy the widget
sets the screen
test driver
sets the x size
draws a text
returns the extension filter
draws a box
sets the y size of the y axis
draws the border around the given graphics
draws the cursor
sets the extension filter
inserts a new buffer at the specified position
insert a contiguous range of bytes in the buffer
returns the file type name
returns the number of in the
returns the input input
sets the file type name
draws a text
draws a box
draws the border around the given graphics
draws the cursor
sets the file selection mode
returns the key of the
writes the contents of the buffer to the output stream
writes the contents of the buffer to the output stream
return a string with the given number of times
copies the current screen to the current screen
returns whether the run is already already in the run
initialize the
initialize the
draws a box
this method is used to set the state of the
executes the prompt
execute the thread
executes the debug command
draws the cursor
executes the command
returns the variable with the given name
initializes the script
runs the script
sets the value of the property
initializes the output stream
sets the
returns true if the connection is still alive
initialize the
sets the for value for this
converts a value into a string
this method is called when the file is deserialized
translate sector to a physical number
translate the logical sector to the given sector
opens the disk image
set the sector of the track
verify that the file is not already found
executes the command
write a raw data
checks if the given sector matches the given sector
this is the entry point method
add a file marker to the marker
returns the package to the given value
returns the current tag
returns the attribute that is being used
returns the current offset of the end of the current position
generate the xml file
generate the source file and generate the source
translate the given xpath expression
returns the element that is being used to create the
returns the node that is the root element of the given element
returns true if the tree contains invalid nodes
returns the type description of the type of the
returns the description of the type of the data
returns an iterator over the data types
generates the data model
returns the name of the data type
writes the given file to the file
checks if the type description is a type description
checks if the data type has a data type
sets the type declaration
returns the current time as a string
returns the description of the attribute
returns the string filled in the given number
returns an iterator over the example all the
returns the description of the main frame
returns the name of the attribute
returns the description of the element
returns the name of the referenced element
returns true if this description has a description
checks if the parameter is a examples
is the resource type
returns an iterator of the attribute declarations
is this field a required attribute
returns an iterator over all group references contained in this group
returns true if the attribute is unique
returns the front message start
returns the name of the target
returns the name of the element
returns the author of this exception
returns the path to the file
returns the current time
returns the description of the main window
returns the name of the element referenced by this element
returns the root element name
returns true if the author has author
returns true if the description of the main description has been defined
returns an iterator of the elements in this list
checks if this element has attributes
returns true if this element has children
returns true if the description has the description
returns the model file
returns the root class
returns true if the package name is a package
writes the contents of the file to the given file
returns true if the file is root element
writes the document to a file
create a reference to a string
create a key
configure the
generate the xml file
generates the documentation generator for the documentation
generate the source file and store the xml schema
generate the file
display the result set
shuts down the database system
handles an exception
pops up the popup window
closes the connection
sets the phase of the game
returns a string representation of this object
description of the method
initializes the plug in
returns a string representation of this object
this method is used to set the of the
returns the user session with the given user
sets the proxy configuration
sets the proxy authentication configuration
checks if the http method is a post method
removes the user authorization from the roster
this method is called when the user is a cookie
stores the http servlet request
stores the http servlet request to the servlet
retrieve the request id from the request
retrieve the request attribute
remove a session from the database
returns the last visited code count code
returns the cookie with the given name
returns the value of the specified http request
encode the password of the given password
imports the given text from the text
get the id of the product sys id
get the id of the store for the request
get the beta parameter
get the category id for the product category
get the category for the website
this method is called by the webpage to set the site
deletes the sites delegated to the given
show the store or company
adds a sequence to the list
set the sequence at the given index
removes gaps from the sequence
deletes the columns from the table
this method is called when the dialog is dismissed
returns the description of the action
accept all directories and all of the files
sends a message to the log
updates the progress of the progress bar
dispatches the event to the event
returns the book title
returns a string representation of this format
returns the console option
returns true if the command line is a
returns true if the command line is a
returns true if the message is a command line
returns the behavior of the wakeup
returns the option
returns the id of the command
returns the user name
returns the barcode
gets the pin pin value
get the server
gets the email address of the mail
returns the interval of the day interval
returns the time interval
test method for
sets the velocity engine
requests the user to the given password
initialize the service
authenticate to the user
reset the user password
sets the authentication credentials
create a new token
returns the item with the given id
adds a label to the
sets the control that is used to fill the bounds of the
returns the selected tab
returns the selected index
sets the amount that the receivers value will be
sets the selection in the receiver
sets the selection to the given tab
selects the item at the given zero relative index in the receiver
sets the receivers selection background color to the color specified
sets the receivers selection background color to the argument
sets whether the shape is a simple or room
returns the string representation of this object
returns the file that is being served
returns a string representation of this object
returns the loader used to create the test suite
pipes the current context to the destroy pipe
wait until the connection is finished
returns the response header for the given key
sends a string to the server
disposes the toolkits object that is used to execute the exec
disposes the runnable object
sets the system property with the given name
returns the system property for the given name
adds a result to the package
returns an iterator over the package names
returns the number of items in the package
returns the number of the package that contains the given
writes the result of a file to the output stream
returns the index of the given result set
adds a result to the list
returns an iterator over the class names
returns the result of the given name
returns the result of the given name
returns the number of all the classes in this collection
checks if the given print writer is a
returns the number of the checked state
returns the index of the first occurrence of the given result
sorts the classes
adds a test result to the test result
returns an iterator over the test results
returns the number of all the test cases
returns the number of tests in the result set
prints a text
returns true if the request is passed to the server
returns an iterator over the elements in this collection
returns the number of in the collection
returns the check point
returns the number of the checked state
prints out the tag out of the given tag
returns the actual actual actual actual actual actual actual actual string
returns the expected expected result
writes the given tag to the output writer
returns the log
append the print writer to the print writer
prints out the current line in the list
returns the project to which the given path is not a
returns the name of the getter
returns the setter for the name
persists the given object to the database
returns the
sets the
get a connection from the database
returns a child
this method is used to populate the map of values in the
returns the map with the specified name
initializes the component
checks if the mouse is over the text area
returns the course of the course
adds an element to the list
removes the first occurrence in this code list code
add a relationship between two given relationships
add a new relationship between two employees and b
add a new relationship between two course
checks if the given modelelement is a son
add a son to the list
saves the current to a file
close the course and all its components
exports the project to a new project
create a course
creates a course
creates a new chapter
creates a topic
creates a topic
creates a quiz
adds a to the list of
returns the element id of the element at the given index
set the correct
writes the document to the given output
writes the xml file to the given file
writes the xml file to the given file
returns the mof representation of this object
returns the mof representation of this object
returns the color black color
returns the white
sets the enabled status of the
gets the message holder attribute of the kick
initialize the applet
starts the applet
displays the tree
sets the in reply to
sets the date
set the level
sets the subject of the
sets the message to be sent to the message
sets the author of the author
sets the author email
sets the url of the
sets the url to the url
returns the list of replies to the list of replies
returns the number of replies to the
returns the date
returns the level
returns the number of lines in the list
returns the number of bytes in the
returns the subject of the subject
returns the message
returns the message as a formatted string
returns the author of this item
returns the author email
get the
get the url of the link
adds a new reference to the replies
creates a view
returns an enumeration of all users
returns the user with the given login
returns the url of the element
returns the user file name
checks if the user is in a list
checks if the given user is in the list
sets the enabled state of the
main processing method for the runnable object
set the message
returns true if the response is enabled
sets the login of the user
sets the email
returns the login
sets the level
sets the message
returns the cookie string
returns the minimum size of the component
returns the preferred size of this component
returns the maximum size of the component
sets whether or not the button is enabled
sets the tree model for the tree
returns true if the button is enabled
gets the author class of the given author
sets the user
prints a message to the given message
this method gets the tree
get the message from the message table
get a node from the current message
adds a message to the message
sets whether the data has been read
returns the message reference
returns true if the receiver is a leaf
returns true if the node is a leaf
returns a message from the pop3 server
returns the number of pages in the forum
returns the maximum index of the current object
returns true if this node is a miss
destroy the
returns the date format
returns the headers of the request
returns the image text
returns the text for post button text
returns the text to be displayed when the cancel button is pressed
returns the author text
main thread loop
returns the email address of the author of the email
get the
returns the id of the
get the message for the given message folder
returns the tip text for this property
returns the subject text
get the
returns the message text
returns the tip text for this property
returns the tip text for this property
returns the text expanded
returns the text that is displayed when the loading of the text
returns the view factory
creates a new image
verify that the input image is in the correct format
post the test case
checks if the token is a valid token
checks if the given byte array is valid
create a new address with the specified address
asserts that two ints are equal
initialize the private key
creates a public key for the signature
returns the file to be used for the file
returns the secure message
asserts that two bytes are equal
returns the secure message callback
compare two bytes
test
asserts that two bytes are equal
compare two bytes
test the secure method
test the method that is not a stub
test that secure method is public
a unit test for junit
sets the value of the given code file code
sets the value of the file
sets the value of the field
fires a setting event to all registered listeners
fires a setting event to all listeners
sets the value of the field
adds a new settings group to the list
reloads the properties
saves the properties to the properties file
if the user wants to revert the properties to the default value
sets whether to save the properties of the properties file
returns the default properties
executes the runnable object
sets the executor to use
fires the settings to the listeners
fires the settings to the listeners
normalizes the value of the field
sets the value of the property
reloads the event
sets the value of the field
saves the current settings to the file
load the value from the given string
reverts to default values
sets the value of the field
sets the value of the field
sets the value of the field
returns the setting of the setting
returns the settings manager
returns the group of the group
sets the value of the color
compares the password and password
initializes the algorithm with the given algorithm
this method is called when the user interface is read
returns true if the socket is connected to the server
transfer the data to the data source
allocate the cache
release the cache
shuts down the
this method is called when the
write the current chain to the file
asserts that two objects are equal
returns the port number of the connection
returns the local address to which this socket is connected
asserts that two objects are not equal
returns true if the is
starts the server
get the channel for the given port number
sends a message to the socket
returns the number of
returns the base channel read
returns the base write channel
sets the timeout for this
returns the time the timeout is dead
gets the local address to which the socket is bound
get the number of used spots in the
clears the low level of a block
returns the lowest block of the block
get the readable block
sets the connection id
returns the number of in the window
returns the address of the socket
returns the read window
check if the connection is ready to be established
returns whether the data is ready to be read
returns true if the channel is ready to be opened
wakes up the watchdog thread to send a delayed event to the
returns the maximum number of characters that this chunk
sends keepalive message to the tracker
assertes that actual is not equal to expected
compare two int values
handle the fin
asserts that two bytes are not equal
assert that two strings are not equal to expected
asserts that actual is not equal to expected
read an int from an input stream
asserts that the actual actual actual
writes an integer to the stream
returns the value of the named property
set the value of the named property
returns the net range
returns the of the server server
connect to the remote host
returns the number of allowed connections
asserts that the two floats are not equal
bind the bind socket to the local socket
the thread to run the thread
assert that two arrays are not equal
returns the number of connections that are allowed to connect to
release the connection
returns the port number of the server
returns the dispatcher
reads the socket
create a request to request that the specified request
this method is responsible for creating a object
remove all from the torrent
remove the tracker tracker from the list
returns the data of the given key
sets the value of the specified key
returns the default value for the given key
checks if the parameter contains the parameter
sets the value of the code parameter code no notify property
register a new transient parameter
removes a parameter from the list
returns the string associated with the given key
close the connection to the network
close the connection
checks if the piece has been completed
returns the object associated with the given key
sets the user data
removes a piece from the board
clears the buffer
this method is called when garbage collection
returns the average of the period
compares this code entry code to the specified object
compares this url with another
loads the
resets the to their initial values
updates the buffer
save the
description of the method
save the
resets the buffer to its initial state
updates the input buffer
updates the data in the data buffer
updates the data in the buffer
updates the buffer with the specified buffer
resets the sha1 hash
saves the hash state to the file
restores the hash state to the default state
returns the time of the time
loads the
initializes the applet
this method is called when the http www
log the event to the given log file
returns true if the given log file is a string buffer
returns the object associated with the specified key
sets the value of the user data
this method is called when the user selects the
this method is called when the player has been added to the
this method is called when the is removed
returns the
returns the object associated with the given key
sets the value of the data attribute
check interested in the event
returns the underlying cipher
tests if a specified file should be included in a file list
add a network filters to the list
adds a new peer connection to the list
remove a connection from the list
add a new entity to the list
remove a entity from the queue
returns the number of bytes available in the network
sets the encoder to write to the encoder
set the number of bytes used to read the bytes
set the rate of the sec
set the rate of the sec
ensures that the bucket is valid for the
returns the number of bytes available in the network
returns the percent done of current message
destroy the queue
set the decoder to use
returns the percent done of current message
resume the queue queue
registers a listener to be notified of queue events
marks the pre select time as the current time
adds a new peer connection to the list
removes a connection from the list
registers a listener to be notified of queue events
stops the server
returns true if the server is running
cancel the given request
stops the server
returns true if the server is running
set the transport mode for this transport
called when the
adds a new peer connection to the queue
removes a connection from the queue
closes the connection to the server
deregister a connection to the list
the connection to the pool
registers a connection to the database
listener for the connection to the server
this method will be called when the user selects a new item
ask the channel to deselect the given channel
cancels the specified channel
selects the consumer with the given timeout in the
creates a connection to the connection
cancels the incoming routing routing connection
add a new entity to the collection
removes the write entity
add a read entity to the cache
remove a read entity from the cache
returns the current result of the tester
stops the transfer processing
upgrade the
this method is called when a network transfer is received
returns the deltas to transfer deltas to
listener for routing events
saves the global limits of the application
returns the last result of the given type
restore the global for the current application
set the download details
listener for receiving messages
a listener for receiving connections
returns true if the is enabled
returns true if the is
writes the current messages to the destination
destroy the servlet
prints the given debug message
writes a debug message to the debug console
returns the context
sets the context
p complete the completed state
adds a peer to the peer
method that is connected to the table
returns the self peer
returns the next peer
update the helper helper
initialize the object
register a message type to the server
deregister a message type
returns the message with the given id
returns the maximum allowed allowed per
queue a message to the player
destroy the
adds a piece to the current clip
resets the timer to the next time
reset the limit to new limit
logs the limit of the logging channel
sets the new limit for the new upload limit
returns the multiplier for the
returns the tick value for the first occurrence of the specified
get the number of idle time in milliseconds
returns the message string as a string
returns true if the current state is a download mode
determine if the configuration is a conf
returns the value of the code long term code property
returns the average history
converts a number of bits per pixel to the index
convert a mesh number to a mesh
reset the point to the initial state
checks if the download is a ping or not
guess the quality upload limit
guess the number of download download
set the mode to the current state
returns the number of seconds in the current time
returns true if the is unlimited
determine if bandwidth is in the low sec
determine if bandwidth is in the limit of the bandwidth
checks if bandwidth is high buffering
calculate the size of the step
returns true if the configuration is a conf paper
returns true if the limit is a download confidence false
this method is called when the user ping the ping
set the maximum amount of agents in the ping time
returns true if the given download is a download
refresh the cache
this method is called when the user changes the
returns true if the current host is the first priority or not
sets the enclosure wrapper
calculate the number of in the torrent
returns the distance to the specified ip address
returns a string representation of this address
returns the size of the block
returns the message digest object that this object uses
write a byte to the socket
set the rate of the tick
returns the buffer
returns the block size
grows the buffer to accomodate the buffer
writes a byte to the buffer
reads the number of bytes from the buffer
returns the buffer for the specified length
test method for
write the channel to the specified buffer channel
adds a new state to the list
adds a list of states to the list
adds the given states to the list of states
close the channel
shuts down the connection
process the processing of the channel
adds a new state to the list of available states
adds a list of to this state machine
adds the given states to the current state
this method is called when the user is read
this method is called when the write is being written to the
shuts down the scheduler
sets the read channel
returns the read channel
sets the channel read of the
this method is called when the user interface has read the throttle
sets the object to be notified of the event
indicates whether bandwidth has been available
returns true if the door is open
requests bandwidth request to be sent
this method is called when the bandwidth has been initiated
get the write channel
sets the channel to write to the given channel
write the throttle to the throttle
writes the buffer to the socket
returns the write channel
sends the request to the socket
sets the channel to write to the channel
writes the buffer to the buffer
flushes the buffer
this method will automatically send bandwidth to throttle
requests the bandwidth request to be sent
set the shutdown observer
close the stream
this method will cause the bandwidth to be reused
deactivate the
process the
compares this object with the specified object for order
reads the bytes from the input stream
this method is called when the task is about to be started
shuts down the thread
go to the
returns the last failure cause
sends a to the server
returns true if the message is ignorable to be the
this method is called when the socket is being removed from the
initializes the socket
reads the next byte from the underlying stream
reads the bytes into the buffer
initializes the socket
waits for the socket
close the underlying stream
accept a connection
write a single byte
write a byte array to the buffer
handle the incoming channel
closes the handler
handles the observer
reads a byte from the buffer
creates a new client socket
interests the throttle listener
this method returns the number of the available
an output writer for the exception
release the amount of the amount of the release
increases the number of bytes per second
accepts a socket
this method will be called when the bandwidth has been resized
accept a new connection
starts the server
handles the observer
shuts down the connection
returns the buffer cache
returns the number of pending pending pending requests
returns the read timeout value
shutdown the observer
shuts down the socket and all the channel connections
registers a new attachment channel to the given channel
register a new attachment to the channel
test of forced flush method of class conexion buffer
add a new channel to the channel
registers an attachment to the channel
gets the selector for the given channel
tests the write method read only
test method for
test method for
registers a new selector
tests that the is increased
tests the cache and release the cache
remove the selector
returns the scheduled executor service
accept a new redirect
process the read event
write the given file to the stream
runs the pending task
this method is used to determine the of the given
close the given pending channel
runs the thread
test method for
called when the user presses the note
run the test
run a test case
inserts the given object into the list
returns the highest element in this priority queue
returns the smallest value
returns true if the tree contains the specified element
removes the first occurrence in this list of the specified element
adds an element to the list
copies all of the mappings from the specified map to this map
returns true if the specified value is a set of
returns the maximum number of elements in this list
adds an element to the map
set the value of the element at the specified position
removes the first occurrence of the list
returns a string representation of this code code
removes the newest event from the list
removes the element at the specified position in this list optional
returns the index of the last non zero index
returns the next element in the iteration
this method is called when the domain of the domain of the
this method returns the status of the
adds all elements in collection to this collection
returns the index of the first occurrence of the given object
initializes the buffer
returns the i th element of this buffer
adds an element to this list
removes the first occurrence in this list of the specified element
returns true if the object contains the specified object
returns true if the queue is full
returns the first element in this queue
returns the last element in this queue
adds a new entry to the list
checks if the data contains the data
removes an entry from the map
returns an iterator over all the elements in this collection
clears the history
returns true if the list contains the specified element
returns the key
returns the first value
returns the second object
returns the offset of the given node
puts all the values into the specified map
set the offset of the given node
this method is called when the node is removed
mark the given node as verified
puts a key value pair into the cache
returns the height of the node
removes the mapping for this key from this map if present
compares two strings
puts all the values into the cache
compares the file with the specified file
clears the cache
clears all the nodes
returns true if the receiver contains the specified key
inserts a key value pair into the map
removes the mapping for this key from this map if present
returns the value to which this map maps the specified key
removes the key from the trie
adds all of the elements in the specified collection to this set
returns the element at the current position
returns the last element in this sorted list
returns the first element in this sorted list
removes the first occurrence in this set if it is an element
returns the length of the range
advance the node to the next node
returns a string representation of this object
adds a new interval to the set
recursively prints the given node to the buffer
deletes the values from the given interval
returns the value of the code value code property
returns the first element in this collection
returns the last element in this range
sets the value of the value
removes the first occurrence in this label at the specified position
returns true if the queue is full
returns the first element of the list
this method is used to calculate the next node from the tree
returns a clone of this interval set
adds the given range to the list of intervals
removes the given range from the list of instances
compares the specified object with this code interval set code
this method is used to set the list of intervals for the
clears the tree
returns a string representation of this object
clears the contents of this object
increment the size of the
decrements the size of the counter
increments the mod count
test the fixed size
tests the method
tests the creation of a collection
returns the value to which this trie is bound
tests the method
check that the constructor is set correctly
test random order
returns true if the key is contained in the hashtable
returns true if the object contains the value for the specified object
removes the key from this trie if it exists and
removes an entry from the list
removes the given entry from the trie
returns the public key
returns a string representation of this object
this method is called when the user presses the
this method is called when the is removed from the database
returns true if the node is a local node
returns true if the given node is a local node
checks if the node is a node
returns the length of the key
returns true if the address is local to the remote host
checks if the key is a bit set
returns the message dispatcher for this message
returns the index of the specified key in the map
purges the database from the database
returns the message factory
returns the message helper helper
returns true if the key is empty
returns the security token helper
returns the node id
returns the socket address
returns the request message
returns the token socket address
creates a new security token
creates a new token data
write the content of the code code to the given output
determines whether the bit specified by the specified index is a
sets the address of the contact
set the value of the specified bit
removes the bit at the specified position
sets the value of the code bit code code value code with
sets the bit at the specified index
sets the external address to the given address
returns the number of bits in the bits array
returns the index of the bit specified in the receiver
this method is used to the
sets the key value
inverts the
returns true if the given is to the given
returns true if the given object is equal to this
returns a string representation of this object
returns the string representation of this bin
returns true if the node is an internal node
returns the bit value of this rdn
returns true if the node is external
returns true if bucket is disabled
initializes the bucket
sets the vendor
sets the node id
the entry for the entry
set the
returns the port number of the socket
sets the flag indicating whether or not the is
returns the number of failures
returns the last failed time
returns the time in milliseconds
adds a listener to the list of route table listeners
returns the time stamp of the contact
returns the bootstrap manager
returns the timeout in milliseconds
returns true if the agent has been recently inserted
returns true if the message has failed
removes a listener for route table events
returns true if this is a
returns true if this is a dead
update existing existing contact with existing existing contact
this method is called when the bucket is moved
sets the state of the
throw an exception if the given operation is not
this method will send a recently deleted node to the current bucket
adds a new number of bytes to the daily monitor
pings a contact node
updates the estimated size of the
returns the network stats object
gets the global lookup stats
returns the database statistics
starts the scheduler
stops the timer
returns the bucket
returns the value of the pay pal field code id code
ensure that the singleton constant is unique
get the major version number of the
returns the number of bytes that this version represents
returns the short value of this version
a contact for a contact
return the singleton version of this code code
a listener for route table events
returns the route table
returns the left bucket
returns the bucket
returns the existing contact
returns the contact contact
returns whether this key is a lookup key
gets the primary key
returns the secondary key
returns the value type of the
returns true if the primary key is in the primary key
returns the security token
refresh all the buckets
checks if the is
returns a string representation of this byte array
returns the string representation of this exception
returns the external address
removes a from this type
starts the timer
returns true if the given entity is expired
stops the timer
writes the given storable to the database
increment the values per network
increment the values per address
adds a value factory to this
returns the creator
removes the given from this instance
returns the contact
returns the value factory for the given type
decrements the value of the values for the given network
decrements the value of the values in the
returns the value of the value property
returns true if this is a direct or wire
resolve the constant pool
a static code code
removes a storable from the model
handle the contact change event
cleans up the database
cancel the given collection
initializes the
initializes the watchdog timer
kill the watchdog thread
returns true if the given node is a same network
this method is invoked whenever the thread is done
returns true if the queue is full
sets the value of this attribute
returns true if the response is valid
notify all listeners that have registered interest for
process cancellation of the exception
fires a finished exception
adds a listener to receive message dispatcher
creates a new
returns true if the request is a request message
returns a new message with apdu id
reads a signed 32 bit unsigned integer from the stream
returns the size of the list
returns the for the given contact
reads a from the given
returns the message id
removes a listener from the list of listeners
reads a contact from the server
read a signed address from the socket
read a port
returns the destination address
read a socket address
returns the message
sets the data
starts the task
reads a security token
reads a code code object from the
this method is used to indicate that the current time is a
reads a statistic type from the input
returns the receipt of the message
reads a status code status code from the http status code
handles an error message
reads a string from the input stream
returns true if the response handler is cancelled
reads a value type from the input stream
returns the
reads a vendor from the input stream
returns the socket address of the socket
reads a version of the version
stops the timer
returns the message id
write the given to the stream
returns the request message
sends a message to the server
writes the given code code to the stream
returns the size of the message sent by the server
add a new entity to the entity
called when the system has been received
write the keys to the map
returns the time in milliseconds
close the stream
write the collection of to the output stream
returns the time in milliseconds
writes the signature to the stream
checks if the timeout is a timer
writes a contact node to the server
write the contacts to the stream
checks if the message is a message
writes a inet address to the output
write the port to the socket
returns true if this is a accepting state
compares the response type to the response
writes a socket address to the socket address
write the security token to the stream
check if the message is a valid response
writes the statistics to the output stream
returns the response handler
writes a opcode code op code
writes the given statistic to the current value
write status code to status code
handles the event handler
write the string to the utf8 stream
returns true if the tag was cancelled
writes the store to the database
writes the collection size to the specified collection
sets whether or not the buffer is reused
writes a to the stream
returns whether or not the buffer is used
writes a vendor to the specified vendor
write the version of the current version
returns true if the channel is open
returns the result type
gets the value of the estimated size property
returns the datagram channel
returns the lookup key
returns the local socket address
returns the hop
returns true if the entity is success
gets the route table failure count value for this failure response
write the socket to the socket
returns the lock object for this object
sets the timeout for the connection
serializes a socket to a given destination
returns the time in milliseconds
returns the last response time
reset the errors
returns the number of errors
sets the maximum number of errors to process
reads the message from the socket
returns the maximum number of errors that occured during the
returns the wait on the lock wait for this timeout
reads a message from the socket
this method sends a message to the destination node
process response to the given receipt message
returns true if the is done
verifies the given code code verifier code
sets the return value of the field
sets the exception to be thrown during the execution of the
called when the interest has been read
processes the request
called when the checkbox is changed
this method is used to determine the destination of the socket
registers the given tag to the end of the message
sends the next item to the process
accept the message
returns the security token
returns the next element in the iteration
adds a store status code to the code
check if the given message is banned
sets the ioexception to be used
returns the current ioexception
clears the receiver
this method is called when the user finishes the next entity
returns the lookup id
sets the size of the result set
returns the size of the result set
sets the
returns the
adds a new contact to the contact list
sets the
sets the select alive nodes
checks if the given node is a contact
returns whether the select is only accepting connections
sets the delete
returns the value of this constant as an int
returns the delete
clean up all the
returns true if the given node is a contact
finishes the lookup of the lookup
increment the active count
decrements the active search
this method is called when the user aborts the active search
returns the number of active searches
returns true if the current component has a em em em em
returns true if the given node is a
marks a contact as
returns true if the given node is a contact
returns true if the query has already been populated
adds a new code contact code to the
adds a response to the response
adds a new entry to the request path
returns the current hop
test method for
returns the start offset of the current
returns the end offset of the current segment
adds a new interceptor to the list
removes the interceptor from the list
clears the interceptors
initializes the socket
returns a connection to the socket
initializes the connection to the connection pool
adds a listener to this acceptor
adds a request interceptor to this interceptor
add a response interceptor to this response
returns the reactor
removes a listener from this acceptor
removes the request interceptor from the given tt request interceptor tt
removes the response interceptor interceptor
starts the asynchronous scheduler
sets the throttle to throttle
this method returns an input stream for the content of this
this method is always not supported
this method is unsupported
writes the contents of the code write code to the output stream
sets the index filename
shuts down the connection
adds a new piece at the given offset and the
shuts down the connection
start the
tests the connections and proxy when the proxy settings are not allowed
test of m method of class org
test of m method of class org
test of m method of class org
returns true if the game is one shot
schedules a timer for the given timer task
test of m method of class org
convert the given string to a string
resets the time to the last time
reset the and log
evaluates the operand of the current operation
encodes the byte array into a byte array
encodes a double value into the output stream
reverts to default values
compares this version number with another version
encodes the given iterable object into the given iterable array
creates the lookups environment
encode the given map into the underlying stream
advance the state of the given state
print a message
decrements the progress count and decrements the
add a listener to the list of listeners
removes the specified listener
sends an event to all registered listeners
adds a listener to the event queue
wraps a property change listener to the listener
adds a listener to the list of listeners
removes a listener from this proxy
returns the number of elements in this list
executes the given event
interrupt the worker threads
tests conversion from a file name to a parent
cancels the for the current task
test the given char
process a worker
returns the table model for the table
returns the table model for the table
returns true if the current state is terminating
removes the code runnable code from the queue
returns the number of threads that are currently running
called when the executor is completed
throws rejected execution exception
called when a new runnable has been rejected
called when the executor is completed
sends a string to the server
description of the method
initializes the menu
returns true if the clipboard is available
sets whether or not this association is enabled
returns true if this object is currently being edited
sets whether or not this item is allowed to be used
returns true if the user is allowed to access the
returns true if this action is available
sets whether the text field is disabled
returns true if the given string is a
displays an error message
displays an error message
initialize the list of options
defines the abstract method in tt abstract pane item tt
returns true if the current panel has been changed
initialize the user interface
applies the settings of this code code to the
initialize the options
defines the abstract method in tt abstract pane item tt
defines the abstract method in tt abstract pane item tt
defines the abstract method in tt abstract pane item tt
defines the abstract method in tt abstract pane item tt
initialize the options
converts a template to a string
returns true if the current workbench has been
defines the abstract method in tt abstract pane item tt
checks if the album is valid for the given template
applies the given set of options to the working directory
initializes the abstract settings
defines the abstract method in tt abstract pane item tt
update the model
initialize the list of options
defines the abstract method in tt abstract pane item tt
this method initializes j list of options
applies the options to the current selection
this method is called when the options controls in the options are
defines the abstract method in tt abstract pane item tt
defines the abstract method in tt abstract pane item tt
defines the abstract method in tt abstract pane item tt
handles the click on the text label
defines the abstract method in tt abstract pane item tt
initialize the options
initialize the
defines the abstract method in tt abstract pane item tt
defines the abstract method in tt abstract pane item tt
defines the abstract method in tt abstract pane item tt
saves the given directory to the memento
defines the abstract method in tt abstract pane item tt
sets the directory to be used for the download
defines the abstract method in tt abstract pane item tt
initialize the options
defines the abstract method in tt abstract pane item tt
defines the abstract method in tt abstract pane item tt
handles the label of the current tick label
initializes the options
defines the abstract method in tt abstract pane item tt
defines the abstract method in tt abstract pane item tt
defines the abstract method in tt abstract pane item tt
defines the abstract method in tt abstract pane item tt
defines the abstract method in tt abstract pane item tt
called whenever the value of the selection changes
initialize the options
handles the quit event
open a file
get the name of the component
returns whether the firewall window should be shown on the firewall window
opens the window window
this method is called when the settings of the core components
enables the actions of the given actions
moves the window to the next window
displays the previous window
called when the user presses the setup cancel button
sets the settings
updates the language
show the window
creates the window
this method is called when the core settings are made
sets the download slot of the
returns the next wizard page
returns the previous wizard page
schedules the services to be monitored
navigates to the next page
binds the socket to the server
show the page
navigates to the previous page
close the connection to the specified connection
sets the status message to the given message
this method is called when the user cancels the dialog
disconnect all the channel connections
sets the message status label
validate the input
updates the channel
updates the status message to the given status
enables disables the buttons depending on the current state
displays the tip text for the
sets the text of the text component
this method is used to write the to the channel
starts the splash screen
returns a string describing the current group
sets the text of the status bar
refresh the splash screen
runs the thread
creates a new code dropped message code object
this method is used to compare the source to the other
the bandwidth method
this method is called when the bandwidth is to be sorted
returns the number of connections in the network
compares this protocol to another protocol
create an instance of
compares this messages holder to another holder
compares this to another
compares two hosts by their hosts
returns true if the view is valid
register the event handler
returns true if the icon is available for the file
returns the native file view
initializes the connection
compares this object to another
returns a reference to the file view
assigns the host name to the host
returns the icon for the given file
updates the splash screen
returns the table column for the given index
all the snapshots that have been generated by the
removes all rows from the table
create the popup menu for the menu
returns true if the view is available
performs the browse host of the current
updates the state of the connection
description of the method
returns the number of connections
sets the images of the image
sets the progress string
returns the progress string
sets the paint string to be used to draw the chart
stops the source data line
seek to the given position
called when the mouse is left
close the stream
invoked when a mouse button has been pressed on a component
method double click
method that is called when the mouse exits a component
returns the value of the property with the given key
returns whether the control has gain control
set the gain of the audio control
adds a listener to receive audio
removes a listener from the list of registered
returns the current status of the player
loads the specified audio source file
pauses the simulation
sets the player state
stop the player
seek to the location of the current file
creates a menu item
set the volume
load the song from the buffer
stop the thread
removes all the theme items from the list
notifies the listener that a new value is opened
notify the user that a given event has been updated
returns true if the given component can be imported
returns true if the flavors are supported
returns the source actions of the given source
returns the image representation of the transfer
description of the method
imports a data from the transferable
export a drag event to the given component
notifies the progress monitor that a progress is being viewed
refresh the panel
notifies all listeners that a new opened file has been notified
notify all listeners about a change of the progress
drag source listener interface
fires a state change event
refreshes the state of the
invoked when a window is activated
invoked when a window is deactivated
returns the icon for the given file
returns the icon for the given extension
returns true if the icon is available for the file
refreshes the list of
the button icon
returns the icon for the specified button
returns the icon for the given button
validate the file
draws the image
sets the elements to the given elements
accept a chat
sets the progress string
returns a new frame with the given
removes a chat from the chat
called when a new message is received
called when a is unavailable
handles a chat error message
removes all the frames from this container
adds a response to the chat
sets the elements of the given collection
sets the progress value
displays an error message
sends a message to the server
updates the table model
removes the specified item from the set
sets the progress bar
set the state
initializes the component
sets the enabled state of the checkbox
get the color of the fog
returns the table column for the given index
sets the volume value
sets the tooltip
loads the specified song into the list
returns the tooltip for the tooltip
selects the logger level
load the given song
build the listener for the
ensures that the list of elements in the collection are visible
setup constants for the constants
load the specified audio file
sets the item selected in the list
append the text to the current text
sets the item checked attribute of this object
updates the splash screen
clears the text
pauses the playback
this method initializes main panel
sets the enabled disabled state of the given items
stops the playing of the song
sets the default renderers
sets the checked items state
skips a number of bytes
sets the default editor
description of the method
returns true if the checkbox is enabled
sets the number of rows visible in the scrollable table
handles the no selection
appends text to the list of elements in the list
generate the name of the file name
sets the selected item
returns the next song
updates the theme
sets the provider to use for the given provider
returns the previous song in playlist
returns the current playing song
updates the height of the font
add a list of files to the playlist
stops the playback of the player
add a list of files to the playlist
disable controls for the controls
adds a list of cards to the playlist
enables the controls of the controls
adds a file to the playlist
adds a playlist to the playlist
adds a playlist item to the playlist
notify the component that the change of the current document has changed
removes a file from the playlist
invoked when the target of the listener has changed its state
returns true if continuous is continuous
called when the user clicks the visible button
create an instance of
adds a new item to the list
adds a new playlist to the songs
removes the item at the index
returns true if the shuffle
sets the dirty flag
plays the current song
load the playlist
load the file from the given playlist
returns the selected object
returns the selected object
returns the checked state of this item
checks whether the list box is changed
a special smart to use the data in the smart space
returns the default location of the screen
saves the playlist
hides the window
hide the window immediately
clears the playlist
returns the selected property
ensures that the component is visible
adds an action listener to the button
creates wires in the wires
the given
create the transferable to use to connect to the given table
install the resources
sets the text of the progress bar
creates the panel
removes the given object from the list
sets the auto hide timeout
switch to the of the
handles the move of the move
sets the icon to use for the icon
sets the model
sets the parent location
sets the size of the parent
shows the window
create an instance of
returns the current refresh of the download
creates sharing files label
creates the language button
show next notification
initializes the object
show previous notification
clean up the
starts the timer when the timer is enabled
sets the status
stops the auto hide timer
returns the file that is being used
get the transfer transfer transfer
show the panel
stops the networking
updates the firewall text
throw an exception if the expired status is rejected
sets the status of the icon disabled
throw an exception if the cookie is not blocked
updates the language flag
creates a new preferences user
updates the firewall text
runs the
the
save the file to the given file
returns the number of simultaneous uploads
setup the drag and drop
set up the constants for the constants
updates the host count
returns true if the tray icon is available
returns whether the library loaded from library
updates the splash screen
returns the complete row of the torrent
replaces the current laf of the icon with the given name
returns the default theme for this metal theme
checks if the is available
returns the current downloads
checks if the windows are available
returns the number of active downloads
get the current bandwidth in the device
add a downloader to the downloader
set the dictionary dictionary
creates the default dictionary
adds the dictionary to the dictionary
adds a new dictionary to the dictionary
compares the media type to another
returns the icon for the given type
sets the filter box to be used in the search
handles the events of the change
when the contents of the contents of the list has changed
returns whether the table is sorted
adds a line to the list
checks if the given line is allowed to be read
returns the result of the given list of objects
add a line to the list of items
handles the action key
updates the state of the peer
setup the data model for this table
handles the no selection
clears the list of
select matching value in the list
sets the default renderers to the renderers table
creates the default search panel
returns the title of the title
creates the search button panel
initialize the component
creates a new table line
removes the specified row from the list
add a row to the table
returns true if the xml document is an xml file
updates the status of the current search
returns a string representation of this object
returns a new data line object for the given row
adds an action listener to the button
updates the display
adds a new line to the list of
returns the row of the given headline
get the row of the
update the license
returns the media type
returns the at the specified index
compare the given table and returns the spam threshold
compares two lines
normalizes the location count
returns the number of sha1 hash
invoked when the user is activated the
returns the filename of the file
paints the component
returns the size of the list
creates a popup menu for the current menu
create a panel with the given url and portrait
creates a jpanel to show the
enables the selection of the selected items
creates a transferable to use for the given property
compares two result movement
creates the go panel center
opens the given url
create a new search result
returns the default value of the given property
returns the maximum length of the text
updates the theme
returns the spam rating
test for equality with another
compares two result names
returns the status of the image load status
refresh the overlay
setup the tabbed pane
resets the tabbed pane
initialize the properties
adds a line to the list of properties
removes the properties from the specified table
switch to the given media type
adds a custom extension to the custom panel
reverts to the default settings
updates the side panel
sets the enabled state of the panel
returns the container
enable or disable the
shows the popup menu
setup the fake table
show a dialog to choose a state
creates a new library table
returns true if the cell at the specified row and column
performs the button for the given button
create a transferable for the given destination
returns true if the file is visible
updates the legend panel
set the file filter to be used for the file chooser
adds a component to the north east panel
sets up the constants
sets the roots of the root directory
checks if the given root directory is the root directory
sets the list of folders to exclude
set the initial selection
sets the root of the roots of the roots
sets the root of the tree
returns true if the node is a node
returns true if the given node is a shared directory
removes the root from the root
returns the file
setup the drag and drop
creates the label for the given checkbox
returns the path to the root element
returns the tree
shows the incomplete subfolder folder message
sets whether the library is enabled or disabled
returns the icon for the given file
returns the icon for the given extension
checks if the directory is already shared
returns true if the icon is available
clears the library
returns the directory where the directory is currently selected
performs the refresh of the
forces the refresh of the directory
checks if the given directory is a shared file
returns the file name of the given file
updates the ui
sets the checkbox to the selected state
checks if the resize handler is resized
creates the sized string with the given size
create an instance of
refresh the current state of the current thread
returns the file name of the complete file
updates the splash screen
called when the user selects to refresh the download
returns the current number of currently selected uploads
returns the number of active uploads
returns the bandwidth number of the current active uploads
add a new to the list
initializes the application
handles the event to send a selection to the data model
sets the image to be displayed in the track
updates the theme
sets the speed left time left
sets the progress bar
handles the no selection
returns the language of the current language
enables or disables the
add a key to the trie
clears the filter
sets the tree model for this tree
ensures that the parent node is visible
the core of the
sets the file filter
returns the file filter
sets whether the sort is sorted on the given
returns whether the sort of the files should be sorted in reverse
returns the label of the
handles the link click on the link
set the selected directory
adds a mouse listener to this
handles the renaming of a file
handles the event to remove the songs from the song list
called when the manager is loaded
handles the event
stores the data in the database to the database
returns the title for the query
returns the name of the list of
set the window to be selected
updates the icon of the tab icon
shows the download
returns true if the specified address is accepted by this filter
sets the status of the connection to the given quality
handles the chat event
called when a new message is received
called when a chat session is logged in the chat
handles a chat error message
disposes the splash window
save the window to the database
called when the address state has changed
connect to the server
returns true if there is a data changed
returns true if the given directory is already ignored
returns the of the
show the card
disconnect from the server
adds the given code code to the list of
returns the component that is being displayed in the search panel
returns a jcombo box for the given field
sets the visibility of the tab panel
called when the loading component is about to be shown
plays the audio clip
stops the playback of media playback
sets the default renderers and renderers to the renderers table
shows an update event
adds a new row to the table
adds a row to the regression queue
compares this object to another
returns the row of the given object
this method initializes this
returns the cached or null if it is not null
returns the ordinal of the component at the given index
returns the index of the tab tab
adds an object to the list
adds an element to the selection
returns the tab for the given index
called when the user changes the status of the
adds the given object to the editor
removes the row at the specified index
opens the host catcher of the rc
returns the current element
show the list of popup
updates the table
move the current row to the new location
creates a new instance of the data line
returns the new data line
called when the input is complete
process mouse event
returns the preferred scroll panes size
adds the given
adds a row to the table
returns the element at the specified position in this list
returns the object at the given position
updates the data model
removes the row at the specified row
starts the chat session
updates the splash screen
removes the specified line from this list
returns the value at the specified index
removes the object from the list
returns the table column for the given index
sets the nick to be used for sending the
compares two columns for sorting by their current row
logs the bug to the svn system
sets the current cursor frame
removes the selected cells
add user comments to the user
writes the bugs to disk
returns true if the given info is a time queue
checks if the version is
sends a local client to the server
returns the color for the specified row
sets the current song
returns the color of odd rows
updates the height of the font
returns true if the ip range is contained in the range
refresh the
returns the current banner
returns the table column for the given index
checks if nick name is a nick name
create an instance of
setup the constants
returns the current file name
updates the splash screen
adds a announcement to the list
sets the os
sets expiration date of the cookie
removes the cache for the given image
handles the possible revised messages
checks if the given message is eligible for this message
loads the plugins
show announcements
checks if the jar file already exists
sets the message to be updated
this method validates a message before the given message
sets the type of the object
clears the available plugins
connect to the server
returns the download manager for the download
start an element
receive notification of the end of an element
method
checks if the string is empty
the locator for the document
this method is called when the enter key is pressed
this method is called when the entity is skipped
reads the plugins from the plugins
this method is used to obtain the prefix mapping
called when the sax parser starts a document
saves the plugins to the plugins file
reads available plugins
writes the available plugins
this method checks if the current directory is already stored in the
this method is called when the plugin is about to be downloaded
stops the plugin
starts the timer
this method is used to set the ping pong
returns the endpoint for this connection
shuts down the pss
opens a connection to the socket
remove all from the cache
returns the verified token token
write bytes to the output stream
add proxies to the proxies
checks if the given guid is a type
copy a guid
returns true if the is alive
set the guid for the given guid
sets the features guid
returns true if the given address is not not not not not
set the of the
removes all from the given
handles a query key
returns true if the given set of elements are empty
adds the specified places to this set
removes the first occurrence in this list of the specified
returns the string representation of the current value
returns whether or not the is enabled
sends a message to the server
this method dispatches a multicast multicast socket
send a message to the server
accepts a socket
returns the not found handler
clone this object
clones the current object
waits for the given to be
returns the urn for the urn
add a urn to the list
this method will be called by the framework to initiate the message
add a new document to the document
removes the given license from the
returns the object
returns the first document with the given name
returns the license description
returns the body of the http client
removes the old entries from the list
persist the cache
verify that the license is already registered
returns the body of the http client
returns the http client url
handles a new request
handles the given reply handler
adds a new request to the request
resets the time to now in the last backup
removes the specified reply from the request handler
removes the next message from the queue
returns a copy of this license
clones the underlying trove collection and returns the clone
adds a new query to the query
returns the body of the http client
writes the remaining bytes to the buffer
adds a message to the queue
removes the next message from this queue
calculate the priority of the given message
sends the rtp data to the server
returns the number of bytes sent to the server
handle the protocol message
returns the number of bytes sent to the connection
returns the number of bytes received
returns the read bytes in bytes
get the value of sent saved from pago
get the read bandwidth from the data
sets the protocol to read from the given response
get the bandwidth
get the for the tunnel
returns the number of ultrapeer ultrapeer ultrapeer ultrapeer
initializes the handshake
sets the socket
returns whether the query is able to be able to
returns the connect type
returns the number of messages in the
returns the action from the given service
clears the cache
returns true if the host is already already already already created
compares two addresses for equality
returns a hash code for this object
stops the server
returns a clone of this message set
returns the hash code value for this map
adds a urn to this list
adds all the urls to the list
returns true if the uploader should bypass
this method is called when the user has received a message
called when a query reply is received
returns true if the connection is a leaf
schedules an upload speed
start the fetcher thread
stops the fetcher
returns true if the fetcher is running
processes a reply message
returns true if the user has cancelled the connection
processes the message and the incoming message
returns the session associated with the given session id
handles a connection lifecycle event
this method starts the messaging connection
clean up the upload process
returns the value of this unsigned integer object as a byte
returns the for the given alternate search
returns the for the given destination
stops the
adds a to the
sends a message to the server
sends the updated capabilities of the server to the server
creates a new ping reply
creates a new
sets the bootstrap
returns true if the connection is waiting for the
try to bootstrap the current connection
called when the user finishes writing the server
returns the read response
returns the code response code for the reception
stop the fetcher fetcher
the
initializes the outgoing
prune times out of the file
connect to the server
process the received headers
starts the handshaking
initializes the incoming connection
read the header of the header
returns the number of headers in the buffer
returns whether the connection is a
creates the data
creates a new outgoing data object
returns true if the is a
invoked when a new is encountered
returns the address of the remote host
sends a request to the remote service
returns the rating of the statistical score
this method will be called when the rating is about to be
returns the current token type
returns a string representation of the urn
returns the current token
returns the size token for the given description
returns the vendor token for the given description
returns the address token for the given remote host
extract simple name field name
returns the rating of the current round
this method will be called to indicate that the rating is a
returns the type of the token
returns a string representation of this object
mark the tokens as a rating
saves the current state of the cache
returns the rating of the current round
returns the importance of the importance of the
this method is called to indicate that the rating is a rating
returns the type of the token
returns a string representation of this packet
increases the age of this
returns the importance of the membership
returns the rating of the current game
this method will be called when the rating is about to be
returns the token type
returns a string representation of this apdu
this method will be called when the rating is about to be
returns the type of the token
returns a string representation of this object
the query has started
handles a remote file
clears the list of filters
initializes the
downloads the current download
handles a successful update
handles a new data event
checks if the version correction is removed off one of the
parse the given xml string
constructs a remote file desc by a given
notify about about the information about the about
returns the next element in the iteration
write the record to a stream
writes a channel to the buffer
returns the length of the output buffer
writes the data to the given output stream
returns the port number of the server
checks if two elements are in the same size
accept a connection
creates a new connection
this method is called when the socket is completed
parses a message and returns a vendor specific
creates a new ping
interface control interface
stops the connection
returns the value of the supports supported bytes
returns the capability capability capability capability capability capability capability capability
returns the capability capability capability capability capability capability capability capability capability
sets the fields from code
returns the urn header
returns true if the is valid
returns the code for the code code of the code
returns the version number of the ping ping
returns the urn of the current
writes the to the given output stream
writes the specified byte to the stream
compares this message to another message
interface for a message parser
adds a new to the
adds a new to the list
writes the given list of to the payload
returns the locale of the rtp data
returns whether this message supports the
returns the query key
write the given byte array to the output stream
creates a new
this method is used to parse the payload
sets whether or not the host reply is currently selected
this method is responsible for creating a new rendezvous query
returns true if the host is currently selected
sends a query to the server
returns the tls flag
converts a token to a
adds a locale to the given locale
adds a new address to the
the
returns the vendor of the
returns true if the tokenizer has already been pushed
returns true if the socket is busy
returns the value of the header for the key
puts all the values from the given code list code
returns true if the current thread has successful
returns true if the speed is a measured speed
returns the value of the code rich query string code
puts a key value pair into the map
updates the signature with the given signature
puts a value in the hash map
returns true if the is
multicast a query request to the multicast service
returns true if the chat supports the chat
returns the string value of the given key
returns true if the band is a band
returns true if the is out of the band
returns true if the security is
returns true if the host is a browse host
returns true if the properties is empty
create a new request object
returns true if the query is a reply to the
creates a new request object from a query
sets whether the multicast group is allowed to use multicast
creates a new gdata request object
returns true if the multicast socket is a fake connection
returns true if the given subset of this
returns the host data for the host
returns the security token required
returns true if the data has already been set
checks if the range is
returns the subset of the specified range
returns true if the specified range is a range
handles a request
compares this object with the specified object for order
handles the content response message
returns the reply handler for the given id
returns a string representation of this object
handles the update response
increases the udp host
test the of the host cache
set the host cache for the host
returns the next handler for the given
writes the contents of the given object to the output stream
returns true if the socket can connect to the socket
connect to the database
returns true if the port is a local browse
adds all other classes to the list
this method is called when the is marked as an
removes the specified reply from the list
remove a list of destinations from the given guid
the
returns true if the is
checks if the time is
returns true if the next is
add a query to the list of responses
remove a query from the query
returns true if the tcp transport is an ultrapeer ultrapeer
connects to the given socket
reads the objects from the given stream
returns the urn type
this method is used to find all the
returns true if the is
returns true if the ultrapeer is a
add all the hosts to the host
returns the file manager
returns the root share
returns true if the file is a
returns true if the event is a add store event
returns true if the file is a remove event
returns true if the file is a rename event
returns true if the event is a change event
returns true if the event is a failed event
returns true if the folder has been added to the folder
returns true if the folder has been removed
returns true if the file manager is loading loading
returns true if the file manager has been loaded
rank the specified host
returns true if the file event is a file event
returns true if the event is a folder
returns true if the file manager is a file manager event
saves the current settings to the database
if the user has been revert to the default value
reloads the data from the database
remove all instances from the given set of files
add a mapping from the given byte array to the
adds an extended code free to slot set
main processing method for the object
populates the documentation of the
load the tag from the given file
add a collection of addresses to the list
parse the given xml string
adds a new routing to the list of leaves in the routing
returns true if the host name is connected to the given host
returns true if the endpoint is already exported
this method is called when the endpoint is added to the server
checks if the host is a connecting to the host
this method is called when the endpoint is removed from the server
returns the endpoint immediate immediate endpoint of this queue
reads the content of the given byte array
parse the genre from the genre
parses the file
reads the header of the given header
reads the tag from the given file
parses the file
returns the url for the video
populates the document with the given year
expire the expire time
start the next file at the next record in the file
this method is called to start the next object at the beginning
returns the byte array of the byte array
generate a long value
parse the atoms from the given input
reads the value of the given atom
the atom
this method is called when a video is about to be written
returns the next atom
sets the data to the specified video data
commit the current meta data to the current state
populates the document with the given
returns the editor for the given file name
parses the given file
parses a file
returns the audio editor for the file
parses the file
write a block of data to the disk
writes a block block to the buffer
returns the range of white
recovers all hosts in the list
returns true if the multicast address is alive
close the stream
observer
called when the user clicks the load method
called when the user has finished loading
returns true if the connection is connected
this method will set the upstream bandwidth for the upstream
returns true if the is capable of sending the now
creates a new file
create a new file
add a push to the list of push hosts
get the exact host for the given
get the host for the given address
get the exact host of the given hosts
set the start stop time for the given
accept a connection
returns the connection status for the given connection
sends a push to the remote server
wait for the inbound transport to be
wait for the to receive a handshake
add a remote file desc to the server
this method is used to send a udp packet to the server
consume the body and the state of the
returns the number of ultrapeer ultrapeer ultrapeer ultrapeer ultrapeer
returns the number of connections in the database
reads the alternate locations
adds a collection of hosts to the host
schedules a new connection to the host
adds a delayed write write to the cache
returns true if the queue is writable
add a new job to the queue
add a new job to the queue
clears the cache
returns true if the host is valid
returns the size of the cache
returns the size of the cache
returns true if the other remote file has been added to the
creates a new connection
updates the status of the given query
returns the endpoint of the connection
this method is called when the connection to a new connection
called when a new connection is about to be propagated
add a new to the current
parse the gss proxies
handles the of a
set the ip address
loads the given file into the list
creates a file description
stops the timer
removes the associated code code object from the
returns true if the has been ultrapeer ultrapeer
initializes the file
this method is called when the connection is about to become
updates the host cache
cleans up the connection
returns true if the is
check if the given remote host is allowed to be connected
returns true if the connection is idle
clean the resources
sets the preferred connections for this connection
starts a connection to the server
returns the probability to be used for the stretch
checks if the file is a file
compares the specified object with this remote file desc
checks whether the license is
returns a hash code value for this instance
connect to the server
stop the connecting catcher
save the state of the object
this method is called when the is finished
checks if the is
starts the worker
returns whether the connection has been sized stable connections
initializes the alternate locations of the alternate locations
returns the stopped
this method is called when the loop is closed
consumes the body of the message if it is a valid body
updates the log for the garbage collection
kills all workers
dispatch a file event to all listeners
returns a string representation of the urn
returns the namespace specific uri of the string
returns true if the is capable of sending requests now
returns the urn type
returns true if the urn is a sha1 urn
checks if the has been already sent
returns whether the urn is a sha1 urn
returns the sha1 urn for this supplier
compares this urn to another
connect to the server
shuts down the catcher
schedules the service
called when the handshake is being used
this method is called when the user chooses to perform the handshaking
connect to the specified connection
handles the of the connection
checks if the incoming socket is valid
sends a message to the server
assigns the current element to the
initializes the download
returns the ping request
verify that the file is incomplete
remove duplicates from the given collection
this method is called when the server is about to be processed
removes all the hosts from the host
checks if the current request is valid
encodes the stack proxies and returns the
adds a proxy header to the response
adds all the messages to the poller
returns whether the dialog should be validated
adds an code connection listener code to the code lifecycle listener code
get the file desc for the given request
returns the upload begin value
returns the upload end value
sets the
gets the value of the uploader property
polls the current system
this method is not supported
checks if the agent is valid
this method is used to deliver the event to the listener
returns true if the queue can upload the status
returns true if the queue is accepted
returns the io io io io io session
get the poll for the given slot
returns the value of the specified upload slot
set the status to download
set the file desc for this sharing file
initializes the hash tree
adds a new tcp amount to the media
returns true if the current state is inactive
kills the
remove a listener from the lifecycle event
returns true if the first reply is the first reply or false
remove the given user from the queue
resumes all queued requests
sets the upload type
returns the number of messages for the given message
sets whether the browse button is enabled
sets the status of the chat
sets the port number
sets the total amount of bytes that will be written to the
returns the session
set the file size
gets the ignore total amount bytes
setter for property ignore total amount bytes
returns a file that represents the suggested file
returns true if the socket is currently connected
returns the address of the server
returns the inet address of the server
returns the inet socket address of the socket
sends request to the server
get the port number of the socket
returns the number of active connections
handle the no more more
installs the synchronizer
runs the thread
writes the byte array to the stream
add a file to the
returns the creation time
returns the inet address of the host
returns true if the is
sends a message to the server
initializes the host
shares the file with the shared file
initializes the host
sends a message to the server
create a new random number generator
returns the creation time
starts the processing of the cache
stops the server
returns the size of the cache
set the value of content authority
determine whether the given urn urn is verified
request a urn
returns the response data to be used for the
schedules the given request to be used for the given request
remove all from the given collection
this method is used to delete the file
add a timeout to the queue
starts processing the thread
persist the last modified level to the server
returns the default content authority authority
opens the file
adds a new downloader to the downloader
starts the worker
this method is called when the worker is finished
returns the current state
starts the download
starts the thread
finishes the current task
returns the source for the given
adds a new to the
cleans up the preview files
creates a new connection with the given socket
returns the uptime of the server
calculate the uptime of the time
shuts down the application
this method initializes the given service
returns true if the connection is cancelled
checks if the license is a
returns the schema
checks if the is already fulfilled
returns the callback for download
shutdown the server
initialize the object
returns true if the remote file exists
returns the action
returns true if the license is available
this method is called when the connection is about to be destroyed
returns the value of the field specified by the name
returns the
opens a connection to the server
construct the attributes of the object
shutdown the connection
compares this object to the specified object
returns the hash code value for this field
called when a download is completed
scan for the fields
returns the canonical key for the given key
returns the image resource path
returns the xml file for the
this method is called by the file downloader
this method is called when the user selects the file
this method is called when the user has finished
add the to the table
send the to the server
returns the schema with the given uri
removes all the keywords from the given trie
adds a reply to a reply to the
refresh the hosts
the document
adds a list of entries to the list of disallowed filenames
adds a list of entries to the list of disallowed
this method tests that the forbidden method
check whether the given document is allowed to be
returns whether or not the incoming message is banned
returns true if the socket is banned
returns the doc for the given hash
returns the minimum distance to the given ip
counts the number of bits in the
remove a document from the file
checks if the given string matches the current value
remove all from the queue
process write write buffer
reads a chat header from the given header
determines whether the given header is already uploaded
checks if the given header is a urn
returns true if the hosts have proxies
returns the minimum distance to the given ip
read node header from header
sets the host and port of the server
performs the request
read the header of the header
returns the headers of the headers
returns true if the string is a valid string
uploads the page to the page
writes the header of the given header
returns true if the is
check for active active
returns the display name of the current action
returns the keyword topic
starts the
returns the port number of the socket
returns the dispatcher for this dispatcher
stops the torrent
sets the torrent state
returns the number of that are waiting for this torrent
returns true if the job is done
reads the next element from the input stream
returns the type of this object
returns the result of the operation
returns true if the current line is done
returns the type of this object
set the file to be complete
update the references to the given file
handles the observer
shutdown the watchdog thread
set the channel to write to the channel
count the number of packets in the stream
sends the next message to the queue
checks if the given array of bytes are the same as the
returns the message digest object that is used to compute the
initialize the data structures
records the failure of the failure
records the success
submits a request to the request
this method is called whenever the blocking request is
announces the tracker to the torrent containing the
this method is called when the piece has finished
handles a tracker response
returns the file to use for the shared torrent
starts the connecting connection
read the next read lock
sets the flag
shutdown the server
set the channel read
called when the is closed
initializes the folder
verifies the file
shuts down the periodic server
starts the timer
add a new endpoint to the queue
returns true if the class is assignable from the given class
close the socket
returns true if the type is assignable from the given type
returns true if the token is assignable from the given token
add a connection to the list
returns the torrent data object
called when the buffer is written to the stream
notification that the source has been read
this method is used to generate the
clears the
set the
clears the round
send a reply to the server
returns true if the given object equals this info object
sends a message to the server
called when the user is ready to write to the
tests that the media type is a media type
set the settings for this task
returns the number of
returns the number of
this method is called when the user is
handles the given cancel message
starts the server
this method is used to connect to the ultrapeer
creates a leaf connection
creates a connection to the connection pool
creates a new connection
increases the number of downloaded entries
returns true if the is
test method for net
test the urn method
ensures that invalid urn
sets up the test case
tests that the host host catcher host and
tests the endpoint priorities exchange
test the constructor for the alternate location
tests the constructor of the alternate location factories
test the alternate location of the alternate location
tests the alternate location of the alternate rules
tests that the is set correctly
tests the of the ultrapeer and message
tests the of the periodic periodic
creates a injector
returns the guid of the
returns the guid of the
set the settings
returns the number of peers in this group
returns true if the client is able to ping the ping
receives a message
reads and returns the next available statistics
tests the host with hosts and download
test of is stable method of interface code connection code
test of is high degree method of interface java
tests that the push packet is received
tests that the push request is received
creates a new connection
set up the test
tears down the fixture for example close a network connection
fill the internal state with the
frees the free slots
set up the test
the respond to leaf connections
test the urn overrides the default behavior
test the correct version of the
tests the binding process
tests older versions of the same size
tests that the invalid signatures are ignored
tests that invalid bytes are ignored correctly
test the update method
tests the creation of a
create a new file with the given name
test that ensures that the catcher correctly is not connected
test of responses sent
test that a query is sent to the server
test of all filtered method of class
test of iterations of filtered rule
test that the is successfully transmitted
test that the wrong protocol host is wrong
tests that host connections
test the reject host method
tests the constructor of the urn class
tests that the constructor of the constructor is valid
tests the constructor of the string constructor
tests the constructor of the
tests the constructor of the
tests the constructor of the
tests the existence of a file with a valid comment
tests the constructor of the constructor
a unit test for junit
tests the get service request
test
tests that the ping ping method is called when the download is
tests the method code get queue code
sends a query out to the
returns a head version of the ultrapeer
creates the connection
xor for a message requesting an incoming message
xor for a message
xor method for a message
sends a message to the server
test of method of class
tests the method
create a new file with the given name and size
test method for
tests the value of the code double code property
test of contains legal value contains method
test that the value contains illegal bytes
test method for
copy the shared directory to the shared directory
shuts down the lime wire and the
tests the persistence of a persisted cache file
checks if the cache file exists
adds a file to the database
returns the save directory
returns the shared directory
returns the directory where the files are stored
setup the
test the
perform post teardown
creates a new connection with the connection manager
creates a new connection
tests the create route table method
returns the number of queries
returns the number of queries
test the http request urn
tests http request for http request
tests the get request method
test the get request for invalid urls
tests the of the
test calculate the calculation of new hosts
test constructor with invalid port
test constructor with invalid ports
tests the request from
tests urn query from leaf
test of get push method of class
tests the method
tests that the connection is not alive correctly
convert the date to a time
test the time period
tests the time functionality when the time expires
test the convergence
tests time time time time time time time time
tests the functionality of the
tests shutdown backwards
tests that the metadata exists in the file
write the byte array to the output stream
tests the return value of the block
test method for
download the given file
sets the
tests that the is
test method for
test method for
test purge hash keys
test for the urn constructor
test for invalid
test for a newer
tests the of the
sets the
creates a new resumed resume
test the of a
sets the percentage
test the lease of the
test invalid content
sets whether the network is or not
tests connection to a connection to the connection
reads the alternate locations and returns it
test that the 404 connection is stripped with an
this method is used to connect to the server
waits for udp packets to the socket
returns sha1 hash
test the request
test the handle response method
test the of a request
test of timeout method of class com
test of read without request method
this method is used to set the foreign key
test of adult filter method of class org
test of adult filter method of class org
test that the connection manager is disconnected
test if the is available
tests the ping request
sends a reply to the server
tests the connection setting
test of set connection method of class
test that the extract header value method is a valid
returns true if this adornment is a native jar file or native
returns true if this is a
add an argument to the list
returns the maximum heap size
returns the initial heap size
converts a heap size into a long
sets the context
returns the flag indicating whether or not the application context is created
creates an application
checks if the given class matches the name
returns true if the specified entry is an update entry
returns the node with the given xpath
update the given url
returns true if the connection is currently being used
checks if the resource is already downloaded
invoke a static method
invoke the method with the specified method
returns the method for the given method
loads the data from the file
process the resource
stores the properties to the output stream
adds a url to the source url
compares the specified number of strings
runs the privileged thread
show the document
this method is called when the user is
show the status of the user
matches the given string to the given string
returns a list of permissions for the given source
this method loads a class file from the given name
add a new event to the event queue
reset the data
this method will write an error message to the error
this method is called by the
close the connection
checks if the specified appender is attached to this
sets the buffer size
returns the maximum size of the buffer
removes all unused nodes from the tree
set the date format manager
sets the transaction name
returns the name of the server
returns the authentication method
sets the authentication method
returns the authentication scheme
sets the authentication scheme
adds a database to the database
returns the address of the inet socket
removes a database from the database
returns the item id
returns the number of databases
sets the transaction name
returns the configuration object
returns the name of the item
sets the of the
returns true if the playlist is a
adds a response to the queue
moves the queue to the next element
writes the response to the queue
commits the transaction
rollback the transaction
returns the item id
sets the name of this transaction
returns the persistent id
returns the id of the container
returns the master playlist
returns the number of songs in the playlist
adds a playlist to the playlist
adds a song to the list of songs
sets the transaction name
removes a playlist
removes a song from the list of registered
sets the of the album
add a chunk to this collection
returns the number of playlists
returns the album
returns true if the playlist contains a playlist
this method is called to select a playlist
returns the content code string
gets the song attribute of the object
sets the artist of this transaction to the given artist
this method is used to select the current object
returns the artist of this artist
returns true if the song has the specified song
returns a set of songs of the songs in a playlist
returns the number of songs in the playlist
sets the per minute
returns true if the specified playlist is already in the playlist
returns the number of beats per minute
removes a song from the list of playlists
returns the song at the specified code request code
returns a playlist for the given request
sets the bitrate of this
returns the bitrate of the audio file
sets the comment of this transaction
returns the comment
sets the compilation state to the given
cancel the channel
returns the number of in the
accept a new process from the channel
returns whether the compilation is a compilation file
disconnect all the channel connections
sets the composer of this composer
processes the update of the connection
process the timeout
returns the composer of the current user
runs the thread
sets the data kind of this transaction
returns the kind of the data
set the data url for this connection
returns the integer value of the session
writes the current object
closes the session
returns the server
sets the type of the connection
returns the data url
sets the protocol version
returns true if this is a audio stream
returns true if the connection is a connection
returns true if the type is
sets the date added date of the transaction
returns the protocol version of the protocol
get a session
clears the library queue
returns the date added
adds a library to the queue
gets the first in queue
returns the last opened library
sets the date and time of the transaction
returns the session id
returns the date of the last modified date
validate the session id
sets the description of this transaction
adds all of the headers to the headers
returns the description of the item
adds the headers to the headers
adds a header to the current request
set the transaction to be disabled
returns the header for the given key
returns the server
returns true if the component is disabled
returns the connection to the connection
returns true if the request is an unknown request
returns true if the server is a server info
sets the number of in the database
returns true if the login request is a login request
returns the number of disc
returns true if the request is an update request
sets the of the
returns the disc number of the
returns true if the database is a database request
returns true if the database is a database connection
sets the eq preset value for this booking
returns true if the playlist is a playlist
returns true if the current song is a song
returns the value of the code code property
set the format for this transaction
returns the revision number
returns the format of the file
returns the database id
set the genre of this entry
returns the genre of this song
returns true if the database identifier is set
returns true if the container id is set
returns true if the item id is set
pushes an object type pair onto the stack
pops an item from the stack
checks if the given object is contained in the bloom filter
returns the request type
returns true if this request is a server side request
set the sample rate for this car
returns true if the type is a update type
returns the sample rate
sets the size of the transaction
returns the size of the list
sets the start time of this transaction
returns the time of the start time
sets the time to execute
convert json object to json representation
converts a string representation to a json representation
returns the time in milliseconds
converts a type into a json string
writes a json representation of a given object to the given writer
sets the time to the given transaction
converts a string to a json representation
returns the time
converts a json element into a string
writes a code json element code to the output stream
set the track count for this track
returns the number of tracks in this track
sets the version of the
set the classs fields properties
sets the track number of this track to the given
sets the field that should be used to apply the annotations without
returns the track number of the track
serializes the values of the values
disables serialization of inner class payloads
set the long serialization policy
sets the users rating
returns the rating of the user
sets the exclusion strategies
sets the pretty printer printing
sets the
sets the year
sets the format date format
set the date format
returns the year of the year
sets the date format for the given date
registers a type to be used as a type
sets the value of the grouping property
returns the grouping of the current token
removes an artist from the database
returns the id of the
the with the given id
returns the id of the
adds a new property to the list
removes a from the
adds a new property to this element
adds a new property to this property
adds a new property to this element
adds a new property to this property
creates a json element
returns the genre id for this
returns the value of the specified member member
returns the code json code object for the given code member code
returns the code json array code element for the given
returns the json object for the given object name
the of a playlist
returns the id of the playlist
removes an transaction id from the database
returns the id of the
returns true if this object is a json array
removes a from the
returns true if the object is a json object
returns true if this is a json primitive type
returns true if the current code null code is a null
returns the object as json object
returns the code json array code of this code code
returns the code json code object that contains the
returns the id of the song
returns the json object that is used to convert the
this method is not supported
this method is not supported
returns the value of the as a string
returns the value as a double
sets the of this to the given
returns the value as a float
returns the value as a long
returns the value as an int
returns the value as a byte
returns the codec type of the codec
returns the value as a character
returns the value as a big decimal
returns the hash code value for this object
returns the value as a big integer
compares the specified object with this token type
returns the value as a short
returns a string representation of this type
sets the subtype
returns the codec subtype
sets the code norm volume code to the given code
returns the volume of the
returns the boolean value of the boolean property
returns true if the value is a number
returns true if the value is a string
returns the declared type of this field
add an element to the list
adds all elements of the array to the array
returns the element at the specified position in this list
parses a json string into a string
returns true if there are more elements in this collection
sets the video to the given value
returns true if the video has a video
create an object of type code object code
set the value of the attachment
test of remove method of class de
test the of the large collection of
tests serialization of null throws exception
test that a null value is wrapped properly
test for serialization
test method for
test map with null values
test serialization of json serialized serialized form
test that arrays are returned as a null value
test that a null pointer exception is thrown when the
test primitive test primitives
tests serialization with a class
tests that converting a string field with empty value
test string field with empty value
sets the domain
returns the attribute handler for the given name
returns true if the given cookie is set to the specified
returns true if the date is expired
sets the suffixes for the given code code
sets the collection of exceptions
returns true if the given request cookie matches the specified
returns the parameter with the given name
removes a parameter from this request
returns a copy of this object
checks whether the uri contains the given uri
adds a uri to the list
removes an uri from the uri
returns the proxy selector
sets the proxy selector
returns the parameters for the given http request
get the host address
add a new time to the database
detach this object from the connection
removes all the connections
aborts the waiting thread
sets the waiting thread
close the connection pool
shuts down the pool
close the connection
release the connection
returns true if the pool is unused
returns the pool entry
returns the capacity of the cache
returns the entry that this object is being invalidated
the thread run method
shutdown the worker thread
frees the connection pool
called when the user has been created
wakes up the selector
deletes an entry from the pool
drops the entry
queue the thread to be processed
returns true if the thread has a thread waiting for a thread
creates a new connection pool
returns the next thread waiting of the thread
removes a from the list of threads
creates a new route specific pool
returns the number of connections in a pool
returns the number of connections in pool
returns the state of this state
sets the state
deletes the entry with the given pool
deletes the least recently used entry from the pool
closes the connection
shuts down the connection
aborts the connection
returns the parameter with the given name
returns true if this node is a proxy
return the next step in the graph
returns the first step of the network
checks if the current file is allowed
invalidates the current session
returns the domain of the principal
sets the auth scheme
eof eof eof close
getter for property
returns the number of occurrences of this identifier
checks if the stream is close
checks if the stream is a abort
aborts the current connection
create a new processor
creates a new default http http request parameters
returns the http server http servlet http host name
returns the default route to use for the default route
returns the number of connections accepted by this connection
returns the content length of the content
writes the current data to the specified output stream
tests the cookie path
register a handler for the given pattern
unregisters the specified pattern
starts the server
stops the server
returns the port number of the service
tests the domain case
tests that the cookie is propagated to the header
returns the host name of the socket
test that setting the cookie expires attribute is set
tests that the cookie is valid
tests that the cookie for the cookie header is correctly set
returns the address of the endpoint this socket is connected to
tests that the cookie for the cookie header is correctly set
tests that the cookie for the cookie header is correctly set
test the of the second domain level cookie
tests that the cookie name is set correctly
tests the cookie names with the correct cookie
tests that the cookie is valid
test the of the cookie
opens the connection to the connection
this method is called when the user presses the response
create a new scheme registry
test the cookie method
test the socket connect method
tests the secure cookie method
creates the default http params
tests the cookies of the cookie with comma separated values
tests that the domain is sensible
tests that the cookie name behaves with blanks
tests the validation of a valid domain string
test cookie header
tests that the cookie name starts with the correct cookie
test cookie header
test that authentication challenge authentication is not supported
test that the cookie is valid
tests the second domain level cookie with the default cookie
test the match cookie path
tests that the cookie valid matches the cookie
test the cookie with a cookie
test the reject cookie
check that the cookie expire for the
write the current image to the given output stream
returns the total length of the body part
test that the cookie value is null
setup the test
setup the test
tear down instance variables
tear down the test
checks whether the text is empty
checks if the date time is correct
setup the test
tests format of the format
tear down the test
checks the decorated object
setup the test
tear down the test
returns true if the is
sets the flag
visit the end of the
this method is used to return the name of the method
maps a field name to a field name
returns the name of the type
find the child with the given index
sets the label to the given label
returns the label for the specified label
returns the next file format
quits the application
returns true if the text field is modified
creates a new document
sets the text panel to the given text panel
opens the document
saves the document to the given format
saves the document to the document
sets the file to be used for the file
sets the format of the formatter
print the text in the current document
returns the format of the file
close the dialog
saves the text to the file
returns the text of the text
returns the title of the
initializes the renderer
returns the metric metric for the given map
applies the font attributes to the given font
maps the given map to the given location
returns the first character of the character
returns the character at the current position
returns the next character in the iteration
returns the character at the end of the iteration
sets the position of the current position in the text array
returns the begin index of the character
returns the end index of the end character
returns the index of the character in the
returns the run start of the run
returns the run start of the given attribute
returns the run limit for the current run
returns the number of run limit for the given attribute
returns the map of attributes
returns the value of the specified attribute
returns the attribute of the attribute
compares this code text code object with the specified
returns true if the given text equals this one
returns the hash code value for this code array buffer code
returns true if the given text is less than the other
assigns the text to the given text
returns a string representation of this object
test the method
saves the document to the given format
ask the user to save the current file
send a code code to the code code
sends a message to the receiver
this method is called when the panel is added to the
returns the color of the back icon
sets the back color of the
returns the text panel
returns the ruler object
returns the leading spacing between the current
returns the first line indent
test the mod
returns the number of valid lines in the given text
returns the hash code value for this
returns the type of this object
handles the resize event
creates a new character iterator
inserts a new text into the text area
returns the line number of the given offset
inserts a new text into the table
maps the given code to code coordinates code to code
returns the style of the character at the specified position
returns the start position of the start of the given position
returns the character style for the given character
returns the paragraph limit in the given position
returns a paragraph style at the given position
returns the time stamp of the event
sets the iterator to the values of the specified position
checks if the given tab is contained in the tab
adds a new tab to the list of tabs
removes a tab from the list
returns the minimum size of the
move a tab
this method is used to set the size of the
removes the font styles from the font
this method is called when the command is made
modifies a given character to a styles existing
modifies the paragraph styles in the given paragraph
resets the range to the same size as well as the
returns the range of
returns the number of in this range
description of the method
returns whether or not the view is scrollable
sets whether the view is scrollable
returns whether the scroll bars visible or not
sets whether the scroll bars are visible
returns whether or not the user is selectable
sets the selectable
returns the value of the editable property
sets whether or not this text is editable or not
returns the
sets the
returns the default values for the default values
adds a default values to the default values
this method compares the two objects
returns the hash code for this object
prepares the text for the text editor
adds a listener to the list of listeners
removes a listener from this listener
sets the text
appends the given code text code to the end of the list
adds a listener to the broadcaster
inserts a new text into the document
replaces the given range of text and replaces it with the given
removes a listener from the list of listeners
returns the length of the text in the text area
returns the text in the text area
returns the selection start
sets the text of this node to the given text
returns the end position of the selected text
sets the selection start
sets the selection end
appends the given text to the end of the text
sets the caret position
selects the specified selection start
selects all the text in the list
inserts a new text into the text position
returns the format width
returns true if the given offset is a paragraph of the right
returns true if the last action can be undone
returns the text length of the text
returns true if the command can be redone
draws the selection
returns true if the clipboard is empty
returns the text component
returns the default values for the default values
returns the selection of the given key
returns the start position of the selected text
returns the selection of the given key
cuts the selected text
returns the end position of the selected text
copies the selected object
pastes the content of paste
sets the selection start to the specified position
clears the bag
sets the selection end
undoes the last edit operation
redo the last undone operation
sets the position of the caret
returns the size of the command log
sets the command log size
selects the text in the text box
clears the command log
modifies the given style on the selection
selects all the text in the text
modifies the style on selection
returns the format width
returns the remap remap
sets the key to remap
returns true if the text component is left to right
returns true if the file was modified
sets the modified state of the file
returns true if the action has been marked as undone
returns true if the action has been performed
returns true if the clipboard is not empty
returns the default values for the default values
returns true if the clipboard contents are
cuts the selected text
copies the selected text to the copy
draws the text on the given graphics object
scrolls the selection to the bottom of the text area
paste text from the text control
scrolls the caret to the bottom of the current caret
clears the text component
undoes the last action
validates the line number
redo the last change
returns the size of the command log
sets the size of the command log
clear the log text
modifies the given style on the selected text
calculate the bounds of the component
modifies the on paragraph style for this component
gets the remap remap
sets the caret to the caret position
sets the key to the remap copy
returns true if the edit behavior is modified
sets the modified state of the event
returns the number of elements in this table
returns true if the style table is empty
returns true if the receiver contains the specified key
returns true if the specified value is already in the map
returns the value to which this map maps the specified key
returns true if the list contains the specified element
returns true if all elements in the collection are contained in the
this method is not supported
returns an enumeration of the elements in this list
throws unsupported operation exception
returns an iterator over the elements in this collection
this operation is not supported
description of the method
removes the first occurrence in this list of the specified element
clears the cache
adds all elements in collection to the end of this collection
removes from this collection all of its elements that are contained in
returns a set view of the keys contained in this map
removes all elements from this collection
returns the key set for this key
adds a new element to this set
returns a collection view of the values contained in this map
adds a set of attributes to this set
determines the intersection of this set with another set
returns a set view of the mappings contained in this map
set the set of attributes to this one
adds a new attribute to the table
adds a attribute to the map
adds a new attribute to the map
returns true if the event type is a type
removes an attribute from the table
sets the text panel to listen to the given text
removes the attributes for the given element from this set
returns the back color
removes the attribute map from the table
returns the intersection of this set with another one
sets the back color of the
put all the static elements in the map
returns the locale for the specified locale
returns the locale for the specified locale
returns the locale for the specified locale
returns the value of the property specified by the given property name
returns the value to which the specified locale is not already
registers a new object to the server
registers a new object as a factory
registers an object with the given factory
returns the kind of this transition
gets the value of the property
choose a name in a group
gets the value of the property
returns the descriptor of the current state
returns the value map
returns the canonical locale for the current locale
returns true if the specified version is acceptable for this
returns the current locale for the current locale
pops up the fallback file
sets the value map map
checks if the given id is a fallback
returns the index of the first character in the
creates a new entry in the given service
converts a map to an index
returns the display name for the given locale
set the value to index
checks if the given id is a
returns the short representation of the short
returns the set of
indexes the given array of indices
create a new object from a given key
returns the id of the
returns the
returns the descriptor of the current descriptor
returns the set of available
create the resource bundle for the given locale
returns true if this is a fallback
returns true if the given id is a fallback or not
returns the locale for the locale
create a new instance of the specified service
sets the to the given map
returns the value associated with the specified type
returns the additional data for the specified column
returns the value of the specified field as an object
return the key of the given key
moves the pointer to the specified offset
reads a line from the input stream
resets the internal state to its initial state
resets the stream to the stream
handles the default value of the given key
returns the set of in the
returns a set of keys that are not already stored in the
returns a string representation of this object
returns the display name for the given code name code
read the lock
release the lock
write the semaphore to the write lock
release all write locks
returns the display name for the given locale
returns the first character of the first character
returns the current character
returns the next character in the iteration
returns the character to the previous iteration
sets the position of the current position in the list
begin the index of the beginning of the
returns the end index of the end of the end
returns the index of the index
clones the object and returns a clone of this object
returns a code sorted code whose display names are shown
adds a listener to the list of listeners
removes the specified event listener from this
returns a view of the display names of the locale
notify the listener that this thread has been changed
queue the queue to be the specified array
the thread run method
returns a code sorted map code whose names of the
returns a view of the display names of the specified locale
returns the hash code for this object
compares two cv objects for equality
compares the current object to the specified one
gets the iso code
registers an object with the given id
returns the default fraction digits number of the current
returns the rounding increment value
register a new object to the factory
returns the iso code string code
re initializes all the factories
sets the time
returns true if this is a default
sets the date
marks the default default state as default
creates a new key
set the julian day
clears the caches
clears the service cache
returns the date
returns true if the given listener is a
returns the julian day of this time unit
notifies listeners about changes to the service
returns the julian date
returns the stats of the stats
returns the julian date
returns a string representation of this xmlclass descriptor
returns the
returns the year of the given year
returns the local
returns the month of the given year month
returns the length of the month
calculates the time in milliseconds
returns the length of the year in the month
sets the time in millis to this time zone
returns the length of the month
returns the length of the year
returns true if the specified character is a soft dotted
returns the sun position
compares this calendar to another
returns the time in nanoseconds for the specified time
checks if the given calendar is equivalent to this date
handles the given date and return the maximum number of records
returns the first date after the first occurrence of the specified date
returns the first lowest between the specified date and ending date
returns true if the date is on the date
returns the hash code value for this list
returns true if the specified date is between this recurrence
returns the display name for this locale
returns the limit for the given type
returns the extended year of the
returns the age of the moon
returns the length of the month
returns the keys in the bundles
compares the specified object with this set for equality
returns the hash code of this object
returns a code date format code for the given date
this method is called when the user selects a field
compares the specified number of objects to the time
returns the moon phase
adds a amount to the current round
returns the raw offset of the current object
compares two objects for equality
returns a string representation of the object
compact the internal data
creates a new moon point
returns the hash code value for this
returns the number of months between two
this method is called when the value of the
returns the number of days in the days
compacts the cache
checks if the given is a term
compares the specified object with this code char code
compute the fields for the given date
indicates whether the specified time period is after the specified
sets the rule at the start of daylight savings time
returns the minimum fraction of the given field
calculates the julian day of the
returns true if the year is a leap year
returns true if the other object is equivalent to this
returns a hash code value for this object
returns the minimum number of the field that the field is
returns a string representation of this coordinate
returns a string representation of the object
converts the into a string
returns a string representation of the arc deg
returns the line delta of the line
returns the display name for the given code name code
creates a new applet
sets the date format to the pattern
format the date time format
this method is called when the text is
called when the user changes the time zone
returns a date format for the given date and time
notifies the calendar that the item has changed
returns a code date format code object that represents the date format
returns the insets for the text area
sets the style of the balloon
sets the border thickness
sets the gap between the border and the border
sets the color of the border
sets the text font
returns the font for the text
sets the text of the border
sets the value of the code label component code
this method is called when the user presses the field
resets the counters
returns the next available
ensures that the current character is composed of the
returns the number of characters that are stored in the
returns the composition of the two bytes
returns the decomposition
returns a string representation of the object
test of method of class
returns a string representation of this date
test the of the
test method for
converts a year month to a string
returns a string representation of this date
this method is called by the calendar after
this method is called by the to update the time
compare two
compares this object with the specified object for equality
test
test method for
test for singleton instance
converts a year month to a string
converts utc date to string
test with a
test the of the fields
test for month
test that the default field values are stored in the default
returns the operations per iteration
returns the number of events per millisecond
this method is called when the gc is free to start
returns the test hash map
returns the method for the test method
returns the limit for the given field
returns the day of week of week of week of week
this method is used to convert the date to a
this method is used to convert the date time format
test method for
runs the
returns true if the given date is a date
test of date time zone method of class
sets the date and time zone
sets the data
the date time and the date
updates the time of the time
returns the newest best of the newest most recently used
returns the alternate field value for the specified field
test method for
validate the fields of the fields
validate the given field
returns the target of the given target
returns the target class name for the given target name
returns the inclusion of the inclusion
tests to string method
returns the length of the month
returns true if the module is valid
validate the method name
returns the description of the test module
returns the description of the method
opens the module
opens the test data
returns the data map
returns the data map
returns the next settings
returns true if the next case is in the limit
returns the length of the year in the month
format a rule
test method for
this method is called to compute the days fields
format a

returns the name of the field
test method for
try to get the number of the
tests the available locales
format the format
format the date format
format a float field
format the format
format a float field
test method for
format the format
format the format
format a float field
format a float field
format the format
format a float field
format a float field
test for
test the parse method
test the date format
some checks for the constructor
test prefixing of the decimal format
test the exponent of a decimal format
january 1st is a date january 1st is a
format a date format

test for a digit
test the maximum number of numbers in the
test format date format
test that the method parsing whitespace
test that get exact format count match method
test that the white space parsing whitespace
test of complex format method of class com
test method for
return a sorted set of the given display names
returns a view of the given locale based on the given locale
returns a view of the given display names
called when the user changes the
returns a string representation of the current hello
adds a listener to the registry
test the
the format of the
test of string method of class big decimal
logs the given character set to the log
test simple testing
test the case of a test case
returns the data map
creates a new test data
returns the test data
format a format
returns a list of all test data names
sets the maximum value of the property
returns the next settings data map
returns the next case in the case of the
parses the format of the
test the of the
test of m method of class org
test for format
test of set maximum float method of class
test that the is correctly formed
test of get method of interface java
test method for
test the index of the first character of the
test of format method of class
test the of the
handles success
converts a list of conversion to the conversion
tests the keyboard action
tests the of the
get the data data
returns the input stream for this input
sets the input stream to use for reading
checks if the data is equals to the data
append data to the buffer
returns true if the given string is a valid data location
returns the data number as a number
returns the next token in the queue
accept the given
accept a new
test the
checks if the value is a duplicate of the given value
tests the compound of a compound
test method for
tests the filtering
adds a new array of values to the set
removes elements from the list
returns the capacity of the data array
sets the capacity of the receiver
shrink the capacity of the buffer to be read
returns the element at the specified index
returns true if the list contains the specified value
returns an enumeration of the values in this array
validate the comparator
test that unicode literals are correctly escaped
test unicode
test the cursor offset and
tests that the variable is set correctly
test of inter inter method of class
sets the text of this text
tests the compound filter
test method for
returns the resource bundle
remove a from the registry
returns an enumeration of the
returns an enumeration of all available sources
returns the enumeration of the names of the given source
returns an enumeration of available macros
tests the inverse of an inverse express compound
converts a string to a string
returns true if the value is equal to the specified value
adds a match set to the list of matches to the given
appends the specified digit to the receiver
tests the mechanism for a
returns the big integer value of the specified integer
returns true if the given number of characters are rounded
test for null inverse test case
test of method of class
test of method of class
test of get property set method of class properties
returns a clone of this code code
sets the code set code of the elements in this set
sets the pattern to be used as the
apply the specified pattern to this pattern
test for bug
convert the pattern to a string
test for bug
test method for
returns the number of elements in this range
test method for
returns true if the queue is empty
test of output set method of interface java
test the rule ranges
ensure that attempting to post context
adds a match set to the union of this code code
returns the index of the specified character
returns the character at the specified index
test of wrap method of class org
this method is used to convert the specified rectangular region to a
converts a string to a string
returns the code code whose values is the range of the
test of anchor method of class org
removes the specified range from this set
returns an iterator over the character set
returns the current value of the
moves the pointer to the previous point
sets the maximum length of the
sets the index to start
moves the current point to the position
moves the iterator to the next element
checks if the range contains the specified range
lookup the category
returns true if the specified set of sparse elements are contained in
build the list of characters
returns true if the iteration has more elements
returns the next character in the sequence
returns the character to be used for the decomposition
checks if the given string is contained in the list
returns true if the specified range contains the specified
returns true if the given code code is contained in this
checks if the string contains any occurences of the given string
translate a pattern from a regular expression
convert the pattern to a localized format pattern
sets the pattern to be used for formatting dates
create a builder to be used in the
test of any x method of class
returns the equivalent of all elements in this set
returns the current symbols format
test of rule pos
resets the current state of the current thread to its initial state
returns the next available string
returns the number of in this
sets the compact value to be used for the data
returns the at the specified index
returns the source set of the source code
returns the target set of the target set of the target set
computes the maximum context length for the current
compares this code unicode code field to the specified object
returns the hash code for this object
returns the hash code value for this
returns a string representation of this pattern
returns the plus sign
sets the new sign
returns the pad character
set the pad character
returns a hash code for this instance
adds a replacement set to the set of unicode
returns the source of the given source
reverse the order of the given direction
sets the currency
adjust the limit of the delta values
returns the text
sets the text of this text
lookup the category
returns true if the given position is a grouping position
build the rule list
sets the value of the property category
build the rule list
set the close over the range of the
returns true if the value is equal to the specified value
adds a match set to the list of unicode
reset the match
adds a replacement set to the set of unicode set to the
close the given
sets the decimal format symbols for this currency
sets the next token with the specified parameters
makes the lts rule set to the fraction rule set
compares two rules for equality
returns whether the fraction is a fraction fraction
format a long to a string buffer
returns a string representation of this token
formats a double to a string buffer
returns true if this dialect is a null substitution
returns true if this is a modulus
sets the prefix that will be prepended to the
returns the index of the first occurrence of the given string array
transforms a number from the number
compares two values for equality
computes the value of the rule with the given value
calculates the upper bound of the interval
returns the divisor of this rational number
sets the divisor of the constant appearing in the natural of the
inserts a string representation of the given code
compares this substitution object to another
formats a double into a string
transforms the given number to a long
the states of the state of the
computes the number of the transform in the given number
computes the value of the rule with the given value
calculates the upper bound of the upper bound
compares this substitution object to another object
description of the method
transform a number into a double
sets the multiplier for this
computes the value of the rule with the given value
sets the rounding increment value
returns the number of the current transform
sets the rounding value
transforms a number of points into a double precision floating point number
computes the value of the rule with the given value
returns the rounding mode
calculates the upper bound of the value
sets the rounding mode
returns the number of the transform
returns the format width
transforms a number of numbers into a double
sets the width of the format
returns the pad character
returns the number of the transform in the code code
clones the underlying code
sets the pad character
transforms a number of numbers into a double precision floating point number
returns the pad position
compares this substitution object with another
sets the pad position
returns the number of the current
returns true if the green notation is used
converts a number to a number
sets the notation
calculates the upper bound of the value
returns the minimum exponent of the digits value
compares this object against another
sets the minimum exponent for the minimum digits of the
returns the end index of the end of the end
returns true if the sign of the exponent is shown
returns the first lowest element of this iterator
parse the string at the end of the list
sets the sign of sign
returns the last index in the list
tests if the specified character is a matcher
returns true if the specified character is a
returns true if this dialect is a null substitution
returns true if the is a
sets the uppercase flag
checks if the given output is valid for this file
returns the number of secondary grouping
returns true if the given offset is a boundary
checks if the input is a valid input
parse the given rules
sets the zone strings
sets the size of the secondary grouping
sets the local pattern chars
parse the rules
returns the hash code value for this
sets the option value
sets the range of the variables
returns a string representation of this rule
gets the option value
checks if the variable range is a valid range
suppresses the backup backup
returns the text in the text
formats a double to a string
set the rules for the normalization rules
returns the maximum number of in the current context
formats a code rule code format
adds a rule to the set of
returns the length of the text
returns the context length
returns the segment segment at the specified segment
returns the text of the text
returns a clone of this decimal format
set the segment of the given segment
returns a string representation of this code anchor code
sets the text
adds a variable to the buffer
adds a replacement set to the set of unicode set to the
returns a string containing a substring of this
returns the offset of the buffer at the given offset
replaces the text in the text field with the given text
copies a range of data to the destination
sets the text of this text
set the position of the given position
lookup a matcher that matches the given matcher
sets whether or not the parsing mode is lenient
indicates whether some other object is equal to this one
returns a for the given
converts a boolean to a string representation
returns the source set of the source code
returns true if parsing is enabled
returns the hash code value for this
returns the target set of the target set of the target
returns a string representation of the object
sets the default rule set name
sets the text of the code text code
returns true if the component is visible
initializes the default rule set
sets the maximum context length for this
sets the filter
converts a to a string representation
returns the code unicode set code
returns the target set
sets the interceptors to the given list interceptor
clears the interceptors
copies the interceptors to the interceptors
register a new request handler
unregisters a pattern
make a copy of the basic rtcp processor
sets the handlers
register a new object to the map
unregisters a pattern
sets the handlers
returns true if the pattern matches the given pattern
returns the locale for the given locale
returns the version of this protocol
returns an iterator for the token
factory method for creating entities to the
factory method for creating entities serializer
factory method for creating a new http response factory
reads the bytes from the input stream
this method is used to consume the next chunk of data
returns the chunk size
parse the response header
binds the socket to the given socket
writes a string to the buffer
creates a new http host http host
factory method for creating a gdata http request factory
returns the host name of this host
returns a string representation of this host
copies the parameters to the local copy occupant
returns the parameter value
removes a parameter from this parameter
set the parameter to the given value
sets the parameters of the given array of parameters
returns true if the parameter is set
returns true if the parameter is set locally
clears the parameters
creates and returns a copy of this object
copies the parameters from the given parameters to the given
returns a string representation of this object
returns the next occurence of the given tt from tt
returns whether the header with the specified index is not in the
create a new name value pair
creates a protocol version version
create a token from the token
returns the first header with the specified name
checks if the given header contains the header
returns an iterator over the header values
returns the token separator for the given token
returns an iterator over the header with the given name
returns the token end of the token
skips over all whitespace and the next character
sets the maximum integer digits value for this field
prints out the length of the elements in the header
returns true if the token is a separator token
initializes the buffer with the specified buffer
checks if the given character is whitespace
estimate the length of the header
returns true if the given character is a token char
returns true if the given character is a separator
estimate the maximum number of parameters for the given parameters
returns the protocol version of the protocol
returns the request line
returns the length value of the given string
returns true if the given character is a separator
checks if the given character is a unsafe floating point
returns the reason associated with a code
sets the minimum integer digits value for this field
returns the content type of this header
returns the content encoding
returns true if the is chunked
sets the content type
repeat action false
sets the length of the content
sets the content type header
sets the content
sets the content encoding
set the content encoding
returns true if this is a streaming
sets the value of chunked
returns true if the content is a chunked entity
sets the currency to be used by the
sets the maximum number of digits to fraction digits
sets the minimum fraction digits to the specified number of digits
returns the content of the input stream
creates the maps of the maps map
returns the version of this protocol
returns the reason associated with the given status code
adds a mapping from the given string to this mapping
creates a new
returns the duration of the audio
creates a new allocator allocator buffer allocator allocator allocator allocator allocator allocator
creates a connection to the session
creates a connection to the session
creates a connection to the session
creates a connection to the session
prepares the encoder for the given message
throws an exception if the current connection is not closed
adds a channel to the channel
adds an exception to the queue
sets the exception handler
returns the session request
processes an event
returns the attachment of the current session
returns the channel
queue a session to the session
sets the exception handler
add a channel to the channel
handles runtime exception
initializes the socket
waits for the timeout to wait for the thread to wait for
closes all sessions
closes the channel
closes the active channel
shutdown the shutdown thread
shuts down the core server
waits for the shutdown of the thread
register a new pattern
sets the handlers
called when a response is complete
returns the mode of this
sets the output mode
sets the input mode
expand the capacity
ensures that the capacity is a capacity of the capacity
returns the capacity of the buffer
returns true if the data has been set
returns the length of the buffer
returns the number of bytes that can be read
returns the cause of this exception
opens the message
opens the window
opens the compose window
resolves the given file to the given file
opens the file with the given file
show the url
adds a listener to the button
remove a listener from the button
returns true if the engine is available
returns true if the browser is a browser or not
sets the path to the browser full path
returns the name of the
overrides the super method to provide the url
notifies the component that the panel has been added
removes the splash screen
initialize the object
disposes the resources associated with this browser
returns true if the engine is available
returns true if the browser is a browser or not
returns true if the auto dispose is disposed
the
sets the bounds of this component
initializes the
returns the engines map
returns the name of the
removes the browser engine from the engine
returns the url for the event
checks if the engines engines
sets the url to the event handler
returns the current active engine
set the url to the specified url
set the url to the given url
returns the description of the mime type of the given mime type
get the description of the file extension
returns the mime type path to the given association
get the list of file extensions for a file
steps the current state
get the mime type for a file extension
returns the icon file name for the specified mime type
get the icon file name for the given file
returns the key file path for the given association
returns a list of all the actions that are currently registered for
get the action list ext with ext ext list
returns true if the file extension is already exist in the file
forwards the event to the event handler
returns the system to be used to calculate the system
returns the mime type of the given association of the assoc
refresh the event
returns the key file path for the given association
stop the event
returns the name of the given association of the given association
print the script
sets the content of this window
create a file with the given path
returns the content of the event
executes a script script
returns true if the back button is enabled
returns whether the forward is enabled
checks if the url is a url
returns true if the specified file is a valid file
opens the window
waits for the to wait for a result
returns true if the file is editable
edits the file
returns true if the file is printable
prints the current file
parse a subject
parses the body of the given string into a string
opens the message
open the
construct a string representation of the
get the description of the file
get the description of the file extension
returns the url for the given url
get the list of file extensions for a file
get the mime type for a file extension
get icon file name
returns the icon file name for the given file extension
get the action list by the mime type
get the action list ext with ext ext
returns true if the specified mime type exists
returns true if the file extension is already exist in the file
returns whether the mime type is currently in the current mime type
returns the current file extension for the current file extension
returns the content type of the backup
returns the
returns the backup file name
opens the
sends message to the server
opens the message
opens the dialog
returns true if the file is a link file
checks if the file is editable
edits the file
returns true if the file is printable
prints the current file
returns the volume of the audio device
set the volume of the audio file
update the volume
set the menu to the given argument
returns the volume of the
set the volume of the volume
adds a property change listener to the listener list
method to listen for changes in the given observable
set the menu to show
returns true if the docking menu supports dock menu supported
returns the free space of the file
returns the total space in bytes
returns a list of all the files in the list
filters the file list from the file
returns a list of all the files in the list
recycles a file
returns the free space of the file
called when the song is changed
sets the provider
returns the provider
initialize the page
returns the icon for the specified name and size
returns the theme name
sets the theme for the given theme
returns an iterator over all groups
initializes the
returns the group with the given name
returns the theme of the
returns an iterator over the entries in this map
sets the theme for this theme
get a string from the given name
returns an iterator over all the strings that match the given name
returns an iterator over all the strings that are not
get boolean value
get an integer entry from the given configuration entry
get the value as a float
sets the visibility of this window
gets the visibility flag for this object
sets the size of the image
returns the size of the surface
sets the layout manager to use for laying out the layout
returns the layout manager for this layout
sets the location of the location
returns the location of the
sets the auto hide flag
returns the auto hide flag
adds a listener to the window
remove a listener from the list of listeners
returns the current binder
demonstrates custom addition of custom area
demonstrates how to add a custom area to the panel
builds the custom area with the separator
test that the negative resize weight is not equal to a negative
tests that a row spec is correct
asserts that the two rows are equal
asserts that the given row is a
test that the negative resize weight is equal to zero
tests that a valid code code is a valid
asserts that the grid grid contains the given grid
asserts that the column is equal to the given column
checks that the grid cells are equal
asserts that the specified is
parses the size and output buffers
returns a string representation of this envelope
decodes the resize and returns the result
this method handles the property change event
sets the average character width
returns the insets of the border
creates a separator for the given label
returns the default font for the cached font chooser
returns the font for the title
called when the user changes the caches
sets the gap in the gap bar gap
adds a new code constant grid layout code to the list
returns a cell layout constraints for the given component
returns a string representation of this object
tests the base64 base64 string
tests the decoder
tests decode marker
test method for
test method for
test the hash method
test method for
asserts that the given string is a double
sum of all values
assert that the given source is a double
ensure that the is
ensure that is equal to equal to equal
ensure that the is equal to white
ensure that equal is equal to the
ensure that is equal to equal equal equal to equal
ensure that is equal to equal equal equal to equal
ensure that is equal to equal equal to equal
ensure that is equal to equal equal to equal
ensure that equal is equal to the
ensure that equal is equal to the
ensure that the ray is equal to the same distance
ensure that equal is equal to the
ensure that equal is equal to the
ensure that equal is equal to the
test method for
test method for
test method for
test method for
test method for
test method for
returns the next object in the list
returns the next element in the iteration
calculate the hash value for the given hash code
returns true if the is
returns a iterator over the iterators of this code set code
returns the object that is used to convert the given class
this constructor is called by the compare constructor
returns the digest for the
sets the current position to the specified position
casts the message to a string
casts the message to a string
copies the array to a copy of this object
remove a range of the specified value from this
sets the new value of the new base
returns a string representation of this object
returns the current value of the complex number
returns the value of the object as an object
implements the standard method
adds a new row to the end of the list
adds a new element to the end of the list
returns a clone of this code vis object code
discards all elements from the specified array
returns the element at the specified position in this list
returns the base array
sets the value at the given index
this method lets the native base class to the underlying array
returns whether the other is compatible with this
this method is called after the has been processed
inserts the specified element at the specified position in this
adds a new object to the list
lookup the named attribute
returns the element at the specified position in this list
replaces the element at the specified position in this list with the
find the module for the given name and the module name
returns the name of the sub element
returns the value at the specified position
returns the value at the specified position in this
returns the current value as a py object
equivalent to the standard python array method
cleans up the thread
return the value of the attribute with the given name
returns the length of the message
returns a string representation of this object
appends the given value to the end of the list
the
returns a clone of this code vis em code
removes the object at the index
remove a range of values from the given range
this method is used to translate the value of the given
this method is used to translate the value of the
this method is called by the framework when the
reads a single line from the input stream
this method is used to convert the given string to the
returns the object for the ith time
returns the type of this
this method creates a new iteration for the given value
returns the
inserts the given index into the buffer
removes the object at the index
returns the repeat count of the given repeat number
returns the current list of the current values
returns the
returns the current value as an object
return the value for the key
update the object
return the value for the key
pop the key and return it
returns a copy of the dictionarys list of values
returns the index of the object at the end index
pop the last item
sorts the list
returns the current value as a py object
returns the class to use for the class
returns the name of the class
return the value of the attribute with the given name
initializes the object namespace
return the value of the attribute with the given name
initializes the objects namespace
set the sql type for a prepared statement
set the sql type for a prepared statement
equivalent to the standard python method
generate a for a given name
equivalent to the standard python method
get the result of the sql statement
equivalent to the standard python method
the python method
equivalent to the standard python method
equivalent to the standard python method
equivalent to the standard python method
equivalent to the standard python method
equivalent to the standard python method
equivalent to the standard python method
equivalent to the standard python method
adds a processor to this processors
removes the processors processor
process the info stream info
this method is used to deliver the to the
process the frame
returns the number of buffers
resizes the buffer to the new size
this method is called to indicate that the buffer is available
equivalent to the standard python method
empties the data
returns the number of bytes that this is available
append a byte to this buffer
returns the data at the specified index
this method returns the value of the ith parameter
writes the header information
writes a space to the output stream
resets the bit set to zero
sets the seed for the random number generator
returns the
returns true if the bit buffer is a byte buffer
compute the bit left number of the alignment
returns the input bytes
write bits to the buffer
returns the value of the
reads the bit value from the input stream
returns the value of the
returns true if the buffer is a byte aligned
reads a bit from the underlying stream
returns true if the buffer is consumed by the buffer
returns the next bit from the bit stream
returns the number of bits left for the alignment of the
reads a bit long from the stream
returns the number of bytes consumed by the input buffer
equivalent to the standard python method
write the bits in the buffer to the buffer
reads a value from the input stream
write the current value to the given boolean
reads the next value from the input stream
reads a 64 bit unsigned integer from the current value
reads an int from the stream
decodes a byte array
reads an unsigned 32 bit integer from the input
pads the byte array to the byte boundary
flush the buffer
returns the total number of bytes read from the current stream
reads the next byte from the stream
close the file
skips a number of bytes
returns the total number of bits in the
reads the contents of the buffer
reads the contents of the given code byte code array into
sets the file pointer to the specified position
returns the total number of bytes that have been added to the
initialize the decoder
this method is called when the job info is encountered
writes the data to the buffer
checks if the socket is open
fills the buffer with the contents of the current
compare the xor and returning a new object
returns the audio file format for the given file
returns the audio file format for the given url
returns the audio file format for the given audio file
calculate the length of the block
returns true if the tei is a info
returns an audio input stream for the given file
returns a string representation of the object
reads an audio input stream from an input stream
returns a string representation of this object
returns the last element
writes the contents of the to the stream
returns the frame number of the frame
returns the sample number
returns the stream offset
sets the stream offset
writes the content of this object to the given stream
returns the length of the longest length
returns the idx th point of the idx th
returns the number of points in the polygon
this method is used to convert a stream info to a
writes the data to the
called when the frame is about to be processed
this method is called when the error is encountered
decodes the given file name to a file
write the stream info to the stream
analyses the given file
this method is used to write the to the
description of the method
this method is called when the error is encountered
decodes the given from the input stream
this method is used to convert a info object to a
this method is called when the spider is a
this method is used to parse the error message
get the crc value for this
set the crc value for this
returns a string representation of this object
this method is called after the size of the array
returns a string representation of this audio
returns the number of bits in the
returns the stream info object
returns the bit readed from the stream
removes a frame listener from this frame
sets the processor
sets the processor
reads a stream info object from the stream
reads the next frame from the input stream
reads the frames from the stream
reads a frame from the input stream
reads the id3v2 and from the stream
returns the decoded samples
returns the font for this view
shows the failure of the given test failure
clears the model
creates the menu item
starts the application
starts the application
paints the component
installs the label for the default component
installs a special border
creates the button area
creates the editor for the selected text
returns a code code code code code code code code code code
returns the button for the arrow button
installs the default values
returns the popup menu for the given popup menu
returns whether the content border is not empty or not
returns whether or not the content border is empty or not
checks if the component is still valid
determines whether the tabs should be resized
determines whether or not the code border code property
installs the default values for the given button
installs the listener for the install button
description of the method
ensures that the install method is recognized
installs a special border
returns the component that will be used to draw the button
returns the next button
replaces the editor with the given component
configure the editor
create the default divider
paint the component
uninstalls the default values
installs the default values
checks if the given component is in the parent frame
updates the component with the given component
installs the default values
creates a view
paints the component
creates the previous button
creates the next button
creates the editor
configure the editor to the given editor
returns whether the content border is not contained in the content pane
checks if the component is still valid
called when the tab is removed
creates the editor combo box
creates a layout manager for the current layout
returns the insets for the editor
returns the width of the editable button
installs the default values and installs the default values
paint the icon
paints the text of the given text
returns true if the button is pressed
installs a special border
initializes the class with the given table
installs the default values
returns true if the button is pressed
returns the size of the font
returns the font size of the font
returns the font size of the menu item
returns the control font size of the control
returns the insets of the border
ensures that the menu has already been added
paint the background of the menu item
description of the method
returns true if this is a
returns a string representation of this object
analyses the given component
description of the method
analyses the source
description of the method
returns true if the component is a decorated element
returns true if the component is a pane
sets the border of the given border to the given border
returns true if the given component is a perimeter of the given
returns true if the panel is logically special
analyses the given component
returns true if the component is a net beans status cell
checks if the component is a wrapper
returns the result border of the component
returns the net the of the border
this method is called when the is closed
returns the net the of the net
returns the border of the cell
analyses the latex
returns true if the border is empty
checks if the given border is a decoration
checks if the given border is a child of this border
returns whether or not the given border is a parent decoration
returns true if the component has any border
returns whether the border has a bevel border
returns true if the component is a decorated element
returns true if the component is a parent
returns true if the component is already in the container
returns whether or not the given component is a kind of
returns true if the given component is in the list split pane
returns true if the given component is a rectangle
returns the border of the border
returns the replacement border
returns the border of the split pane
returns the border of the bevel border
returns the border
returns the border of the border around the perimeter of the border
find the method for the given method
removes all properties from the specified properties
build the status of the given
the
copies a file to the given directory
deletes all files from the given file
checks if the two objects are equal
compares this object to the specified object
adds an element to the list
compares this object with the specified object for order
appends the specified element to the end of this list optional
adds a test to the collection
adds a many items to the collection
initializes the test fixture
adds all of the elements in the specified collection to this heap
adds all of the elements in the specified collection to this
method tear down is overwriting the framework method to
adds a new item to the list
test method for
adds all of the elements in the array for the specified array
creates a collection of the
test method for
builds the heap
test method for
clears the array
test of add method of class com
returns true if the list contains the specified element
test that the heap has been altered
returns true if the list contains the specified object
test the add method
test method for
ensures that the capacity of this array of bytes are capacity
tests the constructor of heap elements
test of clear method of class
returns true if this collection contains all of the elements in the
test remove max heap
tests the sort of random values
test of contains method of class org
ensures that the capacity of this array of bytes are the capacity
returns the index of the first occurrence of the specified element
tests that all the elements of the collection is contains all of
returns the index of the first occurrence of the specified element
test method for
removes the element at the index i
removes the first occurrence in this list of the specified element
returns true if there is at least one more element
test remove and set
returns the next element in the iteration
test remove all
removes the all elements of the specified collection from this
removes the element at the index
removes from this collection all of its elements in the
removes the element at the specified index
removes the element at the specified index
test method for
retains only the elements in this collection that are contained in the
removes the top element from the list
test method for
set the element at the specified index
retains only the elements in this list that are contained in the
sets the element at the specified index
sorts the list
sets the access expire time of the request
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the feature
this adds a property descriptor for the feature
this adds a property descriptor for the feature
creates a new adapter for an object of class
this adds a property descriptor for the id feature
this adds a property descriptor for the goto id feature
creates a new adapter for an object of class
this adds a property descriptor for the feature
this adds a property descriptor for the is final feature
this adds a property descriptor for the feature
creates a new adapter for an object of class
this adds a property descriptor for the goto id feature
this adds a property descriptor for the else item feature
creates a new adapter for an object of class
this adds a property descriptor for the item feature
this adds a property descriptor for the is feature
creates a new adapter for an object of class
this adds a property descriptor for the event feature
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the condition feature
creates a new adapter for an object of class
this adds a property descriptor for the action feature
creates a new adapter for an object of class
this adds a property descriptor for the is enemy dead feature
creates a new adapter for an object of class
this adds a property descriptor for the is feature
this adds a property descriptor for the feature
creates a new adapter for an object of class
this adds a property descriptor for the is feature
creates a new adapter for an object of class
this adds a property descriptor for the feature
this adds a property descriptor for the feature
creates a new adapter for an object of class
this adds a property descriptor for the feature
creates a new adapter for an object of class
this adds a property descriptor for the feature
creates a new adapter for an object of class
this adds a property descriptor for the feature
this adds a property descriptor for the item used feature
this adds a property descriptor for the feature
this adds a property descriptor for the room feature
this adds a property descriptor for the npc feature
this adds a property descriptor for the feature
this adds a property descriptor for the feature
this adds a property descriptor for the id feature
this adds a property descriptor for the is final feature
this adds a property descriptor for the is feature
this adds a property descriptor for the feature
this adds a property descriptor for the damage firing feature
this adds a property descriptor for the damage feature
this adds a property descriptor for the damage metric feature
this adds a property descriptor for the damage feature
this adds a property descriptor for the act name feature
this adds a property descriptor for the goto act feature
this adds a property descriptor for the description feature
this adds a property descriptor for the name feature
this adds a property descriptor for the name feature
this adds a property descriptor for the description feature
this adds a property descriptor for the id feature
this adds a property descriptor for the post description feature
this adds a property descriptor for the feature
this adds a property descriptor for the fire property feature
this adds a property descriptor for the post items description feature
this adds a property descriptor for the feature
this adds a property descriptor for the skill feature
this adds a property descriptor for the add skill feature
this adds a property descriptor for the feature
this adds a property descriptor for the description feature
this adds a property descriptor for the normal feature
this adds a property descriptor for the feature
this adds a property descriptor for the hidden description feature
this adds a property descriptor for the feature
this adds a property descriptor for the type feature
this adds a property descriptor for the north feature
this adds a property descriptor for the south feature
this adds a property descriptor for the id feature
this adds a property descriptor for the east feature
this adds a property descriptor for the damage feature
this adds a property descriptor for the name feature
this adds a property descriptor for the is feature
this adds a property descriptor for the feature
this adds a property descriptor for the damage feature
this adds a property descriptor for the damage firing feature
this adds a property descriptor for the damage feature
this adds a property descriptor for the feature
this adds a property descriptor for the init feature
this adds a property descriptor for the description feature
this adds a property descriptor for the damage metric feature
this adds a property descriptor for the complete text feature
this adds a property descriptor for the classes feature
this adds a property descriptor for the west feature
this adds a property descriptor for the init mana feature
this adds a property descriptor for the quest condition feature
this adds a property descriptor for the is locked feature
this adds a property descriptor for the mana feature
this adds a property descriptor for the feature
this adds a property descriptor for the strength feature
this adds a property descriptor for the unlock keys feature
this adds a property descriptor for the feature
this adds a property descriptor for the quest item feature
this adds a property descriptor for the feature
this adds a property descriptor for the is hidden feature
this adds a property descriptor for the is complete feature
this adds a property descriptor for the feature
this adds a property descriptor for the is feature
this adds a property descriptor for the xp earned feature
this adds a property descriptor for the room feature
this adds a property descriptor for the feature
this adds a property descriptor for the is hidden event feature
this adds a property descriptor for the npc feature
this adds a property descriptor for the armor feature
this adds a property descriptor for the armor type feature
this adds a property descriptor for the level feature
this adds a property descriptor for the feature
this adds a property descriptor for the feature
this adds a property descriptor for the fire feature
this adds a property descriptor for the feature
this adds a property descriptor for the experience feature
this adds a property descriptor for the skill feature
this adds a property descriptor for the goto id success feature
this adds a property descriptor for the classes feature
this adds a property descriptor for the goto id test feature
this adds a property descriptor for the feature
this adds a property descriptor for the gold feature
this adds a property descriptor for the text feature
this adds a property descriptor for the fail text feature
this adds a property descriptor for the init player actions feature
this adds a property descriptor for the feature
this adds a property descriptor for the fire feature
this adds a property descriptor for the feature
this just records the information
create a new model
this adds a property descriptor for the feature
this adds a property descriptor for the is male feature
this adds a property descriptor for the race feature
this adds a property descriptor for the creature class feature
this adds a property descriptor for the armor feature
returns the label for the specified type name
handles activation of the editor or its associated views
returns a diagnostic describing the errors and warnings listed in the resource
this accesses a cached version of the property sheet
adds a parameter to the list
sets the template to the given string
connect to the database
saves the to the
shuts down the server
set the status label
returns the initial admin password
shuts down the database
logs a message to the log
this method is called when the user is logged in
called by the logout method to print out the current user
returns the singleton instance
create an instance of
create a new operation
method for the method
add a new child to this node
removes a child from this
starts the sample
this method is used to deliver the current request to the
this method is called when the request is received
this method is called when the method is called
test of xpath method of class gov
test of xpath method of class gov
update the values of all the fields in the list
notifies all listeners that a input has been changed
adds a listener to the list of listeners
removes a listener from the list of listeners
returns true if the colormap is valid
sets the value of the property
sets the operator to use for the operator
sets the field
called when the editor is changed
returns the selected dialect factory
returns the units of work for the current
returns the name of the given object
returns the file location of the file
returns the index reader or index from the underlying reader
open a reader to open the given index
puts a property in the table
returns the default conversion pattern
configure the
returns the analyzer to use for the analyzer
returns the comp
set the tool to which this tool belongs to
loads the
this method is called when the is about to be set
returns the number of in the database
called when the user changes the control state
set the display mode for the display mode
returns the component that is associated with this object
update the node with the given node
sets the error reporter
called when the menu deselected menu item has been deselected
called when an entity has been added to the entity
remove the node from the scene
called when an entity is removed
description of the method
notifies this object that the master changed
this method is called when the selection changes
notifies the view about the coordinates of the coordinates
enables or disables touch events
reset the model to the default value
sets the selected attribute of the field panel object
marks an array of entity size as dirty
this method is called when the object is removed
this method is used to indicate whether the entity is
sets the location of the camera
initialize the
mark an entity as owned by the entity
marks a scaled entity scaled to the entity
this method is called when the animation is rotated
mark an entity as removed
returns the node
removes the node from the graph
this method is called when the selection changes
sets the value of the controlled field names property
add a new wrapper to the list of registered components
remove the given entity wrapper from the list
mark an entity as entity
sets the point changed to the current point
if the entity is an entity
this method is called when the xpdl is being
remove the from the scene
handles the click on the toolbar
initializes the internal state
removes the tool from the tool bar
changes the selected list of selected entities
copies the contents of the tree to another scene
adds a to the scene
set the xpdl root e e e institution
set the field to the given float array
sets the value of a field
get the value of a field
get the field value for a field
creates a sensor for the current device
set the local flag
set the tool to be used for the tool
initializes the wrapper
returns true if this object is transient
this method creates a new object
handles the click on the button
this method is called when the scene is
returns the value of the code undoable code
writes the transaction to the given output stream
remove a child element
handles the translation of the translation of the current entity
execute the command
undo the action to the model
executes the redo action
creates the default entity
rotates the given rotation
create a entity
returns the number of in the
initializes the reporter
clones this entity
sets the size of the matrix
compares this object against another object
undo the last command
returns the hash code of this object
sets the id of the entity
set the tool to which this tool belongs to
returns the position of the
sets the position of the entity
set the view mode
get the rotation of the rotation
sets the rotation of the rotation
description of the method
shutdown the browser
sets the tool
sets the properties of the given node
sets the properties of this node
returns the main scene
returns the model model for the given id
sets the bounds of the image
get the properties of the given property
returns the node property with the given name and value
sets the size of the image
returns the properties of the sheet
adds an association to the entity
adds a new association association to the entity
sets the size of the image
updates the wrapper with the given selection
remove the parent association from the cache
adds a segment to the segment
splits the segment segment to the given segment
removes the specified segment
updates the buffer image
adds a segment to the segment
move vertex vertex to the given position
sets the entity renderer mapper for this mapper
removes the segment vertex from the segment
returns true if the entity is segmented
sets the
mark the vertex as removed
sets the mode
returns the
marks an entity as dirty
sets the
returns the
sets the highlighted flag
set the display mode for the display
set the display mode for this panel
returns the
sets the
returns the
marks a scaled entity scaled to the
returns the selected vertex
set the rotation of the entity
sets the
returns the
display changed rotation
returns the current segment
request changed to the master
returns true if the vertex is selected
reset the model to the default value
sets the physical size of the image
returns true if the segment is selected
returns the segment sequence
set the location to the given url
called when the browser is changed
get the size of the
enables or disables the elevation
sets the fixed mode
called when the user changes the control state
returns the configuration elevation
returns true if the current mode is fixed mode
return the entity for the given entity
gets the multiplicity constraint
queue a new entity request to the given data
this method is called when the user picks a
this method was created in visual age
initializes the scene
adds a child to this entity
removes a child from this diagram
returns the child at the specified index
sets the flag that determines whether or not the given child
returns true if this node has children
mark an element as being
mark an entity as removed
fills the scene with the given entitys mp
returns the catalog name for the given file name
executes the strong strong strong strong strong strong strong strong strong strong
redo the last undone
deserialize the content of the node
returns the position of the given position
executes the strong strong strong strong strong strong strong strong strong strong
executes the strong instruction strong
undoes the last move
writes the given code method code to the specified output stream
move the given entity to the entities
executes the rotation
undoes the last move
add a global listener to the list of
update the position of the current object
updates the
sets the point changed to the current point
this method is called when the entity is over
updates the translation of the current position in the list
move the given entity to the end of the list
rotation in rotation
mark vertex as removed
mark an entity as marked as having been moved
marks a scaled entity scaled to the given entity
this method is called when the entity is rotated
reset the state of the navigation panel
handles the click on the button
handle the key released event
if the entity is an entity
handles the mouse entered event
mouse exited
method called when the view is changed
checks if the rotation is a rotation
sets the heading
returns the value of an attribute
returns the value of an attribute of the given element
remove the node from the scene
shuts down the browser
sets the reporter to use for the error reporting
returns the image for the given url
calculate the entity scales it
removes the node from the scene
adjust the rotation to the given rotation
reset the navigation state to the current state
called when the user changes the browser
shuts down the browser
sets whether the progress bar is loading progress bar
set the placement mode for the current entity
set the selection mode
move the entity
rotates the entity to the given entity
sets the zoom level for the current zoom level
this method is called when the entity is about to be destroyed
this method is called when the entities are removed from the
sets the directory to use for the image
highlight the tools
updates the scale of the entity
this method is used to generate tree codes
sets the value of the unprocessed attribute
set the buffer
sets the seperator
returns the seperator
sets the
returns the
sets the
returns the
sets the success
flush the stream
reads the next byte of data from this input stream
writes the given bit to the buffer
write the contents of the buffer to the output stream
writes the tree rewriter tree to the output
writes the given code tree code to the given code
read a tree node from the input stream
writes the index to the output stream
decode the input stream
job scheduler
starts the
stops the timer
the thread run method
this method starts monitoring the service
stop monitoring the server
shutdown the daemon
returns a copy of the metrics of the metrics
returns the cluster
returns the
returns the
returns the
returns the slope of the
returns a string representation of this object
returns true if the vm is up
the method to be invoked when the is removed
test method for
stub for custom
repeat method indicating that the has been flagged as a
test method for
test method for
this method is called when the user selects the
test method for
this method is called when the user selects the
this method is used to set the
this method is used to set the
returns whether the project specific options are in the options
returns the pref id
initializes the applet
returns the
initializes the preferences node
resets the statistics
configure the project
dispose of the resources
initializes the filter
demonstrates the of the plugin
performs the default action
reset the file
returns true if this class implements the specified java java java element
initializes the excludes and the excludes
initializes the search
reset the package name
performs the apply operation
reset the state of this object
returns true if the input source is a java source or package
returns true if the supplied java element is recognized by this
removes a command from the list
the action has been activated
selection in the workbench has been changed
removes all methods from the given methods
returns the project name
dispose of the mess
updates the text in the text
handle http get request
returns the selected file
creates the components
description of the method
called when the component has been resized
populates the tree with the tree node
initializes the servlet
sets the current style attribute
sets the current value of this code attributes code attribute
sets the current value of the code set scale code property
p update the url of the request
returns the sql context admin
returns the sql context for the given database name
returns the number of rules that are in the given number of
adds a new object to the list
returns the line source
remove all the lists from the list
sets the line source
sets the generic
sets the generic action
returns the id of the given string array
sets the abstract data types to the data types
add a and to the given values
insert the methods description here
returns the values of the given field
prints the current state
sets the values of the query
sets the
removes the given expression from the list of expressions
count the number of in the list
remove a from the list
returns the list of all the actions that are registered for this
returns the data abstract type of the specified variable
returns the variable of the specified variable
returns the generic type of the given
returns the context
returns the current context
returns the number of context
add a new context to the current context
adds an entry to the list
returns the meta rules of the
returns the abstract data type for the given ae
returns the
prints the list of actions to the system
returns the number of rules for the given application
creates the meta rules for the meta data object
returns the list of rules
deletes the meta rule
get the value of the generic property
returns the abstract data type
returns the default class path
returns the default images path
returns the default web page path
returns the default images path
get the list of types
returns the default web page client path
returns the default meta rules path
returns the list of generic types
sets the objects vector
add all objects to the list
returns the
returns the object with the given name
returns a new key for the given name
returns a string with the given name and value
returns a new key object for the new key object
returns the list
remove the object from the list
add an object to the end of the object
remove an object from the database
the current object is currently open
moves the object to the first object
sets the last element in the list
returns the generic
moves the cursor to the next element
moves the object to the previous index
checks if the given id is already in the list
check if the object name is an object name
returns the list of type num of list of type num list
returns the default format date
returns the list of type num objects of this list
returns the date value as a string
returns the date value as a date format
returns the date string from the date
returns the date
returns the date format for the given date format
returns the list of word words
returns the number of the word in the
executes a sql query to get a prepared statement
creates a class with the given class name
deletes a class from the database
creates a link for the given link
checks if a class is allowed to be
deletes a class link from the database
create a class with a new class
deletes a class
returns the maximum number of for the given word
returns the type of the word at the specified index
deletes a class object from the database
returns the number of words in the given word
create a new statement object
deletes a object from the database
select a statement with the given sql select and return the result
get the result of the execution of the
gets the connection
sets the word to be used for the given word
sets the word to be used for the given word
sets the list of to the given word
sets the of the given word
returns the value of the given state
returns the maximum value of the given state
returns the maximum value of the argument array
returns the value of the policy
returns the value for the given observation
returns the value of the given column in the
starts the observation
this method is called when the agent has been reached
clean up the
returns the agent state
saves the value of the function
load the value function from a file
builds a reward for the given step
sets the random agent state
returns the observation for the given state
returns the agents state
returns the number of variables in this chromosome
for the url of the
returns reward of the agent
reads the object from the stream
reads the object from the given stream
called when the observable object is triggered
print the state of the
generates the random mapping
returns the value of the x y position
updates the state of the
reward the reward
returns true if the agent is in the goal region
builds a reward for the given action
returns the maximum value for the given dimension
returns the minimum value for the specified dimension
returns the number of variables in this group
this method is used to convert the url to a url
builds a reward for the given action
returns the maximum value for the given dimension
updates the state of the
returns the minimum rotational velocity for the given dimension
this method handles the scrollbar events for the
for the url of the poster
sets the event repository
sets the building repository
sets the view count
returns the image dto object
setter for property image dto
returns the main file url
sets the main file url
returns the thumbnail file url
sets the thumbnail file url
sets the longitude
returns the location dto object for the location
setter for property location dto
returns the event dto object
sets the event dto
returns the application context
get the bean factory
sets the latitude
sets the building
returns the main file
sets the main file
returns the thumbnail file
sets the thumbnail file
sets the event
returns the type of this building
sets the type of the building
sets the location of the location
sets the events
this method initializes this
this method initializes id
this method initializes nome
this method initializes ok
this method initializes texto
this method initializes j scroll pane
this method initializes
this method initializes buscar
this method initializes btn
this method initializes btn
this method initializes btn
this method initializes btn
this method initializes this
this method initializes nome
this method initializes cpf
this method initializes
this method initializes btn
this method initializes remover contato
this method initializes
this method initializes data
this method initializes
this method initializes end
this method initializes end num
this method initializes end
this method initializes btn
this method initializes this
this method initializes
this method initializes por data
this method initializes inicio ex
this method initializes btn
this method initializes e
this method initializes por
this method initializes
this method initializes
this method initializes tipos
this method initializes
this method initializes j text field
this method initializes
this method initializes this
this method initializes btn
this method initializes id
this method initializes nome
this method initializes ok
this method initializes this
this method initializes id
this method initializes nome
this method initializes end
this method initializes end numero
this method initializes end
this method initializes j tabbed pane
this method initializes this
this method initializes tipo
this method initializes n
this method initializes tipo
this method initializes
this method initializes j jmenu bar
this method initializes j menu
this method initializes
this method initializes j menu1
this method initializes
this method initializes
this method initializes
this method initializes this
this method initializes j content pane
this method initializes j scroll pane
this method initializes j list
this method initializes this
this method initializes
this method initializes
this method initializes data
this method initializes
this method initializes
this method initializes
this method initializes rad
this method initializes rad
this method initializes this
this method initializes login
this method initializes senha
this method initializes texto
this method initializes j scroll pane
this method initializes
this method initializes this
this method initializes j content pane
this method initializes j scroll pane
this method initializes texto
this method initializes this
this method initializes fechar
this method initializes buscar
this method initializes
this method initializes btn sair
this method initializes this
this method initializes this
this method initializes id
this method initializes
this method initializes matricula
this method initializes j scroll pane
this method initializes j text field
this method initializes
this method initializes j button
this method initializes this
this method initializes j content pane
this method initializes lista
this method initializes j scroll pane
this method initializes
this method initializes j button1
this method initializes j text field
this method initializes
this method initializes j content pane
this method initializes
this method initializes nome
this method initializes
this method initializes this
this method initializes j content pane
compares this code connection code object to another
sets the maximum number of connections that will be closed
sets the maximum number of idle connections that can be used
sets the maximum number of connections that have been queued
sets the time to wait to wait for the pool
sets the ping query
sets the connection pool enabled
set the number of connections that are used to be used
returns the url for the resource specified by the given resource
returns the url for the given resource
returns a read only resource from the resource
returns a read only resource as an input stream
executes the given sql statement
executes the given sql statement
executes the given sql statement
returns true if the property with the specified name exists
returns true if the property name has a code value code
returns the sql statement used to execute sql statements
returns the statement id
build the list of all statements
extract the namespace uri from the
tests the method
check that the is working
returns the type of the property for the given name
returns the type of the property for the given property name
get the class for a property type
returns the class for a setter method
adds an object to the list of methods
parses the given reader
returns the setter method for the given property name
returns the getter for a property
parses the given node and creates a node
process the node
returns the type of the setter method
returns the getter for the given property name
returns a list of all the items in the database
start a new paragraph
start a new open before closing tag
start the rtf document after the current paragraph
write the prefix to the write
write the rtf suffix
writes the attributes of the current document to the current page
write the rtf suffix
writes the rtf suffix
creates a table cell that is merged with the given cell
write the rtf suffix
returns a builder that contains the given
start the document
returns the rtf color of the specified color
returns a builder to the given builder
returns the rtf color of the specified color
start the document
returns a builder to the given builder
called by the start of the document
dom level 3 wd experimental
the code code method
returns the products options values options values
gets the products options id
sets the products options values options value for this product
setter for property products options id
returns the language id
sets the language id
returns the id
gets the value of the products options name property
setter for property products options values
sets the
sets the products name
gets the products options value for this admin product
gets the products id value for this lead
sets the products options values to be used to supply the products
sets the products id value for this product
returns the of the
sets the new products price
returns the date of the added date
sets the date added
returns the expires date
returns the products id
sets the expires date
sets the products id id value for this admin promotion
gets the date status change
sets the date status change
returns the options id
sets the options id
returns the options values options
sets the options values options
returns the options values price
sets the options values price value
sets the price prefix value for this produit
gets the value of the products name property
returns the list of products that are assigned to the products
set the products name
setter for property products options
gets the value of the products description property
setter for property products options values
sets the products description
gets the value of the products url property
sets the products url
returns the products viewed viewed
called when the tree has been expanded
reloads the model
reloads the form model
gets the id value for this
sets the id
gets the value of the languages id property
sets the languages id value for this
sets the value for this curriculum1
sets the id
sets the name value for this
sets the image value for this
invoked when a mouse button has been pressed on a component
setter for property info
fire a table data changed event
returns the categories id
sets the categories id value for this lead
overridden to set the colors to the
sets the categories name value for this categories
sets the bounds of the component
reload the model
sets the categories id
sets the categories image value for this
returns the parent id
called when the user chooses to show the about box
returns the categories description
sets the categories description
setter for property products
returns the countries
gets the zone country id value for this country
sets the countries
sets the zone country id value for this country
sets the countries name value for this
sets the zone code value for this
sets the zone name value for this
sets the countries iso value for this type
sets the countries iso value for this type
returns the address format id
sets the address format id value for this admin order
invoked when a mouse button has been pressed on a component
sets the code value for this code code
duplicates a query and a collection of products
sets the image value for this
setter for property directory
duplicates a query and a collection of products
returns the value of the property
called when a drag enters is pressed
the platform specific implementation of the drag exit method
called when a drag operation is going to be dragged
called when the user changes the reload
called when the user changes the drop target
the drag gesture has initiated
handles the drag end of the drop event
called when the mouse enters a component
this implementation of code drag exit code provides a default implementation of
this implementation of code drag over do code does nothing
called when the drag changed event is fired
returns the background color of the header
gets the value of the orders status id property
sets the orders status id value for this admin order
sets the orders status name value for this order status
gets the value of the orders products id property
sets the orders products id value for this admin promotion
gets the value of the orders id property
sets the orders id value for this order
sets the products model value for this product
sets the products name value for this product
returns the products price
sets the products price value
gets the final price value for this candle
sets the final price
gets the products tax
sets the products tax value for this tax rate
gets the value of the products quantity property
sets the products quantity
setter for property orders products
sets the products options name value for this product
gets the value of the orders status history id property
returns the customers info id
sets the orders status history id value for this order status
sets the customers info id value for this admin promotion
sets the customers info date of time this session was last logon
gets the customers info number of customers info
sets the date added attribute of the project list object
sets the customers info number of customers info
gets the customer notified value for this admin customer registration
sets the customer info created attribute value for this admin customer data
sets the customer notified value for this admin customer
setter for property customer info date
gets the global products notifications
sets the global products notifications
gets the value of the orders status property
sets the orders status
sets the date added attribute of the object
setter for property last modified
sets the expires date value for this coordination context info
gets the value of the orders total id property
sets the orders total id
sets the date status change
sets the value of the ip address property
sets the clazz value for this
sets the time entry value for this
sets the time last click value for this
sets the last page url value for this lead request
returns the customers id
sets the customers id
sets the customers name value for this customer
gets the categories
set the categories
sets the products
sets the customers company value for this admin customer
returns the number of orders products
sets the orders products id value for this admin order
sets the customers street address value for this address
sets the products options value for this product
sets the customers value for this admin promotion
sets the products options values value for this product
sets the date added
returns the price prefix
sets the customers city value for this admin product
set the date of last modified
sets the price prefix
sets the customers postcode value for this customer postal
sets the customers state value for this customer state
sets the customers gender value for this customer permissions
sets the first first name value for this journey
sets the customers country value for this admin customer
sets the last last name value for this
sets the date of the database connection
sets the customers telephone value
sets the customers email address value for this admin promotion
sets the products id
gets the customers default address
sets the customers default address
set the value of products quantity
gets the customers address format id
sets the customers fax value for this admin fax
gets the value of the products model property
sets the customers address format id value for this admin promotion
sets the products model
sets the customers password value for this admin promotion
gets the value of the products image property
sets the customers newsletter value for this customer permissions
sets the delivery name value for this
returns the customers info object
sets the image for the image
sets the customers info
sets the delivery company value for this delivery company type
setter for property address book
gets the address book id
sets the address book id
sets the delivery address address value for this delivery address
sets the products price
gets the products date added attribute of the issue object
sets the delivery value for this
sets the street address value for this address
sets the value for this
sets the post code value for this fwtproperty
sets the products date added
sets the delivery city value for this fwtproperty
gets the timestamp of the last modified
gets the country id
sets the country id
set the date of the last modified time
sets the delivery postcode value for this
returns the date available for the products
sets the delivery state value for this
gets the countries
sets the date available
sets the countries
gets the zones attribute of the object
returns the weight of the products
sets the delivery country value for this
sets the zones attribute of the object
sets the weight of the products
gets the delivery address format id value for this delivery status
gets the products status value for this admin promotion
sets the delivery address format id value for this delivery service
sets the products status
sets the products name
gets the products tax product id value for this tax rate
sets the billing name value for this billing
sets the products tax class id value for this tax server data
sets the billing company value for this billing
sets the billing street address value for this billing
duplicates a query and a collection of products
sets the billing value for this merchant item attributes
returns the products ordered ordered ordered ordered by the product
sets the products ordered value for this admin order product
sets the billing city value for this job
setter for property products description
duplicates a query and a collection of products
sets the billing postcode value for this lead convert
set the value related to the column
sets the billing state value for this merchant item attributes
returns the categories description
sets the billing country value for this admin order
gets the billing address format id value for this admin order
returns the products principal
sets the billing address format id
sets the
returns the collection of products of the current product
sets the payment method value for this payment method
setter for property products column
sets the cc type value for this type
sets the cc cc card
returns the billing data
sets the cc number value for this
returns the source of this event
sets the data of this assistant
sets the cc expires value for this subscription
set the last modified time of the file
returns the address book
returns the product editor
returns the countries in the database
returns the product editor
set the value of date
gets the value of the prod header field property
gets the value of the prod header field property
returns the order status
returns the product status editor
sets the order status
returns the product status editor
returns the address book
returns the customers object
returns the customer id
returns the customers object
sets the date finished
returns the prod image editor
returns the prod image editor
returns the delivery object
sets the data of the assistant
sets the currency value for this
returns the value of the currency value
sets the currency value for this currency
setter for property order products column
setter for property orders status history col
setter for property orders total col
setter for property address view
returns the component that is used to render the cell
returns a renderer for the given table cell
sets the value of the delegate
implementation of the renderer
creates a new instance of default code code
constructor for the specified tree view
create a new default node
instantiate a default model
default search control constructor
creates a new control
show the panel
returns the value of the cell editor
creates a new image cell editor
description of the method
returns the value of the editor
returns the value of the editor
returns the component that is used to display the cell editor
returns the value of the code typed cell editor code
invoked when an action occurs
returns the value of the cell editor
returns the text field
sets the text field to the given text field
returns true if the property table is editable
sets whether the table model can be editable or not
initializes the panel
create the empty panel
switch to the card
registers a component to the given component
creates a panel to add the given center to the panel
returns the value for the cell at code column index code and
sets the definition value for this
sets the sid value for this product
returns the number of children of code node code
returns the child of code node code at index i
returns true if the specified node is a leaf
returns the name of the column at code column index code
returns the class of the specified column
returns the value at the specified column and the given node
returns true if the given cell is editable
registers a new event id to be shown in the map
processes the data changed event
sets the default child value for this picklist
constructor for the browse view
called whenever the value of the selection changes
returns the name of the column at code column index code
runs the uc
disposes the resources held by this opb message
returns the label of the element
returns the balance of the
returns the minimum payment value
gets the value of the payment ratio property
returns true if the interest is set
get the finance charge
this method is used to perform the initialization of the bean
this method is used to perform the initialization of the bean
loads a program from the current program
returns the label of the parameter
adds a command to the command list
set the list of to be written
returns the index of the label at the specified label
returns the current command
returns the from command
sets the from value for this
returns the command instance of the given command
this method initializes this
sets the scan line spacing
initializes the tree
clip the current state of the clip
sets the size of the
returns the maximum number of
returns the min min value of the
returns the mean value of the mean
filters the image from the given filter
returns the filter
writes the specified image to the output file
adds a sequence to the sequence
the image
starts the processing of the current image
reverts to the previous image
change the current image to the original image
save the current image to the current one
description of the method
saves the current image as a bmp
registers a object
registers a new output stream to the output
register the display to the
registers a new object
displays the toolbox on the screen
exits the application
this method is called when the engine is complete
this method is called when the is removed
this method is called when the is removed
description of the method
loads the file
compares this file to another file
returns the file extension of the given file
returns the file extension for the given file
reads the lines file
reads the simple file file
reads the lines from the given string
concat the given string to the given string
counts the number of lines in the specified string buffer
checks if a given value is not empty
concat the given string to the concatenation of the
concat the given to the concatenation of the
concat the given string with two braces
sets whether ssl certificates are valid
build the server side deployer
stop the server
returns true if the current state is available
returns the name of the header
returns the value of the header field
skips the next token
discards the current state of this discard discard the
insert a string into the stream
this method is used to change the value of the
this method is called when the user presses the loading thread
writes the header object to the specified stream
sets the right component
sets the right component
remove all the data from the table
resets the history
handles the connect
build the button
build the text field
builds a jframe for the application
returns the object
build the properties
returns a string representation of this object
adds a header to the header
builds the header for the response header
returns a string representation of this header
create a new connect dialog
opens a connection to the url
initializes the applet
returns the text for the
handles the key pressed event
go to the next history link
test method for
shuts down all modules
initialize the persistence manager
returns the session associated with this entity
close the resources
returns the user
this method initializes empty area
this method initializes this
this method initializes j content pane
this method initializes login button
this method initializes button panel
show a button with a given name
this method is called when the user is to remove the message
sends a request to the server
this method initializes exit button
this method checks if the model is valid
set the message model
sets the user name
sets the password
set the password
login event to all registered listeners
this method initializes password field
adds a login listener to this server
initialize the sslsocket factory
returns the cron expression for the given job
gets the section
returns the voice
sets the similarity settings settings
returns whether the section is a section
sets whether the section is used to create the section
increment the counter
returns whether or not the voice settings should be used for the
set whether the voice settings should be displayed
returns the section settings for this section
returns the settings
returns whether or not this piece is override to be used
returns the denominator of this code code
returns the voice settings object
sets whether this piece should be overwritten or not
sets the denominator of the midi
returns the scale of the scale
returns the rest of the rest
returns the numerator of this rational
sets the scale for this
sets the rest of the rest section
sets the numerator of this
returns the denominator power power
normalize indices
returns the voice section result
converts the to a string
clears the cached for the section
returns a string representation of the object
returns true if duration scaling is supported
returns the signature of the
returns the signature event signature event
clears the voice section
sets whether the similarity settings should be used in the
returns the number of iterations
returns the fraction to fraction the fraction of the fraction
sets the similarity of the
determine if this note should be applied to the note
returns the current settings for the current node
returns the scale step offset
sets the offset to the next item in the set
returns the volume adjustment
returns whether or not the is
sets whether the should be applied to the
returns the voice sections section of the video
returns whether or not the is
returns the string
sets whether the should be applied to the
returns the octave adjustment
set the rest on all voice sections
returns the tempo of the technology
clears the section
returns the settings for this action
returns the instrument name
returns the name of the midi
set the tempo of the planet
sets the instrument name
returns a string representation of the midi midi midi event
returns the scale of the scale
read only the current read only
returns the midi volume
returns the dynamic level
returns whether the is
setter for property generate text
returns true if the is
sets whether the should be generated or not
creates a new rest note from the given time
gets the instrument
sets the instrument
sets the time signature
returns the letter number
returns the duration of the duration
normalize indices indices
scale the given scale to the given scale
returns the number of in the
returns the part that this object represents
returns the source voice section
returns the list of clones in the current copy
returns the key signature signature
returns true if the part section is the first part of the
creates a section at the given index
returns the last section of the section
returns the last section of the section key
returns the notation element list
creates the default
returns the string representation of this object
returns the string representation of this object
gets the value of the element seperator property
returns the octave of the octave
returns true if the duration scaling is supported
sets the element seperator
convert the given string to a string
returns the notation string representation of this element
creates the default sections
returns the denominator of the duration for this duration
scale the scale factor
returns the notation string representation of this element
sets the octave of the current octave
returns the string representation of this
provides the number of in the current time
returns the string representation of this
creates the intro sections
returns the piece
returns true if the duration scaling is enabled
removes all note
gets the piece composer
creates the sections
remove notes
sets the composer
return the end index of the specified group
returns the piece title
provides the smallest note that is covered by this note
sets the piece title
returns the part sections
returns the first key signature signature
returns the output
clears the temporary sections
returns whether or not the duration scaling is supported
create a new instance of a
returns the part section
returns the segment adjustment
returns the
returns the fraction of the fraction
returns the letter name
returns the time left in the bar
returns the xml representation of the xml representation of the
returns the multiplier
returns the output
returns the signature signature
returns the string representation of this
returns the volume of the audio
returns the time signature
returns whether the first note in the copy
returns the scale of this object
returns the string representation of the
returns the dynamic
sets the time signature
sets the dynamic
returns the time the signature is
updates the note
returns whether the rest of this message is a rest
sets the scale of the scale
returns the include the
returns the dublin core module list
returns the octave
returns whether to include the thesaurus
returns the string representation of this object
this method is not supported
returns the current unparsed parts of this xmldocument
returns whether or not the video scaling is supported
returns the octave of the octave of octave
returns the string representation of this object
returns a string containing the characters of the
provides the duration of the
shrinks the scale factor by the given scale factor
returns a string containing the characters of the
returns the octave change
returns the number of steps
returns the transpose of the numbers of numbers
saves the file to the given file
sets the duration
returns the scale factor for the scale factor
apply the multiplier to the specified
returns the settings
returns true if duration scaling is enabled
saves the current file to the given filename
sets the volume of the midi midi midi midi midi midi midi
returns the midi value
returns the mode letter number
returns the mode note number
returns the default key
returns true if the key is valid for this key
returns the normalized adjustment for the given adjustment
gets the value of the property
returns the number of or
returns the key name
returns the sheet for the current sheet
sets the source voice section
returns a key signature for the event
returns the audio file creator creator
returns the current room
returns true if this is a rest
returns the piece lit
returns the pitch value of the note
returns the normalized note number
sets the pitch for the pitch
returns the note number
returns the duration of the audio file
returns the pitch at the given pitch
sets the duration of the audio
returns the letter of the current letter
sets the start time
returns the major key or or
returns the number of intervals in the given interval
returns the channel
returns the number of steps in the given
sets the channel
returns the note on event
returns the natural note name for the given letter number
returns the note off event
gets the value of the property
returns the end time of the last time
returns the note string
throw an unsupported operation exception
clears the note events
saves the midi persona to a midi file
a stream of the buffered data
a method to remove a file from the database
create a temp file with the given suffix and file name
saves the file to the given file
saves the file to the given file
parses a note name
returns a copy of this publisher
returns a string representation of this rational number
saves the pdf file to the specified file
saves the pdf file to the specified pdf file
save the image file to the default file
returns the value as a double
returns the negative fraction of this fraction
save the image to a file
returns the inverse of this fraction
save the image to a file
adds a fraction to this
returns the sum of this fraction with the specified value
save the image to a file
subtracts two fraction from this to the specified fraction
saves the file to the given file
returns the fraction of this with the fraction
p return the value of the code code property
saves the current mp3 file to the given file
returns this fraction to the given number of times
this method is used to convert the fraction to a b
estimate the of the
compares this object with the specified object for order
compares this object with the specified long
compares two longs
returns true if the power is a power power
returns the name of the last file
returns the name of the last pdf file
returns the name of the last file in the last loaded file
encodes a uri and returns a uri
writes the statistics gathered by the file
returns the meta object for the containment reference
returns the meta object for the reference
returns the meta object for the attribute
creates an instance of the resource
returns the meta object for class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the meta object for the containment reference
register the resource factory
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the meta object for the containment reference
returns the meta object for the containment reference
gets the id attribute of the object
returns the name of the attribute
returns the factory instance
returns the meta object for the attribute
stops the tracker
returns the locator for this locator
writes an error to the given element
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
updates the title of the window
restores the workspace from the given workspace
returns the meta object for the containment reference
creates the window menu
returns the meta object for the containment reference list
activates the component
sets the view to use for the given view
returns the dimension of the
set the scale factor for the scale factor
returns the meta object for the attribute
if the text is empty
draws the mesh
disposes the resources
initializes the applet
adjust the zoom factor
returns the meta object for the attribute
returns true if this canvas has been disposed
sets the tolerance
the current zoom factor
sets the focus
sets the camera to the given coordinates
activates the current canvas
set the rotation of the rotation
renders the scene
returns the meta object for class
clears the list of plots
add a new importer to the importer
loads the plot and plot
returns the texture image data for the given resource
returns true if the plot has a plot name
returns the meta object for the containment reference
sets the depth of the current gl drawable to gl
returns the name of the axis
resize the scene
set the label to the given value
sets the units to the given value
adds a new ruler to the ruler
expands the controls group
returns the custom composite for the controls
this method is used to resize the scene
sets the plot data
sets the title of the window
resize the canvas scene
begin user doc
resize the custom canvas
draws the scene
returns the x coordinate of the given point
begin user doc
returns true if the given string is a
returns the y value of the y coordinate
sets the units
sets the current scene
set the scaler scaler
sets the scale of the scale
subtracts this code complex code multiplied by this one
multiply this complex number by a real number
returns the meta object for class
returns the name of the parameter
sets the axes to the given string
returns the sum of this complex number with the specified
updates the scale menus
subtracts this complex number
returns the name of the selected mode
sets the minimum spacing to the minimum value
returns a string representation of this object
returns the minimum spacing between the columns
set the scale of the axis
scale the current scale factor
sets the mapping between the and the
returns the meta object for the attribute
scale the current jpg value from the given
this method returns the y value of the x y
converts the y coordinate to a double
draws a mask
returns the meta object for class
returns the meta object for the reference list
adds the data to the mask
returns the meta object for the reference list
adds the given values to the end of the data
returns the meta object for the attribute
returns the meta object for the attribute
reverts to the mask
returns the meta object for class
this method loads the mask
set the mask for this
returns the meta object for the reference list
sets the mask
returns the meta object for the reference list
sets the mask of the receiver to the given array of values
returns the meta object for the reference list
returns the logger factory for this class
this method is called when the user modifies the value of this
returns the meta object for the attribute
sets the shapes paint
adds a listener to the listener list
returns the meta object for the attribute
sets the shape of the shape
p log a message with trace log level
releases the resources associated with this iterator
p log an error with trace log level
p log an error with debug log level
sets the shape
logs a message with code java
p log an error with info log level
p log a message with warn log level
p log an error with warn log level
p log a message with error code message
returns the meta object for the attribute
p log an error with error log level
p log a message with fatal log level
p log an error with fatal log level
returns the meta object for class
returns the meta object for the attribute
sets the
returns the meta object for the attribute
sets the back mode
returns the meta object for class
this returns the property descriptors for the adapted class
this adds a property descriptor for the user feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the field feature
this adds a property descriptor for the role feature
this adds a property descriptor for the direction feature
this returns
this adds a property descriptor for the affiliation feature
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
restores the mask value
this adds a property descriptor for the address feature
this adds a property descriptor for the definition feature
return the resource locator for this item providers resources
this adds a property descriptor for the url feature
this adds a property descriptor for the telephone number feature
this adds a property descriptor for the version feature
this returns
returns the meta object for the reference
this returns the label text for the adapted class
this adds a property descriptor for the fax number feature
this returns the property descriptors for the adapted class
this handles model notifications by calling
this adds a property descriptor for the email feature
this adds a property descriptor for the start time feature
this adds a property descriptor for the facility user id feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the variable errors feature
this adds a property descriptor for the end time feature
this adds a property descriptor for the errors feature
this returns
this specifies how to implement
this returns the label text for the adapted class
this adds a property descriptor for the duration feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this handles model notifications by calling
this adds a property descriptor for the experiment identifier feature
this adds to the collection of
this returns
this returns the label text for the adapted class
returns the meta object for the reference
this adds a property descriptor for the run number feature
this returns the property descriptors for the adapted class
this returns the property descriptors for the adapted class
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the short name feature
this adds a property descriptor for the data property feature
this adds a property descriptor for the run cycle feature
this returns
this adds a property descriptor for the axes feature
this returns the label text for the adapted class
this adds a property descriptor for the feature
this adds a property descriptor for the long name feature
this handles model notifications by calling
this adds a property descriptor for the signal feature
this adds a property descriptor for the program name feature
this returns
this adds a property descriptor for the feature
this returns the label text for the adapted class
this handles model notifications by calling
this adds a property descriptor for the command line feature
this adds a property descriptor for the feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the notes feature
returns the meta object for the reference
this adds a property descriptor for the variable feature
this adds a property descriptor for the feature
this adds a property descriptor for the distribution feature
this adds a property descriptor for the first good feature
this adds a property descriptor for the thumbnail feature
this adds a property descriptor for the feature
this adds a property descriptor for the last good feature
this adds a property descriptor for the long name feature
this adds a property descriptor for the feature
this returns
this adds a property descriptor for the feature
this returns the label text for the adapted class
this handles model notifications by calling
this adds a property descriptor for the name feature
this adds a property descriptor for the feature
returns the meta object for the containment reference
this specifies how to implement
this adds a property descriptor for the feature
disposes the chart
this returns the property descriptors for the adapted class
this adds a property descriptor for the feature
this adds a property descriptor for the name feature
this adds a property descriptor for the chemical formula formula feature
this returns
this adds a property descriptor for the feature
this adds a property descriptor for the temperature feature
this adds a property descriptor for the feature
this specifies how to implement
this returns the label text for the adapted class
this adds a property descriptor for the feature
returns the meta object for class
this returns
this adds a property descriptor for the feature
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
this adds a property descriptor for the feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the feature
this adds a property descriptor for the distance feature
this adds a property descriptor for the type feature
this adds a property descriptor for the probe feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the creator feature
this adds a property descriptor for the name feature
this adds a property descriptor for the file name feature
this returns
this adds a property descriptor for the feature
this adds a property descriptor for the file time feature
this returns the label text for the adapted class
this adds a property descriptor for the file update time feature
this handles model notifications by calling
returns the meta object for the reference list
this adds a property descriptor for the feature
this adds a property descriptor for the feature
this adds a property descriptor for the ne version feature
this specifies how to implement
this returns
this specifies how to implement
this returns the label text for the adapted class
this returns
this returns the property descriptors for the adapted class
this adds a property descriptor for the field feature
this returns the label text for the adapted class
this adds a property descriptor for the direction feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns
this adds to the collection of
this returns the property descriptors for the adapted class
this adds a property descriptor for the data property feature
this adds a property descriptor for the dimension feature
this returns the label text for the adapted class
this adds a property descriptor for the type feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
returns the meta object for the attribute
this adds to the collection of
returns the action type
returns the current state
returns the action type object for this action
returns the execution state object
returns the protocol factory used for this connection
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
creates an instance of the resource
register the resource factory
returns the meta object for class
returns the package of this switch
returns the meta object for the reference list
this just records the information
create a new model
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the meta object for the containment reference list
creates a new adapter for an object of class
the framework calls this to see if the file is correct
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the item type constraint of em long array item em
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the label for the specified type name
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the meta object for the reference list
validates the item type constraint of em em
this adds separators for editor additions to the tool bar
returns the meta object for the containment reference list
this method initializes sash form
this populates the pop up menu before it appears
this method initializes vis composite
returns the meta object for class
returns the meta object for class
returns the meta object for the reference list
handles activation of the editor or its associated views
returns the meta object for the reference list
returns the meta object for class
returns the meta object for the reference list
returns the meta object for the reference
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the package of the switch
returns the meta object for class
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the item type constraint of em string array type em
creates a new adapter for an object of class
register the cache for this file
creates a new adapter for an object of class
returns the meta object for the attribute
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates an instance of the resource
this specifies how to implement
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
returns the meta object for the attribute
return the resource locator for this item providers resources
this returns the property descriptors for the adapted class
this adds a property descriptor for the out of range feature
this adds a property descriptor for the title feature
this specifies how to implement
this returns
this returns the label text for the adapted class
this handles model notifications by calling
returns the meta object for the reference list
returns the meta object for the attribute
this returns the label text for
this adds a property descriptor for the name feature
this adds a property descriptor for the value feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the axis feature
returns the meta object for class
this adds a property descriptor for the max feature
this adds a property descriptor for the min feature
this adds a property descriptor for the number of bins feature
this specifies how to implement
this specifies how to implement
this returns
this returns
this returns the label text for the adapted class
this returns the label text for the adapted class
this handles model notifications by calling
this handles model notifications by calling
this adds to the collection of
this adds to the collection of
this returns the property descriptors for the adapted class
this adds a property descriptor for the feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the order feature
this adds a property descriptor for the overflow feature
this returns
this adds a property descriptor for the feature
this returns the label text for the adapted class
this returns
returns the meta object for the reference
this handles model notifications by calling
this returns the label text for the adapted class
this handles model notifications by calling
this adds a property descriptor for the title feature
this returns the property descriptors for the adapted class
this specifies how to implement
this adds a property descriptor for the dimension feature
this adds a property descriptor for the type feature
this adds a property descriptor for the value feature
this returns
returns the meta object for the attribute
this returns the label text for the adapted class
this returns the label text for the adapted class
this handles model notifications by calling
this handles model notifications by calling
returns a diagnostic describing the errors and warnings listed in the resource
returns the meta object for the reference list
returns the meta object for the reference list
returns the meta object for the meta object
returns the meta object for the reference list
returns the meta object for the reference list
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the reference
returns the meta object for the reference list
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the reference list
returns the meta object for the attribute
returns the meta object for the reference list
returns the meta object for the reference list
returns the meta object for the attribute
returns the meta object for the reference list
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
removes all bits from the list
returns the meta object for class
this method is called when the user edits the nth text
returns the meta object for the attribute
returns the meta object for the reference
returns the nth property
returns the array
this accesses a cached version of the property sheet
removes the given object from this set
returns the out of the out of the
returns the meta object for the attribute
gets the value of the string array property
sets the mask for this
returns the histogram factory
returns the meta object for the attribute
sets the minimum value of the slider
returns the meta object for the attribute
sets the maximum value of the slider
sets the minimum value of the slider
returns the meta object for the attribute
sets the maximum value of the slider
returns the meta object for the attribute
fires off the event listeners
returns the meta object for the attribute
adds a mask listener to the list of listeners
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the reference list
returns the meta object for the reference list
returns the meta object for the reference list
returns the meta object for the reference list
returns the meta object for the reference list
returns the meta object for the reference list
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the reference list
returns the meta object for the reference list
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for class
returns the meta object for class
returns the meta object for the reference list
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
begin user doc
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the reference list
returns the meta object for the reference list
returns the meta object for the reference list
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
returns the factory for this
returns the order by relevance
sets the safe search
sets the radius of the radius of the halo
returns the restriction of the restriction
returns the ip restriction for the given ip
clears the point
clears the bounding box
set the value of media source
returns the selected fields
set the value of selected fields
returns the seconds representation of the recurrence
returns the representation of the
sets the page query page
sets the date
returns the url to the query
called when the state changes
respond to an error event
called when the user is resized
set the attribute
sets the url attribute
sets whether to use the
sets the play flag
set whether to show the loop
show or hide the full menu
set the quality of the image
sets the scale for the scale
set the alignment of the node
sets the attribute of the object
sets the attribute of the object
sets the background color
set the background color of the window
sets the value of the border
set the background color of the
sets the background color of the background
sets the flash vars to the given string
sets the border
this method initializes jb
this method initializes j scroll pane
this method initializes log
this method initializes this
this method initializes this
this method initializes this
this method initializes b aceptar
this method initializes titulo
this method initializes titulo
this method initializes tabla
this method initializes boton add
this method initializes boton
this method initializes boton
this method initializes this
this method initializes j
this method initializes tabla cliente
this method initializes c buscar
this method initializes campo id
this method initializes j content pane
this method initializes campo
this method initializes titulo
this method initializes b aceptar
this method initializes boton cliente
this method initializes boton
this method initializes b
this method initializes titulo
this method initializes boton
this method initializes titulo
this method initializes combo pago
this method initializes titulo
this method initializes boton
this method initializes boton
this method initializes boton
this method initializes this
this method initializes titulo
this method initializes tabla
this method initializes titulo
this method initializes tabla
this method initializes b anterior
this method initializes boton
this method initializes b
this method initializes jtf servidor
this method initializes boton
this method initializes this
this method initializes boton
this method initializes this
this method initializes titulo
this method initializes tabla
this method initializes c base
this method initializes fecha
this method initializes j text field
this method initializes boton add
this method initializes combo tipo
this method initializes titulo
this method initializes c
this method initializes boton
this method initializes tabla
this method initializes c stock
this method initializes titulo
this method initializes boton add
this method initializes j
this method initializes combo tipo
this method initializes boton
this method initializes c nivel
this method initializes b
this method initializes j text field
this method initializes b add
this method initializes j text field
this method initializes b aceptar
this method initializes j text field
this method initializes b cancelar
this method initializes j text field
this method initializes jtf
this method initializes c cuenta
this method initializes jb
this method initializes c fecha
this method initializes titulo
this method initializes jtf login
this method initializes password
this method initializes jb
this method initializes j scroll pane
this method initializes j
this method initializes jtf mi
this method initializes this
this method initializes j scroll pane1
this method initializes tabla
this method initializes j scroll pane
this method initializes this
this method initializes tabla
this method initializes j content pane
this method initializes j
this method initializes jtf nombre
this method initializes b
this method initializes jb
this method initializes b
this method initializes j scroll pane
this method initializes jtf
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes
this method initializes j scroll pane
this method initializes this
this method initializes
this method initializes j
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes j tabbed pane
this method initializes
this method initializes
this method initializes jtf servidor
this method initializes
this method initializes
this method initializes jtf
this method initializes
this method initializes
this method initializes
this method initializes jb
this method initializes
this method initializes
this method initializes
this method initializes j scroll pane1
this method initializes titulo
this method initializes jtf nombre
this method initializes jb nuevo
this method initializes this
this method initializes b
this method initializes this
this method initializes jt
this method initializes this
this method initializes j tabbed pane
this method initializes jp
this method initializes
this method initializes this
this method initializes j content pane
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes j
this method initializes
this method initializes
this method initializes
this method initializes jb
this method initializes this
returns the centroid of the matrix
returns the radius of the document
returns the distance between the and the centroid
returns the distance between the and the given distance
returns the similarity of the centroid
write the properties to the file
returns the text to search for the search
this method is used to recover a persistent service
stores the given persistence service to the cache
close the object
close the
returns the size of the
clears the cache
returns the size of the receiver
initializes the server
close the
clears the cache
returns the time in milliseconds
refresh the display of the played view
close the socket
returns the host name of the ip address
sets the vertex data
returns the position of the
returns the vertex data
set the radius of the cylinder
returns whether the attach depth buffer should be attached to
returns true if the map is
returns the normal vector
sets the centers to the center of the map
combines two with the given point
insert a pass into the given faces context
display the perspective for the camera frustum
set the camera planes
removes a render pass from this graphics context
returns the number of render faces
returns the render pass
updates the render passes the render mode
set the plane to be used for the plane
returns the vertex shader
returns the fragment shader
sets the transpose of this matrix
sets the plane to be used for the given point
returns the bounding sphere of the bounding sphere
returns the transpose of this matrix
sets the model matrix of the model
notify the owners about the
returns true if the matrix is inside the view
returns true if the coordinate is
returns the shader program
returns the model matrix
adds a new attribute to the object
checks if the given is on the
returns true if the frustum frustum is inside the frustum
removes the specified tt attribute tt to the receiver
returns the uniform with the given name
returns the number of pixels in the specified cube
get the intersection of two points
returns the distance in the given direction
returns the projection matrix
returns a pixel representation of the given cube
get the first intersection of the given intersection
sets the camera matrix
called when the image has changed
get the projected projected y coordinate
returns the camera matrix
returns the internal format of the internal format
returns true if the plane is equal to another plane
returns the element at the specified position in this array
returns the transformed object of this plane
sets the texture environment mode
trims the array to the size of the array
called when the state of the cache has changed
returns a string representation of this object
returns a string representation of this object
returns the texture environment mode
clears the array
trims the array to the size of the array
sets whether this component is enabled
returns true if the given object is a default default
returns a string representation of this object
renders the target changed event
returns the draw buffers
returns true if the is
adds a new observer to the list of observers
sets the shader object to be used for rendering the given
update the world bounds
removes a listener from this view
sets the minimum filter to use for the given filter
removes a shape from the world
called when the shader program has changed
called when the state of the state changed
set the magnification filter
this method is invoked when the texture is changed
draws the list of
this is the same as code listener code
set the component to the specified value
sets the maximum of the flit
returns true if the is enabled
flush the buffer
render the graph
returns the maximum of the
returns the client state
sets the wrap wrap primitives wrap
destroys the shader resource
sets the face of this race
this method is used to translate the tree
returns the wrap wrap wrap wrap wrap wrap
adds a new shape to the list
called when the matrix is changed
render the current scene
returns the face
delete the current state
sets the wrap object
removes the specified shape from this canvas
returns the wrap object
sets the front face of the surface
sets the wrap r value of this cell
gets the wrap r
returns the front face of this
called when the renderer has changed
sets the transform of this matrix
returns the texture type
adds a child node to this canvas
this method is called when the render render render is a render
removes a child node from the tree
sets the lower lower bounds of the pen
sets the value of the range
returns the model matrix for the current matrix
sets the upper value of the upper corner
adds a shape to the canvas
sets the upper coordinate of the shape
returns the number of shapes in the stack
returns the shape at the specified index
returns the root node of the tree
sets the blend src func
sets the render target
returns the render target
this method will be called when the user selects the given tree
returns the blend blend source
sets the mask of the clear mask
updates the physics of the tree
notify the listeners that the state changes
returns the clear mask
sets the color of the color
returns the color of the list
sets the blend color of the destination
sets the depth of the clear depth
returns the depth of the clear depth
sets the clear stencil
returns the blend destination function
gets the clear stencil index
sets the light state
returns the light state
sets whether the depth is enabled or not
returns whether the depth test is enabled
sets the depth function
returns the depth function
sets whether the depth is enabled or not
returns whether the depth is enabled
set the texture coordinate for the texture
returns the texture gen mode of the texture
set the texture coordinate of the texture
returns true if the texture coordinate is enabled
called when the state of the state changes
sets the material to be used for this material
sets the ambient color of this material
sets the color of the material
returns the diffuse color
sets the specular color to the given color
sets emission color
returns emission color
sets the shininess of this material
updates the display
show the list of the items in the list
handles the variable element type
returns the copy of the drawing
loads the drawing from a file
constructor for the
returns a string describing this applet
creates a new parameter bag
returns the next piece of division
runs the next time
returns the next piece of
this method handles the of a message
saves the xml element to the xml element
returns a string representation of the current object
adds a task listener to this task
set the map of the peaks to be used for the peaks
exports the data to the given file
returns the index of the given intensity
exports the data to disk
refresh the panel
load the structure from a file
creates a new url with the given url
returns the bins of the series
returns the highest intensity value for the specified range
returns the drawing supplier for this layout
handles the action event
this method is called when the table model is changed
called when the user changes the sorter
returns the selected peak
returns a row from the dataset
creates and returns a button for the button
find the map by type
sets the maximum intensity value for the intensity range
creates the graphics component for the panel
toggles the of the
returns the color of the peaks
returns the data point for the given number of points
returns a string representation of this peak
add a mz peak
returns the last mz peak
returns whether annotation alpha maps map
returns the name of the mz data
returns whether or not the is used
display the label of the current scale axis
checks if the peak is a
returns the status of the peak
returns the of the
get the data point for the given number of the
returns the start region of the region
returns the stop region of the
returns the site
returns the query number
returns the ion score
returns the type of this fragment
sets the raw data file
returns the mass expected
gets the value of the property
returns the missed
gets the value of the ion series property
returns the code protein code object at the
returns the number of
set the scan
returns the precursor mass
get the precursor charge
returns the fragmentation of the fragmentation
sets the significance threshold
sets the fragmentation of the fragmentation
returns the significance threshold
sets the number of modifications
sets the ion data
sets the name of the file
returns the protein
gets the num queries value for this
sets the protein object
sets the num of peptide
gets the value of the identification method property
adds raw data to the raw data file
sets the identification method
returns the parameters of the
returns the name of the
set the parameter
adds a new searched modification
set the default mass of the
returns the protein object associated with the given protein name
adds a new serie to the panel
adds a protein to the protein
returns the peptide scan
adds a peptide scan to the list
returns the mass of the peptide mass tolerance
returns the fragment mass tolerance
returns the total ion value
returns the raw data file
adds a peptide to the list
gets the isotope pattern score value for this score
sets the isotope pattern score
returns the isotope pattern
sets the isotope pattern
returns the executable executable
runs the search thread until the next is removed
add a new to the list
removes the series with the values from the dataset
returns the list of the rows that the table is
set the list of alignment
returns the row of the row
returns the k value
returns the error in the list
adds a new range to the list of peaks
returns the data point for the given number of scan points
computes the of the slope
sets the mz mz mz mz mz mz data
returns the meta data for the given key
returns the text of the text of the element
returns the text of the text of the element
initialize the peaks list
saves the current version of the file to the given output stream
sets the text label and status text to the text
get the url for a given url
checks if the url is a url
returns the url for the given url
returns the number of raw data files
returns the number of rows in the list
returns the number of
returns a list of the row
returns the peak status
get the best isotope pattern
returns the highest peak that has the maximal predicted order of the
returns the data point for the given number of points
returns the data points for the file
add the parameter to the list
removes the parameter from the list
returns the parameter with the given name
returns the file for the given component
returns the file for the given extension
returns the exit code
called when the button is pressed
registers a component to the component
called when the mouse exits a component
called when the mouse is pressed
handles the mouse moved event
adds a component to the panel
checks whether the given row is a
checks if the given range is in the range
copies the input stream to the specified input stream
checks if the range contains the specified range
checks if the given check is within the minimum value of the
checks if the range is within the range
sets the minimum value of this range
this method is called when the of the one of the
updates the minimum size of the window
returns the size of the
returns a string representation of this object
returns the average value of the interval
returns a string representation of this object
called when the user selects the cancel button
compares this range to another range
this method is called when the dialog is closed
called when the user changes the parameters of the
sets the value of the selection
sets the choices to the given values
adds a button to the panel
returns the source of this task
initializes the thread
adds a task listener to this task
fires a task event to all registered listeners
find a clock task by its id
get the sql statement for a connection
get the sql statement for a given jsp
end the tag
render the end of the tag
writes the contents of the tag to the jsp page
render the end of the tag
initializes the servlet
get general code list
returns the general code list of the cache
clears the
accept visitor
find the current node
sets the select str
add a child to many parents in a parent object
lookup the session factory
returns a string representation of this object
sets the system id
returns the system id
get the system id
returns the content id of the content
returns the content location of the content
returns the content type of the header
set the system id
register a new schema specific jaxb types
register a new schema specific jaxb types
register the schema specific types
returns the value of the code option code
sets the options to be used for the
removes all the options from this collection
get the options for this file
sets the options to the properties file
this method is called when the options list is removed
generate the service
writes the given operation to the write write operation
returns a file object for the given filename
write header to file
writes the content of the current entry to the given writer
write the footer to the print writer
returns the extends text
returns the text of the code class code
write the member fields
returns an iterator of all deployed service services
write the header to the output stream
returns the value of the key
write the service name to the specified service
write the port to the write port
write the body of the file
generate the stub for this file
returns the extends text
register a file to be written to the file
deploys the deploy service
writes the header of the file
write the package to the write package
get the field name from the field name
set the factory for this factory
add a new valued property to the map
set the header part of a header
write the type name and type to the given element
write qname namespace type
write the given code import code to the code import code
writes the type namespace uri to the namespace
binds a binding to a wsdl binding
set the body type to the given type
set fault body type
write the type of the given code type code to the
returns a string representation of this object
initializes the applet
this method is called when the global options is loaded
returns true if the type is a null or not
get the remote port
returns the name of the property with the given name
insert a new document fragment
set the flag to indicate whether or not the session is completely
returns an iterator of ports
returns the client engine used to paint this object
sets a property of the object
returns the scoped property value
remove a scoped property
gets the value of the type name format property
reset the stream
reads the next byte from the stream
returns the content object of the message
reads the bytes from the stream
set the root part of the
get the content length of the content
ensures that the given operation is valid
sets the delegate
returns the delegate
returns true if the xml type is registered with the given type
returns the content type of this response
returns the number of attachments
remove all attachments
get the qname of the class type
get the qname of the java type of the
get the class of the qname for the given type
write the schema element to a xml schema
returns a string representation of the given string
get general purpose mechanism for compatibility
returns the constructor for the given class
get the serializer for the given type
returns a method for a given class
returns an iterator over the supported mechanism types
returns the return serializer serializer
initialize the class
get the general purpose
get the general purpose of the mechanism
get the deserializer for the given mechanism
returns the deserializer for the given class
report the end of a complete value
registers a default implementation of the mapping
returns the type mapping for the given encoding
returns the value of the get deserializer property
set the default
initialize the sslsocket factory
initialize the sslsocket factory
load an image from an input stream
returns the content length of the content
returns the size of the content
add a fault to the fault
writes the current object to the given writer
writes the content of the code attachment code to the given output
returns the content description of the header
sets the current form
saves the changes to the
returns an iterator over all the attachments
returns an iterator over all the attachments
creates a new attachment part
populate the table with the given name
receive notification of the end of a document
returns the default type mapping
called when the user wants to undo a message
write the details of a fault to the output
returns the actors list of the actors
returns a map of property descriptor properties
returns the port name
set the port type name
returns the server engine configuration
checks if the file is writable
get the service with the given qname
add a new entry to the detail tuple
creates a soapmessage message
returns the content type of the content
returns the encoding style for this document
parse the time
parse a date
converts a double to a string
removes a child message from the list of children
compares this duration object against another object
get the value of the object property
set the value of this code message code object
pushes the stack and the stack to the top of the stack
pop the stack and removes it from the stack
checks if a property is true or false
returns the value of the node
detaches the node from the node
returns the output values
reads the next byte from the input stream
returns the next element in the buffer
adds a code text node code to the list of text
the main method of the thread
initialize the servlet
destroy the servlet
stops the server
this method initializes this
this method initializes j toggle button
this method is called when the is suspended
wait for a thread to be interrupted
this method is called when the is suspended
this method returns the j table
the
returns the opposite of this connector
returns true if the given is a opposite
returns the opposite of the given places
returns the direction of the
checks if a given place is opposite to the given place
returns an iterator over the list of buckets
returns an iterator over the graph elements
paints the room
returns the position of the position in the
sets the gate to the specified gate
move the thing to the given thing
sets the value of the axes
sets the value of the centre of the viewport
adds a new position to the list
subtracts the given position from this one
returns the scaled value of the scaled column
sets the value of the specified axis
sets the gate to the given gate
sets the number of the to the given value
sets the value of the specified
adds a new position to the list
subtracts the given position from the list
returns the scaled value of the specified column
sets the value of the specified property
sets the value of the axes
sets the value of the code code property
adds a position to the list
this method is responsible for adding a sub
returns the scaled value of the specified axis
sets the value of the specified axis
this method initializes this
this method initializes this
this method initializes j combo box
this method initializes j button
this method initializes j button1
this method initializes j button
this method initializes j text field
this method initializes j text field1
returns the scaled scaled version of the given scale
scale the given color
adds a new link to the list of all the pes
adds the player to the game
kill the agent
returns the dead state
sets the position of this relative position relative to the
returns the relative position of this relative position
returns whether the current position is relative to the relative position
sets the relative thing to the given thing
returns true if the given position is inside the boundary of the
adds a new place to the list
returns true if the specified fits object is in the mask
returns the drawable
returns the center of the current position
returns the bag
returns a random place
sets the drawable to draw the image
returns the closest place to the given position
returns the places in the given position
returns an iterator over all places in this graph
returns the value of the first element in this list
adds a url to the list of urls
sets the route attribute of the property group object
returns the route of the given domain
returns the name of the route
returns a group of the given route
returns true if the given edge is connected to a node
returns the center of the center of this mesh
returns a new mask with the current mask
returns the upper left corner of the given position
stores the given event name into the event queue
returns the key event associated with the given event name
returns true if the given key code is pressed
sets the state of the to the given position
this method is called when the stage is a normal
returns true if the given position is occupied
returns true if the given position is a
draws the given position
draws the shape
selects the next shape
move the cursor position
serve the current session
sets the thing to the given thing
returns the thing that this thing is in
returns true if the is ended
this method is called when the user clicks the action
this method is called when the user clicks the add
adds a task to the list
this method is called when the tasks tasks list is finished
adds a task to the group
this method is called when the tasks tasks list is finished
sets the thing to the given one
returns the thing that this object is in
sets the terrain to the specified position
fills the map with the given terrain

the
set the
write an
removes a from the
the

returns an
broadcasts the given sql string to the
returns the
creates a new radius render
creates a new render render
returns the function
sets the cursor id
set the function
constructs an icon module from a string
returns the parameter
set the parameter for this event
write the given pipe
shows an error message
called when the thread is done
returns the bad command
sets the bad command
sets the bad command
returns the encrypted key
sets the encrypted key
adds a listener to the list of listeners
returns the name of the function
sets the name of the function
returns the session type
fire the event to all listeners
returns the value of the compression field
sets the compression level to the specified compression
sets the session type
returns the icons
returns the timeout value
fires the cancelled event
set the timeout value for this timer
returns the current desktop type
sets the icons
adds an icon to the icon
returns the progress monitor
sets the error string
returns the id of the object
closes the progress monitor
sets the id of the object
returns true if the sync is
sets the
returns the index of the translator
returns the version of the source version
adds a translator to the list
sets the index of the translator
sets the sync
sets the version of the version
gets the manufacturer id value for this
returns the state of the state
returns an initiliazed instance of desktop apps component
sets the manufacturer id value for this
returns the machine type
returns the value of the field
set the patch of the bank
sets the machine type
sets the desktop applications
sets the state of the connection
set the ids of the ids
returns the signature of this constant pool entry
sets the filename
sets the signature of this object
set the filename to be used for the given filename
checks if the state is valid
sets the encrypted key
sets the packages
adds a to the list of
returns the sync info
sets sync info
returns the name
sets the name
sets the stores
convert the current frame to a
the given from the given
converts this frame to a frame
sets the modifiable list of all the filters
sets the drive drive
adds a file extension to the filter
returns true if the current value is resolved
add a file filter to the kit
sets the path to the specified path
set the store
write a char to the output
this method initializes text label
returns the character
writes a string to the output
sets the character
this method initializes text input
this method initializes paste button
sets the string
this method initializes cancel button
handles an error
sends the file to the server
handles an error
sets the folder
adds a keyboard listener to the list of listeners
filters all the filters
returns the file path
sets the file filter
sets the file path
removes a listener from the list of listeners
this method is called to populate the devices table
handle an error
fires a event to all listeners
returns a file object for the given file
fires a string typed event to all listeners
set the value of the option
returns the icon for the given file
returns the value of the field
sets the path to the specified path
called when the pipe is done
close the window
loads the package
set the map of
sets the inheritance of the class
returns the class with the given class
returns the current session
returns the selected command
sets the session attribute of the session object
sets the protocol
returns the error code for this exception
sets the error code
returns the error
decodes the given input stream to a string
sets the error
add a listener to the list of listeners
sets the
create a new
sets the
sets the ids of the ids of the
returns the information about the information
gets the value of the property
add an id to the list
sets the
sets the information
sets the ids of the ids of the ids
remove a listener from the list of listeners
add the id to the list
create a new
sets the
sets the ids of the ids of the ids
notify all listeners that a file has been removed
create a new
sets the store
adds a store to the store
returns the package size
returns the default store
sets the file to read the file
sets the package size
fires cancelled event
create a new
converts this frame to a
returns the package id
reads all bytes from the input stream
sets the package id
returns the internal store
deserializes a command
write the command data to the output stream
gets the id value for this
returns the input stream for this input stream
returns the payload header header
sets the id
returns the type of this event
deserializes a command from an input stream
returns the payload of the header
returns the kind of the device kind
sets the device kind
returns the device number
returns the value of the value property
sets the device number
returns the signature of this block
sets the value of the value property
sets the signature of this jmethod
returns the disk type
returns the device id
returns the index of the
sets the index
initializes the errors
sets the device id value for this
sets the list of entries to be used for the given list
populates the list of errors with the given resource
sets the disk type
returns the modify date
adds an entry to this entry
returns the frame
sets the modify date value for this weather parameters type
decodes the given frame
returns the major version number of the
gets the value of the volume property
returns true if the copy of the object is a copy of
returns the minor version number of the
sets the volume
sets the version
returns the volume reference
returns the object in the cache
creates a new object
returns the language of the
removes an object from the cache
sets the volume reference
find a object
disposes the object
returns the stage size
returns the safe to remove flag
set the class to be used for the
sets the class name of the object
sets the rom stage
returns the class object
sets the safe to remove flag
returns the bottom coordinate of the bottom right hand side of the
set the bottom of the component
returns the real value of the complex number
sets the bottom bottom coordinate of the bottom
returns the home directory
returns the left index of the left side
sets the left position
returns the size of the used used to create the
sets the left coordinate of the left side of the left side
returns the value of the right slot
sets the size of the used size
set the right slot
set the right side
returns the top of the stack
sets the top stack
flatten the object
write the object to the given output stream
sets the top of the top of the stack
returns the info object
sets the info
returns true if the queue is empty
sets the patch version
sets the object
clears the buffer
returns the object
sets the value of the field
puts a value into the cache
returns the object system version
sets the value of the byte array
puts a slot in the list
get the slot associated with the given slot name
sets the object system version
get the slot with the given name
returns the internal store signature for this resource
returns the first element in the list
returns the default store
removes the slot from the list
sets the internal store signature for this signature
returns true if the current value is a rich text area
returns the number of slots in this group
sets the value attribute of the object
sets the default store
returns the vertical resolution of the screen resolution
returns the character associated with this node
returns true if this is a character
returns the length of the list
sets the screen resolution
returns the password
returns true if this is a integer
sets the length of this entry
returns true if this object has been typed
returns the value at the specified position
set the value of the given code lm code
returns the screen resolution
returns true if this is a nil
sets the password
adds an item to the list
returns true if this object is a true type or not
sets the screen resolution
insert an item into the list
returns the reference of the reference
removes the first occurrence in this list of the specified element
returns the screen depth
sets the screen depth
returns the row number of the row
sets the row bytes
returns the name
sets the bounds of the receiver
sets the
sets the name
returns the bounds of the
returns the target protocol
sets the bounds of the
sets the arguments
returns the bits of the
set the current bits
sets the signatures
returns the mask
sets the target protocol
sets the mask
sets the left position
sets the data in this map
returns the number of free space in the cache
sets the id
returns the flags for the given object
returns the cipher for this cipher
set the right coordinate of this piece
initializes the object with the given key and value
initializes the
returns the key factory for the hashing
calculates the size of the object
returns the cipher of the specified data
this method initializes main menu
loads the properties file
saves the properties to the file
this method initializes menu file
skips n bytes of the current position
this method initializes this
sets the property to the given value
moves the cursor to the specified position
returns the file to be used for the file
set the current file to the end of the current file
this method initializes menu
writes the specified byte to this output stream
returns the reason code for this code code
sets the reason code
writes the specified byte array to the output stream
close the stream
returns the user code negotiated
writes the specified byte array to the output stream
this method initializes j content pane
this method initializes menu help
sets the user code
returns an output stream to write to this socket
get the serial port
this method initializes menu exit
this method initializes j button
returns the input stream for this request
returns the mode
send an queued packet to the queue
sets the mode
returns an output stream for this socket
returns the maximum outstanding code byte code
creates a new code reader code instance
this method initializes button ok
adds a packet to the queue
sets the max outstanding value for this remote tracker
creates a code writer code instance
this method is called when the user releases the
returns the maximum info length for this message
sets the max info length
this method is called when the user releases the
this method initializes menu backup
returns the data phase
send a packet to the server
sets the data phase opt
this method initializes menu restore
this method initializes button cancel
sets the output file
creates a new code listener code
sets the protocol
this method initializes menu install
set the output stream to use for this connection
set the output stream
this method initializes menu keyboard
called when the rings
this method initializes menu about
called when the data set is ready to be sent
writes the payload to the stream
this method is called when the user releases the event
called when the is aborted
this method initializes panel status
close the connection
creates a link packet
this method initializes tabbed pane
sets the sequence of the
creates a new link packet
returns the credit
send an queued packet to the sender
sets the credit
reads a data source from the given input stream
this method initializes this
reset the sequence
sets the data
factory method for instantiating the
this method initializes j content pane
factory method for instantiating the
this method initializes button apply
factory method for instantiating the
factory method for instantiating the
returns whether the message is allowed to be used
returns the current packet
run the
sends a packet to the socket
this method initializes button help
description of the method
this method is called by the engine to validate the state
this method initializes tab password
sets the state of the connection
this method initializes tab dock
returns the
this method initializes list port
this method initializes list speed
this method initializes check pass
this method initializes button browse
returns the serial layer
this method is called when the user releases the
returns the port
reads the byte array from the payload
this method is called when the is removed from the
sets the
disconnect from the server
adds a listener to the list of listeners
removes the listener from the list of listeners
disconnect from the server
fires a command received event
this method is called when the user releases the
send command to the listeners
starts the
send a command to the queue
shuts down the
send a command to the listeners
test if the is not already initialized
send the listener to the listeners
this method is used to set the of the service
closes the socket
starts the protocol layer
test if the is not already initialized
this method is used to set the to the given name
adds a new listener to the list of listeners
returns the serial port name
create a new object
removes a listener from the list of listeners
returns the current timeout in seconds
notify all listeners that have registered interest for
accept the connection to the server
get the serial port object
notify all listeners that have registered interest for
creates a object for the given port name
fire a packet to the listeners
add all the listeners to the
returns the for the given port
stops the timer
returns an input stream to receive the input stream
create a new object
restarts the timer
receive a packet from the socket
returns the output stream
polls the stream and stores them in the
reads a single byte from the input stream
reads a byte from the input stream
write a byte array to the socket
listen to incoming packets
tests the of the
sends a packet to the socket
writes the command to the specified code
writes the payload to the specified byte array
compares two values of two arrays of different types
compares two integers
compares two integers
idle method for
returns true if the connection is connected
sends a packet to the socket
adds a new pairing filter to this filter
returns the state of this
removes a filter from the list
sets the state
returns the timeout of the
return the ring of the given packet
set the state of the given code code to the given
returns the progress monitor
called when the connection is disconnected
this method is called when the connection is about to be connected
returns the layer
sets the state of the
returns the state of the docking state
returns the layer
returns true if the connection is allowed to send the
adds a new listener to the packet
removes a listener from the packet layer
adds a listener to the list of listeners
removes the listener
method to ping the server
this method is used to ping the ping
stops the ping task
this method is used to ping the ping timer
process the command
returns true if the connection is connected to the
description of the method
delete intent intent
open the database
converts a point from the coordinate map to the center point
this method is used to create a new puzzle
creates a new history entry
attach the history model to the history model
creates a new puzzle
sets the date when the user has edited the date
returns the session associated with the request
sets the date when the task was completed
returns the current user info object
adds a new child to this list
attach a puzzle model to this puzzle
sets the date published date
sets the tutorial key
creates a new room
deletes the puzzle from the given puzzle model
converts a value to a string
returns the view view
enables or disables the direct control
switches to the switch state
enables the callbacks for the panel
switch to the edit room
switch to the play state
disables the listener for the code paint code event
creates the states of the grid
updates the room
enables the text editing
adds a room to the room
disables the text editing of the text editor
removes a room from the room
sets the user info to the given user info
adds a group to the group
checks if the room is valid
adds a default link to the group
adds a link to the group
find the index of the room at the room vnum
returns the link group at the given index
loads the given user info object from the database
checks if the room area is valid
loads puzzle and the given puzzle
modify a user account
create the user info object
load history info
checks if the user is enabled
adds a callback to the list of callbacks
finds the room at the given location
removes a callback from the list of callbacks
enables the callbacks for the settings
disables the handler for the callbacks
append custom parameters to the custom format
this method is called when the user modifies the modify profile
registers a list of available puzzle objects
creates puzzle list info object
p this method is called after the user has been made
builds a hyperlink for the given hyperlink
appends the room moves to the given move
append a custom parameter to the request
append custom parameters to the custom parameters
executes the cancel action
returns the puzzle
adds a link to the link
sets the registration state of the dialog
deletes the puzzle
refresh the display
adds a new tab to the tab
selects the tab at the specified tab number
checks if the components are filled in the room
sets whether the tab is visible or not
selects the specified row in the table
changes the style row of the table
deletes puzzle from puzzle
updates the display
sets the allow half of the
adds a callback to the list of callbacks
this method is called after the login is done
removes a callback from the list of callbacks
executes the search
executes canceling of the cancel button
enables the callbacks
disables the filtering of the popup
enables the callbacks for the callbacks
disables the handler for the click handler
this method is called when the state machine is exited
this method is called after the state is closed
sets the token factory
enters the given state
sets the puzzle list to the given puzzle
sets the title of the main panel
sets the title of the puzzle
checks if the ok button is enabled
enables or disables the login
override to override the update of the page id
enables the for the next available
adds a callback to the list of callbacks
disables the controller
sets the current state of the state
removes a callback from the list of callbacks
enables the registration of the service
sets the parameters for this type
executes the given puzzle
sets the value of the simple property params
executes the cancel action
enables the new puzzle
sets whether the tab is visible or not
this method sets the current panel to the right of the top
disables the custom puzzle
sets the no left bar view
sets the bare view of the view
switch to the current state of the welcome button
returns the token
switch to puzzle puzzle
returns the size of the main widget
returns the language of the puzzle
sets the state of puzzle to the given puzzle
switch to the puzzle puzzle
sets the value of tutorial
returns the genre and size
returns the search token
switches the current state of puzzle puzzle to new puzzle
returns the history info object at the given index
returns the puzzle object
checks if the model key is already stored in the history model
returns the author username
returns the new puzzle token
sets whether or not the database should automatically refresh the refresh
this method is used to edit the puzzle
switches the current state of the current state to a new tutorial
sets the key of the puzzle
returns the new value of the new tutorial token
sets the of the puzzle
reloads the user interface
switch to a given
returns true if the model has been added
renames the puzzle
returns the token of the given
deletes a puzzle from the room
register a new puzzle
gets the factory for the given genre
publish the puzzle
publish the puzzle
appends the move to the end of the list
send puzzle to review
visits the the node
accept the user registration of the puzzle
sets the previous message
make puzzle puzzle
gets the value of the puzzle info property
returns the tutorial info history info object
returns the current time
sets the grid size
switch to puzzle puzzle
sets whether or not the datastore is in datastore
switch to the given code code
adds a move to the move
returns the move at the given index
returns the number of moves in the list
checks if the move contains the message
switch to the current state of the current state
returns the value of the setting token
switch to admin
returns the admin token
creates a new puzzle model
creates a new puzzle
creates a new rating panel
disables all the widgets in this container
set the time of the time
updates the rating panel
returns the time in milliseconds
returns the label for the given label
disconnect from the server
opens a new
disconnect from the given island
returns the other island object
returns true if the given island is connected to this island
returns the ith location
sets the message text
updates the zoom and pan history
creates a new bridge
adds a toolbar to the history
deletes the bridge from the given model
updates the history of the game
removes the history toolbar
adds a new island to the list
adds a new history node to the room
clears the history history
removes a from the list
recreates all nodes in the tree
sets whether all history buttons should be visible or not
get a bridge from the
adds a bridge to the list of
connect to the given direction
disconnect from the given direction
disconnect from the bridge
disconnect from bridge
checks if the direction is a direction
removes a bridge from the list
converts a time to a node position to a node position
creates a new
deletes the given planet from the model
adds a new island to the list
converts a node into a long value
show the history view
remove a from the list
returns the x coordinate of the given node
show the history
sets the site info
returns the height of the header
hide the history
loads the information about the service delegator
removes a bridge from the given list
removes all the components from the panel
modify the given site info object
removes a bridge from the bridge
sets the puzzle view
adds a new node container to the container
enables the callbacks
disables the observer
removes all from the bridge
sets the move timer to be used when the
this is used to determine the of the given
updates the puzzle panel with the given size
draws a line in the list
sets the view to be used for the puzzle
returns the index of the move in the history
sets the visibility of the puzzle
clears the usage map
pan the current zoom level and pan of the zoom factor
returns the value of the island
displays the message
updates the history
sets the text of the timer
creates a site object
clears the text and clears the text
returns the current time in milliseconds
checks whether the user has the current site name
adds a callback to the list of callbacks
removes a callback from the list of callbacks
returns the duration of the
returns the current time in the chart
executes the modify all changes
applies the given site info to the list of all the
returns the duration of the
this method is called when the user selects to reset the settings
executes the cancel action
changes the location marker location
change time marker
converts a time bar to a long
clears the list of all the handles
sets the time of the puzzle
clears the changed flag
returns whether the data has changed
checks if the user can edit the content of the given puzzle
checks if the user can play a given puzzle
sets the internal enabled state of the
checks if the current thread is enabled
checks if the user can edit a given user
checks if the user can view the given owner
copies the provided array into this one
sets the global lock flag
returns the size of the string
sets the global lock on the screen
this method is used to convert the given size into a string
adds a callback to the cache
initializes the validation and returns the result
adds a callback to the notification queue
acquires the current lock
checks if the x value is valid
checks if the y coordinate is valid
release the lock
returns true if the user can edit history
this method initializes this
locks the tool
restores the state of this object
initialize the text box
returns true if the lock is locked
show the message
change the location of the image to the target
hides the message panel
sets the value of the marker at the given position
returns true if the given rectangle overlaps with this rectangle
returns true if the cell at the given location is contained in
clears the state of the
returns the size of the grid
appends all the pieces of the given move to the list
check if the given class is consistent with the given class
returns the view
sets the style of the widget
sets the pixel size of the image
set focus to the focus
all edges in the graph
sets the vertex rectangle for the vertex
selects all text in the text box
sets the maximum length of the text
deletes all items in the given list
sets the vert edge
sets the triangle that this vertex is shifted
adds a drawable to the view
removes a vertex drawable from the drawable
removes a cell from the given cell
updates the size of the widget
sets the
removes a vertex drawable from the drawable
sets the offset of the current position
removes a cell from the given cell
sets the label text
sets the size offset
create a new panel string
sets the image url
removes a drawable from the list
removes a drawable from the list
sets the
this method is called when the drawable is created
sets the widget to use for this widget
method to create a drawable object
returns the x coordinate of the pixel at the specified location
returns the y coordinate of the pixel at the given location
clears the drawables panel
resizes the canvas
cycle state from a
creates the default toolbar toolbar
updates the highlight of the text area
adds a callback to the callback
removes a callback from the canvas
release the current state
returns whether the given color state is in the state
returns parity location of the given location
check the state of the state
check that the state of the state is valid
creates the default play toolbar
returns the state of the given location
creates the default view toolbar
enables or disables the
enables or disables the edit tool
enables or disables the play button
enables or disables the resize button
enables the verification of the tool
resizes the dialog to the default size
creates the edit message dialog
shows the puzzle dialog
starts the
starts the game
show the view
show the tutorial that the tutorial is about to show
removes a new code callback code from the list of callbacks
saves the history to the game history
executes the tutorial
executes the exit
checks if the puzzle is already saved
undoes the next move
handles the mouse move event
handles the mouse event
leaves the mouse event
creates a new message dialog
creates the dialog
returns the cell size of the cell
returns the cell at the given position
adds a callback to the callback
adds a callback to the callback
adds a callback to the list of
adds a callback to the list of vertex callbacks
removes a callback from the list of callbacks
removes a callback from the list of
removes a callback from the list of
removes a callback from the graph
adds a mouse down handler
adds a mouse up handler
adds a mouse handler handler
adds a mouse out handler
sets the relative vertex size
sets the relative size of the edge between the relative edge
returns the data source statistic object for the specified
returns the note
returns the note with the given note
change the note of this note to a new one
returns the number of notes in the collection
returns the maximum time in milliseconds
register a statistic object for the given statistic
test method for
test method for
tests adding a note
tests that a note change is that then
test method for
tests the add method
tests the change firing of a chord change
test method for
set the entity to the given entity
internal method to remove an existing entity from the list
unlink the given entity from the list
get the list of all entities in this set
returns a list of all children of this entity
add an entity to the set
changes the entity of the entity
remove an item from the list
register a new register
sorts the note
remove an entity from the list
adds an entity to the list
changes the entity of the entity
register a register in the data register
returns the time
parse a midi midi note on the channel
parse a midi midi note off midi midi midi midi midi midi
returns the start of the range
returns the duration of the audio
adds a to the
compares two
set the time the thread will start
returns true if the is verified
returns the
compares two
gets the value of the property
creates a new synthesizer message builder
resets the buffer to the target
get a device from the device
executes the given fiber
close the connection
returns a string representation of the object
returns the maximum number of receivers to display
returns the position of the current
returns the maximum
returns the transmitter
returns true if the device is open
close the device
returns the receiver
sends a midi message to the midi channel
sets the receiver
returns an enumeration of the requests
returns an enumeration of the requests
performs the request
switches to the experiment
initializes the table
connect to database
returns the normal value for the given normal
writes an instance to the input stream
clones this window
returns the result of the given media
read a portion of an array
fills the buffer with the current position
returns the number of samples in the collection
writes the given node to the output node
sorts the given value into a given value
writes the given node to the output node
returns the dl query
indicates whether some other object is equal to this one
returns the hash code value for this url
compares this object against another
returns the field value for the given field
find the object that is associated with the given class
compares the specified object with this tracker for equality
returns the hash code value for this agentwise
find a document by its id
find a object
find a harvest harvest harvest harvest harvest harvest harvest harvest harvest harvest
description of the method
returns a document with the given identifier
stops the harvest
saves the current state of the
this method is called when the harvest finishes
called when a harvest finishes
find a object
end harvest harvest harvest
find a field name
creates a new
find a web source
retrieves a field name by its name
saves the given web application to the database
find or create a field with name and name
indicates whether some other object is equal to this one
initializes the
adds a new instance to the model
main processing method for the document tester
stops the applet
checks if the two objects are null
stops the harvest
gets harvest harvest
stop the harvest
stops the crawling process
deletes all jobs from the job queue
get the controller for harvest harvest
returns the name of the given harvest tracker
classify the contents of the given string
this method is called when the user selects the server socket
returns true if the string has enough digits to be used
closes the dialog
this method is called when the user presses the
this method is called when the user presses the
this method is called when the monitor has been released
gets the state
returns the size of the buffer
encode a buffer to a buffer
prints out the print stream
print the contents of the stream to the given stream
returns the string representation of this object
prints a print stream to the output stream
prints out the print stream
print the contents of the stream to stdout
print the print stream
print out the contents of the stream
print the contents of the stream to stdout
print the contents of the stream to the given stream
print the contents of the stream to stdout
print the contents of the stream to the given stream
prints a print stream to the output stream
print the contents of the stream to stdout
prints out the contents of the stream to the given stream
prints out the contents of the stream to the given stream
print the print stream
print the contents of the stream
prints the contents of the
prints out the contents of the current file
print the contents of the print stream
print the contents of the stream
print the print stream
print the contents of the stream to stdout
prints out the contents of the stream to the given stream
print the contents of the stream to stdout
print the contents of the stream to stdout
prints out the contents of the stream to stdout
print the print stream
ensures that attempting to parse a invalid component
ensures that the invalid thing is invalid
p append to the code to string code the end of the
returns true if the given field is a static field or not
compares its two arguments for order
resolve the object to the singleton constant
compares this object with the specified object for order
p appends a string representation of the receiver
p append to the code to string code an code object code
p append to the code to string code an object code field
p append to the code to string code the class name
p append to the code to string code the identity hash code
verifies that the object is accessible
verify that the list bindings are registered
returns true if the driver is a
returns true if the file is writable
returns the name of the first context
returns the name of the second context
returns the name of the first element
returns the first object in the array
returns the name of the second bound
returns the object bound to this referent
sets the array end
set the base document base
returns the expected attributes for this element
returns true if the schema supports the schema
returns true if the attribute modification is supported
this method returns the attribute name for the attribute name
returns the value of the attribute
adds the attribute name to the attribute
override this method to add attributes to the attribute
remove the attribute name
verifies that the object is accessible
verify that the expected values are returned
verify that the given list of attributes are set correctly
test of get name in namespace method of interface java
test of method of class
tests the method get attributes
returns the creation date
test the loading of a resource
test the duplicate name of the name of the
test jdbc
returns the name of the first context
returns the name of the second context
returns the name of the first element
returns the first object in the list
returns the name of the second bound
returns the object that is bound to the object
verifies that the expected
returns the step by name
goes to the previous transition
returns true if the current step is currently being
check if the user can leave the listeners
returns the name of the current step
adds a listener to this manager
remove a listener
removes all listeners from this manager
returns the listeners map
clears the errors
this method is called when the connection is removed
returns the model
sets the id
sets the length of the buffer
processes the
processes the
returns the scopes of the scopes
returns the
sets the locale
returns whether the security is enabled
sets the authentication blocks
verify that the remote host proxies is available
verify the signature of the given service
returns the length of the buffer
writes the packet to the given output stream
set the attributes
sets the scopes of the list
sets the authentication blocks
returns the value of the em b em em b em em
set the value of the alloc attribute list attribute
signs the given
verify that the host is valid for the host
signs the contents of the given string
verify that the host is a server
returns the is service
signs the given string
returns true if the authority is a
verify that the server is valid
returns the concrete type name for the concrete type
returns the type name
checks if the object matches the given object
returns the abstract type name
sets the opaque bytes value for this
gets the opaque string
sets the opaque string
returns true if the specified object matches this type
returns the protocol of the protocol
checks if the specified code value code is equal to this
returns true if the current instance is equal to the given code
sets the host
compare two byte array
returns true if the given array of characters are equal
returns the path to the file
writes the header to the specified output stream
returns the length of the buffer
returns the url of the url
set the url
returns the replication interval
test adding a new rdn to the ldap
test adding a sign in method with a sign in ldap
test adding a new with a new object
test adding a to the
test method called by platform specific sub class to
tests the delete method
method inserted is called when a new distinguished name is removed
this method is called when the instance is removed
tests that the context is a search
returns the name of the
test method for
sets the replication interval
test method for javax
test method for org
test method for org
test method called by rdn
test method called by platform specific
test method for
test of delete method of class org
tests that the
tests that the ocl attribute delete is called
test method for
for standard language
register the to the deployment
creates an instance of the resource
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
called when the bundle starts
called when the bundle is stopped
the service changed method
get the test entry attributes
execute the mojo
adds the manifest file to the manifest
add the manifest entries to the manifest
adds the bundle version to the bundle
this method is used to acquire a connection to the session
reconnect to reconnect
test if duplicate name is not null
this method initializes mail session
sets the context
sets the protocol provider
returns true if the is
retrieves the first name of the connection
sets the callback handler
returns the callback handler for this
checks if the named object already exists in the database
configure the environment
get the sql string for a member
creates an instance of a class
retrieves the member
returns true if the specified element is a
close the cache
adds an object to the list
this method is called when the user has already been processed
deletes the object
adds a new rollback action to the list
puts a mapping entry into the cache
enables disables the read mode
initializes the
refresh the object
remove a mapping from the type holder
save the object
set the for the
prints the tree to the root tree
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j content pane
this method initializes j scroll pane produtos
this method initializes j text field inicio
this method initializes j table produtos
this method initializes j text field
this method initializes j scroll pane
this method initializes j table
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j content pane
this method initializes j text field total
this method initializes j button
this method initializes j content pane
this method initializes j text field inicio
this method initializes j text field
this method initializes j button total
this method initializes this
this method initializes j panel id
this method initializes j text field id
this method initializes j text field min
this method initializes j text field max
this method initializes this
this method initializes this
this method initializes j content pane
returns the number of the current
sets the value for this activo
this method initializes j panel
gets the value of the top produto property
setter for property top produto
this method initializes j button cancelar
this method initializes j text field nome
this method initializes this
this method initializes j text field nome
this method initializes j text field
this method initializes j text field nome
this method initializes j text field min
this method initializes j text field
this method initializes j button cancelar
this method initializes j combo box categoria produto
this method initializes j content pane
this method initializes j scroll pane
this method initializes this
this method initializes j
this method initializes j
this method initializes this
this method initializes j text field valor
this method initializes this
this method initializes j text field valor
this method initializes j text field valor
this method initializes j text field nome
this method initializes this
this method initializes j panel
this method initializes j text field valor
this method initializes j text field nome
this method initializes j button1
this method initializes j button2
this method initializes j text field
this method initializes j text
this method initializes j button3
this method initializes j text
this method initializes j panel1
this method initializes j text
this method initializes j button4
this method initializes j password field
this method initializes j panel buttons
this method initializes j button5
this method initializes j panel buttons
this method initializes j button ok
this method initializes j button6
this method initializes j button7
this method initializes j button8
this method initializes j button cancelar
this method initializes j
this method initializes j button
this method initializes j button limpar
this method initializes j
this method initializes j button
this method initializes j panel list produtos
test method for database connection
this method initializes this
shows the
this method initializes j content pane
this method initializes j check box activo
this method initializes j check box
fecha o
this method initializes j button todos
this method initializes j jmenu bar
this method initializes j menu produtos
this method initializes this
this method initializes j button
this method initializes j menu item produto
this method initializes j content pane
this method initializes j menu item produto
this method initializes j panel
this method initializes j button
this method initializes produtos
this method initializes j menu conf
this method initializes j button top
this method initializes j menu item conf server
this method initializes j menu item
this method initializes this
this method initializes this
this method initializes j menu
this method initializes j menu
this method initializes j menu item virtual keyboard
this method initializes j menu item conf
this method initializes j menu
this method initializes j menu max
this method initializes j panel
this method initializes j menu item
this method initializes j panel buttons
this method initializes j button
this method initializes this
this method initializes j button cancelar
this method initializes j scroll pane
this method initializes j list
this method initializes j panel
this method initializes j text field total
this method initializes j menu
this method initializes j menu item
this method initializes j text field
this method initializes j text field
this method initializes j panel
this method initializes j button limpar
this method initializes j button1
this method initializes j button2
this method initializes j button3
this method initializes j button4
this method initializes j button5
this method initializes j button6
this method initializes j button7
this method initializes j button8
this method initializes j
this method initializes j button
this method initializes j
this method initializes j
this method initializes j button todos
this method initializes j button
this method initializes j button
this method initializes j panel produtos
this method initializes j button
this method initializes j button enter
returns the from
creates a message
sets the value of the from property
returns the to
returns the value of the specified xpath expression
sets the value of the to property
adds an xpath expression to the message
constructs a packet from the message queue
returns a string representation of the given byte array
returns the value of the data in the data
returns the bytes in the digest
returns the string value of the specified length
returns a string representation of the given byte array
returns true if the given bit set is in the data set
returns the value of the string orf 1
returns the given bytes as a byte
returns true if the given string is a valid value
checks if the given data is a
returns the string representation of the given bytes
returns the value of the data in the
returns the value of the data in the
reads a single byte from the input stream
receives a packet from the server
sends a message to the server
connect to the specified host
this method is called when the connection is about to be created
returns a packet
receives a packet from the server
sends a message to the server
this method is used to get the packets associated with the given
connect to the server
this method is called when the connection is about to be created
connect to the server
sends a message to the socket
closes the connection
find the first element of the given tag
sets the tag
sets the value of the element
add an element to the list
adds a new attribute
sets the action output
sets the process output
parses the form
returns the writer used to write the
returns the output stream to use for writing to the
forward the forward command
initialize the servlet
tears down the fixture for example close a network connection
test of read method of class
test the method
test method for
test that the file is excluded from the database
test method for
test method for
test method for
initialize the digester
parses the input stream
returns the current page breaks
parse the given file
sets the luv lexer to the given one
p this method is called when the web application is destroyed
add a new field to the list
returns true if the property is configured to validate whether the
returns the number of fields in this field
adds a method to the list
returns the field with the given index
add a new line to the end of the line
clears the fields of the current object
returns the number of methods in this class
returns a list of all methods
adds a timing to the list
adds a variable to the list
returns the method with the specified index
returns the snapshot of the current project
returns the timing size of the timing
returns the number of variables in this variable
this method is used to determine which properties are stored
sets the snapshot
removes all the methods from this class
returns the number of lines in this line
returns a list of all
returns the variable at the specified index
clears the variables
returns the timing at the specified index
process the start of this element
returns the line at the given index
clears the timing
clears the line
returns the exclude
initialize the output
returns the connector for the specified name
get the entry times for the given thread
returns the string of the given field
checks if the given class name is already in exclude
the main thread
this method is used to unload the event
the event handler method for the event dispatching
this method is called when the is dead
this method starts the thread
this method is called when the vm vm
this method is called when the vm is started
gets the billing attribute of the object
returns the
returns the
returns the status of the scheduler
sets the billing value for this weather parameters type
sets the
sets the
sets the scheduler
returns the
sets the
returns a keyword
set the class of the generation of the class
sets the connection connection url
sets the http class
returns the string representation of the current value
checks whether the given keyword is a numeric or not
returns the value of s
gets the batch sum flag
sets the batch sum flag
appends a list of output to the output
getter for property
getter for property
sets the value of the property
getter for property
getter for property
sets the map dates to expiration
sets the value of the property
gets the
sets the value of the property
getter for property
returns the
returns the
getter for property
sets the value of the property
getter for property
sets the value of the property
sets the value of the property
sets the debug flag
returns the driver
displays a message to the user
sets the value of the task id property
displays the message info message
display an error message
display the info message
returns the jdbc driver class
sets the value of the question if unsaved property
sets the model to the given model
sets the url
returns the url
sets the value of the id property
gets the id
connect to the database
sets the value of the id property
puts a key value pair into the cache
execute the sql select statement
sets the result set to the result set
puts an object into the cache
execute the sql statement
sets the value of the id property
puts a value into the list
description of the method
set the manifest
returns the object associated with the given key
sets the rows in the resultset
test of main method of class main
sets the value of the est mi property
returns the object by its value
sets the debug flag
converts a double value to a long
returns the value of the given code value code
returns the type of the item
returns the
returns the weight of the
compares this item to another sort item
adds a bar to the list
adds a list of bars to the list
set the list of input objects to be displayed
adds a list of items to the list of items
sets the value of the complete property
adds a bar to the list of input objects
calculate the values of the
starts a transaction
output the output of the given list of items
builds the sorted list of dates
gets the rev flag
saves the current transaction to the database
undoes the current transaction
sets the value of the rev flag property
gets the precision of this node
returns the lock plan flag
sets the precision of this node
returns the maximum allowed weight of the message
returns the maximum allowed weight of the
sets the value of the lock plan flag property
sets the password
gets the auto compute flag
sets the value of the auto compute act flag property
gets the complete complete percentage of the complete complete
sets the value of the complete type property
returns the duration type
sets the value of the duration type property
getter for property review type
gets the value of the property
sets the value of the review type property
sets the
gets the status code
gets the value of the property
sets the value of the status code property
sets the
getter for property task code
sets the value of the task code property
returns the object
sets the object
sets the value of the total float hr count property
sets the value of the free float property
sets the value of the consumption hours property
gets the amount of the
sets the value of the act work qty property
returns the amount of transferred
returns the level separator
sets the value of the consumption work property
returns the file
sets the value of the target work qty property
sets the value of the target property
sets the value of the target equip qty property
gets the value of the act equip qty property
sets the value of the act equip qty property
sets the value of the consumption height property
sets the value of the date property
sets the value of the act start date property
sets the value of the late start date property
sets the value of the late end date property
sets the value of the expect end date property
gets the early end date
sets the value of the early end date property
sets the value of the restart date property
sets the value of the date property
returns the target time
sets the value of the target start date property
returns the end date of the target end date
set the mask for this component
sets the value of the target end date property
sets the window mask
set the window mask to be used as the current window
sets the value of the review end date property
sets the window mask
sets the value of the rem late start date property
set the force to the given window
sets the value of the rem late end date property
returns the type
sets the value of the type property
returns whether the given window is a window
returns the priority type
sets the value of the priority type property
gets the value of the zipcode guid property
sets the value of the guid property
sets the value of the date2 property
getter for property type2
sets the value of the type2 property
gets the value of the act in per work qty property
sets the value of the act it per work qty property
sets the value of the act it per agency quantity property
returns driving path flag flag flag
set the background of the window
set the alpha component of the given window
returns the graphics compatible configuration for this code
sets the link extractor
starts the
sends the broadcast to the socket
stops the server
exits the application
creates the global menu bar
create the contents of the window
sets the information about the server
creates the game container
adds a server to the list
check if the given info exists in the list
starts the search
clears the list of the servers
returns the ip address
returns the service port
add a page to the page
encodes the password using the password encode
validates the given email
checks if the password is valid
record the record with the current record
stops the recording
records a new record
stop recording and close terminal
test of method of class
test of int method of class
test of successful method of class
test of failure method of class
authenticate user user
returns the source coordinate of the event
returns the destination of the connection
sets the board displayable
exits the application
description of the method
returns the men set
finds the first move in the list of moves
removes the specified point from the given position
adds a chess board to the agenda
returns the man at the given coordinate
checks if the given move is legal for the given road
returns true if the white board is white
returns a list of all the squares reachable from the given
adds a chess board listener to the board
remove a chess board listener
returns the image for the given man
clones the stale
checks if the player has already been discovered
checks if the given is a check location king
converts a coordinate to a coordinate
adds a new listener to the list of listeners
remove a set of men
announces the room that the room has been moved
checks if the given code move code is a king
returns the squares of the given code move code
returns true if the given property is a chess board or not
find the king of the brush
remove a tag from the target
compares this tag to another
calculate the position of the line segment
returns the preferred span for this view along an
load the fonts from the file
load the font from the preferences
description of the method
displays the word in the list
load the font label
this method initializes this
this method initializes j content pane
this method initializes j button
loads the fonts fonts fonts into the
initialize the config
initializes the language
displays the search result
construct the index tab
search the word in the
loads the application configuration file
returns the key for the given key
sets the text of this component
sets the font of this component
returns the gif image
returns the image decoder to use for the
writes the to the
reads the file and frees the
returns the chunk
the file
returns the length of the buffer
reads a signed integer from the stream
writes a 32 bit integer value
returns the string as a string
returns the text area
reads a signed 16 bit integer from the stream
sets the text content of the text area
returns the text in the text area
writes a value to the stream
reads a signed integer from the stream
copy the file to the destination file
reads a string from the stream
this method is used to parse the data from a string
verifies that the file is not already in the current directory
returns the parent file
insert a blank blank record at the specified position
sets the parent file
returns the start byte
sets the start byte
returns the parent chunk
sets the length of the buffer
returns the number of loops
returns true if the is
auto generated getter method
gets the flag
returns the sort flag
returns the method
returns the local color table size
append a source file to the end of the file
returns the transparency flag for the color
returns the transparent color index
returns the value of the flag
append a byte to the file
returns the value of the sort flag
returns the resolution of the current resolution
returns the file header
returns the size of the
returns the aspect ratio of the barcode
returns the global color table
remove extension chunk from the stream
returns the image
returns the parent chunk
returns the width of the pixel in pixels
remove extension chunk
returns the rendering intent
returns the unit specifier
returns the pixel height of the image
returns the compression type
returns the color type of the color
returns the filter method
returns the chunk data
returns the method
upgrades the to the
returns the chunk type
returns the checksum of the checksum
creates a new text chunk
returns the offset to the data offset
adds a keyword to the dictionary
returns the parent chunk
returns the file header
returns the header
returns the color palette
creates a new time chunk
returns the bitmap data object
creates a new file
returns the parent chunk
returns the translated keyword
returns the color spanned by this mesh
returns the number of bits per pixel in the pixel
returns the compression level of this connection
returns the image size
returns the x resolution of the x coordinate
returns the y resolution in pixels
returns the number of colors
returns the number of important colors
this method starts the file
this method starts the image
remove extension chunk
returns the y coordinate of the pixel in px
returns an initiliazed instance of canvas component
returns the counter canvas for the canvas
returns an initiliazed instance of back command3 component
returns an initiliazed instance of exit command component
this method initializes text box
returns an initiliazed instance of back command component
returns an initiliazed instance of image2 component
returns an initiliazed instance of form component
returns an initiliazed instance of text field component
returns an initiliazed instance of item command component
returns an initiliazed instance of component
returns an initiliazed instance of image component
returns an initiliazed instance of alert component
returns an initiliazed instance of component
returns true if the specified element is in the
returns true if the specified coordinate is in the list of
returns true if the specified coordinates are in the
returns true if the given position is contained in the bounds
returns true if the given point is inside this word
optimizes the
checks whether the given column contains the given number
checks if the given row contains the given position
returns the first word in the list
returns the first word in the list before the given
returns the first character of the right or null if none
returns the last word character
returns the last character in the left side of the left hand
get the start point of the segment
returns the end position of the character
get the start position of the
returns the end date of the character
returns the first value of the given class
executes a batch with hql and return the result
creates a new query
getter for property logged user name
returns the password of the logged user user password
returns the id of the transport
returns the name of the transport
releases a connection pool
returns a code http urlconnection code with the specified
returns the string representation of the exception
configure the project
removes the from the project
adds the to the project
removes the from the classpath
visit the resource
this method is called when the plug in is stopped
saves the state of the memento
notifies this content provider that the given viewers input
checks if the given text matches the current text
runs the editor
opens the editor
selects the selected projects
updates the selected projects
initializes the content panel
configure the shell
returns the package pattern
returns the class name of the test suite
returns the pattern class
returns the directory to which the files are being downloaded
set the scale of the
returns the string representation of this object
returns a deep copy of this object
clears the current state of the
returns whether or not this part has a strip
returns the bounds of the view
test of read method of interface java
removes a range of values from the end of this list
returns the view
returns an enumeration of the attribute names
returns the content of the resource
returns the preferred size of the label
sets the translation hash
returns the translation hash
adds a listener to the cell editor
returns true if the row height is fixed height
creates a new instance of plugin loader
creates a new plugin loader
returns the plugin path
set the plugin path
sets the plugin path
returns the plugins hashtable
reads the content of the code code
returns the document
sets the document
returns the root element of the tree
returns the number of children of parent
returns true if the specified node is a leaf
returns the index of child in parent
adds a listener for tree model events
removes a listener for tree model events
returns the value of the cell editor
returns true if the editor is editable
returns true if the text field is selected
this method is called when the component is done
called when the cell editor is canceled
adds a listener to the list of listeners
removes a listener from this cell editor
notify all listeners that have registered interest for
notifies all listeners that have registered interest for
invoked when an action occurs
notifies all listeners that have registered interest for
validates the xml file
returns the validation error
pops down the popup menu
returns the document type definition
set the dtd definition dtd definition
returns true if this node is a leaf
sets the bias value for this
returns the name of the module
returns the name of the module
returns the name of the module
returns the name of the module
returns the name of the module
returns the name of the module
returns the default max number of the rule
returns the name of the module
returns the name of the module
this is the entry point method
returns the name of the module
returns the name of the module
returns the name of the module
returns the name of the module
this method initializes this
this method initializes j tabbed pane
this method initializes j panel customers
this method initializes j panel products
this method initializes j panel orders
this method initializes j button1
this method initializes j button2
this method initializes j button3
this method initializes j button4
this method initializes j tool bar
this method initializes j panel
this method initializes j button5
this method initializes j tool
this method initializes j tool
this method initializes this
this method initializes j toggle button
close the stream
this method initializes this
returns the background color for the specified row
this method initializes j panel text
this method initializes j panel days left text
this method initializes j button
this method initializes j button continue
this method initializes j panel buttons
this method initializes j button search
this method initializes j button activate
this method initializes j text field customer id
this method initializes j panel buttons
close the popup
this method initializes j text field supplier id
close the popup
this method initializes j button search
this method initializes j text field id
this method initializes j text field product id
close the popup
this method initializes j button search
this method initializes j combo box search invoice
this method initializes j combo box search receipt
this method initializes j combo box search type
this method initializes this
this method initializes this
this method initializes j check box change amount
this method initializes j panel product table
this method initializes j check box auto purchase
returns the search toolbar
get the selected row
sets the selected item
this method initializes j panel customer table
this method initializes search toolbar
this method initializes j panel date
this method initializes j panel
this method initializes j right device
this method initializes j scroll pane remarks
this method initializes j text area remarks
clears the table
gets the customer
this method initializes j text field height
this method initializes j text field angle
this method initializes j text field special x
this method initializes j text field special thickness
this method initializes j text field
this method initializes j text field distance
this method initializes j text field
this method initializes j text field frame width
this method initializes j text field frame height
this method initializes j text field width
this method initializes j text field read distance
this method initializes j text field insurance company
this method initializes j text field insurance number number
this method initializes j scroll pane orders
this method initializes j text frame
this method initializes j check box
gets the data
this method initializes j check box
gets the data
gets the data
set the data
this method initializes j scroll pane
gets the data
this method initializes j text
this method initializes j text
this method initializes j panel report table
getter method for component search toolbar
getter method for component search toolbar
getter method for component search toolbar
getter method for component search toolbar
getter method for component search toolbar
getter method for component search toolbar bar
this method initializes search toolbar
returns the
this method initializes j panel purchase details
returns the edit toolbar
this method initializes j panel purchase table
creates a new
returns the
this method initializes this
this method initializes j panel price
this method initializes j panel buttons
returns an instance of the gui
this method initializes search toolbar
sets the data
this method initializes
returns the search toolbar
sets the data
sets the data
sets the data
this method initializes
getter method for component search toolbar bar
this method initializes j text field customer id
returns the for the spinner
set the data
this method initializes this
this method initializes j text pane
this method initializes j panel direct table
this method initializes
this method initializes j panel direct details
this method initializes
this method initializes j panel product package details
this method initializes j panel product orders
this method initializes j check box change amount
this method initializes j check box auto purchase
this method initializes search search
this method initializes j panel supplier details
this method initializes search toolbar
this method initializes j panel supplier table
this method initializes
this method initializes this
this method initializes j text field last name
this method initializes j text field street
this method initializes j text field city
this method initializes
this method initializes j panel pre authorized payment table
this method initializes j panel supplier details
this method initializes j text
this method initializes j text field first name
this method initializes j text field middle name
this method initializes j text field initials
this method initializes j combo box
this method initializes j scroll pane
returns the edit toolbar button
this method initializes j scroll pane list
this method initializes j panel buttons
this method initializes j scroll pane list
this method initializes j scroll pane
this method initializes j scroll pane
this method initializes j button receipt
this method initializes j button no receipt
this method initializes j button cancel
this method initializes j panel
this method initializes j panel buttons
this method initializes j panel buttons
this method initializes j scroll pane list
this method initializes j scroll pane alarm pane
this method initializes j panel buttons
this method initializes j label employee
this method initializes j label lbl
this method initializes j panel buttons
this method initializes j panel form
this method initializes j scroll pane
this method initializes j panel list
this method initializes j scroll pane list
this method initializes j
this method initializes j tabbed pane
this method initializes j scroll pane users
this method initializes j list users
this method initializes j scroll pane management access
this method initializes j scroll pane management available available
this method initializes j list management access
this method initializes j list management available available
this method initializes j panel management buttons
this method initializes j button add management
this method initializes j button remove management
this method initializes j panel password
this method initializes j button change password
this method initializes j check box check password
this method initializes
this method initializes j check box insert rights
this method initializes j check box update rights
this method initializes j check box delete rights
this method initializes j check box read rights
this method initializes j check box print rights print
this method initializes j check box config rights
this method initializes
this method initializes j panel text
this method initializes j scroll pane list
this method initializes j scroll pane template
this method initializes j scroll pane
this method initializes
this method initializes
this method initializes j panel form
this method initializes j panel buttons
this method initializes j scroll pane progress
this method initializes j text area progress
this method initializes
this method initializes j list files
this method initializes j scroll pane files
this method initializes j panel form
this method initializes
this method initializes j scroll pane error text
this method initializes j panel buttons
this method initializes
this method initializes j scroll pane progress
this method initializes j text area progress
this method initializes
this method initializes j text area status
this method initializes j tabbed pane
this method initializes j panel new
this method initializes j
this method initializes j panel sent
this method initializes j
this method initializes j panel buttons
this method initializes j scroll pane template
this method initializes
this method initializes j panel buttons
this method initializes j combo box type
this method initializes j check box purchase price
this method initializes j check box sell price
this method initializes j check box all types
this method initializes j text field percentage
this method initializes j text field rounding
this method initializes j
this method initializes j check box
this method initializes j
this method initializes j panel form
this method initializes j panel product search
this method initializes j scroll pane list
this method initializes j scroll pane filter
this method initializes j panel buttons
this method initializes j scroll pane
this method initializes j panel customer search
this method initializes j panel buttons
this method initializes j button ok
this method initializes j list user config
this method initializes j panel buttons
this method initializes j button cancel
this method initializes j button no receipt
this method initializes j button cancel
this method initializes j check box active
creates a new glass glass
returns a string representation of the row
sets the default preference store
sets the sort direction
returns true if the object is comparable
returns the text of the column
adds a table columns to the table
sorts the dataset
executes the given
returns the number of in the
returns the content provider
returns true if the data set contains the data set
sets the content of this list
returns the label provider
initializes the content provider
sets the content provider
compares this to another
returns true if the queue is empty
returns true if the chart is a line chart
returns true if the chart is valid
this method initializes message container
updates the provider information
refreshes the panel
removes the message from the message container
show the message
creates the description panel
this method initializes this
create the stats panel
adjust the label widths
initializes the dialog
adds the actions to the dialog
adds the actions to the chart
removes the message from the message
sets the default values of the list
calculate the percent of the
cancels all the agents
returns the parent container
returns true if the title is a valid provider
cleans all containers in the container
writes the percent to the given amount
update the provider parameters
sets the result composite
sets the enabled state of this action
checks if all the fields are valid
this method initializes layout
sets whether the panel should be enabled or disabled
returns true if the regex is a regular expression
initializes the access control
sets the items
this method initializes parts
sets the provider data
creates the query button
creates the cancel button
creates and initializes the field
initializes charts with the data from the current page
clears the charts not created message
sets the size
sets whether the cancel button should be enabled or not
redraws the charts charts
sets whether the action is enabled or disabled
adds a property change listener to the object
updates the overview of the overview
returns the size of the preference store
returns the dataset
creates the charts charts
returns true if this is a warning
returns true if the dataset is empty
refresh the current state of the object
applies the status to the status line
cancel the creator
returns true if the quick fix has a quick fix
starts the creator of the message
saves the chart model to the chart model
checks if the data set has a valid dataset
returns the error status
sets the loading message
sets the model chart type
sets the message
clean the chart
the method code select code
adds buttons to the given palette band list
handles the modify event
creates the table
creates the columns of the table
returns the provider
sets the provider
returns true if this provider has a provider
returns the number selected
initializes the categories
returns the category name from the category
fix the quick fix for quick fix
sets the internal view to the chart view
returns the view associated with the given id
cleans up the chart model
the action has been activated
saves the text to the given file
compare to method comment
updates the listeners to the new values
compares the service counter and other
returns the image for the given column
adds a new to the money
returns the text of the column
adds a new counter to the market
returns the service
returns the income
returns the cost of the
returns the number of services
returns the of the
invoke a method invocation
returns the exception content
invoke a method
destroy the request
destroy the servlet
creates the text control for the text control
returns an initiliazed instance of exit command component
returns an initiliazed instance of welcome component
returns an initiliazed instance of back command component
this method initializes list notes
returns an initiliazed instance of lista component
returns an initiliazed instance of component
returns an initiliazed instance of show list command component
returns an initiliazed instance of show about command component
returns an initiliazed instance of add command component
returns an initiliazed instance of back command2 component
returns an initiliazed instance of update note component
returns an initiliazed instance of back command3 component
returns an initiliazed instance of back command4 component
returns an initiliazed instance of note name component
returns an initiliazed instance of add update component
returns an initiliazed instance of txt note name component
returns an initiliazed instance of ok command2 component
returns an initiliazed instance of editar command component
returns an initiliazed instance of delete command component
returns an initiliazed instance of about command component
returns the state of the selection
sets the in initial selection state
fills the result list with the given result set
get a device by id
insert a new device into the database
deletes the given file
fills the result list with the rows
insert a test result
deletes the object
insert a new into the database
deletes the object
insert a new test case
insert a new object into the database
deletes the object
deletes the object
get the
insert a new object into the database
insert a new object into the database
deletes the given file
insert a new object into the database
deletes the object
deletes the given file
returns the number of in the
fills the combo box with the selected data
create a new device
loads the results from the tab
set the device record
gets the value of the device record property
set the build id
sets the id
returns the id
sets the test case
set the device info for the given device
adds an action listener to the button
removes an action listener
fires an action event to all listeners
returns the name of the column at code column index code
returns the number of rows in the model
returns the most specific superclass for all the elements in the specified
returns the value of the specified property
mark the star as a star
mark the ship as selected
highlights the given object
sets the controller to use for the controller
sets the controller to be used for the
returns a colony with the given index
returns the index of the specified colony
returns the name of the column at the specified index
returns the number of rows in the table
calculate the position of the given point
returns the most specific superclass for all the cell values in the
calculate the coordinate of the rectangle
sets the object
returns the object
returns the value for the cell at code column index code
returns the preferred size of this component
paints the component
set the colony to the colony
update the construction display
update the construction list
called when the user selects the list selection
invoked when the mouse has been clicked on a component
sets the player
returns the value of the cell editor
sets the fleet
adjust the size of the radio buttons
returns the y coordinate of the given row
sets the type
centers the frame on the screen
prints the given attribute
description of the method
this method is used to set the font to the graphics object
sets the star system
returns the preferred size of this component
set the colony to the colony
paint the orbit
paints the planet
set the colony and and to the
sets the star system
returns the
invoked when the mouse has been clicked on a component
returns the position of the
returns an enumeration of the selected
returns the of the orbit
unselects the selection
returns the radius of the planet
returns the size of the component
invoked when the mouse exits a component
returns the insets of the border
invoked when the mouse has been moved
invoked when a mouse button has been pressed on a component
register a controller with the given controller
handles the action event
returns the controller that is used by this controller
sets the ships
spread the size of the portfolio
checks if the components orientation is visible
starts the turn
sets the technology tree
invoked when the mouse button has been clicked pressed
returns true if there are more elements in this iterator
returns the next element in this enumeration if this enumeration
test if the object is an instance of the class
returns true if there are more elements in this enumeration
returns the next element in this enumeration if this enumeration
moves the object to the next object
waits for the status to stop
starts the
process a command to the given player
returns the hot room panel
retrieves the id of the object
this method is called when the turn of the turn is finished
show the panel with the given name
move the accessibility to the next available
returns the master controller
this method is called when the status is about to be done
runs the game
initializes the list of available clients
starts the game
this method is over ridden to indicate that the turn is over
evaluate the turn of the
returns the technology tree
gets the ships design
returns true if the is an extended
returns a string representation of this object
determine if the colony can build the colony
builds the colony
returns the size of the object
returns the
returns the
returns the gravity
returns whether this colony is a colony
returns true if the component is accessible
returns the colony code for this code colony code
dump the message to the specified
returns the coordinate of the location
returns the distance square of the other coordinate
returns the destination coordinate
returns true if the user is moving to the current move
returns the value of the specified x y value
returns the owner of this player
returns true if the player is a owner
sets the destination for this client
this method is called when the user interface is
returns the research field of the branch
get the fleet id
throws an illegal argument exception if the object is not null
sets the position of the player
updates the radio station
destroy the controller
check if the access access access permission is allowed to access
initialize the
check access to the access to the access file
calculate the visibility of the player
returns the number of squares in the range
set the access to the access access
this method is called when the is removed
this method is called when the access mode is being read
returns the
updates the state of the specified event
adds a ship to the bank
returns true if the has
updates all the and updates the
returns the type
returns the size of the list
returns true if the is an extended
returns true if the vehicle is reachable
returns true if this object is accessible
moves the ship to the given colony
returns the distance square of the node
move the player
updates the current access to the specified value
returns a set of fleet ids that are currently in the fleet
returns the ruler to the ruler
gets the value of the property
updates the data in the
this method is called when the access to the controller has been
dump the commands to the given
get a list of fleet ships
initializes the object
returns the fleet with the given fleet id
returns the at the given star
returns an enumeration of the ships in this group
returns an enumeration of the
returns true if the player has been visited
returns an enumeration of all the agents in this set
returns an enumeration of the
returns the star system at the specified coordinate
returns an enumeration of all the
returns the of the
checks if the given player is occupying this settlement
returns a string representation of the ships
returns an enumeration of the ships in this group
update the star system
returns whether the specified player can be in the given orbit
updates ships with the given slot
returns true if the specified is in the orbit
updates the player
update the
returns true if this is a passthrough or not
returns true if this object is accessible
returns the distance squared distance square to the nearest square
this method is used to convert the star to a boolean
returns true if the is
returns the end of the star system
returns true if the colony can be build
add a to the
sets the costs of the current round
removes a from the list of
set the for the given position
returns true if the object is accessible
updates the satellite
returns the number of construction costs
returns the number of running costs
creates the
returns true if the is an extended
write the to the specified
updates the ships in the orbit
this method is called when the access to the controller has changed
show the star system system
returns the maximum population value
returns whether this type is
returns the name of the component
returns the type
sets the value of the attribute
returns the current color
sets the attribute of the
checks the owner
returns an enumeration of the
set the attribute
returns the ships ship in the ship
returns true if the given technology is a technology
adds a technology to the list of technologies
sets the attribute to the given value
returns the ship in the orbit
returns an enumeration of the ships in the taskforce
adds a starship design to the starship design
returns the value of the specified attribute
checks whether a certain star has been visited
returns the title of the application
checks if the other player can see the given
returns true if the specified attribute has an attribute
returns true if the specified ship can be connected to
returns the maximal population of the given population
returns an enumeration of the
returns the coordinate of the location
returns whether the specified attribute is a default default value
equality between two bodies
returns the distance square of the square at the given position
returns the distance square of the distance between this and another
returns a string representation of this coordinate
returns true if this is a accessible
returns the name of the object
updates the
returns the star system of this
returns the value of the attribute
returns true if the is a
returns the settlement that is the most recent code settlement code
this method is called when the access to the controller has changed
returns the factor
returns true if the specified ship is in the set
returns the of the
updates the current record
returns the number of food instances
returns the of the given attribute
compares this code base object code to the specified object
returns the total number of food rows
returns true if the component is accessible
returns true if the given attribute is accessible
returns the of the planet
returns the food consumption
returns the bonus that this food point is
returns the production of the production
returns the total production total of the current production
returns the food factor
returns the production consumption
returns the bonus production
returns the research number of the
returns the current consumption
returns the production production
returns the bonus of the research
returns an enumeration of the
returns the research factor
returns construction construction
returns the amount of money the money is shifted
returns construction time for construction
returns the amount of money the money is rectified
returns true if the is
returns true if the is affected by the
returns true if the is affected by the
returns the defense
returns the of the given
sets the construction of the construction
returns the number of
updates the population
returns true if the given is a default default
sets the default value
updates the state
returns the default value of the
adds a new value to the end of the list
returns the value of the specified value
returns the of the given
returns the value of the
sets the default value of the field
returns true if the given is a default default
returns the default value of the default
registers a listener to this object
remove a listener
removes all listeners
returns a set view of the keys contained in this map
initializes the md5 hash
remove a property from the list
sets the value of the property
clears the properties
checks if the file is a file
subscribe to the subscription
returns the string property associated with this key
fire all subscribed
returns the value of the property as an int
returns the boolean value associated with the given key
compares the file name and the file name
returns the value of the property as a double
returns the filename
returns the plain text
returns the encrypted
sets the boolean value of the property
sets the boolean to wrap
stores the given object into the data store
returns the value of the field
set the raw raw string
runs the thread
sets the nick
reads a string from the socket
writes the to the output stream
adds a new user to the list
returns the message associated with this message
returns the sender of this message
this method is called when the server is before it is executed
returns all users
returns the receivers receiver
sends a message to the server
adds a new user to the receiver
clean up the
returns the next message in the queue
disconnects the server
returns true if this is a public public key
returns the number of messages in the queue
returns the age in seconds
sends a message to the server
send str to the server
returns a string describing this applet
prints the given text to the output
prints the given text to the output
sends a string to the server
returns the selected text
sets the text to save
this method is called upon plug in activation
this method is called when the plug in is stopped
adds a regular expression to the list of regular expressions
returns the singleton text by name
deletes the regular expressions from the given list of regular expressions
returns true if the is
sets the
sets the
sets the
returns the of the
sets the for a given
the
the
save the current selection
returns true if the given flag is set
returns the string representation of the given
returns the string representation of the given
returns true if the message matches the data
returns true if the next match matches the match
returns true if the match is a valid match
returns the number of matches
moves the next match to the next match
moves the current match to the current one
returns the current match
resets the match state
returns the html for the
returns the text of the text
returns the number of groups in this group
this method is used to convert the group to next group
decreases the current group by one
returns the group
adds a group to the group
returns the editor input for this editor
sets the dirty flag
this method is called upon plug in activation
returns the text of the text
this method is called when the plug in is stopped
returns the selected text
returns the query
sets the link to the editor
returns true if the editor is
sets the preference for the preference store
sets the
set the to the
initializes the completion proposals
returns the scope of the last search scope
sets the scope of the last search
returns the book with the specified name
returns the match pattern for the given
returns the for the given
expand the tree
returns the index of the given child item
sets the category
sets the path
sets the re name
sets the
sets the contents of the book
sets the title of the event
returns the contents of the code list code
returns the category
returns the re re name
getter for property
removes a category from this category
adds a listener to the list of listeners
returns the category with the given name
remove a listener from the list of listeners
saves the multi page editors document
returns the name of the resource
sets the book
returns the entry
returns the string representation of the given
returns the book
returns the entry with the given title
removes an entry from the list
adds a new entry to the list of books
categories rebuild all the categories
removes a entry from the list
returns the key for the proposal
returns the text of the text
reset the iterator to the initial state
returns the html for the
adds a group to the group
returns a proposal for the given proposal
sets the keys for the given key
sets the to the given value
copies the content of the holder to the proposal
returns the image associated with the given key
returns the image descriptor with the given key
returns the file path
returns the name of the book
opens the
handles the of the
handles the click on the button pressed
handles the copy button pressed action
handles the load of the text in the text editor
handles the save text button action
handles the press button when it is pressed
sets the regular expression to be used for regular expressions
sets the test text
returns the regular expression for the regular expression
returns the last selected combo box
test if the value is valid
test for invalid key
test method for
test method for
test method for
returns true if there is at least one more
returns the next element in the iteration
test method for
test method for
test method for
test of method of class registry key
sets the type of this object
returns the next element in the iteration
test the values of the registry
returns the value of the field
tests the expand bypass properties
set the data
creates a new registry key
returns the name of the path
returns the root key
returns a string representation of this object
returns the last modified time of the last time in milliseconds
returns true if the given name is already in the registry
returns a path to the
returns an iterator over the elements in this collection
returns a string representation of this object
returns an iterator over all values in this collection
sets whether the bypass flag is true
returns the cell at row col position
returns the value of the boolean value
compares two moves in this case
returns the opposite opposite opposite opposite move
returns the serial number
returns the next move in the list
adds a game result to the list of games
returns the fitness of the current
sets the pair list
returns the
this method is used to set the
converts a list of to a string
prepare the edge for the given edge
reads a file from a reader
returns the string representation of the list of data
moves the given object
this is the method that is called when the user is being
checks if the given coordinate is a coordinate system
finish the terrain
adds a new game object to the game
returns the coordinate of the object
returns the length of the vector
returns true if the object is entirely owned by this coordinate
returns the name of the descriptor
removes a coordinate from the given list
returns the angle of the rotation
sets the coordinate of the given game object
creates a new game object
checks if the object is on the coordinate of the specified object
set the avatar to the given avatar
returns true if the object is on the map
this method is used to acquire the characters from the event
moves an action to the specified coordinate
removes the avatars avatar
move an object
adds a new game event to the game area
adds a new object to the game
this method is used to acquire the characters of the given source
returns true if the event has a new one
this method is used to acquire the code code
returns the number of events in this event queue
returns the next event in the queue
compares two game objects
updates the visibility of the given game object
updates the visibility of the given drawable object
returns the number of terrain in this terrain map
places the given object in the land list
create a new object
constructor for the
effect the effect
sets the speed of the current player
sets the number of charges to be used
this constructor is used to create a level generation strategy
constructor for stat col
the
get stat
returns a connection to the database
checks if the email id is exist in the database
update the user status
returns the file info file for the given file name
sets the term to be used in the
this method is used to get the file name from the
returns the complete node of the given node and all its children
output the list of all the elements in a collection
returns the filename of the family of the given family
returns a connection to the database
parses the taxon file
load the datasets
add a new file to the given taxon
builds a tree from a given model
builds a model from a model
returns the hierarchy of the hierarchy
prints the simple graph
adds a new code model code to the given
add all relations to the model
writes a file to the given file
adds a dataset to the dataset
sets the root node of this tree
adds a child node to this node
adds all children of the given collection to this tree
adds a model to the dataset
run the
build the taxon name for the
checks if a figure is a figure
processes the paragraph
adds paragraphs to the list of tables
output the target file
this method is used to determine if the url is a
displays the given back table
fixes the headings of the table
checks if a figure is a figure table
adds the given dataset to the given dataset
adds the to the list of paragraphs
resets the list of the
add a metadata to the given collection
returns the trace element for the given
this method is called by the reactor when the
returns the string with the given string
find the chunk index
normalizes a string to a string
returns the string with the given
fills the list with the organizations list
returns the string that contains the given tokens
checks if the given text is a name
parse the text of the given text
checks if the given string is a name
annotates the source code of a string
output the output file
update the glossary and update the data
adjust the long buffer
returns the total number of occurrences of the two transitions
opens the window
verify that the file is not already in the file
parses the sentences
returns the string representation of the given string
sets the comma separated list of the
runs the progress bar
returns the distance from the to the given
parses the sentences
this method is used to convert the given string to a string
returns a string containing the text of the given text
saves the tag to the database
this method is used to determine if the given terms matches the
returns the number of groups in the group
close all open managers
process window event
process window event
called when the host is added to the host
this method is called when the statistics is closed
invoked when the target of the site list has changed
called when the data changes
method to search result
stops the search
returns the number of rows in the model
resets the search combo items to the search
called when a file has been changed
called when the connection is closed
gets the files
adds the initial host to the host
removes the host from the host
returns the initial host count
get the host at the specified index
returns a document object for the given http method
add a new fileset to the file
sends a message to the server
compares two ip addresses
description of the method
remove a membership from the database
returns a collection of groups
returns the properties of the given user
set the properties of this user
returns true if the given ip address is a
updates the user with the given user
checks if a user is a connection
adds a entry to the agenda
returns the xml representation of the object
returns the xml representation of this object
returns the number of connections in the database
returns the number of duplex connections
redirect to the current redirect url
returns true if the given role name is in the role
returns the login name
saves the current url to the current session
returns the resource with the specified name
compares the given list to the list of objects in the list
get a property value
lists the user roles
sets the duration
returns the time
stop the timer
runs the timer
writes an int to the specified byte array
creates a new version object
returns the socket flag
the
runs the connection
at startup create and show the main frame of the application
this method initializes this
this method initializes j panel
this method initializes this
this method initializes btn ok
this method initializes j button
this method initializes panel
this method initializes tf descricao
this method initializes this
this method initializes tf codigo
this method initializes this
this method initializes this
this method initializes panel
this method initializes menu item
this method initializes areas menu item
this method initializes menu item
this method initializes this
this method initializes menu
this method initializes tf cpf
this method initializes menu item
this method initializes tf nome
this method initializes tf telefone
this method initializes menu item
this method initializes this
this method initializes tf telefone
this method initializes tf cpf
this method initializes tf telefone
this method initializes tf nome
this method initializes tf data
this method initializes tf telefone
this method initializes tf telefone
this method initializes tf email
this method initializes j frame
this method initializes tf telefone
inicializa el jtext field
this method initializes tf data
this method initializes tf endereco
this method initializes j
this method initializes tf email
this method initializes j menu
inicializa el jtext field
this method initializes bt ok
this method initializes tf telefone
this method initializes j menu item
this method initializes bt endereco
this method initializes j
this method initializes this
this method initializes tf nome
this method initializes about dialog
this method initializes j
this method initializes about version label
this method initializes this
this method initializes bt ok
this method initializes tf nome
inicializa el tela
this method initializes tf email
inicializa el jtext field
inicializa el jtext field
this method initializes bt cancelar
this method initializes tf endereco
this method initializes tf
this method initializes btn
this method initializes btn
this method initializes tf fax
this method initializes btn cancelar
this method initializes btn
this method initializes j button2
this method initializes btn
this method initializes this
this method initializes this
this method initializes btn
this method initializes j combo box
this method initializes btn limpar
this method initializes btn ok
this method initializes j content pane
this method initializes j list
this method initializes btn cancelar
this method initializes pnl
this method initializes j button1
this method initializes this
this method initializes tf codigo
this method initializes btn ok
this method initializes tf instituicao
this method initializes btn endereco
this method initializes tf carga
this method initializes tf
this method initializes j button2
this method initializes tf nome
this method initializes tf numero
this method initializes tf
this method initializes tf endereco
this method initializes j
inicializa el jtext field
inicializa el jtext field
this method initializes tf
this method initializes j
this method initializes tf estado
inicializa el jtext field
this method is called when the is removed
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes pnl
this method initializes btn ok
this method initializes btn cancelar
this method initializes tf codigo
this method initializes btn
this method initializes tf
this method initializes tf descricao
this method initializes this
this method initializes tf
this method initializes tf tipo
this method initializes this
this method initializes tf desde
this method initializes j content pane
this method initializes btn
this method initializes tf
this method initializes btn
this method initializes btn
this method initializes btn dlg
this method initializes tf
this method initializes tf
this method initializes tf dlg
this method initializes deactivate button
this method initializes j text field
this method initializes hour combo box
this method initializes minute combo box
reads the file
this method is called when the text is removed
releases the instance
close the instance
returns the reloading class loader
initializes the servlet
returns the debug directory
set the request to the given http servlet request
saves the properties to the properties file
load the properties from the given file
loads the properties from the given properties file
returns the name of the file in the given language
puts a key value pair into the session
adds a file path to the reloading list
puts a parameter into the template
returns the value of the specified key
skips the template
set the template to be skipped
logs a message with a code debug code level
logs a message with a code format code
logs a warning message with the specified
logs a message with a code error code
logs a message with a code fatal code level
initializes the formular
initialize the action
called when the action is deserialized
sets the frame body
parse the given frame
aborts the specified target
aborts the specified code error code
aborts the current request
adds a validator to this event
runs the validation
this method will print the errors and and then print errors
opens a new join block
close the join
configure the given class mapper
sets the joined
appends a fragment to the buffer
the constructor
blocks until the block is joined
returns the property mapping
generates the output stream for the given parameters
sets the scalar
returns true if there is at least one more element
sets the group by
called when the end of the element is closed
returns the statement config for the given key
returns the next element in the iteration
checks if the given code position code is a null
parse the index
release a connection
parse the property file
this method is called when the is removed from the
returns true if multiple queries can be used
returns the statement configuration for the given method
appends a string to the end of the field
appends a field to the end of the list
appends a field to the end of the field
append a string field to the string
appends a field to the end of the field
append a field
generate a row key
append a field
appends a field to the end of the field
test method for
returns the callback index for the callback
this method is called after the application is initialized
this method is called when the is done
test that the method oracle return the class
appends a field to the end of the field
sets the callback index
appends a field to the end of the field
returns the result set type
returns the concurrency result set for this connection
returns the fetch direction
returns the size of the fetch fetch size
tests the constructor
lookup the options for the given class
checks if the given boolean is primitive
asserts that the given property is expected
asserts that the given index is in the list
processes the result maps
sets the published date
this method is used to check if the given is already
tests the map mapper with a
test method for
adds a track to the list
retrieves the largest number of tracks in the track
returns the description of the
returns the source item
returns the target item
adds a listener to the list of listeners
remove a listener from this manager
toggle the listeners on the
toggle the listeners on the
initializes the plug in
checks that the repository is already loaded
initializes the proxy
checks that the repository repository repository is already initialized
test method for
this method is called upon plug in activation
set the list of classpath entries to use for the conflicting classpath
returns whether the classpath conflicts with a classpath
initializes the default values
shows the selection
returns the pattern search pattern
returns the dialog settings for the dialog settings
reads the page settings from the history
writes the page store to the history
this method is called when the creation of the project is finished
creates the text for the drop down button
returns the detail of this page
set the detail button
creates the dialog to create the dialog
returns the receivers message style for the receiver
creates the button bar
creates the cancel button
executes the specified runnable
sets the value of the combo box
description of the method
attaches a new dialog field to the editor
attaches the selected fields to the selected
returns the selection button
returns true if the button is selected
sets the selection state of the button
sets the label for the button
changes the control button control
returns the change control button
enables or disables the button
selects the item with the given index
select an item
set the message to be displayed
enables the update button
returns the image associated with the given key
returns the image descriptor with the given key
method to create the button
called when the user presses the button
sets the minimum width of the tree
returns the tree viewer
handles the key pressed event
handles the key pressed event
enables or disables the button at the specified index
returns the element at the position specified
removes all elements from the list
removes the element at the specified position in this list
returns the size of the list
refresh the tree
refreshes the tree
updates the tree
returns the column index for the given column name
returns the column with the specified name
returns the column at the given index
adds a column to the table
removes a column from this table
returns true if the column contains column name
transform the given tree using the current transform
adds a column to the table
removes a column from the table
returns the value for the cell at code column index code and
adds a row to the map
select a statement
sets the name of the root node
adds a row to the table
sets the value at the specified row and column and column index
called when the object is updated
method for deleting the given
add a new constraint to the table
returns the name of the column at code column index code
select a statement with the given
returns the most specific superclass for all the cell values in the
draws the overlay
adds a row to the table
removes a row from the list
returns the child node by name
finds a node by its path
removes all rows from the table
updates row data and fires a
compares two objects for equality
compares this object with the specified object for order
returns true if the specified radius is already in the bounds
updates the row indices and all rows
sets the path to the node
removes a column from the table
sets the border colors
adds a listener to the list of listeners
sets the enabled state of all listeners
sets the renderer subcomponent used to paint the default renderer
returns the default renderer used to render the node
sets the renderer for the label
returns the radius at the given position
adds a renderer to the renderer
adds the new overlay renderer to the renderer
sets the bounds of the nested editor
sets the bounds of the nested
returns the effective bounds of this
returns true if the given screen coordinates contain the given screen
returns true if the angle is contained in the bounds
sets the status message to the given status
this is the entry point method
sets the content of the file
returns the image of the receiver
configure the graphical viewer to initialize the editor
return true if reconnecting the connection instance to new source is allowed
return true if reconnecting the connection instance to new target is
initializes the graphical viewer
return the property value for the given property id
returns a list of all children of this shape
returns the list of all the shapes in the list
disconnects the connection from the target
reconnects a list of connections
reconnect to the network
sets the value of the property with the given id
disconnects all connections from the given list of connections
initializes this object
return the principal associated with the specified username and
method for getting the object as a workflow string
this is used to determine the authorized state of the session
the user to the user
this method is called when the user clicks the user
the user
the user
this is used to perform the action
description of the method
this is the user to be
this method is called when the user interface is
this method is called when the user modifies the user object
sends the given request to the job controller
runs the job
returns a list of all the access control elements that have been
runs the job
this is called by the
initialize the data object
add the parameters to the list of parameters
returns the parameter value
the
adds a path info to the current page
initialize the data store
checks whether the given user is a
remove the ratings from the list
execute the process
return a string representation of the given text
serializes a string and a string
get a value from the bundle
add a user to the list
add a string to the content
add a string to the list
returns all role for a given workflow
returns true if the given test case is contained in the
returns true if any of the elements in this collection contains any
add a user to the group
remove a user from the group
check if a user has a role
returns true if any of the elements in this collection contains any
this method loads the user object from the database
this method loads the user object from the database
initializes the
returns the path to the template file
this method adds a new file macro to the
receive notification of character data inside an element
returns the principal of the given sid
reads all the from the list of
returns the value of the given
returns a list of for the given dataset id
returns true if the workflow has a given workflow
checks if a given configuration value is a valid dtd value
sets the state of the state
handle the events from the workflow
returns the state of the switch
resets the state of the
handle the events from the event handler
remove workflow from workflow
returns the value of the given workflow
returns a dataset for the given dataset
receive notification of the end of the document
returns the
returns the hash map of the workflow
set the value of the given string
returns the template for the given version
remove all datasets from the given workflow
creates a new dataset
adds a new value to the list
adds a dataset to the
add a to the
returns true if the path contains the given path
returns the template for the given name
returns all the paths
returns the image url for the given image
returns a string representation of this object
check if the value is valid
returns a xml representation of this object
check if the value is valid
sets the edit info for this edit
returns the field with the given prefix
check if the value is valid
check if the value is valid
sets the date and time the user for the given date
checks if the given data type is valid
sets the value of the given user
check if the value is valid
check if the value is valid
check if the value is valid
check if the file is valid
check if the value is valid
adds a to the
check if the value is valid
sets the date and time the user for the given date
set the value of the
check if the script is valid
returns all the paths
returns a string representation of this object
returns a xml representation of this object
checks the given workflow
returns a string containing the text in the given user
checks if the given workflow is in the list of known
returns a list of workflows objects that have been removed from the
returns the internationalized description of the given user
returns a list of all the types that have been
checks if the given workflow is a
reset the condition
creates a new workflow
checks whether the given workflow is in the given workflow
returns a new workflow
called when the test object is removed from the
called after the current activity
returns all the history entries in the list
deactivates the edges of this node
called after the workflow is finished
creates a new task for the given id
creates a list of all the datasets in the dataset
creates the edges of the node
adds an edge to the graph
returns all events of the given result
executes the script action
returns the date as a string
checks if the given script is a valid script
returns a string representation of this object
returns the list of all sub objects contained in this cache
returns a xml representation of this object
adds a dataset to the dataset
returns the content of the content
returns all active nodes in the list
checks if the given workflow is valid
checks if the workflow is in the mvc workflow
returns a list of all templates names for the given
deactivates all non intersecting stone
checks if the workflow is
returns the active active active active active active
returns a list of objects for the given item
returns the node with the given name
returns the with the given id
returns the value of the specified path
returns all the templates that are in the given type
returns a string representation of this object
returns a list of all objects
get the template for the given path
this method is used to set the textures texture ids
dispose of this splash screen
set the image data for this pimage
fill the image with the given index
the to the zvtm
fill the image
reloads the image from the list
writes the workspace to the given workspace
find the selected image entry
delete the given directory
creates a new category
create an instance of
creates a new category
creates a new question
configure the custom
dispatches the request to the given request response
sets the form text
returns the form text
returns the id of the database
sets the name of the given code
checks if the parent node is a child of a parent
updates the question
returns the list of root identifiers
returns the
sets the
sets the
gets the value of the property
sets the
returns the
sets the
sets the
sets the origen
gets the destino
gets the value of the property
sets the
returns the
sets the
returns the
returns the
sets the
sets the context action bean
returns the context
add a message to the list
add a value to the list
add a property to the list
add a property to the list
adds a property to the message
adds a property to the list
add a message to the list
add a message to the list
get the bean context
sets the local flag
returns the content type of the content
returns the size of the file
returns an input stream for this file
returns true if the file is currently uploaded
sets whether or not the query cache should be enabled
returns the name of the given class
sets the value of the ci field
returns the comma delimited list of tags in the list
creates a new criteria object based on the given class and its
creates a new criteria for a given entity
returns the object that is the session object
set the session object to be used for the request
returns the value of the attribute specified by the key
returns the attribute value for the given scope
returns the writer used to write the
returns the output stream to use for writing to the
close the zip file
returns true if the given directory is a subdirectory
test the conversion of a file
parses a date and returns the date
compare two arrays of two doubles
resets the position to its initial state
trims the array to the size of the array
reads a line from the input stream
flushes the buffer
writes a single character
write a portion of a string
get a document from the given path
get a document from a file
returns a dom document from a stream
reads a document from the given reader
returns the type of the element
converts a string to a string
converts a string to a string
returns true if the given value is contained in this hashtable
returns true if the receiver contains the specified key
returns the value to which this map maps the specified key
rehashes the content of the table into a new hashtable
removes the mapping for this key from this map if present
returns a shallow copy of this tt fast hash table tt object
set the path info path
returns the path info path
returns the servlet path
this is a callback that will allow us
returns the description of the filter
returns the name of the component
this implementation returns the appropriate
test the graph relationship graph interactions graph
create a graph
returns the description of the filter
returns the name of the component
runs the
generates the report
returns true if the location is in the location of the workspace
creates the controls for the given composite
creates the controls for the given composite
creates the controls for the given composite
creates the expandable set control
creates the controls for the given composite
returns the project name
sets the name of the project
returns the location of the file
sets the working sets
returns a graph object for the submitted id
sets the changed flag
sets the changed flag
paint a connector
returns whether the event is a marquee
returns the source port at the given point
returns the graph cell editor for the given graph
returns the list of connected entities
saves the current state of the file to the given
this method gets called when a bound property is changed
this method gets called when a bound property is changed
sets the properties of this object
returns the properties of this code properties code object
returns the property with the given id
puts a property in the system
this method gets called when a bound property is changed
create a sub panel based on the given entity
create a model entity
writes the given text to the server
returns the list of model instances for the given type
returns the list of the subclasses of the given class
returns the value of the method attribute
get the collection of the given field
returns true if the field is a collection type
get the type of the field
messaged when the document has been created
returns true if the given cell is a group
inserts a new entity into the table
brings the given array to front
executes the operation
redoes the last undone graph
called when the value of the selection changes
invoked when an action occurs
compares two data objects for equality
compares the specified object with this code data buffer code
this method gets called when a bound property is changed
returns the description of the filter
returns the name of the component
returns true if the name of the local variable already exists
adds the given interaction type as a string
adds an interaction type to the list of interaction
returns the state reader
returns the
removes the default locks
adds a given code acl code to the list of pending messages
adds a new role to the list of
removes a from the database
returns the state machine
returns the default control
returns the role of the initiator
returns the content of the content
clears the content of the message
returns true if the state is a state
returns the state machine for the given state
get a conversation
sets the
launch the protocol specific to the agent
returns true if the protocol is known to be known
returns the
adds a protocol to the protocol
adds an association roles to the list of registered users
checks if the specified task has a breakpoint
checks if the given code task code is a
returns the entity
register a new
returns the description of the given
create a new object
register the owner of this object
returns the owner of this
returns the yellow pages
creates a demo panel demo demo demo demo
invoked when a mouse button is pressed on a component and then
invoked when a mouse button has been released on a component
invoked when the mouse has been moved on a component
returns the state manager
returns the graphics object that is used to render the graphics
returns the of the
returns the
returns the
returns the agent initialised
this method is called when the agent is initialised
this method is called when the user agent
inserts an entity into the diagram
insert diagram into the given diagram
returns the name of the component
returns the description of the filter
returns the of the given
this method is called when a is
this method is called when the is
generate the
returns the role of the tasks tasks
returns a hash set of applications
this method initializes browser window browser
returns the description of the filter
runs the thread
this method is called when the solve is about to be destroyed
sets the to the given question
this method is called when the solve is done
returns the name of the component
generates a file
returns the graph for the given id
invoked when the mouse cursor has been moved onto the graph
saves the to the given file
sets the version of the
puts a property in the database
create a sub panel with the given entity
create a model entity
returns the list of the model instances
brings the given array to front
this method is called when the user selects the given object
called whenever the value of the graph selection changes
description of the method
updates the buttons of the history
invoked when an action occurs
remove the default lock
adds an interaction type to the interaction
removes the active machine from the list
this method is called when the user cancels the
this method is called when the agent is initialised
this method is called when the user agent
this method is called when the is removed
this method is called when the is
this method is called when the is
get the tasks vector
returns the column number
returns the string representation of the given string
compares two addresses
returns the string representation of the string
returns the hash code for this entry
returns the row number
returns the right part of the right hand side of the
build a statement from a reader
returns a string representation of this code code
returns the right hand side of the given number
returns the right character of the given character
build a statement from the input string
returns the right part of the right side of the
returns the right part of the right side of the
returns the right part of the right side of the
returns the right part of the right side of the
returns the right part of the given number
returns the right item of the given item
returns a string representation of the given string
checks if the method is a test method
checks if the method is valid
checks if the method is valid for a given method
sets the value of the scale
sets the value of the value
test if the method is test
sets up the fixture for this method before
set the fields to use for the given class
returns the image of the given palette
copies the given pixels into the array
returns the image of the image
loads an image reader from the file
ensures that the memory is free to free memory
sets the date from the date
sets the date to the date
returns the time from the time
sets the time from the time
gets the time to which this message was originally
sets the time to the given time
reads a line from the input stream
returns the value of the token
returns the string of the token
returns the value of the token
returns the value of the token
returns the value of the token
returns the value of the token
returns the city height of the city
returns the translation translation of the current point
returns translation of the translation
returns the height of the translation
sets the scale of the image
returns the value of the token
returns the next token
gets the meta image attribute of the meta image object
sets the image url
sets the scale for the scale
returns the world file path
returns the latitude of the extent
returns the longitude in the
returns the viewport height
returns the x rot around the crop box
returns the y coordinate of the rotated y coordinate
returns the z coordinate of the vertex
sets the
returns true if the is
sets the
returns true if the is
returns true if details of the
sets the gen header
get the value of gen header
sets the initial row of the
returns the value of the token
returns the value of the token
sets the initial column
returns the of the
loads an image file
returns the vertical coordinate of the
returns the next line in the input stream
closes the
writes the height value to the given value
this method is used to set the root tile of the tile
creates a new code tile code
returns the value of the token
returns the token of the token
returns the value of the token
set the source of the source code
close the current tile
get row for given matrix
creates a new tile
writes the height of the given value to the given value
override to skip a single row
this method is used to close the door
bind the specified coordinate to the end of the map
sets the detailed images of the image
sets the geo objects object
sets the tiles
write the value to the output
returns the value of the token
returns the value of the code output card code property
sets the value of the output card property
close the current connection
returns the focus level of the component
set the focus level
create a new tile
writes the height of the image to the given value
sets the morph bounds
write the value to the given value
sets the degrees to the given value
sets the output in meters flag
returns the degrees to the given translation
returns the degrees of degrees to the degrees of the longitudinal conversion
set the grid data for the
sets the start of the tile
writes the height of the given image to the output
sets the geo spatial flag
returns the
returns the value of the token
returns the value of the token
sets the value of the name property
sets the value of the datum property
sets the value of the property
sets the value of the projection property
puts the parameter into the buffer
sets the value of the prime property
sets the value of the angular unit property
sets the value of the axes property
sets the value of the authority property
sets the value of the datum name property
sets the value of the datum property
sets the value of the property
sets the value of the datum authority property
returns the datum
gets the value of the property
gets the prime
returns the angular unit of the
gets the axes
returns the datum
gets the value of the property
returns the datum authority assigning authority
skips the given row
skips the given row
close the current tile
close the connection
close the connection
writes the height of the given value to the given value
writes the height of the given value to the given value
this method is used to set the to the given tile
creates a new code tile code
writes the height of the given image to the output
writes the height of the given value to the given value
closes the current connection
create the main main screen
create a new tile description
writes the height value to the output stream
returns the value of the token
returns the value of the token
reads a int from the stream
reads a float from the stream
read a double value from a stream
creates a new code tile code
reads a short from the stream
reads an unsigned number from the input stream
gets the value of the byte order property
sets the byte order
returns the
sets the
returns whether the real values are
sets the real values value for this
set the latitude coordinate of the top left corner of the list
sets the x coordinate of the top left corner of the
returns the longitude left top left corner coordinate
get the top left latitude of the top left corner of the
returns the bottom right coordinate of the bottom right corner of the
returns the bottom right bottom value
returns the bottom right coordinate of the corner in degrees
gets the bottom right coordinate of the bottom right corner of the
close the connection
returns the shortest number of the shortest distance
returns the shortest number of the shortest
creates a new tile
write the value to the output
returns the top left coordinate of the coordinate
returns the top left coordinate of the top left corner coordinate
returns the bottom right coordinate of the bottom right of the current
returns the bottom right bottom value in degrees
converts a grayscale image to a grayscale value
sets the solid flag
returns the solid solid state
sets the colour per vertex
returns the colour per vertex
creates a new
creates a new
creates a new
creates a new
updates the state of the
login to the server
sends a message to all the clients
set the presence of the given text
sets the state of the auto commit event
passes call to method on physical connection instance
sets the catalog attribute of the object
passes call to method on physical connection instance
set read only state
passes the connection to the database
set the transaction isolation level
passes transaction isolation to the current transaction
sets the type map
clears all the warnings reported on this code connection code
commit the current transaction
passes sql to the sql statement to retrieve the sql string for
this method is not supported
whats the version of this jdbc driver
executes a sql update statement
write the top bottom of the contents of the given table
decodes a string from the string
encode the string
writes the header of the html file
adds a css stylesheet to the given reader
returns the default css resolver for this font
adds a processor to the list of processors
adds a processor to the registry
adds a new code tags code to the code tag code
returns true if this is a stack member
sets the fixed width of the image
returns the fixed width of the image
sets the number of tabs
returns the number of tabs in this tab
sets the alignment of the text
returns the alignment of the text
sets the leading of the
sets the leading of a new
returns the table style values
sets the indentation indent
sets the keep together together
returns the normal of the vertex
gets the repeated attribute of the object
sets the last in row
returns the last in row
the last cell of the table
returns the width of the columns in the given table
sets the width of the border
sets the border color
sets the background color
returns the background color
returns the parent of this header node
returns the outline of the outline
returns the width of the cell
returns the message with the given key
sets the parent tag
sets the css class to be used for the given
adds a child tag to this tag
compares the given tag to the list of elements
returns the child tag with the given name
returns the child with the given name and namespace
returns true if this node has parent
returns true if the given name exists
returns true if the given name exists
returns the name of the tag
adds a directory to the root directory
adds a url to the list of urls
returns the font size of the given tag
set the css inheritance class
applies the tag to the given
returns true if the given property can be captured
returns true if the given tag is inherit
apply the given code element code to the given list
adds a css file to the list
adds a css file to the list
sets the leading of the current paragraph
returns the largest leading of the children of the given list of
get the word
copies the source code to the target
sets the persistent attribute
appends the specified character to this buffer
sets the current previous
removes the first occurence of a string
process the given character
returns the subtag
checks if the given style is in the given style
adds a writable file to the queue
add all elements in the queue
creates a tag
returns the of the given css style
sets the next pipeline
this method is called when the text is written to the
returns the context key
returns the tag
returns the context of the worker
adds a content element to the stack
adds a collection of elements to the stack
checks whether the value is relative to the relative value
set the resolver
adds an element to the list
adds all elements in the specified list to this list
checks whether the value is numeric numeric
returns the peek at least one peek
sets the document
sets the code pdf writer code to be used to write the
polls the queue and returns the first
returns the link provider
sets the page size
returns the left left right margin of the given tag
sets the root tags
extracts the url from the url
sets the image provider context
sets the link provider context
sets the css stylesheet to use for the css stylesheet
removes a string from the list
sets the size of the page size
sets the root tags root
sets the image provider context
sets the link provider context
sets the current tag
set the current attribute
returns true if the current attribute has the current value
puts the given value into the current value
returns the current
returns the current tag
returns the current entity
returns the comment
adds a new listener to the list of listeners
set the namespace uri
flushes the current space in space
remove a listener
returns the name space
reset the buffer to the initial buffer
sets the last character
parse the content of the input stream
sets the state of the node
returns the previous state
parse the encoding
given unknown order
returns the tag of the tag
parse the input stream
returns the tag attributes associated with this tag
returns the of this tag
parse the given reader
returns the value of the attribute
returns a single quoted single quoted attribute
returns the attribute value
parses the reader and adds it to the reader
this method is called when the processing instruction is set
returns the current state of the closing component
returns the special special character set for this
this method is called when the user closes the application
sets the state
returns the current state of the document
returns the attribute
returns the controller state
this method is called when the is unknown
flushes the buffer
returns the current value of the current
returns the memory
the start element has been called
call the text in the text field
end the current element
sets the text of the object
returns the current tag
returns the tag state
sets the state of the tag
append a string to the current one
adds a new field to the list
returns the next boolean value
returns the next choice in the list
returns the center of the shape
calculates the ring of the ring
returns the next text field in the text area
returns the next text in the text area
returns true if the number of invalid
indicates whether the current thread was canceled
gets the value of the i th checkbox
returns the next scroll bar
returns the ith value
returns the value of the code scrollbar code property
sets the value of a scrollbar
adds a button to the button
sets the list of hits
deletes a directory
get the name of the gun directory
delete the file name
adds a new panel to the grid bag layout
returns the ith button value
returns the next button
closes the connection to the database
convert a date into a date from a string
sets the number of idle rounds
set the x coordinate of the center of the center
this method is used to set the value of the
returns the element at the specified index
this method is called by the constructor
set the
returns the number of in the repository
returns the zone manager
adds the selected nodes to the north tree
returns the zone manager
assigns the given set of all the nodes to the graph
sets the name of the zone
sets the layout algorithm
returns the set of all the items in this list
determine if the given set of set of the set of objects
creates a labelled
removes all items from the list
sets the node to the given node
this method is called when the node is removed
returns true if the z is flexible
sets the flexible longitudinal component
sets the value of the flexible items property
adds a listener to the list of listeners
returns the x coordinate of the center of the point
removes a listener from the list of listeners
returns the initial center of the point
creates the layout actions for the given layout
updates the hover state
notifies all listeners that a node has been changed
this method is called after the is removed
returns the code code aggregate of the specified
sets the layout algorithm
returns the code aggregate aggregate code table
sets whether the edge labels are drawn
sets whether the label draws the icon
returns the code action code instance
set the more
sets the debug info for the debug info
sets the labels edge labels
redraws the visualization
returns the zone number of the specified zone
adds a listener to the list of listeners
removes a listener from the list of listeners
sets the show node outlines
removes a zone from the zone
removes a zone from the zone
resets the query
initialize the
sets the
initialize the
sets the title
initialize the
returns the properties of the given name
returns the properties of the given name
sets the zone visible to the specified zone
returns all users properties
returns the order of the given name
returns the order of the given name
returns the filter language links
returns the properties of the given name
returns the properties members for the given name
returns the properties of the given name
returns the filter language links
sets the zone visible to the specified zone
returns the arguments of the current plug ins
tests the of the
returns the description of the
clears the current spring
forces the items to accumulate values
returns true if the filter is a filter
creates the layout actions for the given action
handles the network change to the model
sets the layout algorithm
sets whether the edge labels are drawn
sets whether the label draws the icon
set the more
returns the columns of starred presentations
add a list listener to the list of listeners
sets the labels edge labels
remove all listeners for the given event type
returns the last exception
returns true if the current tower is complete
evaluates the given string as a double
sets the type of this object
evaluates the given string as a string
this method is used to set the hibernate data to the current
converts the given string to a boolean
disposes the resources associated with this
get the serial id
sets the show node outlines
evaluates the expression and returns the result
sets the
returns the
assigns a variable to the given value
returns the name of the entity
sets the created
sets the value of the value property
adds a metric to the cache
returns the configuration file for the plugin
add a metric to this metric
adds all the metrics to the metrics
adds a metric to the tracker
invalidates all metrics for all metrics
removes the specified metric from this set
removes all the metrics from the specified collection
returns true if the given object is applicable on this class
sets the built in
returns true if the built in is built in the
opens the metric preferences
saves the given item to the current item
opens the dialog for the question dialog
returns true if the job is busy
get the value for the given type
remove the activated metric from the metrics
verifies that the size of the buffer is not sized
save the value of the given data to the given value
deletes the graph
sets the url
deletes graphs from the graph
returns the current info space
sets the current to the given space
test method for
returns the current graph
sets the current filter
returns the current filter
test method for
ensures that an invalid model is not modified
backup the current state of the current state
returns the name of the attribute
returns the name of the operation method
clean up the database
returns the name of the group
gets the value of the operation group description property
gets the value of the operation group method property
sets the
set the grouping list
the list of
returns the next element in the list
checks if file exists
saves the settings to the default settings
transforms the similarity matrix to the distance matrix
the
creates the metrics table
checks whether the database connection details have been changed
initializes the checkbox state
initializes the default values
initializes the values of the values
restores the state of the state
this method initializes j panel
this method initializes this
this method initializes j jmenu bar
this method initializes arquivo
this method initializes sair
this method initializes j menu2
this method initializes j
this method initializes j scroll bar
this method initializes j menu
this method initializes j panel
this method initializes j
this method initializes
this method initializes j panel1
this method initializes project
this method initializes credit
this method initializes
this method initializes j text field
this method initializes j text field1
this method initializes j text field2
this method initializes j text field3
this method initializes j text field4
this method initializes j text field5
this method initializes j check box
this method initializes j scroll pane
this method initializes j table
this method initializes j scroll pane1
this method initializes j table1
this method initializes j text
this method initializes j text
build the resources of the garbage delta
sets the parent of this node
set the value of the verbose property
sends a line to the socket
this method is called when the database environment is
returns the links of the
this method is used to set the object to the
returns the database connection
sets the group
returns the branch name
returns the url to the server
returns a grid bag constraint for the given grid bag
sets the value of the change property
returns whether the file has been set
sets the white contrast
the given rectangle to the left of the screen
override the captcha method to validate the captcha
method to write the base64 representation of the
invokes the method described by the given string using
checks if the method is supported
returns the total download size
returns the current download size
returns the number of packages
returns the number of download links
returns the disabled downloads flag
returns the running downloads
returns the finished downloads
returns the duplicate quota
checks if the captcha is a valid
returns the left traffic traffic left side of the traffic traffic
returns the temporary
sets the speed limit for the wiimotes
returns the maximum number of download
returns the maximum number of download download links
sets the aborted status
clears the cookies
returns the connection timeout in milliseconds
sets the read timeout value for this timeout
returns the read timeout value
sets the
returns the form with the given name
uploads the file to the server
returns the proxy
returns the session info
updates the of the
copy the contents of the given directory to the destination
checks if the request is allowed to be used
move the source to the given destination directory
returns the redirect location
checks if the file contains the given file
open a connection to the database
get a connection to a connection
opens a connection to the server
opens a connection to the server
create a new post request
creates a new post request
opens a connection with the given post
post a post method
returns the java script code java
posts a post request to the post
post post method
this method reads the connection from the database
download a file from the server
get password authentication
get the download temp file
sets the verbose mode
registers a new application to the application
sends a message to the server
send a message to a node
send a message to the specified node
send messages to a message
returns the connection string
returns the prefix of the given os
returns the package for this component
returns the declaring class of this type
this method is invoked when the exit is terminated
add a shutdown hook
returns an input stream for the given name
this method is invoked when a new shutdown hook is exited
this method is not supported
execute a command
execute a command
returns the resource associated with the given name
execute a command
execute a command
returns a protection domain for this protection domain
returns the number of bytes that have been longer currently available
returns the total memory of the memory
this method is called when the is terminated
this method is not supported by the class
this method is not supported by the resource factory
returns the package for the given name
checks if the is checked
changes the options to the new value
displays a toast to the user
checks if the is checked
changes the options to the new value
checks if the is
checks if the list of is checked
changes the options to the new value
changes the options to the new value
opens the
check the of the profile
starts the thread
called when the activity is first created
sends a profile profile to the user
starts the bluetooth
opens the pitch opts in the
opens the and opens the
stop the
opens the
opens the chord opts to show the chord opts to show
updates the statistical statistic counters
opens the opts to publish the current intent
set the user options to be used for the user
called when the user changes the progress bar
creates a dialog to choose a dialog
called when the crawler starts tracking the current location
returns the user options
called when the plug in is about to stop
returns the stats
initializes the sound manager
plays the note
checks if the guess is a guess
returns the name of the interval
gets the allowed values for the given
replay the scale
scale the current scale
returns true if the given string is a guess for the given
returns the scale name of the scale
gets the allowed values for the current state
returns the note of the note
replay the note
plays a specific note
plays a note
updates the option
creates a spinner for a given spinner
returns true if the given guess is a guess guess
opens the
called when the activity is completed
sets the mode of the current activity
deselects all the selected items
changes the mode of the window
plays the interval
ask the user for the interval
called when the activity is completed
plays the next note
called when the activity is completed
this method changes the mode of the panel
changes the mode of the panel
called when the activity is completed
show the scale
plays the chord chord
this method is called when the user selects the current user
show the neck
submit the answer to the current question
changes the mode of the window
ask the note to be
returns the selected scale
displays a toast to the user
the scale of the current scale
returns the scale name for the ith parameter
checks if the user gave a answer to a user readable answer
plays the click on the sound
returns the pitch for the selected pitch
opens the
opens the stats
opens the chord
opens the
opens the pitch pitch
open the interval
checks for prompting for a quit connection
called when the user click in the wallpaper
callback method called when the user the incoming request
call the method to be called after callee
call the method to call the invite dialog
accepts the specified
adds a parameter to the end of the parameter
opens the
inherited from class invite dialog listener and called by the
stops the
halts the service
returns the transaction id
adds a new string to the default log
returns the list of listeners
adds a new listener to the sip provider
removes a sip provider listener
this method is called when the user name is allowed to be
sets the logging status
close the connection
this method is used to set the user to the user
clears the
connect to the server
receive notification of the protocol
sends a protocol message to the server
handles the incoming server message
update the room list
connect to the server
sends the recipients to the server
sends the clear request to the server
sends the user info to the server
sends a disconnect message to the server
find the user
starts the transaction
returns the delta of the time
initializes the agent
changes the state of the message
returns true if the given state is a state
returns the call status
the
close the media application
callback function called when arriving an ack method call confirmed
a new session
adds a new string to the default log
skips the number of bytes
close the window
this method is called when the is terminated
checks if the given parameter exists in the response
returns the request line
halts the service
returns a string representation of the
get the port number of the socket
sets the flag
returns a clone of this object
compares this object with the specified object for strict
return the host
get the port number
returns the maximum number of connections that have been
set the maximum number of connections to be used
returns the
removes a sip provider listener
closes the
callback function called when arriving a re invite answer
callback function called when arriving a re invite modify an
callback function called when arriving a call redirection
callback function called when arriving a call back
callback function called when arriving a bye request
callback function called when the user wants to call this method
callback method called when a call transfer is successfully established
callback called when a call transfer is accepted
callback called when a call transfer is refused
callback called when a call transfer is successfully completed
callback method called when a transition transfer is completed
returns the match string that matches the given
this method initializes this
this method initializes j content pane
this method initializes j panel bottom
this method initializes j button ok
this method initializes j panel center
this method initializes status
this method initializes main panel
this method initializes main window menu bar
this method initializes progress bar
this method initializes this
this method initializes j content pane
this method initializes j text field
this method initializes subnet
this method initializes main split pane
this method initializes j text field show max thread
this method initializes up
this method initializes down
this method initializes j text field
this method initializes file menu
this method initializes help
this method initializes j panel bottom
this method initializes view
this method initializes j button ok
this method initializes topology
this method initializes j button cancel
this method initializes j panel log log
this method initializes j tabbed pane bottom
this method initializes j scroll pane table
this method initializes j text field timeout
this method initializes table model
this method initializes j scroll pane log
this method initializes j text area log
this method initializes j
this method initializes
this method initializes j text field second player
this method initializes j text field third date string
this method initializes j menu item
run the tree
this method initializes j button stop
this method initializes j menu item about
count the number of descendant visible nodes
set the number of visible descendant
returns the number of visible descendant of the given node
this method is called by the child node when the node is
returns the number of visible descendant of the given node
set the polar coordinates to the given coordinates
this method initializes j button
this method initializes j button plus
calculates the height of a tree node
copies the attributes of the item
clears the internal state of the tree
this method initializes j button minus
returns the layout of the layout
insert an item in the tree
returns true if the given item is expanded or not
this method is used to force the to update the
initialize the simulator
this method is used to force the of the given
this method initializes j combo box
initialize the
this method initializes this
this method is used to accumulate the items in the
returns the x coordinate of the center of the particle
returns the code code value of this code code object
sets the x coordinate of the camera
sets the x coordinate of the framing rectangle
returns the vertical tilt coordinate of the point
this method initializes j content pane
returns the
sets the value of the code dy code property
sets the
returns the
set the
returns the x coordinate of the given point
returns the y coordinate of the point
sets whether the is
returns whether the size of the is sized
sets the y coordinate of the
corrects the location of the given bounds
handles the given click on a click on a mouse click
invoked when the mouse button has been clicked pressed
returns the maximum scale of the image
sets the maximum scale of the image
sets whether the position is over the fix position
returns the minimum scale of the
sets the minimum scale of the
returns whether the highlighted edge should be drawn in the
sets whether or not the highlighted edge should be highlighted
returns a string representation of this object
initializes the model
clears the internal state
returns the registry item registry
removes the last element from the cache
returns the class name of the item
returns the entity
returns the value of the named attribute
set an attribute
removes the given item from the collection
returns a map of the attributes
sets the attributes
clears the attributes
returns the attribute with the given name
sets the attribute of the
removes an attribute of the attribute
this method is called by the
sets the current time stamp to the current time
returns the dirty flag
sets the dirty flag
returns true if the is visible
returns whether the window is visible
sets the visibility of this frame
returns true if the focus is currently being focus
returns the renderer
locates the obstacle point at the given point
returns the bounds of this rectangle
sets the rounded corners of the box
returns the name of the attribute
sets the name of the attribute
sets the max text width
returns the text of the item
set the size of the image
sets the maximum image dimensions for the image
returns the name of the image attribute
set the name of the image attribute
get the location of the image to be used for the given
returns the image factory
sets the image factory
returns the horizontal alignment of the icon
returns the vertical alignment of the vertical alignment
sets the horizontal alignment of the icon
set the vertical alignment of the text
returns the horizontal padding of the border
sets the horizontal padding of the charts
returns the vertical padding of the balloon
sets the vertical padding of the balloon tip
returns the spacing between the thumbnails
sets the dimensions of the image to be displayed
sets the size of the image cache
sets the spacing between the thumbnails
adds an image to the image
this method is called when the user clicks the image
returns the url for the given location
all images in the cache
returns the text of the given item
returns the weight attribute
set the attribute label name
returns the weight type
sets the type of the attribute
set the radius of the cylinder
returns the radius of the radius
returns the shape of the given item
get the stroke
returns the rotation of the arrowhead
returns the transform of the given visual transform
returns the width of the given item
sets the font to be used for the font
sets the rounded corners of the box
returns the type of the edge
sets the type of the edge
returns the horizontal of the
returns the vertical of the
returns the horizontal of the
returns the aggregate renderer for this view
returns the vertical of the
returns the renderer for the edges
returns the renderer for the renderer
set the horizontal
set the vertical
initialize the entity manager
clears the data
returns the entities of the current entity
set the horizontal
returns the entity
clears the cells
returns the aggregates size
set the vertical
sets the aggregates size
returns the orientation of the orientation
sets the orientation of the image
set the width of the image
returns the color for the specified value
sets the end orientation
sets the color map
sets the start orientation
returns the maximum value of the range
sets the maximum value
returns the minimum value of the range
sets the minimum value
adds an edge to the graph
adds an edge to the graph
returns the ith edge
returns the edge at the given node n
returns the number of edges in the graph
show the tooltip for the tooltips
hides the tooltip
returns an iterator over edges in the graph
sets the component tip component
returns the tooltip component
returns the index of the given edge
returns whether the tooltip is enabled
sets whether the tooltips should be enabled
returns the index of the node at the given position
returns the tool tip text for this action
read the xls file
sets the tooltip text
set the file name to use for the
returns the focus set for the given key
returns the node adjacent to the given index
puts a focus into the focus set
returns the default focus set
set the focus set to the given set of focus
returns an iterator over the set of focus sets
set the debug flag
returns true if the entity is a focus
returns true if the entity is a focus
returns an iterator over all neighbors
adds an edge to the graph
returns the debug flag
returns the edge at the given node n
returns true if the incident edge is a incident
returns the index of the given edge
returns the index of the node at the given position
check if the node is a neighbor
returns true if the incident edge is a incident
checks if the node is a neighbor
prepares the graph to be reused
removes all neighbors
add a node to the tree
removes an edge from the list
removes all neighbors
removes an edge
add an edge to the graph
removes a neighbor from the graph
adds an edge to the graph
removes the node at the given index
adds a listener to the graph
removes the given edge from the graph
removes a listener from the graph
removes an edge from this node
sets the size of the offscreen canvas
removes an existing edge from the list
sets the size of the offscreen canvas
removes a neighbor from the graph
this method is called when the offscreen canvas is resized
removes the at the given index
sets the font of this component
sets whether the current quality is high quality or not
returns true if the quality is high enough
returns the registry
sets the registry to be used for the given registry
returns the transform
returns the inverse transform of this transform
returns the coordinate of the given point relative to the screen
returns the scale factor for the scale
returns the x coordinate of the screen
returns the y coordinate of the current point
pan the current scale by the given amount
translate the current transform by a given amount of abs
pan the camera to the given point
this method is called when the is closed
zooms the camera
zooms the camera on the given point
returns the type of the node
set the node type
returns true if the graph is directed
checks if the node is a tree edge
returns true if the node is a incident
returns the first node of the graph
returns the second node
set the first node in the graph
set the second node
returns the adjacent node adjacent to the given node
is directed directed graph directed
returns the number of nodes in the tree
returns the number of edges in the graph
returns an iterator over all nodes in this tree
returns an iterator over edges in the graph
returns the root of the tree
returns the depth of the given node
this method is not supported
returns the attribute value of the given attribute
returns the attributes
set an attribute
sets the attributes of this map
clears the attributes
returns a string representation of this object
returns an iterator over the entities
checks if an entity is aggregate
returns the number of entities in the list
adds an entity to the list of aggregate
removes an entity from the list
returns the offscreen buffer of the offscreen buffer
returns the ith action
adds a new action to the set
adds a new action to the list
set the ith element in the array
removes the i th action
returns the number of actions in this collection
returns the value of the switch value
sets the value of the switch
returns the offscreen buffer of the offscreen buffer
returns the font for the given visual item
run the
returns true if the garbage collector should be enabled
returns an iterator over all the registry
sets whether to garbage collect garbage collection
adds a class to the list of classes
remove an item class
run the
draw the buffer to the screen
returns an iterator for the given registry
runs the activity
this method is called after the offscreen buffer renders the current offscreen
runs the scape
returns the value of the f r
computes the of the
runs the specified runnable at the given start time
schedule a new schedule
schedule a new time at the given start time
runs the activity
prepare the graphics object to render the graphics
schedule a new execution
controls whether the activity manager is always after the next call
schedules the activity after calling the activity
cancels the activity
after the activity is called after the activity is finished
adds a listener to the list of listeners
removes the activity from the list
sets the rendering hints for this graphics context
removes the specified listener from the list of listeners
returns the value of the pi
clears the map
returns the duration of the
returns the number of elements in this collection
returns the activity associated with the given key
run the action
returns the time of the time
returns a activity for the given key
initialize the model
runs the specified action
returns a new activity for the given key
returns true if the graph is directed
returns the next time in milliseconds
check if the node is a tree edge
the method that is called after the activity is definitely first before
returns adjacent node adjacent to the given node
cancel the given key
sets the node
returns the duration of the duration
stores an activity to the given key
sets the node to be used for the given node
removes the key from the map
sets the parent activity
adds a new class to the list
sets the duration
returns the item with the given class name
returns the parent of this activity
adds a new item to the list
adds a focus listener to the listener list
returns the start time
removes a focus listener
adds a new focus to this entity
returns the delimiter used to separate the data
add a collection of to this object
sets the time the time is to be used
removes the specified entity from this view
sets the delimiter to be used as the delimiter
hook method that draws the component
removes the given from this collection
returns the query
returns the time of the next step
set the entity to be used when copying the entity
search for a query
sets the time of the next step
remove all the elements from this container
returns true if the component is enabled
called after painting of the paint
clears the internal state
sets whether this is enabled or not
adds an entity to this entity
adds a collection of to this collection
removes the specified entity from this model
paints the component
removes the specified collection from the list
set the entity to be used for this entity
set the collection of elements to be stored in the collection
prints the component to the graphics object
clears the region
draws the specified item
adds a control listener to this control
remove a listener from the list of listeners
finds the item that is at the given point
returns the text editor
sets the text editor
edits a text item
edits a text
stops the editing
sets the renderer for the specified view
sets the renderer for the specified code renderer code
returns the buffer
gets the id of this tb grupo
sets the id of this tb grupo to the specified value
getter for property title
gets the usr id
sets the title
returns the header
sets the usr id
sets the header
gets the body
returns the users name of the abductor
sets the body
sets the usr name
gets the id of this tb secao artigo
gets the id of this tb grupo
sets the id of this tb to the specified value
gets the usr pass
sets the id of this tb grupo to the specified value
getter for property date
sets the date
sets the usr pass
gets the usr date
gets the id of this tb grupo
sets the usr date
sets the id of this tb grupo to the specified value
getter for property name
returns the persons first usr name
sets the name
sets the persons first name
gets the id of this tb grupo
gets the group id
returns the last usernames name
sets the group id
sets the id of this tb grupo to the specified value
getter for property grp name
getter for property name
sets the persons last name
sets the name
gets the description
sets the description
gets the img id
gets the date
sets the img id
sets the date
gets the value of image phase
sets the image phase
getter for property img source
sets the image source
constructor for the table
create a linear probe at the given positions
returns the capacity of this code array list code
inserts an object into the cache
insert a string into the tree
inserts an element into the queue
constructor for dealing with a puzzle
returns the value of the given node
this method is called by the to indicate that the inode
default constructor does nothing
creates a new puzzle
checks if the given inode is valid
constructor that creates a puzzle with the given values
constructs a new node
constructor for move position
returns true if the given inode is enforcing the given inode
returns true if the inode is valid
sets the score of the node
returns the score of the score
constructor for dealing with a puzzle
returns the value of the given node
compares two puzzle pieces to see if they are not equal
invoked when a window has been opened
returns true if the player is ready to be read
compares this card to another
sets the node to the given node
returns the suit of this card
returns the image cache for the given key
put a cache entry into the cache
returns the card card of the given suit
returns the reverse card card card card card
returns the height of the image
returns the overlap of the overlap
returns the width of the image
sets the card image for the card
returns true if this is an ace
sets the reverse card card
sets the name of the
sets the overlap of the two elements
returns true if the card is a face card
returns true if the enumeration has more elements
returns the next card
returns true if the suit is opposite color
description of the method
returns true if the given inode is valid
undo the last node
returns true if the given color is a color
description of the method
returns true if the given inode is valid
compares two cards
undo the last change
description of the method
undo the last node
returns true if the two points are identical
gets the next deal number
returns true if the iteration has more elements
returns the next node in the iteration
compares two cards
constructs a new instance of this column
description of the method
undo the last node of the tree
checks if the cards suit suit of the given card is a
returns the number of moves in the list
returns a string representation of this suit
compares two cards for equality
construct a column
removes the card from the set
returns a string representation of this code quad code
description of the method
returns whether the given node is valid
undo the last modification of the given node
constructs a new code quality directed code
constructs a new directed directed
construct a goal from a graph
removes a free card from the list
constructs a goal model from the given
create a new node
creates a new dfs
constructor constructor which is used to create the given
set the maximum depth of the committee
returns the counter
returns true if the given node is in the queue
this method was created by abator to create a visitor
sets the
sets the maximum number of bytes that can be used to calculate
creates a result object
sets the dead end state
set the state of the
returns true if the buffer is available
removes the given suit at the given suit
insert a new card at the given position
make a copy of this inode
returns the key in the table
compares the specified object with this abstract tree node
this method is called when the user selects the given node
undo the last node
returns the hash code for this object
description of the method
undo the last modified
description of the method
undo the last node of the tree
description of the method
undo the last node of the given diff
returns the object stored in this object
returns the stored data stored in this object
returns the label for this node
creates a new instance of the partial
adds a point to the list
removes the middle of the three three
returns true if the polygon has a three points
constructor that is used to create a convex hull scan
returns true if the is
returns the index of the given array of points in the given
returns the of the given
constructor that takes a comparator
compares this cell to another
set the ratio of the threshold
sets the second method
sets the number of threads to be used for the number of
sets the left and right working
sets the left and right side of the
the pivot

set the value of pivot method
set the number of threads in the pool
the method performs the actual mutation of the
returns the volume of the cube
select a pivot element
select a pivot element
select the pivot index
constructor for the puzzle
creates a jpg puzzle
returns the value of the given node wrt the
constructor for the tiny puzzle puzzle
constructs a new node
creates a new instance of store scheduler
constructor for day
add a new to the
returns a string representation of this date
compares the current jpg object with the given code
called when the model is updated
sets the listener
initializes the state of the state
undo the last time
make a copy of the receiver
updates the last cell of the given cell
returns the depth of the
returns the number of neighbors of the given
returns true if the given technology is valid
register a new
returns a string representation of this object
returns a short description of this action
returns true if the given object is equal to this one
executes the game
register a new
executes the game
undo the last move
updates the selected item
creates a new slide with the default state
handles the
returns a string representation of this object
executes the game
copy the data from the copy to the copy
returns a string representation of this object
called when the turn is complete
select the given text
turn the current turn to the turn
returns true if the given technology is valid
handles the state of the
returns the maximum number of moves that can be moved
undo the last claim
returns the cell at the given position
returns true if the two points are equal
returns a short description of this action
returns a string representation of this quad
copy the data
move the state of the specified cell
returns a short description of this action
constructor used to create a new play game controller
this method initializes current choice
draws the board
populate the list of games
returns the game logic
paints the board
returns the selected game type
returns the selected item in the list
this method initializes generate button
returns the selected item in the selected item
sets the move
move the move to the next move
moves a game to the next move
output a string to the output
returns an initiliazed instance of x move
this constructor is used to create a game controller
this method initializes num field
returns an initiliazed instance of
description of the method
returns the opponent player
draws the spot
returns the cell at the given coordinates
gets the value of the property
computes the intersection of two planes
sets the player to the given player
sets the dynamic entity
returns the dynamic entity
sets the player to be used as the player
returns the time of the algorithm
returns the x player
sets the current state of the state
this method initializes text field3
this method initializes this
this method is used to add a to the
returns the cell at the given coordinates
this method initializes text field4
move a cell to a given move
draws the board
this method initializes text field5
returns the output
adds a generator to the list
checks if the moves pieces moves in the game
returns the tree
set the default value for the given parameter
returns the nearest neighbor to the nearest
invoked when the mouse cursor has been moved onto the
returns the target
creates a new instance of code selectable int code
returns the current turn of the current turn
sets the nearest neighbor to the given one
constructor for the selectable multi touch
this method initializes scale checkbox
constructor which takes a point and a point to the given point
deselects all selected items
sets the target rectangle
this method initializes this
returns the target rectangle
sets the value of balanced
returns the distance between this and the given
creates a new point
this method initializes style list
this method is called when the player is about to be played
refresh the tree
returns the output
returns the opponent player
this method is called when the user is being removed from the
continue propagating visitor
this method initializes j
this method initializes this
draws the element at the end of the line
the model was updated
sets the model
draws the element
ensures that the image is available
sets the drawing canvas
draws a point on the graphics context
redraw the canvas
compares its two arguments for order according to their weights
draws the state of the image
executes the given inode
returns the value of the given node
creates a new empty state
constructs a new
creates a new state
updates the given display
evaluates the node and returns the result
returns the of the given inode
returns the for the given inode
returns the of the given inode
the model was updated
create a pair of diagonal rows
returns a string representation of this matrix
returns a new pair of the current value in the list
returns the result of the concatenation of the
returns the pair in the pair of the current character
returns the value in the form of the current row
returns the value to the negative of the pair
return a new pair of the pair
compares two objects for equality
this method initializes interactive
adds a new state to the list
this method returns the best evaluation of the given
compares this to another
returns the score of the given player
returns the node that is being used
returns the number of states
this method initializes performance
this method initializes j
creates a new value with the given value
creates a new instance of the given value
creates a new move evaluation
creates a new move evaluation
creates a move evaluation
returns a string representation of the score
creates a new max node
sets the value of the value property
constructor for the
returns the label of the node
returns the font name
returns the size of the font
creates a new alpha beta debug debug trace
returns the string representation of this object
set the value of this constant
returns the label of the node
returns a copy of this beta random alpha beta
creates a new score node
returns the label of the node
constructor for the max evaluation
returns the label of the label
returns the font name
move a
constructor for alpha beta
returns the initial value of the field
creates a pair of data objects
returns the opposite of this vertex
called when the model model has changed
returns the initial value of the field
this method moves the given from the given
returns a new object
move a
select a pivot element
select a pivot element
performs a
select a pivot element
sets the minimum size of the packet
select a pivot element
constructor which takes a and the data
description of the method
constructor for the
creates a new
constructor that takes a string and a string
constructor for the left hand side
creates a new
compares two floating point values
compares two
reduces the number of to the
creates a new segment tree node
set the top level
set the bottom left y coordinate
sets the left attribute of the object
sets the right position
constructs a discrete interval for the left hand side of the
checks if the two points are equal
returns true if the given object is equal to this one
returns a hash code for this object
returns a string representation of this quad
returns a string representation of this object
compares the specified object with this code code
compares two objects for equality
checks the interval to be used in the interval
returns true if the specified object is equal to this one
checks the interval between the given interval and the end
update the intervals interval
indicates whether some other object is equal to this one
inserts a new interval
disposes the internal intervals for this interval
removes the interval from the queue
returns a string representation of this object
constructs a new segment tree node with the specified left and right
returns the slope of the slope
update the interval
make a slide move
constructor for the segment tree
returns the sign of this code code
this method is responsible for the node
undo the puzzle
constructor that creates a match node with the given
returns a string representation of this object
make a slide move
this method is called when the user is executed
returns the y intercept of the intercept
make a copy of this node
updates the node
returns a string representation of this object
validates the given array
creates a new instance of code eight puzzle match code
returns a string representation of this object
returns true if the given node is a equivalent
returns the string representation of the given node
returns the size of the given node
make a copy of this node
compares the specified object with this code node code
creates a new instance of hull linked list
adds a to the list
validates the given array
removes the middle of the last point
returns a string representation of this node
returns true if the triangle has the three
returns the number of elements in this collection
format the node to the given string
returns true if the given inode is equivalent to this one
count the mark of the
returns the maximum number of moves that can be moved
returns the rules name
initializes the state of the state
clones this instance
move the state of the given cell
called when the mouse is right clicked
compares the specified object with this code eight code
returns a string representation of this object
checks for and
executes the game
returns the cell at the given position
returns true if the given object is equal to this
create a new cell with the given cell
returns a copy of this state
returns the tic
returns true if the cell is adjacent to the cell
returns a string representation of this object
returns a string representation of this object
returns the logic
swap the board and
returns a string representation of this board
returns the mark
returns the opponent mark
constructor that creates a player
reset the board to the velocities
returns the number of columns in this matrix
checks if the is identical to the same state
returns a string representation of this object
returns the value of the given code code
constructs a new agent
this method is used to get the opponent
returns the number of rows in the matrix
move the game
visits a node
this method is called when the logic of the logic is
returns the value of the given key
returns the score of the score
create a line segment pair
two segments are equal if they are equal
creates a new tic board object
returns the label of the node
returns a string representation of this pair
sets the score for this node
compares the to the specified
compares its two arguments for order
build up
compares its two arguments for order
constructs a new line sweep
constructor for the point p
compares its two arguments for order
insert a list of nodes into the list
returns true if the board is empty
adds a new upper value to the upper coordinate
removes a range of nodes from the given range
sets the sweep point
returns true if the queue is empty
returns the hash code for this object
inserts an event point
inserts a list of nodes into the list
adds a new line segment to the end of the list
returns the min of the event
returns true if the neighborhood is contained in the graph
returns the event point event handler
add a line segment to this collection
adds a list of segments to the list of lines segments
returns the label of the node
returns a string representation of this
concat the list of to a string
inserts an event point
returns the smallest point in the list
compares two code eight code bytes to match
returns true if the event is contained in the event queue
checks if the game has been won
returns the nearest to the given nearest
creates a new instance of code uniform generator code
creates a grid generator with the given parameters
create a new double generator
create a new integer generator
creates a new hub generator
creates a new generator
creates a new code generator code
propagate the to the given node
creates a new circle generator
create a new connection generator
create a new circle generator
returns the time in milliseconds
returns the value at the specified row col index
constructs a vertex info object
constructs a vertex info object
adds a new pair to the set
constructor that is used to construct a network
returns the value of the code clear code property
returns the edge type
outputs the graph to the given graph
outputs the to the output
copies all edges from the vertices
constructor that is used to initialize the given network
outputs the graph to the given network
adds a new edge to the list of edges
constructor for flow network array
adds a new backward transition
compute the
returns the element at the specified index
sets the value of the node at the specified index
output the output
assigns the vertices to the given graph
construct a pair with the specified element
compares two pair
returns a string representation of this object
constructs a new edge info object
clears the cells at the specified row and column
creates a new edge info object
returns true if the element contains the elements in the specified element
returns a string representation of this segment
constructor that creates a network network
constructor for the next array
returns a hash code value for this queue
constructor that takes a list of points
sets the cell at the specified position
constructor for the
returns the value of the code event source code at the specified
constructs a new object with the specified dimension
creates a new
construct a with a string
compares this to another object
constructor that takes a cube
returns a string representation of this object
returns true if the current value is cleared
creates a new
returns the coordinate of the coordinate
creates a new code double node code object
returns the distance between this and another
returns the value of this code value code
returns the number of dimensions of the
returns a hash code value for this object
moves the node to the previous node
increment the node
constructor for iterator
returns true if the given tic
returns the next element in the current iteration
creates a new list iterator iterator
returns the left coordinate of the left side of the
construct node object
remove the last element from the list
removes the last element from the list
searches for a collection of the specified collection
sequentially checks if the given collection is in the search
searches for a given key
sets the left position of the specified
sequentially checks if the collection is in the search
appends an element to this node
constructor for the table
constructor for list hash table
returns the element at the head of the list
constructor for the table
creates a new instance of double linked list
calculate the slot usage
returns the hash value of the specified string
returns the right value of the specified column
removes and returns the head element of this queue
returns the minimum collisions that contains the minimum
concat the list to the given list
returns the maximum number of collisions that have been
search for a given value
sets the right position of the given integer
loads the iterator
removes the iterator from the list
returns the label of the node
adds a key to the set
returns true if there are more permutations
returns a hash code value for this object
construct a double linked list
compares this code code to another object
visits the node
returns true if the given points intersects with this
validate the envelope
checks if the given point intersects the intersection point
returns the label of the node
insert the methods description here
checks if the given contains the given
left right left
set the root of the tree
returns the element at the head of the list
returns true if the given value is a member of this expression
returns true if the given intersects this
compares this object with the specified object for order
appends the given element to the end of this list
returns a string representation of this object
concatenates the current list of elements in this list with the given
sets the root of the tree
inserts an inode from the stack
removes the node at the end of the list
this method is called when the storage type is closed
removes the first element from the stack
constructor that takes a object
returns contains inode entries
removes the given inode from the stack
removes the element at the head of the queue
creates a new state hash table
inserts a node into the tree
inserts a node into the table
this method is not supported
removes the first element from the tree
format the node to the given node
sets whether or not the list should allow duplicates
removes and returns the first element from this queue
returns the code inode code for the given inode
removes a inode from the table
inserts a node into the list
returns contains inode
removes the given inode from the tree
removes the first element from this list
removes and returns the last element in this list
inserts a node into the queue
returns the node that contains the inode
removes the first element from this list
removes the given inode from the list of inode
returns the node that contains the given inode
inserts a node in the database
removes the given inode from the queue
returns true if the queue is empty
returns the number of elements in this collection
this method is not supported
sets the debugger to debug
constructor for search depth first
constructs a new transition
constructor for search
this constructor is called after the goal is
set whether the legend should be used
creates a solution for the given initial
this constructor was used to create the given
this constructor is called by the goal
returns true if the database succeeded
returns the number of moves in the board
search for a specific search
formats a node in a string
construct a new comparator
returns a string representation of this node
compares its two arguments for order
constructs a new object with the given and the
solve the problem
sets the root node of the tree
convert this node to a node
returns the below below this node
returns true if the is
returns the nearest ancestor of this triangle to the target
returns the above
returns true if this node is a leaf
accept a visitor
traverses the tree and recursively all nodes
traverses the tree and the tree
returns the region
returns the below below this node
returns a string representation of this object
returns the next node in the list
sets the below of the node below the given node
update the rectangles bounds to the current node
returns the next int in the specified dimension
sets the above above the given node
returns the region
removes all the root objects
removes the key from the list
traverses the tree and recursively all nodes
returns the above node
traverse the tree and the cursor to the end of the tree
sets the node below the left hand side of the node
resets the counter to zero
returns the number of the
returns true if there is a next element in the iteration
sets the node above the given node
get the count of the number of times the specified times
returns the root node of the tree
returns true if the given point is below the polygon
clears the cache
updates the bounds of the
construct a node from a value
returns the next element in the iteration
set the root of the forest
returns the average of the n bytes in the table
returns the maximum value of the specified number
returns the maximum value of the given target
returns the minimum value for the given n
returns the deviation for the given n
traverses the tree and add the children of the
removes the last element from the list
returns the row of the given row
search for the given search space
description of the method
builds a string representation of the node
returns the histogram header
returns a string representation of this object
returns the root of the root
returns true if the queue is empty
sorts the receiver
sorts the elements in the receiver into the given
adds a new count to the count
returns a string representation of this time
compares the health and to the current time
returns the minimum number of nodes in the tree
draws a node label
draws a string
returns a string representation of this object
create a legend from a string
draws a node label
returns the label of the label
create a new binary heap with the given index
returns the number of elements in the smallest element
decreases the key and returns the corresponding key
create a simple string with the given array of characters
construct a string with a given string
returns a string representation of this object
sets the ordering of the ordering
rank the rank
returns the node type
returns the edge type
creates an element with the given name and symbol
creates a new element with the given name and symbol
constructor for board
checks if the board is valid
returns the next board position
returns the key of the given value
returns true if the is
returns a string representation of this atom
compares this object to the specified element
mark the start of the message
mark the goal as being used
accept a visitor
visits a edge
visits a edge
test the zero length
returns a string representation of the node
tests the sweep
marks an edge as a descendant of this edge
returns the number of in the
returns a string representation of this object
returns a string representation of this object
sets up the test
sets up the test
creates a new plus move
checks if the given inode is valid
creates a new puzzle
constructor which creates a new puzzle with the given position
packs a string to a separate
creates a new puzzle
sets the score
compares two puzzle based on the given operator
test method void
returns the value to which this map maps the specified key
returns true if the key is already in the bloom map
adds a child to this node
insert a child at the specified index
inserts a child at the specified position in the queue
removes the child node
removes a child from this tree
returns true if the l contains longs
returns the intersection of this range
returns a new range of the values of this range
returns true if the i th element in this list contain the
returns the intersection of this range
returns the range of values for this range
returns the build object
build the
returns the
gets the value of the senha property
this method initializes this
open the database
insert a new bill into the bill
deletes a contact from the database
return a cursor positioned at the contact cursor
return a cursor over the list of all notes in the database
return a cursor over the list of all notes in the database
return a cursor that can be used to retrieve the database
returns the currency
sets the currency
returns the fixed rate of the data
sets the fixed rate
returns the amount of payment amount
initialise the payment
initialise the calendar
returns the date of the customer
returns the amount paid to the payment amount
returns a deep copy of this object
returns the date of the
returns the
returns the end date of the
sets the date of the payment calendar
returns the calendar
sets the periods value for this weather parameters type
sets the calendar
returns the number of in the list
checks if the two two dates are equal
gets the value of the adjustment type property
returns the payment business day object
returns true if the queue is empty
sets the adjustment type
gets the value of the property
sets the payment business day object
gets the business day object for this day
returns true if the list contains the specified element
sets the
returns the amount of the amount of the
sets the business day object for this
gets the business day object for this day
sets the amount
adds a new period to the list
returns the currency of the
returns the holiday holiday
sets the business day object for this
sets the currency attribute of the currency object
removes the first occurrence in this list of the specified element
sets the holiday calendar calendar
returns the holiday calendar
returns the offset amount
sets the holiday calendar to be used to calculate the holiday
adds a collection of values to this collection
sets the calendar offset amount
returns the holiday holiday
returns the rate
sets the holiday calendar calendar
sets the rate
removes all objects that are contained in the list
returns the calculator
retains all the values in the collection
sets the calculator
clears the list of
returns the ith element in the list
set the ith object
returns the adjusted fraction of the
adds a new period to the list
removes the i th element of this list
returns the index of the first occurrence of the specified element
returns the index of the last occurrence of the given element
returns true if this replacement has been replaced
returns the date between the and the specified
returns the date between the and the specified
returns the fraction of for a given period
returns the fraction of between the specified and
returns the fraction of the fraction between the given
returns the fraction between this and the
gets the value of the id empresa property
sets the id empresa
get the id of the
sets the id
sets the endereco of this clientes to the specified value
returns the
sets the
test of get entity manager method of class org
test of create method of class org
test of update method of class
test of get method of class org
test method for
merge the given array into the array
moves the selected row to the selected table
find backwards search
update warehouse customer
creates a warehouse warehouse
updates the of the
adds a message to the list of messages
add a message to the message
add a message to the message
sets the arguments to use for the given arguments
add a message to the message
returns the parent category
sets the parent category
returns the code string code representation of the code pattern code
returns the amount of the matched elements
returns the quantity of the user
returns the total quantity of the product
returns the minimum quantity of the
returns the maximum quantity of the
returns the quantity of the
sets the sum of the total value of the field
adds an action listener to the code jfile chooser code
returns the address of the branch
returns the report
returns the header of the report
returns true if the condition is present
returns the data scroll pane
returns the buttons panel
sets the custom display property for this custom property
override to override this method to override the default view row
returns the tree
set the tree
returns the message to be referenced in the given message
sets the button
sets the button visible
sets the visibility of the buttons in the button
helper method to create a message
updates the row object
sets the classifier
sets the special button behavior
sets the readonly flag for this object
sets the component to be shown on the button
returns the form session bean listener
sets the form session
at startup create and show the main frame of the application
this method is to initialize the specified window with the specified
update parent category
gets the category list panel
returns the properties of the user right
checks if the permission is allowed to determine if the permission is
method to test the given object using the given
asserts the given simple json validator
method to test the given
returns the value of the specified property
returns the horizontal alignment of the text in the text field
sets the horizontal alignment of the text
sets the code formatter factory code
sets the code formatter code for the code text field code
sets the document to be used for the document
returns the document
returns the number of columns in the table
sets the columns number of columns
returns true if the field is editable
sets the editable flag
sets the text field to the given text
returns the text of the text field
returns the maximum length of the longest character
returns true if this is a literal
returns a clone of the table
adds a row to the model
adds a row to the row
removes a row from the model
returns true if the form has been set to be executed
returns the error title
returns the error message
returns a string describing the exception
returns the error category for the given exception
returns the error level for the given throwable
sends a job to the web service
this method handles the events associated with the slider
returns the value of the spring coefficient
this method is used to fill the list of annotation objects
process the get request
returns the description of the given file
returns the value of the capture date as a string
returns the width of the exif image
returns the list of image tags
this method is called when the is removed
sets the goods
returns the user
sets the user
this method initializes this
returns the owned by this object
sets owned by the player
set the bpm
set the duration of the specified media
sets the number of seconds that the treasure has to be plotted
changes the optimum to the ticks
stops the rhythm
restart the
rewinds the to the eyes
mute the message
this method is called when the user presses the muted
starts the playback
starts the
restarts the current
restart the timer
returns the number of measures
returns the current time in the current measure
sets the number of measures
sets the volume of the volume
returns the volume of the volume
sets the volume left
sets the volume right of the volume
returns the duration of the appointment
returns the duration of the audio sample
returns the position of the current position in the
returns the position of the sample
returns the offset of the current sample
returns the offset of the current entry
processes the given data from the process
set the offset of the current offset
processes the given parameters
sets the offset of the current time
changes the speed of the current measure
removes the current element from the queue
consumes the next character
this test checks for the recursive operation
consumes the next character
sets the status text
parses the input stream and returns the output stream
execute the command
pushes the current state of the stack and pushes it to the
pops the current state from the stack
returns the current state
returns an initiliazed instance of form component
returns an initiliazed instance of source language component
returns an initiliazed instance of target language component
returns an initiliazed instance of spacer component
returns an initiliazed instance of source text component
returns an initiliazed instance of target text component
returns an initiliazed instance of item command component
returns an initiliazed instance of switch language component
removes an action listener
returns the color of the fog
enables disables filtering of the pattern items
enables or disables the gradient items
create a menu item
adds a menu item to the manager
create a menu item listener
sets the color listener to the color color
returns true if the current line is double buffering
returns the rgb value of the color
sets the rgb value of the rgb
returns the rgb value of the color
sets the rgb value of the rgb
disposes all resources allocated by this
sets the boolean value of the double buffered image
creates the control panel
returns true if the current value is buffered
returns the initial animation time
dispose of resources
returns the time in milliseconds
returns the animation flag
sets the animation flag
paints the image
moves a list of points to a given point
moves a new position in the list
called when the mouse is released
returns the capacity of the buffer
removes the code char code at the specified index
removes the code char code at the specified index
append a value to the end of this buffer
checks the url for the given url
sets the value of the specified field
reverse the order of the elements in the receiver
convert a byte array to a string buffer
set the value of the parameter
sets the character at the specified index and the
adds an attachment to this message
sets the length of the buffer
appends the string representation of the code char code
checks if the version is available
returns true if the is
trims the capacity of this buffer to be the capacity of
returns a string buffer representation of this buffer
returns the buffer as a string
returns the string value of the value
append a char
creates a new code char sequence code
returns a new code char sequence code representing the
returns the current buffer as a char sequence
deletes the characters from the given characters
append a range of characters
inserts a character at the specified position
builds a url from the given url
append a value to the buffer
checks if the number of numbers are already added
append a float value
append a value to the buffer
append a long value
appends the given object to the buffer
append a value to the buffer
returns the selected
gets the search url
sets the text to be displayed in the textbox box
gets the value of the textbox class property
append a string to the buffer
returns the class
gets the param param value
returns the on change
appends the specified character sequence to this writer
appends a subsequence of the specified character sequence to this writer
returns the character at the specified index
delete a string
removes all the elements from this collection
deletes the end of the range of characters starting at the specified
encode the
decodes the
returns the index of the first occurrence of the specified
returns the index of the first occurrence of the specified string
returns the index of the first occurrence of the specified string
inserts the value at the specified position in this list
inserts the string into the buffer
inserts the specified character into this buffer
inserts the given array into this buffer
inserts the value at the specified position in this list
inserts the value at the specified position in this list
inserts the value at the specified position in this list
inserts the value at the specified position in this list
inserts the value at the specified position in this list
inserts the string representation of an object
insert a string into the buffer
returns the length of the buffer
replaces the substring with the substring
replaces the substring with a substring
replaces all occurrences of a substring of the buffer with the given
replaces the character in the buffer with the specified character
replaces the character in the string buffer with the replacement
resets the object to the given string
split the given word into a single string
split the given collection into a single string
returns a string representation of the current position
returns a new
returns a new character sequence representing the subsequence of this sequence
returns a string representation of this buffer
reads the next character from the stream
pushes a string to the unread buffer
the command has been executed so extract extract the needed information
process the resources
processes the given file and returns the output file
returns the
the thread run method
sets the path attribute of the object
returns the content of the content
add a timeout observer to the watchdog
validate the key
removes the watchdog observer from the list
stop the timer
sets the path to the file
sets the system properties
restores the system properties
sets the input file to which this socket is attached to
returns the final macro
returns the initial macro
sets the input string to be used for the input
sets the force
clone the object
executes the command
invoke the method
executes the test exec
runs the exec
creates a watchdog watchdog object
processes the given file and returns the output file
execute the task
returns the converter
sets the id of the generator
creates a fileset for the classes
creates a new descriptor
set the
set the work directory for the work directory
sets the process manager
sets the retry timeout
adds an environment variable
clears the arguments
adds a new xml file to the list
add a file to the list
executes the given classname with the given arguments
set the user name to be used to execute the command
set the classname of the class
sets the jar file
sets the vm
set the of the
sets the attribute of the object
set the maximum number of to be used
set the output file
check if the destination is not already in the destination
process the resources
returns the name of the component
ensures that the target directory is accessible
returns the expression
constructs a new
reloads the list of providers
returns a string representation of this object
returns the url for the given url
returns true if the given url is absolute
adds a configured class assertion status
adds a configured package assertion status to the
returns the default assertion status
returns true if the url is a url
returns the default handler
get the parameters of the command
sets the default assertion status
sets the value of the add default attributes
resolve the given directory into a string
sets whether the should be added to the
transforms the file separator to a string
sets the handler to use for this handler
report a string of log
this method is responsible for creating a new role
check if the current context is checked
returns the default handler
sets the new loader set
clones the object and returns a clone of this object
return true if libraries are already initialized
returns the handler set handler set handler set
handle an error
returns true if the referenced class is isolated
handles an exception
sets whether this list is or not
fulfill the ant descriptor
sets whether libraries should be included in the libraries
returns the adapter
sets whether the attribute is allowed to be isolated
executes the command
return the loader
returns true if the packages is a package
sets the package root packages list
get the name of the resource
sets the file to be used for the
sets the format of the list
set the hierarchy hierarchy hierarchy
sets the flag that determines whether or not the first element is
sets whether this list is or not
sets whether this is a loader
handles an error
sets the class attribute
sets the root package root of the package
adds a new ant parameters to the ant task
this method is called when the error is not found
returns the log level for this logger
returns true if the is omitted
returns whether or not this user requires a requires to check
handle an error
returns the default parent class loader
this method is called when the error is encountered
set the class loader for this class
adds a loader to the loader
set the location of the file
generate a string representation of the attributes
set the codebase
adds a parameters to the list
sets the attribute of the object
returns the name of the default parent
creates a new child
returns a string containing the attributes of the
adds a parent loader to this loader
sets the path to the specified path
set the loader
this method is called when the start tag is encountered
returns the parent classloader for the given classloader
adds a loader to the loader
this method is called when the child is
returns a string containing the names of the given parameters
creates a new child
sets the loader reference to the given reference
creates a classpath to the classpath
report a string of text to the output stream
starts a new class
returns a string containing the name of the
this method is called when the verse is done
begin a string
executes the command
adds a new existing source to this source
start the error
begin a string
begin a string
begin a new packages
get the classpath to use for this class
begin the report
begin a string
begin a package
this method is called when the user enters the roles
returns whether or not the report is a report packages
sets the file to be uploaded
this method is called when the user has entered the roles
returns the handler for this handler
sets the format
begin a package
begin a report
end the attributes of the attributes
set the hierarchy of this hierarchy
sets whether the report is
called when the child is
adds a path to the list of
returns the parent classloader for this generalization
begin a report
begin user doc
ends a role
ends the entry
sets the handler set factory
returns the super classloader
returns the handler set handler set
returns the current
begin user doc
end errors
this method is called when the user selects a user
checks if the given package is a valid package
handle the classpath entry
sets the status of this object
sets the name of the class
end the packages
sets the package name
sets the new handler set for this test case
this method is called when the user presses the start role
called when the end of the report is finished
returns the default handler
end the roles of the role
set the classpath to use for this class
returns the end attributes of the given element
called when the user has the end of the role
sets the classpath to use for the classpath
returns the parent loader
returns a string containing the end of an array of points
add a java runtime to the runtime
returns the end attributes of the element
returns the super classloader
set the loader to use
reports an attribute
handle the classpath entry
returns the first role of the end of the given name
returns a string containing the end of an array of points
sets the parameters of this object to the given parameters
this method is used for a child
sets the classpath to use for this class
adds a path to the receiver
sets the parent loader for this referent
checks if the given action is supported
this method is used to set the class of the class
returns the number of entries in the scope
returns the first argument that has been specified for the given name
reports a new entry to the zip entry
sets the role loader
returns a string containing the errors and warnings
returns the end entries of the given scope
adds a reference to the list
reports a url to the remote file
sets the parameters of this object
sets whether this list is a reset state
report an error
set the parent loader for this loader
returns the end errors
sets the parent loader
method for parent
returns the ending of the given element
sets the current loader
method for parent
end of a package
sets the reset flag
adds a package to the list of packages
returns the report prefix
set the super classloader
reports a role
returns the prefix of the report
sets the super class loader
adds a unless key to the list
end the roles of the end of the role
reports a role
end the roles of the end of the role
returns a role that is not in this role
unchecks this node
formats a attribute
ends a certain number of roles
returns a string with the given name and the children
appends the given code code to this
formats a attribute
returns a child of the given child
starts a new instance of the attributes
formats the class
returns a shallow copy of this tt tt object
this method is called when the
starts a new valve
formats the class
begins a new entry with the specified number of entries
formats a entry in the format
report the specified number of errors
returns the of the current
begins a new packages
formats a entry in the format
report the start of the report
format the given url to a url
begins a new group
this method is called when the user modifies the reviewer is possible
ends the end of the attributes
format the given url to a url
ends a child
formats a message to the given prefix
ends a new role
ends the current number of entries
formats a message to the given prefix
logs the errors in the error
adds a path to the classpath
ends a single
ends the report
ends the user role
signal that the user wants to end unassigned events
creates a new
report a value of a given attribute
this method is used for a simple child
report a
creates a new
report a single entry
format the package name and package format
format the package name and the package name
report a new url
reports a error
returns a role name for the given role
report a parent
report a parent
returns a role name for the given role
reports a package to the package
reports a role
reports a role
sets the location of the attribute
returns the default parent
returns the name of the default parent
sets the path to the specified path
returns the parent class loader for this class
makes this instance as an embedded object
sets the attribute of the object
checks if the given action is supported
returns the path to the path
translate the source file into a string
returns the type of this object
returns true if this is a singleton singleton
this method is called when the attributes of the node is beginning
this method is called when the child is
returns a string containing the start of the given
returns the start of the given parsers
starts the parser
starts the parser
this method is called when the verse is done
this method is called when the error is reached
begin a new packages
begin the report
this method is called when the user enters the roles
ends a classloader with a given name
called when the user has entered the roles
end the attributes of the attributes
called when the child is
ends a classloader
reports a report of the given name
returns the parent classloader of the given classloader
ends the entry
sets the default value of the attribute
end errors
sets whether the add contains all of the elements in this
reports a report of the given
adds a configured class assertion status to the status
adds a configured marshal assertions
sets the handler to use for this handler
reports a report of the given
end the packages
gets the value of the default assertion status property
returns the default handler for this handler
returns the parameters of this object
reports a report
ends the report
returns true if the current user can be undone
sets the default assertion status
sets the
reports a signal handle
returns the classloader to use for loading the class loader
checks if the current context is a valid thread
end the roles of the role
returns the adapter
returns the name of the component
returns the adapter for the given adapter
returns the loader
called when the user has the end of the role
this method is called when the error is encountered
set the adapter for the adapter
checks if the given action is supported
returns true if the current thread is possible
set the loader
set the classloader to use for the classloader
sets the value of the flag
set the loader to use for this plugin
returns the end of the given report
returns the start of the given report
report a attribute
reports a report of the given name
reports a new entry to the
reports a report of the given
reports a report of the given
reports a report
reports a role
format a child of a child
formats a child of a child of a report
returns a role name for the given role
returns a role name for the given role
normalizes the given string
test method for
reloads the list of providers
returns the engine
returns the current context
gets the value of the denied context property
returns the ancestor element with the given name
returns the xml representation of the node
returns the header string for the given header
returns the value of the given code ship group code
bind the given keys to the given keys
rolls the dice
test method for
test method for
test method for
test method for
test method for
test method for
test method for
p this method is called when the jsp engine encounters the start
register a new class
unregisters the given code code from this
returns the
sets the
sets the
process the end of this tag
process the end of this tag
process the end of this tag
returns the out flag
process the end of this tag
sets the out
set the output string
returns the
process the end of this field
sets the
sets the
process the end of the category
returns the
sets the
saves the configuration to the persistence manager
returns the value of the config property
sets the
returns a set of all the keys in the map
saves the configuration to the persistence manager
reloads the configuration
adds a connection to the database
returns a connection to the database
reloads the tree
returns the form change listener for the current form
returns the form change listener for the current form
returns the string representation of the current value
returns the name of the
returns the string representation of this object
returns a string representation of this object
returns the string representation of this object
returns the value of the field
returns the value of the text field
returns the value of the field
sets the value of the field
sets the value of the field
sets the value of the field
returns the form change listener for the given
loads a class from the class loader
returns the form change listener for the current form
returns the string representation of this object
returns the value of the field
sets the value of the field
returns the standard form change
returns the
returns the string representation
returns the value of the
returns a string representation of this object
sets the value of the double property
returns the target string representation of this object
returns the map of all targets
returns the target id
adds a new target to the list of relations
reloads the
returns the target of this schema
sets the structure of this element to the given
description of the method
sets the target id
returns the structure of this structure element
returns the def id
returns the int value of the
returns the sec level change
sets the of the object
returns the int value of the
returns the boolean value for boolean
sets the boolean value of the boolean flag
returns the boolean value of the boolean flag
sets the boolean value of the boolean flag
decodes the request
update the duration of the file
plays the song
starts the player
sets the focus to the specified index
updates the
returns the of the music
description of the method
updates the table
moves the songs up
returns the current selection
move down the song down
returns the next track in the list
returns the previous track
adds an object to the list
add a list of the items to the list
this method is used to determine the selected junction
add a vector to the list
notify all listeners that the given row firing a
sets the path to the specified file
clears the contents of this element
returns the element at the specified position in this list
returns the row at the given index
replaces the element at the specified position in this list with the
sets the element at the specified position
inserts a given element at the specified position
inserts a new array at the specified position in this list
returns the leading punctuation
called when the model changes
returns a string containing the title of the file
returns the name of the file
sets the actions from the scroll bar
sets the actions from the screen state
returns the icon for the given relative path
initialize the for the
returns the node
test of get method of class org
returns the list of avatar lists
render the
returns true if the given hour is
loads a jena model from the given path
returns a animation from the specified path
returns the list of
returns the list of all geometries
returns the window title
sets the hour in server
returns the avatar model
sets the min in server
returns the config file manager
sets the key manager
sets the walking
sets the avatar node
setter for property node
returns the avatar node
returns the avatar size
sets the avatar node
sets the avatar height
returns the model
sets the avatar height
returns the walk animation
sets the walk animation
returns the animation
sets the
builds the input for the input
sets the position of the left left right position of the left
returns the file name walk
sets the file name walk
get the name of the file standing in the user
updates the angle to left
set the name of the file to standing on the user
returns the vehicles speed in
build the light state
sets the walk speed speed
updates the angle to right
returns the speed of the camera in mode
sets the speed
returns the start point of the point
move the robot to the current location
set the start point of the segment
this method is called when the user is the robot
returns the turn left
sets the turn left
returns the turn right
sets the turn right
returns true if the front end is not enabled
sets the move front
returns the angular velocity
sets the angular velocity
sets the value of the current num
returns the formated date of the given date
sets the selected avatar
sets the pass word
returns the light node
sets the root node of the tree
sets the intensity value of the intensity
sets the target of the node
deletes the avatar from the database
sets the selected option
calculate the start row number
returns the selected option
returns the avatar with the given id
calculates the end row number of the data source
returns the value of the code bg color code property
sets the value of the code bg color code property
returns the animation type
renders the html code to the screen
returns the hour
returns the online users of the online users
render the hidden fields
returns the today day
returns the today day today
checks if the file jar file exists
returns the data source
checks if the configuration file exists
upload a file to the upload
sets the data source
returns the size of the resource pool folder
returns the total number of files in the resource pool
returns the start row number
returns the time of the download time for the given pool
sets the start row number
returns the end
returns the path to the destination file
sets the end
create a jar file
returns the maximum number of rows per page
saves the configuration to the database
returns the url banner
sets the max rows per page
get the configuration
returns the registry text
sets the registry text
returns true if the login is enabled
sets the login login
sets the page number
returns whether the show is shown
sets whether the should be shown on the sidebar
returns the msg
sets the msg
returns the activation text
sets the column numbers
sets the activation text
sets the language messages
sets the redirect url
returns the registry type
sets the registry type
set the value of order by
returns the secure key
sets the secure key
sets whether order is ascending or descending order
returns the title of the window
sets the win title
get the application config
checks if the user specified user name exists in the database
insert a user into the database
delete a user from the database
activates the user
activate a user
user
updates the user with the given user
get user by username
update the
this method is used to determine whether the file is a
checks if the request parameter is valid
returns the url binding
sets the window title
returns the application context
gets the value of the id property
returns the animation type
sets the id
sets the animation type
returns the scale factor
sets the scale factor
this method is used to get the request
returns the job
sets the job
sets the institute
returns the date of the registry
sets the value of animations
sets the date of the registry
returns the mesh file
sets the mesh file
returns the current administrator
sets the administrator attribute
returns the fix height
sets the fix height
returns the
sets the online status of this message
sets the
gets the reg session id
returns the width of the avatar
sets the reg session id
sets the width of the avatar
gets the on line session id
sets the on line session id
returns the height of the avatar height of the avatar space
sets the height of the avatar for the next available space
returns the avatar of the avatar
returns the
sets the
returns the
sets the
returns the
sets the
this method is used to set the database connection to the database
deletes the given entity
deletes all entities from the collection
save the entity
update an entity
returns the listener for this component
returns the action for the menu item
returns the action for the menu item
this method is called by the code map code to perform the
returns the action for the given menu item
show a radio dialog
sets the location of the popup
returns the action for the given menu item
returns the action for the given menu item
returns the action for the given menu item
returns the action for the given menu item
returns the preferred location of the
set the array of master table master table
sets the date in the calendar
returns the value of the month as a date
returns the menu component for the given class
sets the menu views
returns a list of all menu components for the given class
create a button with the given name and icon
returns the add new view button
returns the menu for the current view
get frequencies for a
executes the filtered file
returns a buffered reader for the current file
show the chart frame
reads the data from the input stream
returns true if the line is empty
create the chart
runs the connection to the database
returns the text value of the given text
creates a chart
returns the
gets the sweep agency agency
returns the magnitude of the
returns the magnitude of the
returns true if the is calculated from the
set the sweep agency
sets the magnitude of the
set the flag
set the magnitude of the magnitude
show the chart frame
returns the latitude of the site
returns the site longitude
returns the distance
get the content length of the content
returns the intensity char value
returns the
gets the value of the property
sets the description
sets content length of the content
gets the value of the property
sets the mime type
gets the value of the property
returns the population
sets the source name
gets the value of the property
sets the info
gets the value of the property
sets the source type
sets the field with the given name
returns the user error for the given user
sets the distance
return an iterator over all the fields in this bean
sets the intensity char
sets the value for this
set the lat lon for this box
sets the population
set the lat lon for the given lat lon
sets the
set the coordinates of this sprite
sets the
set the latitude of the point
sets the site location
returns the latitude of the point
sets the site bank longitude
set the lon
sets the name
returns the metadata
returns the longitude
sets the name of the
returns the resource path for the given resource
set the x coordinate of the object
returns the meta data for the given
sets the name
load the meta data from the database
sets the y coordinate of the object
deletes a from the database
set the radius of the circle
description of the method
insert a magnitude in the database
the url of the given url
insert a into the database
initialize the data source
returns all the sources of the current database
get the current user constraints for the given role
returns the maximum number of rows in the database
returns the long result for the given query
returns the double value of the given query
sets the url to the given url
returns the catalogs catalogs catalogs catalogs catalogs
reads the shape file from the specified path
returns a set of all the sources of this catalog
loads the catalogs from the database
loads all the sites in the given url
returns frequencies for the given source
returns the priority of the catalog
returns the catalog data for the given id
returns true if the population is in bounds
returns the catalog name for the given catalog
returns a list of all the results for the given
returns the source catalog for the given
returns the number of catalogs in this catalog
returns a catalog data object for the given catalog name
returns a list of all the macro objects in the database
frees the oracle connection
loads the from the given
sets the properties for this properties object
checks if the mouse is a left click mouse event
returns the of the mouse event
returns true if the is
the map
sets the coordinates of the mouse event
set the help button for the help level
returns the mouse coordinates
reads the applet parameters
compares the specified object with this principal
returns the url for the given relative path
returns a string representation of this object
handle the mouse click event
registers the user to the database
load the properties from the given file
returns the printer for writing a document
creates the help set
returns the code code
adds a failure message to the message
uploads the file to the user
upload the document to the
returns the default interval
method to send a to a
get the sources
stops the timer
this method is called when the http servlet response is no
returns the center of the given source
return the principal associated with the specified username and
returns the last update of the given source
converts a map into a combo box
returns the countries of the given list of countries
returns the interval for the interval
returns a link to the given link
returns a map of all the sources
returns true if the given principal is a
returns the content of the content
called when the session has been created
called when the session is destroyed
called when the session is activated
called when the session is being loaded
returns the xml representation of the list
send a catalog catalog to the server
this method is used to send a
this method is called when the user selects the minimum limit for
returns a string representation of this object
classifies a list of sample
classifies a list of sample
train the given point
classifies a list of test data
classifies a list of test data
moves the current position to the next position
returns the primary key column name
returns the exceptions
sets the exceptions
creates a new database access object
returns the content of the object
adds an object to the list
sets the content of this object
returns the type of the element
returns the content of this element
adds an object to the list
sets the content of this object
sets whether the line is new
returns the type of the element
adds an object to the list
sets the content of this object
returns the content of the dictionary
returns the type of the element
adds an object to the current dictionary
sets the content of this object
returns the content of the object
sets whether all white pieces are allowed
adds an object to the list
returns the type of the dictionary
returns the type of the element
builds a document from a file
builds a document from a document
writes the contents of the document to the specified output stream
reads the contents of the input stream into a dom document
builds a document from a reader
builds a dom document from a url
builds a document from a string
returns all accessors for a given class
writes the contents of the document to a writer
append a document to the end
add a string to the end of this element
append a document to the end
return a string representing a element in this element
return a string representing a data element
append a string element to the output
return a string representing a dictionary
returns a string representation of this object
create the writer to output stream
add a element to the end of the element
output a string element in the string
output a string element to the output
output a string
returns the string representation of the line
output a string element in the string
returns the string representation of the given level
output a string element to the output
returns the space in the space
adds an object to the list
sets the list of content
output a string in the xml
append a document to a string
append a document to a string
returns a string representation of this object
appends the element to the end of the element
output a string element in the string
append the data in a string representation
append a string
output a string element in the string
append the data in a string representation
returns the string representation of the given level
append a string
create the action map
creates the input map
create the action map
activates the
called when the user presses the
removes all the elements from this turn
create the action map
adds an explosion to the explosion
install the actions
saves the game settings to the current game
adds a new to the
removes the controller
this method is called when the user selects the
returns the name of the component
the game
gets the description of the
unpack the message
returns the of the game
returns the web site url
returns the author of this item
returns the author email
get the version
returns the version of the
invoked when an action occurs
creates the input map
this method is called when the player is about to be
the planet
create the action map
check that the is allowed to be
remove the current user profile from the set of
creates the input map
remove the given property panels from the
create the action map
creates the input map
create the action map
deletes the object
returns the name of the component
gets the description of the
move the selected down
creates the action map
move down the down
returns the version of the
deletes the selected object
returns the documentation for the documentation
insert the given number of data into the data set
adds the given user to the list of available
removes the user marker data
invoked when an action occurs
activates the
deactivates the game
this method is called by the install graphical event handler
creates the markers for the given user
returns the id of the object
removes the given code game controller code from the list
set the property object for this object
returns the name of the component
gets the description of the
activates the user markers
shows a dialog box
returns the version of the
returns the documentation for the documentation
cancel the line marker
invoked when an action occurs
make a line marker
returns true if the message is in the data message
remove ships from the group
returns the selected marker type
returns true if the message is a mark of the message
create the action map
create the action map
deactivates the tool
invoked when an action occurs
sets up the ships
returns a ship that is a given code planet code
handles the of an item
description of the method
create the input map
create the action map
returns the of the game
create the action map
checks if the library is already loaded
remove the
sets the current planet or not
sets the views
sets the markers for this annotation
returns the number of in the
notify the client about a room
fire an gun to the given room
this method is called when the player is connected to a given
this method is called when the player the
this method is called when the player is
move the ball to a new ball
moves the camera to the next position
p this method is used to move the game
removes the specified game
this method is called when the ball is about to return a
called when the is moved
start the game
sets the sticky
set the position of the relative to the given position
removes a ball from the
remove a bullet from the list
adds a bonus to the
starts the game
this method initializes this
this method initializes j content pane
this method initializes cmd close
returns the code of the code
called when module is shutdown
called when the module is started
called when the user changes the registration changes
returns a string representation of this object
returns the signature string
returns the signature of this signature
returns the type of the management
compares the specified object with this signature
shutdown the server
unpack the type
compares the specified object with this module
compares this service to another service
compares this signature type to another signature type
returns the int value of the byte array
writes an array to the output buffer
check if this module is equal to another module
checks if the array match the given signature
stores the specified value in the specified float
returns true if the given signature matches the given signature
unpack a byte array
returns the hash code for this module
unpack a long value into a long
unpack a double array
get the boolean value of the boolean type
processes the given data block
returns the stack trace of the given exception
called when the broker is being
returns the byte value of the byte array
called when the other module is being shut down
add an element to the end of the end
returns the string representation of this object
add an end to the end of the list
adds a new element to the end of the array
the of the
packs the given into a type
set the file to write to the given file
packs the given code code into the
unpack complex
this method is used to create the given string
call the incoming call
adds a string to the end of the list
returns the complex type of this complex type
this method is called when a reply message is received
add a new to the end of the list
adds a double to the end of the list
returns the double value of the data
called when the server calls the stop method
sets the command line
sets the level of the stack
dispatches the event to the specified handler
returns the command line
add a byte to the end of the buffer
remove the given handler from the list
add a new to the end of the array
returns the next type of the data
dumps the contents of the object into the output stream
distributes the event to the event dispatcher
returns true if the specified event is
returns the package name for the module
returns the class of the module
adds a handler to the list of handlers
add a handler to the logger
adds a collection of strings to the list
add an array of objects to the list
assemble a message from the given buffer
binds the socket to the rmi bind bind to the
release the resources
adds a remote object to the remote host
add a handler to the handler
sets the function name to include the properties of the
sets the function names to exclude
sets the event types to include in the format
sets the event types to exclude
load the properties from the given properties
executes the file
removes all strips stripped from the given string
strips a single line from the file
executes the task
sets the classpath to be used for the boot
sets the classpath to be used to locate the classpath
writes the contents of the given input stream to the output stream
sets the classpath to use for this resource
returns the class name of the file
sets the input file
sets the output file
sets the classpath to be used for the classpath
set the input file to use
sets the output file
add an interface to the interface
run the test
paint the map
set the grid parameters
returns the data of the byte buffer
gets the value of the property
sends a byte to the socket
sends data to the mote
sets the
returns the version of the version
returns the vendor id
returns the
draws the pose at the center of the plane
extracts a string from the data
set the address of the address
connect to the nxt
paint the particles
paints the target
close the
builds the panels for the panels
paints the features of the geometry
upload the file to the user
runs the nxt nxt nxt nxt nxt nxt nxt nxt
this method creates the panels and adds it to the panel
connect to nxt
returns the line of the arrow line
paints the given path
check if the file is a file
creates the map panel
returns the x coordinate of the x coordinate
get the file info for the given file name
returns the y coordinate of the center of the point
returns the distance between the distance and the distance
set the maximum distance between the min and the distance
sets the range of the motor
close the stream
close the
sets the debug flag
set the travel speed for this connection
set the rotation speed of the robot
writes the specified byte array to the socket
get the current particles
moves the cursor to the specified position
adds a waypoint to the canvas
generates the particles
connect to the nxt
p checks if the buffer is a
sends a map to the socket
moves the waypoint to the next waypoint
moves the camera travel distance from the camera
rotates the camera around the given angle
creates the mesh panel
this method is called when a segment is shifted
rotates the camera to the specified angle
get the current world
calculate the estimated pose for the current pose estimation
returns the maximum number of bytes that can be written to the
inits the gui
get the current laser readings
returns true if the connection is connected
returns the
sets the target to the target
set the label for the plug in
stops the current event
returns the
moves the current cursor position to the random position
sends the nav event to the view
the current
sends a random move to the zvtm server
sends a request to the server
navigates to the next available url
start the navigator
initializes the plug in
adds a series of data points to the chart
find the waypoint
add comment to the chart
sets whether comments are visible
this method is called when the user selects the
sets the series series to be used for the series
clears the path
show the poll button
sends the exit event to the server
calculate the path to the current path
sends a sound to the server
this method is called when the server sends a message to the
stops the thread
paints the component
this method adds the xyseries to the panel
create the status panel
creates the command panel
create the readings panel
runs the
creates the panel
create the particle panel
sets the width of the chart
creates the menu
runs the program
prints a fatal error message
displays an error message
sets the size of the map
paints the component
invoked when a mouse button is pressed on a component and then
invoked when the mouse cursor has been moved onto the field
invoked when the mouse has been clicked on a component
invoked when the mouse exits a component
this method is called when the orientation of the
invoked when a mouse button has been pressed on a component
mouse event handler
called when the popup menu is about to be shown
this method is called when the connection is about to be connected
shows the about box
sets the size of the map panel
shows a color chooser
this method is called when a new line is detected
this method is called when the user selects the current location
updates the particles
this method is used to calculate the
set the motor to the nxt
the
calculates the weight of the particle
sets the map
returns the number of readings in the pool
description of the method
read the data from the data
turns on or off
applies the movement to the particle
sets the current mesh
sets the algorithm used to generate the algorithm
sets the grid spacing
returns the maximum weight of the
sets the
returns the number of neighbors
sets the map of the map
adds a neighbor node to this node
removes a neighbor from the list
sets the h score
calculates the distance between the two nodes and
gets the value of the readings property
calculates the h of the given node
sets the score of the
returns the score of the
returns the score of the
sets the particles
returns the predecessor of this node
sets the predecessor of this node
adds a new listener to the list of detector
write the object to the given output stream
sets the distance of the distance
returns the maximum distance between the last
enables or disables the detection detection
load the class data from the data input stream
description of the method
returns the move type
returns the travel speed of the game
returns the rotation speed of the rotation
clears the path
returns the location of the location
sets acceleration in the acceleration
navigates to the current path
returns the left side of the left side
returns the right side of the
returns the y coordinate of the camera
returns the pose for this pose object
check if the platform is valid
returns the number of left left coordinate
rotates the camera to the given angle
returns the number of right variables in the table
sets the direction of the movement
returns the ratio of the ratio of the current turn
returns the movement direction
returns the minimum radius of the agent
returns the rotation of the rotation
sets the travel speed of the camera
this method initializes
updates the of the
calculate the interval between the time and the time
reads the next byte of data from the input stream
reads the next byte of data from the input stream
this method is called when a new move is removed
returns true if this map contains a map
returns the map of the
sets the number of readings
returns the current pose
sets the motor
sets the current pose
write the size of the object into the data
set the target
read the object from the stream
returns the target
flip the geometry
stop the timer
calculates the angle of the
returns the distance of the distance from the current position to the
returns the number of in the current motor
returns true if the command is moving
moves the robot to the specified distance
moves the position to the specified position
stop the current thread
returns the range of the range
returns the number of
resets the count to zero
returns the string representation of the
distance between the two points
get firmware version
get the string
sets the degrees of the mobile station
returns the degrees of freedom
sets the angle of the camera
the arc ellipse is a perception
constructor for the
returns the value from the current object
reads the ambient
reads the from the
adds a listener to the
create a new server address
create a new port
reset the state of the
starts the server
stops the motor listener
sends the command to the remote server
add status to the status
adds a radius to the arc
stops the
get the of the
returns the voltage voltage of the current
returns the current tilt position
returns the current tilt position
returns the current
returns the velocity of this object
returns the of the
returns the heading of the current
returns the of the
returns the of the
returns the relative relative position of the current
returns the current pixel tilt of the current position
returns the angle of the given angle
returns the distance to the destination
this method returns the current state of all the
returns the value of the sensor value
returns the angle to the destination
returns the average of the
returns a string representation of this sensor
returns the of the
returns the of the
returns the of the
returns the number of pixels in the
returns the port number
this method is called when the is closed
returns the current obstacle value
sets the value of the code long range code property
returns true if the range is a long range
returns the angle of the
this constructor is called by the runner constructor
returns the angle in radians
returns the of the
returns the power supply power of the current power supply
reset the angle to the initial state
the
moves the motor to the current one
resets the statistics
returns the pressure of the device
this method will move the motors
sets the current command to the next command
sends a command to the server
stop the timer
this method is called when the user presses the timer
wakes up the thread to send the wake up
sends a to the
converts a unit to a code float code
returns the steering value of the first steering
returns the average of the average
returns the last acceleration in the axis
converts a to a float array
get the pitch pitch as the pitch for the current pitch
get the last roll of the current roll
returns the number of the last
set all the acceleration in the unit
returns the point of the
returns the last angle of the
stops the thread
returns the acceleration in the axis
fetch all the notes in the given currency
rotates the robot by the given position
sets the point of the
returns the angle of the sprite
returns the rate of the
set all the to the same time as the
the of the given unit
returns the unit of the unit
rotates the current rotation by the given angle
set the value of the send
resets the timer
returns the mean of the values in the
this method is called when the calibration mode is turned on
converts a array of values to a unit
set the value of the
rotates the around the current position
set the value to the given value
converts a temperature unit to a unit
sets the value of the second field
returns the tilt unit
returns the reading sensor reading index
get the reading limit for a given color
returns the calibration data for the given color
calculates the offset of the
loads the data from the file
returns the value of the light read
saves the current file to disk
get the temperature in
sets the unit unit
sets the tilt unit
returns firmware version
returns the version of the menu item
returns the speed of the
returns true if the data is available
set the value of dynamic offset
sets the speed of the motor
sends a message to the server
sends a message to the server
starts a program
add a reading to the current time
this method sets the to the next
opens a file info object
adds a listener to the listener list
stop the timer
called when the is stopped
acquires the next lock
returns the number of
resets the count
disconnects the mote from the socket
sets the acceleration
starts the server
write the byte array to the buffer
uploads a file to the nxt
reads a file into the buffer
sets the threshold
returns the register register index
returns the offset of the last character in the buffer
this method is called by the to process the data channel
returns the current turn rate
this method will be called when the scheduler is being monitored
sets the port
returns the port
returns the preferred power consumption
getter for property allowed to
returns the vertical accuracy of the
returns the horizontal accuracy of the
returns the preferred response time for the response
returns whether the speed provider requires the course required
returns whether altitude is required
returns the address required attribute
sets the desired horizontal accuracy
sets the accuracy of the
sets the preferred response time for this request
get the offset
sets the preferred power consumption
starts the
updates the data
returns the turn rate of the given radius
the arc angle
prints an error message
this method will be called when the user is fatal down
set the default program to use for this
set the move delay
sets the volume of nxt
adds a feature to the feature detector
calculate the travel of the travel
sets the maximum distance in the to the given random move
sets the volume of the given player
sets the flag that determines whether the move start
calculate the rotation of the
sets the auto run flag
set the flag to send a move stop to the server
gets the volume of the nxt
returns the volume of the keyboard
sends a message to the server
returns true if the socket is automatically read automatically
called when the user has stopped transmitting the specified
set the travel speed for this
get the firmware from the server
adds a waypoint to the pastry printer
called when a waypoint is pressed
completes the sequence
get the firmware from the server
this method will be called when a new job is died
called when the is generated
returns the data of the data
send data to the server
get the sleep time of the nxt
returns the default program to be used for the
set the sleep time
clears the event
the system to the system
suspends the program
resumes the program
resumes the system thread
sets the event options
returns the input stream for this
sets the debug mode
returns the output stream
returns an input stream for the given input stream
returns an output stream for the given
start the timer
the server socket is listening on the socket
reads the bytes from the input stream
this method is used to write a socket to the socket
writes len bytes from the buffer into the buffer
sends a string message to the server
close the socket
wait for a thread to wait until the thread is started
returns the firmware version of this object
the
set the
returns the current index

this method generates a string from the socket
returns the
returns the ip address of the server
close the stream
pings the host
marks the current position in the stream
get the decrypted password for the given passphrase
description of the method
returns true if the mark is supported
returns the for the command
read the next byte from the stream
read a new element from the stream
creates a new ad hoc
read a buffer from the stream
returns the ip address of the
reconnect to the server
resets the stream to the initial state
close all resources
returns the status of the connection
this method is used to close the connection to the given address
returns true if the motor is moving
reverse the reverse motor
close the stream
get the port number for the given port
returns the status to a string
flushes the stream
sends a message to the server
stop the connecting server
write an array of bytes
set the angle of the angle
sets the pulse width
disconnect from the disconnection
write a portion of an array of bytes
rotates the around the given angle
converts a to a string
sets the speed of the servo
returns the speed of the enemy
write the specified byte to the output stream
returns the speed of the motor servo
returns the maximum speed of the current servo
sets the threshold
sets the acceleration
sets the motor flag
this method decodes a mask to store the given address
returns the value of the resolution
returns a point representing the point in the screen
set the low level to the default acceleration
set gateway address
get the last state of the button
reads the buttons
converts a to a string
returns true if any down button is down
disables the echo timer
returns true if the button is down
converts a to a string
returns the status of the
set the value of the send flag
returns the first letter of the specified name
this method sets the name of the
read bytes from the buffer
returns the number of in the view
returns the current time
returns the satellite at the specified index
gets the value of the tracked property
returns the quality of the fix
returns the value of the code compass degrees code property
returns the value of the true course limit
read a string from the buffer
method to be called when a string is about to be displayed
returns the time stamp of the
read the fully qualified java class from the bytes
clears the buffer
close the stream
returns the next string in the current line
checks if the given string is a digit
method to be called when a string is about to be displayed
sets the datatype of the given datatype
close the socket
sends a message to the server
this method is called when the starts
sets the freeze flag
starts caching of the cache
reads the next byte of data from this socket
read a new file from the input stream
registers a new log column
this method is used to signal the service to the
sets the delay of the
sets the datatype of the data
returns the delay in the
close the socket
the
flushes the buffer
write an array of bytes
writes a single byte to the output stream
returns the next element in the iteration
returns true if the iterator has more elements
closes the
opens a connection to the socket
returns the local name of this ejen local event
close the underlying stream
returns the text of the text
returns the number of attributes
returns the name of the attribute referring to the given index
returns the value of the attribute with the specified qname and namespace
returns the value of the attribute at the specified index
returns the type of the attribute
returns the event type
returns the length of the text
skips whitespace characters and returns the next element
returns true if the text contains the text
returns the location of the line
pushes an object onto the stack
returns true if this space is white space
returns true if the element is a start element
returns the end element of the end
returns true if the event is a character
returns the text start offset of the text
flush the stream
flush the stream
close the stream
print a string
closes the underlying file
called when the node is about to start
update velocity of the given velocity
show the header
this method is called when the file is loaded
connect to the server
this method is called when the user submits the server
connect to the server
called when the node is started
this method is used to determine if the channel info is already
this method is called when a socket server is received
this method is used to wrap the connection to the socket
reads the
this method is called when the server is closed
returns the linear velocity of this particle
close the connection
resets the device to the given device
deletes a file from the database
returns the value at the given row and column
sets the value of the cell at the specified location
returns true if the cell at the specified row and column
fetches all the from the given synthesizer
returns the file info object
returns the number of files in the list
returns the row of the file
returns the data of the data
sends data to the mote
sends data to the cockpit
returns a string representation of the given constant
write the byte array to the file
tests the
tests the computation of the
tests the computation of the
creates the settings panel
returns firmware version
this method is called when the user presses the
runs a test case
returns the test
returns the exception
the
informs the listener that the given test
sets the current value to the current value
sets the axis
called when the test is started
calculate the offset scale of the
returns a sample size
sets the running heartbeat
resumes the thread
sets the refresh rate
returns the fetch data from the current fetch data source
returns a string representation of this object
returns true if the data is available
returns the statistic
set the sample rate
returns the sample rate
set the sample size
sets the statistic for the statistic
sets the range of the range
executes the test suite
returns the string representation of this message
run the test
test method for
run the test
run the test
run the test
run the test
returns the time as a string
run the test
run the test
run the test
run the test
run the test
tests the long valued property
create the files panel
write the specified byte array to the socket
reads the file from the given file
update the sensor
called whenever the value of the selection changes
converts a byte array to a string
deletes all files in the database
upload a file to the file
upload the file to the user
download the file
runs the file
sets the sensor sensor
plays the sound file
format the software
log a message to the console
this method is called when the user is connected to a new
set the status message
append a string to the console
sets the tracing phone value for this
sets the tracing mobile value for this
sets the more mobile value for this
sets the private mobile value for this
sets the value for this curriculum1
test of get subject method of class
test of get body method of class
test of get to recipient method of class
test of get cc recipient method of class
getter for property
sets the
test of get bcc recipient method of class
test method for
called when the robot is scanned
called when the hit by bullet
returns the reference to the message
sets the reference to the reference
returns the messages
sets the messages
returns the
returns the mailing list
sets the mailing list
runs the current thread
returns the
returns the set of system messages
sets the current thread to use
returns the set of children
sets the children
set the current configuration
adds a new effect to the queue
removes the active effect from the list
returns an output stream to the active state
sets the output bytes
sets the playlist
returns the playlist
returns the tags
sets the tags attribute of the tag request object
sets the tags attribute of the tags object
sets the songs
requests the data to be refreshed
returns the library
initialize the object
returns the current page number
the search method
adds a component to the container
sets the current page
sets the active component
returns the active component
sets the folders only
adds a new search term
this method is used to handle the events
start the thread
sets the daemon flag
set the business logic
destroy the lifecycle
returns the business logic
returns the interval between polling and
returns true if the job is done
called after the thread has completed
called when the interactions thread is completed
ends the transaction
returns the web web transaction manager
adds an attribute to the list
returns the code
returns the code
returns the code code
returns the name of the native native file
initializes the entity manager
checks if the user has a
get the by its id
sorts the persons by email addresses
returns the value of the user status
sorts the sorting of the given direction
returns the user gender
sets the user to the given user
returns the default language language language
associate a language with the given user
returns the requesting user requesting the given user
returns the requesting requesting user
sets the ordering of the request
sets the response status response
returns the location of the
adds a user to the list of user to login to the
insert into db
get the by its id
sets the location of the current location
returns the review as a
gets the reviews list of reviews
returns the pagination from the request
returns the ordering of the request
returns the value of the code data type code property
adds a user to the group
returns the review status
sets the response status response
checks if the user is to a permission group
sets the status of the review
returns the data type
sets the data type
sets the date of the post
returns the data id
sets the response status response
sets the data id
sets the rating
gets the value of the data author id property
removes all user languages
set the data author id
returns the requesting user requesting the user
sets the response status response
returns the language of the given language
sets the default language to non default language
returns the pagination from the given pagination
get the requesting user
get the ordering of the request
returns the language code for this language
sets the response status response
sets the language code to use for the given language
sets the response status response
returns the node with the given id
returns the node with the given name
adds a new node to the list of
returns the
sets the
updates the nodes position list in the list
returns the
sets the
returns the language of the language
sets the author id
returns the id of the classification node that this node represents
sets the depth of the current node
returns the tree node
returns the requesting user
creates a node node
adds a map of nodes to the map
sets the response status response
returns the tree node
returns the
returns the code classification code node that the
returns the breadcrumb node
returns the node with the given name
returns the requesting user requesting the requesting user
sets the response status of the response
gets the by id
returns the with the given id
insert a new user into database
deletes the expired sessions
called when a node is not already found
check if the session has expired or not
returns the user by id
sets the response status of the response
returns the user
returns the user session
sets the session id
sets the user id
sets the date creation
sets the date of the last request
sets the classification nodes ids to the given request
get a page by its number
returns the article of the article
checks if the article is common to the given
get the object for the review id
returns the current article
checks whether the given user may be restricted to the given
returns the article id
gets the classification node id
sets the article id
set the author id
returns the page number
sets the article number
sets the page number
returns the article id
adds a new node to the list of articles
returns the id of the classification node that this node represents
adds a new article to the list
add a page to the article
returns the page number
returns the number of pages
returns the article id
sets the number of pages to use for the number of pages
add a translation to the article
returns the page number
sets the status
get the requesting user
sets the response status response
returns the article translation
sets the article translation
sets the title
sets the summary
adds article to the list of article
returns the pagination from the request
returns the ordering of the request
sets the response status response
increase the type of the entity
update the state of the
counts the number of properties
checks if the given is valid
returns true if the properties of the given type is a
description of the method
adds a new item to the list
returns true if this is an alias
attaches the list of dependencies to the list
returns the construction stage of this construction
builds the dependency relationships
this method is responsible for creating a prototype
returns the constructor for the given constructor
find a setter for a field
find a field for a given field
returns the class of the alias
reports an error to the dependency
creates the edges for this epc
returns the data root of this object
parses the data type from the given data object
returns the next character in the current character
sets the data
sets the type of this object
sets the charset to use for the given charset
sets the null name
returns the next character in the buffer
make the same as the same class
gets the value of the property
returns the base object code
get the parameter value
returns the page to use for the plug ins page
returns the
returns the type of this
returns the type of the item
sets the class
sets the codebase code
sets the source
sets the type of the
returns the information about the current info
sets the information about the
sets the information about the current render
returns the model element of the model element
this method initializes j text field
this method initializes columns
this method initializes rows
this method initializes matching rows
this method initializes page numbers
this method initializes top positions
this method initializes top left
this method initializes top center
this method initializes top right
this method initializes bottom bottom position
this method initializes positions button group
this method initializes bottom left
this method initializes bottom center
this method initializes bottom right
this method initializes j button
this method initializes start
this method initializes close
this method initializes this
this method initializes output
this method initializes output scroll pane
returns the first row in the container
inserts a component at the specified row
checks if the given row is at the given position
sets the constraints for the given component
returns the nth layout constraints
this method is used to deal with the
returns the source element
parses the given text and stores it into the
compares the contents of this list with another list
adds a listener to the list of listeners
parses the given text and returns the bag constraints
remove a change listener
notifies all listeners that the name changes
sets the text to the data model
sets the grid bag constraints
sets the skill skill
sets the skill group
perform the click on the screen
returns the element with the given name
returns the text color of the top of the color
this method creates a transferable to describe the transferable
returns the layout properties for this
drops the
adds a listener to the list of listeners
rebuilds the grid
set the name of the group
removes all occurrences of the element from the list
performs general testing
make exclusive group
returns the title color of the
perform the action
performs the action
performs the toggle button
adds a listener to the list of listeners
remove a change listener
returns the name of the skill at the given point
reverts to the list
returns the index of the skill in the list
saves the list to the
adds a listener to the list of listeners
deletes the selected
returns recall of the last directory
sets the last directory to the specified file
creates a new
adds a listener to the listener list
returns the screen attributes at the given location
this method is called when the user selects a page
stores the preferences to the preferences
initializes the menu
returns the value of the specified stat
returns the total number of all the values in this queue
initializes the statistics
initializes the skill
initializes the statistics for the
sets the stat
initializes the skills
sets the of the
sets the value of the field
initializes the blank and all the values of the
adds a new child to the skill
adds a skill to the skill
adds a list of skills to the skill
set the xml content of the xml document
adds a skill to the skill
checks if the skill has a skill
returns the index of the skill
remove a skill from the skill
returns the skill child with the given name
returns the skill of the skill
adds a skill to the group
the current stats and the statistical statistics
this method is used to generate the random number of fuel the
validate the value
remove a skill from a group
adjusts the value of the given value
initialises the statistics
resets the counters
returns the stat for the given key
returns the xml representation of the object
set the object to be
returns the total number of points in the
returns the display string for this display
randomizes the skills
adds a listener to the list of stat activations
removes a stat and sends a stat to the listeners
returns the name of the general game room
p a code stat state code object
returns true if the given group name exists
creates a jbutton for the given action
adds a property change listener to the listener list
the skill
remove a property change listener
returns the dice string
returns the value of the field
clears all statistics
returns true if the given name is in the group
react on a state changed event
returns the skill group whose name matches the specified name
initialize the skill
this method is used to ensure that the node is not already
add a skill change listener to the list
remove a skill change listener
called when the skill changes
returns the skill child with the given name
sets the editable
this method returns the number of points in a given skill
find a skill by name
returns the skill group with the given name
returns the xml element
returns the dice of the dice
returns the points in the given skill
get the dice of the child
this method returns a string containing the error message
returns true if the given string is contained in this list
add a skill listener to this skill
returns the xml key for the xml file
remove a skill listener
returns the total cost of the
set the child points of a child
replaces the trait at the given trait
returns true if this trait contains a trait
returns the number of points in the given child
called when the caret position is updated
returns the xml element
this method is called when the child is shifted
returns the number of points in this node
returns the number of child elements in this code code
returns the skill attribute
adjust the points of the points
set the type of the property
checks if the skill matches the skill
returns the total number of points in the polyline
checks if the given skill group matches the one
emits the data element
returns the element of the
returns the minimum value of the receiver
sets the document to be edited
sorts the skills in the skills
the points of the points
raise the current value of the points
pops up the first time run in the directory
builds a tabular data object from the xml element
sorts the groups in the group
this method will show the dialog
returns the default directory for the current directory
returns the local file to be used for the given resource
adds a new name to the list of points
extracts the resource from the given resource
initializes the gui
applies the focus to the component
returns the document resource
sets the model
writes a document to the given document
refreshes the text in the text area
this method enables to send the buttons to the group
returns the skill skill for the given id
sets the dice action
randomizes the current settings
returns true if this asset is already in the group
sets the clear action to the given action
clears the current text
create the gui and show it
returns the control with the given key
returns the statistical information for the given key
checks if the trait has a trait
returns true if the specified number of characters are in the
this method initializes j jtool bar bar
refresh the panels
repaint the child panels
this method gets called when a bound property is changed
resizes the panel
add a new asset to this asset
returns the title of the panel
the skill
checks if the actions are enabled
adds a data to this
description of the method
sets whether the skill is enabled
move the mouse to the screen
updates the gender display
sets the skill data
sets whether the window is allowed to create a raised indeterminate
removes the given from this partys collection of
sets the number of points in the skill
change the selected level
returns the summary of the summary
returns the number of equipment in the equipment
returns the weight of the equipment in meters
removes the asset from the
refreshes the details panel
enables the add button
builds the panel
this method initializes the panel
this method initializes j
removes all selected items from the list
adds the selected items to the list
this method initializes the panel
this method initializes j
adds a new index to the list
removes the selected item from the list
this method is called when the mouse is clicked
returns true if the given mouse point is in the same state
notifies all listeners that the change of the
set the label icons for the icon
checks if the actions are enabled
returns the value of the specified point
sets the icon to be removed from the icon
adds a listener to the list of listeners
remove a listener
sets the value of the spinner
this method is called when the is set
this method is called when the is about to be
redraws the label and all components
returns the component name for the given value
sets the number of points in the array
sets the colors to unselected
returns the money string for this
sets the renderer to be used when rendering the cell
adds a listener to the list of listeners
recalculate the average statistics of the current points
sets the tooltip for the mouse cursor
show the tooltip
returns the zero based index of the selected
test of method of class
returns the current selection
writes the ascii ascii file to the output stream
creates a new test model
tests stats stats
test method for
sets the action to clear the clear action
tests the weighting method
test of weighting method
test of get value method of class
test of set value method
saves the current file
tests the of the
load the file
test method for
test the
test method for
test construct with incorrect values
tests the get set valid method
test method for
test method stat
test the of the
test of is maximum method of class step
test method for
tests the listener method
test creation of a single node
tests the change of the
test fire fire change event
test
test the skill
test the add method
initializes the menu
test method for
test of asset list type method of class de
test of hero method
this method is called when the weapon is damage
test of method of class org
test method for
test method for
test that unknown type is unknown
tests the weight of the weights
tests the correct functionality of the current stats
test method for
tests the covers of the icon
tests the modifier mod
test of get skill method of class smart
test method for
test method for
test of get damage method of class pl
registers the given action
test method for
test method for
test of get assets method of class
test method for
test method for
test method for
test for skill
test method for
test method for
test method for
test method for
test method for
test method for
test method for
tests the clear method
tests that the state of the state throws illegal state exception
returns the name of the current character
test that the state throws illegal state exception
tests removing of the values from the list
tests that all the states of the state code illegal state throws
test method for
test method for
test that the state throws an illegal state exception
places the string representation of the given buffer to the given buffer
compares the specified object with this list for the
test method for
test the retain all collection
tests that a is set to the group
test method for
test remove interval at index
generate random generator
test for method get as text
compare two arrays
test method for
tests the contents of the collection
initializes the frame
find the panel with the given name
find the panel in the container
find a component in the container
test of clear method of the members of the
find the component in the container
test method for
find the text field
finds the text field in the container
checks if the is
find a button with the given name
this method is called when the user agent is a life
find a button in the container
tests the functionality of the mixing of stat points
compare two arrays
find radio button
find the combo box with the specified name
find the tabbed pane with the given name
test of method of class
test method for
finds the scroll pane for the given name
find a list in the container
finds the jlist with the specified name
tests the life of the life of the
finds the scroll pane in the specified container
tests the of a
test of clear person method of class
test method for
test the skill list equipment
description of the method
test method for
test method for
scroll to the components of the given child
tests the starting skill point for a profile
a simple test for the info that the view has been selected
test method for
test of the current money
test method for
test of weapons method
test of weapons method
test method for
returns the max max
test a number of equipment count
tests the method
returns the max skill value
test a negative totals with a negative number
checks if the given has a trait
returns the starting skill points
adds a property change listener to the listener list
remove a property change listener
add a skill change listener to the skill
remove a skill change listener
this method is called when the user has been added to the
checks if the has been removed
returns the hit for the given skill
returns the template
checks if the equipment can be moved
changes the name of the mobile station
sets the status label
removes the duplicates from the list
checks if the given string is already ignored
parses the given text into a string
decodes the special characters text
returns the text of the
creates the history file
loads the history file
exclude files from the list
returns the file list that matches the pattern
run the command
emit the sound beep
description of the method
executes the script
executes a string command
returns the static field name for the given field
returns the static value of the method specified by the method name
copies a file into the target directory
the method code parse javadocs code
get a list of files
the method code code locator code
install a zip file
this method is called when the class is parsed
the test runner
creates a directory
deletes all files from the given file list
this method is used to open the database connection
this method is used to open the
opens the database
open the database
returns the x coordinate of the point
returns the current value of the y coordinate
returns the x2 coordinate of the point
open a table of the database
returns the value of the code code property
closes the database
sets the bounding box for this rectangle
retrieves the version of this code result set code object
sets the box
returns the id of the
sets the bounding box for the bounding box
creates a new entry
description of the method
sets the box
returns the distance in pixels of the framing rectangle
this method is used to generate the sql for the database
returns the distance between the two points
description of the method
creates a new entry
retrieves the version of the database
creates a new entry in the given task
inserts a string into the database
deletes the given from the database
creates a new entry in the given time period
convert a byte array into a byte array
store the alert
removes the alert
this method is called when the user presses the
show the notification
this method is used to close the current entry
closes the given task
close the entry
closes the given task
delete the ar entry with the given row id
return a cursor over the list of all the time entries in
return a cursor positioned at the cursor cursor
return a cursor positioned at the cursor cursor
the current time
returns the last entry in the last query
return a cursor that can be used to retrieve the details
returns the last time the event was last incremented
return a cursor that matches the day entry
returns a cursor that matches the time of the time
return a cursor for the day summary
get the current day entry
return a cursor to the current date
creates a task
return a cursor over the list of all the tasks in the
return a cursor over the list of all disabled
return a cursor positioned at the that matches the given row
this method returns the first key in the database
this method is used to generate the sql query for a given
renames a task to the database assigning the name
a task to be cancelled
marks a task as completed
activates the task
marks a task as specified by the id
refreshes the list of files
sets the username
sets the password
get web user from database
sets the upload complete value for this weather parameters
returns true if the user is a web user
returns the folders of the given id
returns the cms folder bean with the given id
starts the login manager
this method is called when the plug in is stopped
compares this to another object
validates the username and password
disposes the resources
starts the tracker
this method is called when the plug in is stopped
returns the edit window for the given id
select a plugin
starts the tracker
returns the plugin with the given name
this method is called when the plug in is stopped
adds a plugin to the specified plugin
removes the specified plugin
gets the text area
starts the service
this method is called when the plug in is stopped
returns the number of the panel
returns the edit window
initializes the default values of the preferences
this method is called upon plug in activation
sets the default values of the preferences
this method is called upon plug in activation
this method is called upon plug in activation
returns a string representation of the given key
formats a key
formats a key value pair using the localized format
format the given key and return its string representation
returns the value of the specified key
this method is called upon plug in activation
this method is called when the plug in is stopped
update the account
returns the label at the specified index
returns the value of the option at the specified index
returns the number of elements in this basket
returns the total quantity of all items in the cart
returns the items
returns the item at the specified index
clears cart cart
add an item to the shopping cart
removes the element at the specified
removes an item from the cart
updates the inventory of the inventory
returns the background color of the header
returns the annotation for the method specified by the method
returns the entity manager factory
adds a module to the module
returns the injector
returns the temporal type of this object
returns the session
add a tag to the tag
returns the inner tag of the given tag
reads the next character from the input stream
returns the end tag required attribute of the ticket log object
returns the next token
returns true if the given attribute is allowed to be
removes the inner tag with the given name
returns the value of the feature
sets the end tag required attribute of the harvester admin form object
builds an attribute from a string
returns the value of the property
loads the object by its id
removes the element at the specified index
sets the state of the feature
sets the value of a property
reads the next character from the input stream
gets the acl id
creates a new entry
execute the command
sets the action method
this method is called after the forum
sets the acl id
adds a permission to this bit set
prepares the transaction for the current transaction
updates the model
this method saves the users password to the database
sets the site description
removes the specified permission value from the bit set
sets the permission
sets the site name
sets the status
sets the entries to be used for the entries
returns the text of the given text
sets the avatar
asserts that the object is a valid dao
set the roles of the user
sets the bb code enabled flag
creates a topic
creates a new post
creates a new setting
creates a new role
creates a forum
sets the creator ip address
sets the flag indicating whether the topic is to be used
sets the enabled
sets the flag to indicate whether or not the user has to
sets whether to create post
sets the html enabled attribute of the object
set the creator username
sets the flag indicating whether or not the topic is granted
sets the first post
sets the flag indicating whether or not to create the approval
sets the signature enabled
sets the permissions permissions
sets the post count
sets whether or not the delete button is not allowed to be
sets the last post
sets whether or not the delete topic is a delete topic
sets the date posted
sets the topic count
sets the last post username
sets the last viewed viewed viewed date
sets the flag to indicate whether or not the user can edit
sets the flag indicating whether or not the topic is subscribed
returns the distance to the earth
returns the remaining capital of the current game
returns the satellite position of the satellite
returns the number of instruction counter
returns the score of the
sets the problem
sets the status of this object
sets the delta of the y axis
sets the velocity impulse to use
returns the flag that indicates whether the mission failed
returns the vm to use for this vm
returns the vm
returns the radius of the
returns the gravity value for the weighted speed
returns the root cause of the exception
returns the message
returns the exception that caused this exception
returns the character offset
returns the transport transport string
returns the server transaction
returns the client transaction
returns true if the server is a server transaction
compares this transaction state manager to the specified object
returns the hash code for this transaction
returns the dialog
returns the timeout
creates a header factory
sets the path to the specified path
reset the factory
returns the transaction
returns the request
returns the value of the code dialog state code property
ensures that during deserialization of the object
returns a string representation of this object
returns the client transaction
returns the response
returns the object associated with the timeout
returns the timeout value
ensures that during deserialization of the object
returns a string representation of this object
this method is not supported
sets whether the time is typed
sets whether this is
returns the version of this entry
set the version of the version
returns the origin of this instance
sets the origin of this object
returns the session name
sets the session name
returns the info of this info
sets the information about the information about the information about the information
returns the uri of the resource
sets the media field
sets the information field for the information field
set the uri of the remote device
set the connection field
sets the stop time
returns the start time of the object
adds a bandwidth field to the bandwidth
returns the time of the first time this thread is started
sets the stop time
set the start time
returns true if this is a time
sets the key field
returns true if the time is zero
sets the time to zero
encodes the field to a string
set the list of attribute fields for this opb message
returns the media object
sets the
set the value of addr type
set the address of the connection
encodes the encoded string
returns the address of the connection
returns the address type of the
returns the connection to the database
returns the network type
set the address of the callee
sets the type of the sdp
sets the network type
sets the media object
sets the connection to the specified connection
returns the information about the information about the information
sets the information about the transfer
returns the value of the name property
get the bandwidth of the given bandwidth
set the value of the sdp
encodes the string and returns the string representation of the
returns the connection to the database
returns a list iterator of the values of the list in the
adds a to the
prints out the content of the warning
sets the bandwidth of the agent
sets the connection to the specified connection
dump the debug message
compares this object with the specified object for equality
returns true if the message matches the given one
removes the bandwidth from the bandwidth field
encodes the zone
set the zone adjustment
returns the key
get the bandwidth of the given bandwidth
sets the
set the bandwidth
encodes the bandwidth message
returns the type of the sdp
set the bandwidth of the connection
sets the key to the key
sets the type of the sdp
returns the value of the bandwidth property
set the bandwidth value
set the user name
sets the host name
removes the bandwidth from the bandwidth
returns the name of the host
sets the protocol version
returns the value of the specified attribute
returns the version number of this communicator
sets the version of the jdwp packet
encodes the protocol version
gets the key
returns the username
returns the current number of packets that can be used to
returns the current number of packets that can be used to
gets the value of the property
remove an attribute from the list
sets the key to the field
gets the value of the property
returns the host
sets the id
sets the version
returns the attributes of the node
sets the
set an attribute in the list
set the address of the host
sets the username
returns the session id
sets the current session id
returns the current session version
set the http version of the session
returns the value of the attribute specified by the name
returns the address of the host
set the address of the remote host
sets an attribute in the list
sets the type of the sdp
sets the network type
returns the string representation of the object
remove an attribute from the list
sets the media
sets the
sets the proto
sets the formats
returns the media type
sets the media type
returns the port number of the media
returns the offset of the current time
set the port of the device
sets the offset
sets the sign of the sign
returns the number of port the is in
this method is used to encode the entire queue
set the number of port to connect to the server
returns the character type of the wrapped
returns the protocol of the protocol
sets the protocol to use for this protocol
sets the type of this element
returns a vector of media formats
sets the media formats
encode the encoded string
returns the method name
sets the value of the property
returns true if the key is available
encode the encoded image as a string
returns the key of the data source
sets the key of the given key
encodes the field information
returns the value of the data
set the session name
sets the value of the property
returns the value of the sdp
set the attribute value
set the value of the sdp
encodes the field
encodes the name and the current session to the
sets the time to live
returns the name of the attribute
sets the email address
encode the field
sets the name of the
encodes the encoded address
returns true if the value of the attribute has a value
returns the value of the address property
sets the value of the strong strong strong strong strong strong strong
returns the value of the attribute
set the value of the property
returns the repeat interval of the current repeat interval
encodes the url to the string
sets the repeat interval
returns the number of active active objects
sets the email
encodes the string and returns the string representation of the
sets the active duration of the active audio
set the offset array
returns the time in milliseconds
sets the time field
returns the repeat times of the repeat
adds a repeat field to the list
returns a string representation of the current value
parses the current name field and returns it
parses the and returns the
parses the current time field and returns the result
returns the sign of the string
stop the timer
returns the
closes all connections
returns the host name of the jdwp packet
returns the port number of the socket
returns true if the log level is already in the log level
returns the address of the host
returns the host port
returns true if the log file is a logging file
returns the host port
returns the header of the mailbox
set the name of the log file
returns the host port
returns the message processor
logs a message to the log file
trace a message level message
returns true if the current transaction is a client
prints the specified string followed by the line
set the trace level
returns the trace level
this method is used to set the state to the given
sets the aux info
routes request from the to the specified
sets the remote party
starts the thread
stops the thread
returns the transport name
returns the sip stack
returns the maximum size of the message
returns true if the message queue is in use
sets the request interface
returns true if the message is a reliable message
close the connection
returns the message channel associated with this channel
returns the transport name
returns the host address of the peer
returns true if the transaction is mapped to the
sends a message to the server
deletes the current
prints the debug information
returns the key for this peer
gets the value of the via host property
returns the ack seen
returns the port number of the connection
returns the last ack
returns the first transaction
returns the last response
returns an iterator set of the route list
re initialize the queue
sets the original request
disables logging of the log file
sets the dialog id
prints the dialog to the standard output
returns the value of server
returns the real state
returns true if the dialog has been created
getter for property re invite
returns the state of the transaction
adds a method to the dialog
opens a dialog box to select a dialog box
returns the dialog id
set the transaction state
creates a new dialog
starts the timer
returns an iterator over the dialogs dialogs
sets the remote tag
remove the given dialog from the dialog
returns the last transaction
get the invite transaction
set the local sequence number
set the remote sequence number
removes a pending transaction from the transaction
increment the local sequence number
the
remove a from the table
disable alert
gets the original local sequence number
sets the ack flag
returns true if the ack is a ack
adds a transaction to the database
sets the local tag of the stack
remove a transaction from the cache
set the invite transaction
returns the transport name
add a pending transaction to the transaction
gets the value of the network layer property
sets the call id
returns true if logging is enabled
returns the log writer
returns the server log
returns the key for this peer
returns the maximum message size in bytes
returns true if the current request is secure
set the thread pool size
sets the maximum number of connections to allocate
sets the response interface
returns the channel
returns the next hop
sets the stack name
creates a server header for the stack
this method is used to determine if the is crossed
returns the host address
sets the router
returns the router of the given request
resend the message received from the message
sets the hostname port
returns true if this object is still alive
returns the method
sets the host
returns the addressing address of the connection
removes a message processor
gets the value of the via host property
stop the timer
returns the outgoing header
sets the message factory
set the transaction state
checks if the event is a event
starts the timer
returns the address resolver
sets the address resolver
returns the sip provider provider implementation
sets the hop
returns the original request
returns the hop
returns the original request
getter for property transport
returns the header of the mailbox
returns the message channel
returns the sent by
starts the server
sets the current state of the transaction
returns the maximum number of bytes that can be used to display
returns the state of the transaction
starts the server
sends a message to the server
refresh the
returns the transport name
returns the host address of the jdwp packet
returns the port number of the socket
returns the peer name
returns the peer address of the peer
compares this code code object to another object
returns the header of the mailbox
sends a message to the socket
adds a new listener to the event list
removes the event listener
returns the host name
returns the port number
returns true if the server transaction is a server transaction
returns the timer
sets the assigned attribute of the ticket log object
returns the host of the host
returns the response
stop the server
getter for property transaction id
returns the hash code for this code transaction code
returns the contact header
returns the port number
this method is deprecated and is called
close the channel
re initialize the event
returns the application data
returns the host address
returns true if the filter is active
sets the peer to which this message is
returns the sip provider for this locator
stops the thread
set the state of the transport
acquires the semaphore
release the current sip semaphore
returns the sip listener for this sip
removes all listening points for the given
sets the sip listener for the sip server
encode the body of this request
sets the date
set the
returns the date of the
encode the body of the body
returns the call id
gets the call
set the call id
set the call identifier
sets the indentation level
returns the number of the current open indentation
returns a list iterator of all the methods
increment the indentation level
sets the methods list
decrements the indentation
returns the indentation of the current character
encodes the local url
compares this call identifier to another
gets the local id
sets the local id
set the local host name
this method is used to encode the string representation of the
encodes the body of the body
sets the option tag
returns the option tag
encode the body as a string
returns the disposition type
returns the code code property
compares this route list to another route list
sets the code code property
encode the body as a string
returns the content disposition header
encode the body of this body
returns the encoding
set the parameter
sets the organization
returns the content length of the content
encodes the body content
returns the content encoding
encode the body content
sets the encoding to be used for the given encoding
returns true if the receiver matches this matcher
returns the cause of this exception
sets the cause of this exception to the given cause
encode the body of this body
set the text of this object
returns the text
set the code for this code code
sets the agent host
accepts a new accept language header
encode the body as a string
sets the text of this node
returns the authentication info
this method is used to encode the body of this object
returns true if the delay has delay time
returns the parameter name
returns the next nonce
returns the number of nonce instances
returns the parameter
returns the response
sets the
returns true if the content types of the list
returns true if the media type is a subtype of this media
sets the response
encode the body of this body
returns the media range
returns the content type of the media
returns the subtype of the media type
returns the parameter as a float
checks whether the parameter is set
remove the parameter from the list of
set the media type
sets the content type of the media
removes a parameter from the list
sets the challenge scheme to the challenge
sets the media range
returns the header name
sets the header name
encodes the body of this body
returns the value of the header
returns true if the header is a header
encodes the header
returns a header for the given method
returns the hash code value for this header
sets the realm
add an object to the list
gets the realm
inserts the given object at the beginning of this list
set the nonce
adds a new element to the stack
returns the nonce
sets the value of the code property code
sets the algorithm
returns the algorithm name
returns the first element in this list
returns the last element in this list
gets the parameter
returns the class of the class
returns the opaque property b description b
returns a list iterator of the elements in this list
sets the domain of this domain
returns the header list
returns the domain name
returns a list iterator of the elements in this list in proper
set the stale flag
remove the first element from the list
returns true if the parameter is stale
removes the last element from the list
set the parameter
removes the object from the list
gets the parameter
set the class of the class
prints the content of the code file code
creates a new contact header
returns the response parameter
returns the index of the first occurrence of the given object
set the response
create a new contact header
returns the username of the user
compares this code japanese code object to another
sets the username to use for the username
matches the current template against the given pattern
returns the number of elements in this collection
returns true if the header is a list
encode the body of this body
creates a new content language header with the given content
returns the maximum value of the
encode the body of this
decrements the maximum number of hops
encodes the product
adds a product token to the group
encodes the body of the body
returns the list of all the products
encode the body as a string
sets the expires value for this cache
checks if this collection contains all of the elements in the specified
returns the element at the specified position in this list
encode the body as a string
returns the value of the code body tag code property
sets the option tag
returns the index of the first occurrence of the specified element
returns the index of the last occurrence of the specified element
concatenates the current code list code to the given
concatenates two arguments
returns the first object in the list
returns the class of my class
returns the next element in the iteration
returns the next element in the list
dump the debug message
set the class of the class
returns the sequence number
encode the body as a string
creates a header for the given date
removes all the elements in this collection from the specified
set call id
returns the call id
encode body of the call
encodes the body of the entity
returns the entity tag
set the etag associated with the element
set the value of the field
encodes the message
sets the value at the specified position
sets the priority of the given string
encodes the header
set the method
this method is used to encode the body of this packet
encodes the body of the body
returns the host port
returns the display name
returns the tag of this tag
sets the subtype of this ficha matricula to the specified value
encodes the data object
set the address property
sets the tag attribute of the tag object
encode the body of this body
returns the user who is the host
returns the wild card flag
returns the hash code of the address
encode the body of this packet
returns the contact contact values
returns the expires parameter
compares the media to the specified media type
encode the body of this body
returns the parameter
set the contact list
returns the media type
set wild card flag
returns the media type subtype for this media type
set the address of the address
returns the subtype of the media type
returns the charset used to establish the
sets the content type of the media
sets the content type of the media type
sets the option tag
this method is used to encode the body of this
returns the error info
sets whether the match is a match status
set the error message to be used to create the
encodes the current message
returns the error message
returns the sip version
returns the body of the body
returns the reason phrase
set the subject of the message
sets the sip version
returns a list iterator of all the methods
sets the methods list
returns the version major version of this version
returns the minor version of the version
encode the body as a string
returns the language range
returns true if the is a
remove the parameter from the
sets the language range
sets the parameter to the given value
returns the accept language
dump the current state of the debug manager
sets the accept language
encodes the current version
set the value of version
encode the body as a string
returns the uri of the alert
returns the value of the parameter with the given name
encode the body as a string
removes the comment
removes the duration from the timer
set the value of a parameter
sets the value of the parameter
encode the body as a string
returns the number of sequences in this sequence
sets the value of a parameter
returns the c seq number
returns the number of
sets the value of a parameter
sets the value of the parameter with the given name
checks if the parameter name exists
sets the address of the assistant
removes the parameters from the parameters
returns a clone of this address
indicates whether some other object is equal to this one
encode the current encoding
returns the parameters of the parameter
gets the purpose
sets the purpose of this object
sets the info
sets the parameters of this object
returns the value of the header
sets the parameters
encodes the header and returns the header
encode the body of this object
this method is used to encode the body of this packet
returns the parameter value as an int
this method is used to encode the body of this packet
returns the parameter value as a int
sets the access type of this object
returns the parameter value of the parameter with the given parameter name
returns the parameter value as a long
parses the given url
returns the value of parameter name
returns the value of the parameter with the specified name
sets the value of the field
encode the body of this tag
returns the language tag
returns the locale of the current language
sets the language
sets the type of the event
set the event id
gets the event id
this method is used to encode the body of this object
this method is used to encode the body of this packet
gets the value of the property
returns the value of the month property
encode the protocol
returns the protocol name
sets the protocol name
sets the protocol version
set the transport
set the etag associated with the element
sets the java java script to use to derive the month
sets the sip version of the sip server
encodes the current object and return its string representation
set the day of the specified day
sets the year
returns the version major version of this version
compares two request objects for equality
set the hour
compares this code japanese code map code to another
sets the minute
encodes the body of the body
set the second value
sets the sequence number
returns the delta seconds
encode the body of this request
returns the host port
returns the display name of the receiver which is used to display
returns the tag of this parameter
encodes the request
sets the tag attribute of the tag handler object
returns the domain of the domain
returns the host ip address
returns the uri of the service
returns the opaque string
encode the body of this
returns the algorithm
returns the stale url for the current request
returns the signature of the signature
returns the protocol version of the protocol
returns the signed value for the signed value
returns the sent protocol
returns the response string
returns the realm
returns the sent by
returns the value of the parameter specified by name
returns the hop for this host
gets the value of the params property
removes a parameter from the request
returns true if the port has a port
add a parameter to the list
creates a new record route header
checks if the comment has a comment
set the authentication parameters
removes the port
sets the expires value for this cache
sets the retry after
sets the protocol version
returns the retry after
set the host to which this host
set the reason code for this code code
sets the protocol to use for this protocol
sets the state of the
creates a reply to header
encodes the body and returns the content of the
sets the sent by host port
sets the type of the event
encodes the body of this event
encode the body
sets the option tag
returns the host name of the host
returns the credentials
sets the credentials
sets the parameter to the
returns the port number of the server
returns the value of the code code parameter
returns the transport protocol name
set the transport
returns the key for this connection
sets the sip provider
removes the sip provider
returns the protocol of the protocol
returns a clone of this code code
returns the port number of the socket
sets the protocol to use for this protocol
returns the message transport
returns the provider
sets the time to the next ttl
gets the parameter
set the hostname to the given host
creates a new route header
gets the received parameter
set the received parameter
encodes the content of the request to a string
gets the branch attribute of the object
set the branch of the branch
set the status code of the status code
merge the given object into this entrys content
sets the reason phrase
returns the reason phrase of the phrase
returns true if the response status code is 500
dump the debug message
compares this object with another
match the object against the given object
attaches a header to the header
sets the header
returns the first line of the line
set the list of request headers to be used by the
creates a new error info header
creates a new refer to a refer header
returns the hash code for this object
returns true if the content has content
dump the debug message
returns the list of headers
set the default sip status
sets the default http method default
returns the header at the specified name
sets the uri of the request
returns the content type header
set the http method to be used for the request
returns the method name
returns the from header
encodes the message
returns the error info for this list
returns the contact headers
compares this object with the specified object for equality
returns the contact header
match the object against the given object
returns the destinations that are associated with this envelope
sets the list of objects to be read
returns the via headers
returns the header
checks if the message has already been handled
checks if the message has been already registered
returns the class of the list
returns the authorization header
returns the host port
returns the remote port
returns the host ip address
returns the host name
removes a parameter from the sip hub
encodes the header
returns the address type
creates a new http request line object
sets the address type
sets the display name of the portlet
set the value related to the column
returns the hash code of this address
sets the maximum value of the sif forwards to be preload to
compares this address to another one
returns whether this object has a display name
remove the display name of the display
returns whether the is an incoming uri
returns the uri of this
returns a request line object from the request
returns true if the wildcard is a wildcard address
set the address of the remote host
set the user name
sets the wildcard card flag
returns the route headers
sets the scheme attribute of the elvis scheme object
gets the via host
gets the call id
this method is used to set the uri parameters
returns the port number of this envelope
clears the password
returns the authority
set the call id
returns the first line of the request
clears the
encodes the and the content disposition
set the call id
parses a version of the
returns the string representation of this object
returns the sip version of the request
returns the record route route handler
returns the value of the specified property
returns the transaction object
returns the to header
returns the method name
returns the uri of the
sets the transaction object
removes the uri parameters from the
returns the
returns the user type
returns the authority
sets the user password
returns the content length header
returns the telephone number
returns the merge id
returns the host port
returns the vnc server
returns the content of the message
returns the host name of the host
returns true if the user telephone number is a user telephone number
deletes the newest
remove the from the
remove the transport from the transport
remove a header
remove the header from the list
returns the content of the message
remove the user type from the database
deletes a parameter
removes the authority
returns the post dial field
returns the value of the property
returns true if this is a post to the
remove the method
checks if the value is a parameter
returns true if the has
returns true if this is a global
removes the post dial
removes the from the
sets the parameters
sets the authority
sets the global flag
sets the post dial
sets a new value for the specified parameter
sets the
sets the phone number
remove the user from the list
sets the content of the message
encodes the data
compares two host instances
sets the default value of the named parameter
returns the host port
returns the password of the user
returns the user info
returns the host port
returns the port number of the server
sets the authority authority
removes the port
sets the user password
sets the content of the message
sets the user name to the given user
set the host port to connect to
sets the port to connect to
set the host port
sets the user info to the user
set the host
removes the user info object from the user info object
returns the address of the
returns true if the contact is a global telephone number
sets the uri to the value of the property
sets whether the person is a global number
sets the telephone number of the assistant
sets the post dial number
sets the phone number of the telephone number
returns the phone number of the contact
returns a string representation of this object
sets the value of the code parameter code property
returns a clone of this object
sets the attribute of the object
returns the uri of the file
returns true if the uri is a sip uri
remove the content of the message
set the value of the sif host address to the given host
concatenates two given list and return the
returns the first object in the list
sets the user parameter to the given value
returns the next element in the iteration
returns the next element in the list
sets the method
compares this user info to another user info object
encodes the password
clears the password
returns an iterator of all the headers in the specified header
sets the telephone number of the contact
set the user who is logged in the user
sets the password
sets the user type
sets the telephone number for this telephone number
set the port to use for the server
returns true if the parameter is a parameter
sets the value of the property
returns the processing information for this request
sets the uri parameter
returns true if this transport has been already assigned
checks if the header contains the header with the specified name
removes a parameter from the request
sets the host port
returns whether this tag has the from header
parse the content of this object
returns an iterator over all the in this collection
returns true if this tag has to a tag
returns the parameter
returns the name of the
returns the from tag
parse the
returns the method param parameter
returns the body of the message
sets the value of the from tag
returns an iterator over the names of the parameters
sets the code parse exception listener code
returns true if the body is a body
returns the value of the transport param
returns the user name
returns the to tag
returns true if the user is secure
parse a string
add a sip header to the response
sets a header with the specified name and value
parse the host
sets the host name
adds a new unparsed unparsed string to this document
set the
set the method param param
set the value of a parameter
returns a list iterator of the headers
sets the value of the code ttl code property
returns a list iterator of the headers
sets the transport parameter to the given string
returns the current header
returns the current line number
compares this receiver with another one
returns true if the lr has lr parameter
parses the next token and returns it
parse the content of the code code
parse the content of this object
parses the method
parses the current token and returns it
parse the
parse a from the
process the input
clones this message
parse the
parse the
reads a line from the input stream
parses the given header
returns the param name or name or code null code if the
parses a phone number
parse the content of this object
this method parses a new string and returns the
method set content length
parse a message from the http response
parses the
parses the name of the
parses the tel
parses the given date and time to the given date
parses the content of the code parse code method
this method is used to parse the header
parse the content of this object
parses the current token and returns the value as a string
parse the content of this element
parses the
parse the content of the code code
returns a string representing the current url
parses the code code
sets the separator to be used for the separator
sets the quoted value
returns true if the value is quoted
set the value of the named property
compares two objects for equality
returns the value of the named property
returns the name value of the given name
returns true if the name value pair is present
delete the attribute
returns an iterator over the names of all the elements in this
returns the value of the parameter
print the stack trace of the current log file
returns the class of the class
returns the next element in the filtered collection
sets the log file name
returns the first object in the list
returns the next object in the form iterator
returns the message for the given message
writes the debug message
this method is used to marshall the object to the list
sets the trace level
encode the object
encodes the port and returns a string representation
compares this host instance with another
returns true if the port has a port
set the host host
returns the inet address of the server
returns a vector of lines that have been
returns the next token in the buffer
encodes the url and 127
compares two host instances
returns the address of the server
returns the ip address
sets the hostname of the host
returns the next id
sets the match matcher
sets the host address
sets the address of the server
returns true if the host is a hostname
returns the match matcher
returns true if the host is an ipv6 address
returns the inet address of the server
peek at the next token
checks if the given address is a address
checks if the given address is a address
clones the object and returns a clone of this object
parses a string and returns the string
sets the field value for the field with the given field
parses the comment
returns the string with semicolon without the next newline
returns the string representation of the given number
parses a number
returns the current position in the input stream
sets the position of the rewind cursor
returns the rest of the rest of this url
print the string representation of the given string
returns the string value of the character
returns the current
returns the hash code for this host
dump the debug information
sets the
sets the
returns the sdp data
returns the sdp data
returns a vector containing the media to use for the given
initializes the applet
starts playback of the playback
returns the payload number
starts the recording
plays the audio data
sets the
sets the
sets the
returns the
sets the clock rate
returns the string representation of this generalized time
returns the default route to use for the default route
finalize the garbage collector
starts the transmission
sets the rtp data
returns the supported media
starts the audio control
this method is called when the devices is received
returns true if the player is done
auto generated getter method
returns the value of the started property
this method is called when the application settings demands to set the
sets the mute state
returns the state lock of the lock
the action listener to the action
sets the failed status to failed
returns the control of the specified type
sets the input format
sets the output format
returns the input format
this method is called when the controller is updated
returns the output format
set the gain value
returns the name of the effect
starts the applet
creates a transmitter message
handles the incoming request
handles incoming incoming requests
returns the payload type of the specified codec
returns the payload type of the specified codec
returns the clock rate for the specified codec
returns the sdp name
returns the payload number
returns the clock rate
returns the name of the sdp
handle the signal method
sets the gui to show the no devices in the server
called when the user presses the save button
set the mute state
fetch the current settings from the device
stores the settings to the audio file
format the format to a string representation
set the image file
registers the registration signal to the remote peer
choose a color
returns the width of the track
returns the length of the track
fetches the settings from the
fetches the video from the application
format the format to a string
set the file to use for the application
called when a call transfer is successfully completed
handle the key pressed event
paint the background
sets the buffer time
the
removes the data from the data set
encodes a string to a string
returns the name of the column at code column index code
returns the local port to which this socket is bound
the action listener implementation
sets the value at the given row and column
description of the method
removes the data from the data set
called when a new project is selected
returns true if the editor is editable
sets the reg ex to the content
changes the label of the dialog
sets the address of the
returns the capture device handler
sets the
the action listener method
mute or not the sound
invoked when a component loses the keyboard focus
initializes the applet
called when the user presses the cancel button
returns the windows guis
saves the settings to the preferences
returns the language
changes the splash text
sets the program name
returns true if the init is enabled
called when the user selects the button
fetch the settings from the settings
saves the settings to the settings
action listener implementation for the action
sets the language
called when the user is being grabbed
returns the number of in the dialog
disposes the splash screen
sets the text of the dialog
called when the action is invoked
the call to the
refresh the gui
unregisters all the registered listeners
creates the quick menu
sets the of the modlet to display the
sets the pending media gui
clears the text areas
returns the video remote panel
destroys the audio player
restarts the video
called when a user selects a contact
handle a double click event
show the password dialog
mute or the audio
called when the application exits
listen for incoming connections
sends a new port to the server
sets the listener to be notified when the application is
starts the application
stops the server
sets the default settings
stop the connection
process the response to the next response
processes the given timeout event
processes the response
process the timeout
sends a request to the remote server
process the timeout
returns the remote address
cancels the user
returns the call processor
returns the call id
process the timeout event
sets the to tag
increments the number of in the
removes a transaction from the table
processes a timeout request
the message is received
called when the user presses the
attempts to set the remote media type to the given string
called when the ack is received
returns the number of in the
processes a response from the response
returns the allow header for this request
register a new registration to the server
unregisters the current state of the current thread
returns the last expires
returns the number of in the
returns the address of the sip entry
returns the processor side of this cloudlet
signal the signal that the signal has been signaled before it is
waits for the thread to stop
starts the thread
stops the timer
returns the real username
starts the server
stops the playback of the listener
stops the listening of the
decode the password encoded
sets the port
set the transport port
decodes the password
returns the host ip address
encode the password encode the password encode the password
processes the request
encodes a string to an xml string
processes the given response from the server
process a timeout event
called when the user wants to signal to the incoming signal
get the processor
adds a new processor to the given id
returns the dialog handler for the given code
removes the given code data dialog handler code
gets the local ip address
returns the transport name
called when an error occurs during a
register a listener to send the signal to the
called when a call is about to be established
signal that a call to the end of the underlying stream has
signals that a call to the signal has been completed
handles incoming messages
sets the value of the primary sip address property
returns the address of the sip sip address
runs the action
process response response
ask the dialog to ask the incoming data in the destination dialog
called when a call transfer is successfully successfully successfully successfully successfully completed
call the transfer handler that will be notified of the
called when the incoming call is cancelled
returns the configuration string
sets the auth info
returns the auth info for the given host
set from address list
returns the value of the specified domain
called when a dialog is about to be terminated
process a transaction terminated event
this method is used to set the
returns the property with the given name
returns the default value of the default value
returns the catalog by name
get the schema by its name
returns the type
returns the by name
returns the table with the given name and name
returns the data type name of the field
returns the procedure with the given name and name
gets the primary key constraint
adds a validator message to the list of validators
returns the column with the given name and column name
sets the primary key constraint
returns true if the validator is a validator
adds a foreign key constraint to this table
returns true if the column is a primary key
returns the value of the field as a string
adds a new foreign key to this constraint
returns the column with the given name
returns the schema by name
returns the table with the specified name
removes the schema from the schema
returns the view with the given name
returns the by its name
returns the procedure with the given name
initialize the jndi data source
returns the function with the given name
returns the value of the string property
returns the value of the property as boolean
returns the callable statement with the given name
returns the integer property with the given name
returns the file property
returns the sequence with the given name
returns the element with the given name
prepare the database connection
returns the first object in the map
returns the short value of the specified column
returns the not null name
create a resource relative to the specified file
opens a file to open the input stream
opens the input stream
returns an input stream to the underlying stream
clone this object
creates a new database object
clean the catalogs of the catalog
removes all the schemas
load the properties from the given resource
create a validator factory
adds a listener to this listener list
remove a listener from this manager
add a new agent to the given agent
p remove the process from the specified url
process key presses
process command line arguments
returns the last command
reset the last command to the last last command name
logs a message to the agent
moves the agent to the end of the agent
reset the command buffer
append a command to the given string and returns the
deletes a char in a command buffer
removes the tags from the given string
returns true if the given type is already in the list
loads a string from the input stream
load a url from a url
initializes the dialog
the user pressed the ok button
returns the region where the given region is inside the
returns the last word in the given document
the scanner to be performed
returns true if the selection is commented
returns true if the specified block is a block block
resets the previous character
resets the detector
installs content assist for the content assist processor
initializes the formular
checks if the current selection is a valid selection
returns the html representation of this object
returns the xml representation of this object
returns a string representation of this object
returns the xml representation of this object
returns a string representation of this object
returns the xml representation of this object
returns a string representation of this object
returns a string representation of this object
returns the xml representation of this object
returns the xml representation of this object
returns a string representation of this object
returns a string representation of this object
initializes the step view
returns the general item composite
get the composite item as a composite
returns the composite item as a composite
get the more options
validate the values of the values
initializes the values
creates a configuration for the given code configuration code
sets the service
this method is called when the user clicks the
opens the
sets whether the button is enabled
create a tool service
returns the message id for the given
disables the widget
set the list of available clients to the list
disables the panel
returns the resource of the given resource as a resource
change the source image tag and the image
sends a message to the server
creates a chart
populates the data array with the data
returns true if the entry is an entry
creates a transferable to use for the given component
called when the user selects the export
returns the service
sets the service
starts the server
returns the address of the server
this method is called by the server to acknowledge the server
runs the thread
command to execute command
command to execute command
returns the parent path
returns the path to the file
can execute if the command can be executed
returns the date of the last modification
returns the last modified date format
sends a message to the server
create a tool service
sets the service
validate the values of the values
disables the widget
returns the length of the text in base64
returns a string representation of this object
launches the error dialog box
handles the request to handle the move request
handles the creation of a request
launches the error dialog
creates a thumbnail for the drawing
sends a message to the user
sends the message to the server
returns true if the given id exists
indicates if the transfer is passive data transfer
this is the method that is responsible for changing the page of
returns a new event object
adds a plain notes to the
returns the root link to the given code code
the given root
adds a new
load core resources
called when the user clicks the user
dispatches the event to the given context
processes the message
returns the text for the image
disable the widget
called when the user clicks the blocked node
create a tool service
sets the service
this method is called when the user presses the button control
sends a url to the browser
sends a http server address action
initialize the values
sets the service
opens a dialog to choose a file or directory
create a new role watch
create a tool service
processes the message
returns the for the given user name
called when the user clicks the blocked node
returns the id of the editor for the given file name
returns the current local
sets the connection model
sets the source of the source
returns the source model
returns the target model
sets the target model
sets the location of the component
sets the location of the given rectangle
fire a property change event to all registered listeners
sets the color of the
disconnects the connection from the connection
adds a child to this view
removes a child from the list of children
sets the background color
returns the background image path
sets the background image path
sets the constraint
sets the color of the color
sets the text
sets the text color
sets the font data
adds a connection model to this model
removes a connection from the list of connections
sets the visibility of this component
sets the owner name
adds a new target connection to the list of connections
gets the value of the property
removes a connection from the list of connections
removes all connections from the given list of connections
returns the font data
stop the share
returns the abstract model
returns the model of this edit part
returns the center point of the map
sets the image to be used for the image
returns the request
returns an initiliazed instance of image
clears the contents of the cache
returns the model of the graphical item model
executes the given command
returns the selection provider
returns the image icon provider
checks if the current user is selected in the list
returns the color of the specified color
returns the color of the color
checks if the selection is
returns the relative location of the cursor relative to the cursor
returns the text of the text
sets the viewer to be used for the viewer
returns the current configuration
returns the editing policy
returns the color text color
returns the rgb value of the color
returns the request request associated with the request
returns the request type
returns the request request color for the given item
returns the request associated with the given request
returns the graphical item request object associated with the given request
returns an error notification request object
sends a message to the user
sends a message to the server
create a new
called when the user tries to enter a to the
show role
disables the widget
sets the modality of the client
returns the client modality
sets the service
sets the service
create a tool service
this method is called when the is removed
create a tool service
sends a message to the server
sends a message to the server
sends command to the remote server
sends a command to the server
sends a update to the server
sets the to the current state
sets the service
remove a from the
called when the user clicks the blocked node
sets the status of the ui
called when the user clicks the
this method is called when the user clicks the user
creates a new instance of the tool
handles an error notification message
sets the service
deletes the graphical item
handles the creation of a request
moves the camera to the
creates a new
called when the user clicks the
changes the color of the
sets the current clip to the current state
this method is called when the group control button is pressed
returns a random string of the random number generator
returns a string representing the length of the given string
stop the share
called when the blocked message is blocked
initializes the values of the components
validates the values of the components
disables the widget
launches the group control
validate the frame
returns the project name
checks if the limit is allowed
parses a
creates a thumbnail for the drawing
sends a message to the server
disables the widget
create a configuration for the given group
validate the values of the controls
sets the
returns the
returns the colors
returns the colors to the given boolean
converts a color to boolean
handles requests content item request
called when the user clicks the
sets the service
processes the message tool
launches the launch message
handle the launch applet message
sends the message to the server
sends a message to the server
sets the default value of the code chat service code
set the default configuration for this configuration
sends a message to the server
disable the widget
create a new
returns the check anonymous anonymous
sets the check attribute of the anonymous kernel
disables the widget
disables the widget
called when the user clicks the blocked node
stop the voting
sets the service
returns the number of in the
create a new bot
process a connection
disable the
process a
called when the user is blocked
sets the location to the next frame
sets the enabled state of the
handle add category message
the
returns true if the player is blocked
sets the blocked attribute of the object
handle the message
handle full message
handles the editing message
handles rename rename a category
the group control
handle the delete category message
handles a move of a branch message
handle the delete message
this method is called when the user clicks on the button
handles the set of tag
returns the source actions of the given source
this method is called when the is done
returns true if the specified data flavor is supported
handles the set message tag message
handles the user interactions with the given message
close the input streams
cancels this timer
returns the percent complete
returns the exception that caused the exception
returns true if the transfer is done
returns the id of the
handle the event
set the to the full
handles a tree chat message
sends a message to the server
checks if the current node is set to send a tag
add a message to the channel
sends a message to the server
sends a full message to the remote server
returns the number of bytes received
returns the transfer listener
returns the adapter for the adapter
sends a rename category message to the server
send a message to the remote channel
send a set of message to the server
returns the categories
sends a edit message to the server
fire the transfer done event
sends a move to the server
fire the transfer data event to the data transfer data event
disables the widget
initializes the values of the components
returns true if the category is movable
returns the colors
handles the column table coordinates
handles the drawing of a message
sets the service
handles an error notification message
creates the comment
sets the current clip to the current state
this method is called when the tool bar has been removed
disables the widget
creates a new bot
returns the xml representation of the node
returns the xml representation of this object
returns a string representation of this object
initializes the palette
sets the status of the
handles anonymous full anonymous request
launches the group control
called when the user clicks the blocked widget
sends a presence message to the user
sends a message to the server
handle the message
send a message to the server
handle a vote message
stop the
handle stop vote message
handles a group presence message
disables the widget
sets the focus to the given
sets the service
set the vote for this buddy
the group control is a dialog
removes the given user from the users
initializes the selection
disables the widget
this method is called when the user clicks the user
stop the voting
called when the voting of the voting of the voting of the
disables the widget
disables the widget
called when a blocked node is already blocked
the
the
called when the user clicks the
refresh the specified url
this method is called when the group control is being removed
refresh the list of files from the given list of available
create a tool service
disable the widget
sets the panel to the given panel
this method is called when the blocked frame is blocked
returns the text of the current text
this method is called when the user selects the
sets the text
set the default configuration for this configuration
initializes the values of the controls
validates the values of the values
returns the xml representation of the document
returns a string representation of this object
sends a message to the server
send rename category message
returns the xml representation of the document
returns the xml representation of this object
sets the service
returns whether the anonymous user is anonymous
sets whether the anonymous user is anonymous
returns a string representation of this object
sends a move to the server
returns the xml representation of the document
returns the xml representation of this object
returns the check attribute of the object
sets the check attribute of the anonymous service
returns a string representation of this object
sends a move message to the destination
send a set of message to the server
sends a edit message to the server
disables the widget
sets the service
adds a listener to the list of listeners
notify all listeners that have registered interest for
sets the text of this component
create a new bot
disables the widget
opens the streams
reads a reply from the pop3 server
handles private message to handle private methods
start a voting service
returns the current state
performs the next state
sends a command to the server
handles the private rename category message
handles the notification of a private category message
returns the tree for the given category
handles the private private private private message that is used to set
handles the private private message to edit the
handles the private message to the private message to be used in
stops the voting
returns the number of in the
returns true if the move has the move branches
returns the hop name
sets the hop name
stops the voting
sets the value of a property
returns the value of the property with the given name
this method is used to set the date info for the given
starts the server
returns the string representation of the given element
stops the thread
sends a reply to the server
sends a reply message to the server
closes the client
process the command
search group from group
returns whether the tree has been granted
returns the text of the notes note
this method is called when the is set
returns the index of the item that was added to the
returns the percent completed
returns the object to be used for introspection
returns the index of the item
returns the index of the item that is removed from the list
adds a file to the list of commands
this method is called when the server is
this method takes the size of the given size into the queue
returns the text message
returns the xml representation of the node
returns the message as a string
returns the xml representation of the document
returns the xml representation of this object
returns a string representation of this object
returns the name of the client user
returns true if the current node is currently selected
removes all connections from the given list of connections
sets the new edit part
sets the old edit part
sets the connection editpart
sets the location of the location
returns the connection tag
sets the style of the line
adds a bendpoint to the point
removes a bendpoint from the list
sets the coordinates of the grid
sets the columns coordinates
replaces the bendpoint at the given point
returns whether this arrow is a arrow or not
sets the connection tag
sets the arrow
sets the label text
sets the anonymous status
disconnects the connection from the connection
returns the categories
returns the hidden model model
returns the first point of the given
updates the hidden points of the given area
update the hidden points of the
sets the type name
gets the value of the tag property
returns the decoration of the decoration
returns a list model for the category list
sets the comment text
sets the contribution tag
this method initializes lbl messages left
refreshes the bendpoint
returns the panel wait for the panel to be performed
initializes the hidden points of the points
sends the private message to the server
updates the columns of hidden points
sets the columns points
sets the points of the grid points to the given points
change the background color of the item
creates the graphical item sub menu
creates the filtering sub menu
returns the title of the contribution
returns the contribution of the text
disposes the image
creates the connection to the
sets the service
returns the tag
adds a category to the list
checks if the user is selected in the selection
disables the drag source
refresh the tree
returns the part root
resets the connection to its initial state
recalculate the list of all the parts
returns true if the given editpart is highlighted
builds the subgraph
build the list of all the parts
called when the repository has changed
returns the configuration of this action
returns the bendpoint to which this message belongs
sets whether the next step is frozen
returns the
returns whether the label is shown on the label show
returns the number of
returns the grid type
sets the current status of the
returns the left point
returns the point of the right corner of the gef rectangle
returns the bottom point of the bottom point
returns the top point of the point
sends a random message to the current destination
returns whether the user is a full anonymous
returns the message anonymous request
returns an anonymous request anonymous
returns the request object associated with the given
generate the tag
returns the new item id
returns the unique id of the replicated item
returns the connection uuid
gets the value of the subtype property
returns the request content item request
gets the contribution
returns the request request for the given request
returns the request request associated with the request
returns the request associated with the given request
returns the graphical item request object associated with the given request
sends a random edit message to the current node
returns the connection request
refresh the map of files in the map
returns the subtype of this object
returns the tag
updates the map of the file names
sends the request to the server
disables the widget
called when the user clicks the blocked node
create a new bot
initializes the values of the
send a random message to the event queue
returns the string representation of the node
sets the text
returns the id of the object
sets the id
set the node object
returns the node
returns the parent entry node
returns true if the tree node is a private note
returns the parent of this object
returns the of the given tree
returns the parent of this object
returns a new object that represents the
returns the index of the next child node
increment next child index
decreases the next child index
resets the child iterator to the next child index
returns the index of the next note child
increments the next note child by one
decrement the next note child
resets the next note child to a new one
returns whether the node is visible or not
sets whether the node is shown
set the text color
returns the color text color
sets the style of the text
returns the style of the text
sets the new value of the new flag
returns true if the random number is in the probability distribution
increment the node count
this method is called when the node has no children
returns the number of descendants
sets the new child
resets the node to the new position
sets the contribution tag
gets the contribution tag
sets the last leaf attribute of the object
returns the last leaf state of the file
returns an object that represents the data to be transferred
returns whether or not the specified data flavor is supported for
returns true if the note is a private note
sets whether the note should be used
returns the number of notes in the note
returns the index of the category
increment the editing count
sets the editing count
returns the new name
sets the nick of this user
returns a string representation of this object
select a category
returns a string representation of this object
returns whether or not the message is cloned or not
sets whether or not the message is marked to be used
returns the parent uid of this user
returns the index of the tag of the tag
sets the parent uid
sets the category
returns the preferred size of the icon
select the selected tag
sets the padding height
returns the padding height
sets the maximum length of the longest tick
returns the maximum length of the longest length
returns a random node selected in the tree
returns the text area
sets the previous step group color
set the color of the text
returns the color of the text
selects the given category
sets the preferred size of the component
sets the text of the font
gets the value of the uid contribution property
returns a string representation of this object
returns the txt message
returns a random string of the current string
returns the category of the category
returns the category from the
returns the root node of the tree
returns the xml representation of this object
set whether or not the message is being used
returns the check attribute
sets the check attribute of the anonymous service
returns a string representation of this object
check if the specified directory exists in the receiver
disables the widget
returns random length of length
returns the number of messages that will be used for the
returns the maximum depth of the tree
returns the show node number
returns the category usage
returns whether or not this contribution item is tagged
returns whether or not this object uses a private key
sets the name of the
returns the hash code for this object
returns a string representing the length of the given string
sets the uid of the
returns a string representation of this object
returns whether the contribution is used
returns a string representation of this object
returns the direction of the
returns the xml representation of this object
returns a string representation of this object
returns the xml representation of this object
returns a string representation of this object
sets the tag
sets the description of the
returns the tag
returns the url of the resource
returns a string representation of this object
returns a description of the tag
returns the text of the message
sets the text of the message
this method initializes this
returns the number of levels in the node
compares two objects for equality
this method initializes lbl contribution tag
this method initializes txt message
this method initializes btn send
this method initializes sp txt message
this method initializes panel empty
gets the tag
sets the tag
returns the code chat service code
this method is called when the user presses the suspension
this is a callback that will allow us
called when the user is blocked
starts the applet
sets the information about the
starts the applet
processes the message tool
this method is called when the layout manager is done
shows the dialog for the user group
this method returns the tool bar contributions
register a service
get the service with the given id
returns the message processors
returns the client state manager
process a connection
process the
returns the waiting state
returns the container from the
returns the to
returns the current sequence number
returns the list of messages
adds a message to the list
returns the container to which this object belongs to
returns the shared object from the
processes the message
disable the service
this method is called when the state of the is blocked
returns the configuration properties
set the configuration properties
returns true if the configuration is imported in the imports
returns the tool name for the artifacts
returns the actual step number
sets the actual step number
this method initializes tool bar standard clustering
returns true if the server side is on the server side
returns the content of the content
returns the xml representation of the node
returns the xml representation of this object
returns a string representation of this object
sets the anonymous status
returns a string representation of this object
gets the value of the property
gets the value of the property
this method initializes btn save
starts the service
disables the service
this method is called when a user agent is blocked
this method is called when a user agent is destroyed
grants a group control to the client
returns the
returns a list of all the keys in the list
returns the string representation of the object
returns true if the group is a colors
returns true if the user has colors to be used by the
returns true if no colors are drawn
checks if the node is not allowed
sets the session
handle a command
returns whether the teacher is in teacher
create an instance from the user
create an instance from the given username and password
creates a new instance of a given username and password
returns the scheme
called when the pause action is interruptible
returns the shared object context
returns true if the socket is connected
handles the fast forward action
send a shared object message to the client
send a shared object message to the server
returns the next event in the event queue
sends a shared object message to the server
returns true if this message is a
go to the previous record
adds a handler to the list of handlers
removes a handler from the list of handlers
sends a message to all registered handlers
handles the next record action
handles the previous record action
returns true if the is
add a setting to an attribute
get the attribute value
remove the attribute with the given value
returns the settings for this plugin
returns a string representation of this object
sets the flag
returns the id of the id
this method is used to convert the value to the
returns the of the tools
sets the of the tools
returns the tool name
returns the list of groups
returns whether the dialog is open
sets whether the dialog is open
sets the groups list
sets the short description of this object
set the configuration to be used for the service
gets the value of the to id property
sets the to id
returns the tool configuration
sets the long description
set the tree node
sets the id
sets the task to be used for the task
sets the end session attribute
returns the id of the client
sets the id client
returns the xml representation of this object
sets the step number
returns whether or not this chat is disabled
gets the value of the late property
returns a string representation of this object
returns whether the dialog is closed
sets the value for this interchange
sets whether the dialog is closed
creates a new client instance
gets the value of the property
sets the
returns true if the service is disabled
sets whether the service is disabled
returns the service
sets the service
returns the to id side of the
gets the value of the pub property
sets the id
sets the to id side
sets the
returns the fn
returns the list of services
sets the list of services to be used for the services
returns the list of members in the list
sets the members list
gets the user name from the user
sets the user name from the user
returns a string representation of this object
returns the metadata for the metadata
returns the user name to the user who is the user
returns a string representation of this object
sets the user name to
returns the file
sets the file
returns the xml representation of the document
returns the server
read from the database
returns the last step of the event
sets the last step
returns the list of steps
sets the list of to be used
sets the title
returns the username
sets the user name
returns a string representation of this object
creates a dom document from a file
gets the is group change
sets the is group change
returns the number of previous group
creates a dom document from a xml file
sets the previous group
returns the properties of the file
store the properties to the given properties file
sets the background of the tree
returns the align
returns the layout string
moves the current timestamp to the next timestamp
adds an uncaught exception handler to the list of listeners
removes the listener from the list of listeners
this method creates a transferable for the given tree
returns the coordinator name
returns a dhcp packet from a socket
returns the name
returns the info object
returns true if the current user is on the air
returns the authentication mode
parses a descriptive argument
create a status
displays the error dialog
visit all nodes in the tree
convert the stack trace to a string
returns the platform toolkit
returns the path to the executable path
returns the url to the given
returns the directory name for the user
recursive method to find the number of nodes in the tree
adds a adapter to the adapter
returns the status dialog
sets the status
returns the property value
initializes the status dialog
sets the property associated with this object
returns the parameter with the given key
close the control
handles a status
handle the status of a status
handles the status of a status
handles a exception
adds the status to the status
gets the active part id
returns the active shell
returns the command id
returns the key configuration
returns true if the active state has changed
returns whether the user has changed or not
returns whether the name has changed
returns whether the parent id has changed
returns the value of the code previous attribute values property collection name
returns the attribute values map attribute
returns whether the category id has changed
returns the category
returns whether the description has changed
returns whether the list of has been changed since the last
returns the map of previous attributes
returns whether or not the attribute has changed
returns true if this control is open
returns true if the key sequence bindings have changed
returns the command manager
returns the set of ids of all defined categories defined in this
disposes the object
returns the set of ids of all defined defined in the
returns the set of all defined in the defined in
returns true if the active key configuration has been changed
sets the display for this display
returns the display for this component
returns whether the active locale changed
returns the attribute values map attribute
sets the details area provider
returns true if the platform supports the platform
add a new job change listener to the list
returns true if the object is a removed state
called when the job is done
sets the value of the attribute
returns true if the portlet has been changed
returns true if category ids has changed
returns true if the given element has children
returns true if command ids has been changed
creates a pending update adapter
returns the adapter for the given element
returns true if the given child is a parent or not
returns the adapter for the workbench adapter
returns whether the given element is a deferred adapter
rebuild the wizard page
performs the default operation
returns the default preferences
adds the given
adds a listener to the update complete event
removes the given from this collection
compares two objects
returns the string to be used as the comparison string
compares two
returns the image descriptor for the given object
returns the category of the given category
returns the label of the object
returns the parent of the object
returns the background color of the element
returns the foreground color to use for the foreground
returns the font data for the given element
sets the search contexts
returns the preference node for the given id
returns the control that is associated with this page
sets the lower label of the label
sets the lower selected element
returns the lower selected element
sets the default layout data
sets the selected project to the current selection
sets the working sets
verify that the working working set is working
returns the name of the preference node
returns whether the given object has a property page
returns true if the selection is applicable to the selected document
returns true if the selection is applicable to the given selection
creates a new dialog
returns code true code if this window is modal
returns the initial selections
returns the ok button
sets the initial selection of the selection
sets the result selection
handles the list of empty elements
updates the enabled state of the ok button
returns the dialog values for the dialog settings
returns the number of the dialog points
sets the sorter
sets the comparator used to sort the charts
sets the container mode
creates the actions
returns true if the selected node is currently selected
creates the tree viewer
check if a category exists in the category map
disposes the preferences store
this method initializes sp tree
enables or disables the default support area
this method initializes sp lst categories
returns whether the support mode is enabled
collects all children of the given element
called when the user has pressed the
called when the user clicks the button
add a list of entries to the list of existing entries
returns the pattern
returns a list of categories
returns true if the given text matches the pattern
initializes the viewer
the ok button was pressed
returns true if camel case matches the pattern
this method initializes tool bar category
returns the image for the given column
returns the image element for the given element
returns true if the pattern is allowed to be used
returns the image descriptor for the given object
checks if character is allowed in the given char
checks whether any of of of the given elements in this list
get the list of files
checks if the given elements are visible
returns the folders
checks if the given string matches the given string
closes the dialog
returns code true code if the given element is visible
returns true if the given character is a valid camel case
determines whether the given element matches the given element
compares the specified pattern to the given pattern pattern
returns true if the given pattern is a sub pattern
initializes the filter
trim all wildcard characters
creates the dialogs controls
creates the controls for the controls
creates the buttons for the button bar
compares the label and the label to the given label
creates the control
creates the dialog to show the dialog
creates the tree viewer
creates the refresh job
sets the selection to be used for the selection
returns the number of filtered items in the tree
counts the number of items in the tree
select the default select
selects the specified items and notifies the listeners
creates the support for the tool bar
this method initializes lbl discussion
returns the code accessible code code accessible code
this method initializes lbl categories
closes the editor
enables or disables the default support area
returns the selected editor
this method initializes lbl add
handles the ok button
restores the widget values to the current state
saves the widget values in the dialog store
sets the editors to filter
updates the enabled state of the ok button
returns the error image
returns the image info image
returns the shell
returns the currently selected
returns a collection of all the objects that have the status code
returns the image for the given image
show the message dialog
returns the image that is used to draw the warning
handle the selection change
sets the service
renames a category
initializes the bounds of the dialog
deletes a category
moves the given to the current category
adds a new item to this
refresh the dialog
method to initialize the window object
returns the workbench window
refreshes the status area
refresh status list area
set the drop down id
sets the provider to use for the given provider
sets the selected status of the adapter
disposes the resources associated with this component
fires a property change event
sets the test page
runs the test
test of starting method of interface code code
test of finished method
set the list label provider for this viewer
sets the user support area provider
sets the active state of this component
returns true if the user interacts with modal modal dialog
updates the action bars
returns whether prompt should be shown on the sidebar
returns the parent element casted to this element
creates a sub views manager
shows the page
show details area
this method is called when the user selects a part of
returns the action bar configurer
description of the method
fills the dropdown with the specified custom action
creates the actions
registers an action to the action
returns the window configurer window
called when the window is opened
fills the menu bar with the fill
called after the restore window is not null
fills the cool bar with the given bar
fills the status line with the given status
called after the window is created
called after the window is opened
disposes the resources
override to close window close window when the window close close is
disposes all actions
called after the window is closed
disposes the action
creates the contents of the window
saves the state of the view
reset the state of this filter
saves the state of the view
restores the state of the code frame code from the memento
returns the editor part
disposes the resources
release the state
hide the button
initialize the application
returns the workbench workbench
updates the status bar
called before the startup is done
called after the startup is done
this method is called before the shutdown of the server
updates the title of the image
this method is called after the shutdown of the shutdown
handles the exception event loop
called when the user is idle to exit the application
returns the default format
returns a read only set of the modifier keys
returns the natural key
called before the window is opened
returns true if the key is complete
returns a string representation of this object
checks whether the given key is within the values
this method is called when the user interface is
returns the key strokes in the list of key strokes
opens the intro
displays the search
display the help of the help window
search for the given expression
this method is used to resolve the given url
returns true if the strokes set is complete
returns true if the key is empty
adds the given context to the context
post creation of window creation
add a control to the help list
returns true if the given sequence starts with the given sequence key
post window open window
this method is called when the server is blocked
called before window occurs
returns the context manager
returns the set of defined in the context
returns the set of enabled
returns true if the context ids has changed
returns true if the provider has changed
returns true if context ids has changed
post window close method
returns the default page input
returns the cookie object
returns the page id of the current page
create an instance of
returns the site
returns the id of the class
computes the minimum size of the component
creates a new sash object
saves the state of the view state to the given memento
this method is called when the restore state is completed
returns the label of the label
returns the comparator for the ith comparator
returns the working set state file
saves the current state to the file
creates the title bar
returns the reference to the part reference
returns the workbook object
performs the zoom
this method is called when the user selects the request
sets the workbook
sets the active state of the workbook
returns the bounds of this code rectangle code
update the titles of the titles
reads the configuration element
restores the editor to the presentation
gets the value of the part reference property
test if the given object is a valid name
sets the restore on flag
add a new filter to the list
sets the visibility of the given element
sets the enablement of the given element
this method is called when the user selects the
returns a string representation of this object
sets the container to the specified container
returns the image associated with the given symbolic symbolic symbolic name
returns the image descriptor with the given name
registers the selection listener to the ipart listener
sets the visibility of this component
creates a new instance of the
passing the focus request to the viewers control
saves the preferences to the given state
sets the page to which the page is being published
returns a memento memento for the current state
returns the index of the closest result of the category
sets the flag
returns the presentation class name
returns the workbench
returns the stack of the part
creates a file and returns the workspace root
show the pane menu
sets the status to the given status
show the system menu
find the
moves the sash from the given sash
updates the active view
sets the active view
adds a new editor to the stack
returns the provider
called when the child is added
this method is called when the child is removed
adds the given size to the menu
this method is called when the user clicks the dock
creates the parent of this widget
sets the busy flag for this component
disposes the editor
adds a new group to the list of
show the highlight
dispose of the parent
returns the active editor
returns the id of the active workbook
swaps the two categories with the given categories
returns a copy of the editor
initializes the component
returns the number of editors
returns true if the given workbook is active
lays out the content of the layout
returns true if the window id is valid
find the for the given part
returns the in source part of the given part
returns the show in target part of the given target
remove all the elements from the list
returns the context part of the given part
emits the beep
remove the given editor from the list of active windows
removes the contributions
returns true if the contributor is
returns the tool item to the given position
sets whether the workbook is active or not
returns true if the stack is currently being active
sets the active editor to the specified value
returns the location of the next icon in the tree
returns the index of the given item in the list
update the tab list
returns the default handler descriptor
returns the list of registered handlers
returns the prefix of the namespace
returns the descriptor descriptor associated with the given status code
disposes this editor
adds a new handler descriptor to the list of handlers
returns the list of registered handlers
initializes the drag and drop listeners
adds a new part to this composite
returns true if this item can be used to denote the
removes the given part from this layout
replaces the part at the given position with the given layout
checks if the given node can be deleted
returns true if the argument is an working set
restores the controls state from the given memento
override hash code
adds a feature to the filter element element attribute of the element
returns true if the given object matches the filter
checks if the given object matches the filter
returns the descriptor of the given resource
sets the window
method to handle the given part
method to the part of the
called when the part is closed
method to handle the given part
called when the part is opened
open the plug in
returns the image data
returns the image data
returns the secondary id of the
returns true if the banner is visible
returns true if the node has a public note or not
lays out the center of the area
returns whether this object is an handles
refresh the content of the part
this method is called when the user releases the references
adds a menu item to the menu
refreshes the selection
returns the name of the part
sets the spacing between cells in the grid
gets the content description
sets the spacing between cells in the grid
check if the node is a copy of the current selection
returns true if the list is empty
returns the spacing between the points
returns the content description of the content of this content type
returns a list of all the
sets the cells width and height
returns a copy of the descriptors
sets the margins for the cell
returns the margins in pixels
sets the default column
returns the title of the current page
returns whether the vertical scrollbar is vertical
sets the default row cells
checks if the selected category is a category
returns the display name
set a cell as a row
adds a trim to the list
returns the row at the specified row and column
adds a trim to the given builder
initializes the grid
removes a trim from the list
returns true if the given descriptor is contained in this list
adds a listener to the list of listeners
returns the list of all the components that have been
returns the denominator of the rows of the grid
called when the user chooses to show the radio button
returns the presentation part
this method is used to create the menu bar
sets the drag cursor
returns the id of the control to the given control
forces the components to be removed from the layout
adds a child layout to this layout
removes all the components from the list
sets the control to the center of the control
called when the user selects to remove the trim
adds a new child to this container
flushes the cache
returns the center of the control
returns the composite
disposes the toolkit
returns the hint for the given hint
called when the dragging of a slide is longer
show the dock of the dock
sets the hint for the given cell
returns the scroll width of the given area
sets the alignment of the cell
set the span of the cell
indent the cell at the given position
find the trim description
sets the cell indent
returns the area of the given area
this method is called when the user chooses to show the
sets the preferred locations of the locations
update the cache
returns the preferred area for the given string
removes all the from the given list of all the
returns the number of rows in the table
enables or disables the trim control
sets the cache
returns the size of the cached docking cache
returns the id of the abductor
returns whether this control is visible
sets the cache to be used in the cache
returns the area id
sets the area id
flush the cache
sets the state of the control to docked
adds a listener to the list of listeners
notifies the listeners that the simulator has been released
removes a listener from the list of listeners
handle the close of the current close
starts the trim trim
show the dock of the dock
runs the runnable
updates the progress manager
saves the presentation state to the current state
returns the hints for the
clean up the job
returns the bounds of this control
updates the scrolled view
compares the job info queue with the given job info
gets the blocked status of the blocked server
this method is called when the user selects the previous item
selects the next item in the tree
updates the entry map with the given entry
returns true if the current thread is blocked
updates the job info object
returns the number of items in this group
sets the blocked status of the blocked service
sets the ticks number of ticks
creates the dialog to show the dialog
this method will be called when job info is called
returns the content provider
clears the cursors
returns the parent composite
passing the focus request to the viewers control
sleep for the specified group
clears the cursor
refresh all children
updates the visible status of the items
set the message to be displayed
returns the parts
returns the progress monitor
close the file
returns the progress monitor for the given job
returns the status of the service adapter
sets the text to be displayed in the main window
returns the tag with the given description
sets the layouts size progress
refresh the job info panel
cancel the cancel
returns the current selection
returns the title of the main window
remove job info from the queue
add a category to the category
initializes the content provider
initializes the menu
remove a group from the list
returns the current selection
returns the time string from the time
creates the cancel action
returns true if the job is completed
adds a job info to this group
determine if the job is running
returns true if the job is the best job
returns the image for the image
returns the percent done status of the job info
returns true if this is a
cancel the current task
description of the method
returns true if the job has been already assigned
returns the animation item
returns the control that is associated with this
process the progress bar
replaces the child with a new one
checks if the given side is horizontal or not
checks if the drop is a vertical side
recreates the component
updates the action link
sets the width hint
updates the text of the task
sets the height hint for the image
returns true if the debug level is showing
description of the method
sets the color of the current color
adds a job info object to this container
sets the color of the
returns the finish date of the given job
returns true if the tree is
clears all the
returns the name of the job info
sets the backgrounds background color
returns true if the job is tracked by this job
sets the display flag
shuts down the quartz scheduler
creates the extended dialog area
returns the vis cursor
creates the spacer
description of the method
creates the details for the details of the button
disposes the editor
returns a collection of jobs that have been cancelled
watch for watch time ticks
this method is called when the category is removed
checks if the current watch is valid
opens the dialog
refresh the category
sets the active state of the window
returns the event loop monitor event
returns the preferred width of the component
returns the parent pane
updates the gradient of the current
show or hide the component
returns the text color of the given item
sets the bounds of the presentation
clears the trigger
this method is called after the action is pressed
returns true if the container allows focus to be automatically
returns the bounds of the rectangle
activates the specified editor
returns the tree
returns the compound id of this compound
returns true if the background of the background is in the background
sets whether the system displays the jobs to show system jobs
returns the workbench window
moves the control to the specified parent
returns the value of the control
returns whether the control is currently visible
links a part of the layout
sets the minimized state
sets the visibility of this control
this method is called when the job is done
hooks listeners to the preferences
sets the bounds of the control to the given rectangle
remove all listeners from the
sets the container for this container
creates a new preference key
saves the state of the preferences
shutdown the listener
called when the start
notifies all listeners that a selection part has been changed
called when the deferred event is thrown when the
returns the tracker part tracker
returns the id of the place holder
clears the tree
returns true if the given node is a
returns the filter
returns the description of the service
returns the image descriptor for the image
test of the method
returns the name of the configuration
returns the list of references to the references
returns a list of all the keywords
clears the keywords
returns true if the intro view is in the form
add a new listener to the list
returns an image descriptor for the image
notify all listeners that have registered interest for
returns the working status for the status
returns the location of the new workbench state
clears the message and clears the status
initialize the bounds
close the items
dispose the image
saves the items in the given table
updates the editors
changes the text of the item
fills the resource type table with the properties of the
sorts the table
returns the image associated with the given editor
invoked when a mouse button has been released on a component
the user pressed the ok button
saves the dialog settings to the settings
returns the dialog settings for the idialog settings
perform the ok
invoked when a mouse button has been pressed on a component
opens a file chooser dialog to choose a file to be shown
creates the control
removes the selected resource type from the list
lays out the top control
disposes the resources
handles the mouse click event
updates the enabled state of the editor
returns true if the editor has been marked as removable
returns true if the given item is an editor or not
restores the widget values back to the original values
expands the given expand tree
updates the selected resource type
sets the presentation state of the
select a given model in the navigation tree
stores the given expanded state to the expanded state
adding the page to the wizard
returns the available for the root directory
this method is called when the wizard is finished
stores the selected category and the wizard to the given
returns true if the given property is enabled
saves the widget values to the widget values
returns the selected text
returns the point of the trigger point
returns the selected working set set
handles selection changed
sets the tree viewer
sets the selection to the given code selection code
returns the selected node preference
sets the selected node preference
returns the type of contribution
adds a sub node to the list of
initializes the component
sets the background color of the text box
creates the general entry for the given node
add the pages to the root of the wizard
registers a node to the tree
create the page
returns the label of the current image
returns the label text for this element
adjust the scrollbars
copy the values from the properties to the given properties
initializes the workbench window
called when the user presses the cancel button
creates the contents of the composite
handles the mouse click event
creates the composite of the given composite
creates the dialogs contents
returns the selected working set
returns the aggregate id for the given
this method is called when finish button is pressed in
restores the working set sets the working set
adding the page to the wizard
restores the working set
restores the current working set sets the last saved working sets
sets the selection
returns the component that is used to render the given component
populates the list of decorators with the given model
show the description text
clears the description
returns the index of the given perspective
returns the plug in manager
opens the dialog
sets the current selection
updates the state of the buttons
recreates the table of perspectives
returns the element of the given element
returns the value of the code object class code property
returns the image descriptor for the icon
returns the page name
creates the viewer
double click event
checks if the given object is a valid expression
handle the next action
restores the widget values
this method is called after the defining element of the factory
saves the widget values to the selected file
handles the click event of the plugin plugin
handles selection of the selection
tests whether a custom filter is enabled
returns the category name
returns the sub pages collection
adds a sub page to the sub page
creates the dialog to show the dialog
returns the child of the current page
process the children of a child tag
creates the controls for the given composite
handles the exception thrown by the given exception
creates the show dialog dialog
returns the wizard element
build the list of nodes in the list
loads the contributors
creates the configuration status editor for the given composite
returns a list of contributions for the given element
updates the state of the ok button
trim the
set the initial selection
refreshes the table
returns the set of working set ids
creates the dialog to be used in the
updates the status of the heap
returns the category attribute value
called when the user chooses to the
updates the sorting of the table
creates the dialog to create the dialog
returns whether the given code code is able to be
creates the viewer
removes the selected working set sets from the list
finds the node matching the given node id
handle the more info about the action
adding the page to the wizard
returns the available for the
adds the page to the wizard
returns the history entry for the given index
adds a preference entry to the history
creates the button bar
gets the value of the property
expands the tree expanded categories
updates the history history
returns the name
modifies the selected text from the tree
this method is called when the user pressed the ok button
handles selection changes
sets the initial selection
updates the state of buttons
removes the given element from this container
finds the child collection with the given path
find a category element
find the wizard element for the given search id
returns the label for the given element
registers the inspector for the given
disposes the environment
checks if the node is a node and children
compares two objects
adds the page to the page
adds a filter to the text viewer
returns true if the page can be finished
returns the next page in the list
this method is called when finish button is pressed in
returns the wizard with the current
increase the number of messages
returns the parent collection element
stores the expanded categories in the tree
returns true if the given tree viewer is currently in the tree
sets the content providers content providers content providers content providers
returns the type
handles the selection changed event
show the filtered tree
creates the dialog to show the dialog
opens a web browser with the specified web application
sets the page data
returns the number of messages in the message
translates the given selection to the selection
creates a new extension
returns the adapter for the adapter
returns the image descriptor for the image
returns an image descriptor for the given element
returns the label for the given element
reset the message to the new value
returns the collection element
sets the parent of this wizard
creates a group group
increment the messages count
creates the text menu
returns the messages
restores the current state of the editor
sets the selected tab id
sets the messages
increases the replies of this instance
attach controls to the controls
returns the new replies
reset the new replies to the new value
updates the visibility of the
updates the state
sets the dirty flag
returns whether the editor is dirty
gets the contribution items
disposes all the widgets in the receiver
fills the major version of the table with the given
returns the menu
this method is called when the widget is in the layout
loads the widget from the given configuration element
returns a string representation of this pattern
this builds the components
hook for subclasses to override the default behavior
updates all the properties of the given list of all registered
dispose the toolkit
creates a string identifier identifier
updates the list of locations for the list of locations
returns whether the tab should be displayed tab
releases all resources associated with the item
disposes the menu
returns the name of the application
compares the specified object with this list for equality
notifies the listener that the given editor has been changed
disposes this object
returns the text of the about text
returns the about image
returns the product name
returns the ratio of the rectangles distance
gets the product id
finds the part of the given point
returns whether the editing component is in the editing mode
clears the cache
find the of the given
returns the bottom right bottom right bottom right hand side of the
release contributions for all contributions
returns the size of the flags
sets whether or not the editing component is editing
forces the receiver to be used in the
find the at the given layout
this method is called when the is removed
returns true if the is
returns the nick of the user
sets the bounds of the given rectangle
notifies the child handlers that the specified child layout
sets the nick
returns the uri of the uri
called when the child is removed
lays out the content of the
sets the alignment of the default view
returns a list of all managers
notifies the listener that a change in the model has changed
adds a listener to the list of listeners
sets the control to the given value
sets whether the mouse event is a zoom handle on the canvas
sets the value at the specified index
sets the bar visibility
creates the show style
returns the bottom right bottom right bottom right bottom right bottom
removes all the contributions for the given
returns the override action id
initializes the preference page
creates the
disposes the window
updates the page
update the
set the proxy
returns true if the is
handles the selection of the menu item
returns the drop target
removes the child view from this container
reads the preference store
unregister a services
this method is used to perform the
adds all the dependent instances to the list
removes all the and quads
disposes the registry
this method is invoked by the reader to load the
disposes the providers
called when the source source is changed
updates the action bar
zooms in the given view
updates the value of evaluation context
returns the part of the part
wait for early to be early startup
tests that the constructor is correctly set
runs the test
called when the user is finished
returns a collection of the values of the given expression
adds the to part of the view
reads the action extensions from the view
displays the editor
sets the page
closes the editor
returns the workbench page
closes the given editor
closes the editor
disposes the editor
returns the layout part
returns the active editor
check the interface for the given interface
adds an editor to the list of the current editor
restores the controls state to the given memento
returns the
returns the window
creates the contents of the shell
disposes the editor
returns true if the user is ok to create the delegate
set the listener to be used for the help listener
refresh the selection
creates the control
returns true if the card has a wildcard card
adds a new working set to the list of recent
sets the highlight of the receiver to the specified value
compares the argument to the receiver and returns true
sets whether the popup should be highlighted
disposes the graphics
lays out the content of the layout
checks if the given selection is enabled for the given
returns true if the specified object is enabled for this
concatenates the current view and adds the
adds a submenu to this menu
returns a collection of values for the given expression
returns true if the given submenu is already contained in the list
returns true if the view contains the given view
saves the working values to the given memento
creates the initial action sets
restores the state of the working set state to the given memento
saves the to the given memento
returns the name of the toolbar group
disposes the toolkit
returns the toolbar id
returns the page that is currently active
returns the extension point of the extension point
restores the recent list of recently saved working bases
processes the accelerator
returns the style of the current perspective bar
returns the composite of the current composite
creates a drop target
activates contributions for the given part
returns the pane to which the given reference is
returns the current presentation helper
adds a property change listener to the listener list
save the state of the given file to the working directory
returns the tool bar
returns the fast view width ratio of the
returns the show in part of the editpart
returns the view at the given position
removes a listener from the collection of listeners who will
returns the tool item
returns the ratio of the current line
returns the show in time in milliseconds
show the fast view bar popup menu bar
show the add dialog view popup menu
updates the view sash bounds
remove the given code updater code from the
disposes the view
hides the editor area
hide the fast view view
this method is called when the editor is being removed from the
updates the state of the editor
hide the fast view
updates the view
selects the current perspective
updates the image
sets the perspective
returns the current selection
sets the selection to the given one
disposes all actions
returns the configuration element for this configuration
this method is called when the initialization is done
returns the view
adds a new perspective bar
returns true if the view is fast enough to use the fast
returns the resource manager for this resource manager
duplicates the given configuration element
returns the view layout rec for this reference
activates the part
returns true if the attribute is
returns the item to the given code int code
returns the location of the icon
helper method to create a view layout record
returns the quadrant number of this object
this feature is not supported
returns the decorator
returns true if the grid layout is fixed
returns the decorator
returns the number of the side of the current side
build the list of contributions
returns true if the specified view is a standalone view
add a lightweight definition to the object
remove a lightweight document from this container
returns the definition of the lightweight definition of the given decorator
this method adapts
returns whether the title is shown in the view
returns the result of decorations
adds a new view to the list
returns the location of the next icon in the tool bar
adds a listener to the list of listeners
concatenates the current view and assigns the given
remove a listener from this manager
returns true if the job is pending
adds a listener to the list of listeners
resets the state to the state
returns the context menu
returns whether the given element is a decoration
adds a listener to the list of listeners
returns the background color of the given element
returns the adapter for the given iresource object
returns the foreground color of the given element
returns true if the given element is a label
returns the name of the defining of the defining method
returns the description of the service
returns true if the cool bar is locked
returns true if the has been processed
sets the current state of this component
returns true if the image has a overlays
disposes the cached decorator
decorates the given text with the given text
returns true if the attribute is set
returns the default value
returns the enablement of the enablement
initializes the enablement of the widgets
notifies this node that the crash is disabled
returns the configuration element
returns true if the given element is enabled for the given
sets the values of this definition
creates the control
sets the visibility of this window
closes all open pages
returns the bounds of this sash
clears the caches
returns the control that is associated with this view
updates the label for the enablement based on the
process the given configuration element
reads the element from the given element
this method is used to provide access to the contributions
sets the manager
called when the view part is activated
closes all pages of the page
write the decorators to the preferences store
this method is called when the user selects a part of the
returns the image descriptor
returns the tips and href
gets the welcome page url
returns the current welcome perspective
returns the license url
returns the label of the feature
returns the feature id
returns the provider name
returns the version of the feature version
creates the elements of the list and sets them
sets the elements to be used in the
increments the reference count
removes the fast view
decrements the value of the counter
shuts down all the factories
removes the given view from the list of active
computes the relation between the relations and relations of the relation
disposes the
updates the non non source parts
returns the bottom right bottom right bottom right bottom right bottom right
returns the resource manager
adds a listener to the model
remove a listener
returns the value of the bit set
returns a string representation of this object
returns the decorator defintion for the given decorator
lays out the content of the
dispose the part
returns the part id
creates the page composite
handles the selection of the selection
sets the page
returns the workbench page
returns the part
returns the decorator definition definition definition definition definition definition definition
creates a view
returns the lightweight engine manager
creates the dialogs contents
releases the view associated with the given view
restores the state of the receiver so that they are expanded
saves the state of the view to the given memento
returns the maximum memory of the
sets the new state of the new
sets the state of this object to the specified value
returns the value of the current state
create the context menu for the editor
sets the mark to the new value
clears the mark
returns the show heap status status
returns the configuration element attribute
creates the heap status
the server is triggered when the execution of the execution
returns whether the window is visible
returns the set of open actions set for this editor
returns the show in ids in the set of pages
disposes the resources
we will init the view
executes the action
selection in the workbench has been changed
this method returns the method to execute
adds the editor area to the container
saves the state of the to a memento
returns all dirty components of the current editor
returns true if the given view id is a fast view id
sets the location of the camera bar
returns true if the editor contains the specified editor
adds a new wizard shortcut to the wizard
adds a shortcut to the perspective
opens the perspective of the current perspective
fires the window close event
returns the editor at the given ieditor input
adds a shortcut to the shortcuts view
adds a listener to the list of listeners
notifies the listeners that a page has been closed
fires page activated event
fires page closed event to all listeners
fires page opened event
removes a page listener from the list
links a part of the view
returns the root container
returns the parent composite
dispose of the parent
returns the control that is associated with this control
returns the display of the receiver
fires the window creation event
returns the number of in the editor
creates a view based on the given view
returns the active fast view
fires the window opened event to the listeners
returns true if all the pages have been added to the page
removes the view reference from the list
checks if the given part is a part of the workbench part
called when the window is closed
returns the trim for the given reference
sets the selection state of the view icon
fires the window closed event to the listeners
closes the window
restore the stacks from the current state to the current state
sets the new new wizard action ids list
activates the view
deactivate the
fires a page activated event
set the list of perspectives to be shown in the menu
sets the trim stack visibility
normalizes the ratio of the
adds the to the registry
sets the show in part ids
fires a page closed event to all listeners
returns a view of the view of the given view
sets the show view action ids
defer the defer to the defer
fires a page opened event to the listeners
defer the user to the cool animations
returns the animation engine
shows the editor area
pop a placeholder
closes all open editors
saves all the parts in the database
pops up a view from the given id
shows the editor area
returns a string representation of the specified key
returns the rank of the given modifier
copies the selected element from the current element to the
copies the given element to the current element
removes the selected element from the list
remove a placeholder
returns the action bar for this action
sets the editors focus
sets the conflicts
make the active
returns the active page
returns a string representation of the given key
verify that the given event is a valid listener
make the active editor
get the page composite
returns the menu bar manager
get the reference to a view
defer the update of the defer to defer update
saves the bindings to the given binding
set the context of the filter
sets the view to be used when reading the view
returns the layout object for this layout
sets the old part ref
updates the status line lines
returns the shell activated
returns the status line manager
checks if the window is active
closes the shell
returns true if the given reference is an reference
returns the binding for the given key
close the editor
this method is used to set the current state of the current
returns true if the given reference is moveable
returns true if the given sequence key is a partial match
checks if the given sequence key is a match
lays out the content of the
close the editor
restores the trim part of the given part
sets the state of the view
adds a new listener to the list of changes to this component
removes the listener from the list of listeners
close the perspective
adds a editor presenting the contents of the editor
adds a new item to the list
this method refreshes the current editor
removes the specified item from the queue
removes the input from the input
restores the parts of the
restores the state of the input element
saves the state of the object in the memento
returns the descriptor of this descriptor
checks if the dialog is closed
returns true if the current state is restored by the memento
returns the name of the input object
returns the tool tip text for this edit part
determines if the input is a valid input
returns the id of the
returns true if the current user can save the current state
all perspectives in the
sets the restore area to restore state
activate activation activation activation activation
opens the editor
creates the client composite
returns the desired help system id
initializes the delegate
returns true if the current user is ok
refresh the enablement state of the current enablement
sets the desired help system id
this method is called when the selection changes
handles changes to the selection changed event
notifies this object that the selection changed
disposes the toolkit
override this method to return the override action id
returns the
disposes the delegate
disposes the toolkit
disposes the canvas
returns the help listener
returns the help support for this plugin
adds the data to the map
adds a new view to the list
sets the help listener
this method creates the view of the given view
set the help control for a given control
configures the shell
set the help screen
set the help menu
set the help menu
set the help menu item
sets the help screen for the given menu
detaches the part object from the given part
creates a help listener for the given help screen
opens the dialog and returns the preferred shell
saves the state of the dialog
process the default values of the plugin
processes the default values
detach the current view from the current view
returns true if the given color exists in the graph
disposes the toolkit
register listeners to be notified of changes to the
returns the category definitions
returns the color definitions
returns the default values of the default values
returns the data map
returns the font definitions
returns the category of the given element
attaches the view to this view
disposes all registered theme listeners
clears the font cache
returns the value of the element attribute
returns the default font registry
returns the theme registry
clears the font cache and updates the label
returns true if the font has the given font key
returns the font of the best
returns the value of the given jsc element
checks if the given configuration is a valid extension point
read a theme from the configuration
reads the themes settings from the given layer
sets the theme registry
returns a set view of the keys contained in this map
returns the value to which this map maps the specified key
returns whether the given default font is a default
sets the tab style
set the tab position
returns the tool bar manager
creates a button with the given label and button
disposes the cache
handles changes to the selected actions
this method initializes color control
called when the button is pressed
called when the close button is pressed
disposes the menu manager
inserts a new item into the list
moves a single item to the given position
returns the number of items in the folder
returns the location of the pane
disposes the perspective
returns the location of the part of the list
returns the location of the menu item
removes the selected items from the table viewer
callback for the shell
set the target control
returns true if the dialog has been disposed
returns true if the given point is on the border
sets the visibility of this component
called when the matcher is updated
computes the preferred size of the component
show the min max
sets the size of the page
sets the string matcher string
initializes the tab
opens the dialog
called when the user chooses to display the preferences
selects the first element in the table
find the perspective of the given
returns the composite control
move a tab down
show the min max
sets the top right top right top right top right top
clears the preview
sets the top left corner of the view
close the given button
this method is called when the about changes
get the color of the given definition
shows the min or max
dispose the resources
adds a listener to the list of listeners
sets the minimum number of characters that can be used to indicate
adds a listener to the collection of listeners who will be notified
removes a listener from the list of listeners
removes a post selection listener
removes all listeners
returns the color of the given
notifies listeners that a selection has been selected
disposes the toolkit
sets the part id
saves all pages to the given
returns the part id
this method returns the adapter
establishes a connection to the manager
disconnect from the server
sets the elements to be the given array of elements
returns the elements array list
get the value of the given color
returns a string representation of this object
notifies all listeners that a new value has been shown
shut down the server
starts the application
notify all listeners that the given tab item has been closed
sets the state of the
creates the title bar
restores the controls state of the given memento
make the fast window to be used
adds a listener to the list of listeners
fires an event
fires a part activated event
this method is called when the window is resized
fires a part event to all registered listeners
fires a part closed event
fires a part deactivated event
fires a part opened event
notifies all listeners that an object part of this
fires a part event to all listeners
fires a part input event
removes a listener from the list of listeners
returns the control that is currently being dragged
removes the control listener
returns the active editor reference
returns the image of the receiver
returns the reference to the view
set the value of the fast
sets the focus to the focus
clears the action sets the list of all the components that are
remove an action set from the database
checks if the given object is already registered
returns true if the view is a fast view
returns true if the menu has a view menu
returns the product name
returns the name of the application
returns the text of the about box
update the titles of the titles
adds an item to the preferences
removes the specified item from the list
ensures that the given perspective is visible
lays out the toolbar
disposes the resources associated with this editpart
returns the undo context
returns the history of the operation
adds a listener to the list of listeners
called when the user enters a
notifies listeners that a part has been activated
notifies all registered listeners that a given part is about to be
notifies all registered listeners that a given part has been closed
notifies all registered listeners that a given part is about
notifies listeners that a given part has been opened
removes a listener from the list of listeners
sets the window
returns the window
returns the active perspective
returns the filter extension point filter
returns the amount of space in the area
adds all the contributors to the list
sets the minimized state
returns the presentation
removes all the
returns the insert before the given area
tracks the viewport
caches the given resource adapter
returns the wizard descriptor
sets the area of the area
returns the plugin contribution
this method is called when the cache is being grabbed
sets the minimum number of characters that the receiver can have
lookup the cache object cache
returns a collection of all the contributors in the list
removes the vertical border
adds the given code docking code to the list
adds all the contributors for a class
runs the action
returns whether the contributors has already been registered
initializes the menu
runs the action
returns the editor manager
updates the enabled disabled state of the editor
sets the visibility of the window
sets whether the code code is allowed to be enabled
sets the visibility of this view
applies the button to the control dialog
returns the delegate
method to do
returns the current perspective
removes a contributor from the list
saves the given page to the design window
initialize the listeners for the event handlers
removes the specified contributors
returns the list of objects for the given class
this method is called when the manager is about to be
this method removes all the listeners from the listener
returns the identifier of the activity
disposes the current identifier
disposes the icon
returns the resource contributor
invalidates the parent
returns the editor presentation
removes the adapters for the given list of components
activates deactivates the activate method
computes order order for given class
deactivates this window
disposes all the resources held by this iterator
returns the editor contributor
returns the type of the editor
returns the extension contributor
returns the value of the ref count
disposes the toolkit
report the of the given string
returns whether the toolbar is visible
returns the editor at the specified editor
notifies this listener that the given part is changed
removes the ref reference
sets the state of the editor
sets the editor contributor
sets the enabled state of the tool bar
calculate the text of the
sets the extension contributor
sets the visibility of the sidebar
returns the handler expression
refresh the category
creates an image registry
returns the action set registry
returns the label of the current perspective
reset the color of the given code code to the given
returns the perspective that is currently being used
method for filling the guis track shell
returns the perspective for injecting the current perspective
returns the action that owns the given action
returns the source part of the workbench part
returns the show in target list
returns the working set manager
returns the working set registry
returns the intro registry
returns the operation support
returns the preference manager for the plug in
set the color of the given code code
returns the shared images
creates a shell
disposes all the shells
returns the theme registry
initializes the services
disposes the menu
returns the view registry
returns the show in part of the master view
returns the pane
attaches a reference to the
swaps the controls in the receiver
loads an image from the given splash screen
updates the menu bar
initializes the preferences store
returns true if this has been detached
swaps the font controls for the controls
returns the decorator manager
brings the given part to the top of the container
show the selected view in the graph
set the configuration element for this configuration
checks if redrawing or repainting is needed
controls the default values of the controls
returns the default orientation
sets the id
sets the name of the extension
checks if the command line is a valid locale
sorts the selected parts in the list
returns the orientation of the system property
this method is used to set the list of to be
returns a string representation of this object
returns the line orientation
this method creates the view of the given view
creates the progress indicator
returns the name of the application
returns the product name
updates the controls of the given class
this method initializes product info
returns the new instance of the wizard registry
detaches the given part from the list
updates font for the font chooser dialog
returns the import wizard registry for the current wizard
adds a detached part to the layout
notifies all registered listeners that the window has been opened
returns the export wizard registry
creates the page and the root of the perspective
returns the workbench window
returns the data location of the data
restores the tree selection to the selected file
set the location of the perspective to the perspective
notifies all listeners that a window has been closed
saves the selected tree to the current selection
find a part by its id
show the perspective bar
returns the default width of the
restores the tree expansion
returns the trim manager
updates the view
notifies all registered listeners that the window has been activated
find the first occurrence of the given marker
returns true if the placeholder has a placeholder
returns the perspective used to display the view
notifies all registered listeners that the window has been deactivated
disposes the editor
returns true if the given placeholder is a placeholder
returns the layout container
displays the font chooser dialog
disables the drag tool
returns true if the is
fills the menu bar with the specified
sets the initial states of the activity
updates the state of the activity
sets the stack
restores the default values of the
toggles the enablement of the selected items in the tree
handles the button details
trigger on the
returns the hints for this tag
returns true if the jsplit pane is part of the area
fills the action bar with the given custom action
creates a new
returns the extension point filter
returns the image descriptor with the given id
initialize the bounds
description of the method
returns true if the given string matches the pattern
logs the exception to the log
returns the activity image binding registry
returns the current category image binding registry
disposes the editor
zooms in on the given tile
returns the point that is used to compute the gef point
returns the activity definition by id
returns the extension point for the extension
forces the view to show no zoom
returns the initial size of the window
calculates the text of the text in the text area
updates the bounds of the map
returns true if the editor area is visible
returns the cool bar manager
returns the menu manager
returns the tool bar
resets the bounds map to the map
creates a new instance of contribution
returns the value of the element attribute
returns the id of the element
add a menu item to this menu
returns true if the current view is fast
adds an action descriptor to the action descriptor
returns the namespace of the declaring attribute
returns the namespace of the plugin
returns the namespace adapter name
creates a new working set page
returns the icon for this descriptor
returns the name of the updater class
creates a new working set element adapter
determines whether the current open window is an open window
create a new
returns true if the component is editable
checks if the is supported
adds a new group to the list
returns the description of the description
disposes all actions
adds a working set descriptor to this project
returns the default working set page
returns the working set descriptor for the given page id
returns true if the current working set has a new set of
returns the working set page for the given page id
load the current registry
checks if the given is moveable
returns the accelerator
add a category to the end of the list
sets whether the fast view bar view should be visible
adds a descriptor to the end of the list
adds a listener to this list
returns the part of the action set part of this extension
adds a new action set to the context
find a object by its id
remove the action set from the given desc
find a category with the given id
add an association to the action
find a category
find the action set for the given id
returns true if the current view is fixed
returns the miscellaneous category
returns the value of the fast view bar visible visible
reads the element from the given configuration element
saves the state of the view in the given memento
reads the working set from the given working set
reads the element from the given element
registers all registered plugin providers
load the registry from the registry
returns the top level nodes
restores the state of the filter actions from the given memento
adds a perspective to the perspective
revert the current perspectives to the given array list
create the empty wizard
deletes the given array list
sets the initial collection
deletes the perspective from the given model
adds a listener to the list of listeners
deletes the given perspective from the database
returns true if the editor is needed
finish all categories
finishes the primary page
removes all listeners from the registry
finishes the
loads the preferences from the preferences
returns the category of the given resource
removes all categories from the specified parent
reads the content of the given element from the
reads the and from the
loads the preferences from the file
returns true if the wizard has been read
returns the list of wizard elements
sets the layout data for this layout
deletes the custom definition
verify the default perspective
find the wizard element with the given id
reads the category from the given configuration element
returns the value of the boolean property
reads the given element from the current list of sticky
reads the given element from the current view
reads the views from the given layer
returns the flat category
adds a editor to the editor
clones the mapping
returns true if the current perspective is
compares the given list of strings to the given list
returns the original id of the original
disposes the toolkit
returns true if the document has the custom definition
returns true if the configuration element has the default flag
returns true if this is a predefined class
returns the fast view bar
removes the editor from the editor
sets the default editor
sets the editors list
sets the list of deleted editors
reverts to the predefined custom parameters
saves the memento to the given memento
returns true if the editor is declared as the default editor
sets the default editors
reads the from the given input stream
adds an element to the list
returns the label of the configuration
called when the user activates the perspective
adds a new editor to the registry
returns the path to the parent of this category
returns the perspective of the current perspective
returns the root path of the root directory
returns true if the element has an element
read the user account
returns true if the element has any elements
extends the given layout object with the given
returns true if the tag contains the given tag
clears the elements
process the action set
returns the class name of the current configuration
returns the label for the given keyword
adds external editors to the editor
creates a new
process the perspective binds to the given element
process the show show part of the given element
returns true if the plugin is visible
sets the visibility of the
process a global view shortcut
returns the file name
returns the action presentation
process the wizard shortcut
returns the image descriptor for the image file
set the tags include tags
returns the set of menu ids
initializes the
called when the user selects to deactivate the current active perspective
verify that the image descriptor is an image
this is a code imodel view code method
get the contributor of contributor
returns the editor part
returns the image filename
returns the context in the given input
returns the label of the editor
returns the launcher
fire a property change event
returns the namespace identifier for the current configuration
returns the action bar for this presentation
adds the actions to the list of actions
adds the static actions to the container
this method is called by the editor
returns the open mode of the editor
set the open mode
handles the events from the widgets fields
returns a string representation of this object
disposes this editor
guess the content type for the given file
creates the page and widgets the layout settings
returns the default image for the image
returns the label for the current user
creates a cool bar for the given
disposes the resources
returns the wizard elements
sets the primary
sets the wizard elements
registers the given extension object with the given
registers the specified collections element
registers the given to the
creates the tool bar
returns true if the browser is allowed to be used
returns the mapping for the given extension
finds the desired element upward for the given upward upward
sets the desired browser support
this method is called when the user is disposed
map the initial id to the editor map
creates the status line manager
sets the active part of the contributor
adds a child to this component
creates the status line
sets the message
sets the state of the view
shows the min or max
creates the options group
returns true if the current selection is currently selected
adds the book page book
this is a callback that will allow us
returns the tab folder
called when the user changes the page view
removes the book page book
updates the fast view bar
synchronizes the current page with the current page
synchronizes the book with the given book book
initializes the services
go to the selected item in the tree
inserts the given code tree item code into the tree
this function is responsible for loading associations for the given entity e
returns the index of the given editor
adds a trim to the given trim
initializes the command resolver
returns the mapping key for the given mapping file
disposes this part
disposes the control
returns the site
dialog to handle the destination browse button
rebuilds the editor map
disposes the resources
fires a property change event
returns the configuration element
returns the default image
rebuilds the internal editor map editor
returns the default title of the default
sets the site
saves the state of the memento
initialize the application colors
sets the title image
sets the title of the title
contributes to the menu
add the given code line code to the code status line code
this adds separators for editor additions to the tool bar
adds the given bar to the cool bar
get action bar
adds a listener to the list of scenes
initialize the page
initialize the action
sets the active editor
set the mappings of the file editor to the given file
handles changes to the selection changed event
posts the selection changed event to the selection
show or hide the heap
creates a new page
sorts the editors
initializes the page
creates the navigation buttons
this is a callback that will allow us
set the tree viewer
puts a file into the default map
disposes the editor
returns true if the page is already already in the page
sets the editor input
returns the adapter for the given property
puts a key value pair into the map
returns the adapter for the given adapter
returns the current part
returns the mapping file editor mapping file editor with the given key
returns the active page
toggle the visibility of the toolbar
returns the page site for the given page
returns the current page index
returns the extension name
returns the default page
returns the transfer data transfer
initializes the services
disposes the menu
get action bar
returns the page book
adds a cell editor to the control editor
returns the page rec
disposes the editor and releases all resources
returns the page rec
disposes the resources
fires a property change event
removes the cell editor from the editor
sets the code iaction code property
method when part activated
sets the cut action to the given value
method to handle the given part
sets the action that will be executed when the action is pressed
removes the editor from the mapping
this method is called when the part is closed
sets the action that will be pressed
creates a new container
sets the site
called when the part is deactivated
checks if the site is a site
sets the code iaction code property
sets the title of the dialog
sets the redo action
sets the title image
sets the tooltip for this tool tip
sets the current all action
fill the global view menu component
shows the busy status
sets the code undo action code property
set the title of the part
updates the enabled state of the actions
sets the content description
shows the bootstrap part of the host
returns the selection provider
returns the adapted by the given
parse the options from the given string
returns the package admin
runs the action
sets the selection to the current selection
returns the context
sets the context
fill the context menu
returns true if the given editor is pinned
fills the action bars with the specified
updates the action bars
creates the drop down menu
runs the uc
sets the context of the current context
adds the actions to the working set
sets the pruning history
updates the text of the text
this inserts the previous portion of the portion about
adds a list of items to the list
sets the working set to be used when creating the working
add the to the list of available phonemes
returns the list of viewable items
notifies the listeners that a new property has been
returns whether the active active view is active
saves the current state of the context in the given memento
returns the show dialog button
determines whether the given is a zoom zoom
the action has been activated
run the action
disposes the editor
returns true if the given category has already been registered
runs the action
returns the current selection
returns the selection provider
returns the structured structured selection
called when the selection in the workbench has been changed
sets the active state of the active active window
called when the selection of the selection changes
method to handle the given part
creates the menu
clears the cache
returns the structured structured structured structured structured structured structured structured structured structured
the code action code implementation of this
disposes of the menu
propagate the text of the property change event to the
sets the action handler to use for the given action handler
sets the text
append an accelerator to the dropdown
removes the current view view
returns whether the current view can run
opens the current perspective
runs the application
disposes the contributor
runs the action
enables the accelerator for the action
sets the page input
runs the uc
sets whether to replace the given code code with the specified
called when the is closed
method called when the part is activated
called when the user leaves the part
method called when the part is deactivated
this method is invoked when the property change
runs the handler
runs the specified event
returns the action handler
removes a listener from the list of listeners
removes a listener from the list of listeners
initializes the splash screen
returns true if the given selection is enabled
disposes the shell
returns the applications progress monitor
returns true if the given selection is enabled for a given
returns true if the given switch is enabled for the receiver
checks the elements of the given element
verify that the number of rows in the selection count are in
sets whether or not this decoration is enabled
returns the content assist assist assist assist assist assist assist assist assist
sets the foreground color to the specified color
returns the foreground color
sets the message rectangle
sets the progress bar
returns the content of this editor
updates the shells screen and updates the ui
returns true if the is a starting point
returns the activity manager
returns true if activity ids has changed
returns whether the activity has changed state changed
returns the activity
returns true if the default value is enabled
returns the activity requirement listener state changed
returns true if the activity pattern has changed
creates the prompt prompt preferences
returns the identifier
returns whether the activity has changed
sets the state of the activity button
returns whether the category activity has changed
computes the enablement state for the given
creates an image registry
returns the image registry
initializes the preferences store
initializes the plug in preferences
this method initializes the image registry
loads the preference store from the preference store
refresh the actions
saves the settings to the settings file
saves the preferences store to the preferences store
this method is called when the startup application is initialized
shutdown the service
updates the state of the state check based on the categories
this method is called when the plug in is stopped
clears the details dialog
returns true if the given category is locked
resets the perspective to the current perspective
returns whether the given object has a property page
returns the initial selections
show all editors
saves the editor part to the given editor
saves the current perspective to the current perspective
saves the perspective to the given
registers the action to the given code
returns the error handler
sets whether or not the editor area is visible or not
returns true if the given object is applicable to the given object
called when the job is early to start running the job
refresh the list of selected items
returns the part service
returns the default perspective id
resets the toolbar layout
returns the default page input
sets the working set
returns the preference page id for the main page
returns the timestamp timestamp
saves the state of the shape in the given memento
override hash code
returns the selected status info
returns the comparator for the viewer
shows the view
returns the status of the current selection
returns the context manager
sets the trim size
returns the trim size
calculates the size of the trim size
returns whether this range is vertical
hide the fast view
returns the control modifiers
sets the control modifiers
toggles the active view
sets the spacing between the left and and
sets the margin of the page
sets the size of the area
sets the provider
sets the intro part of the applet
updates the tab list pane
returns true if the timer is running
returns the presentation id
cancel the cancel
updates the job info map
adds a listener to the registry
returns the title of the main window
returns true if the job is currently running
refresh all children of the tree
remove the job info from the queue
adds a job info to this group
checks if the job is currently displayed
this method is called when the user selects the previous item
selects the next item in the virtual file
passing the focus request to the viewers control
refresh all children of the tree
updates the visible status of the items in the tree
returns true if the given element is finished
the perspective
add a perspective to the list
returns an iterator over the list of opened files
returns the action for the given id
saves the state of the preferences
remove a perspective from this window
returns an image descriptor for the image
swaps the current perspective and the current perspective
returns true if the queue is empty
saves the items in the given table
returns the active perspective
opens a dialog to choose a file type
returns true if there are any items in this collection
returns the next active active perspective
creates the content of the table
returns the selected text
returns the number of opened files in the list
sets the active perspective
opens the open instance of the iproject
checks if the given object is a valid expression
updates the availability of the current status
adds a category to the tree
saves the history of the selection in the history
adds a category to the given text
tests that the simulator is closable and makes sure that decorators are
set the content providers content providers content providers content providers
creates the dialog to create the dialog
creates the theme description text
disposes this object
creates a new identifier identifier
removes all items from the list
sets the active part of the facade
returns the drop target
update the state of the editor
creates the initial action set
disposes the view
returns true if the view pane is showing
returns the pane of the given reference
updates the view sash bounds
updates the view
updates the image
handles the workbench to change the text of the current window
returns an image suited for the given icon
creates the controls for the sash
saves the state of the view to the given memento
returns the current snapshot of the current context
returns the full context snapshot
returns the set of open actions set for this action
returns the show in lists of the selected file
returns the known elements
closes all open editors
sets the visibility of all pins
returns whether the portlet is ok
disposes the toolkit
configures the shell
sets the tab style
sets the position of the tab
busy and return the selected
saves the state of the dialog settings to the settings dialog
disposes the toolkit
sets the background color of the radio button
updates the state of the active state
adds a new perspective to the list
returns whether this extension points to the extension points
returns the composite
disposes this editor kit
fills the menu with the part of the part
returns an instance of the registry
disposes the menu
this method initializes j progress
detaches the given part from the view
checks if the given string matches the pattern
updates the action bar
adds a descriptor to the end of the collection
find a by its id
reads the element from the given element
returns the top level nodes top level nodes
finish the primary page
find a wizard element
checks if the given part is visible
returns true if the editor is declared as the default editor
tests that the is opened
opens the web browser
initializes the command resolver
disposes all the editor parts
disposes the given part
sets the context of the current context
returns the adapter for the given adapter
stops the timer
stops the thread
disables the service with the given parameters
returns the configurator associated with the given
this method is called when the plug in is stopped
sets the session
returns the current session
returns the current step number
saves the current user to the close dialog
configure the shell
returns the initial size of the window
returns the table
called when the cancel button is pressed
called when user clicks on the user
returns the map of users to use
sets the background color of the cell
bind control to a cell
refresh the display
returns the control of the ith cell
removes control from cell control
returns the hash code for this object
returns a string representation of this object
sets the editor
disposes the toolkit
disposes the server
the action has been activated
activates the continue button
returns the singleton instance of this class
passing the focus request to the viewers control
returns the
starts the server
returns the map of users to the server
stop the server
disposes the toolkit
gets the value of the presence manager property
returns the default properties
returns the authentication mode
sends a service message to the server
checks if the user handed in the user list
send a service to the server
sends a serializable object to the client
send serializable serializable serializable object
called when the session ends
called when the session starts
called when the user has finished
handles a connection event
returns the number of clients connected to this client
get the user id for the given user
returns all the users in group
adds a listener to the list of listeners
notify all registered listeners about the event
notify all listeners that a client disconnected
toggle the visibility of the toolbar
returns the connection time
sets the connection time
adds a listener to the session
returns the parameters of the theme
removes a listener from the list of listeners
returns the directory where the directory is deployed
returns the executable path for the given application
returns the executable path
returns a url for a given
called when the pause action is interruptible
handles the next record action
starts the connection to the server
stop the thread
creates the connection to the wizard
opens a new wizard dialog to the user
returns true if the wizard can be executed
this method is used to convert the value to the
this method starts the server
returns the nick name
sets the id
returns the text in the
returns the nick name
sets the nick name
returns the password of the user
sets the authentication mode
create the connection to the database
create basic authentication page
create the nick name authentication page
create a standard authentication page
creates a summary page
the step is not
returns the configuration url for the current configuration
sets the tab tab visible
returns the name of the main server
returns the page description
appends a message to the end of the message
handles the message received from the text box
sends a message to the server
sends a message to the server
sets the text
returns the gap between the text and the gap
create a new instance of a user
sets the gap between the icon and the text
sets the placement of the text placement
sets the alignment of the text
returns the
returns true if the connection is connected
sets the left margin
sets the right margin
creates the advanced options area
sets the top margin of the top of the stack
fills the status line with the specified code status code
sets the bottom margin of the bottom border
sends a message to the server
opens the dialog to choose the connection information
this method is called when the user chooses the server to return
returns the shared core object
returns the number of the current step
appends the given message to the end of the text area
handles the reception of a message
sets the background color of the specified row and column
called when user clicks on the user
configure the shell
called when the cancel button is pressed
the user pressed the ok button
returns the name of the user
opens the connection to the client
handles the of a client
removes all the columns from the table
loads the images
set the enabled state of the radio buttons
sets the table
updates the group groups
returns the row number of the given client
adds a listener to the list of listeners
starts the server
stop the server
checks if the user handed in the user
dispose of the resources
returns a xml representation of this object
return the tail string
handles the given connection event
handles the quick fix chat
called when cancel is being removed
creates the buttons
runs the file dialog
returns the list of all the tasks
adds a tool configuration to the tool
sets the active view
open a rtf file to the given rtf file
activates the continue button
updates the red component
sets the active view
passing the focus request to the viewers control
returns the parameters of the theme
returns the parameters of the theme
sets the user name to the given username
clears all the text in the panel
sets the last name of the user
sets the first name of the student
method to be called when a school is located
sets the password to be used for the user
sets the default group for the given group
shows the student
disables the student description
enables the of the student
called when the session ends
returns the background color of the view
returns the background group color
close window close window window close window window
called when the session starts
post window open window
opens a directory to open a new directory
writes the current xml document to a jaxb object
reads the class name from the xml file
sets the class name
sets the school type
get the list of students of the
sets the students list
enable or disable the active button
converts xml document to xml
returns the default group
sets the default group
returns a string representation of this object
creates a summary page
called when the next button is finished
we are the server
prints a message to the user
sends a message to the client
updates the last changed time
sends a message to the server
sends a message to the server
sends a message to the server
sends a message to the client
sends a message to the client
creates the form content
checks if the text is valid
create the
register a server to the server
this method is called when the user selects the table
comm comm comm
closes the client
called when the engine is done
creates a new border layout object
create a new environment
creates the menu bar
creates a panel with the current panel
removes the selected item from the list
opens the server
invoked when an item has been selected or deselected by the user
sets the paths to the current file
called when the caret position is updated
replace the regexp with the given regexp
makes the frameset html frame
deletes all the files and directories in the directory
ensures that the messages are visible
show the exception
returns a thread that represents a string
make a tree model
creates a tree node for a given node
returns a thread that represents a string
displays a message at the current position
trim the string to the given string
resize the table
displays the scores of the table
clears the data
sets the value at the given position
sets the value of the table cell at the given row and
this method initializes this
this method initializes j content pane
this method initializes j button home
this method initializes this
this method initializes this
this method initializes j button cancel
this method initializes j check box
this method initializes j text field reservation number
this method initializes j button home
this method initializes j text area cancel reason
this method initializes this
this method initializes j radio button
this method initializes j radio button1
this method initializes j radio button2
this method initializes j text field name
this method initializes j text
this method initializes j check box
this method initializes j text field email
this method initializes j button cancel
this method initializes this
this method initializes j button home
this method initializes j text field details
gets the request
sets the value of the loan request property
create an instance of
gets the response
sets the value of the loan response property
gets the ci
sets the value of the ci property
returns the rate of the
returns the credit score
sets the value of the property
sets the value of the credit score property
returns the history length
sets the value of the history length property
returns the prime rate
sets the value of the prime rate property
create an instance of
create an instance of
create an instance of
gets the loan request id
sets the value of the loan request id property
returns the loan amount
sets the value of the loan amount property
returns loan duration
sets the value of the loan duration property
gets the nro value for this
sets the value of the nro cuenta property
gets the bank id
sets the value of the bank id property
sets the value of the rate property
create an instance of
returns the loan response
sets the value of the loan response property
gets the loan request
sets the value of the loan request property
gets the info request
sets the value of the info request property
gets the loan duration
sets the value of the loan duration property
sets the value of the cost property
gets the value of the p rate property
sets the value of the mail property
sets the value of the p rate property
gets the cuenta
sets the value of the cuenta property
create an instance of
gets the info response
create an instance of
sets the value of the info response property
create an instance of
adds a message to the message
adds a message to the message
adds a new message to this session
resolve the given view name and returns the given view name
returns the diagnostic message for the given request
creates a file
creates a file with the given name
checks whether the data store has been queued items
returns the data source for the given file
unpack a file
gets the crs code value for this
returns true if the crs is supported
returns whether or not the geometry is valid
get the shapefile data store data store
create a temporary directory for the current file
creates a new
create a fill style
returns the number of classes that are being analyzed
sets the number of classes in the list
sets the collection
returns the species
set the child records
returns true if the given survey is eligible to be eligible for
returns the accuracy of the meters
gets the value of the held property
returns the name of the region
returns the boundary multi polygon
returns the date when the user has been set
returns the time of the last time
returns the time as a date
returns the last time as a date
gets the value of the first appearance property
gets the value of the last appearance property
returns the behaviour of this state
gets the value of the property
checks if the metadata is not duplicate
this method is responsible for creating the content of the portal
this method initializes the content of the content
creates a new folder
creates a placemark
creates a placemark
writes the xml representation of this object to the supplied
writes the to the output stream
returns the hash code value for this object
set the count of rows to be used
sets the join criteria
sorts the hql query
builds an hql hql query for the given hql
returns true if the string is empty
checks if the message is a valid header
set the property name
create a new attribute form field
returns the parameter value of the parameter
creates a new
returns the file name of the file
returns the display name
returns the url for the theme
returns true if the content type can be edited
write the json response to the given http servlet request
updates the location of the given location
creates a new location
register a reference to the persistence manager
deregisters the entity reference
returns true if the entity is already registered
returns the message with the given key
returns the message with the given key and value
gets the authorized access value for this gss acl
returns the value of the specified key
gets the value of the add or update attribute property
create the mock http servlet servlet request
remove all records from the given record
returns true if this has a
loads the items from properties
persist the properties to the file
determine if the given record record is a duplicate of this record
checks if the given format is a valid file
returns the native item for the native item
converts a to a string
normalizes the given string
returns true if native item is available
returns true if the native item is available
returns true if the native item is available
returns the native item for the given native item
returns an iterator of the given native item
returns an iterator of the native
returns true if the item is deleted
creates a new
calculates the minimum frequency for the given number of nodes
returns whether the specified number of files should be marked
make a copy of the node
checks if the given method is not a constructor
checks if the given method is to intercept
this method is called when the method is called
generate the first node in the map
adds a row to the flex table
creates a string representation of the given method invocation
add a bean to the phase
initializes the beans in the bean
this method is called by the pom
test that match the filter
test that the filter not match the filter
sets the to the given string
prints a string to std
set the endpoint address for the specified port name
publish a topic to the given topic
returns the message id
subscribe to the event handler
returns the id of the topic
subscribe to the server
unsubscribes a route from the network
publish a topic to the event logger
subscribes a listener to the event bus
unsubscribes a listener from the subscription
publish a topic to the server
detach an event handler
disconnects the connection from the server
unsubscribes a given message from the jid
creates a journal creation command
creates a delete route command
this method is called when the user is connected to the server
add a new connection to the queue
returns true if the bus is a main bus
this method is called when the is removed
returns true if the bus is a main bus
gets the cast from the return
converts the value to a method object type
resets the
returns the set of all mapping intervals
returns the mapped code reference code
checks if the x and y coordinates are in the
checks if the rectangle intersects with the given point
returns true if the interval intersects the interval
this method is called when the game is paused
starts the tick
called when the tick is removed
this method prints the caller to the given method
prints the return target to the target
this method is called when the next tick is pressed
starts the
called when the document ends
called when the document starts
returns the value of the document
handles errors from the parser
called when a warning occurs
receive an object for locating the origin of sax document events
returns the number of children of this node
returns the child of the child at the specified index
test of push method of class stack
test of peek method of class nii
test of pop method of class inverse iterator
test of method of class org
gets the fetched content
returns the fetched content of the
notifies the listener that a request has been cancelled
this method is called when the panel is loaded
called when the pie chart is loaded
test the default value
a default verifier for the localhost
flush the digit buffer
clears the database
called when the user modifies the value of the
this method is called when the server is received
inserts a phrase into the database
sets the rich text widget
returns true if the database is enabled
starts the main loop
build the table row
adds a change listener to the list of listeners
returns the body of the html body
this method is called when the is removed
returns the name of the text
stop the calculation
synchronize the notes from the given
sets the intial content of the widget
sets the name of the text
sets the name of the options to be used for the
captures the capture parameters from the given resource
sets the version of the application
notify all listeners that have registered interest for
sends a new data request to the server
set the location provider
returns the timestamp
sends a request to the server
creates a new blob builder object
sends a post data to the server
creates a new canvas
update the
opens a file to open the given open file
creates a new
creates a new
create a request with the current request
create a local server
opens the specified list of open files
creates a new
this method is used to create the manifest for this resource
this method is called when the server is running
this method is called when the server is running
ensures that the resource manager is currently being managed
test method for net
p get name method
p get required cookie method
test of abort method of class net
this is a polymorphic method that tests the get manifest url method
test of capture file method of class net
test method for
check if the managed resource is enabled
create a managed resource
test method for
test method for
p create a new managed instance of the managed resource store
create a managed resource
test method for
test method for
test of get name method
create a resource store string
this is a platform method that returns the
test method for
test method for
test of is enabled method of class com
create a string for the resource store
test method for
test method for
ensures that the managed resource managed resource store is managed
check that the database doesnt exist
test method for
check that the database is closed
if the database is null it is a null value of null
test method for
test method for
check that the database array is not empty
test of set enabled method of class com
if the test execute is true then the database will be updated
test method for
this method is used to test the get field as a byte
create a new blob builder
create a canvas with the current canvas
check that the database is create correctly
close the database
test method for
create a local server
test method for
test method for
check that the create method is a
remove a managed resource store
p get build info
get the last inserted row id
test method for
this method is used to test the get field as a date
test of get version method of class version
this method is used to remove the managed resource store
check if the permission is granted
remove a local test from the store
test method for geo version
remove a local test case
test method for geo version
test method for geo version
test method for
this method is used to test the get field as a short
test method for
test method for
test method for
check if the next row is valid
test that the get message method works with the null
this method is called when the user selects the worker
create a new worker from the given string
clears the search library
removes all of the items from this collection
sets the restriction
sets the search library name
sets the search type
returns the published date
returns the latitude of the point
returns the estimated result count
returns the longitude of the current point
removes all from this group
clears the file type
clears the image size
sets the value of the property
sets the value of the file type property
sets the size of the image
sets the type of the image
sets the safe search
returns the duration in milliseconds
sets the result order
returns the published date
returns the rating of the rating object
returns the widget to display on the thumbnail
returns the rating of the rating
returns the number of views in the view
add a code operator code to the code search operator code
clears the results
adds a new
add a new search
sets the draw mode
sets the label for the current label
set the label for the
gets the search control
sets the timeout interval
executes the query
set the address lookup mode
sets the center of the point
sets the center point of the point
returns the cursor
goto the page
removes a search search result handler
execute the given query
removes a keep handler
sets the query added
sets the size of the result set
sets the user defined label
test method for
sets the api access key
set the value of dav api application name
sets a query parameter
sets a request header and returns it
sets the base url
sets the scopes of this scope
login to the user
initializes the transport
expand the url
send a message to the server
sends a message to the server
send a message to the server
send a message to the server
send a message to the server
fires the selection event
returns the java script object
returns the of this
create a new simulation
load the data from the map
this method is called when the is
tests the options table setting
tests the pie chart
this method is called when the is
loads the given runnable
create the
load the data from the database
tests the options
create the chart
a test for custom bug
show the
tests the abstract map options with a map
loads the chart data
create a chart
create the
tests the pie chart
assert that the current document has the correct error
create the chart
this method creates a chart with the current data
creates the language detection button
initializes the form controls
creates a panel control panel
populates the list panel with the language
the event method for the event wrapper
returns the type of the item
tests the language
creates a listener for the event listener
test that language detection mechanisms are not correctly handled correctly
test the translation method
tests that the is enabled
test the translation method
tests translation of the option
test method for
this method initializes this
adds a handler to the list
adds a listener to receive event from this handler
adds a handler to the list
adds a handler to the list
adds a handler to the list
adds a handler to the list
adds a handler to the list
adds a handler to the list
adds a handler to the list
adds a handler to the list
adds a handler to the list
adds a handler to the list
adds a handler to the list
returns the map event
removes the handler from the handler
trigger a new trigger event
trigger a new trigger event
trigger a new trigger
trigger a new trigger event
trigger a new trigger event
trigger a new trigger event
closes the window
trigger a new event
trigger a event
trigger a new trigger event
returns the point coordinate
trigger a new trigger on the network
returns the selected tab
overlays the overlay with the given overlay
overlays the given graphics overlay with the given point
returns code true code if this is a visible peer
trigger an outline event to be triggered
maximizes the window
trigger a new trigger event
opens the window with the given lat
opens a window marker at the given window
returns the default bounds of the
returns the default center point
returns the default span of the overlay
returns true if the text is visible
this method is called when the viewport is dragged
initializes the overlay overlay
returns true if the layer is hidden
show the layer
returns the layer layer of this layer
sets the visibility of this sprite
adds a marker handler to the end of the marker
restores the peer to the current state
adds a new polyline handler
adds a polygon to the list of handlers
programmatically selects the specified tab
sets whether the maximize button is enabled
adds a marker handler to the end of the marker
sets the visibility of this window
adds a polygon to the end of the polygon
adds a polyline to the end of the polyline
adds a polyline to the end of the polyline
adds a polygon to the polygon
adds a new polyline handler to the list of handlers
closes the open window
adds a polygon to the list of handlers
attaches the max content handler to the end of the window
attaches the content widgets to the current content
deletes a vertex from the graph
returns the bounds of the wall bounds
returns the area of this area
initializes the info window and show it
returns the length of the polyline
returns the bounds of the
initializes the info window with the maximize parameters
returns the position of the vertex at the specified position
returns the vertex at the specified position
initializes the info window and avoids maximize
returns the number of vertices in this graph
returns the number of vertices in this graph
initializes the info window
insert a vertex at the specified position
initializes the info window
returns true if this node is visible
returns true if the component is visible
removes a polyline handler
removes a polygon from the polygon
removes the given handler from the list of handlers
removes a polygon click handler
this method removes a traffic overlay handler
sets the visibility of the overlay
returns the widget
returns the lat
removes the end line handler
returns the code marker code that represents the code for the
returns the code code that this event originated
returns the copyright of the copyright
returns the code tile code that originated this event
removes a polygon handler
returns the overlay
returns the zoom level of the zoom level
returns the value of old zoom level
returns the polygon
returns the window
removes a polygon line
returns the originator of this event
adds a marker mouse up to the marker
returns the type of the sender of this event
removes a mouse out handler
removes a polygon out of the polygon
removes the polyline mouse over the handler
returns the code overlay code object that represents the
returns whether the data has been set
returns the type of this map
removes the polygon mouse handler
removes a code code handler from this code polyline
adds a marker handler to the end of the marker
returns the copyright collection of the event
returns the user instance of the current user
removes a polygon from the list of polygons
returns the overlay to which this overlay is connected
returns the traffic in view
returns the location of the
sets the drawing enabled
returns the lat
sets the drawing enabled
set the drawing enabled
set the drawing enabled
sets whether to automatically handle the
sets whether the component should be enabled or disabled
close the window
sets the for the current line
set the enabled state of the
called when the component is resized
sets the stroke style for this polyline
sets the polygon style for this shader
returns the lat
sets the visibility of this widget
sets the stroke style for this polygon
returns whether this polyline supports decorations
sets the visibility of this component
returns the title of this marker
adds a control to this control
returns whether this polygon supports hide decorations
add a control to the control
returns true if the component is visible
adds a widget to the map
removes a marker handler
removes a marker from the marker
removes the ending marker handler
sets the alt text
sets the error message to be displayed in the message
sets the link color
sets the maximum resolution of the dropdown
sets the minimum resolution of the component
removes a marker drag handler
set the short name of the code short code
sets the text color of the text
sets the size of the tile map
sets the url arg
removes the marker drag handler
sets the map type
sets the zoom level
returns the value of the code abstract java code property
adds a copyright to this copyright
this method adds a new window to the list of handlers
sets the maximum content size of the window
sets the maximum content of the window
returns the copyright notice for the given copyright
initializes the
sets the maximum title of the window
sets the maximum title of the given widget
sets the maximum width of the window
clears the list of objects
returns the html
returns the distance between the peer and the current
returns the duration of the peer
set the flag
sets the locale of the user
sets the flag for the next
sets the value of the retrieve steps attribute
set the travel mode for this robot
returns the html for the
get the country code
returns the cache
this method adds a new window info to the list of handlers
this method is called when the peer locations is called
removes the marker mouse down event handler
adds a new relationship to the map
get the locations of the locations
this method is called after the user is connected to the
remove the given relationship from the map
returns the viewport bounds
resets the peer to the initial state
removes a marker mouse out handler
sets the viewport coordinates
called when the of the
returns the bounds of the
returns the id of the peer
returns the minimum zoom level for the current level
returns the text
removes a marker mouse marker
removes the marker mouse released event handler
adds a map to the list of handlers
adds an error handler to the list of handlers
removes a marker handler
returns the maximum resolution of the tile
returns the minimum resolution of the tile
adds a new handler to the list of handlers
initializes the new layer
adds a pitch event handler to receive notification of the
sets whether the slider is enabled or not
adds a new camera to the platform
adds a zoom changed event handler to this
sets the image url
returns the alt text
checks if the window is resized
sets the point to the point where the is located
adds a to the end of the
returns the bounds of the map of the given geometric bounds
get the latitude of the
returns the error message
returns the id
returns the
returns the link color
sets the visibility of this component
hide the
returns true if the component is hidden
shows the map
pan the current position to the given
removes the last element from this list
returns the name of the code code
shows the content of the
adds a map to the list of handlers
returns the peer of the peer
removes the specified handler from the list of handlers
initializes the end of the drag end
removes a pitch changed handler from the list of registered
returns the projection of this projection
removes the yaw event handler for this handler
initializes the marker section
returns the zoom level of the given region
removes the zoom changed handler from the map
sets the location and to the given lat
returns the text color of the text element
initializes the marker line
set the
returns the size of the tile
adds a handler to the map
set the user photo
initializes the drag marker
returns the url arg
show the peer
initializes the error handlers
initializes the drag region of the drag
initializes the instance of the init handlers
initializes the init parameters for the map type
initializes the pitch changed event handler
test to ensure that the maps map is ajax
initializes the marker info for the marker info
initializes the yaw of the handlers
adds a new handler to the end of the handler map
initializes the map of zoom factor changed event
initializes the marker info window
initializes the marker info window window
initializes the marker mouse down marker
adds a new handler to the map
initializes the marker mouse marker
initializes the marker mouse pointer over all listeners
initializes the marker mouse mouse up handler
adds a new handler to the map
initializes the marker
initializes the marker visibility
tests the
tests the
tests the point function
tests the polygon count
tests the polygon with options
tests that the polygon can be used as a
tests that a polyline has been added to the polyline
tests that a polyline has been added to the polyline
tests that the polyline has been added to the polyline
tests that the polyline is a polyline
tests that a mouse dragged over the mouse over the
create a new
overlay overlay to be
overlay options for the traffic overlay
overlay overlay
tests the traffic overlay changed
test the icon default constructor
test the icon from default
load the
tests that a polygon is canceled
tests polygon
tests that the polygon is correct
tests the polygon and the polygon
tests the polygon mouse over
test method for
tests the of the
tests the of a
tests the of the
adds a map move to the end of the handler map
tests the of the polyline vertex
test that the browser is disabled
adds a map move handler to the map
adds a handler to the map
adds a map to the map map
adds a map to the map
adds a map to the end of the map
adds a map type to the map
adds a map type changed event handler to the map
adds a map zoom end handler to the map
test of get method of class org
test that the is rejected
test a
test
adds a overlay to the overlay
test
check the size of the map
test of get method of class org
test the location and returns the location
removes all overlays
closes the window
convert a pixel to a lat
convert a pixel coordinate to a lat coordinate
converts a lat to a coordinate of the lat
converts a lat lon value to a left corner coordinate
returns the bounds of the
returns the bounds of the map of the map
returns the center of the map
returns the map of the peers
returns the drag object
this method is called when the instance is about to be
returns the info window
returns the pane to display the given map pane
returns the zoom level of the current view
installs the keyboard handler
returns true if continuous zoom is enabled
returns true if the zoom is enabled
returns true if the component is draggable
returns true if the window is enabled
returns true if the zoom is enabled
returns whether the wheel zoom wheel is enabled
called when the component is resized
pan the pan position by the given offset
pan the camera to the given position
creates a box to be used for the panel
remove a control
removes the info window close handler
this method is called when the window opens the window
removes a map add handler type handler
removes a map add overlay handler
removes all overlays from the map
removes a map click handler
removes a double click handler from the map
removes a map drag end handler
removes a drag handler handler
this method is called when the mouse is dragged
removes a mouse mouse move handler
removes a map mouse out handler
removes the mouse mouse over handler
removes the handler that is notified when the map move is ended
this method is called when the handler is about to be moved
removes a map move start handler
removes a map remove handler map type handler
removes a map remove handler from the map
removes the mouse right click handler
removes the given map type from the map
removes the handler that is notified when the map is changed
removes the zoom end handler
remove the given overlay from the overlay
this method is called when the last position has been saved
saves the current position to the current position
sets the center of the map
sets the center of the map
sets whether the continuous zoom frame is continuous
set the map of peers to be used for the map
sets whether the mouse double is double clicked on the screen
sets whether this component is draggable
sets whether the bar is to the
sets whether the info window displays the window window
enables or disables the scroll wheel zoom method
set the ui object for this view
this method is called when the is
set the zoom level for the camera
increases the zoom level by one
adds a widget to the container
initializes the info window
initializes the info window and exits the application
initializes the info window
initializes the map map map map type map
initializes the map map
initializes the map of overlays
initializes the handler for map click handlers
initializes the map map
initializes the end of the map map
initializes the map of handlers
initializes the map of start handlers
initializes the mouse handler move handler map
initializes the map mouse out of the map
initializes the map mouse disks handler
initializes the handler map
initializes the map move handler
initializes the map move start handlers
this method initializes map remove map type
initializes the map map
initializes the map map
initializes the map map changed handlers
initializes the map map map
close the monitor
kills the current output stream
closes the thread
writes the given text to the queue
starts the monitoring thread
close the thread
writes the current thread to the stream
starts the monitoring thread
writes the queue to the next element
close the input stream
checks if the architecture is already in system
returns the architecture name
build the build file
returns the description of the description
returns the name of the configuration
returns the os name
returns the version of this entry
select the
displays a message to the user
this method is called when the model is loaded
gets the fleet id
sets the fleet id
returns the planet id
sets the planet id
returns the
sets the
returns the
sets the
returns the
sets the
sets the
returns the
sets the
returns the
sets the
this method is called when the eye is removed
load the from the database
set the pid
returns the
sets the
returns the
sets the
sets the
returns the
sets the
returns the
sets the
gets the value of the cv property
sets the cv value for this
returns the
sets the
returns the food
sets the food
sets the available available time
returns the
sets the credits value for this product
initializes the tool tip
invoked when a key has been typed
called when a key has been pressed
invoked when a key has been released
invoked when an action occurs
init method for this filter
return a string representation of this object
adds a new stream to the zip file
add a stream to the file
returns the is optional
sets the resource enabled property of this resource
enables or disables all resources of the resource
puts a value into the cache
remove a key from the cache
clears all the data in this service
returns the resource key for the given resource type
generate the xml output for the given xml element
generate the classfile instructions for this package
set the templates cache
find the first occurance of a query
gets the value of the property
count the query count
returns the value to which this map maps the specified key
puts a value into the cache
removes a key from the cache
clears the list of all the elements
returns true if the exception is thrown during the
returns the entity
stores an entity into the dto
deletes an entity
deletes the given keys from the database
count the number of the query results in the query
returns the sql condition for the given condition
this is the entry point method
clears the cache
returns the templates for the given source code
returns the template with the given key
adds a template to the list
clears the current state
returns the cache with the given key
puts a template in the cache
validate the xml
validate the input source
validate the input xml
this method is used to parse the file
validate the input source
returns true if the message is valid
returns true if the exception is invalid
returns the exception
called when the start element is called
called when the end of an element is encountered
receive notification of character data
handles sax warnings
handles sax errors when a recoverable error occurs
this method is called when the exception handler is encountered
this method is not supported
executes a prepared statement
this method is called to parse the tree
sets the datastore service
prepares a query for a query
parses a query and returns a query
returns true if the query is multiple queries
returns the fetch options
returns the level of the
returns the uri of the service
sets the format factory
set the value of level
set the rate of the synthesizer
returns the slope of the slope
sets the slope of the slope
returns the degree degree of the rotation
sets the degree of rotation
set the layers
returns the transform of this node
sets the format map
set the transform
returns the image record associated with this
returns the scaling factor for the scale
sets the scaling factor for the plot
returns whether or not the is used
sets the dimensions of the
sets whether or not the is used
returns the image record
gets the value of the property
sets the
gets the progression order
sets the progression order
returns true if the is
sets the
gets the packet division
sets the packet division
returns the number of levels
gets the value of the code block size property
get the image record associated with this
sets the levels
returns the writer object for the given format
processes a buffered image from a stream
returns a writer for the given format
sets the code block size attribute of the code block object
get the reader object from the format and return the
sets the map of
returns the mimetype of the mimetype
sets the mimetype of this attachment
returns the format properties
returns the quality layers of the current layer
writes the buffered image to the given stream
set the properties format
set the quality layers
writes the buffered image to the given stream
set the properties to be used for the given properties
returns the number of layers in the
writes the buffered image to the given stream
writes the buffered image to the given stream
writes the image to the given stream
set the properties to be used for the given properties
sets the properties to be used for the given properties
sets the layer count
writes the buffered image to the given stream
opens the image
opens the image
opens a buffered image to be used as a buffered image
opens a buffered image to be used in the
opens an image from the given input string
opens an image from an input stream
opens the tiff image
sets the number of channels
writes the buffered image to the given stream
opens a new image in the input and returns it as a
this method is used to open a buffered image
this method performs the actual rendering of a buffered image
setup the properties object
sets the props map props
returns true if this entity is
returns true if this entity is a
sets the props properties
reads the and writes it into the output stream
removes all the elements from this collection
remove the first occurrence of the given element
appends the next to the tail of the list
returns the name of the view
sets the views
this method is used to set the default view name
reads the result from the result set
reads the result from the result set
append a sql to the sql statement
populates the database with the given connection
returns a connection to the database
append a sql string to the sql statement
get a connection from the database
get a connection from the database
sets the connection pool
rolls back all changes made since the previous connection is
returns the normalized string
commit all changes made to the connection
returns the login timeout
returns true if the given java name is already registered
records a sql where clause
clears all warnings reported for this code connection code object
inserts a new element into the buffer
returns true if the given xml name is already stored in the
sets the login timeout
close all connections and closes the connection
returns the name of the given java class name
returns the log writer
returns a new prepared sql query with the given prefix
returns the name for the given xml name
bind the datasource to the database
binds a name to a name
close the connection
parses a boolean string
binds a name to an object
serializes a object to a string
serializes a object to a string
convert an object to an xml string
sets whether the field is a key field or not
register factories to the factories
register a factory for the given factory
returns the class name of the object
add a new field map to the fieldset
retrieves the current catalog
this method is used to convert the value to a simple element
retrieves the holdability of this code result set impl impl code object
sets the setters
fills the collection with values
sets the table map
retrieves the named object
returns a string containing all the fields in the table
lookup the named object
traverses the given object and returns the
returns true if the given type is a primitive value
returns true if the object is referenced
returns a sql select statement that is used to create the
returns the reference id for the specified object
rename the named object
returns true if the object is a serialized object
rename the object
unbinds the named object
this method is used to open the tag
unbinds the named object
resets the registry
create a new sql delete statement
writes a tag to the given string buffer
rolls back the given savepoint
computes the difference between the current time and the
checks if the class name is an xml file
increases the number of months in the
this method is used to set the amount of weeks in the
checks if the class is canonical
returns the duration of the duration
sets holdability of result set holdability
adds the given map to the map
add a number to this time span
returns the
indent the content of the line by given depth
adds a duration to this duration
sets the
compares this duration to another duration
initializes the
creates a savepoint object
compares this duration to another time duration
add a new
creates a savepoint with the given name
sets the format
returns the time in milliseconds
returns the format for the date
sets the type map
returns true if the property is
returns the number of seconds since january 1 1970 00 00 00
compares this object with the specified object for strict
sets the format to use for the format date
extract a long from a string
returns a string representation of this object
compares this date time to another date time
returns true if the given class has a accessors
returns the default jdbc format
sets the default jdbc format
returns whether the close is allowed
returns the accessors for the given type
lookup the time zone
sets whether the close button is allowed
returns the timestamp of this object
add a accessors accessor
returns the millisecond value of the time
returns true if the is null
returns the
creates a new secret cipher
converts this date to a date
returns the weekday
sets the object
sets the nulls
appends a string to the end of the buffer
returns the binding for the given binding
insert a string into the buffer
appends the given code string code to this object
inserts the given object into the list
test the validity of the datetime
test the zone diff
test the zone override
returns the string representation of this object
test format override
test timezone and format method
returns the ignore invocation target
return a new time zone
adds all bindings to the list of bindings
clears the bindings
returns true if the is
set the length of the
sets whether invocation handler should be ignored
format date time format
test of set method of class nl
test streaming and test
test the output buffer
returns a string containing the values of the
returns whether or not the code code property should be ignored
creates a copy of this date time
tests the string method
test of zone method of class
b note b the equals method
the copy method encrypt the string
sets whether access to the wrappers of code code should be ignored
tests date conversion
test that a parameter is not readable
returns a string representation of the time zone
tests the key stroke
tests the of the
tests the encryption mechanism
tests the mechanism to encrypt the encoded
returns a string representation of the time zone
this method is used to set the encoded data for the
this method is used to set the encoded data for the
formats a time zone to a string format
adds a duration to this duration
add a new time duration to the time duration
test method for
adds a new to this currency
shift the shift
returns the weekday in the format
returns the number of seconds
test method for
returns the millisecond duration of this object
returns the number of nanoseconds
test method for
compares the specified object with this date time
returns the configuration object
test for date date
test method for
test the first time in time order
test of m date method of interface java
test of format date method of class org
init method for this filter
returns the session associated with this session
creates the select model
returns the icon used to represent the image
sets the icon used to display the icon
returns the user
sets the user
set the main form
returns the controller
get the service
returns the costs service
create a button with given caption and add it to the
returns the user
init the components
returns the login context
sets the login context
create a button with given name and button
create a new button with given caption and add it to the
create a button with given tree and parent
create a button with given caption and add it to the button
create a button with given caption and add it to the button
create a new button with given caption and add it to the
creates a chart
creates the and initializes the
begin uml doc
creates a button with given caption and icon
adds a new account to the database
find person by email
sets the person
set the main form
sets the main window content
gets the value of the additions property
sets the value of additions
returns the name
sets the name
returns the name
sets the name
sets the persons of persons
adds a person to the list
adds a new welcome message to this group
returns the welcome file with the given language
checks if the person is a person
adds a new blog to this filing
gets the value of the address property
sets the address
sets the house number
gets the house number added
setter for property house number addition
gets the value of the number property
sets the number
tests finding of persons in the email table
sets the next available entry
sets the lucene query
returns the query string
returns the code entity manager code
adds a new annotation to the list of valid annotations
adds an annotation discovery listener to the list of annotation discovery listeners
set the grouping of the clause
checks if the given token is a keyword
close the connection
returns the column family
returns the row key
parses the content of the code string code and returns the
parses the keyword
returns the column family name
parses the keyword to the keyword
remove the entity manager
parses the keyword
sets the column family name
returns the unwrap attribute
creates a new instance of non operational cache provider
sets the unwrap flag
merges the entity with the given entity and entity
returns the data accessor for the given metadata metadata
serializes the given set of values to the given key
returns the cache manager
adds a listener to the cache
sets the columns
creates a new code lazy initialization exception code with the given
adds a column to the column
returns the id of the given
returns the index directory
returns true if the annotation is a annotation
builds the metadata for this metadata
create a hibernate session
stores the given entity to the store
stores the given object to the cache
returns the factory
gets the value of the transaction type property
sets the transaction type
sets the provider
sets the list of classes
sets the jar files
sets the name
set the properties
returns the session
returns whether or not curly the exclude
sets whether or not classes should be excluded
returns the property that was used to create the property
returns the cache for the given entity
sets the property id
returns the entity manager associated with the given client type
destroy the entity
set up the test
gets the value of the property
test the save of authors
test the post saving method
test the authors of the authors
returns the read method method
set the read method method
sets the permalink for this blog entry
returns the write identifier method
sets the write identifier method
returns the column with the given key
returns the super column with the specified key
adds a column to the table
adds a super column
adds a property index to the list
adds a relation to the list
returns the relation property with the given property
returns the index boost factor
sets the boost factor
returns the indexable status
sets the value of the is indexable property
adds a column to the table
returns the property
returns the type of this foreign key
returns true if the type is unary or not
returns true if the type is a collection
gets the category name
store the settings
gets the title attribute of the object
reloads the settings from the file
returns the icon for the icon
create an instance of the options panel
this method applies the settings to the settings
cancels the timer
process the check node
updates the panel
returns the component associated with the given
returns the help ctx attribute
returns true if the properties file is changed
returns true if the panel is valid
adds an error event to the audit
gets the name attribute of the object
adds an exception to the audit exception
sets the current id
display the audit event
called when the audit has been finished
called when the audit has been started
called when the file is finished
called when the file is started
called when the output line is cleared
called when the output line is selected
adds a channel to the list of channels
returns true if the channel is in the channel
removes a channel from the list
returns the name of the
returns the key for the
returns the
returns the
sends a message to the server
returns the
sends a message to the bot
sets the authorized authorization level
starts the thread
returns the user agent string
returns the auth level
get the nick of the user who made the user
stops the command thread
returns the name of the command
sends a message to the server
log the given message to the log file
returns true if the channel is in the channel channel
called when a user starts with the given user
adds a command to the list of commands
adds a new thread to the list of commands
adds a line to the list of commands
returns the current user list
adds a user to the list of users
removes a user from the list
sets a property
executes the command
interrupts the thread
checks if the given word contains the given word
load the properties from the properties file
executes the command
returns the code code object of the given
description of the method
returns an iterator containing all the names of the given
executes the specified command on the specified code syntax code
closes the device
close the connection
executes the given code string code and returns the
test method for
load the values from the properties
returns the end token of the given token
executes the command
returns true if the token is a token
executes the command
loads the configuration
parse the configuration
pushes the current state of the stack
appends the string to the buffer
discards the current state of the command
this method is called when the user presses the start state
called when the state of the current state
returns true if the iterator has more elements
returns the next state in the buffer
create an instance of
sets the remove comments
sets the default value for the default value
sets the value of the property
returns the value of the property value
description of the method
returns an iterator over the commands registered with this
returns an iterator of commands registered with this server
returns an iterator of commands registered with the given key
this is a recursive method that returns the given table
returns true if the current font is bold or not
adds a listener to the list of listeners
removes the listener
updates the columns of the given columns widths
flush the table
sets the display flag
returns whether this is a printing
returns true if the file has been written
sets the prefix
print the specified string
sets the suffix
cancel the current task
atomically the method to get the value of the specified
this method is used to exclude the
reads the given action from the input stream
returns the input stream for the input stream
read the properties from the given map
pushes the current command onto the stack
pops the last buffer off the buffer
returns an iterator of all the session names
shuts down the
returns the number of characters in the specified command
set the session to be used for the session
creates a configuration container for the configuration file
find the type of the argument
release the resources
returns the url for the given feed
retrieves the response from the given url
returns the root quantity of the
sets the root quantity of the
returns the root node of the tree
prints the list of root items
returns all the products that have the list of all products
returns the parent node
sets the parent node of this node
returns the node
sets the node
returns the quantity multiplier
sets the quantity multiplier
returns the
shutdown the connection
called when a client client is closed
connect to a url
connect to a url
get a connection from the database
returns an object of the current context
get a connection from the database
returns an object of the current context
adds a product item to the shopping cart
returns the order of the cart
adds an item to the shopping cart
returns the item type description
returns the name of the product
clears the order
returns the current time
returns the price of the
returns true if the payment method is selected
sets the payment method amount
removes all payment method ids
remove the payment method
add a payment method type to the payment method
invoke the service with the given service name
returns the amount of the payment method payment method payment
returns the total number of selected payments
this method is called when the service is propagated
returns a list of selected payment methods
clears the payment method type
returns the name of the job
set the service to commit to the given
set the rollback service
returns a map with the given mode
checks whether a user is authorized to a specific user
returns a list of all parameter sequence objects
compares the given shopping cart item
compares the specified object with this cart item
returns the total of the order of the categories
returns a list of all the items that have been
returns the default error page
returns a string representation of this object
sets the value of the field
this method is used to expand the content in the
returns the value for the value
connect to the server
replaces the variables in the list with the given
replaces the variables with values in the specified
adds a row to the table
returns true if the two objects are equal
register the server to listen for incoming commands
translate the x dx to the given coordinates
returns the radius x coordinate of the blur
returns the simple type of the simple type
applies the parameters to the given parameter
returns the properties of this portlet
get the challenge from the server
initialize the login engine
commit the authentication process phase 2
set the data to be displayed in the tree
returns the estimated time of the given time
returns the estimated of the given time
returns the estimated ammount of the given road
returns the estimated amount of the
sets whether the x axis is visible
sets whether the y axis is visible
returns true if the axis is visible
returns true if y axis is visible
sets the units of the units
sets the ordinate of the
returns the units x units
returns the units y value
sets the pixel height of the image
returns the height of the pixel height of the pixel
sets the pixel width of the image
returns the width of the pixel in pixels
clones the given element and returns it
adds a field to this field
this method is used to divide a field element by the given
a
returns the element that is impossible to be used
returns the element that is the same as this one
subtracts the given field element from this one
this method is used to add a field to the array
adds a new field to the element
this method initializes j content pane
this method initializes j scroll pane
this method initializes j button
this method initializes rad data
this method initializes rad row
this method initializes rad clear data
this method initializes rad clear row
this method initializes this
this method initializes txt
this method initializes btn
this method initializes btn
this method initializes btn cadastro
this method initializes btn cadastro anterior
this method initializes btn cadastro
this method initializes btn cadastro
this method initializes btn buscar empresa
this method initializes j scroll pane
this method initializes btn
this method initializes this
this method initializes de
this method initializes btn ok
this method initializes this
this method initializes txt nome
this method initializes this
this method initializes j content pane
this method initializes main menu bar
this method initializes txt endereco
this method initializes menu
this method initializes menu cadastro
this method initializes menu
this method initializes j
this method initializes txt
this method initializes txt cidade
this method initializes txt
this method initializes scp
this method initializes j button
this method initializes txt j
this method initializes j button1
return the property value
this method initializes printer
this method initializes j item cadastro
this method initializes this
this method initializes j content pane
this method initializes printer data
this method initializes txt
this method initializes btn
this method initializes scp cliente
this method initializes tab
this method initializes j text field1
this method initializes btn sair
this method initializes txt pais
this method initializes this
this method initializes
this method initializes printer data
this method initializes printer hora
this method initializes referencia
this method initializes txt mesa
this method initializes this
this method initializes scp
this method initializes btn
this method initializes btn sair
this method initializes btn sair
this method initializes btn cliente
this method initializes btn data
this method initializes txt nome cliente
return the file that is used to connect to the
this method initializes chk
this method initializes chk
this method initializes chk
this method initializes j scroll pane1
this method initializes j tipo tipo
this method initializes btn cancelar
this method initializes btn data
sets the numeric
sets the unique id of this assignment
checks if the row is blank
returns the description of the ith description
returns the number of description rows in this set
returns the node id of the node
get the ith record id
returns the metadata node
returns the number of about times
returns the about node
returns the ith about node
returns the number of spec
get the set spec for a given number of the
writes the specified error to the log file
this method returns the response date
set the node record
returns the number of errors
returns the item
this method is used to set the value of the
this method is used to fix the status of the pending status
transform the given node into a dom tree
returns the node id of the first node in the list
returns the number of description of the
returns true if the node has been
returns the requested file
add a billing details to this account
sets the approval to the last value
ensures that the user is a user
builds the
validates the field
registers a user registration for a user
removes a from the list
returns a string representation of this object
o
check if the css class is a separate
description of the method
this method is called when the web browser view is changed
ensures that the indexes are done
registers the given object descriptor
registers a converter with the given converter
unregisters a converter from the context
checks if the given class is a primitive type
returns true if the thread is finished
returns true if the thread is finished
called when the user has finished
called when the has finished
prints the current state of the given ast
writes the specified byte to this buffer
flush the stream
compares two objects for equality
returns the last value of the sif last element
prints the rac code given the rac code
prints the children of the given ast to the
prints the ast to the given ast syntax ast
prints a post assignment
ends the current block
returns the child ast for the given ast
returns true if the given ast node has children
returns true if the speed is
sets the speed of the servo
power resistance of power consumption
this method is called when the world is about to be drawn
make all children of this node
returns the preferred size of this component
invoked when a mouse button has been pressed on a component
invoked when the mouse has been moved
returns the source port view at the given point
creates the ports for the port
removes the border ports from the code code
returns the root vertex of the vertex
returns the parent vertex of this vertex
sets the parent vertex of this vertex
sets the list of children of this graph
returns true if the given vertex is an ancestor of this vertex
adds a child vertex to the vertex
removes a child vertex from the graph
clones this object and returns a clone of this object
creates the properties panel for the panel
sets the parent window of this window
this method is called by the layout manager to indicate that the
sets the neighbor window to use
returns the index of the point at the specified location
description of the method
returns true if the file has been saved
returns true if the last modified date has been modified
sets the modified flag
called when the size of the component is resized
sets the saved file
drops the dropped gesture
returns the document
returns true if the is currently being
returns the current document
returns whether or not this object is allowed to be dragged
creates a new tab
returns the view associated with the given view
returns the current view
returns true if this is a group
prints the active document
returns the current work area
called when the document is expanded
called when the user selects the document undone
called when the document is cut
copy the current document to the current state
called when the document is read
called when the document is deleted
select all active documents
clones the
set the modified state of the work area
called when the document group is expanded
called when the user selects the document
toggle the visibility of the toggle button
called when the view is opened
set the type of the grid
called when the document is expanded
called when the document zoom out active
called when the user changes the size of the view
build the menu bar
build the tool bar
initializes the properties window properties
paint a connector
paint the port
sets the default layout settings for this window
returns the source port view at the given point
handles mouse wheel events
called whenever the value of the graph selection changes
prints the current job
print the data in the given page
updates the properties of the given property panel
encodes the edge points into a points
save the attribute to a string
save the value of the given attribute
checks whether the given file is a file extension
sets the vertical viewport
sets the model to be used to undo the model
sets the current layout cache
sets the current graph
returns the extension of the extension
creates a new graph model
returns the current graph model
returns the current layout cache
returns the jgraph object
adds a vertex to the graph
remove an edge from the list
returns the file extension of the given file
returns the cell at the given coordinates
removes all the elements from this graph
opens a file chooser to show the file
returns the current graph
removes the given graph from the list of graph graphs
saves the current document to the current view
creates a new graph object
saves the current graph to the given file
saves the graph to a given graph
opens a file
exports the image to a file
print the selection
prints the document to the document
undoes the last undone action
redoes the last undone operation
cuts the selected file
copies the selected action
paste the paste event to the clipboard
deletes the current graph
exits the current view
connects to the target graph
selects all of the graphs in the tree
updates the menu bar
clones the
this method is called when the graph view is selected
returns the graph viewport
aligns the cell at the bottom of the current viewports
align vertical alignment to the current position
brings the current graph to the front
displays the selected cells in the history
brings the given array to front
this method is called when the current view is back to back
toggle the visibility of the grid
decreases the current zoom out of the graph
returns true if the last action can be undone
returns true if the last action can be redone
returns true if the current position is a copy of the current
returns true if the current selection is a cut
returns true if the clipboard is copied
returns true if the current node can delete the selected cells
returns true if the current selection is a select all
returns true if the current layout is a copy of the current
returns true if the current group is a valid selection
checks if the current selection is a
creates a new menu for the given text
show the frame
returns the template store for this store
get the context type registry
returns the element at the given position
returns the last element of this ast
returns the end column
returns the node
sets the end column
returns the parent node of this node
returns the start col
sets the parent node of this node
sets the start col
returns the first sibling subtree of a given type
returns the last sibling subtree of this node
build the project
launches the given file
checks if the specified file is a program module
adds the initial actions
formats a token
returns the editor
opens the editor
returns the editor
returns the input
sets the input interpreter for this interpreter
updates the outline page
sets the editor
returns the model of the jet model
formats the text field to the current location
checks the resource being cached
returns true if the rulers resources are not already in the marker
removes a listener from the list of listeners
fires the changes of the given array of listeners
creates a new project
this method initializes scrolled composite
this method initializes composite
this method is invoked by the file
returns the local variable of the local local variable
set the locals value of the local variable
returns true if this is an unknown element
returns true if the code attribute code is an attribute
returns the sort order
pushes a new stack onto the stack
returns the number of dimensions in the array
returns the type of this type
pop the top of the stack
returns the class name of the class
returns the internal name of this object
pops the top element from the stack
returns the descriptor of this descriptor
returns the descriptor of the given buffer
pop the string off the stack
returns the size of the buffer
get opcode for instruction
compares the specified object with this type
returns a hash code value for this object
returns the descriptor of the descriptor
returns a string representation of this object
returns the return type of the method
sets the value of the utf8 string to be used for the
creates a new class item
returns a new string value
visit inner class
adds an item to the table
hook method called when the exit is called
returns a new local
pushes an boolean onto the stack
set the local type of the local
push a value onto the stack
returns the item with the given key
pushes a long onto the stack
puts an item into the queue
pushes a float value into the stack
adds a to the given pool
pushes a double onto the stack
push a value onto the stack
returns the offset of the last time in the
returns the access bits for this request
returns a string representation of this object
returns the class name of the header
returns the index of the argument at the specified index
puts a byte into the buffer
puts a short into this buffer
puts an int into the buffer
puts a long into the buffer
load a instruction
returns the name of the super class
computes the size of the data array
write the instruction to the given instruction
accepts a visitor
this method is used to load the
this method is used to load the argument
load the arguments from the array
loads the arguments from the
loads the array of from the stack
store the argument at the given index
returns the local type for the specified local variable
load a local variable from a local file
load a local variable
returns the label of the given label
puts the given local type into the local variable
store a local variable in the local type
load the type of the given type
returns the item at the specified index
opcode to flow type
pop the top most instruction from the stack
read a single byte from the byte array
visits the instruction instruction
duplicates the instruction
runs the thread
reads an unsigned 16 bit integer from the current
visits the instruction instruction
this method is invoked when the point is
reads a short value from the byte array
creates a new rectangle that is a of the
read an integer from the stream
visits the instruction instruction
the instruction
reads a long from the stream
begin the instruction
swaps two objects
reads a string from the given array
mutating instruction method to perform instruction
performs an instruction on the given instruction
visits a given amount of the
reads a class from the given index
this method is used to convert the given type to a type
reads a constant array from the specified array
sets the type of the method
sets the type of the method to be used
returns a new label
sets the current position to the given label
sets the current label
returns the element at the specified index
returns the size of the list
handles the hyperlink update
set the label for the given label
sets the jump to the given label
ensures that the given label is null
performs a non null value for the first element of the subroutine
adds a successor to the list
pushes the given label to the subroutine
this method determines the instruction for the given instruction
this method is called when the next element is available
return the value of the instruction
ends the frame
add a field to the subroutine
invokes the specified method
invoke the method with the given type
invokes the specified method
invokes the method with the given method
invoke the method on the given method
opcode to register a type
creates a new type object
adds a new array to the end of the list
the instruction
this method is called when the instruction is set
creates a new instance of the given method
checks whether the given preconditions is already propagated
this method is called when the instruction enters
this method is called when the exit is pushed
end the current method
tears down the test
tears down the test
test of set method of class
test of method of class edu
test of set method of class
test of method of class edu
test of set method of class
test of method of class edu
test of set method of class
creates a network network with the given parameters
returns true if the queue is empty
this method is used to encode the given object into the given
encodes the given chromosome into the given chromosome
decodes a double from the given code code
add a bit to the current state
add a to the current state
returns the correct ratio between the current and the
returns the next pseudorandom uniformly distributed int value
initializes the post components
returns the class of the property
this method is called when the error message is received
called when the property has been changed
this method is not supported
binds the components to the given component
returns the value of the property
creates the header for the table
adds an element to the buffer
removes the element at the specified position in this list
reads the header of the file
helper method that displays the message
at startup create and show the main frame of the application
sets the border to the given component
installs the default values
returns the description of the filter
adds the menu items to the given menu
displays a text string for clipped
returns the authorities that are granted to the authority partner
returns true if the object is a
deletes a
retrieve the entity
checks if the album has a subscribed newsgroup
get the list of photos that are currently being displayed
handle the request
handles the request
handles the request
set the thumbnail for the album
authenticate the user
compares the specified object with this
returns the name of the role
returns a string representation of this object
adds a principal to the subject
compares the specified object with this principal for equality
returns a string representation of this object
gets the skin css css css css css css css css css
build path for the given url
updates the content of the file
returns a list of all the data in this database
checks if the connection pool is private
returns true if post comment can be post
returns whether the database can post the database
checks if the connection can be posted to the database
returns true if the current thread is in use
close the connection
returns the age of the
returns the last transaction
returns true if the connection is closed
compares this object with the specified object for order
returns an iterator over the elements in this list
writes the start of the buffer
format the date format
adds markup directly to the given markup
writes the end of the buffer
writes the contents of the xml to the output stream
handle the
parse the input stream and create the
creates a new post
returns the title of the given string
returns the body of the string
get users blogs
get user info from database
returns the template for the given ip and a given ip
sets the data in the
start an element
method to handle characters
execute the given sql
returns the number of rows in the table
close the connection
starts the admin thread
stops the admin thread
creates a new round
the thread run method
stops the admin thread
main loop for the thread
paints the image
called when mouse is pressed
initializes the applet
paint the image
set the value of the field
description of the method
returns the parameter value
initializes the applet
paint the image
starts the applet
creates a new game
starts the tracker
stops the thread
the main loop of the thread
starts the
moves the cursor to the next url
initializes the applet
starts the
stops the audio playback
invoked when a mouse button has been pressed on a component
resets the message to its initial state
adds a customer to the customer
saves the customer
adds a customer to the database
update the customer
validates the given
create a new instance of the context
initializes the object
accumulate data in accumulate data before the given value
a new session
set the current context principal resolver
returns a page
prints the given string to the output
get comment by id
adds a new handler to the collection
cleans up the buffer
update the map
adds a vertex to the mesh
pan the position of the origin of the origin to the specified
pan the position of the pan of the camera
set the position of the
pan the position of the camera at the given position
centers the map on the given coordinate
pan the location to the given location
pan the center of the pan to the specified position
zooms the map
zooms to the given level
decreases the zoom level
zooms the scale in the scale
zoom the current zoom to the scale
zooms the camera in the current zoom scale
zooms the camera to the scale
switches the to the
updates the velocity of this body
get the left coordinate of the left coordinate of the left
get the up direction
display the debug message
sets the z
sets the shadow intensity
passing the focus request to the viewers control
the command has been executed so extract extract the needed information
opens the dialog and returns the dialog
shows the information message
show the exception
shows an error message
this method initializes j text field
this method initializes
this method initializes jp aceptar
this method initializes this
this method initializes this
this method initializes j text field1
this method initializes jb
this method initializes jb cancelar
this method is called when the user chooses to perform the pre
check if the root element is valid
parses a document
this method initializes this
this method initializes j name text field
this method initializes j progress bar
this method initializes j text
this method initializes j text field
this method initializes j auto load check box
this method initializes j status panel
this method initializes j check
this method initializes j save button
this method initializes j cancel button
this method initializes j split pane
this method initializes j new source button
this method initializes j open source button
this method initializes j fetch button
this method initializes j settings button
this method initializes j statistics button
this method initializes j about button
this method initializes j exit button
this method initializes j left panel
this method initializes j left header panel
this method initializes j right panel
this method initializes j right header panel
this method initializes j frame
this method initializes j content pane
this method initializes about dialog
creates the menu bar
creates the file menu
creates the help menu
connect to database
disposes the dialog
gets the team short name
gets the team id value for this
returns the team logo
gets the team club number of the club
returns the number of team points
returns the team first team
returns the team second place
gets the third team
gets the team pole
gets the team record value for this
gets the
finds the job that matches the job id
sets the job policy
show the window
returns the action item at the specified index
dismiss the window
sets the animation style
set the listener to be notified when the
enables disables the state
returns the number of entries in the list
returns the item at the specified position
called when the user clicks the given activity
writes the data to the output stream
generates a new execution
generate the model
sets the value of the model property
returns the current element
sets the value of the current element property
generates the execution state of the given model
this method is called when the execution of the
loads the configuration
sets the value of the base directory property
resolves the given model to the given model
validate the configuration
sets the value of the overwrite property
sets the value of the template name property
executes the mojo
resolves the model
returns the attribute with the given name
add an attribute to the attribute
adds a tag to the tag
returns the operation with the given name
creates a new
adds an operation to the operation
creates a new model transform
returns the type of this object
returns the execution of the given execution
returns the value of the field
sets the value of the value
returns the default value
sets the default value
returns the parameter with the given name
adds a parameter definition to this parameter
returns the parameter types that are used to create the parameter types
get the parameter names
loads the model from the given location
sets the project id
returns the namespace for the given code package code
returns the package for the given name
transforms the given model into a model object
adds a package to the package
returns the class with the given name
model model to model
add a class to this class
returns the interface name for the given name
sets the value of the project name property
interface interface method interface interface implementation
returns an enumeration of the elements in the collection
add an enumeration of the names of the given name
returns the project namespace
returns the package with the specified name
sets the namespace of the project
adds a package to the package
returns the project version
sets the project version
find a class by its name
find a class with the given name
adds a new execution to the queue
find interface by name
find interface with the given name
returns the id of the object
returns an enumeration of the packages in the package
find an enumeration of the
sets the value of the id property
returns the literal with the given name
adds a literal to the literal
sets the base directory for this file
checks if the given name is a primitive
returns true if the model is an enumeration
returns true if the model is a class
adds an artifact to the list
add a property to the list of properties
returns the working set
sets the value of the working set property
sets the overwrite file
set the key
set the value of this field
build the jmenu bar
builds and returns a help menu
set the value of
set the value of message
gets the
set the value of fecha inicial
set the value of num
set the value of codigo
gets the num value for this
gets the fecha inicial
gets the codigo
set the value of fecha final
set the value of titulo
set the value of nombre
gets the fecha final
retorna string
set the value of cliente
set the value of cod material
set the value of dni
gets the value of the cliente property
set the value of autor
returns the dni
set the value of
returns the
gets the autor
returns the number of in the
set the value of lista
checks if the word is a
returns the
sets the value of the property
returns the
sets the value of the property
gets the value of the property
sets the
adds a user to the
checks if the given user is a admin
returns the logger for the given class
returns the voucher manager
sets the voucher manager to be used for the voucher voucher
this is the entry point method
this method initializes btn
this method initializes btn
this method initializes this
this method initializes btn
this method initializes alt
this method initializes btn
this method initializes
this method initializes btn
this method initializes btn
this method initializes
this method initializes btn
this method initializes btn
this method initializes name
this method initializes name
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes btn
this method initializes btn
this method initializes btn
this method initializes
this method initializes btn
this method initializes j combo box1
this method initializes btn
this method initializes btn
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes name
this method initializes btn
this method initializes name
this method initializes
this method initializes btn
this method initializes
this method initializes
this method initializes
this method initializes btn
this method initializes
this method initializes
this method initializes name
this method initializes
this method initializes
this method initializes
this method initializes email
this method initializes btn
this method initializes btn
this method initializes this
this method initializes
this method initializes btn
this method initializes
this method initializes btn
this method initializes info btn
this method initializes btn
this method initializes btn
this method initializes btn
this method initializes
this method initializes email
this method initializes j button
this method initializes patient btn
this method initializes btn
this method initializes patient btn
this method initializes
this method initializes
this method initializes btn
this method initializes btn
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes btn
this method initializes btn
this method initializes
this method initializes btn
this method initializes name
this method initializes this
this method initializes
this method initializes
this method initializes patient btn
this method initializes patient btn
this method initializes btn
this method initializes
this method initializes btn
this method initializes btn
this method initializes
this method initializes btn
this method initializes btn
this method initializes btn
this method initializes btn
this method initializes btn
this method initializes
this method initializes this
this method is used to calculate the parents of the given vector
returns a string representation of this genome genome
copies the fitness from the genome into the genome
sets the chromosome at index
initialize the population
returns a string representation of this chromosome
initialize the population
writes the contents of the given matrix to a file
print the contents of a file to a file
checks if a file exists
returns the search module
returns the chromosome at the specified index
evaluates the phenotype of the fitness of fitness
returns the individual at index
fitness noise ratio
generates a class with the fitness values
fitness function
a function that will be used to compare the fitness of itself
computes the empirical distribution
generates a class based on the current time
computes the x coordinate of the x axis

computes the coefficient for the x and y
compute the cumulative probability
sets the output file
evaluates the fitness of the fitness of the given chromosome
sets the label of the gene
evaluates the fitness of the fitness
returns the next population
close the connection
round a function
this method is called when the user info is about to be
check out the output stream
this method is called when the user is a reservation
method to reserve a room
returns the expression from the given file
adds the services to the list
method to reserve a room
starts the server
waits for the socket to wait for the socket
called when a message is received
called when the signal is finished
connect to the socket
called when the user is terminated
sends a request to the remote device
stop the player
returns the
returns the message associated with this exception
the method is called when the user clicks the user
print the message to the console
logs the given message to the console
generates data for a specific data node
login to the server
returns the results of the server
this method is called if the node is about to be inserted
this method starts the connection to the server
sets the code node code in the code code object
this method is used to set the commands of the given
b 1
this method is used to parse the file
create a prepared statement
returns the question string that has been added
the tablename
a version of a version
restricts the cases to be used in the case of proposals
returns the node
returns the contexts contexts list of contexts
sets the help text
sets the name of the receiver
returns the additional attributes
returns the working copy manager
sets the manager
returns the relative offset of the relative cursor offset
returns the length of the
returns the system variable
this method is called when the thread is made
initializes the server
this method is called when the server is connected to the server
stops the server
removes the given template from the list
get the object that corresponds to the given template
finds the entry that matches the given entrys entrys
set the connector to use for the communication
executes the request
read the next serializable object from the given transaction
get the class definition for the given classname
adds a class name to the bytecode stream
validate the specified classname
returns the class definition from the given classname
returns the number of ignored classes
add a byte to the list of classes
resets the form to its initial state
set the object to be used for the given object
checks the given package name and returns the
returns the value of the code value code property
checks if the given transaction is a valid id
evaluate the operator against the given operator
returns true if the specified value is a primitive value
adds a super class and super class
adds a bean property to the properties object
sets the methods
deserializes a byte array from the given array of bytes
adds a property to the bean properties
this method is used to read the object from the given array
add a collection of definitions to the definition
tests the include class
adds a field to the field
tests the add package and reset method
test method for
add a class definition to the bytecode class
adds a new field to the list of
returns true if the class name is a super class
test method for
test method for
checks if the given name is a valid name
returns a property for the given property name
returns a property for the given name
sets the boolean value for the primitive default value
removes the first occurrence in this list of the specified element
returns a string representation of the given mode
create a new code label label code object
create a new code label label code object
create a new label from the given label
create a new code label word code object
create a new code category code tag
sets the tokenizer factory to use for this factory
returns the annotation name
returns the string representation of the
writes the given string to the file
write the to the output stream
writes the given string to the output stream
writes the given string to the output stream
write the xml document to the specified
write the xml to the sax parser
returns the value of the given as the given
returns the highest priority in this list
returns the value of the given
returns the highest priority in this list
returns the word split tag
sets the factory
sets the tokenizer to tokenizer
returns a word composed of the given word
the
prints the
saves the to a file
reads the file from the given file
returns the val value at the given index
generate deviation from file
generate deviation for the likelihood
calculate deviations of the
adds an element to the internal map
serializes this object to the given stream
returns the index of the object at the specified position
add a new key value pair to the collection
adds all the values in the given map to this map
returns the next element in the iteration
returns true if the file is a file
accept all directories
reads the next element from the input stream
duplicates this node
initialize the names nodes
resets the iterator to their initial values
find the next element in the tree
prints the generalized counter to the given writer
pretty print the contents of the output stream
prints the generalized representation of this object
compile the given
create a new tree reader
returns true if the key is contained in the cache
create a new tree reader
returns the tree that contains the tree
gets the list
prints the strings to the print writer
returns true if the given string contains a word
post operation to the head of the tree
loads the given reader from the given reader
load the given reader from a reader
returns the ith tree node
collapse the given list of components
collapse the tree
the list of dependencies for the given collection
checks if the given collection of dependency is connected to the given
get the next proof node
returns the root graph node of the tree
adds a node to the index map
returns the node by index
transforms a tree node into a tree
set the tree node to be inserted into the tree
returns the tree reader factory
post a category index
returns the encoding of the stream
loads the path from the given path
loads the path to the given path
loads the given file path and returns it
loads a given file path into a given path
load the given file
returns the category and the passed category
transforms the tree
returns true if the given character is a label
this method is not supported
write the to a string
returns a list of all the components that are contained in this
returns the textual representation of the current language
returns a string representation of the object
returns the label for the given label
returns true if the tree is allowed
returns true if the given tree node is accepted by this filter
returns the string representation of the given string
sets the label
returns the index of the label
sets the index of the label
returns the index of the node at the beginning of the tree
indexes the nodes in the tree
sets the parent node of this graph
returns the tree graph
sets the tree graph
prints the tree to the tree
adds a new arc
returns the arc that is follow for the given arc
prints a tree to the tree
prints the tree
returns the head word node of this graph
sets the head node of the graph
returns the head node of this node
sets the head tag node
returns a string representation of the given node
returns a string representation of this node
sets the stem
print the
sets the print writer to use for this file
returns true if the given node is a applicable
create a new tree reader
returns true if the tree is
returns the parent of this relation
parses the given text into a string
returns true if there is a next node
returns the next element in this queue
closes the connection
adds a feature to the feature key
transforms the tree into a tree node
write the given data stream to the object
remove the last unicode character
saves the configuration to the given output stream
refresh the list of all items
sets the syntax header
adds a progress listener to the progress bar
remove a progress listener
sets the font for the editor
sets the font family
draws the text area
create the tool bar
set the font size of the titled border
refresh the current state of the
find the next search
returns the new line number ending
removes the from the list
sets the line style
sets the style of the line
clears the given line
highlights the given highlights
highlights the given text
unsets the style
sets the integer value
sets the bold
set whether the text is italic or not
set the colour of the game
adds a child to this widget
this method is called after the initialization of the component
sets the parent widget
write a message to the log file
update the model
adds a child to this tree
computes the value of the x value
adds a child to this widget
adds a child to this widget
adds a child widget to this widget
sets the parent widget
returns the end of the
description of the method
description of the method
invoked when an action occurs
invoked when an action occurs
invoked when an action occurs
invoked when an action occurs
called when the action is performed
invoked when an action occurs
description of the method
adds a composite to the tree
initialize the properties
returns the properties object
write the given object to the given object
sets the parent widget
returns the state of the
extracts attributes from the given buffer
set the state of the
initialize the properties
this method is called when the is closed
returns the currently selected node
evaluates the
performs the calculation
this method is called when the is closed
initializes the component
this method is called when the is closed
initialize the orb
evaluate the current node
evaluate the current value
initialize the
returns an iterator of all children of this element
evaluate the current value
returns an enumeration of all the children of this node
evaluates the
adds a child component to this component
adds a child component to the child
this method is called when the operation is being executed
returns the child component at the specified index
set the index of the source file
returns the child component at the specified key
initializes the
set the index
returns the first child component
initialize the orb
evaluates the
initialize the worm
evaluate the current value
set the
initialize the orb
evaluates the
evaluates the
initializes the applet
set the name of the orb
sets the number of chromosomes to be used
this method is called by the to indicate that the
evaluates the
initialize the
this method is used to calculate the
returns the value of the
set the mutation rate
this method is used to set the setup of the orb
this method is called when the is
set the index of the constant to the given index
registers a listener for the event
set the value of the
initialize the orb
sets the index state of the
sets the parent component
set the dimension of the
sets the index state of the
initialize the orb
set the name of the orb
set the array to the given string
this method evaluates the
evaluate the current value
this method is called when the is expanded
this method is called when the state of the state changed
this method is used to set the setup of the orb
this method is used to get the end of the
sets the name of the
returns the error value
updates the state of the
sets the init name
initialize the orb
calculates the error for the error
this method is called to perform the operation
sets the index of the current index
initialize the applet
returns the initial setup
adds a child component to this component
set the path to the specified path
this method is called when the state of the state changes
returns the children of this node
evaluates the
set the dimension of the image
initializes the
sets the parent component
returns the children of this node
this method is called by the
returns the last child of this node
this method computes the value of the parameter
initialize the applet
runs the thread
this method is called by the to indicate that the
register a parameter change listener to register
stops the thread
this method is called by the server side
starts the thread
registers a new listener to the list
this method is called when the parameter changes
returns the state of the
launches the sim file
writes a message to the message
returns the independent variable buffer buffer
returns the array of dependent variables that are not
fires the state changed event to all listeners
action interface implementation
initializes the file
runs the thread
initialize the applet
initializes the gui
parse the content handler
end a element
receive notification of the end of a document
set the attributes of the given component
generate the package results
returns the parent of the given object
end a element
returns the content of the object
ends the element and calls the
this is used to acquire the operation
returns the parent composite of the given parent
returns a vector containing all the components that are stored in the
returns the name of the given name
parse the content of the file
returns the child at the specified index
adds a child component to this group
returns the parent composite of the given parent
sets the parent component
set the component to be executed
returns true if the is active
sets the active state of the
set the list of bindings
sets the attributes of the given component
end a element
returns the parent of the given parent
returns the output
sets the inputs
sets the weights of the
processes the command events
sets the cur direction
returns the cur direction
returns the height of the image
returns the selected phone number
sets the station to be used to compute the station
returns true if the ticket is a sell out
returns true if the ticket is full ticket
returns the number of tickets in the ticket
registeres the command listener
show the account detail
registeres the command listener
handles the command events
this method initializes account list
this method initializes add account dep
this method initializes account detail frm
show the account list
show the account detail
handles the command events
returns the selected record
handles the command events
this method initializes j form
handles the command events
returns the current y coordinate of the ball
sets the cur direction
determine whether the given layer is colliding
returns true if the layer is entirely contained in the layer
handles the command events
show the info dialog box
test method for
test method for
test of service view method of class view view
returns the frames per second
sets the frames per second
sets the height of the image
sets the width of the image
returns the audio stream info object
starts the
set the audio stream
gets the value of the bitrate property
sets the bitrate
creates the directory structure
set the duration of the
gets the value of the property
sets the
sets the filename
setup the work queue
returns the video stream info
sets the video stream
setup the directory
returns the monitor directory monitor
set the monitor to use for this monitor
shows the alert
resets the alert
creates a copy of a temporary directory
sets the current level for this logger
returns the log level for the current level
initializes the logger
validate the database
validate the database
connect to the database
sets the print stream to use for the print stream
starts the console
returns the test environment
sets the test environment
sets the driver
sets the command line
sets the url
gets the admin user
sets the user name
starts the console
returns the print stream to use for the print stream
returns the next command
prints the help message to the print stream
prints the help message
handles the command
prints the help message
this method is used to set the command line arguments
remove the command from the list
prints the help message to the print stream
called when the quit command is complete
this method is called when the user presses the detach
prints the help of the given print stream
sends a character to the server
print help on the help screen
sends command history to the server
prints the help message
sets the location of the first input location
prints the current memory
resets the first input location to the first position of the first
returns the console
this method is used to parse the classpath
returns the first input location of the input
prints the count of the
this method is called when the caret position ends
add a file to the list
returns whether the keep temporary files should be kept
adds a data set to this datasets data set
executes the actual
adds a list of data sets to the list
paste the text from the clipboard
returns an iterator over the data set
performs the apply of the contents
sets whether to keep files in the temporary file
returns the database
sets the database database connection database
executes the
appends the given string to the end of the document
reads the next byte from the input stream
transitions from the given code service code to the given transition
wait for a tcp down to start
returns the total number of bytes read from the file
returns the total number of bytes written to this stream
set the inbound sink
set the sink outgoing
returns true if the is suppressed
sets whether or not the is
remove a listener for finding the listeners
returns whether the constraints should be disabled
sets the local port to use for this socket
returns true if the sync is
resets the state machine to the initial state
sets the remote host
sets whether the editor should disable the constraints
returns the remote port
set the synchronization sequence
set whether to use truncate to truncate to the output
sets the remote port
monitor a new directory
returns a file object representing the file path
returns the path to the file
method for the activity
starts the server
called when the status changed
returns the list of the list of events that are registered for
stops the service
notifies all listeners that the state changed
destroy the service
stops the server
notifies all listeners that the state machine has been made
notifies all listeners that a status has been changed
returns the delay in milliseconds
notifies all listeners that a read has been read
sets the delay in milliseconds
notify all listeners that have registered interest for
add a recognizer to the
notifies listeners that the tunnel has started
remove a recognizer from the recognizer
notifies all listeners that a monitored monitored stream has
this method is called when the streamer is closed
add a vector to the end of the list
initializes the table
returns the most specific superclass for all the cell values
returns true if the is
adds the rows to the table
sets whether the is automatically
saves the current data to a file
called by the to update the data
returns the name of the action
sets the icon to the action
paint the component
returns the icon for this action
the method code add code
toggles the state of the property change listener
increment the increment of the
returns the service
fires a service state changed event to all registered listeners
sets the service
show the tree
add a listener to the listener list
returns true if the given directory has the file
build the graph view
returns the total number of milliseconds
sets the directory to be used for the
returns the canonical path of the specified directory
populates the graph library with the selected graph
populates the graph with the selected graph
check if the given maximum length is reached
returns a short description of this action
returns the port number of the port
sets the listen port field
returns the text area of the incoming text area
returns the remote host
sets the remote host
returns the remote port number
sets the remote port number
returns the outgoing text area
creates the header tool bar
creates the text area
creates the text area
returns the text area
displays the content of the given file
returns true if the file can be shown in the view
returns the scroll component
initialize the map
find the viewers for the given file
loads the view
opens an error message to the dialog
close the panel
returns an icon from the resource bundle
this method is used to set the for the
test of directory monitor monitor method of class org
test that rollover milliseconds
test the method
test method for
test the time elapsed for the current time
test constructor with constructor
the classpath to be used to test the classpath
test writing a single line
the junit setup method
tears down the fixture for example close a network connection
test invalid language expression
test of set all values method of class
test method for
test method for
prints usage information
set up the test
delete the temporary directory
test of show tree dirs dirs
test of show tree method of class org
test of show tree method of class org
tests the show tree root dirs in the tree
test of show tree root dirs in jtree
tests the show tree root dirs
shows a tree large tree to a tree
tests the show tree root
returns true if the thread is running
sets the max storage space space
stops the processor
returns the settings button
returns true if the message is in delay
sets the percentage of
returns true if the is
sets the stop monitoring flag
sets the stop
returns the send
sets the send
sets the sensitivity value for this
returns the alarm delay delay
sets the alarm delay delay
sets the email adress
returns true if the is enabled
sets whether the player is currently enabled
returns true if the current video is enabled
sets whether the file is enabled or not
returns true if the email is used to send the send
creates a file name by time
sets whether the send should send the mail enabled
returns the file
sets the file
returns the name of the snapshot
returns true if the picture is enabled or disabled
returns the image of the image
returns true if the is
sets the
returns the media folder
this method is called when the button is clicked
sets the media folder
gets the number of pictures to send to
opens the file chooser for the play file
sets the number of pictures to send
returns true if the is started
sets the value of the started monitoring property
this method is called when the button is pressed
this method stops the button
cancel the cancel button
description of the method
get the next element in the buffer
get the next entity
return the next element in the form
skip the past past the given past
get the double value associated with an index
get the int value associated with an index
get the long value associated with an index
make a string from the contents of this jsonarray
returns the optional value at the specified index
get the int value associated with a key
get the long value associated with a key
append a value
returns an enumeration of the keys in this hashtable
produce a jsonarray containing the names of the elements in this jsonobject
trims the string to be the given string
put a jsonarray value
append an object value
put a value in the jsonarray where the code boolean code
put or replace a key value in this collection
get an optional double associated with a key
put or replace an object value in the jsonarray
write the contents of this object to a writer
returns a string representation of this jsonobject
write the jsonobject as json text to a writer
cria
a
this method is called when the connection is established
the
the film
at startup create and show the main frame of the application
stop the watcher
call the answered call incorrectly answered
a call
this method is called by the remote framework method to check if
returns the active call info
returns the active call in progress
toggle mute button
set the listener to trigger the event
show the arrowhead
set the listener for the events
set left and left to left
sets the left hint text
set the left and right of the door
sets the right hint text
dispatch the trigger event to the listener
sets the file name
sets the file path
returns the file path
returns the uri of the download download
update the account with the given account
inserts an account into the database
returns the account with the given account id
get the number of in the database
inserts a call into the database
return the number of call failures
returns true if the given character as a floating point number is
stop the ring ring
sets the value of the preference preference as a string
sets the value of the preference preference setting
insert a new filter into the database
sets the value of a preference
returns the value of the preference as a string
returns the value of the preference with the given key
returns the call state
returns the remote contact
returns the value of the preference specified by the key
returns the connect start
returns the value of the preference with the specified key
returns true if the state is active
creates a table from the given cursor
update the filter with the given filter
returns the default domain for the current tuple
returns true if the auto registration is enabled
inserts a message into the database
returns the display name of the remote contact
returns the password
returns the remote port number
returns the name of the profile
returns the protocol for the transport
returns the address of the proxy server
returns true if the network is valid
get the sip domain
returns the uri of the
returns true if the connection is valid
get the sip user name
checks if the given field is a valid field
returns the value of the preference for auto close time
returns true if the cancellation of the property is cancelled
returns the number of in the
returns the quality of the media
returns the current value of the preference mode
returns the time in milliseconds
returns the number of ice
returns the enabled state of the turn
returns the enabled
returns the action
returns true if the user has already already setup
checks if the port is a valid port
get the system property
stops the service stack
add all accounts to the database
sends all accounts to the server
gets the prefs attribute of the preferences object
dun de
the level
returns the conn num conn
this method is called when the platform is about to be used
set the to the given value
returns the length of the file in bytes
load the data from the file
increment the number of times the times has been visited
returns the turn of the turn
sets the first turn in the game
returns the last turn of the player
sets the visited flag
returns the terrain of the terrain
sets the terrain
returns the owner of this ownable
sets the
checks if the terrain is
returns the cell at the bottom of the table
returns the cell cell editor for this cell
stop the
returns the cell editor for this cell
returns the cell cell representation of the cell
returns the cell bounds
returns the cell at the south west of the cell
stop the tracking
returns the adjacent cell editor for this cell
returns the cell bounds
start the tracking
this method is invoked when the target info is about to start
clears the grid
start the
returns the cell at the given point
handles a new event
returns the cell at the given location
returns the cell at the given coordinates
puts a cell into a cell
sets the
sets the y coordinate of the crane to the given point
sets the x coordinate of the
sets the y coordinate of the viewport
returns the center of this
creates a new row
removes the given from the given one
removes a protocol listener
sets the socket buffer size
returns the send buffer size
sets the socket buffer size
returns true if the receivers inclusive value is inclusive
returns the size of the receive buffer
sets whether the message provider should be inclusive or not
returns the number of in the network
decodes an object
sets whether to keep alive connections
returns the name of the command
returns the server socket factory
adds a listener to the protocol command listener
removes a listener from the protocol command listener
fires a reply received event
send a command to the command sent to the command
creates the command support
returns the command support
returns a thread that represents a list of messages
returns the next article in the article
bind to the server socket
initializes the ssl context
extract the prefixed data from the given prefix
send a noop command to the server
returns the number of active commands
tests the get group name method
compares two two objects
returns the date or null if the given null is null or
this method is used to read the data from the stream
checks if the feature is present in the stream
checks if a feature set contains a feature
returns true if the is
sets the selection state of the
set copy of copy copy listener
returns the copy stream listener
sets the timeout for the control keep alive
returns the timeout for the control
sets the timeout for the control to keep alive
returns the control reply timeout
copy the given listener to the listeners
returns the controller that will be used for the next code
sets the exception controller
returns true if the exception is thrown during the
sets the value of the propagate exception property
returns the code algorithm handler code
sets the finally controller
sets the algorithm
called when the user selects the window
this method initializes this
this method initializes f3
this method initializes j panel
this method initializes j panel1
this method initializes j panel2
this method initializes j radio button
this method initializes j radio button1
this method initializes j radio button2
this method initializes j button
this method initializes j button1
this method initializes j button2
this method initializes j panel3
this method initializes j button3
this method initializes j button4
returns the number of the counter
performs the action
show the tab
toggles the tab of the given tab
description of the method
displays an error message
resets all tabs in the tabbed pane
returns the selected date
returns the selected day
returns the selected month
returns the selected year
stops the playback
returns the absolute path of the file
called when the user changes the
initializes the exit menu
exit the application
returns the length of the data in bytes
returns the frequency of the
returns the chunk start
returns the block start
returns the sample offset
returns the info of this object
returns the maximum number of sample first sample
returns the number of channels
returns the minimum sample number of the first sample
returns the sample size
returns the maximum number of times the
returns the possible sample possible value for this
returns the sample pointer
returns the time at time
returns the time in milliseconds
returns the header
close the sound file
seek to the specified position
seeks to the time in milliseconds
gets the value of the property
returns the dialect
returns the code page code value
merge the given into this one
returns the minimum time in seconds
returns the maximum time in seconds
finds the for the given time
stop the playback
stops the loop
stops the loop
runs the game loop
returns the selected position
returns the selected position
this fine grain notification tells listeners the exact range
closes the dialog
description of the method
this method handles the events associated with the progress monitor
this method initializes dir panel
this method initializes this
this method initializes east panel
this method initializes south panel
this method initializes list scroll pane
this method initializes j list
this method initializes save as button
this method initializes empty basket button
quits the application
disables comm systems
disable speaker filters
description of the method
adds a row to the table
the
selects all elements in the table
sets the second column
sets the second column
returns the row number of the given vector
display the specified bold or bold
clones the speaker
sets the font for the given font
resets all tabs and tabs
remove the speaker
this method is called when the user selects the file
this method handles the events associated with the progress bar
description of the method
saves the document to the database
description of the method
called when the user selects the table
removes the communication communication from the data
reset the speaker
returns the format for the specified row
sets the colum format
sets the format of the column
returns the list of all the formats in the list
returns the absolute path of the file
returns the format for the column label format
sets the filename
sets the column format for the column
sets the timeline format for the timeline
returns the format for the current colum
sets the column label format
process mouse events
edits the tier of the specified tier
called when the user changes the
update the tier order
selects the given row
exit the application
initializes the exit menu
this method is called after the row is selected
remove a tier from the list
gets the
set the to the given
remove a count of the tier at the specified position
returns the tier table
moves the tier up to the specified row
sets the tier format table
called when the user changes the state of the
sets whether the special characters should be shown in the special text
removes the row at the specified row
returns whether special characters are displayed
returns the number of rows in the table
adds a tier to the list of
returns the number of columns in the timeline
shows the selected values
returns the table model
fire a row labels changed event to all listeners
this method is called when the user selects the edit cell
fire column labels changed listener
fires a selection changed event to all listeners
returns the frame end position
notifies all listeners that a row has been inserted
sets the position of the frame
resets the to its initial state
fire the data reset event
fire a format reset event
notifies all registered listeners that a row is changed
fire cell formatting event
fire column labels event
show all tiers
fire a row labels event
returns the version of the
fire a rows
sets the all the spans
returns the name of the application
fire area changed
fire a event added to the cell
fire cell span changed event
scroll the height row to the size of the row
returns the event at the specified row and column
returns the width of the specified column in the
returns the tier at the specified row
returns the table with the table
adds a table listener to the list of listeners
increases the width of the column
returns the timeline item for the given column
shrink the of the given position
called when the process is finished
this method is called when the cell is shifted
returns the text of the turn
set the cell span at the specified row and column
checks if the given cell is contained in the timeline
removes the first column from the table
returns the lower index of the column
returns the number of columns in the column
fire a file changed event to all listeners
deletes the event at the specified row and column
called when a media time is changed
makes all consistent with the
removes all timeline from the list of all the
this fine grain notification tells listeners the
remove the interpolated times from median
method for creating a new timeline at the given index
completes the timeline
set the flag
increases the number of times the row is shifted
saves the current model to the current file
scales the and scales the
remove a gap from the list
saves the to the
removes all the gaps from the list
moves the cursor to the start of the
moves the column to the end of the column
this method is called when the user selects the mouse button
search for next search
shows the info dialog
show the special characters
enables empty when the image is empty
creates a copy of this sync point
returns the start point of the segment
set the start point
returns the end point of the point
set the end point of the message
returns the xml representation of this object
set the offset of the current element
returns the number of sync points
write the eof to a stream
creates a copy of this bundle
returns the sync point at the specified position
checks if the file is a save time
writes an array of serializable java code to the output stream
get sync point before
returns the sync points
returns the width of the text
get sync point after the synchronization point after the last sync point
returns the xml representation of this object
returns a point from the sync point with the given id
set the format for the format
set sync points to the given sync point
writes this object to an xml stream
returns the height of the ellipse
returns a xml representation of this object
adds a anchor to the anchor
updates the positions of all positions
returns true if the file format has a format
add a sync point to the cache
this method is called when the format is about to be applied
returns the number of lines in this file
returns the line at the specified position
add a new one line to the list
returns a xml representation of this object
returns the height of the text
returns the height of the rectangle
returns the break type
returns a xml representation of this object
this method is called when the format is about to be applied
returns the height of the given shape
set the type of the inlining ft
returns the width of the rectangle
returns the xml representation of the
returns the label of the label
returns the width of the given chunk
returns true if the portlet has a reference information
sets the label
returns the width of the given
sets the information about the
returns the correlation string for the
returns the width of the
returns a xml representation of this object
returns a xml representation of this object
returns the information about the information about the application
returns the height of the shape
returns the xml representation of this object
returns true if this plugin is a bundle
this method is called when the is about to be updated
returns the current position of the selection
returns true if the given is before the given
set the format for the format
this method is used to format the format
returns a xml representation of this object
returns the width of the given column
returns the number of chunks in the queue
returns the selection position of the text component
returns the specified chunk at the given position
returns the number of formats
checks whether the given id is already in the list
returns the format at the given position
returns the format for the given id
adds a format to the list of available formats
removes a format at the specified position
remove the element at the specified position
adds a link to the link
add a chunk to the end of the list
writes the xml representation of this object
setter for property links
returns a xml representation of this object
returns true if the link has a link
the line of the
returns the first link
returns the string representation of the format
returns the height of the ellipse
returns a xml representation of this object
returns true if this is a bundle
returns the xml representation of the
removes all empty lines
returns a xml representation of the node
copy the current state of the current object to a copy
sets the value of the property
returns the current position in the editor
returns the height of the font
returns the height of the ellipse
returns the descent of the font
returns a xml representation of this object
this method is called when the is about to be
this method is used to format the
returns the string for the
checks if the given id is a
checks if the given id is already in sync at the end
returns the at the given id
returns the at a given position
removes a from the set of removals
updates the positions of all the
returns the top level item for the current view
returns the number of columns visible in the grid
returns the number of visible columns in the last column
launches a browser
facilitator display a single value
called when the user changes the state of the game
called when the document is inserted into the document
setup the panel
sets the head
returns the xml representation of this object
returns the current selection as a new
creates a copy of this
sets the medium
returns the value of the attribute
set the attribute
returns the number of attributes in the list
returns a xml representation of this object
constructor that creates a new basic basic basic file with the given
parses the string and sets the to the given string
creates a copy of this
creates a copy of this
returns the body of the message
sets the body of this body
check if the is a valid
returns the part of the
set the speaker
displays the given array of to the display
displays the tiers in the display
returns the common timeline
sets the timeline of the timeline
returns the tier
this method is called when the glue is set
sets the interface
returns the number of events in this queue
checks if the event at the start point of the
creates a new
this method converts the to xml
returns the timeline at the specified position
returns a string representation of this object
returns a timeline at the specified id
creates a copy of this body
create a new record
checks if the tiers contains the tier
returns the string representation of the timeline
starts the thread
removes events from the
returns the tier at the given position
returns the number of timeline items
checks if the given is a timeline
returns the tier with the given id
swaps two tiers and
moves the bodies to the first position
adds a new timeline item to the timeline
stops the auto save thread
sorts the given collection
reorder the tiers
adds a new timeline item to the list
inserts a new timeline after the given timeline
sets the type of this element
sets the category
sets the display name
returns the description of the given
inserts a new timeline after the given id
make a copy of this tier
returns the id of the given id
creates and returns a copy of this tier
returns a string representation of this object
inserts a new timeline before the given timeline
writes this object to the given output stream
checks if the given timeline is in the timeline
returns the id of the given id
returns the number of tiers in the current file
inserts a new timeline before the given id before it is inserted
adds a new to the current position
insert a tier at the given position
remove a from the database
repairs the timeline
returns the string representation of the
removes all the tiers from the list
remove a gap from the list
removes the events from the list
removes the timeline at the specified position
removes all gaps from the timeline
returns true if the timeline is timeline
returns true if the given part matches the given part
returns the span of the specified span
returns true if the specified timeline is in the timeline
checks if the timeline is consistent
returns a xml representation of this object
this method creates a consistent state of all the nodes
creates a copy of the
returns the number of in this collection
add a speaker to the placemark
returns the string representation of the
copies the project information into a
recalculate the
create a new event object
sets the project name
set the start of the
returns the name
sets the end of the
sets the name
set the description of the
returns the referenced file
returns the file referenced by the given extension
removes the times from the timeline
set the referenced file
make a copy of the speaker
checks the timeline if it is a timeline
returns a xml representation of this object
gets the information
set the abbreviation
sets the information about the information about the information about the given
set the sex
gets the languages used to recognize languages
creates a copy of this head head head
sets the languages used to be used
returns the meta information for this
set the meta information for this mesa
sets the comment
returns the code code
gets the value of the property
set the
sets the
creates and returns a copy of this object
returns a xml representation of this object
returns the current
sets the
returns the time as a string
gets the
returns the time as a string
set the to the given
set the time
sets the comment
returns xml representation of this object
make a copy of the language
adds a language to the list
returns the body of the message
sets the body of the message
returns a xml representation of this object
this method initializes this
this method initializes j content pane
this method initializes card panel
this method initializes task panel
this method initializes files
this method initializes
this method initializes j panel
this method initializes target
this method initializes summary
this method initializes j button
this method initializes button
this method initializes target button
this method initializes summary card button
this method initializes table
this method initializes cancel button
this method initializes publish button
this method initializes summary editor pane
this method initializes save publish settings button
this method initializes files table
returns the form element that is currently in the list
this method initializes reset files button
this method initializes j
this method is called when the user selects the next item
opens a file to open the file
checks whether the given element is an pattern
changes the surrounding text in the text area
saves the current document to the current file
saves the modified file
this method is called when the tagger is
changes the tag of the tag
sets the font for the days
test of get attribute descriptors method of class
test of get data descriptor method of class com
adds a node to the end of this list
trims the capacity of this cache to be the current capacity
increases the capacity of this tt array list tt instance if
returns the display name
returns the system id
returns the string value of this node as a string
test of get base name method of class name
returns the value of an attribute
test of get bean info name method of class
returns the value of the specified attribute
returns the string value of this property
test of get bean info names method of class reflective attributes
generate a string representation of this object
test of put method of class
generate a string representation of this object
copy the current value to the given
copy the content of the to the given
returns the name of the current
returns the string value of this property
returns true if this property is a value
returns the owner element
this method is used to set the value of the
returns the value of the field
returns the system id
returns the hash code value for this
trims the capacity of this node to be the current size
increases the capacity of this tt array list tt instance if
returns the uri of this uri
returns the number of elements in this list
copy the contents of the to the given
returns the parent node info of this node
returns the value of the attribute specified by the given index
returns true if the list is empty
returns the root of the document
returns the node at the specified index
adds a node to the end of the queue
clears the data
get the value of an attribute
trims the capacity of this node to be the current size
returns the name of the document
increases the capacity of this node if necessary to ensure that it
returns true if the other node matches this one
this method is not supported
returns the length of the node
sets the name pool
returns the number of elements in this collection
returns the name of the node
sets the prefix
returns true if the queue is empty
returns the prefix of this node
returns the local name of this ejen node
returns the local name
copy the contents of the into the given
returns the namespace uri of this node
returns the node at the specified index
returns the name pool
returns the node type
appends the specified element to the end of this list
get the value of the attribute with the given name
returns the prefix of this ejen prefix
set the prefix of the prefix
clears the data
returns the uri of the resource
returns the uri of the uri
get the parent node
sets the base uri
returns the attribute node with the given name
returns the parent node of this node
returns the prefix of this node
this method is not yet implemented
returns true if the node has an attribute
returns the document root
returns the local name
returns the node name
returns true if the node has a child nodes
returns the unparsed unparsed entity
removes an attribute from the list
this method is not supported
returns true if this node is a same node as another node
sets an attribute
removes the specified node from the list of children
check if this node is a same node
returns the node with the given key
sets the node value
returns the length of the
returns true if the given feature is supported
returns the uri of this uri
returns the document root
compare the order by the other node
returns true if this node is a same node
returns the length of the list
returns the id of the
sets the id of this
returns the name of the class
sets the name of the
makes the given persistent object persistent
returns the persistence manager
this method is called when the connection is about to be reused
compares this tag to another tag
get the type of this type
returns whether this is a macro
checks if the given character is a whitespace
returns the valid link types
returns the name of the original command
returns the source of this event
returns true if the command is a link
returns true if this is a relation
print the help line
returns the label of the current link
prints the license to the given print stream
cuts the selected item at the given index
returns the text item to the text item
updates the list of the items in the table
returns the option item with the given index
returns the option value for the given option index
converts the to a short representation
returns the text of the item
gets the value of the copyright year property
creates a url for the given file
creates a guide node
creates a book
get the guide from the given guide
returns the target
returns the local file to write to
returns the name of the target node
returns the link command
returns the hash value of the specified object
ensures that the file is decomposed to be written to the
deletes all files in the given folder
returns the style file
delete a file or delete file
returns the first character of the given character
returns the first character of the given character
returns the name of the given node
returns the name of the node that is used to convert the
deletes the file
creates a directory
sets up the editor action table
copies an input stream and then closes the
returns the unique node name
returns the name of the given uri
shows an error dialog
reads the file
shows an error message
returns an image from the resource
returns the current page
returns the source
returns the source file
returns the frame
returns the
returns true if the given plugin is safe to load safe
loads the extension
returns the session frame
reads an integer 32 bit integer from the stream
returns a new xmpp connection
read a string
get the torrent table controller
returns the system client
stops the timer
returns the download client
starts the connection to the server
get global global client
shutdown the connection
returns the peer connection peer
returns the file client
notifies all listeners that the session state has been changed
returns the tracker tracker to use for the proxy
adds a session state listener
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated setter method
auto generated setter method
auto generated setter method
returns the
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
this method is called to discover the discover agent for discovery
add devices to bluetooth device discovery
prepares the next instance of the next line
returns the interval
set the interval of the interval
sets the labels
sets the list of labels to be used
gets the value of the property
sets the
returns the
set the
set the classified class
returns the classified class
show the format of the given
returns the command packet
returns the object at the specified index
the data from the zip file
returns the value at the specified index
returns the value at the specified index
creates a string buffer
returns the number of bytes stored in this packet
the thread to connect to the server
kills the server
returns the free free id of the connection
closes the socket
returns the number of free game game states
sends the message to the server
this method reads the packet from the socket
returns the pending connection
sends a packet to the server
returns the connection associated with the given id
called when a connection is disconnected
this method is called when the connection is about to be connected
sends a packet to the socket
connect to the server
sends a packet to the remote server
shuts down the connection
send a packet to the given connection id
called when the connection is disconnected
sends a chat message to the server
sends a packet to the server
sends a message to the server
creates a new game
set the display mode for the mu
display the display mode
adds a to the
updates the of the
returns the from the
gets the
sets the pid
sets the phase of the phase
returns the state of the player state
returns the zone
returns the current zone
returns the library
gets the
called when the user selects a player
at startup create and show the main frame of the application
set the color of the color
opens a session session
returns a user to the session session with the specified session id
this is the entry point method
checks if the first run is run
sets the login screen to the user
sets the first run screen
sets the home screen of the user
logs out the user
check if the login password is valid
inserts the child into the parent node
returns the pattern data
sets the container
returns the dialog settings for the dialog settings
initializes the dialog settings
save the configuration of the page
connect to a property on the server
returns true if the user has been assigned to the user
returns true if this type is a reference to a file type
returns true if the action is an action
returns true if the current folder is
returns the ith open from the list
returns the display name of this display
checks if the given folder can be shown in the given folder
checks if the given folder is a show folder
this method initializes j menu item
returns the action at the specified row
injects the dependencies of the given project
test method for
returns the current row of the image
build the list of project summary
find project by id
returns the percent completed
returns the current story view
returns the current view as a string
returns the short description of the task
returns the progress bar completed
returns the image url
returns the story selected view
returns the current display image
returns the current view image
get the day of the day as a string
returns the action links
login user with the given password
inject the inject to the project
returns the target of the given user
set the list mapper
test method for
injects the stories
replace the basic project proxy with the target object
test method for
get the value by its id
returns the number of projects
returns the number of stories in the project
returns the number of iterations of the selected project
returns the number of releases
returns the iteration
submits the form
get a story object from the database
select a task
returns the number of rows in the current view
sets the number of rows in the current view
returns the number of columns in this object
sets the number of columns in the current view
returns the table attributes
set the table attributes
returns the cell attributes
set the attributes of the cell
returns the caption of this page
sets the caption of this component
at startup create and show the main frame of the application
at startup create and show the main frame of the application
resets the internal state to zero
updates the crc and the crc
updates the given buffer
updates the given byte array with the specified byte array
sets the encoding to use for the current encoding
prints the help of the help
returns the checksum for the given checksum
returns the type of the specified element
hides the element
show the element with the given element
returns the text of the
the event method that is called when the user changes the
called when the document is added to the document
called when the document is loaded
called when the document is loaded
called when the document is finished
called when the document is done
called when the user has finished
called when the document is saved
this method is called when the document is saved
called when the document is done
loads the library
called when the user changes the document changes
notify the termination of the termination of the termination
this method is called when the listened object is closed
displays the view to the given page
returns the name of the node
returns the number of frames in the frame
returns the locale of the current node
find the application properties file
returns the date of the license
returns the first first wizard completion
returns a string representation of this object
returns the text range
returns the paragraph properties
returns the properties of the character
returns the text of the paragraph
sets the text of the anchor
checks if the cell referenced by the given cell name exists
checks if the cell referenced by the column index are selected
returns whether the cell referenced by the column is a column reference
checks if the cell at the given position is present
returns true if the cell at the specified row index is
returns true if the cell contains the given cell name
returns the expression
revert the model to original model
moves the cursor to the left
returns the start page number
returns the start text range
the method is called when the stanza challenge is received
returns the values of the specified variable
close the connection
reset the parser
filters the source code
returns the action associated with the given key
add a list of nodes to the tree
returns the action with the given key
sets the view to the given view
called when the current procedure is currently disabled
initializes the model
returns the preference service
called when an attribute select is selected
returns the preference domain for the current domain
this method is used to populate the model
returns the code window pane code that is the code visible view
returns the class object of the class
refresh the given node
sets the value of the property domain
resets the remove buttons
select a parameter
called when the current entity has been changed
this method is called when the user selects a relationship between two
returns the class of elements in this list
replaces the current element with the given name
this method is called when the user selects a relationship between two
select the attribute
returns the class of elements in this container
create a combo box model
updates the state of the entity
sets the domain
returns true if the current selection is unselect the
sets the data node
sets whether this element is unselect the
returns the object of the object
returns the action with the given key
called when the project is opened
sets the text of this component
returns the last directory of the last
this method is called when the user selects the domain of the
returns the view domain
this method is used to enable disable the
called when the project is closed
displays an error message
centers the window in the center of the window
adds a new preferences to the last project
sets the enabled state of this component
stores the properties of the properties map
validate the validation process
returns true if the file is a directory
returns a description of the description
returns a description of the file
cancel editing the current editor
fires a tree selection event to all registered listeners
adds the given file to the classpath
updates the custom templates map
loads the preferences from the preferences file
returns the domain of the application
returns the preference domain for the current project
enables or disables the path for the given project
performs the action
create an entity object based on the database
enables or disables the given path
create an entity object based on the database
returns the preference domain for the domain
builds the project configuration
enables or disables the given path
closes the project
checks if the dialog is close on the current project
performs the action
enables or disables the project
enables or disables the given path
enables or disables the given path
returns the data map for the given preferences
enables or disables the given path
enables or disables the given path
remove the current entity from the database
remove the query from the database
enables or disables the given
returns the data node preferences node for this preferences node
removes the procedure from the project
opens the project
creates a data node from the data set
enables or disables the given path
saves all the properties to the user
this method is called when the model is initialized
creates the model
this method is called when the application is startup
this method is called when the application is startup
this method is called when the application is startup
build the validation text for the validation
returns the tables in the exclude tables
prepares generator for the database
generate the schema action
opens a file chooser dialog to create a file
this method is called when the startup controller is started
called when the model changes
process the control
commits changes to the cache
changes the configuration view
returns the problem
returns the default entity filter
returns the message
returns the severity level of the message
this method is called when the startup controller is initialized
merge the given
returns the relationship display name
cancels editing of the current cell editor
sets the object target object to be used for the
returns the list of objects in the list
called when the entity has changed
handles an event that is added to the tree
called when an entity is removed from the
creates a new adapter for the given class
make a new data source for this connection
creates a new data source action
duplicates the data source
removes the data source from the data source
description of the method
configures the generator
creates a new dialog
returns the log file for the current file
rename the domain
returns the of the given class
returns the preference detail
returns the preference for the given class
returns a domain by its name
set the state of the persistence state
returns a list of all the details of the domain
returns the detail of the given key
returns true if the base name is set
returns the domain of the specified name and its name
returns a map of all details of the given class
stop the service
initializes the preferences panel
initialize the schema
returns the size of the cache
starts the timer
returns the action with the given query
sets the domain preference for this domain
returns the preference values for this domain
returns the action for the given query
factory method for creating an instance of
returns the table type as a string
configure the extended attributes to the given extended type
generate a pk db entity pk
returns the action with the given query
returns the primary key of the given entity
factory method to instantiate a code generator pk code
returns the qualifier translator for the given query
factory method to instantiate a code null code object
load the adapter from the adapter
returns the for the given action
returns the sequence name of the given entity
create a string representation of the given sequence
drop the sequence str
returns the qualifier translator for the given query
returns the sequences of existing sequences
returns the action with the given query
returns the qualifier translator for the given query
determines whether the column is to be printed
creates the table to be inserted into the table
returns a list of the drop statements that are allowed for a
returns the name of the entity
returns the action with the given query
create a table
creates a table
create a adapter for the database
creates the auto primary key
returns the batch of the command
configure the extended attributes to the given extended type
factory method to instantiate a code null code object
drop the given node
creates a foreign key constraint
find a resource for the given name
writes the given blob to the output stream
returns the action with the given query
writes a clob value to the output stream
configure the extended attributes to the given
writes a clob value to the output stream
factory method to instantiate a code null code object
drop the given node
oracle form method
returns the qualifier translator for the given query
returns the first action of the given query
get the sequence name of the entity
returns the action with the given query
returns the sequences of existing sequences
returns the sequences of existing sequences
configure the extended attributes to be used in the
returns the action for the given query
configure the extended attributes to the given extended type
returns the table type as a string
factory method to instantiate a code null code object
returns a qualifier object that can be used to search qualifier
creates a table
initialize the parent configuration
executes the given insert update
returns the data context for this context
creates the table to be inserted into the table
returns the connection info object for the given conn
returns the driver info
builds the data source for the given data source
sets the data context
extract the names of properties from the given properties
adds a new class path
loads the data from the given location
adds a path to the resource locator
returns the delegate
returns the object entity
returns true if the user can initialize the server
returns the primary key of the given entity
loads the domains specified by the input stream
called after the is closed
return the locator for this resource locator
set the locator for this locator
process a character
stores the domains to be used for the given print writer
get the data source for the given location and the
returns the data source using the given location
this method is called when the servlet request has been destroyed
returns a qualifier object that describes the qualifiers
creates a new data node
called when the web application context is initialized
adds a filesystem path to the resource locator
adds a filesystem to the filesystem
configure the logging
create a new configuration
sets the configuration
returns true if the current project can be created
returns the shared configuration
add a query to the query
sets the project file
routes a query to a given routing agency
returns the project directory
returns the domain configuration name
create a data node from the data node
returns true if optimistic locking is enabled
sets the domain configuration name
returns the result descriptors list of the descriptors
returns the
returns the current qualifier
returns the list of failed map refs
this method implements the abstract visitor pattern
returns the attributes
returns the code map code of listeners for the
returns the domains
this method implements the abstract pattern interface
returns true if the queue has no more sessions
initialize the properties with the properties
returns the status of the current user
this method is called when a new routing query
returns the data source factory
implements the visitor pattern
initialize the properties with the given properties
returns the log level
adds a domain to the domain
set the relationship between two nodes
set the log level
returns the domain object
returns a query query object that contains the parameters
sets the relationship between the two given
returns the domain of this object
returns a string representation of this object
removes a domain from the domain
returns the hash code value for this
returns a collection of the domains
returns the object id of the object
returns whether or not the system is configured to be loaded
adds a list of to the list of
sets whether or not the underlying reader should be loaded
add a new ordering to the order
this method is called when the thread is finished
gets the value of the load status property
add a sort order
sets the load status
returns the loader delegate
returns the relationship associated with this entity
returns the result class name
returns a string representation of this relationship
called when a new domain event occurs
returns the list of
returns the class loader for the given class
returns a string representation of this object
sets the class name
returns the hash code value for this object
returns the root of the tree
set the root object
returns the
create a collection of nodes
sets the flag
returns a collection of all the disjoint disjoint elements of the disjoint
returns a collection of all the nodes that are
this method is invoked by the scanned class
sets the locations of the data view
add a collection of to the list of
compares two arguments for order
encodes the code code
shuts down all the domains
returns true if the is
this method implements the abstract visitor pattern
set the default data for the given code code
returns the list of children of this node
returns the fetch start index
returns a collection of all the nodes in the tree
generates the class for the given entity
initialize the properties with the properties
returns an iterator over all the parameters of the parameters
returns the object context
returns the package name
set the package name
add a new prefetch to the tree
returns the super package name
set the package name
sets the super package name
add a collection of to the list of
returns the class name of the class
returns the sub package name
set the class name for the class
clears the
returns the super prefix
fires a query event to all listeners
generates the class pairs of the class
checks if the given entity is already in the
sets the super class
returns the prop
checks if the given entity is a one
returns the package name
returns true if the entity is contained within the entity
fires an event to all registered listeners
format a string suitable for a string
returns true if the entity is contained in the list of relationships
returns true if the package is currently using the package
sets the flag that controls whether or not the data rows should
returns true if the package is using the super class
executes the strong strong strong bag strong strong
returns the super prefix
returns the entity
validate the attributes
returns the value of the code refreshing objects code property
set the property value
fires procedure procedure to listeners that a procedure has been changed
sets the value of the super class name property
returns the name of the class with the given name
returns the constant value of the class name
generate a single class for the class
sets the template to the given template
returns the property
sets the template to be used to convert the superclass to
returns a string representation of the class
returns whether this class contains the data in the
returns the fetch limit
returns true if the class is a super package
sets the parent task
returns the entity
sets the fetch limit
returns the class name of the super class
generate a single class for the given class
create sql string
add an attribute to the list
creates a new prepared statement
returns true if the file is old
initialize the object
returns the template for the template
sets the parameters to the given map
returns the content of the node
this method is called by the
initialize the callable procedure
returns the template for inclusion in the template
returns the for the
returns a list of all parameter values of the given query
description of the method
this method is used to indicate that the axiom is
add an attribute to the database
create sql string sql
returns a list of all parameter values for the given query
returns the name of the parent object entity name
returns the list of columns
returns the order by column
returns the query assembler
sets the name of the parent obj entity
add a new prefetch to the tree
build the group by list
returns the page size
returns whether the translate parent is a translate parent
add a collection of to the list of individuals
sets the page size
processes a column
sets whether the parent should be translated
returns true if the inherited value is inherited from the
returns the user properties
set the inherited flag
this method is called when the relationship is added to the
sets the list of entities to be used for the given list
returns a new alias for the given table
process a line from the table
create a child data context
returns the current engine
returns the root of the tree
returns true if the table supports aliases
returns the first rows of the given query
returns a list of all the results of the given query
this method is used to query the next query result
executes the given sql statement
this method is used to set the next level of the
returns true if the result is a result
returns the parent of this query
sets the parent of this node
returns code true code if this instance of
returns the number of queries that have been cached
checks the next row to accomodate the next row
returns true if the next row has more rows
returns the next row in the table
returns the width of the row
returns a list of all the rows of the data set
returns the parent data domain object
returns the message for this throwable
checks if the query is able to query the query
returns the next element of the database
returns a collection of all maps of the data maps
adds a data map to the map
adds a map to the map
caches a list of snapshots in the cache
returns the collection of entities to be used
returns a list of snapshots that have a snapshot of the given
returns a unmodifiable collection of all the nodes
create a new data context
prints the exception
returns the global exceptions
returns the query result
returns the logging level
sets the logging level
create a data context for the data store
this method is used to advance the iterator to the next query
this method is used to set the rows in the data source
creates a transaction object
returns a list iterator of the instances of this class
returns the next row id
returns the node with the given name
returns the width of the table
returns a collection of all the objects in this object
returns the results
returns the node
clears the list of all the items
returns the list of delete entities
set the data rows to the given query
gets the list of objects that are inserted into
returns the list of update entities
returns the data object of the given object
returns the entity sorter
returns the cached snapshot for the given object id
sets the entity sorter
shuts down the cache
returns the template string that will be used to extract the
returns whether the text is being removed
returns the default java class name for the given size
returns the qualified name of the column
returns a list of all the rows of the data set
returns true if the database has generated the generated sql statements
returns the next row in the table
guess type
returns the next element of the entity
this method is used to determine the types of the given type
this method is called when the query request is received
override to override the default behavior of this method to
returns the width of the row
binds the given context to the given context
checks if the next row is available
create a translator for translating the database from the database
this method is called when the is about to be created
initializes the default types
returns the label of the label
returns a collection of all factories
removes the given code extended code object from the factories
registers a new extended type of the given type
returns the type of the given java class name
returns the type of the given class
returns the source
returns true if the message is a
invalidates the object list
this method is used to create a object to be persisted to
returns the metadata for this database
creates a new instance of
returns the catalogs catalogs catalogs catalogs catalogs
returns a list of all the schemas in this database
get the list of table types
loads the data relationships from the database
invalidates the data store
removes all associations from this pooled connection pool
deletes an object from the database
notifies the listener that the connection has been closed
returns a string representation of this object
returns a string representation of this object
returns the message as a string
sets the channel
creates an object id
returns the entity resolver
this method is called when the application is about to close the
returns a list of event queue objects
lookup the data object for the data object
commits changes to the underlying
returns the subject of this subject
remove a listener from this manager
deletes an object from the object
returns the local collection of subjects
this method is used to perform the given entity
returns true if the provider is valid
perform the query
rolls back the changes
reads a property value from the underlying
inject the value of the superclass
returns the accessor for the property accessor
shallow merge the given object from the superclass
prepare the object for access to the persistence state
this method is called when the user wants to kill the downloader
forces the parent to parent changes to parent
shutdown the listener
this method is called after the object is being validated
creates a value holder for the given object
this method is called after the object is being added to the
this method is called when the event is triggered
returns true if the current directory is a read directory
returns true if the current user can write the current user
initializes the file with the given file
this method is called when the tree is traversed
returns true if the file is undefined
checks if the upgrade upgrades is needed
traverse the project tree and all its children
traverse the given domains
returns the upgrade messages
commit changes to the underlying stream
returns true if the file has the code renamed code
build the file list
the query for the queries
returns the validator
this method is called by the project
find a file with the given object
initialize the file with the given file
appends a path to the path
returns the object
returns the driver file
returns a list of all children of this list
returns the project path
returns the root of the tree
returns the canonical file name of a file
this method is called when the user saves the location
returns the object that is the path of the object
gets the value of the load status property
returns the parent object of this object
returns true if the current project can be used
sets the driver file
sets the project file
returns the suffix for the location of the file
returns the data source factory
sets the configuration
returns the location of the object
returns the location of the bendpoint
returns the save delegate
returns the project directory
returns the suffix for the location of the file
sets the save delegate
returns true if the object is capable of wrapping the
returns the path to the project
sets the location to the location of the image
this method is called when the user presses the save
resets the validation results
returns the maximum severity level of the message
returns the file to which this project belongs
resolve the file location
returns the validation results
resolve the old file
returns an iterator over all the nodes in this tree
save the file
saves the current file to the current save
returns the project object
returns the file that the alternate file is located
returns the dest jar
returns the file that is the file of the given file
returns the source jar file
sets the alternate project file
sets the destination jar
saves the current node
sets the source jar
cleans up the cache
performs an query to the specified query
returns the string representation of the given substring
validate the project
synchronizes the entities with the given entities
returns the attribute of the given entity
prints the given map to the output map
prints a collection of objects to the list
prints a property
executes the query and returns the generic object
executes the query
sets the servlet context
perform a query
finds the url for the specified location in the list
adds a path to the filesystem
puts a key value pair into the map
set the root element of the tabular data
returns the target entity
adds a sql statement to the list of sql statements
encodes the code code
returns the parent entity of this entity
perform the queries
sets the entity that this entity is being dragged
encodes the
returns a list of all group objects
returns a list of all the
returns the target entity
returns the schema
returns the catalog name
returns a collection of all the targets that are associated
returns a collection of all the source attributes
returns the name of the parent entity
remove a database relationship from the database
sets the name of the parent entity
returns the name of the target of the
creates a descriptor for the given entity name
returns true if the relationship is a dependent entity
exports the data to the given
returns the name of the target
returns the qualifier qualifier of the uml package
returns the first row matching the given row
returns a query object that represents the query
returns the java class of this object
encodes the code code object
returns the client side resolver for the current element
returns the db attribute for this object
sets the db attribute
get the db attribute name
get the collection of entities in the database
returns a snapshot of the current snapshot
set the db attribute name
returns a copy of the source code snapshot code
returns the object of the attribute
returns a map containing the source of the given snapshot
returns a collection of the generated attributes
sets the to many
adds an attribute to this
returns the entity resolver
get the db relationship path
remove a call parameter from the call
returns a list of call parameters
returns the path to the database that the database is included in
returns the call out parameters
returns a collection of the data maps
returns the result parameter
sets the base relationship path
get the tree lookup entity
sets the transaction events enabled flag
returns the java class loader for the given class
returns a query object that represents the query
returns the java class of this object
returns the list of all the parameters contained in this
returns the code object code that is associated with
gets the expression specification string
sets the expression spec
returns the attribute with the given name
returns the object entity that is associated with the given object
sets the declared property of this object
remove a property from the property list
returns the class descriptor factory for this class
gets the relationship attribute of the relationship bean object
compiles the special properties
sets the class descriptor factory for this factory
adds a relationship to this entity
compiles the given map of properties
returns the entity identifier
returns the relationship of the map
returns the entity
returns the first relationship of the given entity
returns a unmodifiable collection of all the relationships in this relationships
returns a view of the attribute map
returns a collection of all attributes of this object
returns the last path component of the path
returns an iterator over all components
sets whether this class implements the class
returns whether this class implements the
sets the value of the is client entity property
returns the is client entity
sets the value of the is abstract entity property
returns true if the entity is abstract
get query returns a query object that represents the query
compares the node to another node
returns true if the current value is a noop
returns a collection of all registered nodes
applies the inference graphs to the graph
performs the operation
this method is called by the
this method encapsulates the service to return the object
returns the object at the top of the stack
returns the map of the id snapshot
creates a shallow copy of this copy expression
shallow copy of this
returns the value for the given attribute
returns a collection of all the attributes
shallow copy of the expression
returns the replacement id
shallow copy of this binary op
returns the number of operands
sets the replacement id
shallow copy of the
shallow copy of the
creates a new instance of the replacement id
returns the expression of the expression
creates a shallow copy of this expression
returns an expression that can be used to evaluate the expression
returns a string representation of this object
returns the graph manager
shallow copy of the
shallow copy of the
returns a collection of entities
returns a shallow copy of this expression
shallow copy of the
shallow copy of the
shallow copy of the
returns the declared relationships
shallow copy of the
shallow copy of the
shallow copy of the
shallow copy of the
returns a collection of all entities in the database
shallow copy of the
get the attribute for the given db attribute
shallow copy of the
shallow copy of the
get the db entity with the given name
returns a list of objects that contain the given filters
returns the relationship for the given relationship
returns the name of the expression
shallow copy of the
shallow copy of the
returns a collection of all the elements in this collection
returns the object entity for java class java class
shallow copy of the
clears all the data in the database
creates a shallow copy of this expression
get an entity object from the entity
shallow copy of the
shallow copy of the
description of the method
shallow copy of the
returns the node of the given entity
returns a collection of entities to the given entities
shallow copy of the
returns a shallow copy of this expression
shallow copy of the
shallow copy of the
this method is used to log the message
configure the configure logging
create a default generator
executes the task
this method is used to execute the task
process the project
loads data map from a map
loads the data map
validate the attributes and attributes
filters the entities
filters all items in the list
sets the destination directory
sets the overwrite flag
sets the flag
sets the adapter
sets the template
sets whether or not the is
returns a collection of all the procedures
sets the version of the driver
sets the encoding to use for the current encoding
create a new server event bridge
sets the output pattern
sets the mode
initializes the service
destroy the service
returns the root channel of the channel
returns the session to use for the session
create a new server session
initialize the configuration
initialize the servlet bridge
initializes the servlet
mark the object as dirty
sets the
sets the home object
send a message to the server
sets the
called when an attribute change has been changed
returns the name of the property mapping file
sets the object
set the current service
called when an attribute event is added to the event
pop the last element from the stack
sets the
returns the class of the
returns the connection info object
called when an attribute event is removed
returns the serializer factory
set the type of the send collection
called when the relationship is changed
called when a relationship has been added
called when the relationship is removed
decodes an element from the given jdom element
returns the query that matches the given gallery
adds a gallery to the list
returns the visit data context
sets the error message
append a message to the error message
append a message to the error message
returns true if the message contains a string
returns true if the message has error message
reset all properties to their default values
reset all properties to their default values
validate the properties and returns the properties
reset all properties to their default values
description of the method
called when the attribute has been added
description of the method
called when the relationship has been changed
checks whether the new gallery is created
tests the actual classloader
test select like
test select like
test method for
this test return a string with the same parameters as the
test method for
test method for
converts a row to a row
get the of the
updates the given row with the given id
test the query and read method
test the select query and set qualifier
test the select query and set qualifier
test the constructor
test select exception
this method populates the database with the values from the database
adds a new paint to the current view
build the context object
executes the query
get artist with artist
test the qualifier qualifier
test the of the employee
test the
tests the company
p get multiple objects
test that the department is in the company
test that unrelated data is not null
counts the number of objects in the given class
test multi query rel
test the of an existing entity
this method is called by the framework when a template is set
test the qualifier
returns the access stack adapter for the given adapter
returns the data domain
deletes the test data from the database
creates a new data node
creates the schema
test for the
returns the test directory
sets the template to be used for the given query
creates a new mirror context instance
creates a test data
returns the access stack
create a new access stack
test for artist has changed
test method for
ensure that the file is not already in the directory
test method for
returns the painting stats for the current component
returns the current painting stats
returns the default code blog code for the
validates that the given validation result is valid
returns the blog entry
returns the thread depth of this node
returns the number of children of this blog entry
returns the discussion list
returns true if the given entry is a child of this entry
filters the entities
returns true if the passed entity is a filter
returns true if the entity should be included in the publications
activates the external page
activates the external page
the create method called by the container when an instance of this
register the user to the database
generate a password for the current character
this method is called when the servlet context is initialized
creates the tables
creates the data types
adds projects to the database
adds the statuses to the current host
this method is used to build the admin
reset all properties to their default values
returns the child of code parent code at index code index code
returns the number of children of parent
returns the index of child in parent
returns true if the specified object is a leaf
this method is called when the property is read
write a property value
connect to the server
dispatches the specified command to the server
handle the exception
processes a command
commits the changes to the database
initializes the servlet
destroy the service
factory method for instantiating the generator
factory method to instantiate a code null code object
returns the model of the model
returns the view
returns the top frame
returns the selected object
returns the selected object parent
returns true if the action is a activated action
updates the status of the action activation
tree selection listener
shuts down the application
returns the specific child of the specified
closes the project
opens the file
edit the given object
deletes the selected model object from the selected project
method to stop listening for property changes
this method is called when the property changes
checks if the dialog has been opened
called when the controller is shutdown
creates a new instance of deployer
returns the selected object
returns the active
creates the main frame view
returns the value of the property
sets the value of the property
returns the binding for the given key
returns the sub element with the given name
sets the property binding for the given property
returns a component with the given name
sets the action binding
sets the name of the bean
renders the current color
lays out the components
a person from the database
the department
executes the given http session
returns the of the given number of people in the company
returns the id of the object
check if the database exists
close the connection
returns an entity manager
returns a stateless entity manager
returns the entity manager
checks if the given class is a
returns the entity map
returns the
create the persistence manager object
returns an instance of the given class
returns whether the classes should be excluded
returns true if the method is valid
returns a new class loader to use for the
set the class loader to use
close the connection
returns true if the connection is open
persists the given entity
removes an entity from the pool
flush the stream
sets the flush mode to the given flush
returns the flush mode
refreshes the given entity
clears the internal state of this object
returns true if the given entity is in the list
creates a query object
create native query for a native query string
create a native query
returns the transaction object
returns the column definition of the column
returns the hint for the given name
sets the string to be used for the lob
override to override the override method
override to merge the result of the jpa dao
returns the entity with the given class
set a parameter to a given value
returns the entity with the given class name
begin uml doc
commit the transaction
rolls back the transaction
returns a list of all the result objects that have been stored
returns true if the transaction is active
executes the update operation
returns the discriminator value for this discriminator
get the first single result of the query
returns the maximum query that will be used to query the query
sets the hint for the query
set the first result
set a parameter to a value
sets a parameter set for the temporal string
sets a parameter set for the temporal
indexed getter for property parameter
sets the parameter at the given position
skips the given class name
sets a new value at the given position
respond to a command event
start the application
pause the application
this method is called when the user selects an item
this method is called when the user selects an item from the
returns the maximum number of result count
search for a word with a given item
returns the current language index
returns the file name of the given word
gets the online value for this
find the word in the dictionary
returns whether or not the input stream is
sets the online
sends data to the server
append parameters to the output buffer
sets the background color
returns the background color
sets the font of the font
sets the font of the font
returns the font of the font
append a comma separated list of urls to the urls
sets the mode of the
initializes the applet
start the applet
this method is called after the application is being initialized
adds a model listener to the model
notifies all observers about the current model
initializes the parameters
initializes the applet
initializes the editor
this method is called after the constructor
initializes the parameters
initialize the model
returns the singleton instance
initializes the components
initializes the controller
loads all plugins from the model
returns the singleton instance of this class
initializes the view
creates a new application properties
dispatches an object to the underlying object
creates a new language properties object
show the document with the given url
called when the model changes
notify all model listeners that the model has been disposed
adds a model listener to the model
notifies all listeners that a model has been added
returns the instance of the
paint the current component
checks whether the given size is in the set
dispatches an object to the given object
p convenience method that calls the target code method code
returns the b b
this method is called after the application is being automatically called
initialize the application controller
returns the area of the area
selects the given painting
paint the component
adds the image to the canvas
this method is called when the slide modification is selected
erases the pressed state
erases all pressed
returns the localization resource bundle
creates a portlet context for the given servlet context
stores the portlet to the database
sets the writer
return the selected class
return the
returns the graph class
p writes the end of the header
p decode the given code attribute code
create an event
returns the location of the image
pads the label to the label
returns the script for the given path
returns the of this form
get the form number of the form
returns the href http www
return the text of the resource bundle
adds a new value to the list
sets the debug flag
replaces the current object with the given one
this method is used to set the encoding of the form
set the value of attributes
returns the table column
returns the table of the table
clears the data
close the stream
moves the current position to the specified position
truncates the code position code to the given code position code
sets the temp directory to the given directory
returns the length of the file
returns true if the file is large enough to be opened
returns the string representation of the given character encoding
writes the contents of the current object to the given output stream
writes the content of the to the given code byte code
reads from the stream and write the to the stream
create a temporary file
writes the given data to a temporary file
reads the bytes from the given file
writes the specified byte array to the stream
writes the specified byte to this output stream
get output stream
returns the value of the property
sets the ip address
sets the ip address
sets the standard string
destroy the field
create an event id for the event
returns the user display
returns a simple display simple display string
checks if the specified date is after the specified date
checks if the specified date is before the specified date
compares the time of the event and returns the time
constructor that allows the constructor to the
creates a new instance of portlet
creates a new cookie with the given name and value
returns the month name for the month number
returns the maximum time of the idle sessions
returns the day name of the day
set the status code
begin uml doc
returns the content type of the content
sets an attribute
sets the content length of the response
returns true if the response has been modified since last
sets the response response response
returns an output stream for writing to this stream
destroy the component
returns short name of the day
returns the config file
sets the container encoding
gets the environment for the given uri
returns the date for the given calendar
updates the application context
gets the
returns the day of the second calendar
converts a date to a calendar
converts a string to a w3 c date
builds a link of the link
updates the execution time
builds the msg
builds a link link
this method converts a list of events to a string
returns the portlet applications
sets the list of applications to display
finds the node whose path is the root node of the path
adds a portlet application to the application
adds a node to the graph
set the portlets roles
find the node by its name
returns the portlets roles
sets the menus
returns the menus
returns true if this node is a leaf
lookup the named object
adds a child node to this node
find a child node with the given name
returns an iterator of all children of this node
removes a child node from this node
returns a string representation of this object
parse the specified path
this method is called when the servlet context is loaded
called when the servlet context is initialized
sets the plugins
adds a plugin to the plugin
returns the editor jar
sets the editor jar
returns the editor type
returns the main class name
sets the editor type
sets the main class name
returns the roles of the user
gets the value of the property
sets the
test method for
test the method set parameter methods
test method for
test the http servlet request parameter
ensure that the method attribute access attribute
this method is used to get the data for the portal info
test that the portlet is correctly returned from the servlet
tests the method
test portlet config
test portlet exception handler
test method for
stores the current state of the portlet
test that the portlet method is really sure that the portlet is
test destroy portlets for the portlet
report the end of a cdata section
report the end of a cdata section
sets the value of the parameter with the given name
sets the property name and returns the value of the property
set the properties to be used for the output
get the message
returns the uri of this uri
returns the media type
returns the size of the list
returns the current position of the object
returns the next token
returns the prefix associated with the given uri
returns the root version of this repository
returns all versions of the current version
returns the version of this repository
returns the version of this repository
returns the version of the repository
returns the version name of this version
returns the version of the project
returns the ticket
adds a label to the repository
removes the specified version label
this method is not supported by this class
removes the given child version from this repository
returns whether this object has no locks
returns the access manager for this repository
returns the property with the given path
returns an iterator for the primary node types
returns the node types that this property
returns the lock capabilities
returns the observation manager for this repository
returns the mixin value of this node
get the node type
checks if a property can be used
checks whether the given child can be added to this node
returns true if the is allowed
checks whether the given node is a child of this node
returns the workspace
returns the root node of the tree
returns the node with the given uuid
returns the node by its path relative path
performs a revert operation of the repository
returns the current namespace uri for the given parent path
sets the namespace prefix for the given namespace
copies a file into the destination path
this method is called when the user logs out
returns the uuid value of this repository
compares the specified object with this code double value code
compares the specified object with this binary value
indicates whether some other object is equal to this one
compares the specified object with this date time value
compares the specified object with this code long code
indicates whether some other object is equal to this one
set the stream to the state of the
set the value of the
indicates whether some other object is equal to this one
returns the message
returns the root exception
prints the stack trace to the root cause
prints the stack trace to the specified print stream
indicates whether some other object is equal to this one
prints the stack trace to the specified writer
puts an object into the queue
inserts an object into the queue
retrieves the object from the queue
get the first time in the queue
creates a new thread
returns the maximum number of threads to be used in the maximum
sets the maximum number of bytes pool
returns the size of the normal pool size
sets the size of the pool
returns the number of bytes in the pool
sets the thread factory
returns the thread factory
adds a task to the pool
creates a new thread
interrupt all threads
returns the code list code of the code code
this method is called when the thread is done
returns the task that is waiting for the next time
this is called by the scheduler
this method is responsible for updating the jcr jcr jcr jcr jcr
merge the jcr source jcr path with the given name and then
restores the version of this repository to the given version
restores the version of this repository
restores the restore version label to the given value
returns the version history of this item
this method returns the base version of this repository
initialize the portlet
return the format patterns
sets the format patterns patterns
parse the pattern formats
setup the cache
returns the first element of the string
returns the last row in the list
returns the next element in the iteration
returns the previous element in the history
scroll to the given row
handles the user clicking on the scroll bar
process selected area
returns the status of the user
returns the alternate alt text
sets the alt attribute of the object
returns the label for the press button
returns the coordinates of the current point
simulates clicking the action to be performed on the page
sets the coordinates of the current character
returns the shape of the shape
sets the shape
delete the selected record
return the first value of the code code
returns the last value in the list
sets the action listener to be used when the action is performed
returns the next element in the iteration
returns the value of the field
returns the previous element in the list
resets the internal state to a string
updates the status
appends the given message to the current faces context
sets the value of the value
clears the data from the table
sets the selected class
setter for property unselected class
count the number of rows in the table
set the style class
the method that is called when the user presses the new
sets the immediate value for this
returns an iterator over the list of all customers
scrolls the given row to the given row
returns the current value of the current
sets the current event
p return the component family to the given string
this method is used to indicate that the cca server
returns the map component
p gets the state of the instance as a code serializable code
p return the component family to the given string
p return the component family to the given string
p perform the given state
p return the component family to the given string
returns the value of the image
p perform the code restore state code method to return the state
returns the location of the image
returns the form submission
returns the href for the given action
p return the component family to the given string
returns the name of the component
p convert a string into a string
p decode the specified code faces form code
returns the number of columns in the given columns
returns the name of the component
returns the column footer count for the given column
returns the uri of the jsp page
returns the column header count
p returns the total number of pages in the form
p returns the number of attributes for the specified
get the remote port for the given endpoint name
sets the object class constraints for this constraint
sets the type of this property
sets the default object classes
sets the auto create property
sets the value constraint
returns the auto create flag
returns the value of the constraint constraint property
sets the on version
sets the default value
returns the of this
returns the default value
stores the properties to the datastore
initialize the
adds a new aspect
adds a list of aspect to the
the urls
find the class for the given name
checks if the given file is sealed
test method for
test method for
tests the method set parameter methods
test the http servlet request parameters
test method for
test portlet exception handler
test that the portlet is in the constructor
test that the destroy method is called runtime
creates the default users and groups
create the users session
setup the test
p this method is used to set the header for the
deploys the archive
returns a collection of process definitions
returns a collection of process definitions for this definition
returns the process definition for the given process definition name
returns the process definition for the given process definition id
get process definition
returns all process definitions
returns all process definitions for the specified relations
process a start process instance
process a start process instance
process a start process instance
process a start instance
get the activity form of the given activity
get the activity form of a flow activity
perform a flow of the given activity
perform a flow of the activity
perform a activity
cancel flow execution
returns the flow with the given id
returns the flow of the given flow
check database connection
stores the current state of the
test portlet context
tests the method set parameter methods
test the http servlet request parameter
tests that the parameter is correctly returned
test that the portlet action is returned
tests the method
test portlet exception handler
test method for
test that the portlet method is really sure that the portlet is
test destroy portlets for the portlet
retrieves the specified
this method is called when the is removed from the graph
returns a collection of the given traits
returns a collection of all the items contained in the given
returns whether the should speak to speak
returns true if this operator is an operator
sets whether to speak the speak
sets the operator
sets the tokens to tokens
returns a string representation of this object
parses the given token
sets the nick name
returns the add mode
returns the nick name
returns the first character of the first character
returns the value of the middle value property
adds a ban mask to the
parses the given token
returns the second mode
sets the middle value
returns the third mode
returns the string representation of the pair
parses the given token
sets the add mode
sets the server name
adds a user to the room
returns a string representation of the object
sets the first character
sets the second mode
returns the host token
returns the nick of the user
sets the third mode
adds a user to the list
returns the server name token
returns a string representation of this object
returns the user token
returns the mask value
parses the token
sets the host token
sets the mask value
returns the string representation of this object
sets the nick token
sets the server name token
returns the channel name
parses the given token
sets the user token
sets the channel name
returns a string representation of this token
check if the user is logged on the user
returns a string representation of the channel
returns the value of the letter property
returns the trailing token
parses a token
returns the value of the field
sets the user name
sets the middle tokens
parses the given token
returns the user friendly name for this user
sets the trailing token
sets the letter value
returns a string representation of this object
returns the any token
sets the number value
parses a token
returns the value of the given user name
returns the channel token
sets the value of the value property
returns a string representation of the object
returns a string representation of this object
gets the trailing value
adds a message to the list of responses
parses the token
sets the value of trailing trailing
returns the string representation of this object
this method is called when the user selects the thread
returns true if the connection is disconnected
add a channel to the list
sets the value of any token
this method is called when the thread is started
sends a message to the server
sets the channel token
get the rights for the given nick
disconnects from the server
sets the disconnected disconnected
sets the mask
waits for the response to the server
disconnects the channel
adds a new message to the socket
returns the number of idle time in the pool
returns a string representation of this token
this method is called when the thread is started
returns the channel at the specified index
starts the server
sets the time to the idle time
returns the user limit
returns the value of the channel name
gets the value of the replies property
stop the server
returns the settings object for this action
returns the host address of the connection
returns the user number of the user
returns the number of users visible
returns the number of idle connections in the pool
returns the mode of the current character
adds a list of to the channel
returns the name of the nick that is used to represent the
returns true if the user is allowed to speak the given user
returns the real name
checks if the user is a guest
returns the full name of the user
displays the host file for the given user
returns the password from the given password
checks if the user is a operator
returns the name of the package
returns the request message
returns the topic
add a channel to the list of channel channels
sets the request message
sets the maximum middle token needed to
returns true if the type is inside the client side
returns the command token
sets the middle token needed to use the middle
sets the minimum middle token needed to generate the minimum
sets the param needed
returns the parameters token
returns true if the type is only
returns the prefix token
checks if the nick name is a match
returns true if the type is
returns a message for the given message
returns true if the value is null
returns true if the type is a private field
returns the syntax of the syntax
sets the command token
sets the parameters token
returns true if the type secret is a secret or not
remove the user from the channel list
sets the prefix token
sets the state
returns true if the user is currently on the user
remove away the current message
returns a string representation of this token
removes a ban mask
remove a channel from the list
removes a nick from the list
rename a user
removes the password from the password
sets the away value for this weather parameters
remove a user from the list
sets the away message
remove the user from the list of users
set the away status
rename a user
sends a message to the server
sets the nick name
sends a message to the server
sets the real name
sets the server name
set the operator of the rights
starts the process
sets the topic
sets the type of the client inside only the client side
sets the type of only
sets the type of
sets the type of the private attribute
sets the type secret property
sets the user limit
notifies all registered listeners about the model
this method is called after the application is being automatically called
returns the instance of the controller
parse the given xml document
validate a string
p parses the given xml message
this method is called when the is read
sends a map to the server
deserializes the given value from the buffer
get the packet
sends the dialog to the server
kill the connection
puts a value into the
this method receives all the packets in the packet
sends a buffer to the server
receives a packet from the socket
sends a packet to the server
receive all packets from the packet
this method is called to send a packet to the socket
sends a packet to the remote server
register a new server message
reads a signed byte from the input stream
unregisters the server message
returns the byte array
updates the players network
returns a deep copy of the packet
get the typed packet
this method receives a packet from the replay manager
returns the position of the mouse event
copy the data to the point
compares its two arguments for order
adjusts the size of the texture
initializes the renderer
sets the cursor size
sets the text
adds a text to the end of the text
move the point to a point in the
set the viewport size
adds a new tile to the tile
returns the value of the requested user
returns the bank name from the bank
draws a box at the specified color
the
set the draw box to the given texture
serializes the given data to the buffer
code end draw code method
draws a polygon at the specified color
captures the current screen
returns the current node
finalizes the current game
add a condition to this condition
adds a condition to the list of the given condition
evaluate the condition
checks if the given quest is in the queue
reads the attribute value from the given element
read an integer from the given element
returns the annotation named by name
adds a quest to the list
returns true if the quest is done
sets the filter to the given pixel
reads an attribute from the xml stream
sets the name of an xml element
called by the client to notify the server that a sound
broadcast a sound to the sound manager
plays a sound from the given audio stream
called when the action is being called
disconnect from the server
disconnects the server
adds a collision to the list of collisions
updates the given view with the given user
check the inactivity of the connection
move the current location to the destination location
the
checks if collisions collide with another
checks if the
executes the given tag
returns true if the anchor point lies within the given shape
toggles whether or not the display is enabled
sets up the network for a specific network
the engine
p add quest to quest
this method is called when a quest is about to be done
the method code run code
launches the dialog
launches a dialog
register a new client to the game
saves the player name to the given name
unregisters a client
load the name of the player
this method is called when the is
checks if the quest is done
saves the game to the given file
returns the point
saves the information about the server info
builds a key door
returns the weather map
sets the sound to be played
plays the map
returns a helper that captures the entities of the
returns the number of in a range of
shifts the previous one
returns the number of usable value
checks if the given rectangle is a px tag
returns true if the given entity is
returns the point landing point
called when the is closed
this method draws a zone range
kills the living
returns the distance between this point and another point
writes the state of the to the given buffer
returns a zone object for the given zone
writes the current object to the specified
compares this object with the specified object
returns the position of the
returns the entity with the given name
this method will be called when the user presses the
alpha alpha
the line
adds an entity to the sprite list
returns the kind of the item
initializes the object
returns the nth number of the given nth nth fraction of the
returns true if this is a
returns true if this is a diagonal or
returns true if this is a mobile watcher
kill the
returns the reference element
move the
create a collision with the collision model
multiply this object with the given coordinate
scales the coordinates by the given factor
returns true if the given rectangle is a crossing
this method is called by the native library to extract the inventory
returns the slope of the y slope
called when the user selects a client
stops the dialog
returns true if the specified object is equal to this
buy the item
adds an item to the inventory
removes an item from the inventory
the
checks if the item has a least one item
jump to a point in
updates the dialog
reloads the configuration
returns true if the is
moves the to the specified angular position
the
sets the case of the item
draws the collision tile at the specified coordinates
builds an image for the given tile info
returns the object on the click on the screen
returns the case item description for the given
sets the selection to the given
draw the given area
returns the close point of the given
checks if two links are compatible with the two vertices
returns the class of the value of the given int
compares two objects for equality
saves the current state of the current game
returns true if the given line is filled in the image
returns the width of the specified shape
rotates the
returns the name of the player that matches the given
checks if the league is admin admin
checks if the league is a league admin
checks if a player has been already played
add a player to league
add a league admin role to the league
add a match admin to the league
update the blms league roles
update the blms league
update the blms league
check if a league is league is a league admin
checks if a league is admin rights admin
checks if a player is league member
returns the date from the given date
checks if the key exists
returns the value of the key
checks if the parameters are unique
add a statement to the statement
generate a new for the current line
this method is used to ensure the object is not already written
returns the next character
initialize the
continues eat behalf of whitespace characters
returns true if the given character is a whitespace
returns true if the given character is a non null
get the escaped character
reads the next character
read the next character
read the character from the string buffer
reads a float from the given buffer
read a string symbol from the symbol table
read a string token from the input stream
generate the table for the data
start an element
sets the version of the apply version
returns the version of the version
returns whether this version is incremental
start a new element
flushes the buffer
subscribes the given category to the given category and the
add observer for the given event
remove observer from the list
returns the name of the event recordable with the given name
test of m method
this method is called by the framework to bind a new map
clones this object
bind the given name
return an emulated context
find the path for the given path
throws a security exception if requested
returns the include include and include include name
returns all widgets in the list
reset the properties table
sends a redirect to the page
sends a redirect to the page
get the resource name for the given resource
sets the page to the given value
this method is used to parse an error message
called when a directory is being removed from the directory
this method is called when a file is being processed
returns the named object
sets a named object in the table
returns the of the given
gets the field attribute of the datasource field object
creates a new assembly and returns it
cancels the current row
called when the user changes the table
sets the column names
returns the list of all the widgets contained in this list
callback method invoked when the user has changed
returns an enumeration of all fields
returns the value of the field name
creates a widget from the given element
selects a select xpath expression
returns a list of all objects satisfying the given xpath expression
returns the first element of the xpath expression
returns the output element of this element
returns the value of the specified key
returns the text element
returns the type of this field
initialize the service
destroy the broker
get the query object from the cache
returns the option value associated with the specified key
returns the option value for the specified option
returns the boolean value for the specified option
update the cache
adds an option to the list
sets the name of the xml store
select a list of xpath expressions
select first element in the list
return the first element in the cache
returns the value of the given xpath expression
returns the value of the given xpath expression
adds an object to the list
adds a collection of strings to the dt
creates a new clone
returns a string representation of the current object
returns the string representation of the current value
executed before the document is executed
returns the short mode of the current
returns the application path
sets the link options
returns the url of the specified resource
return a link that contains the given text
return a link to a given string
returns a link to a string
returns the href link for the given href link
returns the href link for the given link
checks if the given field is a value
add a page name to the page
sets the
reads the fields of the data from the xml
sets the value of a field
add a field to the field
add a field to the field
called when the job is done
returns the profile of this profile
set the profile to be used for this profile
set the encoding to use for the current document
add a directory
returns the value of the boolean value
sets the value of the boolean value
returns the int value
sets the int value
returns the value of the double value
sets the value of the double property
returns the value of the string value
sets the number of the
sets the value of the field
returns the element at the specified position in this list
sets the ith node
adds a node to the end of this node
inserts a node at the given position
removes the child at the specified index
returns the index of the first occurrence of the specified node
returns the parent of this node
returns the number of children of this node
sets the device connection state
returns the index of the card at the given position
this is the entry point method
creates the file menu
this is the exit method
get the list of student states
returns the list of spring bean
select user action
saves the user bean
find the component with the given name
returns the portlet url
returns the action for the given choice
returns a string representation of the period
fills the list with the
stores the data in the database with the given key
returns the record from the database
closes the database connection
check if the record is valid
initializes the thread pool
returns the time info for this time
sends the discovery request discovery to the server
set the playing time of the image
returns the multicast address for the current transaction
returns the host prefix
returns the signature of the given challenge
get the playing time after a certain time period
sets the button action
shows an error message
displays an error message
shows an error message
called when the shared preference is received
initializes the servlet
returns the grid
returns a copy of this grid
called when the task started
disposes this connection
called when the task completed
this method is called when the task is cancelled
returns the transport
called when the task is started
returns the session
clears the resource manager
returns true if the resource is a valid resource
compares the specified object with this code resources manager code
log a trace message
returns the resource associated with the given key
trace a message to the trace
trace a trace message
trace a trace message
called when a task is started
method to set the method name
called when a scheduler is starting
called when a task is completed
called when a scheduler is cancelled
this method is called when the method is called
returns the hash code for this resource
called when a scheduler is about to be performed
this method is called when the method is called
description of the method
returns true if the resource manager is empty
add a scheduler to the task
removes a task from the task list
puts the specified key into the internal map
removes the mapping for this key from this map if present
returns the number of resources in this map
returns the connection to the database
append a line to the line
append a line to the line
shows the dialog
insert the given file before the given file
refreshes the panel
sets the label of the label
insert a new file after inserting into the file
removes a line from the file
removes a path from the line
sets the selected file
initializes the applet
returns true if the file is a file or directory
returns the size of the window
returns true if the user has been marked as a string
returns true if the file is a file or directory
returns the file extension for the given file
sets the remember size
returns the base size of this component
translate the file
returns the nested exception
sets the size of the
this method is used to create a directory
returns the maximum size of the
installs the tooltip text
sets the maximum size of the image
installs the button and adds it to the button model
returns the action
initializes the applet
initializes the applet
sets the disk mode
returns the number of storage elements in this block
reads the elements from the input stream
creates a new access record
writes the contents of the object to the output stream
closes the access to the current access file
reads the elements from the input stream
returns the number of storage columns in the table
returns the number of storage rows in the matrix
dispose the
p reads the object from the given stream
initializes the applet
read the elements from the input stream
reads the elements from the input stream
sets the headers of the header
returns the header of the column
set the header of the cell
sets the row ids
returns the row id for the given row
sets the row id
returns the row index for the row
sets the properties of this object
sets the property
sets the cells row in the table
sets the data type
sets the data type for the data type
returns the minimum value of the specified column
returns the maximum value of the specified column
sets the matrix cell to the given values
this method initializes j frame
this method initializes j content pane
sets the output
sets the value of the input attribute
returns the training set
set the training set
this method is called when the training set is removed
this method initializes j menu
empties the list of training objects
adds a delta weight
resets the rank and all the values of the current concept
returns true if the error occured during the evaluation
set the training function
returns the training function
checks if the is satisfied
normalize weights to
cleans up the connection
sets the training inputs
update the weights of the network
checks if the is satisfied
calculates average of average square and returns the average delta
returns true if the is
sets the training inputs
resets the concepts to their initial values
update the weights of the network
adds a new dataset to the dataset
normalize the weights
set the filter to be used for the filter
the filter to be used in the filter
create a new instance of this class
this method initializes j menu item
this method initializes j menu item
this method initializes paste menu item
this method initializes j panel right
this method initializes j text field
this method initializes save button
this method initializes j combo box links
this method initializes save button
this method initializes j text field
this method initializes in text links
this method initializes j text pane1
this method initializes j combo box links
get the limit joint
sets the collision between collisions
set the direction of the quaternion
builds the collision shape
rebuild the body of the moon
returns the wheel info for the given wheel
code set world translation code returns the world translation of the given
sets the world rotation to the given rotation
set the friction for the
sets the
calculate the local for the given
set the for the leds
sets the damping
creates the collision box
sets the default for the cockpit
set the for the
adds a child to the given shape
adds a new child to the given shape
removes a child shape
creates the collision mesh
creates the collision sphere
sets the maximum distance between the and the current
sets the maximum travel distance
sets the max travel distance
update the time
updates the physics simulation
set the compression
set the rotational velocity of the wheel
sets the damping damping
sets the translational damping of the wheel
enqueue a callable operation to be processed
queues a callable to be called by the
sets the
code get collision location code returns the location of the
sets the wheels
gets the location of the collision matrix
add a physics object to this object
code get collision normal code returns the left hand side of the
applies the to the current
returns the normal of the collision wheel
removes a physics object from this physics object
sets the to the given wheel value
sets the value of the property
sets the value of the property
apply the to the
set the gravity vector
rotates the wheel velocities of the
adds a listener to this collision listener
removes a collision listener from this collision listener
destroy the physics object
sets the mass of the person
set the gravity vector
sets the coefficient of the
sets the of the
get the angular velocity of this physics rigid body
code get reaction code calculates the angular velocity
set the angular velocity of this physics rigid body
get the linear velocity of this physics rigid body
code get linear transform code
set the physics rigid body transform
code phase code calculates the force
returns the current continuous force
returns the current continuous force
apply the force to the
returns the current continuous torque
returns the current continuous continuous continuous continuous simplex for the
apply the torque to the continuous
code apply code phase code to set the impulse vector
code apply torque b
creates a collision shape
creates the collision shape
sets the sleeping thresholds for the given physics
destroy the
called when the user has created the commands
called when the window is created
called when the window is opened
called when the window is closed
called when the application is startup
returns the status bar
returns true if the wizard page can be shown in the wizard
called when the user has been initialized
creates the titled pane content pane
reset the dev to dev false if it is set
test method for
reads a line from the input stream
returns the mass of a molecule
returns the name of the module
open the database
create a new profile
delete the profile with the given row id
return a cursor over the list of all notes in the database
return a cursor positioned at the note that matches the given row
update the details using the details provided
rotates the picture
sets the referrer
opens a connection to the server
close the connection
returns the data source
this method is called upon plug in activation
notification from the
stores the properties to the store
sets the preference for the
returns the binary location of the binary file
returns the profile associated with this profile
adds a extension to the resource
creates a browser
create a profile from the given profile
launches the vlc instance with the specified url
sets the listener to be notified when a new
add a new file to the list
creates a compiler
runs the target
convert the code code to a code log record code
converts a level to a number
stop the application
add a new configuration to the library
start the application
adds a new java
p add a new java
sets the main class name
adds a java vm signature to the vm
builds the
adds a new configuration to the configuration
get the handler for the service
adds a new handler to the list of handlers
returns the error message
performs an operation on the given value
pops the top level stack from the stack
returns true if the type is a class
returns the name of the element
returns the http error code
convert a value to a string
convert a given object to a string
the method code convert code to json representation
returns scriptable object for given object
this method is called when the object is a scriptable object
adds a script to the script
executes all the tests in the test page
remove the value of the xa value
returns the current state
redirects the code code to the
returns the state
returns the parameters for the view
returns the gadget spec for the given gadget
returns the view associated with the gadget
injects the gadget into the context
adds the parameter to the request consumer
injects the preferences to the gadget
adds a selector to the list of selectors
adds a dependency to this dependency
adds a collection of dependencies to the list
sets the value of the given key
returns the value of the key as a string
returns the json string
builds the url for the
creates a new
replaces all occurrences of the given spec from this
creates a new
handles a browser to the given url
returns a token pair of the
creates a new person data object for the person
reads the file from the given file
creates a new activity request object
returns true if the cache is a cacheable
fetch the data from the request
returns the content of the content
sets the cache time to live
get a connection
checks if the given protocol is alive
adds a header to the response
adds a new http response to the request
adds all headers of the given map to this request
check if the response is a http response
sets the value of the no cache property
converts this property to json representation
returns the locale specification for the current locale
test that the is not available
encodes the token and returns the
encrypt the current page
load the resources from the given resources
load the given json string into a string
returns the first element of this object
adds a parameter to the query
locks the lock
returns the request that is the request to the given
injects the given gadget into the
checks if the given qname is an element in the namespace
processes a link
creates a rewriter that is used to create a rewriter that is
check if the http response is forbidden
load the resources from the given resources
loads the json from the given jsonobject
process the command line
closes the connection to the server
returns the width of the column
returns the column width of the table
returns whether the column width is automatically generated automatically
sets the col no
sets the column name
sets the col width
sets the column width of the column
sets whether or not the column should be translated
returns the column element
sets the column element
install the popup component
clears the and hides it
pops up the popup and remove the popup
removes the given pane from the root pane
returns the value at the specified code node code
returns true if the cell at the specified row and column and
returns true if the given adapter is not in the list
sets the pattern to use for this pattern
returns true if the given xml is inherited from the parent
returns an iterator over all prefixes in this namespace
returns the default value for the given property name
creates the tool for the given key
sets the default properties to use for the default properties
sets the icon for the expanded icon
sets the icon used to represent collapsed expanded
returns the value at the specified row and column
maps the attributes to a hash map
returns true if the given namespace is forced to a forced or
sets the component to be used for rendering the component
adds a highlighter to the list
adds a highlighter to the list
removes the given code highlighter code from the list
returns the prefix of the first in the
loads the values of all the components in the given array
returns the maximum width in characters of the text
returns the minimum width of a text
sets the view selection model
returns the view selection model
returns true if the hit detection is a hit detection detection process
filters the previous item in the list
sets the column index
translates the given row to the previous filter
translate the row to the previous filter
returns the mapping filter
this method is called when the filter is
notifies the listener that the given filter has changed
returns true if the current word is break
p highlight the given component and its components
checks if the character is a space character
set the content pane
returns true if the character is a bmp character
sets the orientation of the window
reinitializes the component
returns the width of the column
creates search result
returns the minimum height for the given height
returns a clone of the renderer
toggles the popup visibility
returns the width of the given type
updates the selected column
get the maximum value of the given float
sets the sortable property
creates a table column for the table model
method to return the maximum value of the
copies the properties of the given column to the
adds a list of items to the list
creates the control popup
updates the model to the given column model
populates the popup menu
clears all the actions in the column visibility
adds the visibility action to the end of the menu bar
adds the additional action
creates the visibility actions
returns the column visibility actions
returns a list of additional actions that are currently being used
installs this class and its tooltip
creates the action that is used to create the
creates and returns the rollover producer to display
invoke the method tree after youve inserted with a node
applies the background of the component to the given component
process mouse pressed from process mouse dragged
returns the background color for the component
adds a listener to the list of listeners
removes a listener
notifies all listeners that have registered interest for
configures the viewport background
called by the dockable handler when the mouse is dragged
clears the dialog and hides it
sets the tree table model
returns the tree table model
sets the column control
sets whether or not the column control is visible or not
searches for a string in a string
returns true if the specified pattern matches the pattern
determines the start position of the search result
returns true if the pattern matches the given pattern
creates the horizontal scroll action
add a listener to the list of listeners
remove a listener for removals from the list
fires the next document event
fires the first document event
resumes the operation
creates the pack selected
terminate the operation
selects the next action performed when the button is pressed
opens the replace button
cancel the cancel button
closes the selected panel
creates the pack action
sets the editor to use for this editor
sets the mode
initialize the text
find the selected item in the list
find the next line in the tree
find the next character in the list
finds the first word of the given range of the first words
replaces the current choice with the current one
returns the choice to be displayed in the dialog
replaces the current selected text
center the dialog
toggle the state of the state
checks if the given character is a separator
displays a message to the user
sets whether the scrollbar is enabled or disabled
returns whether the horizontal scrollbar is enabled
initializes the applet
initializes the dialog
this is a copy of the owner of the clipboard
returns a match of the regular expression
scrolls the node to visible paths
description of the method
checks if the is enabled
opens a jframe for finding the input
returns true if the cell at the specified row and column
sets the selection model
initializes the component
this fine grain notification tells listeners the exact range
returns the selection mapper
returns the position of the specified glyph
returns the position of the glyph in pixels
sets the applications filter pipeline
creates a listener for the pipeline
updates the content of the panel
sets the foreground color of the given integer
sets the font style of the font
sets the foreground color of the cell at the specified
returns the foreground color to use for the token
returns the font for the given token
returns the style for the given token
sets the range of the range
scans the stream
called when the object is finished
creates a new document
sets whether the loading is a loading
returns the end index of the tag
sets the range of the values
inserts a document into the document
returns the number of clip quads
returns the character attributes for the given chunk
returns the characters at the given index
returns a string representation of this object
adds a text to the text
clears the clip
returns the text of the text segment
refresh the frame
called when the column model is removed
removes all columns from the table
returns a list of all the columns
returns the columns of the table
set the column sequence of the table
sets whether to overwrite the overwrite icons
requests that the active request is active
requests the request to be displayed
update the title of the object
returns true if the selected element is currently selected
update the icons for the icons
the action to be invoked when the action is invoked
sets the column factory for this column
invoked when a mouse button has been pressed on a component
returns the selected perspective
returns the persistence type of this object
returns the display name
returns the icon
returns the help ctx attribute
returns the description of the
creates a new multi view factory
action listener for the action
sets the values of the search and returns the values
returns the unit of the unit
sets the unit of the unit
returns the spacing between the border of the border
sets the border
sets the border spacing
sets the padding
returns the available width
sets the available width
returns the
sets the code tree code
adds a highlighter to this highlighter
removes the given highlighter
resets the default renderer for the given table cell
returns the default renderer for the specified column
sets the termination edit flag
sets the auto start on key stroke
updates the
sets the row size
sets the height of the tree row
enables or disables the row height to be enabled
returns the row at the given point
prints the
prints the given integer to the console
shows the text view
show the grid view
close the frame
redo the undo action
this method is called when the status label is removed
description of the method
called when the internal frame is closed
enqueue a token to be processed
paint the
returns the height of the text in the text area
this method initializes s shell
sets the crs coordinate of the area
evict all the entries from the cache
restricts the query to a query
attaches a feature to this feature
attaches a feature to the feature collection
the hit method
returns the type of this feature
sets the type of this feature
returns the filter pre which contains the
returns the filter post
split the current state
deletes the data from the data set
clears the data
returns the index of the grid to be used in the
compares this source location to another
returns true if the object is equal to this
resolve all the methods annotated with the
executes an action
adds a sub section to the list of
returns true if the given code literal code is not
checks if the given is already created by the user
stops the current flow
returns the first ag adress of this
the successor of the current cycle
check the current state of the mail
returns true if the current token is capable of consuming the
this method is called to signal the next time to em em
creates a table for the given columns
returns the name of the
sends a message to the server
broadcasts the given message to all the nodes in the message
returns true if the queue is currently running
sets the cycle number
returns the cycle number
returns the select all predicate name for the given select clause
returns the sql string for the given delete
returns the number of queries in the query
returns the parameters string for the given parameters
this method will be called when the agent is
this class is used to acquire the for the current state
initializes the
method to return an that has been
removes a goal from the
compares this object with the specified object for order
initializes the
create the queue
reset the state of this object to its initial state
resumes the specified transition
add an exception to the queue
removes an event from the event queue
removes the from the
the
writes the given file to the server
adds a function to the list
adds a function to the
function to get a function
returns the user configuration file
loads the user preferences from the file
returns the jar file
returns the home directory
update the
returns the jade jar name
returns the jade argument
returns the java source code for this code code
the goals to the
returns the ant lib
imports the given agents
the message
returns the buffer
creates a new
creates a new
sets the to the given system
called when the action is executed
waits for the thread to wait for a sync message
inform the listeners that a change cycle is finished
this method is called when the activity is removed
returns the of the given
adds a to the phenotype
removes the given from the phenotype
replaces the of the given
creates the threads
returns the state of this node
generates an xml representation of this object
changes the state of the
returns the instance of the
initialize the applet
stops the timer
this method is called after the layout manager is initialized
draw the screen with the given coordinates
returns the distance between the location and the given distance
sets the environment for the environment
draws the given object
returns the distance between this location and the given
calculates the distance between the location and the given distance
returns the distance between the given distance
adds a new to the
this method is called by the agent to determine if the
sets the number of
removes a from the
returns true if the given location is already
returns true if the specified coordinate is a free rectangle
returns true if the specified location is free
returns true if the specified coordinate is a free free screen
check if the file name is a file name
checks if the given is in the cycle
clears the
adds a new to the
called when the step is started
removes a from the
removes an from the
removes all the teachers from the
clears all the in the database
this method is called when the activity is scheduled
this method is called when the user action is executed
adds a new plan to the list of
add a new plan to the list of
adds a new plan to a list of
returns a deep copy of this formula
returns the op operator
returns a label for the current element
returns the plan for the given label
removes all the items from the list
add a plan body to this
removes the given atom from the list of the atoms
returns the logical formula of this expression
returns the logical formula of this expression
returns a deep copy of this formula
clones the current plan
returns a deep copy of this term
returns a copy of this code list code
returns the string that is the first element in this
returns the ground indicator
this method is called after the is made
returns a clone of this code code
returns the number of occurrences of the term in the term
returns the number of occurrences of the term in the term
sets the terms of the list
adds a new to the list of
create an instance of a copy of this concept
returns the last element in this list
insert a term into the list
concatenates all the elements of this list to the
returns true if this is an instance of the evaluated value
returns the term at the head of the list
returns the term at the head of the list
returns true if the sync is a sync thread
returns the cycle timeout
this method is used to set the number of agents
this method is called when the agent is finished
called when the has finished
stop the agent
the
returns true if the breakpoint is in the stop flag
returns true if the message is a
returns the of the specified ag
select an option
selects a book
creates a new message
returns an event object that will be used to send the event
selects a in the queue
returns the vec
returns the vec
returns the of the
returns quadrant
check if the is
this method is used to indicate that the semaphore is running
this is used to determine if the is
removes all the from the
remove the from the
called when the user presses the sleep time
removes all the items from this view
clears the specified screen
returns the location of the last location
starts the agent
sends a authentication request to the server
authenticate a user
returns a document object that contains the remote protocol
writes a document to the given document
sends a ping to the server
returns the path without the name of the project
adapts the components to the change
moves the token offset
get the rule from the specified name
returns true if the given filename matches the given filename
sets the mode of the file
adds a word to the dictionary
evaluates the given grammar and its token
evaluates the expression and returns the result
checks if the scanner is a sequence of characters
returns the type of the given color
evaluates the text of the scanner
evaluates the following text
this method initializes group
this method initializes group
this method initializes group
creates the pages of the multi page editor
saves the multi page editors document
this is called after the editor is being
sets the part name for the editor
this method extracts the from the project
builds the combo box
this method is called when the page is changed
creates a new project directory
build the build properties file
creates a sample agent file
this method will be called when the user changes the state of
uses the standard container selection dialog to choose the new value for
ensures that the project has changed
this method is called when finish button is pressed in
adding the page to the wizard
this method is called when finish button is pressed in
opens a jar stream
adding the page to the wizard
adding the page to the wizard
this method is called when finish button is pressed in
opens a jar file from the given input stream
throw an exception if the core throws exception
this method initializes the agents list
draws a model with the specified location
sets the combo to the given xml string
this method is called when the is about to be
adding the page to the wizard
adding the page to the wizard
creates a file with the given
creates an alias for the given
creates an alias for the given bond and label
creates a new tbox
converts an axiom to an axiom
converts an axiom implication to an axiom
returns an alias for the given uri
returns the ontology for the given uri
creates a ontology from the given uri
initializes the ontology
check if the axiom is consistent
puts the given y coordinate into the buffer
returns the left coordinate of the center of this object
returns the right coordinate of the x coordinate
returns a new alias object that represents the alias to the
returns the ith literal
returns an term
returns a cloned copy of the annotations
replaces all the genes in this expression
creates a placeholder for the agent
prepare the user parameter
returns the name of the agent
returns the associated with the given uri
this method is called when the is removed
a
returns the label of the node
confirm the order of the order
adds a customer customer customer customer to the customer
creates the
initializes the applet
close the connection
stop the timer
starts the
stops the timer
handles an error
processes the audio
returns the coupling matrix
throws an exception if the circuit is not null
add a population to the population
returns the circuit of this circuit
shows an error message
insert a into the
initialize the look and feel
add a list of to the
set the value of default value
returns the name of the data
sets the view object
sets the view object
returns the name of the algorithm
returns the edges of the edges
returns the name of the algorithm
returns a string representation of the tree
returns the vertex index
returns the name of the algorithm
sets the graph
returns the name of the algorithm
adds the specified element to this queue
removes all mappings from this map
sets the graph
sets the graph
fills the given collection with all the elements in the queue
fills the list of elements in the list
this method is used to ensure that the heap is
returns the name of the algorithm
returns a string representation of this object
increases the capacity of the queue
removes all the from the list
returns the name of the algorithm
initializes the array
inserts the specified element into this queue
removes the first occurrence in this list of the specified element
removes from the queue and returns the i
returns the name of the algorithm
returns the name of the algorithm
update the graph scale graph of the graph
this method is called when the graph is changed
make the gui components
paint the edge
updates the graph scale graph of the slider
returns the coordinates of the point
returns the coordinates of the point
returns true if the icon is selected
returns the scalar product of two points
sets the selected state of the icon
updates the display coordinates of the current graph
invoked when the target of the listener has changed its state
adds the menu items to the menu
called when the graph changes
creates the menu items
updates the current state of the
runs the algorithm
called when the graph is selected
add a listener to the graph
updates the state of the algorithm
adds a listener to the list of vertices
handles fatal errors
handles errors thrown by the parser
adds a new instances graph to the graph
adds an edge to the list
adds a vertex to the graph
returns the graph
sets the graph decorator for this graph
returns the factory
returns a string representation of this object
returns true if the given edge is equals to this one
returns the factory
returns the factory
compares the two objects
sets the x coordinate of the current position
sets the y coordinate of this object
compares two edges to see if they are equal
returns the
sets the cost of this ejen vertex
clones this intervals
returns the graph
sets the x coordinate of the object
sets the y coordinate of the point
sets the cost of this cloudlet
returns undirected graph
returns whether this mark is marked as marked as marked
sets the mark
returns the closest vertex in radian direction
sets the closest vertex in radian of the vertex
returns the undirected graph
returns the
returns the
returns the
returns the edge at the given name
returns the destination
returns the number of edges in the graph
returns the source
returns the name of the title
sets the
returns the vertex with the given name
returns a string representation of this object
returns the number of vertices
sets the graph
decrements the degree of the node
returns a string representation of this vertex
compare two vertices
returns an iterator over all edges
begin user doc
creates a new edge
returns the vertex of the vertex
creates a new vertex with the given name
returns the degree of the degree
returns the number of in degree of the vertex
returns the
returns the degree of out degree
increment the degree of the node
increment the degree of the degree to be used for the
sets the vertex of the vertex
returns true if the given vertex is equal to the given vertex
sets up the test fixture
test the complex directed graph
tests the graph with the correct case
test case for directed acyclic graph graph
test invalid graph with invalid data
test invalid graph graph
test case for directed acyclic graph
test invalid graph graph
sets up the fixture for example open a network connection
test the equals method
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
test the equals method
sets up the fixture for example open a network connection
exit the application
exit the application
clears the attributes and all the values
this method is used to serialize the serialized state
deserializes the state from the given state
returns the set of header names
returns the header value for the specified header
returns the headers of the specified header
encodes the url to the url
checks if the path is valid
returns the name of the given prefix
returns the path to the path
returns a string representation of the given prefix
returns the file associated with the given path
returns the path of the root element
returns the file object that matches the given hash code
returns the hash of the
returns true if the path is a parent of this path
this method serializes the file
checks if the file contains a file
adds a directory to the current directory
adds a peer to the specified file
removes a file from the specified file
adds a list of files to the specified peer
removes a peer from the list
adds a file to the file
remove a file from the list
remove the specified file from the list
returns the child at the specified index
returns the index of the file
reads the xml file from the xml file
get a file packet
writes the xml document to xml
returns the value of the specified key
updates the tree
deletes the button
deletes the directory tree
returns the number of entries in the feed feed
sets the feed entries
returns the feed description
sets the feed description
sets the feed
removes all the wildcards
returns the value of the specified key
returns true if the entry is in the time zone
initializes the feed description
initializes the feed
returns the settings bean
set the settings bean
returns the feed bean
set the feed bean
get synd feed from the given bean
puts a synd feed
initializes the feed
gets the preference value for the given key
returns the preference value as a boolean
set the settings bean
returns the selected feed
sets the feed
returns the cache timeout in seconds
sets the cache timeout in seconds
sets the portlet config
returns the maximum length of the description
returns the portlet preferences
sets the maximum length of the description
returns the new window
returns the portlet session
returns true if the window is new window
set the new window
returns the window target
returns the start feed of the current
render the view
render the request to the request
returns the feeds
set the list of feeds for this contact
this method is called to display the help page
returns the number of feeds in the feeds
returns the maximum age of the current instance
sets the max age
returns true if the maximum age is allowed for the current set
returns true if the maximum age is disabled
sets whether or not the max age is disabled
returns true if the maximum age is disabled false otherwise
returns the maximum number of entries in the list
sets the maximum number of entries in the cache
returns true if the max entries are allowed
returns the index of the tab at the given offset
sets the list of commands to be executed
get the frequency of the
returns the of the hardware
returns the activation counter
sets the data
returns the data of the data
returns the
returns the
sets the url of the url to be used for the
adds a url to the url
gets the value of the property
returns the string
sets the
gets the value of the property
returns the string
sets the
returns the value of the bit byte
returns the value as a string
set the of the receiver
sets the value of the code data code property
sets the response header to the given byte array
sets the response object to be used for this response
sets the title of the dialog
returns the title of the dialog
set the approve button text
returns the text to approve button
returns the value of the code short code
sets the value of the code t data code field of the
returns the expected
returns the expected string
returns the data at the specified index
returns the address of the agent
set the expected
returns the expected
returns the expected string
set the expected
returns the expected value of the
sets the available character sets to the given list of available character
returns the expected results as a string
set the expected number of expected
sets the expected expected number of data
returns the expected expected value for the specified index
sets the expected expected expected expected value of the code byte code
sets the data of the data
writes the contents of the given code to code target code to
returns the data of the specified data
sets the data at the specified index
returns the number of the actual
returns the expected expected number of expected
returns the expected expected expected expected value as a string
reads a single questionary from the input stream
get the index of the argument at the given index
returns the value of the code code property
get the index of the argument at offset
returns the
returns the actual value as a string
get the value of an argument
returns the expected expected result as a string
returns true if the queue is empty
get the value of the argument as a string
set the ports of the given ports
sets the expected expected result of the first operation
returns the number of
returns true if the status is ok
get the value of a argument
returns the as a string
returns the argument id for the specified index
sets the
returns the argument at the specified position
get the value of the code p2 p code field
returns the argument at the specified index
returns the string
returns the argument at the specified position
set the second line of this p2 p
check the arguments
returns the p1 value
returns the string representation of this
sets the p1 value of the p1
returns the initial value of the
returns the as a string
checks if the current token is a
set the of this object
returns true if the current token is a argument
returns the constant pool entry for this type
returns the as a string
sets the of this class
counts the number of occurrences of the given key
returns the average fps of the current fps
set the size of the pen
returns the image
restarts the server
sets the center of the center of the center of the center
this method initializes status bar
this method initializes left status bar
sets the left status bar
sets the tooltip for the right side of the given text
sets the text to be shown on the center of the
returns the page id
returns the page name
disposes the page
sets the title of the title
this method initializes previous page button
this method initializes j menu
adds menus to the menu
show the first card
show next card
show the previous card
sets the button
show the last page
this method is called after the constructor
adds a page to the container
remove the card panel
returns true if the operating system is currently operating
returns true if the is
returns the name of the launch command
p adds ontology ontology ontology ontology model to this model
p adds a ontology to the ontology
removes a ontology from the model
returns the ontologies model from a model
adds a model to the list
returns an iterator over all classes in the ontology class
set the
returns the
adds a term to the document
assigns a member to the list of the members of the cache
returns the length of the chain
construct the defining of the defining public
calculate the chain weight
returns the definition of the definition
returns a string representation of this object
returns an iterator over all classes in the ontology class
returns the value of the defined term property
returns the defining defining the defining defining the defining defining the
compares the specified object with this instance for equality
prints the unit of the
returns an iterator over all daml properties of the given ontologies
called when the end of the document is finished
validate the consistency consistency consistency check consistency
this method is used to save the sentence to the given
returns the definition of the given uri
returns the document language
returns an iterator that is an iterator over all classes
gets the integer value
sets the str
sets the integer value
returns a string representation of this object
increase the number of bytes in the
this method is used to set the value of the
this method is used to set the number of
returns the base position of the
returns the language
returns the token count
returns the number of bytes in the
sets the cf to the specified value
returns a string representation of this object
called when character data is encountered
adds a new position to the end of the list
checks if the given code equals code is equal to this
returns a string representation of this object
gets the value of the property
returns the of the
returns the language of the given language
returns the number of the
called when the end of the document is finished
returns the value of the code code property
sets the relation
gets the value of the property
increments the
set the value of lf
begin uml doc
sets the
sets the
sets the text position
sets the synset
sets the status of the status
returns the l u
returns the synset
adds a value to the map
returns the tokens from the token
returns the
start a element
returns the
receive notification of the end of an element
called when character data is encountered
returns a string representation of this object
checks if the given document has a database file
returns the length of the document
returns the frequency of the given concept
returns a string representation of this object
returns the semantic flag
sets the semantic attribute of the object
sets the query
returns the keyword
sets the keyword
returns a string representation of this object
returns the
returns the
returns the concepts of the concepts dictionary
returns the token count
start a element
receive notification of the end of an element
all the
returns a string representation of this object
creates a new document with the given language
creates a new url from a document
send approved keywords
shuts down the server
returns the store
returns the status of the document
returns whether or not the is disabled
sets the status
compares this to another
returns a string representation of this object
writes the error message to the log
returns the
returns the status string
returns the id of the document
returns a string representation of this object
returns the name of the document
returns the language of the document
returns the status of the document
returns true if the document is
returns the length of the document
sets the status of the document
sets the length of the document
set the read lock
releases the current lock
returns true if the file is a
set the write lock
set the lock
returns true if the is
returns a string representation of this object
returns the charts label
removes a quote from the list
returns the number of items in the dataset
returns the data item at the specified index
returns the data item for the specified time period
returns the time period for the specified index
returns the index of the data for the time period
returns the value for the specified column
adds a new time series to the data series
adds a new time series to the series
adds a new time period to the data collection
adds a new period to the data collection
adds a new time period to this data source
adds a new time period to this data
updates the period in the data store
updates the data in the table
adds or removes a time series to the series
standard accessor method that adds a new datetime to the data update
add a new time update to the data set
remove the items from the collection
removes a item from the list
delete the data for the time period
deletes a range of values from the end of the queue
clones the object and returns a clone of this object
returns true if the argument is equal to this time series
returns the maximum data item series data item
returns the maximum value of the parameter
returns the series data item for the data series
returns the minimum value of the domain
returns a formatter suitable for formatting the currency code
compares two dates for order
add a new item to the list
add a listener to the list thats notified each time a change
returns the number of plot
returns true if the scroll pane is in the scroll pane
returns the key for the specified series
returns the upper bound of the interval
returns the range of values in this domain
returns the lower bound of the interval
returns the upper bound of the range
returns the range of values in the range
returns the time series item
returns the icon for the image
gets the value of the date tick unit property
returns the duration of the duration in millis
returns the first date time
gets the value of the last date time property
returns the only
sets the first date time
sets the date time
returns a string representation of this object
returns true if symbol contains a symbol
adds a symbol to the symbol table
returns the date ticks
gets the trading date time
returns the value for the given quote number
returns the open value
returns the day in the current date
returns the high value
gets the low value as a number
returns the low day value
returns the close value
returns the day of the current date
returns the volume
returns the volume of the day
returns the value
returns the value of the property
returns the value of the has gaps in the data
returns true if the content of the current value is a gaps
returns the last data value in the dataset
returns the last value in the data
handles the annotation of the plot
sets the value at the specified index
tests this instance for equality with an arbitrary object
compares this object with the specified object for order
returns true if the plot is
returns the key for the specified series
returns the x value for an item within a series
returns the date of the item in a series
returns the high value for one item in a series
returns the high value
returns the low value for one item in a series
returns the open value for the specified series and item
removes the given from the list
returns the open value for the specified series and item
returns the close value for one item in a series
returns the close value for an item within a series
returns the volume of the item at the specified time
returns the volume value for the specified series and item
returns the number of items in a series
sorts the data by the date
tests this instance for equality with an arbitrary object
remove a property change listener
sets the date time
returns true if the given quote quote is already in this quote
returns an iterator over the values of this collection
saves the current state of the tool
returns the quote range
sets the quote range
returns the first symbol of the current quote symbol
returns all symbols in the list
returns the symbols of the given date
returns a list of all the symbols that were currently in the
returns the last date time
returns the first offset
returns the last time in milliseconds
get the offset of the quote from the quote
returns true if there is more elements
returns the label for the plot
returns the name of the menu
returns the day of the current day
returns the day high
calculate the default box price scale
returns the name of the plugin
returns the day day property value
return the default for the given
returns the date and time series
returns the name of the plugin
returns the graphs object for the given schematic
returns the day volume
build the panel
returns a graph object for the given text
adds a graph to the graph
builds the panel
remove the graph from the graph
returns the name of the plugin
returns the name of the plugin
returns the source
set the settings for this
returns whether this annotation has at least one annotations
show the titles of the titles
adds a title to the title
replaces the title of the title
remove a title from the title
build the panel
returns the name of the plugin
build the panel
returns the name of the plugin
returns the graphs object for the given schematic
returns the name of the plugin
build the panel
returns the graphs object for the given schematic
returns the graphs
returns the name of the plugin
returns the name of the plugin
returns the name of the plugin
return the graphs user interface
returns the name of the plugin
return the graphs user interface
returns the name of the plugin
returns the graphs object for the given schematic
returns the name of the plugin
returns the name of the plugin
show the dialog
checks if the current settings is configured to be used
returns the menu bar
returns the icon for the image
remove a listener for changes to the module change
returns the preferred size of the
invoked when an action occurs
returns the title of this window
saves the current state of the preferences
saves the current state of the
returns the title of this view
this method initializes this
this method initializes dir panel
this method initializes j text field
this method initializes table panel
this method initializes j scroll pane
saves the current settings to the settings
returns the title of this view
returns the title of this view
this method initializes button panel
this method initializes edit button
this method initializes add button
this method initializes this
this method initializes j scroll pane
edits the current selected table
saves the current state of the current user to the given xml
returns the title of this view
adds a new to the list
edits the contents of the given row
deletes the rows from the model
saves the current settings to the current settings
saves the current state of the
returns the title of this view
returns the title of this window
this method is called to indicate that the cost of euro
reduces the number of shares
returns the number of shares
returns the cost of the
gets the related counter
compares two objects for equality
redraw the whole table
returns the holding of the item
sets the related counter
disposes the resources
returns true if the iteration has more elements
returns the next transaction
adds a account to the account
adds a new account to the account
add stock to stock
adds a list of transactions to the portfolio
this method is called when the account is removed from the account
returns a clone of this object
count the number of accounts
returns the number of transactions in this queue
compares the specified object with this portfolio
find a account by its name
returns the cash value
get the last date time
get the start time of the last time
writes the transaction record to the given file
modifies an order by contract
clone this object
compares this cash object with the passed in account
returns the value of the capital property
close the tool bar
compares this transaction object with the specified object for order
returns the amount of the amount of the
gets the value of the cash account property
gets the value of the cash property
gets the date time
gets the share account
gets the trade cost
sets the
clone this object
compares this object to another share account
sets the share account
returns the holding of the stock
returns true if the given symbol is already in the stock
returns the stock
returns the number of stock
compares this object with the specified object for order
returns the module
saves the settings and exits the application
handles the property change event
handles the property change event
shows the dialog
this method starts the
this method is called after the module is being reordered
exports the preferences to the preferences
exports the current to the current one
returns the title of this window
this method is called when the user saves the data
the current module
returns the text of the expression
returns true if the current element is stored in the form
sets the text expression of the current item
description of the method
this method is called when the user selects the animal
sets the expression text
returns the expression
sets the expression
returns the result of the given quote
returns a clone of this expression
sets the pattern filter
sets the sorter of the
this method is called when the portfolio is created
a portfolio to the given portfolio
invoked when the table changes
imports the preferences to the preferences
sets the floating component
imports a single instance of the current one
sets the
sets the
sets the
builds the menu for the given menu
create a new portfolio
disables the menus
spawn a new screen
enables the menus and disables the menu items
opens the active jobs
opens the help module
opens the license dialog
this method is called everytime the creation of a module has been
this method is called when the module is removed
this method is called when the module is renamed
opens the portfolio with the given name
opens the specified page in the preferences module
opens a splash screen
sets the menu item selected
returns a string representation of this quote quote
returns the quote value
compares this object with the specified object for order
saves the workspace to the workspace
adds a component to the component
removes the tab at the specified index
sets the title at the given index
removes the element at the specified position in this list
removes all the elements from this collection
returns the properties of the given tab
returns the properties of the given tab
returns a string representation of the object
shows the desktop
compares two expressions
returns the value of the editor
adds a listener to this module
returns the component for the given module
notifies all listeners that the given module has been added
notifies all registered module listeners about the
notifies all registered module listeners about the
fire an event to all listeners
fire an event to all registered listeners
fire an event to all registered listeners
removes a listener for module events
called when the action is performed
invoked when an action occurs
the of the
show the dialog
returns the text note
sets the note
returns the minimum value of the progress bar
propogates the desktop manager to desktop frames
sets the minimum value of the progress bar
sets the maximum value of the progressbar
sets the progress
increment the progress
the horizontal tile
decrements the progress bar
returns whether the progress bar is indeterminate
sets whether the progress bar is indeterminate
propogates the vertical vertical tile to the desktop manager
returns true if the is
hides the window
show the progress bar
returns the text of the note
sets the note
returns the minimum value of the progress bar
returns the maximum value of the progress
returns the panel containing the table
returns the progress bar
sets the progress bar to the given value
returns true if the progress bar is indeterminate
returns the selected text
returns the change of the
compares this object with the specified object for order
this method initializes button panel
this method initializes j button
invoked when an action occurs
returns the point change
returns a string representation of this object
compares this object with the specified object for order
this method initializes cancel button
this method initializes table panel
creates the move up button
this method initializes move down button
this method initializes delete button
this method initializes j button
this method initializes move up button
this method initializes move down button
this method initializes delete button
sets the columns of the table
adds a list of columns to the model
returns the number of columns in the model
returns the model column name for the column
sets the expression columns to the given columns
returns the number of columns in the model
returns the list of quotes
sets the quotes to the given value
returns the number of rows in the model
displays an error message
this method initializes j panel2
this method initializes j text field
this method initializes j text area
this method initializes j button
this method initializes j button1
this method initializes j scroll pane
this method initializes j text field
returns the number of the model
sets the short name of the header
returns the short name of the header
returns the visibility of the component
compares this object with the specified object for order
returns the symbols of the list
adds a list of symbols to the symbol table
removes a symbol from the symbol table
removes all symbols from the list
saves the current state of the object
returns the title of this window
returns true if the scroll pane is in the pane
invoked when an action occurs
returns the number of rows in the model
saves the current state of the window
returns the title of the window
update the table
saves the current state of the layout
returns the title of the title
compares two dates using the date of the
compares two objects
adds a message to the buffer
adds a message to the error
adds a new error message to the error
returns the number of warnings in the warning
clones the current object and returns a new time zone
returns the number of errors
compares two dates using the date time
compares two dates
returns the
returns a string representation of the time stamp
returns the time period class
returns a string representation of this object
returns the size of the bar size
returns a clone of this date
adds a day of month to the end of the month
returns the date time as a java date
returns a string representation of this object
returns a string representation of this object
add a new hour to the end of the day
returns the
adds a millisecond value to the time period
adds minute
adds a month to the list
adds a second value to the second
adds a year to the list
adds a money to this money
returns true if the date time is after the specified date time
returns true if this date is before the given date
adds a quantity to this money
clones the current date time zone
subtract the given amount from this money
compares two dates for equality
returns a new transform by number
returns a new money with this one
returns the day of the month
returns the day of the week
returns the day of the year
returns the currency of this currency
returns the currency code
returns the date format
returns the currency symbol
returns the date format
returns true if the given user is a money
returns true if the given money is less than the given money
returns the hour of day
returns true if the given money is greater than the given money
returns the millisecond value of the second millisecond
compares the given money to the current money
returns the minute
returns the number format for this formatter
returns the second value
returns the trading date
get trading time
returns true if the given period is a
returns true if the week is
set the days of the current tick
normalizes the time
returns the title of this window
moves the day to the previous day
saves the current state of the object
sets the next tick
returns the text of the text
find a page with the given link
sets the previous position
sets the only value for this weather parameters type
returns the string representation of the
starts the scanner
returns a string representation of the time zone
returns the contract of the given contract
sets the
check if the connection is established
checks if the given table exists in the database
get the offset limit for the given offset
gets the software
returns the left content of the given field
reads a count from the database
shutdown the database connection
builds the date time for the given date
cancels the order of the given order
builds a string from the given sql statement
this method is used to close the given code scanner code
returns true if the given quote is in the quote list
imports a single statements in a single sql statements
this method initializes this
this method initializes j panel
this method initializes j button4
this method initializes j scroll pane1
this method initializes j list
this method initializes j button
this method initializes j button1
this method initializes j button2
this method initializes j button5
starts market market
the news
add a new to the list
adds a to the list
places a single contract to the given order
removes the specified wrapper from this collection
called when a account update is received
returns the name of the type of the device
compares this object to another
returns the value of the value property
sets the value of the value property
sets the portfolio
returns the parameter value of the parameter
returns the value at the specified index
returns the type of the element at the specified index
returns the of the individual
returns the first individual in the population
returns the population size in the population
returns the number of populations in the population
returns the buy rule
saves the current state of the layout
gets the sell rule
returns the number of the
returns the range of the range
gets the value of the c range property
returns true if the user is enabled or disabled
gets the order by key
returns true if the order is ordered by key
sets the date offset
returns the quote range
gets the start date
gets the end date
returns the date range period
returns the order comparator for a given
returns the population
returns the display population
sets the progress bar
sets the
sets the buy threshold
sets the sell threshold
sets the input layer
set the output layer to the default value
returns true if the input is a valid input
the data
saves the current state of the layout
saves the current state of the window
saves the current state of the layout
loads settings from the given preferences file
load the given setting
returns the pre learning value of the learning object
returns the number of animations that have been added
returns the initial capital
returns the min percentage
returns the cost to trade
returns the window forecast property
returns the mode of the drink
returns the stock value of this stock
returns the number of stocks in the list
saves the settings to the given key
load the common settings from the given string
returns the random percentage
creates a new random expression
loads the preferences from the given preferences
returns true if the file is readable
create a random expression
returns true if the selected item is selected
returns the network
sets the progress bar
creates a random non terminal expression
sets the quote range
checks if the specified number of prerequisites
creates a random non terminal expression
returns the total equation slope
compares this individual object with the specified object for order
compares this individual with another
returns the hash code for this rule
creates a random terminal expression
returns the individual at the given index
returns the individual in the population
returns the today symbols
returns true if the order is ordered ordered ordered ordered by the
returns the name of the component
format the quote string to the given quote
returns the name of the plugin
format the quote string to the given quote
returns the title of this window
parses the fields of the text field
returns the filter for the given filter name
checks if the given filter is a filter
saves the current state of the object
saves the configuration to the preferences
returns the name of the component
returns a string representation of this quote quote
opens a file with the given file name
returns true if the file is next
close the file
verify that the given quote is a valid message
converts a time to a time to a single offset
returns the offset to the time
returns the time offset in the last time the took
returns the time offset in milliseconds
adds a quote listener to the list of listeners
removes a quote listener
fires a single line added event to all registered listeners
finds a random site in the iteration
returns true if the given quote quote is contained in this quote
returns the newest quote time
returns an iterator over the elements in this collection
returns the name of the component
converts the given quote into string format
sets the quote range
returns true if the given bundle is loaded
returns the message
returns all symbols in the given date
return the offset of the given quote
returns the first time in the cache
returns the last time the entry was last added to the cache
returns the value of the symbol
returns the number of contracts
returns the length of the symbol
returns the character at the specified position in this symbol
returns a clone of this code code
compares this object with the specified object for order
adds a symbol to this symbol
clones the object and return a copy of the object
compares two dates for equality
returns true if all symbols have been contained in this set
compares the specified object with this field
mutate the expression
returns true if the given symbol is contained in this list
returns the description of the
returns the trading date
returns the time
returns a string representation of this quote quote
mutate the given expression
returns true if this is an empty
returns the first offset of the current
returns the last time the was last added to the last
returns true if the is running
get the offset of the quote from the data store
runs the import
sets the enabled state of the timer
mutate the given expression
returns true if the timer is currently running
returns a string representation of this date
set the period of the timer
set the time range
returns the name of the component
returns a string representation of this quote
mutate the given expression
check if the user is disabled
returns the trading date time
compares the specified object with this field
returns true if the given quote is in this quote
compares two dates for equality
saves the configuration to the preferences
returns a string representation of this quote quote
returns all symbols in the given date
load a quote from the quote
returns a date time with the specified date
returns a string representation of this quote
check disabled status of disabled
synchronizes the current state of the application
clones this instance
returns true if the given variable name exists
add a new constant to the list
add a variable to the environment
add a new variable to the environment
sets the value of a variable
sets the value of the variable with the given name
returns the value of the variable with the given name
returns the value of the variable name
saves the preferences to the preferences
returns the variable with the given name
returns the database manager
sets the value of the value
returns the title of this window
compares this expression to another object
gets the child at the specified index
returns the title of this window
returns the index of the given child expression
returns the parent of this expression
returns the hash code value for this object
returns an iterator over the elements in this list
sets the child of this node
sets the parent of this node
returns the first of this expression
returns the number of elements in this list
returns the size of the given type
returns the type of this object
returns the number of child nodes of this node
check the input arguments
returns the type of this node
check the input arguments
returns the type of this object
returns a string representation of the given operator
check the input arguments
check the input arguments
returns the type of this code code object
returns the type of this object
check the input arguments
returns the number of child nodes of this node
returns the type of this object
returns the number of child nodes of this node
returns the quote kind
returns the type of this quote type
check the input arguments
returns the number of child nodes of this node
check the input arguments
check the input arguments
returns the type of this node
pop the next token from the stack
matches the current token against the specified token type
the attributes of this expression
validate the input attribute
returns the class extension for the extension
prepares the attributes for the attribute
returns the class extension for the extension
returns the number of rows in the table
sets the new player
initializes the
this method will be called when the is
this method is called when the user unsubscribe
displays the table
initialize the
sets the
loads the logo
creates a animation
sets the of the team
method init for season
returns the current contract of the current contract
set the current match to the given agent
inits the gui
sets the arena category
called when the user clicks the play
updates the radio button with the given value
sets the to the given value
append a text to a radio button
adds the given to the given
returns the content of this code content code
sets the content of the given panel
append the given text to the radio
returns the all match listener
this method is called when the user selects the logo
sets the msg key
returns the table model
returns the column model for this table
inits the gui
this method initializes this
initialize the
returns the scenario version
returns the time of the save time
returns the description of the user
returns the save game
sets the save game
returns the save game info
sets the save game info
this method is called when the game is about to be initialized
go to the
returns the current game file
returns the player that is the player
generates a random file
exports the scenario and exports the data
show the day as a message
returns the gui resource of the specified file
get a random image for the current image
shows an error message
exits the application
sets the infrastructure objects
calculates and returns the of the
calculate the price for the given amount of time
calculate the price for maintenance
calculate the price for increase the increase
calculate the price for the current day
adds a new element to the parent element
adds a new element to the parent
checks if the given day is a game day
moves the current game to the current one
returns the date format
adds an event to the event queue
sets the party a party to be used
sets the party to party 3 d party
returns the scheduler group event for the given day
returns true if the is automatically
sets whether the should automatically automatically automatically automatically automatically automatically
returns the draw view of the current action
sets the actions draw
returns the center team of the center team
initializes the scene
increment the actions draw
returns true if the current thread is interrupted
returns the actions failed
sets the center team of the player
show an error
sets the actions failed
returns the center team of the
increments the number of actions that have failed
add a player to the chain
returns the actions
sets the center team b
sets the actions
increment the actions
returns the winner team player team
resets the current to the given player
returns the number of shots on goal
sets the winner team team team team
sets the number of shots on goal
increment the number of shots
returns the block of the given player
returns the current block
returns the current of the current block
returns the match snapshot
returns the partner of the given player
returns true if the given player is holding the current block
gets the time keeper
returns the last day of the newest year
returns the opponent attribute of the player object
sets the match
returns the statistics for the current block
returns the computed holder
returns the own section by its own as the current user
setter for property holder
registers all players in the game
returns the next available player id
returns the of the given match
returns the section after moving the current position in the given section
returns the dispatcher
returns the player
returns true if the game is a game
returns the computed result
returns the category
returns the distance in radians of the ball
gets the match
sets the category
sets the distance to the ball
sets the match
sets the computed result value
returns the sleep time of the sleep tick
setter for property current holder
gets the
sets the sleep time tick
returns the category title
returns the current away block
returns the number of section of the section
sets the current away block
shows the desktop for the desktop
returns the steering behaviour
returns the center of this vector
sets the category title
sets the end point of the line
returns the current home block
returns the normal of the vertex
sets the normal
sets the value of the computed section property
set the start point of the segment
sets the current home block
returns the current home region of the
returns whether the face played played played played
returns the starting holder
show the given message
returns the center of the shape
sets the face off
returns the facing
returns the left post
returns true if the target is at the end of the
returns the right post
returns the current momentum
gets the num goals scored
reset the list of goals to achieve the list
sets the current momentum
returns the bounding radius of the circle
sets the starting holder
sets the bounding radius of the circle
returns the team
increases the current number of momentum
sets the position of the polyline
returns the scale of this scale
creates the boards of the current game
sets the current state of the current state
sets the scale of the scale
sets the global state of this automaton
sets the current chain chain
sets the previous state of the list
returns the starting section of the
shows a short message in the message window
returns true if the given state is in the state
returns the current holder
returns true if the player is
returns the current section
creates the regions in the area
sets the starting section for the
sets the current section
returns true if the player is a continued attacker
switches the menu to the current state
sets the is in goal
returns the current round
handles the event of the user logon
returns the x y coordinate of the region
sets the current stats
multiply this vector2 d by a vector2 d
returns the current home stats object
initializes the field
returns the position of the occupant in the given position
sets the current home stats object
switch the agent to the relative location of the
returns the length of the squared distance
checks if the given array of players matches the given array of
returns the best spot
called by the engine to set the state of the current activity
checks if the player is
returns the vector2 d vector
transform the vectors with the given values
checks if the given player is in the ice direction
returns true if the location is in the hot region
returns the vector of the vectors
transform the points into a point
get the maximum value of the
returns the pass score
returns true if the ball is within the range
resets the state to the next faces state
get the maximum force
clean up the content pane
returns the maximum speed in the
returns the goal
returns true if the value is zero
returns the score that can be increased in the score from
returns the distance from the player to the player
returns the current in play flag
set the coordinates of this object
sets the goal
returns the maximum value of the maximum player rate
sets the home region
returns the distance in meters for the
sets the current in play flag
returns the number of repetitions of the
returns the
this method is called by the framework when the channel is
returns the distance in meters for the
sets the heading of this tank
returns the number of players in the game
returns true if the current instance is tagged
returns the chance to teleport the pot shot
converts a time to a cover to a cover distance
returns the minimum distance between the two points
centers the dialog to the given location
returns the of the player
returns the region region with the given id
returns the of the player
returns the maximum force of the
returns true if the player has already shot
get the chance of a behavior of the type
determine if the channel has been set on the current thread
sets the maximum torque this probe will be
returns the ball volume of the current
returns the old position
returns the ball volume of the ball
places the agent at position code in code
get the maximum force
returns true if the channel is
returns the maximum amount of turn rate
returns the distance between the and the
returns true if the catch block can catch
gets the
sets the max turn rate
returns the distance squared distance in miles between the
returns the side of the
returns the distance between the and the distance
gets the value of the attr hole property
sets the goal of the goal
sets the side of this component
returns the distance in meters between the and the
returns true if the channel is
returns the
returns the velocity of this particle
returns the maximum face speed in radian direction
sets the velocity of this particle
sets the attr proposed hole
returns the heading of the robot
the signal to the mode
set whether to the of the
returns true if the current region is in home region
returns the speed of the particles
returns the value of the attribute
returns the current speed in
p returns whether the channel is or not
creates the players
sets the attribute
returns true if the channel is
returns whether the has been
gets the attr check attribute of the object
sets the attribute check
checks if the current road target is reach in time
returns true if the game is currently on the game
gets the value of the attribute cover property
gets the attr defense of this attribute
sets the cover
returns the maximum speed of the player
setter for attribute defense
set the teams teams teams team
gets the value of the attr recover property
show the panel in the panel
returns the field player
returns the value of the attribute
sets the value of the attribute recover
sets the attribute
returns the value of the attribute stick
returns the away goal
returns true if the player has been reached
returns the active
returns the number of energy energy
sets the attribute value
resets the player to the last time
prepares the game controller to match the search engine
returns the center of the surface
this method is called when the user presses the match
sets the energy energy of this
show the panel in the panel
returns the goal goal
goal goal goal goal
returns the attr checking for the
sets the attr checking time
update the stats of the player
returns the attribute of the attribute
returns the value of the attribute
sets the attribute
returns the value of the attribute intensity
sets the attribute of the experience
sets the intensity value for this picklist
put the back back to the
returns the value of the attribute passing passing it
returns true if the next match is finished
adds a penalty to the list of losses
returns true if the next time is now now now
sets the value of the attribute passing link property
returns the last goal
returns the value of the attribute form form attribute
returns true if the current time is in mode
returns the value of the attribute install positioning property
checks if the current time of the current time the rule is
sets the value of the attribute positioning specification property
returns the next possible break position
returns the value of the attribute
checks if the team is currently running
sets the attribute form
this method is called when all the teams are found
sets the attribute
returns the current playing area
returns the player away
returns the player home
returns the value of the attribute
returns the penalty time away
returns the value of the code attr stick e code attribute
returns the penalty time of the
gets the away team
adds the element to the parent element
sets the attribute
sets the attribute to use for the request
returns the number of players in the
returns the value of the attribute
adds a new element to the parent
returns true if the current state is finished
gets the home team
sets the sponsor
sets the attribute
returns the schedule
returns the number of seconds in the time
sets the seconds played
returns the value of the attribute
add a time to the time period
returns the of the
returns the current match state
sets the attribute
sets the current match state
returns a random value from the pool
returns the steering force
sets the rules
returns the value of the attribute
returns the number of seconds per game
returns true if the user interacts with the goal
returns the match engine
construct a from a list of leagues
returns a random double value
returns the direction component of the player
sets the attribute
add a new to the list of
returns the random
returns the target
shows a frame in the given window
resets the chain to the next chain
sets the target to the target
returns the random number generator
returns true if the target is responding to the target
returns the league owner
creates a match team element
show the
returns a random integer from the sequence
returns a random double value
initialize the team
this method is called when the league figure is finished
show the panel
adds a player to the victim
adds a new element to the parent
add goals to goals
returns the match agent
adds a number of points to the list
returns the best possible attacker
late constructs the
get the user by team
sets the value of the field
returns the random
adds a new element to the parent
sets the transfer fee value for this
adds a new element to the parent
adds penalty minutes
returns the team
returns the player that this player owns
sets the player
returns true if the user is automatically
sets the width of the image
returns true if the player is in the control
setup the time stamp
adds goals to the goals
adds a to the
show the online message
returns the of the player
returns the total attributes of the player
returns the next block of the block
the stats history
returns the next block of the next block
returns the total match energy of the player
returns the next power of the block
returns true if the given player is a player
returns the level for this
returns the effort level
this method returns the best possible position
get the tactic id for this colony
gets the risk
sets the risk
this method will be called when the player presses the board
gets the tactic id value for this
sets the tactic id for this
returns the center of the game
returns true if the current player is at the current location
gets the value of the property
returns the effort
returns the left
returns the right defender
sets the default attributes of the
returns the right
returns the player
sets the
sets the right defender
sets the left
set the common player attributes
sets the right
gets the player
sets the last place that the
sets the center of the map
returns the block type
sets the block type
sets the first place first in the list
adds a new attribute to the
sets the player
this method performs the actual action
sets the current block of the current block
returns the lowest available number of the
show the short message panel
returns the current ball closest to the current player
show the screen
returns the number of in a given player
returns the number of the team
places all players in the list
show the welcome screen
gets the
show the screen
returns stats for given league element
sets the
returns the goal
show the about screen
return stats for given league
returns the match field for a player
returns stats for given league element group
returns the goal
returns true if the player has a players transfer
returns the team
returns the average player market value
returns the receiver
sets the receiver
impact of the player
impact the player energy
returns the spot spot spot
impact on the player form
returns true if the team is a home team
returns true if the is in winding half
returns the number of players in the game
reset all energy of the player
checks if the team is allowed to be
checks if the current team is allowed to be inlined
adds the given element to the parent element
returns the singleton instance
sets the
returns the singleton instance of the game model
returns the singleton instance
creates a physics node
updates the roll to the given amount of degrees
shuffles the
reduces the quantity of the
builds the input for the input
updates the roll to the given amount of degrees
updates the time
returns the singleton instance
set the half life factor
returns the value of the given time
process the
updates the local
updates the current world
draws the scene
updates the time
code perform action code adjusts the drift to the given
code perform action code assigns the head up the node
sets the vehicles of the lane
updates the local
build the environment variables
returns true if the vehicle is moving
builds the lighting
sets the weight
returns the acceleration
sets the acceleration
returns the
writes the scenes scene to the data sink
sets the
returns the model of the model
builds the camera
sets the model to be used for drawing the model
returns the velocity of this particle
sets the velocity
write the scene to the given output stream
returns the turn speed
the window
sets the turn speed
this method is called when the application exits
returns the maximum speed of the virus
called when the user releases the state
sets the maximum speed of the virus
returns the min speed
sets the min speed
the
the vehicle
writes the scene to the output stream
drift to drift to the vehicle
writes the given node to the given node
reads the xml file from the given xml file
writes the children of the given node to the given node
loads a binary format from the given input stream
reads the header of the file
returns the singleton instance of the game
writes the given code joint mesh tags code
serializes the to the given
writes the current spatial children to the given node
writes the spatials controllers to the given spatials
writes keyframe controller to the given keyframe
writes the key frame point to the given time
writes the render state to the given code scene
process a spatial
build the material state build
build the alpha state
writes the state of the material to the given state
writes the end tag to the output stream
sets the property
removes all properties from the properties file
puts a spatial value as a
writes the header of the header
adds a mapping from a message to a given source
returns true if the file has been executed
returns the list of mappings
returns the name of the input message
returns true if the source code is a
returns true if the target target is a target
returns the
returns the string
returns a string describing this filter
returns a description of the operator
returns the location type
returns the location of the locator
adds an operation to the set of
returns the protocol
returns the operation name
returns a description of the operation
registers a new handler
returns true if the given part has a part of the given
returns the number of elements in this map
returns the part at the given index
sets the part of the part
returns the span of the key
returns the span of the given index
returns the ordered set of all the elements in this list
insert a list of objects into the list
returns a description of the key
this method is called when the user is being notified of notification
called when the activity is started
called when the activity is completed
called when the flow is completed
getter for property flow name
returns the flow service provider type
returns the activity associated with the given activity
returns a message with the given message
returns the span part of the message
returns a message part of the message
returns the start simulation activities
returns the end activities of the flow
returns true if the activity has flow end activity
returns a vector of all the data that contains the given data
returns a vector of all the control targets that are
returns a vector of control link objects
returns true if the activity has a given activity
parse the xml document
returns a string containing the system output message
show the message dialog
check the request
returns a string representation of the object
clones this proxy
sets the state of the clip socket
returns the proxy for this node
returns the proxy for the given
starts the server
stops the timer
sets the chain proxy
returns the chain proxy
runs the thread
sends a server to the server
returns the id of the service
serve the socket
prints the given socket to the socket
discards the specified socket and all the streams
reads the port
converts a string to a string
read the node from the xml document
read one one or more nodes
write the to the specified
initializes the connection
read a stanza
read the stanza
reconnect to the server
logs the given string to the log
write the to the given
generate initial request id
print a string
returns the number of values in the specified value
returns the number of particles
sets the to the given rectangular region
set the to the specified
returns the at the specified index
returns the of the specified frame
returns the width of the window
sets the position of the sprite
sets the window position
returns the width of the string
returns the height of the current font
draws the screen
adds a part to the image
renders the current graphics context to the specified location
render the given to the given graphic
render a single single cell
render a single sub of a given view
save the record store
loads an image from the given file path
required by tree selection listener interface
loads the file from the input stream
loads the file from the given url
loads the input stream from an input stream
load the given input stream into the file
load the info from the given file
load the info from the given file
load the info from the given file format
load the info from the given file
returns a resource as an input stream
returns the tip tip for this component
adds the specified child focus to this component
adds the specified child bottom bottom
returns the winding rule for which the current rule is
returns the current segment
returns the current segment
returns the of the
returns the limit of recursion in the tree
returns the winding rule for determining the interior of the
sets the size of the component
moves to the next element
set the current frame
returns true if the is done
returns the current segment
returns the coordinates of the current segment
returns the coordinates of the current coordinates
returns the current segment
set the rectangle of this rectangle to the specified
returns a path iterator object that returns the
returns a hash code value for this object
indicates whether some other object is equal to this one
returns true if the index is done
returns the current segment of the current path
returns the current segment of the current path
returns the current segment
returns the current segment
returns true if the arc is done
resets the code code to the code d code object
invalidates the current state
translate the shape and all the points in the given
adds a point to the polygon
returns the type of this object
returns the bounds of this wall
checks whether the point contains the specified point
checks if the specified coordinates are inside the
sets the rectangle to the given rectangle2 d
checks if the line intersects the current line
tests if the specified line2 d intersects this line
returns the y coordinate of the point in the world
returns the determinant of the matrix
sets the framing rectangle to the specified point
returns a path iterator object that iterates along the boundary of the
returns an iterator object that iterates along the boundary of the
returns the winding rule for filling the current
returns true if the exploration is done
returns the current segment of the current path
adds a new to the polygon
returns the current segment of the current path
adds a point to the polyline
sets the size of the image
adds a rectangle to the end of the bounds
returns the size of the image
sets the size of the component
sets the size of the image
indicates whether some other object is equal to this one
returns the hash code for this object
returns a code path iterator code object that wraps the
returns a string representation of this object
get the matrix from the given array
returns a code path iterator code object that iterates along the
returns the location of this point
sets the location of the point
sets the location of the sprite
sets the location of the
moves the sprite to the specified position
sets the coordinates of the curve at the given offset
translate the origin of the board
compares two points
indicates whether some other object is equal to this one
set the curve to the given point
returns the x coordinate of the x coordinate
returns the minimum y value
returns the maximum x value in the x coordinate
returns the x coordinate of the scale of the image
returns the maximum y value in the coordinate system
returns the x coordinate of the center of the center of the
sets the points of the curve
returns the y coordinate of the center of the center
returns the size of the frame
sets the location of the frame
sets the frame to the given frame
sets the curve to the given curve
sets the framing rectangle to the given point
sets the frame to center in the center of the given viewports
returns the
returns the y coordinate of the current transform
returns the distance between the two points
returns a path iterator object that will return
adds a quad to the left hand side of the
returns the x coordinate of the rotation
returns the shear y value
returns the x translation of the translation
returns the current y coordinate of the receiver
returns a path iterator object that can be used to iterate through
concatenates the current code graphics2 d code
sets the location of this object
returns a string representation of this object
returns a string representation of this object
sets the location of the camera
concatenates the current eps graphics2 d transform to a
returns the square distance in the x coordinate
returns the square of the distance between this point and the given
returns the distance between this point and the specified point
computes the distance between this point and the given point
returns a hash code value for this object
compares two points
rotate the
returns the bounds of this component
sets the bounds of this component
sets the bounds of the component
sets the coordinates of the curve at the given offset
rotates the image to the quadrant
sets the curve to the given point
sets the points of the curve
sets the curve to the given control
returns the of the
set the round bbox value
returns the of the
adds a to the left of the
returns a code path iterator code object that wraps the
returns a hash code value for this double
tests this rectangle for equality with another
sets the size of the receiver
adds a new area to the map
subtracts the given type from this node
returns the nearest node to the centre of the
this method is called whenever the area is an
resets the graphics
returns true if the curves size is empty
returns true if the curves are
returns true if the point contains the specified point
returns true if the surface is rectangular
sets the transform to identity
returns true if the conic is a singular
returns true if the rectangle contains the given rectangle
returns the bounds of the glyph
returns the bounds of this component
returns a clone of this object
sets the transformation matrix to the given value
returns true if the two arguments
applies the current transform to the given affine transform
returns true if the given rectangle intersects with this
creates a transformed area
sets the rotation of this object
returns a path iterator object that will iterate over
adds a new rectangle to the rectangle
add a point to the polygon
sets the rotation of this transform to a rotation
returns the type of arc
returns the coordinates of the current segment
returns the coordinates of the current segment
returns the start point of the
returns the end point of the ellipse
set the line to the point
indicates whether some other object is equal to this one
sets the arc
returns a string representation of this object
sets the start point of the radial
sets the point of the pencil
returns the y coordinate of the point at the center of the
set the type of arc
returns the y coordinate of the point in the point
sets the scale of this to the scale
tests if the line intersects the line
tests if the specified line2 d intersects this line
returns the squared distance between this point and the point
returns the square of the squared distance between this point and the
sets the transform to the given value
returns true if the angle is continuous
returns the distance between this point and the point
returns the distance between this point and the point
returns the squared distance between this point and the point
sets the transform
returns the squared distance between the point and the point
returns true if the interior of the shape entirely contains the
returns the distance between this point and the point
returns the distance between the point and the point
returns true if the interior of this shape entirely contains the given
returns true if the specified coordinates are inside the
returns true if the specified point2 d is inside the polygon
returns a path iterator object that iterates along the boundary of the
returns a hash code value for this double
returns true if the interior of the image2 d
test the equality of this code code
returns true if the interior of the interior of the rectangle specified
returns a path iterator object that renders this line
returns a path iterator object that will return the
creates a new shape
returns a string representation of this transform
returns true if the identity is identity
returns a hash code value for this sample
returns true if this transform is equal to another affine transform
returns the destination of the connection
derives the sub type of the given description
derive a from a string builder
adds a span to this range
adds a new infinite time span to the view
compares this span to another span
returns the id of the object
creates a buffer for the given
gets the value of the property
returns the adapter id
flush the specified position
sets the area of the area
draws a rectangle at the specified location
sets the area
sets the
sets the path to the fill region
get the path box for the
intersects the clip box with the given clip
sets the index of the first point in the queue
returns the native iterator
append a span to the end of the page
the path to the pgraphics object
invalidates the lead
returns the intersection of this rectangle
called when the view is being destroyed
returns a region of the
a region of a region
returns the intersection of this matrix with the given
creates a copy of this region
sets the current state from the given region
the range of the range
the range
returns the union of the union of this union region
moves to the next position in the queue
returns the difference between the elements of the
initializes the surface
returns the exclusive region of this
returns the native type of the resource
returns the default screen device
checks if the given is currently in the current surface
returns the bounds of the intersection of this rectangle
creates a graphics object that is used to draw the graphics
returns a region of the
determines whether the font file names are used
returns the bounds of the region
returns the default font file
returns the default font face name
returns the offscreen image
receive screen interaction
returns true if the is empty
returns true if the bands is rectangular
returns the top level frame of the given frame
checks if the specified coordinates are in the range
repaint the peer target
draws a rectangle with the specified rectangular area
show the track screen
the
remove the surface from the surface
wake up the thread to wake up the thread
checks if the is inside the
this method is called when the user runnable now
returns true if the intersects the given region
returns the name of the platform toolkit
returns true if the is
draws a rectangle with the specified rectangular area
returns a printer job that is used to print the job
the
this method is used to calculate the bounds of the
the bounding box of the bounding box of the clips
mark the object dirty
initializes the surface
sets whether the backup is a backup or not
returns an iterator over the elements in this collection
sets the flag indicating whether the surface is lost
increase the number of copies of the copies of the
returns an iterator for the span span
invalidates the current state
returns the replacement object for this object
returns the raster of the rectangular
returns true if the is
returns the pixel value of the rgb value
returns the rgb value of a pixel
invalidates the current session
returns the bounds of this rectangle
returns the span of the specified bounding box
checks if the composite is a composite
returns the destination of the object
returns an iterator for the current values of the current clip
returns the mask fill to the surface
returns the render loops stack
creates a new
checks if the given graphics2 d is currently being monitored
returns the transparency of the model
begin user doc
returns the pixel value of the pixel at the specified pixel
returns the pixel value for the specified color
returns the rgb value of the specified pixel
checks if the plugin is not allowed
flush the stream
adds the font to the platform
returns the font configuration
returns the native resource for the given resource type
display the changed display
notifies the listeners that the palette has changed
adds a listener to the list of display listeners
removes a display changed listener
returns whether the given code component code is flipped
returns true if the given rectangle is hit
returns the color model of the current color model
returns the device configuration associated with this
adds hints to the map
returns the rendering hints for the current rendering hints
concatenates the current code graphics2 d code
concatenates the current transform and returns the rotation
concatenates the current eps graphics2 d transform to a double
concatenates the current scale and height to the given
concatenates the current transform and sends a shear
transforms the given transform
sets the current transform
returns the number of values in the specified value
returns the current transform
returns a clone of this transform
sets the background color
returns the background color
returns the number of tracks for the given track
returns true if the is
returns the transition
sets the transition in the destination
sets the transition out of the transition
intersects the current clip with the current clip
returns true if the key is down
returns true if the given key is up to be used in
returns true if the key is held in the key
returns true if the pointer is a pointer to the pointer
returns true if the pointer is down
returns true if the pointer is up
returns true if drag drag is currently dragged
set the to the specified
returns the world coordinate of the screen
returns the height of the world
render the screen
returns the number of frames in the current frame
adds a part to the list
returns the image at the specified index
clears the screen and display the screen
returns the image for the specified frame
render the image to the given position
clears the screen and clips and clips
render a sub
render a single single single cell
render a single sub
returns the width of the string
returns the height of the given string
returns the width of the string
returns the height of the current graphics
draws the outline of the shape
draws a string
fills the interior of the shape
clips to the clip rectangle
returns the context
the shader off the current open gl buffer
the shader
draws as an image as representing the image
compares two insets objects for equality
returns the hash code for this object
returns the destination surface
sets the opacity of the image to be used
sets the opaque value of the image
sets the value of the resizable property
returns the wrapped window
returns true if the device has changed
sets whether or not the drawable client should automatically be automatically
dispose of the object
returns the width of the
returns the height of the current user
returns the attached object associated with the given name
returns the attached object associated with the given name
adds an object to the object
adds an object to the attached collaboration
destroys the object
called when the dialog is about to be added to the dialog
remove the listener from the list
returns the gl profile
sets whether the buffer should automatically swap the
resizes the component to the specified size
returns whether the buffer is currently running
set the profile to be used for rendering the profile
returns true if the is
returns true if the current line is double buffering
sets the double buffered
returns the stereo
paint the component
returns the flag indicating whether or not the hardware is being used
sets the value of the code hardware code property
returns the depth of the depth of the depth
sets the depth bits
returns the number of stencil bits in the stencil block
sets the stencil bits for the stencil set
returns the bits
sets the red bits
returns the green color
removes the listener from the list of listeners
set the green bits
returns the chip protocol
set the chip protocol
returns the alpha
sets the alpha bits
resizes the component to the specified size
sets whether or not the sample buffers to be used
returns the sample buffers
sets the num samples value for this
returns the number of samples
sets whether the buffer is
returns whether the buffers are used
sets whether to render the texture off the texture or not
returns the render to texture
sets whether to render the texture or off the
returns the render to texture rectangle
shutdown the server
saves the current attributes to the current one
sets the value of the ith field
returns the ith value
set the factor for the
returns the product of this object with the given value
scale the value by a scalar value
returns this argument
adds a to this
add a b z b to the vector
adds a scaled version of a to this
add a to the triangle
subtracts the given from this
this method is invoked by the code b
subtracts two vectors
returns the cross product of this
this method is called when the is being removed from the
the given
returns whether the buffer should preserve the buffer color buffer
updates the native window
returns true if the target is known
clears the state of the object
returns the length of the longest ramp length
set the ramp ramp
returns the buffer ramp
sets the buffer
make a for the given buffer
make the matrix
the matrix to a
the given matrix
resets the data to the default file
draws the
returns the pack alignment
sets the pack alignment
returns the packing row length of the row
sets the packing row length
returns the pack skip rows
sets the pack skip rows
returns the pack skip pixels
sets the pack skip pixels
returns whether the first is
sets whether the first is
returns the pack swap bytes
sets whether the swap bytes are written to the
returns the pack that the pack should be ignored
sets the pack skip images
returns the pack height
sets packs height
returns the alignment
sets the value of the code unpack alignment code property
returns the number of unpack rows
sets the row length
returns the number of unpack segments in the message
sets the number of unpack to read suppressed
returns the value of the code unpack skipped pixels code property
the current offscreen buffer
returns the unpack first second
a
sets the flag
returns the value of the code unpack bytes bytes code property
enables the gl context
sets the unpack bytes
sets vbo to
this method is called when the is removed
returns the number of in the image
sets the number of to be captured to
the to a float
this method is used to convert the pointer to the
returns the height of the image
sets the value of the receiver
returns the ith value at the specified position
returns the relative relative humidity of the ith relative
sets the height
sets the value of the ith field
returns the order of the
show the messagebox
sets the property to the given property value
set the current page to the next position
sets the array to the array of the array
set the to the given side
decreases the end of the range from a float
returns the arc at index i
adds a arc to this chain
returns the ith relative arc that is the arc
sets the value of a arc relative to the
the curve
returns true if the arc is a
sets the array of the array
set the value of type
append a method to the given object
this method is called by the class to invoke the
the curve
returns true if the is
add a to the
the curve at the specified location
set the type of the
this method is used to convert the
returns the ith element in the array
the
sets the array of the array
test that the is
sets the

the
selects the
lays out the given
adds a new to the map
locate the type of the given type
find a type by its type
copy the given object into the
transforms the to the
the outline of the arc
this method is used to the bezier curve
returns the ith
download all the from the given array of
begin uml doc
moves the current position to the next sized
sets the range to the range of values to the given range
checks if the given tag is a property
check if the is
returns the
returns the
sets the range to the range
returns true if the sampling range is in the sampling range
returns true if the sampling is being used
returns whether the sampling of the sampling mode is set
returns the of the
checks if the sampling method is valid
returns the
checks if the surface area is in the surface area
is this method a method
define a map
returns true if the constant pool is a constant
returns true if the sampling flag is set
the
a
returns the value of the specified tag
returns true if the sampling is being used
the given property
returns true if the current element is a head
sets the arc to be used for the arc
returns the number of in the
returns the arc that is the arc that is the arc
p the given property to the given property
the
returns the arc that is used to draw the
returns the arc that is used to the
sets the value of the is domain distance sampling sampling range
the surface
selects the surface
test that the is
begin uml doc
this method is called when the
copies the given to the given one
the given
destroy this object
returns the height of the component
returns the ramp length for the ramp length
sets the draw style of the abductor
sets the normals
set the arc type
sets the orientation of the image
draws the curves
sets the texture flag
the
returns the draw style of the
returns the normals
sets the is domain distance sampling for the sampling sample
returns the texture flag
the
acquires the lock
releases the current thread
returns true if the current thread is held by this thread
creates a new gl object
resets the given table to the given table
sets the
the matrix to a matrix
this method is called when the is set
the given matrix
returns true if the given file name is available
bind the shader object to the specified shader
returns the location of the specified
enables or disables the vertex with the given name
draws the
this method is used to disable the of the given object
returns the current floating point mode
returns the vertex of the given name
disable all vertex of the shader attribute
returns the location of the shader
returns true if the specified gl rendering of this shader
returns the uniform with the given name
release all the gl resources
resets all the gl contexts to the current clipping area
returns the width of the image
puts the given buffer into the buffer
returns the height of the image
returns the size of the
returns the size of the image
returns the bounds of the specified string
sets the size of the image
returns whether or not the contents of the contents of this
mark the current graphics object as dirty
draws all the drawable objects
render the current graphics
set the size of the image
ends the rendering of the current render rendering surface
draws the outline of the screen
sets the smoothing flag
returns the value of smoothing
returns the bounds of the specified character
returns the maximum x coordinate of the x coordinate
return the maximum y coordinate of the
mark the current region as dirty
get the texture
sets the maximum height of the image
remove the specified rectangle from the tree
disposes the texture
this method visits the area of the area
returns the ratio of the vertical fragmentation of this progression
this method is used to remove the object from the cache
render the current geometry
removes all the levels from this container
disposes the backing store
starts the rendering of the current geometry
remove the given rect from this set
test rendering of a
returns true if the given level is a tree
returns the font render context
returns the number of pixels used to calculate the height of the
sets the height of the image
sets the color of the
returns the ratio of the pixels of the area
visit all the nodes
updates the bounds of the
sets the color of the component
clears the map
draws the given area in the
removes the card from the list
begin rendering of a rendering
returns true if the list is empty
returns true if the given rectangle intersects with the
this method visits the the bounds
updates the bounds of the receiver
ends the ortho rendering render universe
scales the to the solid solid
the end of the
sets the solid style
returns true if the is using auto generation
sets the wire
the of a
set the usage
synchronizes the texture with the given coordinates
sets whether or not the writer should ignore exceptions
sets whether the print writer is to print exceptions
displays the current state
returns the image data
sets the color to render the given color
enables the
writes a file to the output stream
writes the image to a file
disables the
returns the width of the header
returns the height of the header
returns the pixel format of the image
returns the pixel type of the image
binds the texture to the gl context
draws the given string
disposes the resources
disposes of the resources associated with the given
draws a string
release the resources
the gl to a wireframe buffer
returns the pixel format of the texture
the gl
returns the pixel type of the image
returns the target
sets the to the given float value
returns the width of the texture
returns the height of the texture
returns the width of the glyph in pixels
flushes the buffer
sets the buffer size
sets the
returns the red bits
sets the red bits
sets the
returns the green bits value
sets the green bits value
returns the estimated memory size
returns the blue bits value for the blue
returns the aspect ratio of the barcode
sets the blue bits value
ends the rendering
flush the stream
returns the alpha bits
sets the alpha bits
sets whether the background transparency is opaque
returns whether the background image is opaque
sets the
returns the
returns the texture coordinates of this image
sets the handle of the message
returns a string representation of this object
updates the image with the given data
disposes the backing store
sets the capabilities of the capabilities
sets the screen to the given screen
returns whether flip should be flipped vertically
updates the image with the given image
returns the texture object of this texture object
returns true if the generation of the generation is automatically generated
sets the size of the image to be used when drawing the
returns the
returns the glyph code
returns the advance of the
clears the texture
sets whether vertex arrays are used
returns the use vertex vertex buffer
sets the smoothing flag
this method returns an xml representation of the object
asserts that the array is equal to the expected values
test empty source list at empty string
returns true if the given class can be instantiated
returns the default for the given type
return a property property of the given class
returns whether this class can convert a class
gets the bean class
begin user doc
returns the name of the property
returns true if the current thread is readable
this method returns the value of the write property
returns the value of the specified member in the
sets the value of this property
returns the class of the primitive class
register an order field with the given fields
returns an iterator over all the fields that are serializable
returns an iterator over all the fields in the given class
returns a field object with the given name and class name
returns the result of converting the result of the given result
this method is used to output the xml
writes the object to a stream
serializes the object to xml
marshal the object to a string
deserialize from an input stream
deserialize a hierarchical tree object from a xml tree
adds a fully qualified class name to this class
adds a fully qualified class name to the type
registers a package to be used for the package
adds a field to the given field
adds an attribute to the attribute
this method is called when an alias is already set
adds an alias to the given alias
set the attribute for the given field
set the value of the attribute for the use attribute for the
set the class for the attribute for the given type
adds a default implementation of the given implementation class
add an immutable type to this instance
register a new code converter code with the
register a new class converter
set the mode of the controller
adds implicit collection of bytecodes
this method is used to indicate the
process annotations for this annotation
process annotations from the given type
sets whether annotations are enabled
returns the name of the class
extract key from the key
returns the name of the given object
adds a classloader to the list
returns the
returns whether or not the driver is
returns the
returns the state of the state
create a stream writer object
create the parser
the name of the xml element
escape the name of the given name
this method is not supported by this implementation
sets the xmlreader to be used for the given xmlreader
returns the xmlreader to be used for the
sets the xstream object
sets the object
sets the source code list code
this method is used to get the name of the
end of the node
returns the java class name for the given qname
returns the qname for the given class name
escape the name of the given name
close the connection
returns the value of the code namespace mode code property
sets the entity resolver
sets the dtd handler
sets the content handler
sets the error handler
parse the specified code system identifier code
parses an xml document
parses the properties and validates the properties
starts a document
end document
flushes the start tag
pushes the element onto the stack and returns it
pop the current element
returns the path to the file
serialize an object into xml
deserialize an object from a string
adds a field to the attribute
adds an attribute to the given field
returns the to be used to calculate the
returns true if this is an integer
returns true if this nil is nil
logically a table
returns a boolean complement of the given code key code
returns the object as a java string
returns a string representation of this object
this method is not supported
returns the
this method is not supported
returns the name of the type of the
returns the java string representation of this object
returns true if this is a java java java java java java
converts this object to java byte
converts this object to a java char
converts this object to java int
converts this object to java long
converts this object to java boolean
converts this object to java
converts this object to a java java object
converts the to a double
converts this object to java
converts this object to java
converts this object to a java compliant code
converts this object to java
convert this object to java object
returns the lvalue object for the
returns the strong strong strong strong strong strong strong strong strong strong
this method is not supported
returns true if this is a string
returns true if this table is a table
returns true if this is a function
returns true if the user is a user data
returns true if this is a number
returns true if this is a closure
compares this code head code value to the specified object
returns true if the current value is a string
converts this byte to a java java
converts this character to a java character
returns the double representation of the double
converts this object to a java
converts this object to a java compliant java
returns the java
converts this object to a java
returns the lvalue
creates a new output stream with the given output stream
returns true if the current value is a number
returns the array size of the array
returns the hash capacity for the capacity of the
returns the number of elements in this list
puts a key in the array
puts a key in the hash map
puts a key value pair into the map
expands the
this method is used to convert the value to an
get the value associated with the key
this method is used to convert the value to
returns true if the key is contained in the set
returns the length of the
inserts a value at the position pos
remove an element from the list
returns the of the first element in the array
the vm from a vm
installs the standard standard jar directory
executes the strong strong strong strong strong strong strong strong strong strong
executes the
invokes the method
the of a
load the from the input stream
returns the lvalue for the given lvalue


returns the line of the
this method is used to handle error messages
throws an exception with an error message
description of the method
the
description of the method
insert an element at the front of the stack
returns true if the index is a
returns true if the index is a
pop the stack
sets the value of the stack
set the flag
set the value of the attribute
set the to the given value
sets the to the given
write the given byte array to the buffer
the given byte array
sets the
sets the value of the
sets the value of the property
set the index of the at the specified index
description of the method
removes the element at the specified position in this list
replaces the current element at the specified index
description of the method
the
returns true if the is
returns the nil value
returns the at the specified index
returns the at the specified index
returns the value of the code code property
returns the top coordinate of the top left corner of the stack
the of the
the
returns the element at the specified index
returns the string representation of the given index
returns the at the specified index
returns the value of the i th element in the list
returns the type of the element at the specified index
returns a string with the given index
add a state to the buffer
set the value of the property
set the byte value of the byte array
set the character to be converted to the character set
set the value of the f
set the value of the property
sets the value of the code s code property
set the value of the code l code property
the given object
adds a to the
sets the
adds a kanji
sets the for the given
returns the at the specified index
returns the at the specified index
returns the number of in the given
returns the of the specified
returns the of the given
returns the of the given
get the at the given index
returns the at the specified index
returns the string representation of the given
returns the at the specified index
returns the sbj object for the given int
returns the given
returns the of the specified
returns the value of the specified
returns the at the given position
returns the at the given position
returns the string representation of the given
call a function call
call a function
an index
an lvalue
call method to return the of the call
sets the to the given
gets the value of the property
returns the
returns the
returns the first of the given number of the given pc
returns true if the given stack is a stack trace
invoke the method with the specified
return the index of the specified code key code
a
returns the number of pc in the
convert the current string to a java string
returns the index of the first occurrence of the given index
writes the given code byte code to the stream
copies data from the buffer into the buffer
returns the length of the
returns true if the is a number
returns the environment for the given
returns true if this is a closure
description of the method
the
returns a new instance of the code os library code
returns the second long value of the second segment
returns a date object for the given date
executes the given command
returns the name of the
removes the specified file from the stream
rename a file
returns the category name
returns the time in milliseconds
load a class by its name
returns the resource with the specified name
returns an input stream for the given resource
returns the classloader to use for loading the class
sets the threshold
this method loads the class with the specified name
initializes the application
load a class by its name
returns a resource url for the given resource name
returns an input stream for the given name
returns the class loader for the current class loader
returns the class loader for this classloader
initializes the class loader
load a class from the cache
returns the resource with the specified name
returns an input stream for reading the specified resource
returns the class loader used to load the class loader
returns whether or not the property is not found
sets whether or not to throw a throw exception if not found
returns whether or not the property is set
sets whether or not to not found property or not found
returns the time range in millis
returns the time range of the time range in millis
returns whether or not the range is inverted or not
sets whether the time range is to be used
validates the day
sets the time zone
p remove excluded day
returns the time zone to be used as the crontab
sets the time zone to which the given time zone is
returns a string representation of this object
gets the cron expression
sets cron expression
sets the cron expression
returns true if the timer is started
returns true if the server has been started
returns the jmx object name
sets the scheduler name
sets the scheduler object name
sets the scheduling context
returns true if the server has started
set the properties to be used for the given properties
sets the flag
sets the transaction isolation level
sets the auto commit state to the given state
sets the transaction isolation level
returns the connection to the connection
restores the original values of the original state
closes the connection to the database
returns true if the given lock is owned by the given lock
returns true if the connection is required
returns the key of the non serializable value
convert a property to a map of properties
closes the result set
close the given statement
sets the boolean value of the field
create a boolean value from the result set
returns the value of the column at the given column index
sets the bytes to the stream
sets the boolean value designated by the given sql code row code
returns the transaction
returns true if the connection is required
sets whether the lock should be deleted
sets the threshold
sets whether autocommit is automatically auto commit false
sets the transaction isolation level
returns true if the acquire is else trigger or not locked
sets acquire the exclusive or not when acquiring
returns whether the is
sets whether the is
returns the value of the code thread inherit code property
returns true if the handler is able to be used
returns the connection to the specified connection
recover the jobs back to the job
close the connection
rolls back a connection
sets the data in the stream
sets the boolean value designated by the given sql code row code
returns the log
adds a trigger name pattern
adds a new trigger group pattern
adds a job to the chain
adds a job name to the list of regular expressions
adds a job group pattern to this group
sets the cron expression
returns true if this property has additional properties
returns the time before the given date
returns the fire time
returns the scheduled time
returns the job run time
puts a key value pair into the cache
returns the value to which this map maps the specified key
initialize the mbean mbean server
this method is used to create the mbean mbean mbean server
returns the thread daemon
sets whether the scheduler is running or not
get the rmi bind aet
sets the rmi bind name
returns whether the server is exported
sets the jmx export
returns the jmx mbean name
sets the jmx jmx jmx object name
returns the scheduler
returns the wrap in user transaction
sets whether the user can the user transaction
start the transaction
shuts down the transaction
resolve user transaction
returns whether the database environment is shut down
returns the job success message
returns the job failed message
returns the job to be fired when the job is fired
set the job success message
set the job failed message
sets the job to be fired when the job is fired
returns the trigger complete message
returns the trigger message
gets the value of the trigger message property
sets the trigger complete message
sets the trigger message
sets the trigger message
returns the file name
set the file name
set the file names
returns true if the job is over write jobs
sets whether or not write the jobs to write
returns the scan interval between two charts in the scan interval
set the scan interval
returns the fail on file not found
sets the fail on file not found exception
returns whether the schema is validating
sets the validation schema
shutdown the server
sets the n th
sets the interval type of the interval
returns the interval type of the interval
sets the next fire interval cutoff
returns the next fire interval cutoff
sets the start time
returns the start time
sets the end time
returns the end time
returns the next fire time
returns the previous fire time
returns the fire time after the given date
returns the final final final final final date
this method will be triggered when the calendar is complete
checks if the next resource is in the iterator
returns true if the given instruction is in the
updates the calendar after updating the time
checks whether the given date is satisfied by the specified date
returns the next time after the given date
returns the time zone
returns the cron expression
sets the calendar hour
returns the time before the given date
returns the final final final final final final final final final final
returns whether the mode is in mode
returns true if the current thread is paused
this method is called when the is
closes the context
finalize the object
sets whether this connection is transient or not
returns whether this data is allowed to allow to be retained
returns true if the data contains a transient property
removes the data from the map
returns the property value as a string
returns the property value as string
returns the properties of the given prefix
gets the data source
returns a connection to the database
shuts down the connection provider
initialize the digester
adds custom digester rules for this rules
sets the schema validation
returns the use context attribute
set the use context class loader
returns true if the job is already existing
process the file
returns the url for the given file name
returns a map of all scheduled jobs
returns the scheduling bundle for the given job
returns an input stream for the given file name
adds a job to the scheduler
adds a calendar to the scheduler
handles sax warnings
receive notification of the xml parsing error
called when a fatal error occurs
adds an exception to the validation exception
clears the validation exceptions
this method is called when the validation throw exception
get the value of the constant value
convert the specified input object into an output object of the
convert the specified input object into an output object of the
returns the validation exceptions
returns the detail message
removes all listeners that have registered interest for
test of shutdown method of class
set up the test case
tears down the test
insert a byte stream into the database
tests the update of the method
this method is used to execute the callable statement
tests the catalog
test connection properties
test of set profile sql method of class conexion sql
test that the connection is not
tears down the temporary directory
test of set method of class
test of connect method of class com
tests the of the
tests the table
test the server controller
the
prints the current iteration
returns the mean value of the mean
returns the current width of the confidence interval
returns the margin of error
returns the standard deviation of the samples
adds a new result to the list of samples
performs the iterative iteration
tests the update of the procedures
test of update method of interface java
tests fix for bug
test of update method of interface java
test of update method of class
tests fix for bug
tests the user interface
tests the
test that the connection is not null
test of method of class
tests the of the
tests the of a single
test of update statement method of class
get the statement
tests the update of a
tests the update of the sql statements
tests the update of the method
tests fix for bug
test the
tests the query
test of close method of class
ensure that the table is correctly correctly formed
test of set fetch size method of interface java
test of set max rows method of class
tests fix for bug
tests fix for bug
tests that the connection is rejected
test of database connection method of class org
test
tests fix for bug timeout
tests fix for bug
tests fix for bug
tests the comment parsing method comment
test for bug
test database connection
test the
ensure able to get columns with
test of get property info method of class database
tests the update of a table with a single column
test the of the meta data
test of method of class
test the database connection
test the of the best row
tests that the database metadata is correctly generated
test the table with the database
tests that the connection is correctly returned
tests fix for bug
tests the of the sql query
test
tests fix for bug
tests fix for bug
test that the is set correctly
test the database connection
test of get column rs method of interface java
tests fix for bug
tests fix for bug
tests if the database is correctly recognised
tests fix for bug updatable objects
test of is before first on empty
test of m method is writable
test of check method of class
test of get method of class
tests fix for bug
tests the update of a query
tests fix for bug
tests fix for bug
tests fix for bug
tests fix for bug
tests fix for bug
tests the of the
tests fix for bug
tests fix for bug
tests fix for bug
test of get method of interface java
test of get record method of interface java
tests fix for bug
test the connection
tests fix for bug
test of method of class
test of method of class
test of m method method of class query
test conversion of byte array conversion
test that bug
test that the database connection pool is writable
tests the conversion of decimal exponent
tests that the properties are set correctly
set up instance variables required by this test case
tears down the test
test that the database connection is correctly generated
test creating a new configuration
tests fix for bug
test of get connection method of class
tests that the connection is correctly connected
tests fix for bug
tests that the connection is correctly connected
tests that the properties are set correctly
tests fix for bug
tests the of a connection
ensure able to get connection with jcr properties
tests the connection setting
tests that the connection is still alive
test the
tests fix for bug
tears down the temporary directory
test of get connection method of class
tests fix for bug
create a new database connection
this test checks for the of the
returns the number of instances
returns a string suitable for the given variable name
get the properties from the database
checks if the specified test is defined in the system
close the database connection
checks whether the url is a url
returns the database properties
returns the host name of the host
returns the port for the given port
retrieves the character set as a character set
checks if the is valid
returns the internal methods for the given parameters
returns the major version number of this driver
returns the drivers minor version number
whats the version of this jdbc driver
returns the maximum length of a statement
does the database treat mixed case unquoted sql identifiers as
does the database store mixed case quoted sql identifiers in lower case
does the database store mixed case unquoted sql identifiers in mixed case
does the database store mixed case quoted sql identifiers in mixed case
does the database store mixed case quoted sql identifiers in uppercase
can a catalog name be used in a index definition statement
can a catalog name be used in a privilege definition statement
can a catalog name be used in a procedure call statement
can a catalog name be used in a table
sets the designated parameter to the given code string code in the
skips over and return the length of the read buffer
sets the byte buffer
sets the position of the
sets whether this packet is a multi packet
returns whether this packet has been transfered
adds a row to the table
returns the at index
returns true if there is more rows in the result set
indicates whether the cursor is after the last row in
retrieves whether the cursor is before the first row in
moves the cursor to the next row
removes a row from the database
removes a code statement event listener code from this code code
initialize the object from the ref property
checks if the specified class is a wrapper
sets the database name
returns the name of the database
sets the log writer
sets the password
set the port number
sets the server name
returns the name of the server
returns the url
sets the user id
returns the user
checks if the specified class is a wrapper
returns the proxy of the given class
checks if the specified class is a wrapper
sets the state of the auto commit
start generic documentation
start generic documentation
start generic documentation
retrieves whether this database supports the
returns the number of idle connections in the pool
start generic documentation
start generic documentation
sets the transaction isolation level for this connection
start generic documentation
start generic documentation
start generic documentation
closes the connection
start generic documentation
start generic documentation
start generic documentation
returns the code code object that this object may be
returns the transaction timeout value for this
sets the transaction timeout
the connection to the enterprise object
prepares the transaction for committing
the transaction has been completed and must be
this is the nop nop method
the end of the xid
this method is called by the framework to inform the about
logs a debug message with debug level
logs a debug level message
logs an error message
logs an error message
logs a fatal message with the given message
logs a fatal message with the given message
logs the info with the specified message level
logs the info with the log level
logs a level message
logs a trace level message at the
logs a warning message
logs a warning message
this method simulates the socket after calling
returns a socket that will be used to read the socket
this method is used to connect to the server
returns the event creation point as string
returns the catalog name
returns the connection id
returns the event creation point
returns the time of the event
returns the event duration
returns the duration units
returns the event type
returns the statement id
computes the size of the
executes the sql insert update or delete statement
sends a packet to the server
clears the next result set
clears all warnings reported for this code result set code object
close the underlying database connection
sets the designated parameter to the given code boolean code in the
sets the designated parameter to the given code byte code value
sets the designated parameter to the given java array of bytes
sets the designated parameter to the given code double code in this
sets the designated parameter to the given code float code in the
retrieves the value of the designated column in the current row
sets the value of a parameter
sets the designated parameter to the given code long code in the
sets the designated parameter to sql code null code
returns the calendar instance or null for the session or null if
retrieves the name of the cursor
sets the designated parameter to the given code short code in the
returns the double value of the given column
returns the first character of the query
returns a string representation of this object
returns the server info
returns the value of the designated column in the current row
returns true if the last row is currently being edited
retrieves whether the cursor is before the first row in
retrieves the current row number
returns true if the queue is empty
retrieves whether the cursor is first positioned at the first row in
indicates whether the current row is the last fetched row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
sets the base directory for the server
set the data directory
starts the server
stop the server
returns the command line
builds the optional command line
checks if the specified property is already set
checks if the current system is running on the windows
p return the value of the code time code property
retrieves the byte position of the given column
retrieves the value of the designated column in the current row
checks if the specified class is a wrapper
checks if the transaction isolation level is in isolation level
close the current connection
cleans up the connection
clears all warnings reported for this code result set code object
moves the cursor to the next row in this result set object
retrieves the current auto commit status
returns the calendar instance or null if the session is a new
returns the database catalog
returns the number of idle time in the pool
returns the current connection
returns the log
returns the name of the server character
retrieves the first warning reported by calls on this
sets the binary encoded binary representation of the
sets the first character of the query
sets the concurrency of the connection
is the read only read only
sets the type of the result set
sets the server info
converts a sql string into a sql string
ping the connection to the database
reports the metrics of the statistics about the
reset the current state of the server state
sets the status of the next transaction state
shutdown the database
returns the cached meta data for the given sql
returns the statement comment
sets the comment
whats a columns catalog name
whats a columns character
returns the column character set
returns the number of columns in this result set object
returns the column display size for the specified column
returns the column label for the given column
returns the name of the column at code column index code
retrieves the designated columns database type
returns the value of the field designated by the column index
whats a columns tables name
returns the table name for the column table column
indicates whether the designated column is a result increment
indicates whether the column is case sensitive
indicates whether the designated column is a cash value
start generic documentation
indicates the value of the designated column in the current row
indicates whether the designated column is definitely not writable
indicates whether values in the designated column are signed numbers
indicates whether the designated column is writable
returns a string representation of this object
returns whether the column info has a long column
checks the current position of the packet
checks if the charset is valid for a charset
large packets
cancels the connection
checks if the connection is closed
throws illegal argument exception if the given sql query is null or
closes all open results
executes the given sql statement
executes a sql statement
closes the device
suspend the current thread
destroy the
get the device
configure the transcoding data
delete the current data
returns the bit depth of the bit set
returns the number of channels in the channel
returns the data
returns the frequency of the
returns the size of the list
sets the orientation of the image
plays the ogg stream
pauses the playback
stops the timer
rewind the stream to the beginning of the buffer
deletes the current entry
sets the pitch pitch as a midi pitch
returns the pitch for this pitch
set the gain of the
returns the gain of the
returns the id of the statement
sets the maximum distance between the last
returns the maximum distance between the last
sets the factor for the
returns the factor for the
sets the distance between the reference and the
returns the distance between the two constrained
set the minimum value of the
returns the minimum gain for the current gain
set the maximum value of the
returns the maximum gain for the current
set the cone of the cone of cone
returns the cone of the cone cone
set the position of the mote
set the position of the sphere
returns the position of the
sets the velocity
set the velocity of the texture
returns the velocity of this velocity
sets the direction of the
set the direction of the cylinder
returns the direction of the
sets the relative attribute of the
returns true if the source is relative to the
sets whether the animation is looping
returns true if the current looping is closed
returns the number of buffers currently being tracked
returns the number of buffers
sets the buffer
returns the buffer
queue the buffers to the buffer
the buffers to the buffer
returns the more results for this result set
sets a property of the
returns a property from the
sets a property to the specified value
returns a property for the given code code
returns the number of updates in this result set
sets the limit for the maximum number of bytes in a
sets the query timeout in seconds
gets the runtime exception type
sets the returned array length
sets the
returns the argument name
sets the
returns true if this signature is a signature
sets the name of the method that is used to identify the
sets the body
sets the value of erase buffer and buffer
returns the flag
sets whether the given method is used
returns the flag
sets whether direct buffer buffer implementation is used
returns the flag
sets whether or not the indirect buffer is indirect
returns whether or not this type uses self signature for a compound
returns true if this is a
returns the flag
returns the flag
returns the flag
returns whether or not the signature is stored in the
returns true if this type has a container or not
returns the container type
returns the type
this method is called when the pointer is added to the end
clears the pointer to the pointer
returns true if the ith pointer is a pointer or not
create a new java
returns the configuration object
create a new token
returns the base element type
recompute the size of the array element
returns the struct name
sets the struct name
returns the number of fields in this form
returns the ith field
add a field to the list
sets the body part of the body
puts a type into the cache
returns the type of the specified name
remove the specified date from the list
returns a string representation of this function
returns the size in bits in bits in bits
returns the name of the
sets the name of the attribute
returns the size of the
returns true if the pointer is a pointer to the
returns the hash code value for this
returns true if the argument equals this type
returns a string representation of this object
this method visits the the visitor pattern
returns whether the has been
returns the pointer to the pointer to the pointer pointer
returns the dimension of this array type
returns the argument name
returns the argument type for the ith argument
adds a new argument to the list
returns the string representation of this tlv
returns the argument at the ith argument
returns the argument type for the ith type
adds a new argument to the list
returns the value of the specified enum value
returns true if the given name exists in this group
removes the specified code group code from this
pushes the scope onto the stack
pops the scope and removes it from the stack
returns the current scope as a string
adds a name to the scope
adds a scope to a scope
removes one level scope attribute
add a new scope
returns the scoped scoped name for the given name
returns the name of the scoped name in the current scope
return a string representation of this object
returns the java class of this class
returns the name of the class
returns the descriptor of the class
returns the java output directory
returns the java package name
returns the package name
emit all file
parses the given array of strings into a file
assigns the given code code to the code infospace code
returns the access control for a method
returns true if the given function name is a
returns the length of the given string
returns true if the given function is direct or not
checks if the given function name is already already in the list
returns a list of java code for the given class name
returns a list of the javadocs for the given class
returns the package for the given struct name
returns the value of the function capacity
returns the length of the given string
returns true if the given symbol is
rename a java type
returns the java method name for the given function name
returns true if all the components are static
emit the interface
emit the
lookup the given function name
returns the library handle
returns the library path
close the library
prints the body of the body in the body expression
returns true if the given type is a constant buffer
prints the body of the body of the
returns the name of the function
default comment for the emitter
writes a byte to the given byte buffer
adds a new to this condition
gets the sort
gets the sort
gets the sort
returns whether columns should be sorted in the table
returns the sort
returns the sort
returns the sort
returns whether or not the sort is case insensitive
initializes the textures texture
creates a texture object for the given filename
this method is called when the unloading of the
called when the mouse is being dragged
this method is called when the unloading of the
called when the mouse is being dragged
initializes the textures texture
sets the options to the current state
the current fps
invoked when a key has been released
invoked when a key has been typed
get the texture
returns a sorted list of entries sorted by sorted order
override hash code
returns the value of the x value if the
round to nearest neighbor
calculate the sine of the
returns a string representation of this object
computes the tangent of the tangent function
returns a new page format
checks if the value is supported
compares the host two urls
closes the given jar file
checks if the job is complete
returns the page for the given index
returns true if the given range is within this range
merges this range with another range
sets the personal flag
disposes the resources
returns the desktop
disables the background erase
disables the component
returns true if the given modifiers mask is valid
compares this file to another file
returns true if the user can navigate to the
returns the language of the specified language
sets the position of the
returns the data column of the given column
returns the data row
sets the data row of this table
gets the value of the specified parameter
this method is used to close the connection to the remote host
returns true if the window is a
returns the number of buttons in the group
close the socket and release all resources
a
returns the destination of the object
returns the alpha product of this code raster code
returns the color of the pixel at the specified coordinate
returns the width of the image
returns the height of the image
returns the width of the image
returns the height of the image
returns the image of this image
creates a graphics object
returns a buffered image for the given rectangular area
the data
returns the value of the x coordinate of the x coordinate
returns the minimum y coordinate of the rectangle
returns the sample model for the sample model
finishes the tar file
returns the width of the tile
returns the height of the tile
check if the socket is valid
returns the x coordinate of the translated point
returns the y coordinate of the upper left corner of the
returns the tile at the given position
returns the raster data for the given rectangular rectangle
converts a raster object into a raster object
returns a writable tile from the tile
write a single byte to the output stream
returns a string representation of this object
returns the value of the obj field
returns the referent
returns a copy of this object
returns a copy of the object
constructor for the constructor
returns a string representation of the service
exits the thread
saves the current file to disk
returns the value to which the specified key is mapped in this
returns true if the interrupt is interrupted
prints out the usage of the system
this method is used to generate the folder
find the package for the given data
recursively search all the jar files
save the file to the destination file
create a method handle for a given constructor
returns the context class loader for this class
set the context class loader
add a probability distribution to the probability distribution
adds a probability to the outcomes
multiply the object with the given constant
returns true if the sum of the values are valid
trims the values of the maximum value
returns the number of columns in the model
returns the name of the specified column
returns the class of the specified column
sets the data
sets the observer
initializes the object
initialize the object
initialize the properties
returns the unique identifier of this message
sets the agents collection
initialize the agent
returns the properties object
returns the peptide peptide identification list
returns the number of spectra in the collection
compares this agent to another object
resets the agent to the current state
returns true if the active state is active
returns whether the component has been identified by the
sets the name of the
returns the agent aggregator
sets the active state of the active
sets whether the is a
handle the key pressed event from the text field
returns true if the is
show all the
set up the startup mode
sets the
returns the properties of the given agent
returns the tag name of the free description of the tag
returns the name of the column
compares this agent to another object
returns the general general string
sets the property
returns the property value for the specified key
returns the set of general key set
returns the general properties object
returns the selected import
sets the selected iterator
changes the value of the general property
updates the text field
sets the status of the text
sets the error text
returns the table row properties
sets the status of the label
sets the color of the label
returns the active validation mode
returns the timestamp
returns the aggregator aggregator
returns a string representation of this object
returns the code validation code object that contains the
sets the output directory
returns a string representation of this object
calculates the width of the
estimate the height of the
gets the peptide identification
returns the active validation saver
adds a new agent to the agent
sets the file
returns a string representation of this object
sets the sequence of the
sets the list of
returns the number of rows in the model
sets the file to be read
gets the sequence of the peptide panel
returns a string representation of this object
returns the name of the column at the specified index
returns a hash map of all the annotations
returns true if the cell at code row index code and
returns the peptide identification
loads the
called when the tabbed tab is selected
returns the value for the cell at code column index code and
sets the value at the given index and returns the value
adds a listener to the list thats notified each time a change
gets the peptide identification
loads the
removes a listener for table model events
sets the file to read the file
returns a string representation of this object
sets the spectrum file
returns the description of the filter
returns the description of the filter
sets the annotations
returns the description of the
returns the description of the filter
returns the description of the filter
returns the description of the filter
returns the description of the filter
returns the description of the filter
handles the key pressed event from the text field
returns the description of the filter
returns the description of the filter
gets the value of the property
returns the description of the filter
returns the description of the agent
returns the description of the
returns the description of the filter
returns the component that is used to render the
sets the table color
mark the background color as a reject
mark the current coloring as indirect
sets the spectrum filename color
mark the current accept foreground
sets the default foreground color
returns the selected light
returns the selected dark color
checks whether the table row is important
returns the non selected light color
returns the name of the specified column
returns the dark color
returns the header light
get the data object for the given peptide seq
returns the name of the class
returns the header dark
returns true if the peptide passes the peptide policy
returns the sequence name
sets the sequence
disables filter for the filter
returns true if the filter is filtered
returns true if agent is a peptide
returns the number of visible rows in the model
returns the number of rows in the table
returns the maximum mass of the
returns the table row
check for peptide
returns the minimum mass of the
sets the value of the progress bar
gets the peptide peptide peptide identification
returns the number of visible rows in the table
returns the message
registers a new spectrum panel listener
returns the table row
sets the maximum value of the range
sets the peptide id to the given peptide peptide
returns the selected table column
sets the indeterminate attribute of the object
updates the spectrum annotation at the given column
this method creates the main window
close the tab with the specified index
returns the root of the tree
returns the number of peptide
called when the selection is changed
returns peptide peptide identification
returns the tree model
sets the filter tree model
disables the filter
returns the peptide peptide identification of the peptide
returns the peptide identification of the node
returns true if the current node is filtered
sets the text area to automatically connect to the
sets the user text area to use for the user
cancel the cancel button
invoked when the user attempts to close the window
creates the strings
invoked when a mouse button has been pressed on a component
cancel the currently pressed event
invoked when a key has been typed
invoked when a key has been typed
invoked when a mouse button is pressed on a component and then
returns whether the last saved changes are saved
cancel the current activity
sets the button to be used for the
sets whether the last saved changes was changed since the last save
returns the selected mediator
adds an action listener to the combo box
returns the selected validation file
invoked when the mouse cursor has been moved onto the
set the ms selected id
returns the selected peptide
sets the selection changed flag
creates the tree
set the ms selected xml config id
returns the selected import
closes the dialog
returns the frame that is used to render the frame
initializes the first tab
returns the agent aggregator
show the parameter dialog
this method is called when the mass of the mass of the
returns the number of spectra in the
returns peptide identification
called when the agent has been triggered
updates the status bar
invoked when an action occurs
returns the input string for the user
returns the selected column
returns the last version of the last version of the last version
called when the user changes the observable object
returns the active peptide identification
returns the spectrum
gets the selected peptide
get peptide hit
this method is called when the tree selection is selected
returns the best peptide hit
returns the number of in the peptide
returns the number of in the
called when the tab is removed
removes the tab at the specified index
returns the meta data for the given key
add agent report
removes all tabs from the tabbed pane
get the agent reports
removes all tabs selected tab
returns the validation report
returns whether the validation is validated
clears the view
compares two
gets the value of the property
returns the name of the spectrum
returns the peptide hit
sets the tree border text
sets the filter tree
sets the validated attribute of the object
returns the result
disables the filter
set the result of the operation
saves the current task to the current tab
sets the auto comment
returns the user comment
sets the user comment
returns the number of the that have been dealt
set the number of peptide hit numbers
reset the content of the
gets the value of the property
adds a report to the queue
returns the report associated with the given key
returns a string representation of the object
returns the
adds a new entry to the database
returns the identification of the given query
returns the number of items in the list
this method sets the file to the given type
returns the table row
returns the type
moves the node to the next peptide
moves the selected peptide to the previous peptide
returns the description of the file
sets the to the given file
gets the settings attribute of the project settings object
show the agent graph
returns the
accept all the
drops the line from the
reject all spectra from the
sets the
returns the description of the file
returns the description of the file
returns the delta mass of the given
returns the description of the file
returns the agent aggregator
sets the sequence
returns a description of the type of the
returns the description of the
returns a description of the type of the
returns the description of the
returns the description of the
returns a description of the filter
returns the description of the
returns the description of the
returns true if the iteration has more more data to be read
returns a description of the description
returns the description of this object
returns a description of the description
returns the index of the file in the list of index
returns the description of the filter
returns the description of the filter
returns the description of the measurement
returns the description of the measurement
returns the description of the measurement
sets the type
returns the description of the
sets the sequence
returns a description of the mass of the person
returns the description of this
returns the description of the
returns the description of the filter
returns the description of the filter
set the alpha value
sets the delta of the delta
returns the description of the filter
returns a description of the type of the
returns the modified peptide or not
sets the future busy model
sum the voting of the agent
returns the description of the
returns the description of the
returns the connection
returns a description of the score
returns true if this connection has a connection
tests if the connection is a connection
set the connection to the given connection
closes the connection
returns the agent configuration file
sets the comments attribute
returns the number of tabs in the tabbed pane
returns the agent configuration output
returns the task input
returns the selected tab index
returns the output file
sets the agent configuration input
returns a string representation of this object
returns the file that is used to generate the file
sets the separator
sets the file
returns the file that is used to generate the file
show about dialog
returns the peptide
sets the peptide output
returns the peptide
toggles the status of the avatar panel
set the to
this method is called when the user presses the exit button
initialize the retrieval service
returns the entry from the payer database service
returns protein sequence accession number of the given protein accession
returns the agent with the given reference
returns the peptide peptide peptide identification
returns the list of agents in the agents list
returns true if there are more elements in this iterator
sets all agents active active agents
sets all veto objects that are currently being validated
returns the name of this object
sets all the agents
returns the description of the file
returns the general description of this general service
populates the list of
returns the minimum ip address
adds a new triplet to the list
expands the node
sets the name of the user
clears all nodes
returns the selected node
selects a node in the tree
removes the node from the tree
adds a child node to this node
connect to a remote host
adds a node to the tree
removes the host from the list
removes the specified collision from the list
adds a new connection to this host
adds an interface to this container
adds a host to the host
adds a collision domain to this domain
removes a host from the host
removes the collision domain from the list
prints the help about the help system
runs the timer
runs the action
prints the help about the help system
returns the time for the specified index
returns the start time of the specified
returns the stop time for the specified index
returns the sys command
returns the response to the given index
returns the total time spent in the time
returns the average time
tests if a specified file should be included in a file list
schedules the specified task for repeated i i i i i i
parses the given array of strings and returns the
schedules the specified task for repeated i fixed delay i
returns the number of arguments
schedule a new execution time task
gets the argument at the specified index
returns the proxy map
runs the task
sets the proxy map
returns the value of the specified integer argument
runs the task
returns a map with the specified name
returns a list of the objects associated with this object
returns the value of the ith double argument
puts all the properties in a given properties
returns the value of the field with the specified name
add a argument to the list
returns true if the arguments passed in is a command
returns the value of the property with the specified name
stores the file to the given file
adds a parameter to this parameter
returns true if the specified value is not a
returns the value of the property with the specified name
loads the given file
returns the value of the property with the specified name
returns the value of the specified def
loads the file from the given file
adds a parameter to the list
returns the value of the property with given name
load the given inputstream from the given input stream
returns the value of the specified option
returns the string value of the field
returns the value at the specified index
returns the boolean value of the property with the specified name
returns the long value of the specified command
returns the number of parameters in the list
returns the int value of the property with the specified name
returns a set of all properties matching the regex pattern
returns the float value of the specified option
returns the long value of the property with the specified name
find a property group
returns the string representation of the object
returns the value of the specified option as a double
returns the value of the property with the specified name
remove a list of names from the pattern
sets whether or not this object is to be used
returns the boolean value for the boolean value
returns the set of sections in the map
returns the section configuration configuration
sets the value of a property
loads the ini data from the given input stream
returns the options
loads the xml document from the xml document
write the header to a print stream
writes the header to the output stream
returns the property value
returns a string representation of this object
returns a string representation of this object
stores the given map to the given print writer
returns a string representation of this object
returns the value of the boolean property
returns the value of the property with the specified name
tears down the fixture for example close a network connection
test method for
test method for
tests the is text
test that touch file exists
test the file with the current time
test copying a file from the copy file
test method for
tests the glob constructor with a file name
this method initializes this
this method initializes j toggle button
this method initializes j text pane
this method initializes j scroll pane
this method initializes server text field
this method initializes this
this method initializes mail in server text field
this method initializes login text field
this method initializes password field
this method initializes interval text field
this method initializes btn cmd go to
this method initializes this
this method initializes btn cmd type
this method initializes j text pane
this method initializes this
this method initializes j scroll pane
this method initializes script panel
this method initializes btn cmd wait
this method initializes j button run
this method initializes shift
this method initializes ctrl
this method initializes this
this method initializes alt
this method initializes win
this method initializes ch
this method initializes j content pane
this method initializes j text pane
this method initializes this
this method initializes j text area
this method initializes this
this method initializes enter
this method initializes pos poll panel
this method initializes j button go to
this method initializes j button jump to
this method initializes
this method initializes j jmenu bar
this method initializes space
this method initializes tab
this method initializes j scroll pane
this method initializes j menu
this method initializes key a
this method initializes key b
this method initializes command menu
this method initializes key c
this method initializes key d
this method initializes options menu
this method initializes key e
this method initializes j menu
this method initializes key f
this method initializes key map
this method initializes this
this method initializes key
this method initializes key
this method initializes j menu item
this method initializes key j
this method initializes key k
this method initializes key l
this method initializes j menu item
this method initializes key m
this method initializes key
this method initializes key o
this method initializes j menu item
this method initializes key p
this method initializes key
this method initializes paste menu item
this method initializes key
this method initializes key
this method initializes key t
this method initializes j menu item
this method initializes key
this method initializes j panel
this method initializes key
this method initializes cmd go to menu item
this method initializes key w
this method initializes cmd jump to menu item
this method initializes key x
this method initializes cmd click menu item
this method initializes key y
this method initializes tool bar
this method initializes key z
this method initializes map menu item
this method initializes j button
this method initializes j button cancel
this method initializes cmd type menu item
this method initializes cmd wait menu item
this method initializes j
this method initializes cmd menu item
this method initializes cmd mail root menu
this method initializes help commands menu item
this method initializes j menu item1
this method initializes mail check menu item
this method initializes send mail menu item
this method initializes cmd key
this method initializes show console menu item
this method initializes j check box menu item
this method initializes console panel
this method initializes execute menu item
this method initializes open menu item
this method initializes new menu item
test of the object
override to perform conversion of to
this method is called when the user selects the lead to be
flushes the output stream
adds an attribute to the list
closes the previous item
writes the given text to the xml stream
writes a message to the output stream
writes a line to the end of the line
writes the to the xmlwriter
parses the current transformation
sets the guard condition
add a new extend to this
sets the name of the user
flushes the output stream
sets the brief to brief
returns the brief description of the
adds a pre condition to the list of preconditions
returns the flow
adds alternate flow to the flow
adds a sub flow to this flow
adds a post condition to this condition
adds a new extension point to the list of extension points
add a special requirement requirement to the list
adds a new bullet point
adds a new step to the list
adds a new extension point to the
a utility method that returns a flow flow
adds a new extension point to the
called when the previous item is encountered
writes the given text to the xml stream
writes a message to the output stream
writes a line to the end of the line
the drag end method
description of the method
returns the number of elements in this list
compares two two objects for equality
returns the namespace uri for the given prefix
sets the z data reference
returns the
returns the prefix associated with the given namespace uri
returns the
returns the log y flag
returns an iterator over the prefixes
returns the log log status
clears the element
returns an iterator over all prefixes in this namespace
returns an iterator of the uris in the cache
sets the
returns the kind of the
gets the value of the property
returns the kind of the construction
returns the kind of the change kind
sets the new value of the new field
returns the kind of the construction
is this is a kind of
is this is a kind of
returns the value of the is report property
removes a model content from this model
returns the document
gets the value of the property
returns the kind of the change kind
sets the algorithm
returns the math math
compares this identifiable to the specified object
adds a parameter to the list
sets the data reference
adds a new variable to the list of variables
sets the initial time
returns the symbol variable
sets the output start time
sets the end time of the output
returns true if this symbol is a symbol
sets the number of points
returns the kind of the
sets the value of the property
returns the output start time
sets the symbol
returns the end time of the output
returns true if the variable is a variable
returns true if the list has been changes
returns true if the variable is a time
returns the kind of the construction
returns the contents of the file
is this version newer than the given version
returns the uri of the source uri
gets the value of the property
sets the note
returns true if the uri is a
adds a note to the list of notes
removes the note from the list
sets the notes
returns the exception
returns true if the uri is a
returns the type of this execution
writes the document to the given file
removes the given annotation from the set of annotation
sets the annotations
sets the
writes the document to string
returns whether this is a
returns the version of this version
returns the string for the given
this method returns the string representation of the given attribute
returns the string for the given
returns the name of the species
returns the string for the given
returns the processed result processed by the event handler
returns true if the operation is a vector operation
returns the notes element
returns true if the name is set
sets the value of the code code property
returns the processing report
sets the y coordinate of the reference to the data
returns true if the attribute is a change attribute
returns true if the is
returns true if this event has been processed
sets the value of the simulation reference property
returns true if the is
gets the model reference
returns true if the is
gets the value of the simulation reference property
returns true if this is a change kind
sets the target
returns the annotation element
removes the specified element from this element
sets the additional namespaces
sets the models
sets the
sets the data generators
sets the output
returns the model with the given id
returns the simulation with the given sim reference
returns the task with the given id
returns the additional namespace
disconnect from the server
sends a message to the server
checks if the current token is a valid token
checks if the given token is a group
reads from the input text
checks if the given token is a type of token
returns the mask value
returns the token
remove the token from the list
sends a message to the server
resets the iterator to its initial state
insert an error
returns the value of the code output code property
checks if the string is a string
checks if the specified type matches the type of the
tokenize a string and returns the tokens from the
stops listening for socket connections
returns true if the connection is disconnected
returns true if the connection is connected to the server
connects to the socket
this method initializes this
this method initializes j content pane
send an error message to the server
disconnect from the server
returns the turn
closes the connection
parse the message
handles the message sent by the client
handles the message
sends a message to the server
returns the current state
the message
create a new option group
returns the centre centre count of the given
returns the variant option group for the given argument search
returns the note
returns true if the given variant is present in the search
returns the order of this group
returns the variant integer value of the given token search
returns the deadline disconnect
creates a new instance of the class using the class
returns the syntax level for this syntax
returns true if this is a
returns the output subsequence of this token
sets the status
adds a handler to the list of handlers
handles a sub group
removes the handler from the list
this method is called when the user selects a command
this method is called when the command is
returns true if the is
called when the user selects a command
sets the turn
this method is called when the server is accepted
returns the phase of the current phase
returns whether or not the position is a
this method is called when the user resumes the command
returns the left
the
log the message to the given token
logs a message to the log
logs the message to the log
adds a message to the message
logs a message to the user
log a message to the log
logs an error message
logs a turn to the game
get the turn info
logs the connection state to the given connection state
logs an error message with the given connection error
removes a target class order target
disconnects from the server
returns true if the player is ready to play
returns true if this is a observer
adds a feature to the common token with the given token
this method is called when the user submits a command
sends a command to the server
adds a new token to the queue
returns true if the move is a move
this method sets the turn to next turn
the connection to the server
reset all orders to the orders
connect to the server
starts the game
adds a new mapping from the given token to this grammar
reads the input from a file
returns the current turn info
returns the map info object for this info
returns the maximum number of
returns the current state
returns the target of the target
returns the variant info object for the current state
converts the token to a string
copy the target to the target target
listen for incoming connections
returns whether the observer is currently in the
this method is called when the state of the state is invalid
converts the token to a standard token
checks if the given token is a valid token
method to disable order order
orders orders to a new situation
starts a new game
starts the game
moves the next turn to the next turn
starts the game
returns the power supply
logs the current turn
notify the that the player has been
notify the about the of a player not
pauses the game
this method is called when the game is about to be resumed
save or update a user
checks if the given username exists in the database
delete the given permissions
delete a blog entry comment
get the first result of the query
populate the list of objects
saves a blog to a database
update the blog
handles an http get request
sets the time as now
returns the day
returns the month
sets the month
returns the number of objects in the page
sets the number of objects in the list of objects per page
returns the list of the current session
generates a list of the
returns a string representation of this date
returns a list of all the tags associated with this blog
this method will delete all links
registers the registration for the registration
returns the theme path
append a to a string
returns the blog theme path
returns the request parameter
returns the value of the request attribute
sets the request attribute of the request object
returns the attribute value for the given attribute
returns the action id for this action
returns the subject
returns the current user
executes the action
gets the value of the property
sets the
resizes the image to the specified size
sets the default key listener for this
sets the default mouse listener to be used for the default mouse
sets the default media event listener
returns the number of users in the list
add a connection to the list
removes the connection from the list of connections
close all connections
updates the given
adds a to the
returns a string representation of this object
the thread is started
creates the list
creates the list
creates the list
saves the graph to the given path
writes a to the given
this method is used to convert a directed graph into a string
writes the footer
creates a regular expression for the pattern
perform the substitutions of the rule
appends a character to the buffer
returns the index of the relative index of the relative index
creates a regular expression for the pattern
add a language map rule to the list
creates a regular expression for the given rule
reads the specified amount of text from the
initializes the text
read a character from the buffer
reads the next line from the input stream
this method is used to create a transformation from a reader
transforms the given reader using the given reader
parses the given reader
reads the file and returns the file
initializes the matcher
moves the matcher to the next match
perform the substitutions of the rule
parses the given reader and returns the document
parses the given reader into a document
adds a rule to the list of rules
returns the value to which this map maps the specified key
finds the first occurrence of the given resource
find the first occurrence of the given region
marshals a code object code to an object
marshals a code code object to an object
deserialize an xml from a reader
converts an xml file into an object
this method is called when the reader is removed from the reader
clean up the writer
returns the pattern
returns a pattern that matches the given title
returns the pattern
returns a pattern that matches the given title
returns the pattern for the given category
returns true if the given text is already before wiki
returns the category link
initialize the button
adds a row to the table
adds a list of data to the table
remove all rows from the list
reads the database properties from the database
updates the card with the given card
deletes a card from the lesson
loads all cards from the lexicon
loads all cards from the given lexicon
enables or disables the toolbar button
displays the given card as a card
returns the section
returns the selected question
builds a statement graphics statement
closes the window
called when the user clicks the close button
display the text in the form
test if the name is a test name
checks if the given author is already in the author
returns a test details
remove section from a section
remove a question from its subject
opens a dialog to test the
description of the method
displays the question
returns the text to be used for the sign of the
returns the object as a string
add a implementation of a class to the bean
replaces the object with the given object with the given
returns the id of the bean
this method is called when the connection is finished
returns the session
add a bean in use
remove a bean in use in the list
handles the request
called when a connection starts
write a reply to the socket
called when a connection is completed
this method is called when the is removed
reads a request from the request
returns the method invocation handler
write the request to the given request
read a reply from the nntp server
register a new object as a reference to the
returns the text to sign in sign
sets the connection listener
sets the connection
processes a command
returns the invocation handler that will be used to allocate the
sets the connection listener for this connection
description of the method
this method is used to determine if the logging is enabled
this method is called when the is
returns the id of the object
returns the published name
gets the value of the reply code property
write the externalizable object
reads the object from the given input
constructs a callback exception with the specified
sets the configuration
returns the size of the message
rewritten for writing to the stream
disposes the database
set the rfc 822 message from message
this method creates a new name
verifies the mail addresses
runs the session
returns the address
returns a collection mail addresses as a collection of addresses
runs the
logs the specified message
logs a message with the specified name
returns the hash code value for this
logs a message with the specified name
logs a message with the specified name
returns the code pipe advertisement code
returns the input pipe
returns the next character
sets the next character
returns the previous linked char
sets the previous linked char
inserts a new character into the set
sets the current position to the next character
insert a string into the buffer
returns true if there are more characters in this character
returns a string representation of this character
inserts a string at the given position
returns a string representation of this object
deletes a position from the list
fill the list of appointments
connect to the server
disconnect from the server
connect to the server
sends a byte array to the socket
opens the dialog
opens the specified ini file
this method is called when the status of the status is delivered
close the log file
returns the log file
sets the roll over time
returns a lock for the given level
returns a new lock object for the given level
stop the
this method is called when the user presses the
flushes the log file
flushes the statistics
set the trace level for the trace level
sets the timer to the specified timer
the
this method returns the for the given user
called when the timer expires
returns a lock for the current lock
atomically clears the current timestamp
this method is used to set the to the passed ber
the given directory
returns whether or not the sort supports the
returns the host name
returns a string representation of this object
this method is used to generate the of the
returns true if this scan is a scan
returns the rank of this code rank code
returns the rank of the current rank
returns true if the user has a users
returns true if the dialog is ok
disconnects the database from the database
this method is used to get the info
returns the rank of the given rank
close the remote connection
reconnect the user to the given
returns a string representation of this object
description of the method
returns the value of the simple property i stats i
returns the rank of the given rank
returns the info set for the given code piece code
returns the last value of the last
returns true if the stem is a double
copy the bits of the given set of bits set to the
flush the buffer
sets the offset of the
gets the of the
adds a new letter to the
gets the letter from the letter
returns the rank of the given rank
get the
returns the current value of the
adds a number to the
get the info
returns the number of bits in the
returns the rank of the given rank
returns the rank of the given rank
get a info object for the given set of
returns the rank of the given rank
sets the next data set to the next data set
compares the two terms by comparing their number
compares two terms
this method determines whether this element is matched
returns true if this node is a value
returns true if the object is a valid value
sets the value of the specified property
compares the specified array of objects to the
returns the next in the list
compares the value of the light to the basis of the comparator
returns the next in the list
returns the next in the buffer
returns the next term in the current term
this method is called when the user selects the list of the
returns the previous term in the current phrase
returns the next term in the current term
add an array of to the current value
returns the next entry
compares two points according to the specified number of points
returns the next in the list
returns the next in the list
returns the of the given
loads the
resets the list of the to their default values
loads the rule
close the file
returns the number of regions in the
returns the offset of the given record from the
returns the offset of the of the given region
returns the number of in the
initialize the ini file
close the
reset the list of all the data structures
close the connection
get the record associated with the specified record
close the stream
returns a ber string representation of this record
close the
returns the number of terms in the given term
close the connection
returns the buffer buffer
puts a buffer into the buffer
returns the list of term code term code s in this term
decodes a byte array from the byte array
byte array
decodes a byte array from the byte array
byte array
this method decodes the item number from the given data
this method returns the byte order of the specified byte array
returns a byte order
decodes a byte array
read a short from the byte array
returns true if the given type is a display type
returns true if the element contains the given tag
returns the state of the section
returns a string representation of this object
callback method to handle the
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns the xml representation of the current xml document
constructor for requesting the
sets the
returns a string representation of this action
sets the
constructor for requesting the
adds a to the list of
constructor for requesting the
writes the current document to a string
constructor for the
constructor for requesting the
constructor for requesting the
returns a string representation of this object
constructor for requesting the
extract field name from the given data file
constructor for requesting the
returns the field of the given data file
constructor for requesting the
constructor for requesting the
returns the edit info object
constructor for requesting the
sets the
constructor for requesting the
constructor for requesting the
constructor for requesting the
returns the module
returns the module for the given code
create the document
loads the file
release the lock
display the
returns a string representation of this object
display a heading
display an error message
the user to the given user object
this method is called when the user selects a to be
method
returns a string representation of this object
returns a string representation of the object
sets the
converts a string to a string
reset the
returns the
a
performs the actual parsing
method called by the client to validate the http response
initializes the host
returns a string representation of this object
initializes the client
returns true if the connection is connected
returns a string representation of this object
closes the connection
close the connection to the server
returns the info object
returns the server
checks if the requests requests is done
counts the number of requests in the current thread
creates a new code sip checksum code instance
returns the value of the field
sets the flag
resets the counter to zero
updates the given buffer
updates the
returns a string representation of this integer
display the anchor point
holds if the current transaction is expanding or not
returns true if the item is available
returns the valid
returns the valid password
gets the value of the status property
returns the institution id
gets the identifier
gets the personal name
returns the home address
returns the email address of the email
gets the value of the home phone number property
creates a new code sip code instance
returns the value of the imulti array referenced by this object
returns the end session attribute
display a info object
close the connection
set the timeout for this connection
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns the for the given name
returns a string representation of the table
returns a string representation of this object
builds the table list for the given database table
sets the data model
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
appends an error message to the
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
append a line to the buffer
returns a string representation of this object
returns a string representation of this object
returns true if the given string is a valid comment
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
sets the data object
returns the user id for the given name
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
builds the table list for the given database table
returns the element in the display
appends a line to the buffer
returns the user id for the given name
returns a string representation of this object
returns the of the user
returns a string representation of this object
returns a string representation of this object
initialize the application
selects a resource from the current table
returns the system name
returns the host name
returns the name of the server
get the port number of the server
returns the server type
gets the value of the property
returns true if the lower case is lower case
returns true if the user can be used by the user
returns true if the is
returns true if the is
returns whether or not authorization required
returns the client class name
returns the timeout value
returns true if the block is on the block
returns the number of retries
returns the value of the code another code property
returns the strip chars attribute
returns the block characters
executes the given data hook
removes a row from the table
initialize the normalizer
initializes the normalizer
action to perform when the action is pressed
initialize the normalizer
initialize the normalizer
opens the connection to the host
prints the given line to the log
this method is called when the user presses the roll over
close the log file
returns the log file
sets the amount of time to wait for the
called when user logs a log
close the connection
returns the file that was written to the log
opens the file
prints the given message to the log file
returns the file system
sets the name of the user
this method is called when the user leaves the time
this method is called when the roll over
close the connection
returns a string representation of this group
method to test the response
reset the state of the
runs the thread
sets the inst name attribute of the object
sets the state
sets the group class name
compares the sorts of priorities
returns the largest number of elements in this list
this method is invoked when the input stream is read
this method is invoked by the input input stream
returns true if the current connection is alive
this method is used to parse the input file
returns the number of records in this queue
opens a log file with the given log level
opens the log file
deletes all users from the database
this method is responsible for creating a session
sets the timer
returns true if the is
set the timer
sets the trace level of this message
returns true if the current channel is connected
returns the session id
gets the value of the property
stop the
this method initializes this
this method is used to determine if the authorized username is authorized
returns true if the given ipaddress is a valid ip address
returns true if the given is a dns file
flushes the statistics
set the trace level for the given trace level
returns the meta data for this object
sets the timer to the specified timer
returns the list of
set the db list
get remote server name
get the remote password for a remote server
database access to the database
returns the error code for this code error code
this method is called after the user is a server
returns a string containing the error message
returns true if the user has authorized by the name
returns true if the is
returns true if the is
set the password for the password
gets the value of the property
returns the password
returns the ip address
set the locale of the user
returns the user object
compares two password
get the object from the resource name
puts a resource into the cache
description of the method
sets the local java script object to the given java object
returns a short description of this action
returns true if the given ipaddress is a valid ip address
database access to the database
close the connection
checks if the given password is a valid password
returns the error code
get the table name for the given type
returns the error message
returns the column name for the given column name
merges the given
get the value of the specified resource as an object
updates the value of the element with the given id
close the connection
returns a short description of this action
adds all elements in the vector to the vector
adds a diagnostics to the queue
get the session id
add a duplicate of the given offset to the end of the
returns the descriptions
updates the tree
set the languages for the current artist
returns a vector of all the languages
updates the total number of opened files
this method is not supported by the database interface
initialize the specified engine
sets the tt tt object
returns true if the dialog is ok
returns true if there are more elements in this iterator
called when a user changes the data access control
updates the tree
returns true if the user has a users
this method is called by the search loop to search the search
returns a string representation of this object
called when the browse button is pressed
close the database
updates the tree
checks if the current user has been entered
returns the number of in the database
checks if the is ok
delete the user data from the database
sets the case sensitive flag
sets whether the punctuation is going to be marked as a punctuation
returns the key for the given key
finalize the connection
close the
get the database id for the given user
returns the first of the first result set
close the
updates the node with the given widgets
close the database
returns the error message
returns the number of
returns the attributes of this node
disconnects the data from the database
this method is used to get the data for the
returns the element with the given tag
close the connection
this method is used to handle the request
returns the string representation of this object
set up the page for the given page
returns the access control level of the user
the
this method is called when the user presses the
returns the of the given element
returns a code term info code object for the
saves the results to the database
returns the name of the element set
returns the name of the search element set
returns true if the sort criteria is sorted by the
returns the element at the given position
returns the formatting class name for the given class name
set the data for the user data
returns the number of history entries in the history
returns true if this scan is a scan
returns the last result set
toggles section between nodes in the tree
returns the last result set
get the last db group
get the last db group
returns the scan query data
the
returns the query
returns the query string in the database
get the query component
close the connection
returns the components in the query history
returns the limits of the first query in the history
removes the element from the list
returns the query string for the given query
returns a string representation of this object
sets the remote database
sets the password for the database password
returns the
returns true if the history is sorted by the given history
returns the service type
returns the password for this connection
returns the name of the server server
returns the service provider
returns whether or not this ldap server requires authentication
returns true if the history is a ranked item
returns the time the connection was established
returns true if the user is a temporary history
returns true if the given is a
loads the ini file from the given ini file
returns the inst
gets the threshold
returns true if the user has a db group
returns the change status of this message
the given request to the given
returns the order preference
returns a vector of
returns the service type
decodes the action
gets the value of the property
returns the source of the event
returns a string representation of this history
returns the name of the result
returns the copyright compliance value
returns the original result set name
returns the note
returns the date of the repair date
search term info
disconnect the data object from the database
search term for the search term
this method is called when the user selects a
remove an element from the document
returns the temporary database
update the information of the given data
returns the data object
get the database name
returns the number of
returns the name of the element
returns the name of the image
returns the filename of the image
returns the name of the thumbnail file
returns the type of the image
deletes the database from database
returns the cookie that is stored in the cookie
returns the class
returns the image file
sets the image file
returns a string representation of this object
returns the replicate id
returns the
sets the action for the given
sets the preferred database names
sets the svc service
gets the value of the ext property
get the database name
add a list of to the database
returns the database connection
returns the hashtable of keys
returns the name of the given key
returns the display name of the given key
returns the maximum number of sort records
returns the maximum number of records to sort
returns the key for the given key
returns the direction of the given key
gets section of section
returns the name of the given key
returns the number of levels in the given element
returns the display name for the given key
returns true if sorting attributes are set
returns a string representation of this object
returns true if the current session is
this method is called to indicate that the current session count is
returns the sum of the total number of sessions
returns the current count of the current session
deletes the user from the database
returns the current limit
returns whether or not this authorization is a
reset the count
initializes the user
returns the current session
this method deletes the from the
returns the current session server
sets the search results
get the db name for the given database name
removes the element at the specified id
returns the length of the request
get the db name
returns the response length
returns the
returns the query string to be used to parse the query
returns the right most right most right edge of the given element
get the z value of the given name
returns the image node
get the db result
returns the code for the code
gets the value of the property
returns a string representation of this object
get the db object for the given db result set
the given request to the given
returns the most left first child of this element
get the history of the given user
get the search history entry with the given name
returns the value of the field required flag
returns the user data for the user
returns a string representation of this object
returns a hashtable containing the db list
returns all matches of the given string
get the last history entry for the given history
returns whether this can perform the
get the class object for the class
returns true if sorting is used
returns true if the generator is a generator
returns a string representation of this object
method
returns the history entry number
returns true if this can perform the multi db search
returns true if the given object is a new session
returns the session id for the given session and the current session
returns the last result set
returns whether to do optimizations on ranked
gets the lists of the
returns whether to do reconnect should be used
returns the last result set
runs the thread
returns whether the scan should be able to read
returns a string representation of the given message
get the name of the last db
returns whether or not this class can sort the sort
returns the summary db results
returns whether first or not delete the first record should be deleted
get the database db name for the database
returns whether are
sets the timer
sets the timer
set the trace level of the trace
disconnect all the session
get a db name for a database name
returns the flag that determines whether or not the default result set
returns true if the channel is connected to the
returns the label name for the given element
opens the log and opens the log
returns whether the names of the names of the names are set
opens the log file
called when the is done
returns the use ref id attribute
get the result of the search
stop the
returns true if sorting by the default sort criteria is set
flushes the log file
flushes the statistics
set the trace level for the given trace level
sets the timer to the specified timer
returns the location of the server
get the of the given database
returns the depth of the node
removes a child from this node
adds a child to this node
returns the child of this node
connect to the server
returns the next element in the tree
returns the label name for the given element
returns the id of this object
returns the of the given
disconnect from the server
adds a child to this tree
returns the next element in the tree
sets the password
returns the total number of in the search results
getter for property init options
returns the lower bound of the range
get the original for search
returns the maximum number of messages in the maximum message
returns the pass word
returns the original result set for the original search results
returns the preferred size of the message
returns the query type
returns the replace indicator
returns true if the given id is a value
returns the size of the scan step size
returns the upper bound of the upper bound
get the database database database database name
increases the height of the element
returns the timeout period for this
returns the z table list
returns the timeout value
returns the of the
returns the list of include patterns
adds the given element to the list
clears the hash map
returns the z server data object
decreases the height of the element
sets the init user information
decreases the height of the given element
getter for property user information
removes the specified from the list
sets the width of the element
returns the z db
decode the byte buffer to the byte array
returns the
sets the width
computes the digest for the given source
this method is used to convert a digit to a hexadecimal digit
returns the string representation of the current value
returns a string representation of this object
checks if this message is equal to another
returns the cache data object for the given format
update the value of the counter
encodes a byte array buffer to a byte buffer
creates a new buffer
sets the width of the element
adds a new to the list
close the stream
sets the width
adds a data object to the list
closes the connection to the socket
returns true if the data data is equal to the one
changes the element display to the given element
adds a new code collection code to the list of elements
returns a string representation of this object
save the applicable data to the
initializes the client
insert a new directory
initializes the webserver
returns the number of in the list
this method removes the text from the current text
returns the first first number of the first element in this list
insert the methods description here
merge the two occurrences of a given name
compares this term to another
compares this term to another
stores a value in the ini file
this method is called when the element is removed
set the attribute for the attribute
returns a string representation of this term
writes the file to the given file
returns the transaction id
writes a string to a file
set the object to the given object
this method is used to create a data object for a given
performs the actual processing of the current response
returns a string with the given id and the
add a to the
re allocate the
performs a response from the given response
sets the value of the element
returns true if the data object is a same data as the
performs validation on the response
returns true if the data is a same as the data
reset the state of the
returns the data of the given file
performs the actual parsing
returns the previous element of the list
returns the of the given file
returns the next element of this type
reset the state of the transaction
replaces the current data in this form with the given
convert this string to a ber integer value
converts a ber value to the string
performs the actual parsing
reset the status
returns a string representation of the specified
the
moves the node to the specified position
returns the ini file for this file
returns the data node for the data
returns the section keys
find the data node with the given index
returns an enumeration of all sections in the ini file
moves the node up to the next node
compares this attribute to another
returns a string representation of this object
returns the data directory
returns a string representation of this object
returns the data directory
returns a string representation of this object
returns the additional information
returns a string representation of this object
adds a new to the list of
returns the attribute
returns the structure of the structure
returns the value of the code code property
add a resource to the list of resources
returns a string representation of this object
build the
build the response object for the response
moves the node down to the next move
this method is called when the request is received
adds a standard format to the list
clear the order
returns a string representation of this object
set the directory to which the is stored
this method is used to set the data of the
returns data directory
returns a string representation of this object
returns the data directory
sets the name of the database
merge the given name into the database
returns true if the given attribute matches the elements of the given
add a new database to the database
returns a string representation of this object
this method creates a data directory object
returns a string representation of this object
returns true if the current error has occured
returns the diagnostic message
adds a new diagnostic to the diagnostic trace
this method is called when the result set is set
get the name of the database
reset the database to the given name
returns the number of
returns the result set id
returns the position of the start position of the given data
returns the prices in the given method
get the prices
moves the node to the specified position in the tree
reset the state of the customer
returns a string representation of this object
set the maximum number of records in the database
set the maximum number of records to be used for sorting the
sets whether the attributes should be generated
set the syntax of the syntax
sets the size of the step
adds a new key to the list of key values
returns true if the given object is a new session
returns the key for the given key
returns a string representation of this object
get the sync object for the given key
creates a new action
get the int value of the key
constructor for the user interface
initialize the
initialize the
returns true if the sync manager is synchronous
remove a sync key from the cache
initialize the server
this method will be used to determine if the user is authorized
set the sync mode for the given key
sets the ip address of the ip address
sets the ip address of the ip address
returns the history of the history
returns the current list of authorized databases
set the db list
returns a hashtable of the application context
get the remote password for a remote server
opens the logger
get the database access authorized
returns true if the object contains the specified name
strips the characters from the given string
returns the ip address
returns the size of the data in bytes
this method is used to determine the value of the given block
check if the user is
returns the user object
returns a string representation of the object
returns the root element of the template
close the log
checks if the given password is a
get the database list
escapes the given string in the current user
get the database access authorized
returns true if the current thread is authorized to connect
returns the status of the user
returns the string value of the string
returns the error message
replaces the string str with the given string
updates the header with the given header
returns the host peer host
returns the peer address of the peer
returns a string representation of this object
decodes the action
returns the authorization status of the user
deletes all the keys and the user object
this method is responsible for transmitting the session
returns the action
returns the id of the thread to be executed
returns the status of the status
returns a deep copy of this object
returns the
returns a string representation of this object
merge the given style data into a style table
returns the value to which this map maps the specified key
returns the value of the specified key
get the value of the given key
get a value from the key
get the value of a section
get the value of a section
put a key value pair into the map
creates a new data pair
construct a data pair from a string
returns a string representation of this
returns a string representation of the url
returns true if the value is empty
stop the
flushes the log file
flushes the statistics
set the trace level of the trace
sets the timer to the specified timer
the
returns a short description of this action
returns true if the multipart data is available
sets the locale
returns the multi part boundary
timer timer for timer
saves the profile to the persistent store
returns the instruction rule specification for the given instruction
removes a instruction from the list
returns a string representation of this object
strips the block characters from the given string
description of the method
returns a string representation of the given data
returns a string representation of the given record
returns a string representation of the given record
returns a string with the given data
returns a string representation of this object
returns a string representation of this object
formats a user object into a format
returns the rule
initializes the object
returns a new object suitable for the given
create a copy of the
build the text record
returns the directory for the given root
returns a string representation of this object
returns the key of the filter
insert a new location into the table
description of the method
returns a short description of this action
returns the call no
returns the call no
returns the call no
adds a new data object to this data set
returns the call no
find the for the given
returns the data for the given data directory
adds a new character to the data set
appends a data to the current data
returns true if there are more elements in this iterator
set the widgets
adds a new character to the buffer
remove the specified applet from the applets
save the current element
returns the entity with the given name
get the user
puts an object into the datastore
sets the default operator
sets the default browse map
sets the plural for this ngram
returns a string representation of this object
clones the map
returns true if the applet contains the specified applet
this method is called when the user presses the next
this method saves a file name and its contents to the database
returns a string representation of this object
returns the data object
returns the data formatted as a string
saves the data to the data
returns the names of all the
returns the data object
returns the value of the named property
add a db name to the database
returns the name of the object
remove the selected item from the database
returns the name of the database
returns the name of the file
add the selected
returns the name of the element
returns the class name of the class
sets the selected text
returns the
sets the selected
returns the result set
returns a string representation of this object
check if the given database has selected
return true if the database has the database name
update the db
set up the test
sets the name of the long property
deletes the database name
sets the value of the user property
returns the db group
this method is called when the user is
returns the selected object
returns the list of db names
returns the long name
returns the topic name
returns whether user defined topic is defined
validate the
sets the bundle name
sets the database file
sets the description file
sets the file
sets the message bundle name
sets the backup directory
sets the name
sets the log directory
add a new reporter to the list
add a new reporter to the list
returns the string with the given template
commits the changes to the database
compares this object with the specified object for order
sets the registered
compares the specified object with this database for equality
returns a string representation of this bundle
runs the program
returns the string representation of the given key
flushes the output stream
sets the executable name
sets the code resource bundle code to be used by this
resolves the given key
resolve the given key and return it
this method converts the given date to a string
returns the value of the given field
convert the given value to a string
returns the value of the given number of digits
initializes the activator
this method is called when the user cancels a journal
initializes the message bundle
returns a file object representing the log file
returns the message bundle name
returns the current database database
retrieves latest newest update time from the database
add a data handler to this instance
set the class name
sets the records records
runs the current
exits the application
initializes the ini file
returns the keeper flag
check if the given special file exists
returns a string representation of this object
checks if the given special special characters are in the special mode
this method is called when the input file is a file
returns the percent done percentage
returns data for the given data directory
returns the keeper flag
returns the keeper state of the given object
p this method is called when the input stream is read
this method is called when the input file is read
returns the number of bytes done
returns the data directory for the given data
returns a string representation of this object
returns the number of bytes read
returns the number of garbage bytes read from the
returns the keeper state of the given object
check if the given special is a special special check
returns the number of records in the list
returns the number of records fetched
returns the number of records read
returns the number of records skipped
this method is not supported
description of the method
returns a string representation of this object
returns the number of regions in this group
returns the number of read read in this stream
returns the number of write write write write write write write write
returns the total read time
returns the total number of times the file is read
returns the block size
returns the rank of this number
reset the statistics
close the file
this method returns the info set
returns the next in the stream
returns the parameters of the ini file
reset the list to the default value
returns the first available repeat of the given file
replaces the occurrences of the character in the dictionary
returns the parameters of the ini file
returns the of the given ini file
compares two terms
compares the first term in the receiver
add an entry to the
returns the next entry
checks if the given value is a
returns true if the current value is greater than the result set
returns true if this node is a
returns true if the match is matched
returns the
set the value of the sobject field
returns the term
removes the code pointer code at the given code pointer code
initializes the ini file
p add a indicators string to this object
returns the writer data writer for this writer
prints the stack trace to the specified print stream
prints the stack trace to the specified writer
marshal an object into a string
marshals a object as a representation of the object
returns a java class from the supplied class object
returns the class of the container
appends an attributes to the current attributes
loads the template
returns the content template
returns the command nodes
loads the template
returns the template that this template is used
returns the contained view
returns the contained view of the given node
sets the template reader
this method is called when the user selects the command
returns the next factory for the given class
loads the user config from the config file
returns a new object with the specified object as a
returns the for the given class
returns the first element in this cache
returns the view associated with this object
puts a child into a view
adds a buffer space to the buffer
returns the parent context
returns the configuration context
adds a reader to the list
called when the reader is finished
prints the stack trace of the nested exception
unread event
prints the stack trace to the specified writer
returns the content event counter
returns the value of the simple property property
this method initializes this
this method initializes j content pane
this method initializes j text pane error
this method initializes j button ok
writes the given text to the given text
write the given text to the end of the text
write a comment
receive an object for locating the document locator
receive notification of the beginning of a document
receive notification of the end of the document
begin the scope of a prefix uri namespace mapping
end the scope of a prefix mapping
receive notification of character data inside an character array
receive notification of a skipped entity
report the end of dtd declarations
report the beginning of an entity
end an entity
report the end of dtd declarations
report the end of dtd declarations
lexical handler method
reports the content of the object
this method initializes this
send hello greeting to the server
initialise the core sub system core
returns the target sub system
returns the hello world
returns the maximum number of in the test
sets the number of fragments to be used by the
updates the statistics
send hello to the remote server
returns the list of included data points
initializes the fragment
initializes the core for
returns the description of the filter
sets the logging status
returns the hello message for the reciever
shuts down the
sets the logging
gets the sub system control panel
returns the
returns the status of this
initialize the core
sets the num fragments label
description of the method
called when a connection is established
called when the connection is lost
sets the number of fragments to be used
this method is called when the connection is lost
sets the logging
returns the number of fragments in this ring
shutdown the thread
sets the logging of the receiver
the thread to sleep for a period
returns whether the logging is logged in
returns the logger
the core
returns the sub system control panel
returns the status of this instance
returns the generalization subsystem
returns the number of elements in this list
checks if the given class is already in the list
test if this class is equal to another
returns the target sub system
clears the list of all the items
returns the maximum number of test time
returns a shallow copy of this tt java class tt
compares this class with the specified object for equality
compares this object with the specified object for order
initializes the fragment
this method is called when the surface is being removed
returns the
compares its two arguments for order
returns the hash code value for this code attribute info code
compares this object with the specified object for order
initializes the core
returns the number of columns in the model
returns the name of the column
updates the log entry
returns the value at the given row and column
the connection to the given
clears the log panel
called when the connection is lost
returns the
the connection to the given
adds a row to the table
called when the connection is lost
returns the name of the column
adds an action listener to the code jfile chooser code
removes a row from the model
returns the value at the given row and column
returns the severity mask for this message
this method returns the sub panel of the
returns the query
sets the severity mask for the severity
helper method to parse a text field
sets the net trace
sets the offset row
sets the fatal error
returns the status of the service
sets the error state
updates the syslog info
returns the log entry for the given row number
sets the warning attribute of the toggle handler object
sets the information of the checkbox
returns the number of rows in the model
disables the panel with the listener
sets the scroll position
sets the debug flag
shuts down the core
log the given log entry
adds a new entry to the table
logs the given log entry
clears the table
checks whether the given severity is selected
logs a message to the remote log
scrolls down the table to the scroll pane
updates the given log entry
clears the table model
trims the rows to the maximum value
return the log entry filter
this method is called by the servlet service to log the log
returns true if the trace is allowed to be used
initialize the application
the listener
returns true if the severity level is permitted
shutdown the application
returns whether or not the application is allowed to create a
called when the connection is lost
returns the name of the application
returns whether or not the user can disable the severity
initializes the application
returns the severity mask
returns true if the user has info to be shown
returns the name of the application
returns true if the debug mode is allowed
updates the
returns the wrapped class
updates the
returns true if the interface is a synchronized interface
initializes the class
checks if the superclass of the superclass is a superclass
initialize the core host system
checks if the specified object is equal to this resolved
adds classes to the list
returns the resource manager for this resource manager
loads the given collection from the list of available
returns the severity mask
shutdown the core
resolves the given class
returns the sub system control panel
loads the tree
returns the status of this object
clears the tree
called when the user selects the connection to the server
get the number of listeners
updates the tree
sets the running system test
returns the system test
returns a vector containing all the classes that have been loaded
clears the timer
sets the time of the remaining time
shutdown the thread
this method initializes this
runs the timer
invoked when an action occurs
initializes the application
returns the name of the application
the node selected by a system
this method is called when the system core
log the given log entry
updates the
this method is called when the test tree is selected
clear the log
called when the test selected is selected
clears the database
adds a new to the project
returns the horizontal axis
returns the vertical axis for the plot
returns the number of series in the dataset
adds a system test result to the system
the
returns the name of the series
invoked when an action occurs
returns the number of items in a series
returns the x value for one item in a series
notifies all listeners that the resource manager has changed
invoked when an action occurs
returns the y value for one item in a series
returns a string representation of this object
this method queries the database and returns a collection of
adds a new to the graph
updates the data codes for the list of data codes
initializes the database
returns a string representation of this object
description of the method
sets the
returns the subsystem
this method is used to set the data listener for this code
this method is called when the user the connection
test if this node is equal to another
shuts down the database connection
description of the method
adds a new to the list
updates the data of the
this method is called by the to process the data
called when the user has connected to the given
returns the horizontal axis
returns the
returns the vertical axis for the chart
returns the
returns the name of the specified series
returns the number of items in a series
remove the from the
returns the x value for one item in a series
returns the sub system control panel
returns the y value for one item in a series
returns a string representation of this object
process data from data point
disables the data source
compares this to another
initializes the core
returns the status of this subsystem
initializes the application
set the recording flag
returns the name of the application
connection listener method to allow to access the data manager
this method is called when the user the connection
sets the recording flag
initialize the system core properties
returns the available data point for the available data point
invoked when an action occurs
returns true if the recording is a recording
this method will be called when the server is removed
the connection to the given
returns the subsystem
the system list
sets the processing state
returns the sub system control panel
returns the number of recording listeners
returns the status of this resource
load the available system list
this method is called when the user selects the connection to the
checks if the processing processing is processing
returns the
returns the compressed class at the specified index
sets the contents of this code text code array
returns the number of data listeners
compares this class with the specified object for equality
returns the gain of the current gain
checks if the swf compressed class contains the given compressed
sets the source file name
adds a filetype to extension
returns the source file name
tests if a specified file should be included in a file list
sets the contents of this entry
returns an input stream for this file
returns the pan position
compares this file to another
returns the source file
returns the source machine
returns the muted
adds a compressed file to the list
returns a string representation of this object
clears all data from the data set
compares the given class id and return the value
compares the specified object with this
clears the data store
kills the player
returns the hash code value for this object
returns the
load the classes from the given collection
returns the of the test
clears the compressed file
returns the collection of classes
this method is called when the user selects the purge class
sets the url to the player
shuts down the sub system core
returns true if the compressed file is empty
gets the sub system control panel
resolves the class name for the given classname
starts the player
clears the internal class
returns the number of compressed compressed compressed file
this method loads the specified compressed class
returns the status of this
loads the class from the list of classes
adds a report page to the tabbed pane
called when the data model changes
returns true if the file contains the compressed file
registers a listener to receive data model change events
closes the input stream
called when the data model changes
fires a data update event to all listeners
returns the number of parameters in this collection
get compressed file from the file
adds a parameter def to this definition
returns the arguments parameter
removes a parameter def
returns the parameter definition for the given name
returns the options parameter
returns the parameter def at the specified index
returns a vector of compressed files
returns true if the parameter def contains the given parameter def
clears the parameter defs
returns a shallow copy of this code collection code
returns a parameter form the parameter with the given value
sets the status
returns a list of compressed files
returns the maximum gain for this
validates the parameter
returns the number of parameters in this list
adds a parameter to the parameter
removes a parameter from the parameter
returns the arguments
returns the options of this parameter
returns the parameter with the given name
returns a string representation of this object
returns the parameter at the specified index
compares the specified object with this parameter def
returns a collection of all the occurrences of the file
returns true if the parameter contains the parameter
returns a parameter form the given value
validates the parameter
returns the minimum gain value
returns the number of instructions in this list
returns a shallow copy of this object
adds a new instruction definition to this definition
compares this parameter to another parameter
removes a instruction definition from the stack
deletes a file from the file
returns the instruction definition at the given index
returns true if the instruction contains the given instruction
clears the instruction
sets the pan control of this view
returns a shallow copy of this instruction
load a zip file
starts the thread
returns a list of registered
set the to a new one
this method is called when the user selects a connection to the
getter for property bad
returns the list of all the fragments that are registered for this
returns the number of system properties
adds a system test result to the system
returns the system test result at the given index
test for equality of the receiver
returns the test string
compares the specified object with this system
returns the maximum time in seconds
test is the system busy
gets the value of result type
sets the test result code
returns the source jar name
gets the test result code
test for equality with another
gets the value of the system test type property
sets the test started
returns the target sub system
assert that two objects are not equal to two objects
assert that two doubles are equal if the same size is equal
returns the date of the test
returns the test description
sets the test ended date
returns the number of elements in this collection
returns the code collection of code codes for formatting the codes
adds a to the list of
returns the date when the test ended
returns the element at the specified index
returns the included data point codes
returns the name of the table data
set the log entries
returns the
set the severity level of the log entry
returns the name of this object
returns the collection of entries that have been collected
returns the severity of the log
returns the system code
sets the data point parameter
compares this to another
returns the parameters of the system
returns the data point of the
returns the host name
returns the hash code value for this object
sets the source jar file name
returns the date
sets the test notes
returns the
checks if the given data point is stored in the data set
sets the current test
log the given log entry
returns the test notes
returns a string representation of this object
returns true if the dialog is cancelled
this method is called when the is removed
returns whether or not the application is alone
shows an error dialog
close the specified tab
close the tab by the given key
sets the current node
spawns a mobile jframe
this method is called when the connection is lost
sets the disconnected
paint the image
adds a panel to the panel
remove the mobile frame from the window
set the image icon
returns true if the connection is currently connected
makes the window visible visible in the window
returns the window menu
removes the panel with the given title
hide all the frames
adds a component to the component
remove a control panel
returns the text in the text area
returns the sub system core core component
removes a component from the component
clears the text area
returns true if the component contains the specified component
interrupt the test
show the component
returns the log entry filter
this method is called when the user changes the status of the
reads the log entry from the given log entry
sets the component to be inserted into the component
writes a message to the console
this method is used to set the panels title
gets the status panel
description of the method
sets the selected color for the given component
returns the panel with the given title
adds a mobile panel to the current panel
adds a mobile panel to the
returns the control panel for the given
sets the class of the
returns the children of this code node code
gets the mobile panel
sets the color of the selected tab
clears the tree
returns the child at the specified index
returns the number of child nodes of this node
updates the tree
returns the index of the given node
sets the listener
returns the name of the leaf node
returns the text of the field
returns the branch name
compares the specified object with this node adapter for equality
add a class to the list
compares the specified object with this adapter for equality
this method is called when the application is initialized
set the component to be displayed
sets the label of the label
returns the name of the application
returns the control panel
updates the tree
returns the preferred size of this component
sets the connected state
returns the width of the component
returns the tree
sets the disconnected status
returns the wrapped component
returns the height of the component
closes the tab
sets whether this component is enabled
add a class to the tree
accept all directories and all extensions
adds a test to the list of notes
compares this to another
returns the total name of the object
enables or disables the disabled state of this month
sets the no date
asserts that two ints are equal
returns the
returns the angle of the rotation
sets the location of the image
returns the
returns the location of the camera
returns the rotation vector
returns a string representation of this object
compares this to another
returns the direction of the camera
compares this to another
rotates the current jpg object
sets the orientation of the orientation
returns the month of the selected month
returns the hash code of this object
rotates the current jpg clockwise
creates a new instance of utils
moves the camera forward to the distance
moves the camera backward
returns the
transforms the point by the given point
cria a classe hibernate dao
initializes the system
clone the position
returns a string representation of this object
shuts down the server
transform the given vector into a vector
compares the specified object with this receiver
asserts that two longs are equal
returns the hash code of this object
returns true if this matrix is identity
returns the number of system properties
adds a parameter to this request
shutdown the remote server
returns the
adds a system code to the system
adds a orientation to the orientation matrix
returns the system code at the given index
returns a string representation of this object
sets the axis
initializes the system
sets the type of the parameter
returns the axis
shutdown the connector
sets the message
test if the current test is stand alone
returns a string representation of this matrix
clones the orientation
compares this object against the specified object
returns the matrix
asserts that two longs are equal
returns the status of this object
installs the
adds a new fragment dependency to the connection
compares this to another
adds a data point to the data collection
compares the specified object with this system
returns the data point at the specified index
gets the data point code
returns the dependent dependencies
returns the collection type
returns the data number
returns true if the queue is empty
updates the cache
adds a data point to the data set
returns the dependent fragment of the fragment
returns the number of data points in this collection
returns the date
asserts that two doubles are equal
getter for property data description
adds a data point code to the data point
sets the earliest date time for this date time
returns a string representation of this object
sets the database status
removes a data point code from the data point
getter for property data units
sets the data point code for the data point
returns the earliest date in the date time
returns the data point code at the specified index
returns the type of the
returns true if the data point contains the given data point
sets the latest date time
returns the database connection status
clears the data point
checks if the given data point is a conflicting contribution
sets the time of the time
returns the latest date
returns a shallow copy of this object
test whether this data point equals another data
returns the job info object
sets the data point code for the data point
sets the thread manager to use for this thread
returns the maximum job time
returns the
asserts that two objects are equal
returns true if this is a
returns a string representation of this object
compares the specified object with this receiver
returns a string representation of this object
returns true if the date is empty
returns true if this thread is equal to another thread
returns the host location
reset the timer to the specified time
runs the timer
this method is called when the timer becomes active
kill the thread
runs the timer
this method is called when the connection is made
returns the number of threads in this pool
returns true if the connection is connected
compares this to another
adds a parameter to the list of required parameters
disconnect from the connection
returns the number of dead threads
adds a parameter to the list
returns the status
sets the status of the connector
returns the parameter that is the name of the parameter
kill the thread
asserts that two values are not equal
indicates whether this page is complete
connect to the database
returns the parameter with the given name
check if the connection is established
wake up the wake up
returns the required parameter
returns an enumeration of the parameters set
sets the value of the parameter
kill the thread
sets the value of the parameter
verify that the current object is valid
sets the min parameter
runs the job
compares the specified object with this receiver
loads the values of the given argument into the
sets the maximum value of the parameter
returns the current state of the worker
sets the desc
returns the thread that is being used to adopt the thread
sets the value of the parameter
returns true if the job is a thread state
sets the min parameter
clears the hashtable and clears the hashtable
asserts that two longs are equal
sets the maximum value of the parameter
compares the specified object with this property for equality
sets the value of the parameter
indicates whether some other thread is equal to this worker
sets the value of the parameter
compares the specified object with this property info
runs the job
sets the min parameter
adds a property to this property
sets the maximum value of the parameter
sets the value of the parameter
compares the specified object with this property for equality
updates the remote remote remote remote remote peer
sets the min parameter
sets the maximum value of the parameter
returns a vector of strings that are stored in the properties
called when the applet is started
asserts that two numbers are not equal
called when the applet is cancelled
compares the specified object with this property for equality
respond to an error message
this method starts the teaching process
returns the property value as a string
compares the specified object with this property for equality
returns whether or not the network is allowed to allow a
sets the severity
returns a new
returns true if the user can accept the fatal
description of the method
adds a new entry to the list
returns whether or not this is allowed to create a new error
format a log entry
returns whether or not this is allowed to allow a warning
returns the severity of the message
remove a property from the list
returns true if the user can access the info
returns true if this socket is allowed to be used
returns the system code
returns true if the trace is allowed to be used
returns true if the user can support a permitted
compares this log severity to the specified object
returns true if the user can specify an error
adds an entry to the list
returns true if the user can ignore the
asserts that two doubles are not equal
returns true if the user can be used for this type
returns the parameters of the
returns true if the is allowed
adds a property to this property
sets the earliest date for the earliest date time
adds a collection of entries to this collection
returns the date
sets the latest date
returns a vector of the property names
returns the message format
sets the severity mask
add all entries in the specified collection to the list
returns the
returns the severity mask
returns a property with the given name
returns the log entry filter
asserts that the given result equals the given result
sets the system code type
process the log entry
returns the system code type
adds an entry to the list
remove an int property
sets the
inserts the specified element into the list
returns the
sets the exclusion codes for this collator
returns the exclusion codes for this collator
checks if the thread is interrupted
adds a property to this property
sets the element at the specified position
returns true if the set of dates are empty
sets the code code parameter at the specified
returns a vector of strings representing the property names
returns the
check the log entry for the given entry
returns the property with the given name
returns the subsystem
checks if the connection is connected
this method initializes console
returns the port number of the ip address
remove a property from the list
returns the
returns the name of the rmi server
the connection lost connection
called when the connected bot is connected
adds a property to this property
returns the fragments available
called when the user disconnects from the server
returns the machine
returns the boolean property names
returns the available pins
returns the property value for the given property name
remove a property from the list
adds a property to this property
returns the property names
returns the selected
returns the selected
returns the property with the given name
returns the subsystem
removes a property from the list
returns the port number of the ip address
this method is called when the connection manager is notified of the
adds a property to this object
returns a vector containing the names of the properties
returns the name of the rmi server
called when the connection is lost
returns the property with the given name as a float
returns a list of all core listeners
called when the user is connected to the
removes a property from the list
called when the connection is lost
clears the tree
adds a property store to this property store
disconnect from the server
this method is used to set the for the
returns a list of properties for this store
returns the core connection listeners
clears the cache
get a property store from the store
ping the server
remove a property store from the database
starts the processor
stop the timer
kill the current thread
returns a string representation of this object
removes the given node from the list
returns xml representation of this object
returns the icon for this action
opens the edit action block
returns a string representation of this object
resets the state of this node to its initial state
returns the action block node
compares the specified object with this action node
this method is called when a new connection is made
returns the sub system
returns the machine
sets the timeout in milliseconds
set the timeout for this connection
adds a node to the list
this method is called when the user presses the
compares the specified object with this action
returns a string representation of this object
returns the
adds a to the list of available core menu items
returns the fragments of fragments
returns xml copy of this object
returns the machines local
resets the node to its initial state
adds an action block node to the block
returns an xml representation of this object
resets the tree to the initial state
initializes the application
initializes the
returns the name of the application
set the editor panel property
checks if the property is set
returns true if the current element has the maximum
removes the current property editor panel
returns true if this object has the minimum
removes all property editor panels
remove a property node
returns the name of the property
remove a property store from the list
the connection to the server
returns the name of the store
returns the property store
clears the properties
removes the specified available core menu item
compares the specified object with this property store
returns the statuses in the list of all the remote hosts
returns true if the given node is wrapping
sets the tree panel
runs the thread
sets the state of the button
checks if the property is set
initializes the frame
returns true if the has the maximum
returns true if the has the minimum value
returns the name of the property
returns the name of the module
updates the tree
returns the name of the
returns the name of this property
returns the name of the property
returns the property
compares the specified object with this node
clears all the available resources
checks if the property is set
returns the name of the property
returns the name of the property
returns the master centre point of the graphic
set the status of the host
returns the master centre point of the graphic
sets the of the
returns true if the screen x y is selected
sets the y coordinate of the current card
returns true if the screen x y is selected
calculate the dimensions of the font
calculates the dimensions of the bounding box
saves all the actions to the file
returns true if the screen x y is selected
calculates the dimensions of the bounding box
calculate the dimensions of the bounding box
this method initializes the application
gets the target sub system
returns the collection of log4j codes for this codes
returns the name of the application
returns a collection of all the elements in this collection
returns the description of the filter
returns the sub system
returns the name of the application
returns the maximum number of in the test
adds a new to the list of available
returns the list of included data points
returns the collection of log codes that should be used for testing
returns the description of the filter
adds a new remote client to the client
returns the included data point codes
returns the description of the filter
returns the description of the filter
tests that the listener is called by the
tests the log store operation
set the entry
tests the constructor of the class
test of m jdbc driver method of class
constructor for constructor
initialize the class
test the playing of a player
checks if the given node is a core node
test the equals method
sets up the test
the test case for removing all data structures
test the equals method
test that the bad characters is rejected
test method for
returns the selected graphic
updates the console
calculate the variance of the given
this method is called when the resource manager is notified when the
gets the value of the notified property
called when the data model changes
reset the list to zero
updates the tree
returns true if the resource change listener is considered equal
returns the
returns the core
returns the
set the connection state to a new one
called when the connection is lost
test constructor with a constructor
tests the constructor
test the severity level
tests the default constructor
tests the constructor
test constructor with a default value
tests the constructor of the
test the equals method
tests hash code
test method for
tests the status of the database
returns the index of the menu item
tests the constructor of the
test the equals method
add parameters to the
tests hash code
this method tests the method
shutdown the remote server
tests the dump of the file system
returns the
called when the remote test
ping the server
returns the
returns a string representation of this object
test whether this fragment is equal to the specified object
returns the status of the remote machine
returns a string representation of this object
test whether this core sub machine core
tests the query empty method
test of constructor of class collection
the thread to run the thread
test method for
test method for
test method for
test the equals method
test method for
test method for
adds a node to the list of nodes
run the job
test string property
test method for
updates the tree
test constructor and else
updates the remote peer
tests the constructor
test the severity level
tests that the filter is correctly handled correctly
test a prefixing of the codes for the system codes
tests the get time set method on the date range
test method for
test the warning
returns the root of the store
tests the latest date time
test that the error is correct
test of system method of class
test method for
tests the method
test method for net
tests the host and host
saves all the
tests the method
tests the log method
sets the
reset the state machine
clears the remote cache
sets the
returns the
runs the thread
reset the internal state to null
returns a string representation of this object
gets the value of the property
compares this to another
getter for property
returns the port of the rmi port
reset the cache
returns the rmi name
this method is called when the thread is started
method called when the connection is established
set the to the given
called when the user disconnects from the server
add a new to the registry
returns the
this method is called when the console is initialized
test of set method of class
the thread to wait for a thread to be garbage
adds a new remote remote remote remote remote remote remote remote remote
returns a string representation of this object
reset the instance
test if the specified system controller is equal to this controller
returns the
shutdown the agent
compares this to another
compares this to another
compares this machine to another machine
returns a string representation of this object
returns the
sets the place holder value for this place holder
returns the place holder
compares the specified object with this receiver
returns a string representation of this object
returns the
compares the specified object with this receiver
returns a string representation of this object
returns the category of the current sector
initializes the round
returns the end of the game
updates the score of the player
this method is called when the is removed
checks if the player has free to the current player
turn the player and make the speed
returns the question with the given category
change the current turn
returns a random opponent
returns the number of in the
returns the number of in the
updates the score of the player
this method initializes j text field
this method initializes comments field
this method initializes salary field
this method initializes j panel2
this method initializes j menu item
this method initializes employee check
this method initializes j menu
this method initializes firstname field
this method initializes main menu bar
this method initializes lastname field
this method initializes branching
this method initializes simple demo menu item
this method initializes j menu item
this method initializes this
returns a property for the given property name
returns the value to which this map maps the specified key
starts the server
this method is called when the thread is started
stops the server
kill the clients
this method starts the server
get the value as a boolean
returns the sponsor
returns the last branch of the request
checks if the group name is a group name
returns a group for the user
get all privileges of the privilege
returns the total group size of the group
get the total number of rows in the table
add the total visit of the current session
get the total up tree
get the total down tree
returns the total of all the
check user
gets the card level attribute of the object
returns the user for the user
get the total of the database
get all groups in the database
returns the total amount of all the level
returns the last branch of the
returns the last branch down
returns the current page number
adds a to the
fetches a proxy from the database
fetch the
gets all files in the project
prints the grid
this method is called when the user selects about to start
called when a new run entry is added to the tree
override hash code
stops the test
called when the post is being updated
returns the display name of the method
resets the statistics
shows the test results view
show the failure
creates the table viewer
returns the text of the element
launch a given editor
stores the value of the to the given output directory
returns the hash code of this object
this method is called when the element is about to be processed
visit the given
p visit a single annotation
called when the element is about to be processed
generates the default group element
creates an xml content stream for the content of the
initializes the selection
sets the root input
adds a filter to the list
creates the tree viewer
checks if the current workbench selection is a suitable container to use
uses the standard container selection dialog to choose the new value for
clone the given xml
called when the test starts
initializes the preferences
updates the preferences
initializes the formular
initializes the parameters
updates the preferences
updates the preferences
sets the mode of square to the square
sets whether or not the constraint lines should be used
called when the content changed
creates the selection
initializes the parameters
updates the preferences
sets the mode
disposes the resources held by this resource manager
refresh the nodes in the resource tree
sets the modified state of the frame
returns true if the specified resource id is used
sets the name of the frame
disposes the handle
returns the bounds of the given shape
initializes the menu bar
close the editor
adds a listener to the list of listeners
removes the listener from the collection of listeners who will
handles the changed event
transform a shape transform to a transform
handles the event of the content changed event
returns the rectangle that is used to calculate the rectangle
returns the outline of the specified node
returns the color for the given point
remove the handle from the menu
returns a shape that represents a shape
change the name of the given name
sets the current handle of the handle to the given name
returns the geometry shape for the given shape
returns the number of the given name
execute the runnable
undo the last action
redo the last undone
scale the current zoom in meters to the next zoom in scale
scale the current zoom scale to the next zoom out scale
returns the scale of the scale
resizes the viewport to fit the viewport
handles the stroke
this method is used to check the viewport to fit in the
launches a dialog
selects all selected nodes in the viewport
updates the grids state
updates the preferences
handles the event
sets the grid enabled
builds the border
updates the label and displays it
sets the mouse position to the given position
sets the zone size
sets the zoom factor
initializes the parameters of the
updates the of the
updates the preferences
sets the enabled state of the
sets whether the alignment should be automatically updated
sets the content of the file
move the frame to the next selected frame
moves the frame to the front of the current one
refresh the view
removes the editor from the desktop
updates the of the
refreshes the ruler
draws the cursor
remove the listener from the list
sets the scroll scroll panes scroll panes scroll panes scroll panes scroll
disposes all listeners
sets the listener to be notified when the
removes the listener from the set of listeners
notify all listeners that a node has been removed
notify all listeners that have registered interest for
disposes the editor
set the enabled state of the listeners
normalizes the element
remove the node from the list
returns true if the given element is a converted
translate the current translate point
returns the translation of the given key in the map
returns the text of the node
returns true if the mouse is up
this method is used to determine if the mouse event is selected
this method is used to convert a mouse event to the canvas
sets the uri of the resource
sets the parent element of the dialog
sets the point to the given point
sets the selection mode
sets the preferred size of the canvas
called when the selection changes
returns true if the mouse intersects the mouse point
sets whether the block selection should be drawn
paints the graphical representation of the graphics object
selects all the selected elements in this tree
clears the selection
returns whether the drawing is enabled
requests the content of the canvas
updates the content of the area
returns a new element with the given bounds
notifies all listeners that the selected element has changed
returns true if the element type is supported
this method is called when the mouse is dragged
sets the cursor to the given cursor
notifies the listener that the parent has been changed
this method is called when the item is selected
resets the editor to the default editor
notifies the drawing drawing mode
notifies the editor that the selection mode has been selected
enables or disables the group
sets whether the group is enabled
returns a shape that is transformed shape
sets the enabled group of the menu item
adds a listener to the list of listeners
removes a listener from the paint layer
translate the current transform by delta
handles the clips of the clip
sets the mouse point to the given point
this method is called when the selection changes
repaints the clip
returns the rotation point of the given element
returns the bounds of the given element
clears the cache
sets the shape to be used for the shape
sets the shape to be used for drawing the
checks if the given element is locked
show the dialog
locks the selected elements
removes all the selected lock
clears the item
cleans up the canvas
show the popup menu
draws the canvas to the canvas
resets the renderer to the given
initializes the graphics context for the current point
shows a color chooser dialog
returns the color of the given color
returns the string color
returns the color flavor for the given color
returns whether the specified data flavor is a color data flavor
sets the points to the point
paints the shape of the shape
sets the current directory
draws a circle
set the x coordinate to null
writes a dom document to the given path
returns the value of the specified string as a double
initializes the applet
initialize the
creates the editor for the current module
returns the color for the given point
adds a file to the list of recent files
returns the module with the given name
sets the path to the shape of the shape
returns the abstract module for the given module
returns the image from the given size
sets the current clipping shape
set the current color
sets the shape of the control points
create a cursor to the cursor
adds a listener to the recent files list
removes all clips from the server
removes the menu item from the menu item
removes recent files listener
create the menu items
create a cursor to display in the image
handles the of the given state
handles the state of the
notifies listeners that the recent files list has been added
prints the svg document to the printer
removes all the attributes from the given element
saves the current state of the editors current state
checks if the file extension is valid
handles the failure when the export operation is received
checks if the file extension is a file extension
returns the file object associated with the given handle
returns the number of nodes in the document
closes the window
closes all open resources
closes the handle to the given handle
description of the method
creates a new document
requests a request to be executed in the queue
set the file filter
checks if the file is consistent
this method will be called when the selection is selected
returns the text field for the given field
disposes all the widgets
sets the selected tab
returns the value of the property
called when a resource collection is traversed
disposes the resources
checks if the given svg document is consistent
returns the component that is used to render the given component
sets the value of a property
set the image to be used for the given resource
sets the value of an attribute
returns the name of the
returns the name of the
returns the resource image for the specified image resource
sets the value of the value
remove a child resource
applies the changes to the current state
disposes the resources associated with this image
removes a visual resource from the given resource
adds a node to the svg document
refresh the parents component
disposes the object
checks if the resource is a visual resource
remove the resource object from the resource
disposes the toolkit
create a child structure for a node
removes the cell panel from the table
append a visual resource to a node
removes a child node from a child of a node
returns the id of the selected item in the list
sets the selected item id
removes all cells from the panel
initializes the editor
returns the popup menu for the given node
sets the state of the menu item to initial state
refreshes the panel
adds a popup item to the popup
returns the for the given handle
retrieves the popup menu for the module
hides the popup menu
refresh the panel
restores the initial state of the popup menu
clears the clipboard
creates a new item
clears the source handle for the source handle
returns the resource model for the given resource
returns the string representation of the given value
manage the selection of the given selection
remove the current current gradient item from the current list
returns the normalized string value
sets the visibility of the window
revalidate the internal frame
initializes the applet
find the module menu items
adds a menu item to the menu
returns the menu for the given menu
adds a menu item to the list of known menu items
removes an unknown menu item from the menu
this method is called when the user selects the root element
shows the dialog
updates the selected items
returns true if the given elements are the correct
returns true if the given elements are the same
returns whether the given elements are the same
this method is called when the user changes the values of the
returns the point of the given point in the canvas
exits the application
sets the visibility of this window
enables disables the actions of the menu item
removes the element from the list of children of this element
returns the union rectangle of the given union
disposes the item
cuts the selected text
manage the selected element
returns the abstract module for the given module
this method is called when the user selects a group
exits the current handle
removes the given node from the list of children
returns the name of the object
sets the selection mode for the
sets the selection mode to regular shape
disposes the
returns the id of the given base
loads the main tag handler
loads the tag handler
add the document to the document
returns the tag handler for the given element
returns the handler for the given tag
this method is used to convert a file name to a file
is the node a tag attribute
is the node viewable as an attribute
returns true if the tag name is a tag name
returns the xml file for the given xml file
sets the attribute of the spot icon object
normalize the path
merge the attributes of the given element into the given
checks whether the value of the specified attribute tag name is enumerated
returns the value of the attribute name tag attribute
checks if a node is a attribute
returns the directory of the action directory
set the radius of the cylinder
returns the first child of the file
returns the next sibling of the specified file
checks if the file has children
compile the file
sets the point to the given point
disposes the tree
disposes the editor
returns the icon for the given widget
disposes the editor
returns the icon for the given widget
checks if the path is absolute
returns the tree node that contains the given node
applies the changes to the current color
disposes of the internal data structures
set the selection to the given selection
returns the tree node
compute the files to be saved to the given file
build the spinner
returns the object for the given
handles the event
sets the current value of the current value
adds an code action listener code to this editor
removes the specified listener
notify all listeners that have registered interest for
disables the caret listener
sets the listeners to be notified when the editor is changed
disposes the editor
cleans up the listener
builds the widget
sets the color value of the color property
adds a listener to the button
remove a listener
disables the action listener
sets the edition
sets the listeners to be notified when the button is pressed
disposes the action
set the name of the component
sets the initial source chooser
clean the reference to the
returns the associated with this
this method is called when the is removed
updates the element representation of the element
executes the action
adds an element to the list
handles the configuration
sets the selected button
returns the column id
returns the encoded image encoded as a string
shows the duplicated id dialog
clears the simulation
shows the id dialog
sets the value of the label
refresh the table
disposes the table
refresh the test table
builds the panel
handle full screen mode
registers the referenced views to the given node
refreshes the simulation values
returns the value of the property
creates a new
returns the element with the given name
shows the error dialog
creates the simulation values panel
this method is called when the simulation is made
returns the base uri for the given file
sets the tag value
import the element from the given document
this method is called when the cell editor has been added
this method is called when the user selects the editing cell
sets the animations to be displayed in the panel
returns the value for the cell at code column index code and
set the selected element to the selected element
clean the menu
handles the events restored by the editor
returns the previous element in the tree
gets the label for the given bundle
enables or disables the component
returns the next element in the tree
show the popup menu for the given component
sets the animation object
resizes the component to the columns width
cancels the editing of the current cell
cleans the table model
this method is called when the editor is being stopped
removes all elements from the list
sets the element to be displayed in the dialog
returns the label for the given element
returns the value for the cell at code column index code and
sets the animation object
clean up the animation
removes all listeners for the given node
create the children listeners for this component
clean up the listener
clean up the graphical object
returns the value of the attribute specified by the attribute name
returns the document and actions document
builds the widget
sets the current value of the code editable code property
handles the given widget
updates the source of the
builds the widget
builds the widget
builds the widget
clears the tree
returns the label for the given id
sets the point relative to the relative point of the dragged node
builds the widget
show the dialog
show the popup menu
initialize the formular
notifies all listeners that the button has been pressed
initialize the component
initialize the component
sets the value of the tag
shows the dialog
shows the dialog
enables or disables the component
builds the widget
clears the values
returns the normalized string representation of the given function
shows the dialog
sets the new document to be used when creating the
sets the value of the function
enables or disables the panel
called when the user selects a new item
sets the tag name
builds the panel
notifies the listener that a selection has been
returns the icon for the given node
disposes the tree
clears the values of the
sets the current item for rendering
sets the event item for editing editing an item
returns the button associated with the specified button
returns true if the source id contains the source id
builds the source chooser button
registers the listener to all the listeners
handles the mouse dragged event
unregisters all listeners
dispose the
returns true if the input source contains the source source id
returns the item with the given id
creates a new child element
registers the listener to be notified of changes
unregisters all listeners
disposes the item
returns the label for the given element
builds the source for the source
sets the cell editable or editable flag
returns true if the given string exists in the database
register the listener to listen for changes in the table model
sets the cell editable
handles the buttons
set the label to be displayed in the
shows the id dialog
builds the source for the source
adds a new child to the table
resets the button to its initial state
remove a button from the list
put up the table
handles the tree node state
put the row in the table
initialize the button
initialize the panel
initialize the panel
initialize the component
initialize the component
handles the check box check box check box state
handles the buttons state
initialize the component
initialize the component
handles the check box check box
disposes the editor
initialize the component
initialize the component
handles the buttons
initialize the component
initialize the panel
initialize the element
checks that the modifiers are enabled
initializes the value of the table
sets the new value of the field
returns the value of the specified tag
resizes the column
records the field to the given field
returns the history table for the given table
records the history record
disposes of the resources associated with this menu
this method is called when the table changes
returns the type of the menu bar
computes the stroke for this stroke
called when the mode is
called when the zoom factor has been changed
callback for the curve when the paint changes to the curve
puts a new value into the table
method to be invoked when the color changes
called when the curve is redrawn
notifies all listeners that the current curve has changed
returns the curve configuration for the specified
requests the value of the specified request tag
sets the visibility of this frame
sets the location of the given point
notify all listeners that have registered interest for
adds a listener to this manager
updates the given curve
sets the value of the tag value
adds a column to the table
notifies all listeners that the curve has changed
remove a listener
removes the column at the specified position
sets the current mode of this dialog
puts a new place in the table
the method that notifies the listeners that the user has to send
updates the given curve
notifies all listeners that the current state of the
updates the scale value of the scale value
notifies all listeners that the current state of the
returns the tree node that is being used
change the label to the given value
sets the current value of the current value
sets whether event dispatch is enabled or not
sets the current configuration
creates an icon from the default icon
checks if the request is done
initializes the view
returns true if the request is a valid request
adds a new painter to the list of painter
removes any painter for this painter
this method is called when the user presses the button
sets the color of the preferences
returns the history manager for the given id
sets the vertical zoom factor
deselect the mouse button
this method is called when the mode is changed
returns true if the label is a duplicated
validates the path and height of the path
paints the image
store the current value in the table
sets the vertical zoom factor
closes the connection
returns the label of the given base
notifies all listeners that the zoom changed
removes the child node from the current node
set the time to the viewpoint
initializes the painter
returns a curve painter for the specified
checks if the given bounds is consistent with the given bounds
insert node into the tree
puts the current element into the menu
this method validates the scrollbar
disposes the dialog
build the tool tip
this method is called when the status of the panel is changed
initializes the tool tip
this method is called when the mode is changed
build the timer
put the current element down in the list
disposes the listener
updates the icon and label if it is not already in the
remove the mouse listener from the panel
called when the mode changes
build the action
build the tool tip
disposes the tool bar
build the action
build the tool tip
this method is called when the preferences preferences have been changed
set the label of the current element
returns the point of the given point in the screen
sets the value of the field with the given name
draws a line at the given point
disposes the toolkit
clears the insets and the color
remove the listener from the list of listeners
disposes the dialog and removes it from the graphics
sets the current action
sets the current exclusive action
initializes the view
register a tag with the given name and tag
returns the value of the tag
clears the tool bar
compute the of the given point
set the value of the tag field
draws a on the given point
returns the value of the specified tag
resets the painter to the default value
this method is called when the user enters the panel
this method is called when the value of the
validates the date and time the values are valid
updates the time of the
remove the listener from the list of listeners
updates the scroll bar with the given date
sets the current tree model
set the
sets the value string
this method is called when the component is changed
sets the location of the location
returns the string representation of the value of the given value
sets the current date of the current date
initializes the table
sets the table model
disposes the button
reloads the data base
shows the duplicated id dialog
this method is called when the user presses the no animations
called when the animation is started
called when the animation is paused
called when the animation resumed
called when the animation is stopped
registers a listener for the changes to the
unregisters the listener
paints the component
sets whether the annotation is enabled or not
removes all from the canvas
this method is called whenever the component is dragged
this method is invoked to indicate the
creates a new animation
refreshes the component state
get the for the given id
checks if the given actions are currently inactive
compute the current value of the time
returns the color of a given
adds a value to the enumerated value
compute the bounds of the component
sets the picture to be used for the picture
handles the event
get the object for the given
adds a new animation to the animation
removes the specified animation from the animation
disconnect from the server
sets the new value of the tag property
adds an action to the action
callback method to be called when the data is received
removes the given action from this action
dispose the
removes a from the project
builds the root element
adds a listener to this rights object
returns the icon for the given node
returns the file name for the given
remove a listener
notify all registered listeners that the user has changed
set the to the default picture
returns the authorization level for the view
set the to the current state
shows the given code login dialog code
shows the wrong password dialog
returns the user with the given login
compute the tag types for the node
returns the profile associated with this user
method to be called when user name changes
returns the tag type of the tag
shows the dialog
registers a browser view
disposes all the resources
adds a listener to the list of listeners
clears the picture
remove a view listener from the list of listeners
creates a dom document builder
disposes the button
unregisters a view view
handles the buttons in the history list
sets the value of the field
returns the view browser with the given id
disposes all view resources
initializes the application
brings up the popup window
disposes the picture for the current jpg picture
disposes all resources and images
sets the view browser
returns the picture for the given uri
initialize the component
returns the uri of the view
adds a component to the component
set the to the given element
removes the component that is the inner component of this component
returns the current document
disposes the canvas
sets whether or not the component is displayed
returns the name of the file that is the file name
disposes the graphics and releases all resources
add an element to the
returns the size of the given code document code object
enqueue a runnable to be processed
adds a collection of to the list of
destroys all the animations
adds a painter to the list of painter
removes all the
returns the number of the given string
creates a new instance of
initialize the animation animation actions
adds a listener to the list of listeners
adds a listener to the collection of listeners who will
transform the given element to the current transform
removes a listener from the list of listeners
disposes the dialog
disposes all the resources associated with this image
disposes the toolkit
concatenates the current transform to the given
concatenates the current value and the transformation to the
sets the current picture to be displayed in the history
concatenate the rotation around the current transform
concatenate the rotation around the current coordinate matrix
applies the rotation theta value to the rotation matrix
concatenate the current value to the left
concatenate the given matrix to this matrix
concatenate the current value in the current one
concatenates the current transformation to the given affine transform
clones the matrix
returns the name of the file with the given name
adds the modifiers value modifiers
performs the key action
handles the server socket
checks if the given modifiers denote a classs
loads the view
this method is called when the view is removed
sets the value of the test interactor property
clears the test simulation
set the limit for the maximum number of data items in the
this method is called when the user is about to invalidate the
initialize the action
initializes the action
get the value of the limit of the data
initialize the action
initialize the action
initialize the action
disposes the text field
registers the given tag as a string
returns true if the specified type is equal to the given type
returns the data of the current object
gets the data from the current frame
quits the program
compute the rights for the mod
refreshes the current picture
adds the data to the data set
set the user rights to the
activate the modifier for the given value
compute the rights for the view based on the view
deactivate deactivation modifiers
this method is called to indicate that the user has to be
this method is used to set the recipe to the
disposes the toolkit
compute the rights for the program rights
check if the authorized authorization is authorized
adds a new data set to the list
gets the data from the current tag
refresh all tags
handles the user listing the user
loads the view
load view view from file
show confirmation dialog
show the tooltip
show the tooltip
sets the value of the data value
disposes this object
returns the source id of the given node
returns the real time data provider
update the values of the values in the map
recalculate the values of the values
sets the state of the fullscreen state
recalculate the values of the values
returns the data information for the datastore
this method is called when the default value is changed
returns the tag type of the tag
build the
disposes the listeners
adds a listener to the button
remove a listener
notifies all listeners that the menu item has been pressed
called when the focus is complete
this method is called when the user selects a new value
starts the simulation
pauses the simulation
sets the title message
initialize the combo box
sets the message label
this method is called when the user selects a new value
show the dialog
resumes the simulation
this method is called when the default value is deserialized
dispose of the dialog
this method is called when the user selects a new value
shows a color chooser dialog for a color chooser dialog
stops the simulation
this method is called when the user selects a new
sets the title message
this method is called when the user selects a new value
sets the message
this method is called when the content pane is displayed
disposes the dialog
shows the dialog
sets the progress message
dispose of the dialog
sets the error message to be sent to the server
sets the indeterminate attribute of the object
sets the progress indicator
increases the progress status
creates a list of points
fills the path with the current path
adds a listener to this animation
sets the relative component of the jsplit pane
starts the timer
sets the point at the given index
adds a point to the end of the polyline
stop the timer
removes the last element from the list
refresh the tree
adds the runnable to the queue
resets the point to the initial state
parse the string
applies the current transform to the current transform
removes the specified listener
adds a listener to the list of listeners
parse the string
returns true if the segment is a cubic segment
returns true if the given segment is a cubic segment
returns true if the segment is the first segment of the segment
sets the previous segment
sets the next segment
removes a listener
this method is called when the path to the path
returns true if the given segment is relative to the
returns the absolute point of the given point relative to the
notify all listeners that a view display request has been
refresh the current state of the current
moves the point at the given point in the segment
fires the quit program event to all listeners
removes the segment at the specified index
inserts the given extended row into this one
notifies listeners that the current state of the animation has been removed
closes the path
notifies all the listeners that this animation has no more
initializes the applet
inserts a new extension point
notify all listeners that the scene has begun
returns the segment of the given segment
notify all listeners that the scene has been paused
notify all listeners that the scene has resumed
applies the transformation to the current transform
notify all listeners that the current state of the animation has stopped
runs the thread
adds a runnable to the queue
clears the list of all the elements
add a new to the queue
this method is used to execute the actual
clears the cache
removes the component from the ui
adds a jcomponent to the right
adds a jcomponent to the left of the given jcomponent
creates the editor
adds a new selection interval to the list
sets the selection to the given date
removes a selection interval from the selection model
sets the error level for this logger
returns true if the date is selected
returns true if the given adapter is not in the list
returns true if the date is a date
returns true if the date time has been flagged as a date
sets the dates for this message
returns the preferred size of the component
adds a highlighter to the list
set the dates for this category
applies the given component to the current component
test if the row is a valid row
returns true if the given date is a valid month
returns the day of the week of the week
returns the row col at the given location
calculate the start position of the view
calculate the number of displayed columns
sets the first day of the week
sets the background painter
sets the save mode
sets the list of servers to display
set the login service
append a buffered image to the offscreen image
sets the password store
paint the background of the day night
sets the code tree code
paints the background of the day night time
set the banner for this image
creates a property change listener for the property change
sets the text to be displayed in the text
paints the background of the leading of the current day
paints the text of the leading border of the text area
paint the background of the day
paint the foreground foreground
cancel the login process
returns the day at the given coordinates
creates and returns the rollover producer to use
notifies all listeners that have registered interest for
sets the rollover cursor for the given mouse position
returns the shared find panel
sets whether the filter is enabled
adds a component to the root pane
removes a component from the container
sets the input enabled property
sets the image to be used when drawing the image
set the image to be used for the image
sets the image to be used for the image
returns the key for the given key
this method handles the events associated with changes in the
called when the user clicks the check box
gets the mail address
sets the mail address of the mail to use
set the date format for the given string format
set the formatter for the date format
sets the date
returns the date of the selection
sets the month view
returns the editor
returns the text of the given key
called when the edit is removed
creates the pattern model
removes a login listener from the list
returns the text for the search field listener
adds the plot to the plot
notifies all listeners that have registered interest for
binds the component to the current component
bind the label to the search label
creates the action that is used to create the
sets the image to be used for the image
sets the style of this component
sets the gradient paint
sets the gradient paint
sets the resize radius of this component
sets the gradient paint
sets the painter to the given fit
sets the resize property
sets the shape of this shape
check if the cursors hit event has been hit
sets the stroke for the graphics2 d object
sets the paint for the fill paint
sets the effects effects effects
sets the icon for the icon
sets the paint for the stroke
sets the location of the location
sets the length of the square
sets the effects state of the image
sets the paint for the dark paint area
sets the style of this style
sets the paint for the light
sets the current clipping area to an arbitrary clip shape
sets the resize location
sets the resize of this component
sets the clip rectangle to the given code resize code
sets the composite
sets the interpolation values to the given value
adds a component to the panel
removes a component from the container
sets the tool bar
sets the antialiasing for antialiasing
sets the color to use for rendering the current color
sets the to the given value
removes the key and its corresponding value from this map
sets the fractional metrics to the given fractional metrics
sets the size of the image to be used in the image
sets the value of the interpolation setting
draw an error message
create a bridge context for the current context
returns the rollover producer to use
returns the for the given index
sets the stroke control
sets the text antialiasing
sets the rendering hints for this component
returns the value of the color type
restore the clip state
returns the color of the
returns the icc color of the icc color
called when a uri is changed
paints the background of the background of the background
returns the color for the specified name
initializes the
returns the css text for the css text
dispose the resources
sets whether the control is visible or not
returns the orientation of the orientation
returns the orientation of the orientation
returns whether or not the font size should be relative to the
adds a new item to this node
creates the horizontal scroll action
sets the media media type
append a value to a new value
checks whether the element matches the given element
creates the pack inspector
tests whether the element matches the given element
returns the
returns the style map
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns true if the ith property is inherited
creates the pack action
sets the important property of this object
sets the computed value of the property
sets the value of the null property
puts the value in the receiver into the inherited property
sets the color to the one of the given color
sets the value of the parent property
sets the height of the line in the
puts a value into the font
puts a block in the block
puts a boolean into the block
returns a string representation of this object
returns true if the media is a media
this method is called when the transform stack is cleared
start a font face
divides two segments and numbers
divides two numbers
sets the x and y values for the two points
augment the linear regression transform
tests the curve
the curve
adds a rectangle to the rectangle
the two quads of the ellipsoid
affect the value by two points
sets the filter pipeline to be used for filtering
returns a copy of this object
returns true if the url is a url
sets the composite rule
sets whether or not antialiasing should be used
returns whether or not antialiasing
sets the region of the
sets the source of the chain
returns the font family for the given font
returns the base element of the given path
handles a event
returns the pixel unit of the dipole ca
creates a new graphics node graphics node
returns the interpreter
returns the namespace uri of the node
the content of the document
returns the address of the contact
returns the description of the filter
registers a bridge
invoked when a key has been pressed
returns the local name of the element
returns a new instance of this bridge
returns the button for the mouse event
returns the base element of the given path
returns true if the element is a dynamic element
returns the font face associated with this font
derives a font object by the given size
derive a font object by its and
returns true if the current component is a complex valued element
returns the message for this exception
creates a graphics node
parse the dom document
get the url of the
returns the element for the given element
returns the kerning value for the glyph
returns the kerning value for the glyph
creates a graphics node
sets the document to be used for the document
loads a document from the given uri
disposes the cache
returns the line number of the given element
set the data element of the data element
returns the data element of the given node
interrupts the server
updates the scripting listeners for the given element
disposes the content of this event
creates a graphics node
handles the changed event
returns the interpreter for the given language
returns the
returns whether painting to the transform is used
handle the of a node
returns the font family for the given font
updates the background of the given image
invoked when a mutation event of the
returns true if the status is a dynamic
returns whether the current cs is interactive
sets the dynamic state of the
returns a bounding box of the shape
sets whether the dynamic state is dynamic or not
set the interactive state of the
returns an iterator over all extensions in this extension
register tags for the bridge
returns true if the element is a dynamic element
creates a graphics node
called when the scheduler has been suspended
called when a new execution queue has been resumed
returns the local name of the local region
returns a new uninitialized instance of this objects class
returns the namespace uri of the namespace
bind the given element to the given element
returns a new instance of this bridge
unbind the given element from the tree
returns the graphics node for the given element
creates an instance of the associated element type
returns the element at the given node
checks if the given element is a graphics node bridge node
returns the bridge associated with the given element
returns the bridge associated with the given local name and namespace uri
sets the document to display
this method is called when the node is removed from the
returns a url to the protocol
returns true if this is
returns the thread that this thread is running
checks if the is complete
clears the
remove the listener from the
adds a new to the list
wait for a code runnable code to be executed
suspends the execution of the thread
resumes the execution of the execution
called when the is removed
this method is called when the is removed from the
returns a string representation of this node
b dom b implements
returns true if the parent node is displayed in the tree
returns the type of the node
handles the events from the cursor
returns a new uninitialized instance of this objects class
returns a new uninitialized instance of this objects class
creates an instance of the associated element type
creates an instance of the associated element type
returns the local name of the image
creates an instance of the associated element type
returns a new uninitialized instance of this objects class
creates an instance of the associated element type
creates the domnode for the event
creates an instance of the associated element type
creates an instance of the associated element type
creates an instance of the associated element type
creates an instance of the associated element type
this method is called when the document is modified
creates an instance of the associated element type
creates an instance of the associated element type
a element is used to generate the attribute name
creates an instance of the associated element type
creates an instance of the associated element type
returns the local name of this solid
returns a new uninitialized instance of this objects class
returns a new uninitialized instance of this objects class
this method is called when the document is modified
returns a new uninitialized instance of this objects class
returns the local name of the tag
returns a new uninitialized instance of this objects class
returns the local name of the element
returns a new uninitialized instance of this objects class
returns a new uninitialized instance of this objects class
returns a new uninitialized instance of this objects class
returns a new uninitialized instance of this objects class
returns the value of the local flow subflow subflow
returns a new uninitialized instance of this objects class
returns the default font family
returns the style sheets
returns the default view
returns the number of elements in this collection
returns the location line for the given element
sets the location line to the given location
pushes the current counter onto the stack
pop the last element from the stack
put a new value into the stack
get the value of the given string
checks if the given node is a id
returns the attribute node with the given name
removes an attribute node from the namespace
appends the node to the end of this node
returns the node type
checks if the document is a dynamic document
start the sax parser
add a listener to this list
remove the listener from the list
returns true if the document is interactive document
set the value of node name
check if the interactive element is already used
exports this node to the given document
deeply exports this node to the given document
copy the fields of the current node into the given node
copies the node into the current node
the
get a node by name
strips the first character
report the end of a cdata section
returns the document type of this node
comment for method
strips off the last occurrence of the current character
returns the font tag name
returns the preserve aspect ratio
returns the namespace uri of this node
creates a new domnode from a document
creates a new domnode from the document
copy the fields of the current node into the given node
deeply copy the fields of the current node into the given node
the id attribute
b dom b implements
returns the separator to be used for the
called when the sax parser is started
returns the current value of the code base val code
called when an attr node has been added
called when an attr node has been modified
called when an attr node has been removed
bool is animated
returns a new document
returns the current value of the code scroll expand code property
b dom b implements
called when an attr node has been added
called when an attr node is modified
returns a listener for changes to the change listener
called when an attr node has been added
called when an attr node has been modified
called when the text content of the text component has been changed
returns a new object
returns the point at the given distance
returns the path to the distance at the given distance
returns the path to the animated list
returns the normalized path seg seg seg seg seg
checks if the given node is a id
returns the document owning this node
returns the type
copy the fields of the current node into the given node
deeply copy the fields of the current node into the given node
disposes this object
set the value of a
set the lazy use lazy renderer
begin element with a new element at the given location
parses the current location and the original
called when the parser loads the
this test checks for transformation of a type
returns the x coordinate of the
returns the y coordinate of the
returns the deviation of the x
gets the is local attribute of the entity11 plugin object
creates a new interpreter interpreter
creates a new scroll bar listener
displays an error message
displays an error dialog
displays a message in the current user system
displays a message to the user
show the prompt
shows a prompt prompt if the prompt is set
shows a confirm dialog
checks if the view is already shown
returns the on resize
sets the on resize
sets the uri of the
handles the exception
returns whether the document is interactive
shows the alert
show the prompt
shows a prompt prompt if the prompt is set
returns the default font family
adds a listener to the list of listeners
removes a listener from the list of listeners
stop processing the process
updates the
converts a string to a string
sets the url to the given svg document
called when the mouse is pressed
invoked when the mouse exits a component
sets whether the is disabled
sets the tooltip to the given value
returns whether the interactions of the current interactions
set whether to use the selection text selection
sets whether to use unix text selection
displays an error message
sets the document to be used for the document
displays an error
sets the last tool tip event for the given column
sets the to the given
returns whether the given event is a last tool tip event
stop the processing of the gvt tree
stops the given runnable
initializes the event handling of the event handling
creates a new text selection manager
returns the text selection manager
sets the gvt tree builder to be used
sets whether the paint is painted
returns the precision of this number
set the precision of this node
convert a double value into a string representation
paints the component
returns the number of overrides the
returns true if the style tag is in the given style
create the bridge context
compute the transform for the current transform
release any references to the current graphics context
the gvt tree to be rendered
returns the graphics context for the given graphic context
called when a rendering has been built
removes the current top level group
restores the cached state of the top level group
returns the view transform for the current transform
returns the bounds of this rectangle
returns the bounds of the given transform
returns the bounds of the geometry
called when a rendering has completed
returns the bounds of the given geometry
returns the bounds of the cursors source bounds
returns the outline of the outline
returns the root node of the tree
returns the parent graphics node of this graphics representation
sets whether the hit state of the hit is hit
called when the rendering of the canvas is stopped
sets the transform of this code shape code
returns the bounds of the border of the rectangle
returns whether the given point is in the painted area
sets the visibility of this node
sets the root node of the tree
sets the base transform
returns the bounds of the image bounds
returns the bounds of the image
returns the bounds of the geometry
returns the bounds of the image in the bounds of the image
returns the outline of the outline
returns the area painted by the shape painter
returns the bounds of the painted glyph
returns whether the given point lies within the painted area
returns the area of the area
returns the bounds of the sensitive bounding box
checks if the given point is in the list
returns the index of the character
invoked when a mouse button has been pressed on a component
returns the bounds of the geometry
flushes the entire buffer
repaints the given area
flushes the shape
invoked when a mouse button is pressed on a component and then
invalidates the cache
sets the line height
returns true if the given string contains unicode
returns the bounds of the given transform relative to the current transform
returns true if the given point2 d is inside the bounds
returns true if the image2 d intersects with the given rectangle
derives a object from the
derives a object from the font
returns true if the glyph matches the given glyph code
returns true if the glyph matches the given glyph
checks if the glyph is a glyph glyph
checks if the glyph matches the given glyph and
sets the position of the node
returns the glyph metrics for the specified glyphs
paints the primitives
invalidates the cached geometry
returns a shape filled with the outline
returns the bounds of the given transform
returns the bounds of the geometry
returns the bounds of the given transform
returns the bounds of the sensitive bounds
returns the bounds of the given transform
returns true if the given point2 d is inside this bounds
sets the position of the specified glyph in this glyph list
returns the outline of the shape
selects the last character in the text box
returns a shallow copy of this object
invalidates the cached object
returns true if the given point2 d is inside the bounds
returns the bounds of the code shape code
returns the area painted by the shape painted
returns the bounds of the shape of the rectangle
returns true if the given point lies within the painted area
returns the shape that is currently in the morphing
returns the bounds of the sensitive rectangle
returns true if the given point is in the list
sets the stroke
returns the area painted by the shape painted
returns the bounds of the perimeter of this shape
returns whether the area is in the painted area
returns a code path code shape that represents the
returns the bounds of the sensitive area
returns true if the given point is in the list area
sets the shape of this shape
sets the preferred size of the receiver
sets the number handler
returns the start offset of the current region
returns the number list handler
parse the next line
get the font to use for the next
called when the loading of a document has been loaded
called when the loading of a document was cancelled
called when the loading of a loading failed
called when a build has completed
returns true if the character is a char
called when a build was cancelled
called when a build failed
called when a rendering is cancelled
called when a rendering failed
called when the manager is stopped
close the document
sets the encryption options for this document
sets the of the column
dispatches the event to the gvt tree
sets the canvas
dispatches the event to the gvt tree
dispatches the event to the gvt tree
returns the signature dictionary for the specified dictionary
sets the rendering hint for this graphic
sets the selection to the given text
deselects all the items in the user agent
returns the rotation of the page rotation
returns the size of the page size
gets the size of the page
returns the crop box for a given index
gets the dictionary dictionary
gets the page original ref
removes all the fields from the dictionary
removes all annotations from this dictionary
removes all objects from the queue
sets the selection text selection
deselects all selected items
determines whether the given string is support for the given
creates a new instance of
initialize the form
initializes the frame
removes the component from the component
clears the java code to show the java form
shows the form
this is called when the user saves the document
opens the dialog and opens the dialog
saves the document to the current file
saves the document to the current file
closes the program
invoked when the user attempts to close the window
this implementation of code drag drop listener code
this method initializes this
this method initializes j content pane
this method initializes j panel
this method initializes j panel1
this method initializes j button
this method initializes j button1
this method initializes j panel2
this method initializes tree
this method initializes j button
this method initializes dir b
this method initializes this
this method initializes dir b
this method initializes note b
this method initializes link b
this method initializes j button
this method initializes note b
this method initializes this
this method initializes j content pane
this method initializes j tabbed pane1
this method initializes name panel
this method initializes ok
this method initializes link label
this method initializes this
this method initializes j content pane
this method initializes ok
this method initializes j
this method initializes j scroll
this method initializes this
this method initializes j content pane
this method initializes this
this method returns the panel that contains the panel
this method initializes j panel2
this method initializes j panel2
this method initializes j button
this method initializes j tree
this method initializes j button
this method initializes wrap b
this method initializes wrap b
this method initializes this
this method returns the panel that contains the panel
this method initializes j panel2
this method initializes j button
this method initializes j text field
this method initializes wrap b
this method initializes j
this method initializes create snap dir b
this method initializes j button5
this method initializes j button4
this method initializes text field
this method initializes j button5
this method initializes text area
this method initializes this
this method initializes j panel
this method initializes j content pane
this method initializes path
this method initializes main panel
this method initializes search f
this method initializes tree pane
this method initializes buttons
this method initializes j scroll pane1
this method initializes tree scroll
this method initializes search list
this method initializes save as
this method initializes down panel
this method initializes load
this method initializes new dir
this method initializes up panel
this method initializes new link
this method initializes left panel
this method initializes panel
this method initializes meta
this method initializes buttons
this method initializes update
this method initializes j down
this method initializes j panel
this method initializes snap backlog
this method initializes j button down
this method initializes add snapshot
this method initializes b left buttons
this method initializes delete snapshot
this method initializes scroll list
this method initializes b right buttons
this method initializes tree
this method initializes full
this method initializes meta tabs
this method initializes description pane
this method initializes main
this method initializes j tabbed pane
this method initializes
this method initializes description
this method initializes j panel
this method initializes exit btn
this method initializes j panel1
this method initializes j scroll pane
this method initializes j text field
this method initializes j button search
this method initializes snap tree
this method initializes snap directory
this method initializes update b
returns the scale value of this image
returns the rotation of the quadrant
returns the rotation value as a double
returns the shear x value
returns the shear y value
returns the mirror status of this mirror
returns true if the aspect ratio of the aspect ratio are preserved
returns whether the scale is a scale to the preferred size
creates the text area
sets the message type
sets the type of the option
gets the code accessible context code associated with this
checks if the element has an attribute
called after the bean is set
set the query properties
sets the searcher factory to be used
returns the searcher factory
creates a query creator for the query
checks if the parameters are not already in the parameters
creates a lucene search lucene search template for the given search filter
initializes the template configuration
sets the analyzer to use for this type
sets the current template
this method checks if the document is equal to the given document
search for a search
sets the directories
returns the index factory for this factory
sets the index factory
get the first multi searcher
get the first value of the code searcher code
returns the first index of the current directory
this method is used to determine if the bean contains the
destroy the searcher
get the current value of the
initialises the searcher
closes the target
refreshes the current instance
returns the target index factory
sets the target index factory
sets the resolve lock
sets the index writer parameters for this writer
checks if the directory is already in the directory
returns the maximum number of fields in this field
acquires the lock
releases the lock
check if the index is locked
returns the index reader for the index reader
creates the index
returns the index writer for the current document
returns the interval of the term covered by this query
get the index reader for the index reader
returns the write lock timeout
returns the index writer for the current index
returns whether or not this file is use compound file
returns the index writer for the current state
sets the merge factor
returns the number of documents in the list
returns the class object type for this object
checks if the bean configuration is valid
initializes the directory
returns the class object type for this object
initialize the directory
returns the index writer
release the index writer
release the reader for the given index reader
initializes the analyzer
returns true if the current index has the index writer
called after the bean is set
sets the index factory for this factory
called when the user releases the button
creates a lucene index lucene index template for the given index
test that the axiom is not formed
reset all properties to their default values
check status of the status
add a new project to the project
displays the back back to the navigation panel
deletes the project
returns the script
returns the log file name
checks if the given parameter is an invalid form
checks if the given value is met
add a new cs cs cs to the
adds a new event to the list
returns the decoded string representation of the given
sets the message id
initialize the
adds a situation to the
change the file url
registers the semantic annotations for the semantic
returns the status of the given object
set the sync status of the object
sets the sync status of the
print the information about the current
returns the ont class object
find a field in the list
calculate the salary for the salary
adds a new to the execution
attempts to perform operations on the given transaction
verifies if the given item can be executed on the server
verifies if the given item can be executed
returns the descriptor of this descriptor
returns the possible for the given item
reads the selection time from the source
adds a new executable to the executable
returns the call mode
set the execution target
returns the execution target
sets the graphical update descriptor to the given graphical descriptor
returns the graphical update descriptor object for the given source or update
returns a transaction object that represents the given
returns the content search params
returns the path search parameters
called when the user selects the current selection
returns the index of the object with the specified
sets the current context of the current item
called when the operation has finished
returns true if the property is dependent on the
returns a short description of this action
returns a list of possible for a given
verifies if the given item can be executed
verifies if the given item can be executed
this method is called when the user selects to cancel the given
returns the descriptor of this descriptor
verifies if the given item can be executed on the server
returns the possible for the given item
returns a short description of this action
checks if the given item can be executed on the server
returns the possible for the given item
returns a possible for the given item
called when the work is done
returns the type of the item
returns the relative path of the path relative to the
returns the destination path of the given item
returns the date of the item
returns an input stream for the given input stream
returns true if the item is descendant of this item
returns the attribute for the given attribute
returns the path to the file
returns the current focused item
returns an input stream for this item
adds a child to this object
returns the absolute path of the file
returns the current
returns the class of the children of this class
returns the date of the
returns the parent of this node
returns the relative path of the path
returns the size of the file
returns the type of this descriptor
returns true if this descriptor has children
returns whether this descriptor has a parent
adds a selection to the selection
returns the path to the file
sets the selected array of items
returns the class object of the class object
returns the date in milliseconds
sets the focus on the item
set the colors to use for the background
returns the parent element of this item
returns the relative path to the path
returns the type of this object
returns true if this object has parent
translates the origin of the mouse event
test of the method by getting the
test with cost of
returns the window
returns the location of the workspace
sets the recent
returns the contents of a file in the file
returns true if the given card is a card
initialize the page
returns the number of elements in this list
returns the progress monitor
returns whether xml format is xml format
escape the given element as a string
opens a file dialog to choose a file
creates the button up
saves the pressed state
creates the create up and add the button
creates the selection listener
checks if the text control is valid
creates a selection listener
returns the button that is used to grow the
returns the button that contains the button
returns the table viewer
returns the selection listener
returns the shell
get the shell
creates a list of items
notifies the list of the selection change
returns the value of the preference store as a string
notifies the list of the selection changed
returns the text control
sets the selection of the current selection
the drag source has ended
the drag set method
called when the drag start
hook for subclasses to intercept clicks
returns a reference to a query
sets the value of the text field
set the text limit
sets the validation strategy for this adornment
changes the value of the property
updates the completion page completion
creates the options group
display an error dialog
displays an error dialog
returns the title of the error dialog
searches for a string in the context
the implementation of the drag
the drag set method
updates the viewer
sets the initial selection
set the selections
sets the input of the outline
sets the expanded elements of the receiver
creates the tree viewer
returns the tree viewer
returns the image associated with the given key
tests if the current workbench selection is a suitable container to use
handles the browse button
ensures that the user has changed state
updates the viewer
executes the given sql statement
executes a sql query
fires a client connected event to all registered listeners
fires a client disconnected event
stops the server
commits the transaction
the main loop of the server
notify all registered listeners that a user has been logged in
send a user logout event to all registered clients
returns the connection handler
returns the connection details
adds a adapter to the adapter
adds adapters to the list of adapters
refreshes the background color
creates the default edit policies
updates all the vertices in the bounding box
sets the icon of the join
sets the icon of the split pane
updates the split join vertex of the
sets the icon of the join icon
sets the icon of the split pane
updates the split join point
sets the color and optionally the color
sets the icon for the join icon
sets the icon for the split pane
clears the selection
adds a new view to the list
sets the color and optionally the color
clears the bottom margin
adds a new adapter to the list
put the inner border to the bottom of the top left hand
sets the border margin to the given figure
show the selected figures
clears the selection
refresh the font color
updates the split join area
sets the icon for the split pane
adds a new adapter to the list
sets the color and optionally the color
adds a new adapter to the adapter
updates the split join loop
adds a new adapter to the list
sets the icon of the join icon
show the selected figures
sets the icon of the split pane
clears the selection
show the selected figures
sets the color and optionally the color
adds a new view to the list
adds a new adapter to the adapter
show the selected figures
clears the selection
sets the color and optionally the color
adds a new adapter to the list
sets the color and optionally the color
refresh the tree
returns the message
returns a string representation of the message
activates this component
factors the request to the request type
upon deactivation detach from the model
begin user doc
p checks if the given compilation unit has been already
checks if the given is
removes all the paths from the given list of paths
runs the view
logs the info with the given message
log a warning message
writes an error message to the log
writes an error message to the log
returns whether or not this portlet is configured for validating the
sets whether or not the underlying code code is configured to
updates enablement of the enablement of the selected enablement
returns the initial location of the dialog
saves the dialog settings to the given dialog shell
returns the size of the initial dialog
the action has been activated
selection in the workbench has been changed
the action has been activated
verifies that the resource is accessible
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes this
casts the given message to the given message
casts the given message to the given message
this method initializes this
this method initializes this
casts the given message to the given message
this method initializes this
this method initializes this
this method initializes this
this method initializes this
creates the edition properties provider
returns the input condition properties edition provider
returns the output condition for the output condition
creates the predicate properties edition provider
returns the condition properties edition provider
creates the link properties edition
create an instance of
returns the code for loop properties map code property
creates the properties edition provider
creates the data properties edition provider
creates the handler properties edition properties edition provider
creates the pipeline properties properties object
changes the color of the color palette item
creates an image based on the data in the image
returns an image from a file
returns the image for the given plug in
returns the selected color
returns whether or not the default color is set to be used
sets the id of the object
set the type of the
initializes the label provider
returns the locator provider for this adapter
returns the content provider
disables the move button
disposes the receiver
sets the enabled state of the button
sets the tooltip text
extended request data key to hold editpart visual id
creates links palette tool group
creates links palette tool group
creates complex palette tool group
creates nodes palette tool group
this adds a property descriptor for the procedures feature
this adds a property descriptor for the name feature
this adds a property descriptor for the description feature
this adds a property descriptor for the type feature
this adds a property descriptor for the input links feature
this adds a property descriptor for the executable feature
this adds a property descriptor for the join feature
this adds a property descriptor for the split feature
this adds a property descriptor for the capacity feature
this adds a property descriptor for the iterable feature
this adds a property descriptor for the predicate feature
this adds a property descriptor for the destination feature
this adds a property descriptor for the procedures feature
this adds a property descriptor for the predicate feature
this adds a property descriptor for the input condition feature
this adds a property descriptor for the output condition feature
this adds a property descriptor for the capacity feature
clears the scopes
checks if the given java object is valid
logs the info with the given message
adds a result to the search results
log a warning message
writes an error message to the log
logs an error message
sets the fixture for this specification test case
sets the fixture for this meta metadata test case
returns the fixture for this specification test case
returns the fixture for this meta information test case
sets the fixture for this meta metadata container test case
returns the fixture for this meta information container test case
processes the refactoring
returns true if the annotation is a annotation
returns true if the class is abstract
returns true if the class declaration contains an anonymous class declaration
extends the superclass implementation to include the qualifiers
returns true if the field is initialized
returns true if the interface has already been implemented
returns true if the given type is typed
this method is implemented to check the interfaces implemented by this interface
returns true if this field is transient
returns true if the given constant name is already
returns the number of interfaces
returns the constant checker for the given
returns true if the parameter is parameterized
returns the number of errors
returns true if the field with the specified name exists
returns true if the given annotation is annotated with this
returns the field checker for the given field name
returns true if this method is abstract
checks if the given annotation is annotated with the given
returns true if the given import name exists
returns true if the method with the given method name contains the
returns true if the given field is annotated with this
returns true if this method is synchronized
checks if the method with a given method name is already in
returns true if the class is a javadoc
returns the imports number of imports in the imports
returns true if this method is native
returns a method checker for the method
returns true if this method is final
returns true if the given type is a return type
returns a method that creates a method
returns true if this method is static
returns true if the package name is in package name
checks if a parameter is in the given parameter
returns true if this bridge is private
is this method a protected method
checks if the given parameter is a parameter
returns the type checker for the given type name
returns true if this field is a public interface
returns true if the given parameter is annotated with the given name
returns the inner type checker of the given
check the order of the fields of the fields of the table
returns the main type checker instance
check the order of the methods
returns true if the given type name is already in the
returns true if the given exception is a valid name
returns the number of exceptions thrown
returns true if this message contains any body
returns true if the body contains the body element
returns the number of methods that are not already added
updates the given method with the given
check if the type is a valid type
writes the given message to the log
close the connection
adds a new import to the given ast
returns whether or not the given type is a trim type
merge a new body into this document preserving the existing existing existing
returns the package declaration for a given node
removes a fragment from the list
sets the
matches the package name against the package name
logs the information about the current log
log a warning message
writes an error message to the log
logs an error message
returns an image from the given path
returns the image for the given plug in
log info with info message
log a warning message
writes an error message to the log
writes an error message to the log
returns an image from the given path
returns the image for the given plug in
checks if the given type is a program annotation
this just records the information
create a new model
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the label for the specified type name
handles activation of the editor or its associated views
adds an attribute to this object
this method is called when the user activates the process
checks if the given code process code is a valid
dispatches an event to the queue
returns the runnable object that is the runnable for this runnable
executes the command
schedules the runnable to execute the runnable
sets the
this method is called when the spider is activated
checks if the given process is busy
sets the capacity of the receiver
returns the value of the specified call
sets the value of the specified call
adds a parameter to the input parameter
adds an output parameter
sets the exit
create a new process instance
returns the value of the property
sets the capacity of the monitored buffer
sets the property
returns the input condition
sets the handler
returns the output condition
sets the exception handling policy
sets the iterable
returns true if the given process is contained in this
restores the given to the given
sets the given code code to the given code
consumes the given process from the given code code
adds a call to the set of
outputs the given process to the current state
resets the weights to the initial state
method to handle the
returns the size of the given
returns true if the given process is empty
starts the timer
ends the current state
this method is called when the end of this class is finished
returns the state of this transition
returns a diagnostic describing the errors and warnings listed in the resource
formats the given format using the given format
this accesses a cached version of the property sheet
check if the user is already logged in
returns the default value
sets the default value
returns the java type of this
returns the default value of the attribute
sets the default value
compares this field with another field
returns the default value of the default value
sets the default value
returns the java type of this
returns the java type of this
sets the default value
sets the default value of the default value
returns the java type of this
sets the length of the buffer
returns the java type of this
returns the default value of the default value
sets the default value
compares this object with the specified object for order
sets the default value
returns the java type of this
sets the length of the
sets the decimals attribute of the decimal object
returns the java type of this
returns the value of nullable
sets the default value
returns the java type of this
compares this object with the specified object for order
sets the name of the
returns true if the property is nullable
sets the name of the
returns the table
sets the table of the table
set the database to use for this database
gets the value of the property
sets the host name
set the tables to be used by the database
sets the
sets the userid
returns the default value
sets the default value
returns the java type of this
compares this object with the specified object for order
sets the password
adds a table to the list
sets the name of the receiver
returns the default value
sets the default value
sets the default value
returns the java type of this
sets the default value
sets the default value of the default value
returns the java type of this
sets the table of the table
returns the java type of this
sets the
removes a table from the list
load the tables from the database
set the fields from the fields
compares this object with the specified object for order
connect to the database
returns the tables
returns the comment for the given class
returns the table with the given tablename
sets the name of the database
sets the object to be used for the given tables
returns the comment attribute of the given comment
adds a table to the table
removes a table from the list
sets the database to use
removes the table with the given tablename
load the primary key data from the database
add a field to this field
returns the field with the specified field name
remove a field from the field
adds an index to the list
returns the indexes of the indexes
removes the given index from the list
remove a field from the
returns the string representation of the field
returns the number of elements in this collection
ask the question to ask for the answer
gets the target description
divide the value by value
sets the color palette
process the http code get code method
process the http servlet request
verify the collaborations
returns the user manager
verify that the organizations are
saves the organizations to the given organizations
verify researchers for researchers
returns the xml marshaller
marshall a stock to disk
handles login to the login page
this method is used to retrieve the organization information from the
marshall the given file path
returns the collaboration name
sets the collaboration name
returns the organization name
returns the organization type
returns the researchers affiliated researchers
sets the organization name
sets the organization type
sets the researchers
returns the researchers name
returns the researchers organization
sets the researchers name
sets the researchers organization
loads the researcher data into the researcher
displays the collaboration data
displays the organization
finds the organization
finds the first collaboration
returns the size of the y coordinate
returns the size of the
get the direction of the center of mass
builds the plane
returns the direction of the given segment
sets the quad at the specified quad
returns a string representation of the object
returns true if the given ray is a intersection
returns a string representation of this object
sets the triangles of this triangle
returns the selected intersection
returns the z coordinate of the given coordinate
set the array of
set the z coordinate of the given coordinate
returns the indexed color image for the image
returns the of the given image
returns the of the given image
sets the
draws the line
returns a string representation of this line
returns the phase of the vector
returns the sum of this complex number with the specified
subtracts the given complex number from this one
multiply this complex number by a real number
hyperbolic sine of this complex number
compute the complex conjugate of this complex number
returns the value of this
returns the sine of this complex number
computes the cosine of this complex number
returns the of this complex number
returns a string representation of this object
returns a string representation of this object
returns the distance between this color and another
called by the drawable to display the scene
respond to an alert event
render the scene
render the
called when the mouse wheel is moved
render the scene to the graphics context
handles mouse wheel events
called by the drawable to display the scene
handles the mouse wheel moved event
handles the mouse wheel moved event
called by the drawable to make the scene renderer
render the scene
called by the drawable to display the scene
executes the given script
generates a mapping of the struct
returns the string representation of the given key
persist the given object
returns an object from the given class
update the object
adds the members of the given prototype
deletes an object from the database
returns a new connection with the current connection
this method returns the class that is used to create the
initializes the configuration settings
clears the connection
converts an alias to a hibernate form
update the settings
returns the holiday calendar id
loads the holiday calendars
upgrades the database to the given project
upgrades the server to the database
get subject subject id
clean up the database
delete all the permissions
sign off the given session
create a new
get the resource by its locator
get the resource id for the given resource name
get the resource pool for the given locator
get the resource pool id for the given pool
creates a pool msg object
upgrades the session to the given project
prepares the rate interpolation
saves the current state of the object
load the project from the given input stream
get all reports
get all the contents of the code code
clean up the database
prepares the form to perform the static initialization
prepares the form query to be able to show the form
returns the number of objects in the given string
returns the localized string for the given name
get the status by id
get the id of the project status
get all projects in the database
creates a report content
removes all objects in the database
counts the number of objects in the given prototype
writes a binary file to the output file
get the accessor for member for a given member
returns the display of memory in the database
returns a file not found in the session
returns the object
sets the object
generates output stream for the output stream
upgrades the session to the given project
upgrades the server to the given project
returns the holiday calendar
sets holidays calendar
get the id of the id
get the project id for the given project
get an assignment by its locator
get the assignment id of the activity assigned to a given activity
gets the project plan by the locator
get the project plan id
get project plan by id
create a new content
get all project plans
get the activity by its locator
get the activity version based on the locator
get the activity id of the activity
get the version of the activity version
queries the broker to get the
adds a successor to this node
returns the node id
sets the node id
this method is called after the link starts
removes a link from the list
sets the mapping
sets the nodes graph node
returns the node for the given id
adds a new matrix view to the graph
moves the event to the given target
returns the independent values of the current activity
expands the list of all the nodes in the tree
update the tree type
removes a link from the list
insert attachments to the given group
returns the costs of the current feature
called to update the template
returns the project node assignment of this node
sets the finish date of the project
cleans up the assignments
validates the given file
fills the attachments with the given group
calculates the cost of the actual product
calculate the cost of the product
updates the remaining personnel costs
updates the remaining number of
returns the component that can be used to render the
delete all the records of the given project
refresh all projects in the database
performs a project plan of the given plan
upgrades the project to the database
upgrades the project to the database
checks whether the given project is a project
returns the duration of the given date
expands a project tree node
returns the list of all activities that this activity belongs to
checks whether the given resource is already in the availability of the
returns a list of all sub tasks that have the given activity
checks if the given activity is in the activities
get the activity by its locator
get the activity id of the activity
get all the activities of this broker
get all attachments for this query
returns the show hours preference for the given user
returns true if the activity is independent of the given activity
handles the resources
fills the permission data set with the given data set
checks if the form is valid
returns the working versions of the given project
deletes the given project
checks whether the given activity is in the given list
get work id
get a resource by its id
get an attachment by id
upgrades the to the database
upgrades the database to the given project
upgrades the total amount of the work for the
updates the value of the finish data
reset the state of the session
sets the finish flag
tests whether or not the specified abstract pathname should be included
create a file to be backup
creates a backup filename for the current backup
checks if the user entered a valid password
adds a row to the middle of the given data set
loads all modules from the module
loads the extended modules
returns the project session
sets the initializer of this class
returns the initializer of this initializer
add the prototypes to the prototypes map
delete all objects from the database
cleans the cache
called after the start of the
this method is used to check if the database version is an
creates the empty schema
sets the content disposition header file name
initializes the view
returns a gmt date and time from gmt
calculate the hash of the data
calculate the hash algorithm for the given algorithm
called when the session is removed
checks the status of the license
adds the group to the group
checks the for the given form
disables the fields of the form
performs the authentication on the given password
this method is called when the user presses off
initializes the project home
this method is for internal use only
resets the locale to system
returns the class name for the given service
returns the availability of the specified resource
gets the assignment of the given resource
loads the settings from the service
sets the assignment to the given assignment
returns true if the graph is
returns the area covered by this menu
paint the header of the gantt chart
removes a list of entries from the list
returns the holidays of the given date
undo the last command
creates a copy of the assignment set
returns the earliest date in the given date
returns the max start of the activity
at startup create and show the main frame of the application
returns the number of in the
this method is used to set the of the
returns the number of in the
this method is used to set the of the
returns the number of in the
this method is used to set the of the
returns the number of in the
this method is used to set the of the
returns the number of in the
this method is used to set the of the
returns the number of in the
this method is used to set the of the
returns the number of in the
this method is used to set the of the
returns the number of in the
this method is used to set the of the
returns the number of in the
this method is used to set the of the
adds a category to the mapping
returns whether the is ignored
returns whether the highlighted text area is highlighted
returns whether or not this cell is marked as highlighted
sets whether or not the current code tree groups code
returns the line number of the current line
returns a string representation of this token
checks if the character is a letter
returns true if the character is a character
take the value of the next token
scans the current line in the list
scan for a single token
returns the last accepted spelling of the current
parses the next token and extracts the content of the
sets the value of a parameter
checks the parameters for the validity of the resource
execute the given document
adds a new pattern to the list
removes all the patterns from the pattern
checks the parameters for the
returns the parameters of the
initializes the servlet
returns the parameters
execute the query
adds a node to the list
find a result node in the tree
returns true if this node has a leaf
returns true if this node is a leaf
returns the error message
render the result of the group
escape the text of the given text
execute the given code file code
returns the value of the field
checks the parameters for the file
executes the file
adds a document section to the document
renders the node
sets the records sets
add a processor to this context
execute the query
renders the current renderer
executes the given pattern
gets the value of the http response property
operate on the given result node
sets the result of the document
executes the given xpath query
render the result of the current group
returns the value of the file property
initialize the
fetch the records from the given node
passing the focus request to the viewers control
convert a w3 w3 w3 c
terminate the service request dispatcher
adds a parameter list to the list
returns the number of parameters in the map
initialize the
disposes the resources
this method is called when the user is updated
reset the state of this object
update the
disposes the resources
disposes the resources
returns true if default auto commit in default mode is set
reset the status
this method is called when the user presses the parameter update
reset the job status to its initial state
this method is called when the job is updated
resets the
disposes the toolkit
this method is called when the user presses the update parameter
reset the object to its initial values
disposes the resources
updates the given parameter
disposes the resources
reset the file name
disposes the resources
update the value of the parameter
reset the file
disposes the resources
update the value of the parameter
reset the activity
disposes the resources
updates the given parameter with the given value
reset the activity
disposes the resources
resets the flow
disposes the resources
updates the value of the parameter
initialize the
reset the document
disposes the resources
disposes the resources
update the given parameter
reset the sequence
disposes the resources
update the parameter with the given value
initialize the
disposes the resources
reset the form
initialize the
disposes the resources
disposes the resources
updates the value of the parameter
reset the form
disposes the resources
reset the form
updates the value of the parameter with the given parameters
disposes the resources
updates the value of the parameter with the given parameters
resets the formular to its initial values
disposes the resources
update the value of the parameter
reset the activity
disposes the resources
update the value of the parameter
reset the treasure to its initial state
disposes the resources
reset the formular for this resource
update the value of the parameter
disposes the resources
update the value of the parameter
disposes the resources
reset the activity
disposes the resources
update the value of the parameter
reset the data to the initial state
reset the state of the object
disposes the resources
disposes the resources
updates the value of the parameter with the given value
updates the given parameter with the given value
disposes the resources
reset the form
disposes the resources
update the value of the parameter
reset the form
disposes the resources
updates the value of the parameter
reset the url
resets the resource to its initial values
disposes the resources
updates the parameter update status
disposes the resources
update the value of the parameter
reset the state of the
disposes the resources
updates the given parameter
reset the form
disposes the resources
reset the current state
updates the value of the parameter
disposes the resources
updates the value of the parameter
initialize the component
resets the file name
disposes the resources
update the parameter with the given value
updates the of the aircraft
resets the status of the application
disposes the resources
updates the parameter with the given value
updates the status of the application
returns true if auto commit is currently visible
resets the status panel
updates the parameter with the given parameter
updates the application
called when the user clicks the ok button
cancel the clicked
applies the action to the dialog
resets the application
process the action
this method resets the current state of the application
disposes the resources
updates the selected application
process the file
resets the file name
disposes the resources
update the parameter value
reset the input to the initial state
update the parameter value
returns the preferred buttons as a button
initializes the applet
updates the given parameter with the given value
returns the query string
returns the default index of the service
returns a string representation of this object
checks if the applications applications
returns true if the application has applications to be repaired
returns true if the highlighted node is highlighted
gets the value of the selected application property
sets the column name
sets the column names
sets the value at the specified location
sets the values of the table
updates the given list of parameters
this method initializes default text area
creates a panel with the given text
gets the value of the application property
sets the values of the current values
initializes the details panel
returns true if the option is choosen
adds a default parameters to the given parameters
resets the internal state to the default value
adds a parameter to this request
sets the parameters from the given settings
loads the properties from the file
loads the properties from the given file
saves the properties to the given file
returns the author of this item
creates a new note
creates a new code note code object with the specified
get the create date
sets the create date value for this create data item
returns an iterator over the note list
returns the category root
returns the parent category
sets the parent of this category
sets the category root
adds a note to the list
removes a note from this note
returns a string representation of this object
returns a string representation of this code phrase code
returns an iterator over the list of
returns the parent of this node
sets the parent of this node
add a note item to the note
set the parent of this category
removes a note item from the note
returns an iterator over the note items
returns a string representation of this object
add a new to the
returns an iterator over the category list
sets the root of the tree
removes a from this
adds a category to the parent
removes a category from the category
returns a string representation of this category
process a processing instruction
create an xml document from a xml file
this method is called when the parser encounters a character array
this method is used to query the data of the query
handles the error
updates the object
parse the content of the notebook node
handles errors in the xml document
adds a logger to the registry
description of the method
removes the specified logger from the database
writes the given object to the specified object
returns the logger
returns a logger with the given name
writes the given item to the log file
print info for informational messages
parse the root category
print an object
write an object to the log
terminate the current thread
writes the given object to the given object
writes the given item to the end of the list
returns an iterator over the attributes of this attribute
terminate the connection to the server
returns the value of the attribute specified by the given key
returns a string representation of this exception
writes the current xml node to the xml file
set the attribute
writes the given object to the specified object
returns the value of the attribute with the given name
writes the given item to the log file
checks if this element has attributes
parse the
returns the attributes of this object
constructor for notebook
returns the attributes as a string
parse the
returns true if this node has children
returns the time of the timer
returns the date of the time stamp
returns an iterator over all children of this node
returns a string representation of this object
returns the child of this node
converts a date to a date
this method is called when the model has changed
adds an attribute to this element
converts a double to a double
returns the text of the object type
sets the body text of this method
returns a string representation of this object
adds a new child to this node
setter for property parent
creates a new code note code object with the specified
this method is called when the model has changed
returns the text of the object type
returns a string representation of this object
returns a string representation of this object
creates a new xml document
opens an xml file with the given xml file
returns the string representation of the current dump
this method is called when the property changes
returns a string representation of this object
creates a new xml document
returns the text of the object type
invoked when the service is changed
creates a new xml document
parse the content of the notebook node
updates the view
updates the category
updates the of the
update the note
returns the text of the object type
removes a category from this category
this method is called when the model has changed
returns the text of the object type
adds a sub permission to this permission list
returns an iterator over all the sub permissions
removes the given sub permission from this collection
add a user to the user
returns the number of sub permissions of this group
removes a user from the list
check if the password is already set
sets the permission attribute of the permission object
returns an iterator over all users
adds a user to the group
returns an iterator over all members of this group
returns the size of the users size
returns the group permission
removes the member from this group
add a group to the group
sets the group permission
register a model with the model
returns the number of members in this group
returns the other permission
removes the specified group from this group
sets the other permission
this is a observer
returns an iterator over the groups in this group
returns the change type
returns the size of the group
sets the change type
returns the user permission
create an instance of
add a new object to the list
returns the text
this method is called when the model has changed
removes an object from the list
returns the properties
returns an iterator of objects
returns a string representation of the object
returns the size of the objects size
this method is not supported by this iterator op
sets the properties
this method is called when the model has changed
this method is called when the model has changed
returns the change detail
returns the permissions for the user
returns the properties of this object
sets the change detail
returns the root
returns the properties of this object
returns the type of the element
set permissions for the user
returns a string representation of the object
sets the element type
returns a string representation of this object
returns the parent of this note
sets the parent of this note
adds a child to this node
returns the child
returns an iterator of the child nodes of this node
returns the properties of this object
removes a child from this node
creates a new note
adds a note item to the note
returns the child for the given child
returns the number of child elements in this collection
returns the root notebook
returns the properties of this object
add a note to the phrase
sets the root of the root directory
returns an iterator over the notes in this collection
adds notebook to the list
removes the note from the note
add a note item to the note
returns the note of the specified note
constructs a view of the model
returns an iterator over the elements in this collection
adds a category to the root
returns the number of notes in this group
removes the note item from the list
constructor for a view
find a note item with the given id
returns an iterator of all categories
returns the value of the property
returns the number of notes in the note
remove notebook from the given notebook
sets the value of a property
removes a category from this category
returns a string representation of the object
finds a category with the given unique id
returns the properties of this object
finds notebook
returns the value of the property with the given property
returns the number of categories in this category
sets the value of the property
remove the given element from the list
returns a string representation of the item
create notebook with the given title
returns an iterator over the elements in this collection
returns true if the given text is an notebook
remove a from the list
create a category
find a with the given unique id
returns the number of in this list
returns true if the given text is
this method is called when the model has changed
returns true if the given text is
returns true if the given text is a note
returns true if the item is a note item
get the property value by name
sets a property to the given property
sets the name element
returns a boolean indicating whether or not the
sets as xml the name element
sets the info return value for this
sets the customer element
sets as xml the return type info element
sets as xml the customer element
returns the element of the element
set the value as a
sets as xml element
sets the value of the long property
true if this element type has the element type
sets the array type element
true if this element has element
sets as xml the array type element
unsets the element type
sets the id of this element
sets the
sets as xml element
unsets the id element
sets the value for this rp
true if this element is set
set the to the organizational unit
sets the href element
sets as href element
unsets the element element element
sets the byte value for this
sets the
sets the value for this
sets the language of this element
true if this element has the end element
sets the offset element from the given offset
unsets the element
sets the duration of the target
sets the local property value
insert the methods description here
implements the struct type
true if this element has the end element
sets the offset element from the given offset
unsets the element
sets the name of this element
true if this element has element
sets the short value for this
sets the id of this element
true if the current element has the element
sets the position of this element
sets as xml element
unsets the position element element
sets the value of the geo float element
unsets the id element
true if this element is set
sets the href element
sets as href element
this method sets the array of the elements to the target
unsets the element element element
sets the string representation of this object
sets the value for this rp
sets the id of this organizational unit
sets the date time of the holiday
set the namespace to be tested
returns the element as a root element
sets the value for this rp
sets the time of this node
true if this element is set root element
sets the root element of this element
unsets the root element element
sets the decimal value for this
set the to the given organization
sets the value of the int property
sets the boolean value for this
sets the value for this rp
sets the entity
sets the any type element to be used as xml element
true if the content type is set the content type of the
sets the expected media type
sets the content type
unsets the content type
sets the echo string param element
set the value of the echo string get echo
sets the customer attribute of the equipment object
sets as xml the customer element
set the size of this element
sets as xml element
true if the current element is set preferred
sets the preferred sub value for this element
sets as xml the preferred sub hierarchy
unsets the sub element
sets the date of this element
sets the value of the double column
returns the name
sets the value of the name property
gets the value of the customer property
sets the value of the customer property
create an instance of
returns the value
sets the value of the value property
sets the email address
sets as xml the email address
sets the email subject value for this
sets as xml the subject issuer
sets the body element element
sets as xml the body element
sets the points of the points
set the reason code for this code snmp protocol code
sets the transaction id
sets the address of the address
returns the current number of points in the game
sets the email address
returns the plan number
sets the current points
sets the plan number
returns the input stream for this file
sets the transactions
sets the plan
returns the output stream
sets the phone number
sets the output stream to write to the output stream
returns a new photo object from the given url
sets the
returns the url link
returns the
sets the
returns the
returns the
sets the resolution x coordinate
sets the
sets the y coordinate of the viewport
sets the
sets the
sets the first name
set the create date
sets the last name
sets the name of the
sets the date when the database was uploaded
returns the number of photos in the database
set the file to read the file
returns the unique file name
sets the num of photos
sets the output stream
returns the allocated size
sets the input stream to read from the input stream
returns the current size of the current file
set the link to the given url
sets the allocated size
sets the current size of the buffer
gets the value of the property
prints the stack trace to the standard output
prints the stack trace to the specified print stream
prints the stack trace to the specified writer
returns the error message
returns the embedded exception
sets the error message
returns the first link list node
returns the last node of the list
sets the last node of this node
adds a node to the list
removes the mapping for this key from this map if present
removes the specified node from the list
returns a set view of the keys contained in this map
gets the value of the property
gets the value of the property
gets the value of the property
sets the
sets the
sets the
returns the qty
sets the finish flag
gets the value of the property
gets the value of the property
sets the quantity
gets the value of the property
returns whether email is allowed to send email
sets the size of the
returns the cost of the
returns the cost as a string
get the about us
gets the value of the property
gets the value of the property
gets the value of the property
sets the
returns the name of the referral user to the referral
sets the
gets the value of the email property
sets the
returns the password
sets the
set the
sets the
sets the
sets the
sets whether the email is send email to the server
set the about us of the about the about
sets the
sets the
sets the
sets the name of the user who is the referral
sets the email address
sets the password
sets the zip file
returns the cart items
sets the cart items
gets the value of the cart item count property
returns the number of photo photos
returns the cost of the cart
returns the file that is being edited
sets the cart item count
gets the value of the property
returns the album
returns the file object
sets the number of photo items
gets the value of the rec phone number property
returns the
returns the
gets the value of the total purchase cost property
returns the
returns a list of all
returns the
returns the
returns the
sets the album
returns the
sets the order id
returns the name of the person
sets the
sets the
set the value of rec name
set the phone number
sets the
sets the total purchase cost
gets the value of the property
sets the
gets the value of the property
returns the
gets the value of the property
gets the value of the property
returns the page selected
set the file to use
returns the number of photos currently in the last page
set the form file object
sets the
sets the
sets the
sets the selected page selected
sets the
sets the number of photos currently in the last page
sets the
sets the
sets the name1
returns the number of columns in the table
returns the number of rows in the table
sets the
sets the num of columns value for this
sets the rows
sets the
sets the
sets the
sets the
updates the graph node with the distance from the graph
discovers the edges of the graph and edges
returns the additional information for the given property
returns the method
search for the date and selects the date
returns the current log policy
search user to enter search criteria
check if passwords are set
checks if the user is allowed to send the
validates the input data
this method is called when the user presses the account
this method is used to indicate that the page is complete
reset the page to the default values
sets the agent
returns the number of agents in this swarm
validates the input
returns the inventory of the current user
re initialize the bean
returns the current progress value
validates the policy
adds a policy to the list
removes the policy
validates the table input
creates a new instance of the
fill the type list with the default values
fill the series map with the selected series and sends a
navigates to the next page
go to the previous page
go to the first page
go to the last page
sets the agent
selects the agent
re initialize the bean
returns the agent identification
this method is used to get the complete url of the
re initialize the bean
checks if the policy is valid
re initialize the bean
checks if the policy is empty
initializes the database
removes the given document from the list of available instances
returns the selected chooser
called when the package is being closed
clean up the database
initializes the connection
clean up the database
retrieves the person object from the database
get a object for the given key and or
this method is used to close the underlying database
description of the method
opens a new open
returns the task id
adds a listener to this connection
removes a listener from the list of listeners
connect to a socket
returns the task that was used to perform the tasks
sends a login request to the server
send a message to the server
executes the given command
close the connection to the server
description of the method
does the flavor with color flavor
description of the method
adds an entry to the routing table
add a default routing to the route
returns true if the given host is a local host address
returns the next hop in the routing table
converts a ip address to an integer
checks if the is
adds a new hop to the list
removes a routing entry from the specified
generate checksum for the checksum
sets the interface to use for the interface
adds an interface to the interface
test method for datagram socket
this method is used to set the length of the text
turn the event to the listeners
adds a listener to the
adds a listener to the simulation
removes a listener from the list of listeners
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
fired when the user clicks on the send button
this method is used to convert a
add a new listener to the
add a new listener to the list of listeners
returns the selected index
returns the selected icon
adds an item to the list
adds a new button to the menu bar
sets the selected index
adds an item to the tree
returns the foreground
sets the foreground color
sets the background of the background
returns the selected component index
returns the number of rows in the table
sets the rows
sets the light bg light
returns the number of columns in this matrix
adds a new item to the button
sets the number of columns in the grid
returns the selected icon
sets the button bg dark button height
save the record store
load the given store from the store
adds a new item to the button
sets the selected component at the specified index
sets the selected light
sets dark
removes all components from this container
adds a node to the tree
sets the title foreground
returns the next form
sets the next form
sets the title background
returns the prefix of the level
returns the display for this
sets the display
add a new item to the list
adds a new table listener to the list of listeners
returns the displayable form of this form
adds an item to the tree
sets the parent form
add a new item to the list
removes a table listener from this code code
adds a new item to the tree
returns the color of the specified code
returns the selected icon
sets the text of the cell
returns the selected text
sets the selected index of the selected icon
returns true if the row is selected
sets the row select
returns the index of the selected column
returns true if the tile is a taskbar
sets the selected colum
returns the depth of the tree
sets whether the texture icons should be drawn
returns the row index
returns the style of the button
returns the depth of the given node
sets the selected row
sets the button style
adds a child to this node
removes a child node from this node
removes all children from the tree
sets the leaf attribute of the object
returns the data of the cell at the specified row
sets the user object of the user object
returns the child at the i i i i i index i
sets the expanded state
returns the number of columns in the table
sets the selected attribute of the object
this method is called when the outer circle is drawn
returns the image of the image
adds a tree listener to this tree
sets the image
removes a tree listener
sets the parent form
returns the parent of this node
returns true if the stretch icon is true
sets whether the stretch icon is true or not
notifies all listeners that a node has been closed
returns the
sets the
fires a node selected event to all listeners
returns the selected component
sets the selected index of the component
returns the leaf image
sets the leaf image
returns the node open image
sets the image open image
returns the node that is used to draw the node in the
sets the node that signifies that the image is closed
checks if the specified value is contained in this list
returns true if the receiver contains the specified key
inserts the specified entry into the collection
removes the mapping for this element from the specified key
returns true if the given value is contained in the list
returns true if the receiver contains the specified key
puts a key in the hashtable
removes the mapping for this key from this map if it is
returns a string representation of this object
returns true if the receiver contains the specified key
increases the capacity of and internally the
puts a key value pair into the map
removes the mapping for this key from the receiver
returns a string representation of this object
returns a dom representation of the given
returns the widget
call the method
returns the action to be used in the action
gets the value of the div container property
called after the initialization of the is initialized
returns the action
gets the value of the property
convert the event to a listener
called when the model changes
adds a listener to the list of listeners
removes a listener from the list of listeners
update the value of the field
updates the error message
returns the url of the request
sets the value of the given code throwable code
returns the root controller
returns true if the current page is valid
p appends a validation element to this form
displays the history of the command
get an object from the data type
get a string from the stream
get data type reader
this method is used to put data type to the data type
this method is used to remove a data type reader from the
returns the data type readers
returns the offset of the current offset
sets the offset
returns the file size of the file
sets the property to be used as the
get a string from the stream
this is used to parse the content of the given text
get an object from the data type
get a string from the stream
returns the bit offset of the bit set
sets the bit offset of the current bit in the bit set
sets the byte offset of the current audio
add a new bit bit unsigned bit unsigned to the bloom bit
get an object from the data type
this method initializes this
this method initializes j content pane
this method initializes mnu bar
this method initializes mnu doc
this method initializes mnu doc exit
this method initializes tool bar
this method initializes cmd open
creates a root element
creates an include element with the given data
creates a new block def
create an element def
creates a new element with the given data item
create a reference to the data element
creates an element data element
create a block with the given block
creates a table with the given data
creates a loop
creates a select element
creates an optional element of the given data optional
creates a new case
sets the properties of the node
sets the properties of the entity
returns the value of the property
sets the value of the numbered property
sets the
process the data format
returns the size of the item
sets the size of the item
returns the calculation of the calculation
sets the calculation
returns the
returns the datum datum associated with the key
removes the datum item datum
returns the item data
returns the data reference
sets the reference to the data reference
get the value of the data
get the data item def for reading data from the
returns the size of the data data format
returns the offset of the given data format
processes the data format
sets the include
getter for property iteration
setter for property iteration
returns the data node associated with the given key
removes a node from the data map
returns the data nodes map
process the data from the data source
returns the number of iterations
returns the base def
sets the base
returns the type of the reference
sets the type of the portlet
sets the
returns the after block
sets the after block
sets the processed attribute of the object
returns the offset of the current element
returns the item
sets the item
adds a node to the list
remove a node from the tree
formats the data to the given format
gets the value of the data set
reads the alpha value from the input stream
read a byte from the stream
renders a resource
this method is called when the user presses the
clean up the cache
initialize the
returns true if the given string is a decimal separator
returns the number of the number of comma delimited strings
returns the number of dot in the string
returns the number of the in the string
sets the resource bundle for this resource bundle
returns an iterator of all the descendants of this component
maps the given object to the given object
returns the values of the first node in the tree
reloads the configuration file
f0 primary
f0 d
f0 hw connection
f0 hw subcomponent
f0 primary key array
f0 primary key array
f0 space
f0 hw port
f0
f0
f0 hw connection
f0 primary key array
f0 hw bus
save the midi file to the midi file
a file chooser is
a dialog to save the score
returns a new read a file of the current midi file
invoked when the user attempts to close the window
returns the value of the object
returns true if the specified symbol has already been set
checks if the string contains the given string
returns a string representation of this object
accept the visitor
accept the visitor
returns the value of the object
strips a string from the string
returns the value of the field
description of the method
description of the method
set the symbol table for the symbol table
returns true if this node is a negated
adds a new prerequisite to this collection
loads the class loader
ejb jar from the ejb jar
returns the bean info for the given field type
saves the to the given output stream
saves the current object to a file
add a list of modules to the list
returns a short description of this action
returns true if the is
returns the base directory for this runtime
stops the server
checks if the module is a structure
initialization of servlet
this method is called after the servlet is executed
adds a amount to the date
adds a date to the list
sets the response header to the specified http response
shuts down the application
returns the stats object
returns the conn
returns the server runtime
returns the millis of the query interval
format the date time format
format the date time value
returns the resource type of the resource
returns the default work manager object for this mbean server
adds an attribute to the element
returns the name of the object
log the core statistics
returns the value of the attribute value
add an element to the database
returns the total number of records in the record
add an element to the database
returns the mbean name of the mbean type
this method is used to set the data sources for the
returns the data record associated with the given object name
add the to the queue
returns true if the domain health of this domain is a domain
returns a statistic for the given mbean
this method is used to the log of the web application
this method is called when the user logs a warning
this method is called when the is loaded
checks if the domain configuration is greater than or equal to the
returns the work manager object
creates a new cursor
checks if the given book is more data
this method is used to perform the
closes the open plug in
checks if the is a module server
logs the core data to the log file
returns true if the module description is in the description
appends the given array to the current line
this method is called when the log record is about to be
returns true if this is a daemon thread
this method is used to indicate that the critical level
log an exception and a throwable at the
log a warning message
this method is used to log the specified message
checks if the mbean contains a
get the jmx server runtime
returns the domain runtime object name
log a message to debug
returns the domain configuration object for the domain configuration
returns the value of the property
returns the boolean property value
returns the jmx edit configuration manager
returns the int property value
starts an instance of the jmx mbeans
get an object of a bean
cancel the edit
stops the edit
set an object attribute
adds a target to the target mbean
returns the file name for a given file
returns the text attribute of the mbean server
set the attribute value for the given bean
gets the value of a code attribute code with the specified name
set a number attribute to a value
set a number attribute to a value
returns the resource monitor object for the given resource type
gets the attribute value for the given attribute
sets a boolean attribute
get the child attribute name for the mbean
returns the path to the given date
invoke a bean with a given name
close the connector
returns a string representation of the connection
returns the conn
destroy the servlet
returns the value of the property
sets up the day for the day
setup the data refs and setup the database
compares its two arguments for order
compares two
adds a member to the list of members
returns the total deviation of the total number of days
constructor that takes a file name and its default values
adds a new user event to the log
returns true if the current snapshot is empty
checks if two strings are equal
gets the stored stored stored value from the given tool
this method creates a code issue code object
creates a code code object that is
returns the resource name
returns the owner of this thesis
returns the of the given
returns the number of covered objects in the list
returns the coverage property for the given property
returns the runtime to the runtime
returns the number of lines added to the
returns the number of lines deleted in the record
returns the modified value of the field
returns the property for the given property
returns the property with the given property name and default value
adds a new sensor data to the data set
checks if the data is valid for the given sensor data
get the value of a property
returns the number of lines added to the given owner
returns the number of lines deleted in the database
returns the modified unmodified
returns the number of in the database
adds a property to the properties object
returns true if the given status is open
creates a new sensor test for the given user
creates a new sensor test unit test
add a property to the properties object
add a new user to the list of logins
add a failed user to the list
checks if the data sensor is valid
logs the request to the log
logs the request to the log
constructs a new authenticator from the given realm and the default constructor
set the status error message to the given error message
set the status error message to the given status
sets the properties of the test
returns true if the is enabled
returns the max life of the cache
returns the cache capacity
returns the front side cache cache
returns the hostname of the host
returns the sensorbase hostname that this telemetry server communicates with
returns the server
puts a user into the cache
clears the cache
clears the cache
returns true if the server is disabled
sets the timeout for the system
logs the time at the given time
logs the elapsed time in the given time
called when the object is garbage collected
creates a region of the region
this method is called when the object is garbage collected
returns the current presentation of the current presentation
creates a map slice of the
creates a new color map
creates a new color map with the default values
clone a object
returns the object for the given name
sorts the list of objects in the list
clone the current
adds a new choice to the list
returns the apply to the apply button
helper method to create a new instance of the given property
returns the choice values
returns the number of choices
sets the apply to attribute of the apply apply apply geom presentation
set the value of the has discrete value
removes all choices from the list
removes the default values from the set
set the default values
sets the property to be used when the user has selected
returns true if the x axis is set to be displayed
returns whether the y axis is
adds a highlight to the region
sets the property to be used when the user has selected
returns the interaction object associated with the given key
returns the set of
returns the decorator for the given key
returns a set of decorators
returns the display order
returns the formatter for the given class
returns the blue value of the color
returns the horizontal alignment of the text
returns the font color
returns the ssrow set column
returns the green value of the green
returns the row span
returns the red value
sets the alpha value
returns the sort priority
sets the blue value of the blue
sets the font name
returns the value of the value name property
sets the font color
returns the vertical alignment of the text
set the font color for the current color
set the font color for the current font
removes the given from the list of
returns the controller
removes all from the list
returns the value of the has boolean value
gets the value of the has date time value property
returns the value of the has float value
returns the value of the has integer value
returns the has string value
sets whether this field has a value
sets the date time value
sets the value of the has float value
sets the value of the has integer value property
removes a decorator from the panel
sets the property to be used when the user has selected
sets the value of the has string value
sets the property name
sets the green value of this color
removes all decorators
sets the red value
returns the alternate row patterns
returns true if the dialog is always the default always false
returns whether the user has submit
sets whether the job should own submit
sets whether or not the dialog is refresh
sets the display order
sets the format pattern
set the property that determines whether the nature has to be
sets the horizontal alignment
removes a column from this table
sets the ssrow set column
removes all data from this data set
sets the row span grouping
sets the value of the alternate row patterns property
sets the sort priority
sets the data
returns the list of
returns the list of
sets the name of the
sets the vertical alignment
adds a child to the current presentation
adds all the properties to the given set of properties
finalize the garbage collection
adds all the properties to the given column
returns true if the given parameter is the same as this one
sets the
adds a new to the end of the series
sets the x axis labels and label
adds a label to the y axis labels
returns true if the is
returns true if the is
returns the
returns the at the given index
returns the maximum y value in the list
returns the maximum y value in the list
returns the minimum y value in the list
returns the minimum y value in the list
sets the z value of the given label
removes the z axis
clears the z labels
removes a series from the collection
sets the z axis title
removes the x axis label
returns the background color of the cell
clears the labels of labels
returns the font decorator for this font
removes the y axis labels from the y axis
clears the labels of labels
sets the flag
returns the replacement
sets the flag
sets the background color of the dial
sets the property to be used when the user has selected
sets the background color of the current color
sets the background color of the
sets the opacity of the material
sets the font used to draw the font
sets the x axis title
sets the replacement
set the y axis title
adds a to the list
sets the property that determines whether the presentation nature is
returns the color of the
returns the maximum value of the
returns the at the specified index
returns the value of the code code
set the maximum time of the
returns the
set the minimum value of the range
set the tic size
returns the number of in the list
set the value of the code double code
returns the color value of the color
set the color value
returns the maximum time in the
returns the maximum y value in the dataset
returns the minimum value of the
returns the minimum value of the
remove a from the list
sets the alpha of this component
sets the blue value of the color i
sets the color of the color
sets the color of the current color
sets the color of the current color
set the list of
sets the green value of this color
sets the property that determines whether the nature of the
sets the red value
finalize the garbage collection
sets the identifier
render the given object to the current render
sets whether or not the display is displayed
returns the list of presentation objects
removes the given presentation object from the list of
sets the position of the given to the given position
a series of series
gets the value of the property
gets the value of the property
returns the link display text
returns the url of the
sets the property that determines whether the nature of the
sets the
returns a for a series
renders the view to the given object
sets the
sets the text to display for the link
sets the target
sets the height of the image
returns a series
sets the z order
generates a new pie dataset for a given dataset
remove a cache entry
removes the from the
remove the from the
removes the from the
sorts the table column with the given comparator
sets the path to the context of the context
increment the pointer to the next element
set the properties to be used for this object
set up the authenticator
sets the authenticator
checks if the given number of bytes are reached
returns the list of messages that are currently being tracked
returns the list of help references
returns the resource label
gets the value of the property
sets the information about the list of objects
sets the resource label
sets the
returns the list of choices for the anchor
returns the value of the apply to property
gets the hi threshold
returns the action
returns the choices
gets the value of the lo threshold property
returns whether the focus has been added to the
gets the value of the property
returns the presentation object at the specified index
returns the list of presentation objects
sets the value of the anchor choices property
adds a presentation object to the list of known presentations
sets the applies to
returns the error object at the specified index
sets the blue value
returns the list of error objects
sets the green value
adds an error object to the list
sets the hi threshold
returns the missing property object
sets the action
returns the list of objects that are not null
adds a new interaction object to the list
sets the choices
sets the threshold value for this
sets whether this syllable has focus collided with the
sets the member
sets the type of the member
sets the frame name
sets the red value
gets the value of the property
sets the
sets the
returns the list of script information information
returns a list of the header
adds a new day to the list
returns a list of all header objects
renders the current object
creates a database connection
creates a database connection
initialize the map with the given map
returns the
sets the alt attribute of the object
returns whether or not this is a map
wraps the given frame
sets the href attribute of the object
set the name of the attribute
returns the use map
sets the target attribute of the object
returns the
sets the alignment of the element
sets the border
sets the height of the surface
set the attribute
sets whether this is an element
sets the src attribute
sets the use map
sets the value of the attribute
set the attribute
set the width of the
add a parameter to the request
returns a shallow copy of the params
returns the value of the parameter specified by the key
wraps the given frame inside the frame
returns the cols
remove a parameter from the request
remove all parameters from this object
sets the archive
returns the
sets the code
returns the number of rows in the matrix
sets the codebase attribute of the object
sets the columns attribute of the object
sets the height attribute of the object
set the flag to indicate whether or not this object is disabled
sets the on change
sets the width of the element
set the rows attribute
sets the text
sets the value of the field
write the tag specific tag to the output
add a row to the buffer
returns a row tag object at the given index
set the selected attribute
remove a row from the data model
remove the rows from the table
writes the tag specific tag to the table
returns the color light
returns the color dark border color
write out tag tag specific attributes
returns the frame
returns the rules
write out tag tag specific data
gets the value of the property
returns the on load property
sets the background color of the request
sets the attribute of the object
sets the height of the given attribute
sets the color of the background
set the attribute
sets the value of the field
sets the width of the image
set the color of the
set the color of the
sets the border color of the
returns the checked state
sets the padding attribute of the object
sets the spacing between cells in the
sets the colspan attribute
sets the frame attribute of the frameset object
set the checked attribute of this object
sets whether this is
sets the maximum length of the end of the range
sets the rowspan
sets the size of this
sets the rules attribute of the elba object
sets the vertical alignment of the
sets the type of the attribute
sets the language
sets the type of the attribute
adds a cell to the cell
returns the table at the specified index
returns the cells
returns the number of cells in the graph
remove a cell from the current cell
removes the cells from the list
sets the contents of the file to be displayed
writes the tag specific tag to the table
adds an option to the end of the tag
sets the color of the
sets the faces name
set the size of the file
returns the number of options
returns the on before change
returns the on after change
returns the option with the given index
remove an option from the list
remove the options from the list
compares the specified object with this principal
returns a string representation of this object
sets whether this should be multiple
returns the principal associated with the given principal name
sets the on before change attribute of the object
sets the on after change
adds a principal to this principal
sets the size of the
returns the authenticator
performs the login
set the class loader to use
sets the jdbc driver
returns the jdbc driver
sets the url
returns the url
set the username
returns the username
sets the password
returns the password
set the lease time
frees the connection
set the log file
gets the connection
clone the database connection
opens a file chooser to choose a file
adds a filetype to extension
sets the extensions list of extensions
returns a list of all extensions
sets the description of the filter
returns the description of the filter
adds a filetype dot extension to this extension
returns the help message for the given uri
returns the
adds a series to the dataset
sets the name for a series
returns the value of the element
returns the number of elements in this collection
find the first element of the given tag
removes the element at the specified position in this element
returns true if the element contains the element at the
removes all elements from this list
returns true if the element is empty
get the xml element for the given name
find the first element of the given tag
returns the element at the specified position in this list
sets the tag
sets the value of the element
add an element to the list
adds a new attribute
sets the predicate
find the attribute
writes the content of the code code to the specified
removes an individual from the
removes the possible answer from the list
show the given transformation
show the class
render the given class description
returns the property range restrictions
sets the cardinality restriction
returns the cardinality restriction
sets the min cardinality restriction
returns the minimum cardinality restriction
sets the max cardinality restriction
returns the maximum cardinality restriction
sets the subjects
returns the subject of the subject
adds an answer to the current answer
clears the answers
returns incomplete well formed string
uploads the file to the upload directory
sets the code interaction content code
returns the interaction content of this page
sets the value of the parameter with the given key
returns the value of the parameter specified by the key
returns the value of the parameter with the given key
checks if the parameter contains the parameter with the given key
returns true if the parameter is a parameter value
adds a presentation object to the presentation
gets the value of the property
sets the parameter map
returns the parameter map
returns the additional property for the given key
create a new directory with the given class name
process the given query
this method will be called after the query has been
query the query and returns a result of the query
this method will be called by the controller to process the
this method is called by the controller to parse the value
the query
returns the last time the last modification date comment
get the controller instance
makes a restriction of a given property
indicates whether or not external data caching is being cached
indicates whether the cache is being cached
get the restriction value for the given data access
get the restriction type for the given
add a new shared composite parameter set to the current set of
returns the current parent value
returns the instance data namespace
returns the class name prefix
returns whether or not the match is a match
returns the prefix of the prefix
returns the current name value
returns the current label value
returns the current value of the current comment property
this method will be called after the of the module
decodes an individual
remove a property range from the current list
remove a domain entry from the domain
adds a property to the list of properties
adds a property domain to the list
set the datatype property
returns the list of current property values
returns the current property
returns the presentation object for the given
returns the property in the new property
edits the selected class
gets the value of the editable model alt uri property
clears the interaction content cache
adds a list of components to the given list
returns a list of all concepts of the model
adds a new composite parameter to the list of composite parameters
returns the current presentation of the presentation
returns the missing properties of the given
returns the missing properties of the given reasoner
execute the groovy script
processes an action to an action
p this method is called when the action is done
processes an interaction answer
returns the interaction content of the given
returns the ontology class of the given class
returns the ont property
returns the resource with the given name
get the individual from the
returns the comment for the given resource
returns the label for the given resource
returns the label of the given individual
returns the label of the resource
returns the label of the resource
set the label of the resource
set the resource label
returns the trace level
returns the user
a statement to be used as a statement for a new resource
returns the datatype property for the given property
sets the value of the propery property
sets the value of the propery property
sets the value of the propery property
sets the value of the propery property
add a statement to the statement
returns true if the current state is valid
creates an individual in the model
creates a new individual
sets the instance creation date time of the given instance
creates a property
creates a resource
display a class hierarchy
display the hierarchy of the current state
returns the size of the model
lists all the classes in the given output stream
this method is called by the system to check the class of
returns the namespace uri for the given prefix
this method is responsible for integration
executes the query
preprocess a string query string
get the local name of the individual
returns the model maker
checks if the given model matches the given model
this method is used to remove all resources
description of the method
description of the method
returns a list of all the statements matching the given individuals
returns the base model
closes the connection
returns the datatype datatype datatype datatype datatype datatype property code
prints the current active model
write the to the given file
update the presentation parameters map
returns true if the given namespace is in the namespace
creates a member of the restriction
creates a new
removes a restriction value from the resource
returns true if the ont model has a default value in the
creates a new member for the given object
creates a ont property
creates a datatype property
creates a new mo datatype property
creates a new instance of a property
creates a property from the model and the model
gets the value of the property
creates an instance of
creates an object property with the given parameters and domain name
creates a new
returns the code of the code
prints the to the
export a tree to a string
get the id of a new id
returns the shape of the shape
returns the closing shape
create a group id
draws the node and its children of the node
adds an edge to the edge
writes a label to the label
write an edge to the port
write an edge to the port
writes the end of line
adds a point to the outgoing transition
writes a node to a node
creates a diagram header
loads a tree from the given reader
write the attributes of a node
creates the root node
writes a shape
writes a label to the label
creates a new test test node
returns the nested element of the given node
writes a group node to the current group
returns the node with the given type
write a group attribute group
returns the value of the ith filled filled filled long
writes the height of a node
write the node attributes to the current node
setup the environment
write a string
write out the line
writes the string to the output stream
writes the indent of the current indent to the
exports the graph to the end
writes the graph header to the output stream
writes the end of the graph
write the header for the class header
writes a transition to the node
returns the expression for the expression
increase the level of the current element
decrease the level value
sets the next node
set the parent node of this node
adds a child to this node
show the frame
method to test the shape
ensures that the file is already opened by the given directory
returns the code for the code
sets the code
sets the shape
returns the bottom size of the bottom frame
sets the bottom size
returns the shape of the shape
returns the root node of the tree
returns true if the conditions of this rule have a conditions
adds a condition to the current set of conditions
goes to the next node in the tree
removes the listeners from the document listeners
evaluates the action
highlights the text in the text area
initializes the text pane
returns the pattern
returns a list of all the lines
returns the number of in the
shows the status message
returns the number of messages that are stored
opens a connection to the inbox
returns the number of deleted messages
returns the user key
returns the key of the user
populates the preferences with the given user preferences
populates the preferences with the given user properties
initialize the action
gets the value of the mime tiles base property
sets the base tile base
formats a buffer and returns the appropriate response
parse an object
returns the parameters of the parameter
sets the expire params
set the message
set the message
returns the parameters for this request
sets the parameters to be used for the next token
sets the resources
returns the
returns the data object
returns the
returns the
sets the username
generates a file name for the given content type
returns true if the email address is already in the email address
sets the display name
adds an email address to this one
gets the value of the perm id property
remove an address from the internet address
sets the value of perm id
returns the display name for the given username
returns the signature of this signature
returns true if the given file name is already contained in the
sets the signature
returns the name of the user
returns the mail session
get the attach file
returns the mail store
compares two
returns the id of the permanent id
get the temp name for the given temp name
get the user id for the given user
add an attachment to this file
this method is called when the session is bound
sets the user info
returns whether or not the forward is a forward
this method is called when the session is unbound
sets the is forward attribute
reset all properties to their default values
returns the environment of the given username and password
returns the mime body parts parts of the body parts
validate the properties and returns the error
sets the message number
sets the uid of the user
sets the message number
returns the full name of the user
sets the full name of the group
returns the size of the
sets the action
validate the properties and returns the error
gets the value of message number
sets the folder full name
finalize the
reset all properties to their default values
validate the properties and returns the value
validate the properties and returns the error
validates the http message
reset all properties to their default values
sets the email
sets the name of the receiver
returns the part of the part
returns the new folder
validate the properties and returns the error
reset all properties to their default values
sets the new folder
sets the part of the part
getter for property to folder
validate the properties and returns the error
reset all properties to their default values
sets the to folder
reset all properties to their default values
validate the properties from the struts framework
sets the username
sets the password
returns the domain
get user from the database
returns the authenticator for the given user
sets the to
sets the action attribute of the object
initialize the servlet
sets the body
compares two dates
returns the username
gets the cc attribute of the email object
sets the host name
returns the email
sets the cc cc
gets the bcc
executes the action
returns the host name of the host
sets the bcc field
sets the host name
returns the host name of the host
returns the attachment form
returns the url for the
sets the host name
sets the host name
sets the attachment
returns the host name of the smtp host
returns the port name
returns true if this is a copy of the receiver
sets the smtp host property
returns the body part of the message
compares two dates
sets the copy to sent
sets the host name
returns the ssl port
sets the smtp host property
gets the compose key
sets the compose key
returns the timeout for the connection
set the timeout for the socket
returns the map of method map
move the selected folder
returns the text of the text
copy the action to the parent folder
this method is used to set the multipart content
returns true if the given part is a text part
executes the action
delete the given action permanently
delete the current delete entry
move the selected folder
returns the java mail message
get the password authentication
returns the full name of the receiver
copy the action to the parent folder
sets the java mail message
returns the number of messages in the email message
returns the name of the mail folder
returns the subject of the message
get all recipients of this message
submits a new code attachment code
get the size of the message
returns true if the file name is a duplicate of the current
compares two objects
compares two objects
finds the free face that contains the current faces
returns the half edge of the given outer edge
returns the norm of this vector
decreases the length of the lru list
returns a vector of normalized properties
multiply a scalar by scalar
returns the cross product of this vector with the
adds a vector to the vector
compute the dot product of two vectors
compares this player to another
cleans up the
this method is called when the server is now removed
cancels the current search
returns the number of elements in this collection
returns the element with the given id
performs the search
sets the flag that determines whether or not the trip is
sets whether or not the task is included
sets the include status
sets the radius of the radius
sets the span of the query
sets the span of the query
sets the query parameter
sets the date of the query
set the server to use for the server
sets whether to include the
sets the api key
sets whether to include the
returns the type of this object
returns the name of the name
adds a mail to the mail
validate the properties and returns the properties
validate the properties and returns the properties
notifies this content provider that the given viewers input
removes the listener from the specified set of listeners
adds a listener to the event collection
notifies this content provider that the given viewers input
removes the listener from the list of listeners
adds a listener to the tree model
enables or disables the button
creates the toolbar
notifies this content provider that the given viewers input
removes the given listener from the mail folder
adds a listener to the tree
returns whether the is
notifies this content provider that the given viewers input
removes the given node from the tree
adds the listener to the tree model
updates the tree viewer
returns the current folder
disconnects the connection from the server
the thread run method
this method runs the experiment one step
closes the dialog
shuts down the server
connect to the socket
connect to the server
returns an object input stream for the socket
returns an output stream for the connection
disconnects the connection from the server
sends a string to the socket
accepts socket connection
sends out the server to the server
disconnects from the server
deletes the associated file
shuts down the server
reloads the cache
remove an from the list
updates the list of all changes in the list
returns the path to the file
reset the state of the remote connection
create the server archive
synchronize the synchronization to the current state
converts the xml representation to an xml element
check the xml protocol
creates the sync progress shell
logs the last message in the queue
this method initializes this
this method initializes tp main tabs
this method initializes p
this method initializes this
returns the number of the rows in the table
returns the
shuts down the window
add a vector of line to the end of the line
adds a string to the debug list
returns the active texture
draws the menu at the given debug info
sets the active texture id
adds a texture to the image
renders the
sets the debug info enabled flag
returns true if debug info is enabled
returns the index of the frame in the current frame
returns the texture id
returns the size of the bounding box of the bounding box
go to the next animation
returns the bounding box of the bounding box
returns the frames
returns the number of frames in the
returns the index of the current position
sets the animation
sets whether or not this is mirrored or not
returns whether or not this is a mirrored copy of the image
animates this frame to its current animation frame
animate the animation to the current animation
returns the length of the vector
returns the scalar
selects the previous item in the list
division of division
selects the next item in the list
returns the cross product of this vector with the given vector
returns a vector of the vectors of the given vector
adds a vector to the vector
subtracts the vector of all the values from this vector
pops up a dialog box with the given id
normalize this vector
returns the selected menu item
returns a vector of objects
returns a vector containing the of the vector
returns the menu item
mirrors the y coordinate in the vector
returns the x coordinate of the current mirror
this method is called when the user selects the view menu
returns true if the length of the length of the vector has
show the confirm dialog
returns true if the given vector is already in the direction
returns the confirm dialog
returns true if the given direction is in opposite direction
sets the selected state of the sprite
adds a menu to the menu
returns the menu for the given id
rotates the centre around the given rotation
move the weapon
rotates the vector by the given amount
set the of the weapon
returns the sprite of this sprite
sets the timer
returns the rotation of this vector
returns the timer
returns the current level
sets the ground contact vector
sets the level of the current game
returns the alternate
returns the ground contact vector
handles keyboard action
set the health of the potion
returns the collision data for the given vertex
adds a new game object to the game
returns the data object for this collision
handles mouse click
moves the world to the specified location
sets the
sets the collision data for this collision
returns true if the is
set the weapon to be used for this weapon
the player at the current position
returns the current weapon in the weapon
set the weapon offset
returns the surface of this surface
sets the damage
sets the health points
returns the health points
returns the damage amount
returns the mass of the mass
adds a terrain section to the terrain section
sets the distance distance
returns the sight distance
adds a new game object to the game
sets the x coordinate of the center of the point
set the current rotation for the given point
this method is called when the tank is
sets the attack timer
adds a collection of game objects to the game
sets the y coordinate of the point
sets the background texture id
set the position of the vertex
returns the attack timer
returns the background texture id
set the vector to the given vector
sets the owner of the player
set the velocity vector
returns the owner of this game object
sets the force
sets the player to whom this player belongs to
returns the
returns whether the has been
add a vector of force to the list
sets the has
sets the
sets the offset
schedules a new game to be added to the game
returns the offset of the
returns the time in milliseconds
forces the physics update to be updated
sets the start position
sets the speed
returns the speed
returns the game round
sets the time in curr direction
returns the start position of the
returns the number of the level
adds a level to the level
sets the number of the levels
returns the level of the specified number of levels in the level
sets the sprite
returns the number of levels in this tree
adds an image to the image
moves the cursor to the bottom left corner
returns the data
set the value of size
moves the receiver to the front of the list
returns the level of this node
returns the current state
this method is called when the logic of the logic is being
draws the
sets the air air value
returns the air air value
returns the round
sets the
returns the
toggles the of the
sets the scale of the game
adds a child to this group
returns true if the given direction is equal to the given direction
returns true if the given direction is in opposite direction
returns the maximum velocity of the
sends a message to all clients
returns the number of client clients
deletes a client from the list
stop the server
returns the domain list of the domain object
this method is used to retrieve the data request for the given
returns the domain domains of the domains domains
find a point in the list of
returns the control of the specified type
open the plug in
reset the state of this object
set the data input format
sets the component to be used for the specified component
sets the bounds of the tool tip
draws the current open gl matrix
close all resources
called when the data sink has been received
does the format matches a given format set
close the player
parse the arguments
loads the movie from the server
runs the thread
returns true if the given source is supported
closes the connection
starts the
stops the source and the stream
returns the name of the component
determine if this event is less than the given duration
returns the code mixer config code object
executes the command
returns the track list
returns the track model
returns the value of the playing time
returns the track at the specified index
returns the value of the time interval
sets the tracks list
adds a track to the list
plays all the players
close the track
returns the number of tracks in this list
checks if the given player is a
returns a track by the given player
sets the viewing panel
updates the tracks
returns the viewing panel
start the timer
sets the player to the given time
restarts the timer
returns the scrollbar rectangle for this scroll bar
rewinds the track
returns the thumb size
calculate the bounds of the thumb
stops the track
set the media locator
returns the media locator
returns the url for the media locator
displays the players tracks
set the time in seconds
returns the time in seconds
notify all listeners that have registered interest for
returns the track at the given index
returns the value of the code code property
adds a new multi player listener to the list of listeners
assigns a media player to a given media
returns the name of the
returns the preferred size of this component
sets whether the tick ticks paint on the paint
sets the track slider
invoked when an action occurs
returns the track slider
removes a listener for the specified multi player
track the track of the track
invoked when the target of the listener has changed its state
tracks the tracks
track of the given player
clears the track
updates the track model
set the media locator for a media media device
uninstall the player
install a player
sets the label increment
set the playing time of the specified midi time
creates the border for the specified
sets the frames of the swf movie
creates a layout manager for the given layout
sets the start time of the specified interval
resets the media clock
calculates the preferred size of the image
sets the player to the specified player
set the time of the media clock
returns the number of available track objects
sets the seconds of the media
get the current seconds value
returns the number of tracks in the list
set the rate of the morphing process
sets the message
returns the number of tracks in the track
calculates the average frames of the frame
appends the message to the message
returns the number of assigned tracks
creates the controls for the given player
sets the background color of the button
ends the current media
creates a new abstract forward control
notifies the table model that the table cell has changed
create the start control
returns the preferred size of this component
sets the shadow x coordinate
sets the size of the image
creates a new
creates a new
returns the x coordinate of the shadow
creates the progress control
sets the layout control panel layout
creates the controls for the given player
remove the control components
returns the control with the specified name
sets the shadow y coordinate
create a new
sets the controls of the given player
adds a control to the table
returns the vertical coordinate of the shadow
returns the control with the specified name
sets the shadow color
returns true if the cell at the specified row and column
the controller implementation of the controller
returns the controls
returns the preferred size of this component
this method returns the first started component
adds a screen to the screen
sets the shadow enabled
displays the current item in the canvas
removes the screen from the screen
displays the current item in pause mode
returns the preferred size of this component
returns the button control
creates a new
returns the shadow enabled flag
sets the mute state
creates a new
updates the view
returns the fast forward button
create the progress control
returns the progress component
returns the gain to be used to display the gain
returns the
this method returns the stop button
returns true if the focus is painted
returns the preferred size of this component
paints the thumb
computes the size of the thumb
create the gain button
create the button for the decrease of the
sets the font of this component
returns the button associated with the button
sets the background color
returns the current audio button panel
sets the level of the
sets the foreground color
converts a volume to a meter
updates the view
returns the preferred size of the midi device
return the gain button
called when the image is resized
sets the start button
invalidates the cached image
returns the gain control
returns the gain control
returns the progress control
set the time
sets the button to stop
this method returns the first component of the
notify all track model listeners that a track model has been updated
this method returns the stop button
sets the button to stop
sets the state of the
adds a listener to the controller
stops the player
removes the listener from the list of listeners
returns the button that is currently selected
initializes the applet
sets the button to forward to the button
this method is called when the realize has been
destroy the player
deallocate the resources to the
stop the timer
wait for the blocking state to be done
starts the player
returns the button associated with the button
sets the button for the given mouse listener
starts the timer
starts the sync process
stop the timer
returns the mix track data for the ith mix
adds a new to the track
invoked when an action occurs
returns the preferred size of this component
notify the listeners that the given thread has been run
set the button to be applied to the button
returns the panel of the main window
removes the loading label from the list of loading
adds a timer listener to the timer
returns the conversion conversion exponential time
adds a component to the background
sets the button to be used when the button is pressed
returns the player panel
adds a visual component to this component
adds a component to the progress bar
causes the current view to be repainted
adds the control component to the container
sets the button to pause
sets the button to pause
sets the progress bar to the given value
sets the progress bar for the progress bar
reads the next byte of data from the input stream
the thread to wait until the thread is finished
this method is called when the user chooses to inform the listeners
reads the next byte of data from the input stream
reads the bytes from the input stream
dispatch an event to the event listener
returns the pull source stream
set the button for the gain button
runs the monitor
returns the push source stream
sets the button for the gain button
set the button panel
starts the controller
runs the thread
returns the media start time
returns the time base start time
returns the event controller event handler
returns the spatials controllers
set the gain control
get the gain control
returns the component that contains this component
show the tape realize
starts the
returns the component that is being used
deallocate the player and it to the current one
this method is called when the player stops the game
sets the component to be used for painting the visual component
close the tape
set the rate of the ten
called when the button is pressed
starts the recording of the player
returns the start latency of the current time
sets whether the download is currently loading
override this method to provide custom button for
returns the duration of the player
adds a new progress message to the current
post an event to the event queue
stops the player
sets the current content
returns the component that is being used
close the player
returns whether the downloading is downloading
set the rate of the
returns the component that will be used to display the dialog
sets the code power code of the code player code
creates the control for the component
returns the component that will be used to display the
set the controllers to be used for the
returns the listener for the action listener
returns the component that will be used to render the component
returns the view as a listener
returns the listener for the action listener
creates a component that will be used to paint the jslider
returns the component that will be used to render the component
returns the current progress
sets the level of the laser
adds a listener to the control
returns the component that will be used to render the component
returns the control component that is associated with this component
mute or hide the sound
remove the listener from the control
set the media time to the specified media time
sets the listener for the slider
returns the progress bar component
sets the controller to be used for the controller
returns the listener for the current gain control
adds a listener to the component
sets the control listener
sets up the panel for the
remove the listener from the list of listeners
set the slider to be displayed in the slider
hook for subclasses to intercept events
creates and returns a component that will be used to create the
set the listener to be used when the component is
change the gain to the given gain
returns the component that is being displayed
this method returns the button for the current volume control button
convert a long to a string
initializes the listener
this method returns the button
sets the control listener
returns the component that will be used to paint the component
set the component to be used when creating a button
sets the control listener to be notified when the control
returns the component that will be used to display the slider
sets the controller for the controller
invoked when an action occurs
sets the operational state
sets the control component
set the component to be used for the given component
sets the controller for the controller
returns a component that will be used to display the
sets the controller for the
update the controller
updates the timer timer timer
returns the duration of the player
add a listener to the control
called when the controller is updated
remove the listener from the control
returns a component that will be used to create the component
returns the time in nanoseconds
returns the listener for the event
remove the listener from the list of listeners
returns the conversion divisor
adds a listener to the control
sets the operational state of the operational
set the value of the progress bar
called when the gain changes
set the control listener
returns whether the operational string is operational
this method is called when the user presses the
called when the timer timer becomes the timer
sets the button for the action
returns the component that is being edited
set the component to be used for the component
returns the current media time
stop the timer
initializes the applet
initialize the applet
initializes the applet
stops the timer
returns the source
initializes the applet
add a control to this control
initializes the applet
this method is called when the cca server
remove a control
returns the control of the given name
sets the controller error
set up the border for the
adds a controller listener to this object
resets the controller error
prints the error message
the update of the event handler
set up the border for the
returns the track at the given index
removes a controller listener
write the event to the event stream
returns the controller error
check if the state is reached
sets the target state
checks if the controllers state has been stopped
this method is called when the user selects the managed managed managed
updates the menu
posts a event to the event queue
posts the current state of the transition
starts the
called when realize has been complete
called after prefetch complete prefetch event
this method simulates the current state of the current activity
post stop event
post stop at time stop
post start event
post the data event to the event queue
post end of media event
post event
posts the request event to the request event
called when the controller is closed
returns the thread queue
realize the inbound heartbeat
the state
returns the start time of the current activity
blocks until the next time is started
initialise the file
returns a string representation of this object
create a new instance of a factory
