fast
returns a {
returns a {
concatenates two {
returns a {
returns a {
returns a {
concatenates a {
returns a {
returns a {
concatenates a {
returns a {
returns a {
concatenates two {
returns a {
returns a {
converts an array of {
converts an observable that emits a {
converts a publisher into an observable that emits the items emitted by the publisher . <p > <img width = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx > <dl > <dt > <b > backpressure : < / b
returns a {
returns a {
returns an { @link observable } into an observable . <p > the specified period . <p > <img width = 640 height = interval src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / interval . com / wiki / dt >
returns an observable that emits a period emitted by the given period . <p > function call {
returns an observable that emits a period emitted by a specified period . <p > <img width = 640 height = interval src = https : // raw . github . com / wiki / reactivex / rxjava / rx . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns an observable that emits a period emitted by the given period . <p > <img width = 640 height = count src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / interval . png alt = > <dl > <dt > <b
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
converts an observable that emits the { @link observable } into a specified { @link observable . <p > <img width = 640 height = never src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / toasync . png alt = > <dl > <dt > <b
returns an observable that emits a specified number of {
returns an {
returns a single {
returns a single {
returns a single {
returns a {
returns a {
returns an {
convert a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a single {
returns a {
returns a single {
returns a {
calls {
returns a {
returns a {
returns a {
returns a single {
converts a single {
converts a {
calls {
subscribes to the given {
subscribes to {
subscribes to the source observable } and subscribes to the given { @link blocking . blocking } . <p > <img width = 640 height = blocking src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / blocking >
returns a {
returns a {
returns a {
convert a {
transforms a list of {
returns a {
convert a list of {
returns a list of the source buffer into a specified {
returns a {
returns a list of {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a cache that emits the items emitted capacity into a cache . <p > <img width = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / cache . png . png alt = > <dl > <dt
returns a single {
returns a single {
returns a {
returns a {
returns a function that emits a {
returns a {
returns an observable to an { @link observable emitted by the {
returns an observable items into a {
returns a {
returns a { @link completable } to a completable emitted by applying the given function to the current completable . <p > <img width = 640 height = completable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / completable . png alt = > <dt >
returns a new {
returns a function that maps to a completable that emits the given mapper . <p > <img width = 640 height = value src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / completable . png alt = > <dl > <dt >
maps this completable that emits the { @link completable } into a { @link completable . <p > <img width = 640 height = till src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / completable . png alt
returns a function into an iterable into a {
maps the items that emits the items emitted by the source iterable } into a specified by the items emitted items emitted by the source observable . <p > <img width = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx
maps the {
maps the items that emits items into a {
returns a {
maps this observable into a {
maps this observable into a {
maps a {
returns a single function into a single observable } into an observable . <p > <img width = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a {
returns a {
returns a single observable that emits the items emitted by the source observable . <p > <img width = 640 height = concat src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / single . png alt = > < / pre >
returns a maybe that emits the {
returns an observable that emits the items emitted by {
returns a single single element into a specified element . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <dt > <b > <dt > { @link single / b >
returns an observable that emits the items emitted by the source publisher and emits the {
converts a {
returns a {
returns a {
returns a {
returns a delay that emits the specified delay into the specified delay . <p > <img width = 640 height = delay src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a {
returns a {
returns a {
returns a {
returns a {
returns an observable that emits the {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
calls {
instructs a publisher into an observable emitted by the given action . <p > <b > note : < / b > <dl > <dt > <b > scheduler : // raw . github . < / dt > < / b > < / dt > < / dt > < / b > < / dt > < / dt > <dd
converts a publisher into an observable . <p > <img width = 640 height = consumer src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / toasync . png alt = > <dl > <dt > <b > <dt / wiki / b > < / dt
returns an observable that emits the given publisher into the given observable . <p > <img width = 640 height = do src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync > <dd > <dt > < / dt > <dd > <dl > <dt > <b > scheduler : <
calls {
subscribes to { @link consumer to an observable . <p > } and emits the { @link consumer . <p > <img width = 640 height = action src = https : // raw . github . com / wiki / reactivex / rxjava / rx . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
subscribes to an observable emitted by {
converts an observable that emits a consumer subscribes to the source publisher . <p > <img width = 640 height = do src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
subscribes to the specified action that emits the specified {
returns an observable that emits a consumer emitted by the given consumer . <p > <img width = 640 height = do src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png . png alt = > <dl > <dt > <b >
subscribes to the given a consumer emits a specified action and emits the result . <p > <img width = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / consumer . png alt = > <dl > <dt
calls {
returns a {
returns a single item to a single single item . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / single . png > <dl > <dt > <b >
returns a single single element } into a { @link single } . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / rx - > <img width = 640 height = single src = https : < / b > < / dt
returns a {
returns a single {
returns a {
returns a {
returns an observable to an observable that emits the {
maps a {
maps this completable into a { @link completablefuture } . <p > <img width = 640 height = completable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / completable . png alt = > <dl > <dt > <b > scheduler :
returns an observable that emits the elements emitted by the specified by applying the given observable . <p > <img width = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / toasync . png alt = > <dl > <dt > <b
maps a {
maps a {
returns a {
returns a {
subscribes the specified {
returns a {
returns a {
returns a {
returns a {
returns a completable that emits the specified {
returns a single {
returns a {
returns a {
returns a single {
returns a single {
maps the {
returns a {
returns a {
returns an observable that emits the items emitted by {
returns a {
returns an observable that emits the items emitted by the given completable } . <p > <img width = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / completable . png alt = > <dl > <dt > <b > scheduler :
returns a {
maps a {
instructs the {
returns a {
returns an {
returns a {
converts a {
returns an observable that emits the items emitted by the source publisher into an observable . <p > <dt > <img width = 640 height = publish src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / publish .
returns a {
returns a single {
returns a single {
returns a {
returns a {
returns a {
returns a {
returns an observable that emits the {
returns a {
returns an observable that emits a function emitted by the source publisher and emits the {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns an observable that emits the items emitted by the source observable and emits them emitted observable . <p > <img width = 640 height = scan src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / rx - operators / rx - operators / rx - operators / scan . png alt
returns a {
converts a {
returns a single {
returns a single item into {
returns a single { @link single item into a single single item } . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / single . png alt = > <dl > <dt >
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
instructs a {
returns a {
calls {
subscribes to the given consumer and calls to the source publisher . <p > <img width = 640 height = action src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / consumer . png alt
subscribes to a {
subscribes the specified {
returns a {
returns a {
maps this completable that emits the result of the completable function to the given function call to the given mapper . <p > <img width = 640 height = completable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators
maps the upstream that emits the { @link completable emitted by the given completable function } . <p > <img width = 640 height = map src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / completable . png alt = > <dl > <dt > <b
maps a {
maps the {
maps a {
maps the {
maps a {
returns a {
converts a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns an observable that emits a { @link interval emitted by } emitted by the given interval . <p > <img width = 640 height = last src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / throttle .
returns a { @link observable } into an observable emitted } emitted by the given { @link interval } . <p > emitted by the given interval } . <p > <img width = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
converts a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a { @link observable } into a { @link observable } emitted by the given timeout . <p > <img width = 640 height = timeout0 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / timeout .
returns a {
returns a {
returns a {
returns an observable that emits the timestamp emitted by the source publisher . <p > <img width = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns an observable that emits a timestamp emitted by the given timestamp into a specified scheduler . <p > <img scheduler . <p > . <p > <img width = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a list of {
returns a single {
returns a {
returns a flowable that emits a flowable emitted by a flowable that emits a { @link flowable } . <p > . <p > <b > note : < / b > < / dt > < / p = dt > <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki /
returns a single {
returns an observable to emits a specified by the {
returns a {
returns a {
convert a {
returns an observable that emits {
convert a {
returns an observable to an observable that emits a {
returns a {
convert a {
returns an observable that emits an observable emitted by the source observable . <p > <img width = 640 height = size src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns an observable that emits the items emitted by the source observable . <p > <img width = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images src = https : // raw . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a {
returns a zipper to a specified observable into an observable emitted by a zipper . <p > <img width = 640 height = zip src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / zipper . png alt = > <dl > <dt > <b > scheduler
maps this observable that emits the other } into a {
{
returns a {
returns a {
returns a {
returns a {
creates a {
validate the given subscribers .
creates a parallel {
creates a parallel flowable from a } .
creates a parallel {
converts this {
maps this stream consisting of the results of applying the given function to the result .
maps the result of {
returns a {
returns a {
returns a parallel {
returns a parallel {
returns a {
returns a parallel {
returns a publisher that emits a flowable emitted by a specified {
returns a flowable to a parallel the {
returns a flowable that emits the {
maps the {
returns a {
returns a {
returns a {
calls {
call {
performs {
performs a {
performs a {
performs {
calls {
calls {
performs a parallel action on the given action .
returns a {
creates a parallel {
converts this {
returns a parallel {
returns a {
returns a {
returns a {
returns a {
returns a parallel {
returns a {
returns an observable to an observable . <p > <b >
returns an observable that emits an observable emitted by the given observable } . < / {
creates a {
creates a {
creates a {
creates a {
creates an observable that emits the given {
sets the resource at the given index .
replace a resource by index
creates a {
creates a {
creates a {
returns true if a {
convert a flowable to a flowable .
creates a new {
creates a disposable from an action .
converts a {
creates a new disposable } from } .
creates a disposable from a subscription .
blocks until the {
returns a {
returns a {
creates a new {
returns a single {
returns a {
on
returns a {
creates a {
creates a { @link runnable } completes .
returns a {
resets the computation .
sets the {
sets the {
initialize the {
initializes the {
sets the {
sets the {
sets the {
set
sets the {
sets the {
sets the given { @link completable } to the given { @link completable } .
sets the {
sets the {
sets the {
sets the {
sets the {
sets the {
sets the {
calls {
sets the {
sets the {
subscribes to the given {
subscribes to an {
subscribes to {
subscribes to the given { @link completablefuture } to the given completable .
subscribes to {
calls {
returns a {
creates a {
returns an {
returns an {
returns a single {
invokes {
set
returns a {
on
creates a {
applies the given function to the given function .
apply the given function to the given function .
calls {
applies a {
converts a maybe that emits the maybe that emits a maybe of {
returns a {
concatenates a flowable into a flowable . <p > <dt > {
concatenates a {
concatenates two {
concatenates two {
calls {
returns a {
returns a {
converts a {
returns a {
converts a {
converts {
converts {
converts a {
converts a {
converts {
converts an {
returns a flowable that emits {
returns a flowable that emits the { @link maybe } emitted by the given the source } . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / maybe . png alt = > <dl > <dt >
transforms a {
converts a {
returns a single {
returns a single {
returns a maybe that emits a { @link long } to the specified delay . <p > <img width = 640 height = timer src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / timer . png alt = > <dl > <dt >
returns a {
calls {
transforms a {
returns a {
returns a {
maps the specified maybe into a maybe into a maybe . <p > <img width = 640 height = zip src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
maps the specified {
maps the other maybe into a maybe array into a maybe . <p > <img width = 640 height = amb src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / maybe . png alt = > <dl > <dt > <b >
returns a {
returns a {
returns a {
returns a {
maps the {
concatenates this flowable into a flowable . <p > <dt > <b > backpressure : < / b > < / dt > <dd > {
returns a single item to a single item . <dl > <dt > {
returns a single {
returns a maybe that emits the given a specified delay and emits the result . <p > <img width = 640 height = delay src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : < / dt
returns a custom {
maps this maybe to a maybe that emits a specified subscription . <p > <img width = 640 height = publisher src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / maybe . png alt
returns a {
calls {
subscribes to the given {
calls {
maps this maybe value into a {
maps a maybe emitted by a flowable that emits the items emitted by the source publisher . <p > . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / maybe . png alt
returns a {
returns a completable that emits the given {
returns a single {
calls {
maps the {
converts a maybe that emits the same as an instance of {
converts this maybe into a {
converts a {
converts this maybe into a single single {
calls {
subscribes the given maybe into an {
instructs the given {
returns a {
calls {
returns a flowable that emits the items emitted by the source publisher . <p > parameter . <p > <img width = 640 height = full src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / flowable . png alt = > <dl > <dt > <b
returns a flowable that emits a flowable emitted by the source publisher into a publisher . <p > <img width = 640 height = full src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / b > < / dt >
returns a {
returns a {
returns a {
returns a maybe into a maybe } emitted by the given { @link publisher . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / a > . <p >
subscribes to the given {
subscribes to the specified {
calls {
returns a single {
returns a maybe that emits the items emitted by {
returns a {
returns a {
returns a {
maps a publisher that emits the given {
subscribes to the specified maybe emits the specified {
creates a {
creates a single observer .
require
returns a {
on
on
on
on
returns an identity function .
returns a {
returns a {
cast a function to a class .
/ *
returns the root cause of the given throwable .
creates a {
creates a {
creates a {
creates a {
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
returns the transitive boundary of the request .
blocks until an error .
waits for an error .
waits for the specified timeout .
creates a { @link replay .
creates a replay processor that creates a replay .
creates a replay processor .
creates a replay processor that creates } .
/ * ( non - javadoc )
/ *
returns the transitive boundary of the queue .
creates a default {
returns the {
returns an array of all values .
returns an array of values in the array .
{
drains the given {
creates a { @link queue .
request
completes the request to the given queue .
/ * package
completes the given {
creates a new { @link subject .
creates a new { @link replay the specified size } .
creates a replay subject .
completes the {
{
returns an array of values in the array .
returns the value of the {
returns the error message of this notification .
creates a notification that is on the given value .
creates a {
validates the given {
sets the {
validates the given {
sets the next subscription for the given subscription .
adds a consumer to the cache .
removes the specified consumer from the cache .
replay
add
multiply
add
adds the given number to the given duration .
return
subscribes the given {
subscribes to the given { @link observable } to the given { @link observable } .
subscribes to an action and subscribes to the specified consumer .
concatenates two {
concatenates the specified sources into a completable . <p > <dt > {
concatenates the items into a publisher emitted publisher emitted by the source publisher . <p > <img width = 640 height = concat src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / completable . png alt = > <dl > <dt > <b > scheduler :
returns a completable to a publisher into a specified by the source publisher . <p > <img width = 640 height = value src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx . png alt = > <p > <dl > <dt > <b >
returns a completable that emits the given {
converts a completable to a completable . <p > the given completable . <p > <img width = 640 height / b > < / reactivex >
converts an {
converts {
returns a future } to a completable that emits the specified {
converts a completable that emits a completable . <p > <img width = 640 height = completable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / completable / dt > < / p >
converts a runnable to a completable . <p > <b > scheduler : < / b > < / dt > <dd > the specified the given runnable . github . com / b : < / p >
converts a single completable to a single completable . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / completable . png alt = > <dl > <dt > <b
returns a {
returns a completable that emits {
returns a completable that emits the given sources emitted by the given sources . <p > <img width = completable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / toasync . png alt / rx - operators / rx - operators / b > < / dt > < /
returns a publisher that emits a publisher emitted by the source publisher . <p > <img width = 640 height = merge0 src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png / rxjava / images / rx - operators / completable . png alt = > <dl > <dt
returns a completable that emits the given publisher emitted by a publisher emitted by the given publisher . <p > <img width = 640 height = merge0 src = https : // raw . github . com / wiki / reactivex / rxjava / images / completable . png alt = > <dl > <dt > <dt > <b > <dl > <dt >
returns a completable that emits the given publisher emitted by a specified publisher . <p > <img width = 640 height = merge0 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / completable . png alt = >
converts a {
returns a completable that emits the specified delay } that emits a specified by the given a delay } . <p > <img width = 640 height = timer src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / completable . png alt = > <dl >
converts a throwable to a npe .
perform a completable on a {
returns a completable that emits {
returns a completable that emits the items emitted completable to the other completable . <p > <img width = 640 height = completable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / completable . png alt = > <dl > <dt >
returns a completable that emits a completable emitted by the source publisher . <p > <img width = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync / rxjava / images / rx - operators / rx - operators / b > < / dt > <
returns a flowable that emits the items emitted by the source publisher . publisher } . <p > <img publisher . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . png alt = > <dl > <dt > <b
returns a single {
returns a completable that emits the given maybe } to the given completable . <p > <img width = 640 height = { src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / maybe . png alt = >
returns a completable that emits the given completable to the given completable . <p > <img width = 640 height = completable src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / completable . png alt = > <dl > <dt . png alt = > <dl > <dt > <b > scheduler
converts {
subscribes to the given {
returns a completable that emits the given {
returns a completable that completes into a completable . <p > <dl > <dt > <b > scheduler : < / b > < / dt > < / p = > } < / p >
returns a completable that emits the specified amount of a delay . <p > <img width and scheduler scheduler = false . <p > <img width = 640 height = completable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx -
returns a completable that emits the given delay to the specified delay . <p > <img width = 640 height = value src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / completable . delay / dt > <dt > <dl > <dt
returns a {
returns a completable that emits the specified delay to the specified delay . <p > <img width = 640 height = experimental src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / rx
calls {
calls {
invokes {
returns a completable to the specified consumer .
subscribes to {
calls {
calls {
returns a completable that emits the given scheduler to the specified scheduler . <p > <img width = 640 height = completable src = https : // raw . github . com / wiki / reactivex / reactivex / rxjava / images / rx - operators / rx - operators / completable . png alt = > <dl > <dt > <b > scheduler
invokes {
returns a completable that emits the given completable emitted by the given function . <p > <img width = 640 height = completable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . png alt = > <dl > <dt / rx - operators / completable . png alt
converts the specified completable that emits function that emits } . <p > <img width = 640 height = repeat src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / completable . png alt = > <dl > <dt > <b > scheduler
returns a completable that emits the given {
returns a {
returns a {
returns a specified times to a completable . <p > <img publisher to the given completable . <p > <img width = 640 height = from src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt > <b > scheduler : <
returns a {
returns a {
returns a {
subscribes to the scheduler to the given {
subscribes to the given observer that emits the given completable . <p > <img width = 640 height = scheduler src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / toasync . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
subscribes to the specified scheduler that emits the specified {
returns a completable that emits the given completable to the given completable . <p > <img width = 640 height = completable src = https : // raw . github . com / wiki / reactivex / reactivex > < / dt > < / dt > < / dt > < / reactivex . < / b > < / dt . png
returns a {
returns a {
returns a {
returns a completable that emits the given timeout to the specified timeout . <p > <img width = 640 height = timeout0 src = https : // raw . github . com / wiki / reactivex / reactivex . github . com / wiki / rx - operators / rx - operators / completable . png . png alt = > <dl > <dt
returns a {
converts a completable into a flowable } . <p > <img width = { src = https : // raw . github . com / wiki / reactivex / rxjava . com / questions . png alt = > <dl / rx - operators / completable / dt / rx - operators / completable / dt . png alt = > <dl > <dt
converts this maybe into a maybe . maybe } . <p >
attempts to try to a completable .
returns true if the {
adds an element to the specified element .
shuts down the {
creates a new {
sets the subscription subscription .
emit
{
throws a {
wrap
flattens a {
throw a {
add
removes the specified consumer from the cache .
replay
performs a one - boolean benchmark of nthat .
{
adds all of the elements in this set to this method .
{
{
removes all resources .
{
subscribes the given {
subscribes the given {
subscribes the specified action to the specified consumer .
subscribes the specified {
adds a new resource to the list .
<p > tryscalarxmapsubscribe
converts an observable that emits the given value into an observable . <p > <b > <img width = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / toasync . png alt = >
creates a maybe observer from a {
creates a new { @link scheduler } from an instance .
shuts down the scheduler .
adds a value to the end
iterate through {
{
/ * ( non - javadoc )
{
returns a single {
returns a single {
returns a {
returns a single {
returns a single {
converts a {
converts a {
returns a single future } into a specified { @link future } . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > <dt > <b > scheduler : < / b
converts a { @link single } into a single future } into a single { @link single } . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / single . png alt =
returns a single {
returns a {
converts a single {
returns a single {
creates a {
returns a single {
converts {
returns a single {
returns a single {
returns a single {
returns a flowable that emits the items emitted by the source publisher into a single flowable } . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / single / rx - operators / rx - operators /
returns a single {
returns a single {
returns a single {
returns a single {
returns a single {
returns a single { @link single subscription that emits a specified time . <p > } . <p > } . <p > <b > <b > scheduler : < / b > < / dt > <dd > { @link single / dt > <dd > <b > <dt > <dt > { @link single } < / b : < / dt
subscribes to a single notification that emits the {
calls {
subscribes to the given publisher and emits the specified by the {
subscribes to the specified publisher that emits the specified publisher . <p > <dt > <b > scheduler : < / b > < / dt > <dd > <dt > {
calls {
calls {
calls {
maps a single {
calls {
maps this single {
maps the {
returns a {
returns a single {
maps this {
returns a single notification to a single single notification . <p > <img width = 640 height = materialize src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / single . png alt = > <dl > <dt > <b > scheduler :
returns a single {
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt / rx - operators / merge . png alt = > <dl
instructs a single {
instructs the specified {
calls {
returns a flowable that emits a flowable emitted by the source publisher . <p > <img width = 640 height = repeat src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a single single to a single item into a single {
returns a single {
returns a single {
returns a single {
subscribes to the specified {
subscribes to a consumer to the specified {
subscribes the given {
subscribes the specified {
returns a single completable to a single items emitted by { @link completable } to the other one .
returns a single {
returns a single {
converts a completable that emits a completable . <p > <img width = completable / b > scheduler : < / b > < / dt > < / dt > < / dt > < / dt > <dd > < / dt >
converts a {
subscribes the specified scheduler to the specified scheduler . <dl > <dt > <b > scheduler : < / b > < / dt > < / dt : < / dt > < / b > < / dt > <dd > <b > scheduler : < / dt > <dd > {
returns a single {
creates a multicast processor .
creates a multicast processor .
{
starts the spsc
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
returns the {
creates a {
completes the given value .
/ * ( non - javadoc )
completes the {
concatenates two {
concatenates the specified publisher into a single publisher . <p > .
returns a {
returns a {
concatenates two {
returns a publisher emitted by } . error } . <p > <img width = 640 height = till src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / publisher . github . com / wiki / reactivex / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the items emitted by { @link mode items emitted by default {
returns a flowable that emits a flowable emitted by the source publisher . <p > <img width = 640 height = empty src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png . png . png alt = > <dl > <dt > <b > backpressure : < / b
converts a {
converts an {
returns a flowable that emits a {
returns a flowable that emits the specified period } into a flowable that emits a period } . <p > <img width = 640 height = interval src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / flowable . png alt = > <dl > <dt >
returns a flowable that emits a flowable emitted by the source period . <p > <img width = 640 height = interval src = https : // raw . github . com / wiki / reactivex / reactivex reactivex = https : // raw . github . com / wiki / reactivex / reactivex / a > < / p = > <dt >
returns a flowable that emits a flowable emitted by a period emitted by the specified period . <p > function call . <p > <dt > <img width = 640 height = interval src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / interval . png alt
returns a flowable that emits an interval into a specified by the given period . <p > <img width = 640 height = count src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / interval . png alt = > <dl > <dt > <b > backpressure
returns a {
returns a {
returns a {
returns a {
returns a {
returns a flowable that emits a flowable emitted by the source publisher . <p > <img width = 640 height = never src = https : // raw . github . com / wiki / reactivex / rxjava / images / dt > <dd / reactivex / rxjava >
returns a {
returns a {
returns a single {
returns a single {
returns a single {
returns a flowable that emits a flowable emitted by the specified sources . <p > <img width = 640 height = switch src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <dl > <dl > <dt >
returns a publisher to a publisher emits a publisher emits the specified publisher . <p > <img width = 640 height = switch src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / publisher / reactivex / rxjava / images / rx -
returns a flowable that emits the specified delay into a flowable } . <p > <img width = 640 height = timer src = https : // raw . github . com / wiki / reactivex / reactivex . github . com / wiki / rx - operators / rx - operators / timer . png . png alt = > <dl > <dt
returns a flowable that emits the items emitted by {
transforms a {
returns a zipper that emits a flowable into a flowable to a specified sources . <p > <img width = 640 height = zip src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / zip . png alt = > <dl > <dt > <b > backpressure : < / dt
returns a {
converts a {
returns a {
returns a {
returns an iterable of {
returns a {
returns a blocking that emits the items emitted by {
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = next src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a single {
returns a single single item } into a single item into a single { @link scheduler } . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure :
converts a publisher that emits a future that emits a specified future . <p > <img width = 640 height = with src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
subscribes to the given consumer and emits a {
subscribes to the specified {
subscribes to a subscriber to the source that emits a subscriber . <p > <dl > <dt > <b > note< / b > < / dt > < / dt > < / dt > < / dt > < / dt >
returns a flowable that emits the items emitted by the source publisher into a flowable . <p > emitted by the source publisher . <p > <img width = 640 height = count src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / count . png alt
returns a flowable that emits the items emitted by a { @link flowable into a specified item emitted by the source } emitted by the { @link flowable . <p > <img width = 640 height = buffer src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns a {
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = count src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
transforms a list of {
returns a {
returns a list of {
returns a flowable that emits the items } emitted by the given count } . <p > <img width = 640 height = buffer src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / > <img . png . png alt = >
returns a flowable that emits the items emitted by the source publisher into a flowable . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / flowable . png alt
transforms a flowable into a specified {
returns a {
returns a publisher into a publisher completes } into a flowable into a flowable . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure
returns a list of {
maps a flowable that emits a publisher emitted by {
returns a flowable that emits the items emitted by the source publisher . <p > <dl > <dt > <b > scheduler : < / b > < / dt > <dd > <b > scheduler . < / p . cache
returns a {
returns a single {
returns a {
maps the upstream upstream items emitted by {
maps the upstream upstream error to a completable to the source publisher to a completable . <p > <img width = 640 height = support src = https : // raw . github . com / wiki / reactivex / rxjava / images / b / rx - operators / rx - operators / rx - operators / rx - operators / completable .
maps the upstream items that emits the items emitted by the source publisher } to the given { @link completable } . <p > <img width = 640 height = value src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / completable . png alt = >
returns a flowable to a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = value src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / flowable . png alt
returns a flowable items } emitted {
returns a function to a flowable that emits a { @link flowable } . <p > <img width = 640 height = value src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / flowable . png alt = > <dl > <dt > <b > <dl >
maps the upstream that emits a flowable into a {
maps the {
maps the { @link single } into a flowable into a {
returns a flowable that emits the items emitted by a single } into a specified {
returns a maybe into a maybe that emits the items emitted by the source publisher . <p > <img width = 640 height = concat src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / rx - operators / rx = > < / dt > backpressure : < / dt >
returns a flowable that emits the items emitted by {
returns a single single item to a single item to the source publisher . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / single . png alt = > <dl > <dt >
returns a single {
maps a flowable indicator into a flowable . <p > . <p > <img width = 640 height = debounce src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a flowable that emits the specified timeout emitted by the specified timeout . <p > <img width = 640 height = debounce src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / debounce . png alt = > <dl > <dt . png alt = >
returns a flowable that emits the specified delay to a delay and emits the resulting delay . <p > <img width = 640 height = delay src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the specified delay emitted by the specified delay . <p > <img width = 640 height = delay src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / delay . png alt = >
returns a flowable that emits a flowable emitted by the source publisher . <p > <img width = 640 height = delay src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
maps a {
returns a {
returns a flowable that emits a flowable . <p > <img width = 640 height = { src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / distinct . png alt = > <p > <img . <b > <b > <b > <b > <b >
returns a {
returns a {
returns a flowable that emits the {
returns a flowable that emits {
returns a flowable that emits the items emitted by {
returns a flowable that emits the items emitted by {
returns a flowable to the specified {
subscribes the specified action emitted publisher emits a publisher . <p > <img width = 640 height = consumer src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / rx >
returns a flowable that emits the specified action . <p > <img width = 640 height : 18px ;
returns a flowable that emits a flowable emitted by the source consumer } . <p > <img width = 640 height = consumer src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / consumer > < / dt > < / dt > < / p >
calls {
subscribes to a {
returns a flowable that emits a publisher emits the specified {
returns a flowable that emits a flowable emitted by the source publisher . <p > <img width = 640 height = do src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / rx - operators / rx - operators / toasync . png alt = > <dl > <dt > <dl > <dt
returns a publisher to the source publisher emitted by the source publisher . <p > <img width = 640 height = consumer src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / rx - > <dl > <dt > <b > backpressure : < / b > < / dt > < /
returns a flowable that emits the source publisher . <p > <img width = 640 height = consumer src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
subscribes to the specified consumer that emits the specified consumer } and emits the specified {
subscribes to a publisher to the source publisher . <p > <img width = 640 height = consumer src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / terminate . png alt = > <dl > <dt > <b
maps the {
maps a flowable that emits the items emitted by the specified index specified index . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / single . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits {
converts a maybe to a maybe that emits the first item emitted by the source publisher . <p > <img width = 640 height = maybe src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / maybe . png alt = > <dl > <dt > <b
returns a single single item that emits the items . <p > <img default behavior } . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : <
returns a single single element into a single items emitted by the source publisher . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / single . png alt = > <dl > <dt > <b > backpressure
returns a flowable into a specified by a {
returns a publisher that emits a publisher emitted by the source } into a {
returns a flowable into a flowable that emits the items emitted by a specified combiner function . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / flowable . png alt = > <dl > <dt > <b
maps the upstream upstream upstream upstream into a completable that emits the items emitted by the given function } . <p > <img width = 640 height = completable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / completable . png alt = > <dl >
maps the upstream items into a completable that items into a specified completable . <p > <b > note that function is called by the { / b > .
maps this maybe into a { @link maybe } emitted by applying the given { @link maybe . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / maybe . png alt = >
maps the upstream that emits the items emitted by a flowable into a flowable } . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / single . png alt = > <dl > <dt . png alt
maps the { @link flowable } into a {
subscribes to a consumer to the source publisher and emits it . <p > <img width = 640 height = consumer src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / rx - > <dl > <dt
returns a {
invokes {
subscribes the specified {
returns a {
returns a {
returns a {
returns a flowable that emits a flowable emitted by a flowable . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / hide . png alt
returns a completable that emits the items emitted by the source completable . <p > <img width = 640 height = java src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a single boolean that emits a single items into a single item . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / single . png alt = > <dl > <dt > <b > backpressure :
returns a maybe that emits the last element emitted by the source publisher . <p > <img width = 640 height = value src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / maybe . png alt = >
returns a single { @link single } to a single item } . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / reactivex / rxjava / rxjava . github . png alt = > <dt > <b > backpressure . png > <dl > <dt
returns a {
returns a flowable that emits a flowable emitted by the source publisher . <p > <img width = 640 height = materialize src = https : // raw . github . com / wiki / reactivex / reactivex . github . com / wiki / rx - operators / rx - operators / toasync . png alt = > <dl > <dl > <dt
returns a flowable that emits the {
returns a flowable that emits the items emitted by {
returns a flowable that emits the {
returns a flowable that emits a flowable } emitted by the source publisher . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / rx -
subscribes to a flowable that emits a flowable emitted by the source buffer . <p > <img width = 640 height = value src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / flowable / rx - operators / rx - operators /
returns a flowable to the source publisher into a flowable . <p > <b > scheduler / b : < / b > < / dt > < / dt : < / dt > < / dt > < / b > method call : < / b > < / dt > <dt > <b > <b > <b > <b >
instructs a flowable that emits a flowable emitted by the source publisher . <p > <img width = 640 height = value src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / rx - operators / rx . png alt = > <dl > <dt > <b > backpressure : < / b
instructs a flowable to the specified {
instructs the specified {
converts a flowable to a specified by the {
returns a {
returns a parallel {
returns a {
returns a flowable that emits the {
returns a {
returns a flowable that subscribes to a specified by the source publisher . <p > <img width = 640 height = rebatch src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a maybe to a maybe that function into a maybe . <p > <img width = 640 height = value src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > backpressure : < / b . png alt
returns a single seed into a single flowable into a specified {
returns a single {
returns a flowable that emits a flowable emitted by the source publisher . <p > <img width = 640 height = repeat src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a flowable that subscribes to a flowable to the source flowable . <p > <img width = 640 height = repeat src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png / rx - operators / rx - operators / repeat . png alt = > <dl > <dt
returns a {
returns a flowable that emits a flowable emitted by the source publisher . <p > . <p > each item . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / toasync . png alt = > <dl
returns a flowable that emits a publisher emitted by the source publisher and emits the { @link publisher } . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / replay . png alt
returns a {
returns a flowable to a specified amount into a { @link long } . <p > <img width = 640 height = schedulers src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / replay . png alt = >
returns a {
returns a {
returns a flowable that emits the {
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = count src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a {
subscribes a {
returns a flowable that emits a flowable emitted by the source period . <p > <img width = 640 height = sample src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a flowable that emits the specified period } emitted by the specified period . <p > <img width = 640 height = sample src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / sample . png alt = > <dl > <dt
maps a flowable that emits a publisher emitted by { @link publisher . <p > {
returns a flowable that emits the items emitted by the source publisher . <p > emitted by the source } function } emitted by the given seed . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / scan . png alt
converts a flowable that emits a publisher } emitted by a flowable emitted by a specified {
returns a flowable that emits the {
returns a single maybe into a single element . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / maybe . png alt = > <dl > <dt > <b
returns a single publisher that emits a single items emitted by the source publisher . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / single . png alt = > <dl > backpressure : < / dt
returns a {
returns a flowable that emits a flowable emitted by the source publisher . <p > <img width = 640 height = skip src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl - operators / rx - operators / rx - operators / rx - operators
returns a flowable that emits a flowable } into a specified by the specified scheduler . <p > <img width = 640 height = skip src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / rx - operators / rx - operators / skip . png alt = > <dl > <dt >
returns {
returns a flowable that emits {
returns a flowable that emits the source items emitted by a specified by the source publisher . <p > <img width = 640 height = false src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / skip . png alt = > <dl > <dt > <b
returns a {
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = sorter src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a {
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = from src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = from src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > <dt > <b > <dl > <dt > <b
subscribes to the source publisher to a specified {
subscribes to the specified consumer that emits the specified {
subscribes a {
subscribes the specified {
subscribes to the specified {
returns a flowable that emits {
maps a completable that emits the items emitted by a completable } to the given { @link completable } . <p > <img width = 640 height = completable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / completable . png alt
maps the items into a flowable that publisher emits the items emitted by the source publisher . <p > <img publisher . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx -
returns a flowable that emits a flowable } emitted {
converts a {
returns a flowable that emits a flowable emitted by the source publisher and emits a flowable emitted by the source publisher . <dl > <dt > <b > note< time }
returns a {
returns a flowable that emits a flowable } emitted by the source {
returns a flowable that emits items into a specified amount of {
returns a flowable that emits the last item into a flowable that scheduler . <p > emitted by the given amount of the last item . <p > <img width = 640 height = take src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx -
returns a flowable that emits a {
returns a flowable that emits the items emitted by {
returns a {
returns a flowable that emits a flowable emitted by the source window . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a flowable that emits the last interval } into a { @link interval } emitted by the given interval . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / throttle . png alt = > <dl > <dt > <b
returns a flowable that emits the specified interval into a flowable emitted by applying the given interval . <p > <img width = 640 height = last src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / throttle . png . png alt
returns a flowable that emits a specified scheduler } emitted by the specified timeout . <p > <img width = 640 height = debounce src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / debounce . png alt = > <dl > <dt > < / dt
converts a {
returns a flowable that emits the items emitted by the source publisher into a specified time . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / rx
maps a publisher emitted } into a publisher emits the items emitted by a specified { @link timeout0 () function . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / toasync . png alt = > <dl
maps a flowable to a flowable that emits a specified timeout . <p > <img width = 640 height = timeout0 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / timeout . png alt = > <dl > <dt . png alt
returns a flowable that emits the specified scheduler } emitted by a specified scheduler . <p > <img width = 640 height = timeout src = https : github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / timeout . png alt
returns a publisher to a publisher . <p > <img width = 640 height = value src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a flowable that emits a flowable emitted by the source publisher . <p > <img width = 640 height = timed src = https : // raw . github . com / wiki / reactivex / reactivex . github . com / wiki / reactivex . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a {
returns a single list that emits the items emitted items . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a single list into a list of {
returns a single {
returns a collection of {
returns an observable that emits a publisher emitted by a specified publisher . <p > <img width = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a single list into a single list that emits the items emitted by the source publisher . <p > <img width = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt . png alt = >
returns a flowable that emits the {
returns a flowable that emits the items emitted by a flowable . <p > <img width = 640 height = count src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / window / b >
returns a flowable that emits the items emitted by {
returns a publisher that emits a flowable } emitted } emitted by the source publisher . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / window . png alt
returns a flowable that emits a flowable emitted by {
maps a flowable to a flowable that emits the source publisher emitted by a flowable } . <p > <img width = 640 height = false src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / toasync . png alt = > <dl > <dt > <b
returns a flowable that emits a flowable emitted by the given publisher emitted by the source publisher . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / opening .
returns a flowable that emits the elements } of {
returns a flowable that emits a flowable emitted by the source publisher . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png . png alt = > <dl - operators / a . png alt = > <dl > <dt
returns a {
returns a zipper to a flowable items emitted by a specified zipper . <p > <img width = 640 height = value src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a publisher to a publisher that emits the items emitted by the source publisher . <p > . <p > <img width = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / b
{
{
schedule a new {
blocks until the consumer is completed .
completes the {
creates a default { @link processor } .
{
{
verify
returns a {
returns a flowable that emits the {
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = count src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a flowable that emits the items emitted by the source scheduler . <p > <img width = 640 height = count src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / count
returns a flowable that emits the specified {
creates a {
request a request to the subscription .
sets the resource at the given index .
replaces the resource at the given index .
blocks until the subscription is cancelled .
adds a new {
/ *
creates a flowable flowable to perform a { @link flowable } of { @link flowable } .
creates a flowable that completes when the specified {
creates a { @link flowable } .
creates a {
creates a {
creates a new { @link flowable .
creates a new { @link flowable the given {
creates a new instance of { @link moshi } .
creates a new {
creates a new {
returns the generic supertype of the given type .
creates a {
creates a proxy instance of the given service .
{
returns an {
request body converter .
skip the next request body .
returns a converter for the specified type .
returns a {
returns a converter for the specified type .
creates a new instance of { @link jaxbcontext } .
creates a new {
creates a new {
creates a new instance of { @link jackson .
parse the given {
creates a new {
set
sets the error factory .
creates an error response .
calculates the delay for the given unit .
creates a {
creates a new { @link response from the given { @link okhttp3 } .
error
creates a response from the given { @link okhttp3 } .
process
identify
regularize
loads all segmenters
/ * ( non - javadoc )
resets the input reader .
process the cross lexeme and cross .
sorts the {
return the forward path of the specified {
removes the given path from the path .
{
fills the buffer from the given reader .
initializes the cursor .
adds a {
output
/ *
returns the next lexeme in this method .
resets the contents
/ *
adds a {
adds a {
removes the tail of this path .
checks if the given {
returns the next product of this product .
get the weight of the weight .
schedule
disable
match
match
match
is
load
load
load
get
load
load
analyze
/ *
add
removes the first element from the list .
removes the last element from the list .
analyze
process
checks if the count of the given the given context .
/ *
match
fill
lookfor
returns a map of all the children .
insert the given segment into the given map .
compares this {
returns the string representation of the lexeme
append
sets the {
sets the error parameters converter .
logs out the token .
sets the clock skew .
sets the {
sets the port mappings .
creates the sample data .
sets the algorithm name .
{
returns the {
{
/ * ( non - javadoc )
/ * ( non - javadoc )
encode
{
performs the spring spring spring version of the spring version .
checks if the spring security version of the spring security version .
returns the spring version of the spring security core .
get the client registration id .
{
set the user details service } .
sets the subject principal regex .
builds the {
get the attributes of the given object .
returns the authorization requests for the request
/ *
{
/ *
fetch list of the list of the factory
get the {
initialize the default login filter .
returns the {
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
add
adds a filter to the registry .
adds a filter to the security .
adds a filter to the registry .
specify a {
applies the given { @link adapter .
add a path to the path
{
{
searches for the attribute values for a single attribute .
{
/ * attribute values from the given attribute .
{
internal method to search for the given base entry .
builds the {
compute the repeating sql sql .
lookup the primary keys in the primary key .
read acls
lookup the object identities for a collection of identities .
converts the {
creates a sid sid .
get
build
sets the {
sets the {
create an embedded server definition .
{
create the servlet api filter
creates the jaas api filter .
parses the intercept urls for a channel security channel .
/ * ( non - javadoc )
selects the imports of an annotation .
{
/ * ( non - javadoc )
gets the sids for the given authentication .
creates a {
/ * ( non - javadoc )
register the spring security filter chain .
register all the { @link filter filters ) .
register a filter .
returns the web application context attribute attribute .
returns the {
{
register
/ * ( non - javadoc )
returns the list of granted ) authorities for the given attributes .
gets the granted authority .
initialize the default login filter .
/ * ( non - javadoc )
sets the {
sets the {
/ *
returns the {
returns whether the session creation of the current session creation .
/ *
/ * ( non - javadoc )
attempt
/ *
/ *
initializes the access denied handler .
creates the {
factory method for creating a new { @link secretkey } .
creates a new instance of { .
creates a new { @link cipher } .
returns a {
init
initializes the cipher .
initializes the { @link cipher .
final
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
authenticates the authentication token
/ *
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ *
/ *
/ *
set
maps a collection of { @link authority } objects to a { @link set objects } objects .
sets the default success url .
login
execute a failure url .
login
update authentication defaults .
/ *
set the {
sets the {
set the {
intercept the request matchers .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
map the password value
/ *
set
sets the {
/ * ( non - javadoc )
find the method annotation of the given annotation .
/ *
create
/ * ( non - javadoc )
/ * ( non - javadoc )
extract
creates an {
decodes a cookie value from the cookie .
encode
{
remember
cancel
set
/ * ( non - javadoc )
read
read
{
load users by username
{
load
creates a user details .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the error page .
/ * ( non - javadoc )
/ *
get the query string from the request
create an artifact pattern .
get
get the principal
{
{
{
/ * ( non - javadoc )
set
returns the {
creates the {
/ * ( non - javadoc )
return
{
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a {
{
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the exception mappings .
adds a filter to the list
/ *
logout
{
set
authenticates an authentication token .
handle the logout .
publishes the given { @link username .
creates a new {
returns all config attributes contained attributes .
sets the list of authorities .
sets the {
builds the provider url for a list of urls .
/ * ( non - javadoc )
sets the environment environment properties .
returns the state of the request
/ *
{
sets the {
sets the {
{
creates a {
{
create the filter chain for the given element .
creates the authentication manager .
/ * ( non - javadoc )
/ *
render the end tag .
{
adds a user to the user .
adds a user details .
/ *
validate
generates a digest for the given password .
split
splits a string into a string .
/ * ( non - javadoc )
finally
publish
authenticate an authentication is required .
publish an authentication credentials .
returns the user details service .
add the pkce parameters
{
checks if an authentication service .
checks if the service is a ticket .
checks if a ticket request should be authenticated .
checks if the authentication token is authenticated .
checks if the request is configured .
returns true if the proxy is configured .
load
returns the {
returns the {
creates a {
creates a {
{
get
return the id of the given jwk
/ * ( non - javadoc )
{
creates an {
vote
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the return value of the request
/ * ------------------------------------------------------------
encode
returns the user from the cache .
returns the {
{
{
gets the ldap authorities populator .
gets the authorities .
create a {
creates a {
sets the {
sets the {
{
/ * ( non - javadoc )
sets the {
sets the {
returns the web sphere groups granted to be granted to the current user .
returns the {
{
get the service url for the given authentication .
load user by assertion .
set the {
sets the {
set the {
returns the url of the web server .
/ *
{
load
returns a {
get a map of authorized client
creates a client registration id
creates an authentication map .
return
http
{
/ * ( non - javadoc )
creates a signature for the given token .
concatenates the given array .
return
returns a list of all granted to the given attributes of the specified attributes .
pre
returns the granted authority collection .
adds a collection of granted authority to the collection .
get
get
{
{
sets the shared object for the given object .
gets the shared object for the given type .
adds a security configurer
gets the list of the configurers .
removes a list of security configurer .
removes the configurer for the specified class .
post
/ * ( non - javadoc )
get the domain object instance .
{
/ * ( non - javadoc )
builds the https redirect url for the request .
{
{
checks if the given role is a role .
return
set the subject dn regex .
{
/ *
on
/ * ( non - javadoc )
attempt
attempt to attempt to publish user .
creates a new { @link switch .
gets the source authentication authentication .
sets the user url }
sets the switch user url .
set
list of public index
display user contacts
strip the path from the path .
{
/ * ( non - security security configurer .
{
creates a {
{
{
checks if this class supports the given class .
{
checks if the url is authorized .
{
creates an {
checks if the request is allowed using the current .
returns the {
{
initializes the default login filter .
get the {
creates a {
creates a {
creates a {
returns the user
sets the {
after
add
{
get the {
creates the web authentication details .
write
adds the {
disables the current state .
creates the {
get the header writers .
register
registers a filter at the given filter .
registers a filter before the given filter .
returns the order of the given class .
{
returns a collection of the given a jwt attribute .
sets the {
sets the default {
apply the given {
/ * ( non - javadoc )
{
display
display
adds the permission
deletes a permission
get
/ * ( non - javadoc )
creates a new {
creates a new { @link error code .
{
creates a reactive from a resource location .
creates a new instance of { @link reactive } from a { @link properties } .
creates a reactive string from a string .
{
creates a default {
get the {
creates a {
creates a {
creates a new {
creates a { from a string .
creates a subscribe that matches the given pattern .
creates a message matcher that } .
returns the value of an attribute with the given name .
returns the first attribute value for the given name .
{
encode a string to base64 notation .
decodes a byte array into base64 notation .
gets by ticket id .
returns the parameter names of the given method ) for the given method .
lookup parameter names of the parameter names .
returns the parameter name of the given class .
add
/ * ( non - javadoc )
set the hpkp
add
/ * ( non - javadoc )
/ * ( non - javadoc )
add
/ * ( non - javadoc )
add
add
{
returns true if the method name is a match .
/ *
save
load
creates a new { @link reactive
{
creates a new { @link authority } for the given authority .
creates a new {
creates a new { @link authority } for the given role .
load
request
ant ant matchers
creates a list of the given } .
add a regex that match
sets the {
{
{
{
/ *
{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the user dns format for the given username .
sets the user dn patterns .
{
creates a map of unmapped } instances } instances
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the pre authenticated
{
{
returns a random contact
evicts the cache from the cache .
post
/ * ( non - javadoc )
clears the authentication attributes .
get
get
set
create service url .
creates the redirect url .
set
adds the roles to the authority .
returns the roles reachable in one of the authority .
build the roles reachable in one step map .
build the roles reachable in one of the roles to another .
generate
add a {
logout
specify the {
get
creates a {
/ * ( non - in the given method .
combine the hash and salt .
encode
{
extract prefix
/ * ( non - javadoc )
login
logout
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the path is normalized .
check that the filter is valid .
check if the login page is protected .
register a {
get the registered types .
determine the cause chain of the given {
extracts the cause of the {
returns the first throwable of the given type .
verify that the given {
get the proxy imports .
register
sets the policy directives .
sets the {
sets the {
initiates a { @link consumer servers } s { @link consumer
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a collection of { @link collection of { @link set of { @link set } objects .
checks if two bytes are equal .
{
build the form parameters
grants an authorization request .
grant the {
/ * ( non - javadoc )
saves the exception to the request .
sets the default failure url .
{
set
{
loads the {
creates a user details .
returns a collection of errors .
get
builds the full request url .
builds a full request url .
builds the request url for the request .
builds the request url for the given servlet path .
checks if the given url is an absolute url .
{
{
prints a binary permission .
{
converts the given identifier to a long .
creates a new { @link user } .
creates a {
build an authentication as run as an {
{
creates a new { @link configurer } for the given access denied denied .
sets the default access denied denied denied denied denied .
sets the {
returns the {
gets the authentication entry point point .
returns the request cache .
creates a map of role hierarchy to role hierarchy .
creates an {
{
creates the object identity .
create the primary key for the given type .
creates the primary key for the primary key .
creates the primary key for the given sid .
retrieves the primary key of an object
update the {
updates the object identity of the object .
save
creates a {
sets the { @link list .
creates a {
creates a {
creates a random {
encryptor
creates a {
creates a {
creates a {
specify the {
{
{
creates the delegating password encoder .
/ * ( non - javadoc )
/ *
{
obtain the {
sets the {
specifies that the {
creates a {
sets the {
gets the {
get the default access denied denied }
returns the invalid session strategy .
creates an {
/ *
determines the target url for the request .
determines the target url for the given request .
sets the default target url .
sets the target url parameter .
returns the {
returns the pre authenticated
/ * ( non - javadoc )
builds a {
creates a new {
introspect
get the http security page .
configure the {
{
creates a {
create the shared objects
{
configure the jaas using the login config .
{
creates an { @link evaluation } for the given authentication .
resolve the service entry for the given the service type .
/ *
resolves the ip address for the given hostname .
resolves the service entry for a service )
{
gets the {
post
destroys all beans .
sets the user s ) .
set the {
format
return
parses a string representation of a date .
parse
update
create a method .
creates a method invocation from a class .
creates a new instance from .
handles an authentication
sets the {
creates a {
creates a constraint that matches the given patterns .
sets the {
creates a {
sets the {
creates the {
creates an authentication authentication token .
sets the realm name .
set
sets the user authorities by username .
sets the {
checks if an authentication checks for the given user .
sets the {
{
initialize the subject with the given subject .
login
{
creates a {
creates a { @link user } from a { . user } .
creates a { from a string .
{
/ * ( non - javadoc )
/ *
returns the security name of the user
get
changes the password of the user .
build the group dn .
sets the group attribute name .
{
{
/ * ( non - javadoc )
this method is called when the session .
{
{
build the form parameters
{
copies the details of the {
/ * ( non - javadoc )
called when the session change .
{
returns the list of {
gets the list of a given a given url .
/ * ( non - javadoc )
returns the {
creates a successful authentication authentication .
{
/ * ( non - javadoc )
closes the context
returns the relative name of the given dn .
returns the full dn name for the given dn .
sets the {
{
sets the session attributes
updates the specified session with the specified value
creates a new {
creates a new {
creates a new {
creates a new {
creates a new {
sets the {
adds the given filters to the list of filters .
adds the given {
replaces the given filters with the given filters .
replaces all filters in the given filter with the given filter .
object
asserts that the given argument to the list of arguments .
get
get
post
post
put
delete
delete
head
head
patch
patch
options
options
request
request
request
request
creates a new { @link authentication } object .
create a new authentication scheme .
creates a new { @link form .
creates a new { @link form .
creates an { @link authentication } for the given { @link certurl } .
create an { @link authentication } .
create an { @link authentication } .
oauth
creates an {
creates a new { @link oauth2scheme } .
resets the configuration .
userelaxedhttpsvalidation
enable logging of the given { @link log .
apply
apply
trust
apply
trust
proxy
proxy
proxy
prints the response to the response .
redirect
returns a {
returns the default { @link charset } .
returns a {
returns a {
returns a {
append
encode
creates a new { @link objectmapper } for the given { @link objectmapper .
returns a new instance of {
creates an instance of { @link objectmapper } for this { @link objectmapper .
creates an instance of { @link objectmapper } for this { @link objectmapper .
creates a new instance of {
creates a {
creates a new {
creates a {
creates a new { @link assured } .
creates a new { @link assured .
creates a new {
creates a new {
creates a new {
creates a new {
creates a new {
creates a new {
{
decodes the given string to base64 encoded string .
clones the response if needed .
{
{
{
creates a new {
creates a new {
creates a new {
{
disables the loading of external dtd .
returns a new { @link path } instance that is used to >
declares the path config .
return
gets the value of the object .
performs a get request .
post
patch
performs a patch call with the given arguments .
request
performs a request on the given url .
performs a request against the given uri .
parses the response from the response .
build the default response handlers .
/ *
/ *
sets the request headers .
set proxy
sets the control name .
sets a header value .
sets the headers for the request .
sets the { @link charset .
sets the { @link charset .
returns the default encoders map .
sets the {
sets the user to use .
basic
ntlm
ntlm
{
oauth
remove
returns the content type of the response .
creates a new {
creates a {
resets the configuration .
get
get
post
post
put
delete
delete
head
head
patch
patch
options
options
mvc
mvc
mvc
mvc
authenticates an authentication scheme .
authenticates an authentication scheme .
authenticates an authentication scheme with the given credentials .
authenticate authentication scheme scheme .
authenticates an authentication scheme .
enable logging of request and response specification .
creates a matcher that matches the given path .
creates a matcher that matches the given path .
creates a matcher that matches the given path .
creates a matcher that matches the given path .
sets the content type .
sets the content type .
sets the specified header .
build the {
{
{
{
{
returns a {
{
returns a {
{
{
adds a header to be returned by {
adds a header to be returned by {
adds a cookie to be returned by {
adds a cookie to be returned by {
adds a cookie to be returned cookie
adds a {
sets the root path for the response .
appends the root path to the response .
adds a body to the spec .
adds a body to be compatible with the given path .
adds a {
log
registers a parser . register .
creates a {
checks if a json schema matches the json .
creates a {
creates a {
creates a {
creates a matcher that matches the supplied {
creates a matcher that matches the given a { @link matcher2 } .
returns the entity with the given name .
returns the value of the given entity .
returns the list of the given entity .
gets the values of an entity .
creates a new proxy specification .
creates a new {
{
{
returns a new { @link objectmapper } for the given configuration .
creates a new { @link path } for this configuration .
<p > newinstance< / p >
create a new { @link objectmapper } for the given { @link objectmapper } .
creates a new { @link objectmapper factory that can be used configuration .
creates a new { @link objectmapper factory that can be used configuration .
checks if the given uri is a valid .
returns a {
enable logging of the request .
find
create
creates a { @link mock from an array of configurers .
overwrite
returns a new {
returns a new {
returns a {
returns a new {
returns a new {
returns a {
sets the body of the request .
sets the body of the request .
adds a new session to the request .
adds an attribute to the request .
adds a header to the request .
adds a multi - part to the request .
adds a multi - part to the request .
adds a multi - part .
adds a multi - part .
sets the session id .
sets the {
adds a mock result handlers .
log
set
creates a new instance of { @link map } with the given { @link map } .
add
creates a new {
creates a new {
get a jsonpath by path .
reads a int value and converts it to an int .
returns the value mapped by path .
reads a short value .
reads a float value and converts it to a float .
get double value .
reads a long value .
get a list of objects as a list .
get
get object value by path .
get the value by path .
return
pretty
returns a {
returns a {
returns a feature feature feature .
{
declares the namespaces to xml configuration .
declares a namespace from configuration .
disable the loading of external dtd .
{
returns a new {
{
default
returns the default charset } for the given content type .
returns a {
returns a {
returns a {
{
get value by path .
get a list of value .
get map .
get object value by path .
get int value by path .
gets a boolean value .
get
get
get
retrieve a float from bundle .
get double value .
get long value by path .
get
/ * ( non - javadoc )
return
peek
pretty
sets the body of the request .
sets the body of the request .
adds a cookie to the request .
adds a parameter to the request .
adds a parameter to the request .
adds a query param to the request .
adds a query param to the request .
adds a form param to the request
adds a form param parameter .
adds a path param param .
adds a path parameter to the request .
sets the key store .
sets the trust store .
add
adds a multi part to the request .
adds a multi part to the request .
sets the session id .
adds a {
log
sets the proxy proxy .
creates a new {
creates a matcher that matches the given path .
creates a matcher that matches the given path .
creates a matcher that matches the given path .
create a matcher that matches the given path .
creates a { to the } .
creates a {
{
{
{
creates a {
returns the value of the specified cookie .
gets the value
creates a new {
creates a new jndi
remove all keys in the map .
index
/ * ( non - javadoc )
{
get the binding in time binding binding .
returns {
creates a provider binding .
converts a constant string to a binding .
cleans up the given binding .
removes the failed jit binding from the store .
returns the internal dependencies of the given binding .
/ * ( non - implemented type .
creates a binding for the given key .
creates a binding for the given binding .
creates a binding for the given binding .
creates a new binding for the given key .
creates a binding for the given key .
/ * ( non - injectors ) of the given parameters .
/ * ( non - javadoc )
<p > array of the given {
returns the html for the node .
new multibinder
create a new {
{
build
build
binds the given {
binds the given {
creates a dependency .
creates a new injection point for the given constructor .
creates an injection point for a constructor .
creates an injection point for the given type .
creates an injection point for a method .
returns a set of injection methods in the given the given type .
returns a set of injection methods for the specified type .
checks if the given member is declared in - binding .
gets the injection points for the given type .
returns true if the method is eligible for the given method .
returns true if the given is a public class .
initialize
{
creates a {
returns a new {
creates a {
wrap a {
gets the superclass type parameter parameter .
returns the provider type .
creates a new instance of the given type .
resolves all of the given types .
/ *
get
returns the parameter types of the given method .
get the exception types for the given method .
returns the return type of the given method .
canonicalize
canonicalize the given {
returns {
canonicalize the given type .
returns the declaring declaration
collect all servlet definitions .
prepare the built in converters .
returns the classloader
create a new fast class for a member .
creates a {
returns true if the given class loader has the same as {
returns true if the given member is publicly callable .
creates a provider method for the } .
returns the value of the given injector .
fix
/ *
/ *
validate
injects all errors
{
collect all filter definitions in the given injector .
return
resolve the aliases for the given aliases .
checks if a stage is eager .
creates a new { @link factory } .
creates a injectable from the given scope .
normalize a path .
decodes a string .
returns {
generate
returns true if the given annotation is an annotation .
return
returns a string representation of an annotation to a string .
returns {
returns the scope of the given {
find the scope of the given annotations .
checks if the given type is concrete .
returns the key of the given type .
find the binding annotation for the given member .
canonicalize if the {
canonicalize an annotation type .
returns the name of the {
initialize
returns a provider with the current provider .
returns the {
/ *
create a new {
/ *
add
{
returns true if the given class has a scope .
creates a new {
@param literal for javax .
returns the key of the given value .
creates a new {
returns the {
creates a {
<p > injected into non - nullable dependency .
adds a source to the provision .
construct a proxy .
/ *
/ *
sets the {
/ *
returns a module for a module
/ * ( non - javadoc )
returns true if the given type is not specified .
find the matching constructor injection point point point .
returns true if the given constructor has the given constructor .
returns a set of dependencies for the given implementation point .
returns the set of the given {
returns true if the given dependencies are valid .
returns true if the given dependency is an injector or not .
initializes the injector .
creates a binding from a new injector .
{
returns {
ensures that the reference is not null .
checks that the configuration .
return
returns a missing implementation of {
format
convert
creates a new {
{
find the next filter in the request .
returns {
returns the internal constructor .
returns the set of internal dependencies .
/ * ( non - javadoc )
{
returns the set of the injection points .
returns the system option for the given name .
returns the system option for the specified name .
/ * ( non - javadoc )
creates a new parameterized type .
creates a new {
creates a new {
creates a new {
returns a module for a module .
get the annotation of the given method .
binds all properties of the specified properties .
bind properties ---
creates an injector for the given modules .
creates an injector for the given modules .
get
returns the stack trace ) .
returns the line number .
initialize the injector
wraps a {
wraps a {
wraps a {
/ *
{
creates a new {
returns a list of {
set
creates a new key for the given type .
returns a new key for the given type .
returns a key for the given type .
returns a key for the given type .
returns a key for the given type .
returns a new { @link key for the given type .
creates a new {
creates a new key for the given annotation type .
returns a key for the given type .
{
{
creates a new {
returns a {
get all elements of the given module
returns the list of the given modules .
get all elements in the given modules .
prune the stacktrace of the stack trace .
/ *
creates a new {
returns the binding source of the source .
returns an immutable {
returns an immutable set of {
merges the given {
format
format
create
creates a new { @link message } instance } with the specified { @link throwable type and arguments .
creates a new { @link message } with the specified { @link throwable cause } and { @link list } .
convert the given object
returns the cause of the given {
returns a list of the module names of the classes .
returns the stack trace for this chunk .
injects the given modules to the given type .
returns true if the class is skipped .
returns a list of classes to a list of strings .
gets the stack trace element .
returns the stack trace from the given list of class names .
manage
/ *
entry point of the module .
converts the stack trace to an array of { } .
converts an array of {
pushes a dependency to the dependency .
push
see {
create a new { @code initializable .
/ * ------------------------------------------------------------
provision
/ * ( non - javadoc )
adds a connection event processor to the processor
get
launder
register
register
get
try to get a url from the url
decodes the protocol code from the stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
get
removes a task from the pool .
heal
create
initialize
shuts down the connection manager .
oneway
{
{
invoke
invoke
invoke
invoke
invoke
invoke
invoke
invoke
invoke
invoke
create
create
get
get
check
closes the connection .
enable
enables a heartbeat .
disables the specified url .
disables the given url .
initializes the channel .
/ * ( non - javadoc )
/ *
set
/ * ( non - javadoc )
decodes the {
register
register a user processor .
send
dispatch
deserialize
process
timeout
debug
/ * ( non - javadoc )
invoke
invoke
parse
creates a new { @link protocol .
creates a new {
converts a {
converts a {
get
add
stops the connection .
parse
{
invoke
invoke
invoke
invoke
invoke
invoke
{
/ * ( non - javadoc )
close
handle
process an exception for a single command .
get
/ *
gets the custom serializer .
sets the connection event listener .
info
{
get
returns a random connection .
gets the custom serializer .
get
get
{
crc32
resolve
converts a response object .
convert a throwable to a throwable .
detail
create
print
creates a new {
enables the {
starts the scannable
parse
parse
get
parse
returns the local address of the given channel .
parse
returns the local port of the given channel .
parse
parse
parse
adds a connection to this connection .
removes a connection from the connection .
gets the connection .
registers a custom serializer .
returns the custom serializer for the given class .
registers a custom serializer .
gets the custom serializer .
starts the {
{
oneway
oneway
oneway
invoke
invoke
invoke
invoke
invoke
invoke
parse
{
initializes the write mark .
return
creates a new instance of { .
writes a batch of {
set
validates that the payload .
update
check if the requested protocol is requested .
translate a single frame into a single frame .
--------------------------------------------------------------------------------------------
translate a single frame size
generates a base64 encoded key .
process the frame
process a binary frame .
logs a runtime exception .
process a frame text
process a frame from the websocket server .
process the current frame .
process a closing frame .
check the buffer size of the buffer
get the payload from the byte buffer
get
checks if the handshake
creates a buffer from the given buffer .
/ *
translate the handshake http server to a handshake .
translate a handshake http client .
decode the message from the given socket .
decodes the handshake handshake .
closes the connection due to the wrong handshake .
closes the connection due to the internal server .
generates the http response due to the error code .
closes the connection .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
reset
connects to the server .
connect to connect to complete .
returns the port of the uri .
send the handshake
{
/ * ( non - javadoc )
sets the connection lost timeout .
stops the connection lost timer .
starts the connection lost timer .
restart
execute
cancel
starts the ssl .
{
/ * ( non - javadoc )
entry point of the application .
process the handshake .
unwraps the handshake .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
stops the server .
returns the port of the server .
{
read additional bytes from the queue .
accepts a new connection .
attempts to read from the queue .
write
starts the selector and server thread .
/ *
shuts down the server .
removes a connection from the cache .
returns the websocket socket .
sends a data ---
sends a collection of the specified text .
send a draft to all registered draft .
fills the draft frames with the given draft
transfers data from source to destination buffer
entry point of the application .
starts the persistence unit .
returns the {
sets a transaction to the given block
executes a transaction on the specified name .
push
sets the entity in the given name .
executes a {
deprecated .
deprecated
convert the given object to a scala buffer
wrap
get the value of the play property
gets the value of the specified keys
use {
returns a preferred {
/ * ( non - javadoc )
<code > lang
{
parse
configures an entry with the specified key .
returns a new {
sets the bindings for the } .
sets the {
a convenience method to create } from the given the modules .
sets the {
sets the {
disable the given classes .
call
handles a request
returns an existing file in the given path .
/ *
a { @link tuple of } of the given input values .
static factory method for wrapping a value of type <code > a< / code > in a { @link tuple5 } .
converts the given {
decodes the given header .
returns a copy of the given the source .
converts a list of classes .
returns the stack trace element .
returns a new {
creates a new {
creates a {
creates a flow from the given callback .
creates a flow from a json string .
creates a new {
creates a new alogger .
delegates to {
delegates to { @link supplier ( string supplier ) .
delegates to debug debug level .
delegates to {
logs a debug . < / p >
debug .
delegates to {
info .
<p >
delegates to {
logs a formatted . < / p >
record a warn log level .
<p >
<p >
<p >
add
creates a new instance of the given key } .
show
video
get
find the method from the parent class .
get
{
on
on
on
{
logs a server error
converts a {
on
on
create a {
creates a {
builds a {
/ * ( non - javadoc )
creates a {
request
async
consumes the data from a materializer .
creates a { @link entity } from the given { @link content } .
creates a {
creates a {
{
{
creates a {
creates a {
return
send
creates a {
send
creates a {
creates a {
send
creates a {
send
creates a {
ok
ok
ok
ok
ok
ok
ok
created
created
calls {
created
execute the given content .
created
created a created file .
bad
bad
bad
bad
bad
bad
bad
unauthorized
unauthorized
unauthorized
unauthorized
unauthorized
unauthorized
unauthorized
payment
payment
payment
payment
payment
payment
payment
forbidden
forbidden
forbidden
forbidden
forbidden
forbidden
forbidden
not
returns a result is not found { @link jsonobject } if it is not found .
checks if the given file is not found .
return
checks if the given content is not found .
return
checks if the given file is not found .
not
not
returns a result .
not
not
not
not
unsupported
return
unsupported
unsupported
unsupported
return
return
required
<p > status >
binary binary data from a file .
creates a result . < / p >
precondition
<p > wrapper around {
precondition
too
too
too
too
too
get the result of {
too
request
calls {
calls {
request
calls {
request header fields too too too large .
request
internal
internal
creates a server error .
internal
internal
internal
internal
authentication
asserts that the specified by {
creates an authentication network that is required authentication file .
get the authentication of the given file .
get authentication
creates an authentication file .
get authentication of {
moved
moved
found
found
other
redirect
redirect
temporary
temporary
permanent
permanent
{
returns the user by id .
returns a {
returns a unique {
creates a new {
return
return
{
{
show
creates a new { @link server from the given block .
creates a new {
creates a {
javascript
converts a object to a json node .
creates a new { @link jsonnode }
parse
parse
{
create
creates a new {
creates a new {
unwrap all annotations of {
returns the list of {
relative
return
see {
returns a list of {
returns a list of {
returns the displayable of the given constraint .
executes the given entity in the cluster .
executes the given entity in the background .
{
{
~ methoden ----------------------------------------------------------
{
is
return
return
creates a new {
creates a new {
set the {
inject
todo
session
flash
pass
/ *
/ * ( non - javadoc )
creates a binding to a binding .
convert a binding to a binding .
create a supplier to a supplier .
converts a binding to a binding
creates a {
creates a { @link caffeine .
creates a {
get the list of the given an application
preferred
creates a new instance of {
creates a new {
creates a { from the }
evolutions
apply the evolutions to the database .
apply the evolutions to the database .
clean up all the database scripts .
adds a new {
adds a {
loads a {
<pre > {
load
loads the {
<p > new . < / p >
encodes the given cookie into a cookie .
encodes the specified cookies into a string .
{
/ * ( non - javadoc )
/ *
push
create a json object } object .
say
returns the {
creates a new flow .
creates a flow from a flow .
/ *
binds the specified {
binds the specified messages to the specified request .
binds the request to a request
binds the value of the request
binds the specified data node
binds the value
get the message for the given constraint .
binds the data form
binds the value to the given form
binds the data binder } to the specified { @link form .
convert the error arguments
creates a new {
returns the global errors .
<p > errors >
get the value of {
get
return
set
gets the value associated with the given key .
get
returns the value mapped by {
creates a {
converts a string to a dynamic key .
parse
parse
print
print
print
registers an optional {
register the formatters
{
encodes the given cookie into a cookie .
{
{
{
decodes the specified header .
return
creates a {
creates a {
creates a {
creates a {
creates a {
creates a {
creates a {
creates a {
creates a new {
returns a {
select all nodes by path .
convert a list of {
returns an array of objects .
returns an immutable {
mapped
--------------------------------------------------------------------------------------------
checks if the given member is accessible .
sets whether the member is accessible .
compare two constructor .
compares two arguments .
compares two parameter types .
returns the cost of a primitive class .
get the total transformation cost for the given executable .
get
creates an instance of {
get a localized value from the resource bundle . <p >
returns the value of the specified keys
creates a new database from a database .
creates a {
creates a new { @link database .
create
return
return
creates a new {
return
same as {
create
{
create
sorts the specified range of the array .
/ *
emit
emit
creates a new mixin .
create
create
create
create
finds a proxy for the given class .
{
{
cast a type to a type .
load
load
visits a field .
box
unbox
creates the argument array .
zero
adds a type to the given type .
process
asserts that the specified { @link emitter ) } ) } on the registry .
/ * make sure that the given {
wrap a throwable with the given emitter .
/ * ( non - javadoc )
set
set
sets the callback types .
create an array
get
filters constructors
return
creates an instance of the given type } .
creates a new enhancer
creates a new enhancer
create a new instance
set
get
add
adds a class to this class .
get the cardinality
sets the naming policy .
set
/ *
find
resolves a path to a path .
read
sets the host host .
/ * ------------------------------------------------------------
creates a new { @link request .
connect
returns a { @link http .
post
put
creates a patch request .
delete
creates a new {
creates a {
creates a {
/ * ------------------------------------------------------------
request
adds a query to the request .
query
query
request
query
return
returns the url
sets the basic authentication header
sets the host header .
opens the http request .
opens the http request .
keep
/ *
{
sends a response and receive response .
create
{
sets a property .
adds an error to the list of errors .
returns a range of the specified range .
get
put the exception table into the output vector .
collect all action interceptors .
collect all action filters .
collect all action results .
collect the action runtimes .
resolve nested properties of the given property .
{
sets the value of a property .
checks if the given property has an index .
returns the index property for the given bean .
sets the index property .
{
{
{
{
{
{
resets the soft state .
sets an object reference .
gets the object reference for the specified name .
{
returns the table descriptor for the given table .
find the table descriptor by column ref
returns the table alias for the given table ref .
register
adds a parameter to the entity .
lookup the entity descriptor for the given entity .
lookup a table ref .
define a parameter .
register
{
{
inject attributes
inject
inject multipart files in the request
{
convert the property name to column name .
convert column name of the column name .
apply column name of the column to column name
convert the value to an array .
{
prepare
returns all the set of the wrappers .
resolve
resolve
expand
create
concat
converts a path to a path .
returns the index of the last separator in the specified filename .
get
splits the given filename into an array of strings .
resolve
relative
{
registers a { @link madvoc . app . < / p >
registers a component .
sets the action config .
adds a component to be registered component .
start the madvoc .
configure the {
register madvoc
<p > jars .
include
include
exclude entries from the class name .
checks if a jar file .
scans the jar file .
scan
prepare the entry name .
scans the entry for the given class .
returns the bytecode signature of the given class .
scan
scan
start
<p > converts a string to an array of characters . < / p >
{
{
get the default scope type .
get the scope of the given type .
accept a scope .
parse the given message .
process a part of the attachment .
process the multipart request .
adds a string content .
parse a string representation of the given part .
parses the inline disposition
adds an attachment to the attachment .
adds an attachment to the email .
adds an email info .
encodes a byte array into base64 notation .
decodes a char []
encodes a byte array into base64 notation .
encode a string to a string .
prepare a csrf token .
removes the size of the given token from the set .
check
checks if a csrf token is expired .
copy
copy
copy
{
{
/ * ( non - javadoc )
resolve a scope .
creates a new instance of the given class .
register a scope .
lookup a bean definition by its name .
lookup the bean definition for the given bean .
looks up an existing bean definition for the given name .
creates a bean definition for a bean } .
creates a bean definition for an external beans .
registers a bean for the given type .
register
registers a bean definition for use by name .
register
remove bean
{
resolve
register a petite ctor
registers a petite property injection point .
{
register
register
register
register a provider . < / p >
registers a provider definition for the given provider .
{
accept
defines the parameters for the given properties .
define the parameters .
returns the value of the current context .
set
{
{
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
prints the action before the request .
print
returns the java version of the given version .
adds an int value to the visitor .
check
advice
returns the advice method name .
load
load
load
load
load
stores the method argument .
returns true if the given opcode is a store .
visit
prepare the return value .
creates a method signatures for a method .
visit an element value .
creates an array of the given type .
stores the given component to the given array .
return
lookup
resolves the action for the specified action path .
extracts the mime type from the content type .
extract
extracts the encoding from the given content type .
resolve the file name .
returns true if the flags are empty .
convert value to array .
checks if the request is a multipart request .
resolve
resolve
require an authentication request .
prepare the download response .
prepare the response .
get
read
read
get
get
stores the context path
stores the context path variable
get
get
get
sets the scope attribute of a scope .
removes a scope attribute .
checks if the given url is an absolute url .
removes the session id from the given url .
get
{
prepare
return
copies all the parameter attributes .
<p > invokes the body . < / p .
render
renders the body to a string .
sets the value of a scope .
removes a scope attribute .
invoke
{
{
inject
{
{
{
add a header .
{
{
<p > value into map .
put a base property .
count the number of profile properties .
put a profile property .
get a profile property .
lookup the value for a given key .
resolves the macros for the given string .
extracts a map of profiles from the specified map .
return
decode the specified password from a password .
try
read
copies all bytes from the given inputstream .
copy bytes from the specified number of the given inputstream .
parse an action definition ) .
parses the given action .
resolve
detect and register an alias for the given action definition .
read action interceptors .
read action filters .
read
<p > action action path .
read
parse the method alias .
read the http method http method .
creates an action runtime .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
returns the value to a boolean .
converts a object to a boolean
converts a object to a boolean value
converts an object to an integer .
converts an object to an integer
converts an object to a object
converts a value to a long
converts a object to a long
converts a object to a long value
converts a value to a float
converts a object to a float
converts a object to a float value
converts a value to a double
converts a object to a double
converts a object to a double value
converts a value to a short
converts the given object to a short
converts a object to a short value
converts a value to a character .
converts a object to a character .
converts a object to a char value
converts a byte value to a byte representation .
converts a object to a byte .
converts a object to a byte value .
<p > to long array .
{
converts the given value to a class .
convert the value to a big .
converts the given an object to a big } .
converts the value to a object .
converts a bigdecimal to a big
{
/ *
registers a bean as a bean .
apply
inject
visit an annotation .
resolve
resolve
lookup the type data for the given type .
lookup the type data for the given type .
find the subclass type data for the given type .
resolve json name .
resolve the real name .
/ *
checks if the file extension file extension .
/ * ( non - javadoc )
copy the bootstrap methods from the bootstrap class
sets the major version and class name .
put a constant pool into the pool .
put the bootstrap methods to the output vector .
adds the specified entry into the cache .
adds an entry to the list .
adds a constant fieldref to the constant table .
adds a constant methodref to the methodref .
adds a constant member reference .
adds a constant member reference .
adds a constant integer or float .
adds an integer to the constant .
adds a constant long or double .
adds a constant long entry .
adds a constant name and type to the constant pool .
adds the constant name and type and type .
adds a constant constant to the pool .
adds a constant constant .
adds a constant method handle .
adds a constant method handle .
add a dynamic constant .
adds a dynamic constant .
adds a dynamic reference to the constant pool .
adds a dynamic reference to a dynamic reference .
adds a constant utf8reference to the constant pool .
adds a constant utf8reference .
adds a bootstrap method to the bootstrap .
adds a bootstrap method to the bootstrap .
add the merged type to the type of the merged type .
adds the specified entry to the type .
convert the specified value .
hash a string representation .
returns true if the given string is equal to the given string .
removes all of the elements from this map .
set
removes the value with the given name .
returns the value mapped by {
returns the value by name .
get
{
returns a list of all the entries .
increases the buffer by the given capacity .
{
append a char to the buffer .
{
{
/ * ( non - javadoc )
creates the first chain delegate for the first chain .
creates the first chain delegate continue .
creates a proxy method adapter .
parse a string to a path .
push
/ *
creates the joy
configure the servlet context .
<! -- start generic documentation -- >
<! -- start generic documentation -- >
<! -- start generic documentation -- >
<! -- start generic documentation -- >
<! -- start generic documentation -- >
<! -- start generic documentation -- >
<! -- start generic documentation -- >
{
scan
returns all the field descriptors .
/ * ( non - javadoc )
{ @inheritdoc }
{
converts a {
{
{ @inheritdoc }
{
on serializable property .
reads a property from the given object .
checks if an element contains the given element .
compose
compose an received email .
append a range of bytes
rehash the map .
puts the mapping for the specified key in this map .
{
removes all of the mappings from this map .
appends a range of bytes to the buffer .
/ * ( non - javadoc )
append a string to the buffer .
append a uploadable to the buffer .
appends the contents of the buffer .
write
/ * ( non - javadoc )
{
encode
get a string value associated with the given key .
returns the value mapped by {
returns the value mapped by {
returns the value mapped by {
returns the value mapped by {
returns the value mapped by {
returns the value mapped by {
get
returns the value mapped by {
returns the value mapped by {
gets the integer value associated with a key .
returns the value mapped by {
get the value mapped by key .
gets the value mapped by key .
returns the value from bundle .
returns the value mapped by {
returns the value mapped by {
returns the value mapped by {
returns the value associated with a key .
stores a value into the map
stores a { @link string value } value into the map
adds a value to the map
put
put
/ * ( non - javadoc )
sets the folder to the given folder .
{
receive an email address .
receive email and mark .
receive an email and delete email .
fetch messages
updates the email flags .
closes the given folder .
lookup a named parameter by its name .
get
parse
alias for {
alias
validate action .
adds a new violation to this validator .
return
replies the mime type of the mime type .
get
sets the target input stream .
set
set
resolve the class name of the class name .
process the class .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new instance of this class .
dump
create an email address from a .
append
create an email address from a } .
reply
sends a new email .
reply
cc
create a new email address .
cc
{
creates a new message with the specified text .
creates a text message .
creates a html message for the specified encoding .
adds a header to the request .
sets all http headers .
{
stores attachments .
sets the attachments for the given attachments .
{
set an embedded attachment .
selects an embedded attachment .
return
returns the value of a system property .
returns the value of the specified name .
returns the value mapped to an integer } .
returns the value mapped by {
parse the given content into an xml document .
parses the xml document into a jerry object
appends a float to the buffer .
appends a portion of the specified array
appends a float .
returns true if the given argument is equal type name .
/ * ( non - javadoc )
serializes a key value to a json object .
looks up an alias for the given alias .
resolve an alias to a string .
resolve
resolves an alias for the path .
returns the index of the last slash of a slash .
return
returns the index of the index of the specified slash .
strip
get the name of the first character in the specified string .
encodes the given sim object into a sim
decode a string to a string .
resolves the table name for a table .
resolves the schema name for a class .
resolve
resolve
resolve
quote the given name of the string if it s quote .
init
block
/ *
decrypt
demix
schedule
init
{
converts a byte array to a long array .
parse
/ * ( non - javadoc )
/ * ( non - javadoc )
parses an email address .
parse an {
parses an {
build the patterns for the patterns .
pull the internet address from groups .
returns the first comment of the given text .
<p > removes the bounding box from the source string .
wrap the target to methref .
returns the path of the path .
zlib
gzip
ungzip
creates a zip file .
list all the files in a zip file .
unzips a zip file to a zip file .
add
add
returns the field descriptor for the given name .
returns the {
returns the property descriptor for the given name .
returns the default ctor descriptor .
returns the {
sets the name of the request name .
sets the session locale .
returns the session locale for the specified http session .
/ * ( non - javadoc )
filter
{
compute the size of an annotation .
put annotations to the annotation .
compute the size of the parameter annotations .
put the parameter annotations into the given byte array .
adds the specified profile profile .
little - endian or intel format .
calculates the hash value into a hash value .
reads the contents of the input stream into a byte array .
returns the interfaces of the interfaces .
makes the given visitor .
read the attributes
reads the field .
reads the method .
reads the code for the class .
read a label from the given offset .
creates a label .
creates the debug label .
reads the type annotations from the given visitor .
returns the bytecode offset of the type
reads the type annotation target .
reads parameter annotations .
reads the values of the element .
reads an element value .
compute the implicit frame .
reads the stack map frame .
reads the verification type info .
returns the offset of the first attribute in the buffer .
read bootstrap methods
read an attribute .
reads an int from the file at the given offset .
read a long value }
reads a utf - 8 string from the pool .
read a utf - 8 string from the constant pool .
reads a utf - 8 string .
read a dynamic constant constant pool .
reads a const object from the constant pool .
/ * ( non - javadoc )
{ @inheritdoc }
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ *
get the ctor descriptor for the given class .
get
create
get
convert the specified value .
convert the given value to an array .
convert the specified value to
/ * ( non - javadoc )
find file on file .
search
find
add
find
exclude
checks if the given file path .
get
add
resets the file .
{
find
/ * ------------------------------------------------------------
{
/ * ( non - javadoc )
{ @inheritdoc }
resolves the wiring .
resolve the bean scope type .
resolve
{
returns a writer that writes to - output stream ) the writer .
/ * ( non - javadoc )
get
<p > object type . < / p >
gets the method type .
returns the argument types for the given method descriptor .
returns the return type of the given method descriptor .
returns the type of the type .
returns the class name .
gets the constructor descriptor .
returns the method descriptor for the given type .
returns the method descriptor for the given method .
appends the descriptor to the stringbuilder .
{
returns the number of arguments and return the number of the given method .
returns the opcode of the given opcode .
/ *
/ *
commits all resources .
/ *
/ *
looks up the resource for the given type .
adds a new name to the stack .
remove the name of the name .
/ *
writes a string .
unicode
writes a charsequence to the output stream .
set
uppercase
{
/ *
checks if the start tag ) is inside the other tag .
returns true if a string is containing any of the splits .
register
gets a pseudo function .
{
/ * ( non - javadoc )
{
{
generates the static init block .
generate the proxy constructor .
process all super methods .
applies the given {
match the aspect list of {
find the index of the specified value in the specified range .
find the first index of the first occurrence .
returns the index of the specified element .
start a sequence .
<p > on . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
replace
/ * ( non - javadoc )
creates a new handle .
creates a dynamic dynamic constant .
invoke
creates a new field in the symbol table .
creates a new method to the table .
returns the common super class name of the given class .
register
register
find the type of a class .
lookup
creates a new {
socks5proxy
creates a new {
get
returns the number of thread transactions in the stack .
return
removes a transaction from the list .
/ *
associates a new transaction .
creates a new transaction .
/ *
returns {
/ *
return
creates a new {
returns a new {
returns the {
creates a new {
return
registers a {
lookup the resource manager for the specified resource type } .
closes the resource manager .
creates a proxy object .
appends a method name to the path .
continue
encode a base64 - base64 encoding .
align
human
pretty
converts a camel case into string .
case
format
converts tabs to spaces to spaces .
escapes java .
/ * perform an unescape operation based on string .
creates a new { @link transaction } from the given { @link annotation } .
lookup the mixing scoped bean .
resolve
returns the bean for the given bean .
get a bean by its name .
initializes the bean definition .
register the bean and wire and registers the bean invocation methods .
wire
invoke
create a bean for the given type .
invoke
add
set
get
shuts down the scope .
{
{
/ * ( non - javadoc )
logging
/ * ( non - javadoc )
{ @inheritdoc }
/ * package
/ * ( non - javadoc )
returns the value of the specified profiles .
{
/ * ( non - javadoc )
creates the element node node .
{
removes the last child node from the parent node .
find the matching tag with the given tag name .
fixes the unclosed tags up to the parent .
{
{
get the argument index .
/ * ( non - javadoc )
count
visit
visit
creates an array of the given method .
creates an array of the given method .
return
target
info
target
visits a class annotation for a class annotation .
get the query string .
save
get
calculates the number of elements in the given range .
iterate
iterate
join the given array of strings .
replaces all occurrences of a string with the given string .
replace
replace
<p > replaces all occurrences of the first substring of the substring in the second string .
replace
<p > replaces the last substring of the substring of the <code >
replace
<p > removes all occurrences of a string from the source string . < / p >
remove
return
return
contains
contains
to
<p > changes the first character of the string . < / p >
title
returns a string .
<p > checks if the string is a substring of the specified string .
splits the given string using the specified delimiter .
splitc
compress a string .
returns the index of the first occurrence of the first occurrence of the specified substring .
returns the index the first occurrence of the first occurrence of the first occurrence of the first character .
get the index of the first occurrence of the first occurrence of the source .
get the index of the first occurrence of the first occurrence of the specified string ignoring case .
returns the index within the first occurrence of the first occurrence of the first occurrence of the source .
returns the index of the first occurrence of the first occurrence of the first occurrence .
find the index of the first occurrence of the first occurrence of the specified substring .
<p > if the charsequence starts with the given string .
return
counts the number of occurrences of a string ignore case insensitive .
<p > returns the last index of the first occurrence of the string .
<p > checks if two strings are equal .
replaces all occurrences of a string with another string .
replaces all occurrences of a string in the given substring .
compare two strings .
case
check if the source string starts with one of the specified string starts with the specified <code > = 0 .
<p > checks if the source string ignoring case - ignore case .
<p > checks if the source string < = dest strings < / returns - 1 if the source string ends with the specified string .
<p > checks if the first occurrence of the first occurrence of the specified } < / ending .
return
<p > strips all occurrences of the string . < / p >
<p > strips the trailing trailing whitespace from the string .
<p > strips all occurrences of a string from the string . < / p >
<p > from a string from a string .
<p > from a string .
trims all occurrences of a string .
trims strings from the given string .
trim
crop all strings in the strings in the string .
trim
trim
returns the index of the specified region of the specified string .
<p > returns the index of the first occurrence of the string .
join
join
convert
return
surround
prefix
suffix
cut
cut
cut
cut
cut
<p > returns the string between two strings .
<p > checks if the specified string is escaped characters .
insert
returns the given string .
<p > reverses .
max
find
shorten
<p > converts a string to a upper case .
removes all quotes from a string . < / p >
to
<p > executes a string is not empty .
get
<p > detect the first character in a string .
/ * ( non - javadoc )
appends a range of bytes to the buffer .
visits an entry .
visits an enum .
visit an annotation .
lookup the type of the given type .
registers the given type .
registers an entity descriptor .
registers a new entity .
removes an entity from the database .
creates a db entity descriptor .
creates an instance
sets the target interface .
/ * ( non - javadoc )
{
lookup the annotated properties for the given type .
configure
detect a database .
closes the stream . )
/ * ( non - javadoc )
{
/ *
{
returns true if the request is a valid request .
returns the encoded name of the mime .
/ * ( non - javadoc )
write
write
/ * ( non - javadoc )
{
/ * ( non - javadoc )
appends an argument to the given string .
prepend an argument to a string .
changes the return type .
/ * ( non - javadoc )
register
register a converter for the given type .
{
convert
convert
gets all nodes matching the nodes .
{
process selectors
selects the first node in the list .
{
selects the first node in the list .
helper method to walk all nodes of nodes .
walk through all descendants of the given nodes .
walk the css nodes of the given css selector .
select the given node to the given node .
helper method to filter .
return
resumes the next non - input buffer
resumes scanning until the next regular expression is matched the end of input is encountered or an i / o - error occurs .
sort
build
remove
remove
remove
decodes the given html string .
detect the name of the name of the first .
{
{
{
{
resolve
find by column name .
find by property descriptor by property name .
get
get
{
set
gets the value of the specified key .
append
{
get the character at the specified position in this buffer .
expand
calculate
{
creates the mixing message for the given bean definition .
create a proxy proxy bean ) proxy bean .
prepares the step direction .
loop
initialize the map of files .
checks if the given file is a file .
use
starts the timer .
on change when the file .
add an enumeration to this method .
{
convert the value to an array .
compute the field info size .
put the field info to the given vector .
/ * ( or not )
appends a byte array to the buffer .
creates a new { @code target } object with the given value .
creates a new { @link target .
creates a { @code target .
{
{
parses the given decora .
parses the given page .
writes the decorated decorated page .
writes the given region .
{
starts the server .
convert the specified value to an array
runs the given process .
{
checks if the given path matches the given path .
create a gzip output stream .
{
{
{ @inheritdoc }
/ * ( non - javadoc )
{
appends the alias to the query .
appends the column name . < >
adds a rule to the rule .
returns true if the value matches the specified value .
applies the given flag .
processes the specified value .
processes the specified rules .
{
returns the pseudo class name .
{
{
returns the index of the given insertion of the specified range .
converts the specified logger level to a logging level .
{
register an action
binds an annotation config .
register a new { @link action .
lookup an action config for the given action type .
execute an action .
{
setup the system properties .
{
returns true if the element is one of the table elements .
returns true if the node is a table element .
returns true if this node is one of the parent table elements .
find the last table in the table .
find
fix
{
register
gets the session map .
returns the current http session .
constructor .
adds a advice clinit method .
adds a advice init method .
{ @inheritdoc }
{ @inheritdoc }
{
{
replace
converts the given properties to a writer .
converts properties from properties to a writer .
parses the given string .
adds the given key / value pair .
extract profiles and add them to the specified value .
adds a list of profiles
{
convert a string to a class name .
convert a string to a name .
convert a string to a signature .
convert a class type of a class .
<pre > int value : {
visits a long value .
visits a float value .
visits a double value .
visits a byte [] {
<pre >
<pre >
}
add all of the given consumers to the consumer .
{
creates a collection of the specified length .
convert
convert
convert
convert
/ * ( non - javadoc )
adds a line number to this line .
accept the method .
adds the given value into the buffer .
adds a forward reference .
/ *
marks a subroutine of the given subroutine .
add a subroutine to the subroutine
push the outgoing successors to the list to the list .
compares two digits .
fix
return
puts a byte vector into the buffer .
sets the byte vector from the buffer .
puts a short value into the buffer .
sets a new byte vector to the vector .
sets the byte vector of this vector .
put a int value into the buffer .
creates a new byte vector to the same length .
adds a long to the buffer .
put a byte array into the buffer .
/ *
authenticate user via http session .
authenticate the user via request } .
authenticate the user via basic auth .
/ * ( non - javadoc )
{
calc
find a message for the specified bundle .
returns the default message for the given locale .
retrieve a message from bundle .
/ * ( non - javadoc )
<p > get . < / p >
returns the value at the given index .
checks if the entity is persistent .
sets the entity id .
store an entity .
saves the given entity .
updates the given entity .
update
update
query by id by id .
find entity by property .
find the first element in the database .
searches for the entities in the database .
find
deletes an entity by id .
deletes an entity by id .
count the number of entities in the database .
increase property .
decrease a property .
{
{
implicitly
implicitly
returns true if the given its name .
{
{
{
{
get the current stack trace .
get the stack trace of a throwable .
get the stack trace chain .
returns the exception chain of the given exception .
stack
to
build
get
find the cause of the given {
sql
get
wrap
unwraps a {
creates a new {
register
check
accept
accept
returns the default class loader .
returns the {
get the manifest item for the given classpath .
gets the base dir of the classpath .
get
get
get a resource as stream .
get a resource as stream .
get
get
load
load
add
find or create a child chunk .
checks if a value matches the given value .
get an instance of multipart request .
parse
convert the given value to the given type .
convert
invoke
get
set
returns the index of the first character of the given name .
extract the index of a property .
<p > { .
extracts the generic component type from the given getter .
convert an index to a map key .
returns the type of the given property .
returns the { @link httpservletrequest .
stop
/ *
to
converts a {
format
parse
define a proxy for the given class .
add
resolves the given target class .
add all properties of the specified class .
collects the annotation annotation checks for the given property .
collect all annotation checks for the given annotation .
{
copy default check properties .
fail
{
{ @inheritdoc }
encodes a uri component component .
encode the given uri .
encodes the given uri component into a string .
encodes the given scheme .
encodes the given uri .
encodes the given uri .
encodes the given uri .
encodes the given uri .
encodes the given query parameter .
encodes the given fragment .
encodes the given uri uri .
encodes the given http url into a string .
build a { @link builder .
inspect
add a property .
creates a property descriptor .
creates a property descriptor .
/ * ( non - descriptors ) .
returns the location of the request
/ * ( non - javadoc )
unzip
{
reads an inputstream
closes the connection .
{
/ * ( non - javadoc )
prints the routes of the action .
encrypt a byte array into base64 .
decrypt encrypted content .
{
generify
sets the value of the specified property .
generify
{
convert value to array .
{
sets a default header .
send
send
adds the default headers to the request .
reads cookies
add cookies
send
creates a new { @link message . message } . message } . message } . message } . message } . message } . message } . session } . session } . session } .
sets the subject subject .
sets the sent date .
sets the email headers .
sets the email address .
sets the email address .
add the body data source .
returns the base body part of the {
sets the content of an email .
creates a {
filter embedded attachments from the given attachments .
adds any attachments to the given list .
{
get
get
save
initializes the session .
initialize the jdbc connection .
closes the query sets .
closes all result sets .
closes the query .
{
{
{
{
execute
executes an update .
execute
{
{
{
<! -- start generic documentation -- >
{ >
/ * ( non - javadoc )
creates an {
/ * ( non - javadoc )
creates an array of {
converts an email address to an array of { @link internet objects .
creates a proxy instance for the given aspect .
creates a proxy for the given aspect .
parse the given template .
convert an iterator to an enumeration .
convert an enumeration to an iterator .
creates a iterator to a iterator .
creates a stream from an iterator .
creates a stream from the given } .
creates a stream from the given iterable .
{
{
{
adds a folder to the zip .
sets the default wiring mode .
resolves the {
/ *
get
get the class name of a class name .
<p > <b >
sets the serializer for the given type .
exclude this serializer in this serializer .
<p > exclude . < / p >
exclude
serializes the given object to the given appendable .
{
serialize a object to a char sequence
clone
write
read
write
to
/ * ( non - javadoc )
resolve
resolve the types table names .
resolve
create the types table names of the given types .
read column value .
/ * ( non - javadoc )
cache
resolve
converts the entity name to a table name .
convert table name of the table name .
apply
{
{
checks if the connection is valid .
{
/ * ( non - javadoc )
{
{
{
/ * ( non - javadoc )
get
write
writes the content to the response .
{
{
{
/ *
login
returns the {
login
login
logs the user .
set
return
return
converts a url to a file name .
converts a url to a container file .
creates a temporary file .
mkdir
touch
copy a file to a destination file .
copy
copies a file to a dir .
copies a file to a destination directory .
moves a file to another file .
moves a file to a dir .
moves a directory to another location .
clean
read
read
writes the given data to the given file .
out
readutfstring
readutfstring
read
write
append
write
write
read
reads the contents of the given file .
write data from the given byte array to the given file .
append data to append to dest
out
compare two strings .
compare
return
return
copies a file to a destination .
moves a file .
deletes a file .
returns true if the file is an ancestor of the given .
returns the parent file of the given file .
return
creates a temporary directory .
create
create
read
creates an input stream from the given file .
detect
checks if the given file exists .
checks if the given file is a directory .
check if a directory is a directory .
copies a file copy of the file .
append a boolean value to the buffer .
prints the command .
resolves the action method .
/ *
register
register
look up an action .
registers an alias alias for the given path .
/ * ( non - javadoc )
creates a new { @link sequence } from the given char array .
append a short buffer to the buffer
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
wraps a {
run the given {
find the index of the first occurrence of the specified character .
find the index of the first occurrence of the specified character .
checks if the target array matches the given ndx .
match
<p > creates a { @link charsequence } from the given { @link charsequence { @link charsequence .
returns a new position of the position of the specified position .
request
commits a transaction .
marks the current transaction or rollback .
creates a new url for the given class loader .
encode the binary string into a string .
append
create a new { @link email .
bcc
{
register
registers the given type .
looks up the given type .
put
parse
returns the value of the parameter .
get
get
get
{
parse
find the end of a macro .
counts the number of escapes in the specified template .
on table .
build a query string from the given query map .
parse a query from the query parameters
prepare the header parameter name .
extracts the media type from a content type .
extracts the header parameter from the given header .
set prepared statement object to the given object .
/ * ( non - javadoc )
{
process an array of macros .
transforms the html to html representation of the html representation .
converts the given node to an inner html representation .
{
{
{
{
{
{
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
<p > create . application .
load madvoc
resolve
creates a new { @link classloader .
resets the internal state of this class .
lazy
map
replace
parse
allow
{
parses a string representation } .
parses a string as a map .
parses the given char array into an object .
parse the value of the value .
resolve the given value of the given value .
skips the object .
parses a string .
parse
grows and increases the text .
parse
parse the content of the unquoted string .
/ *
parse
parse
consumes a char from the given character .
checks if the given target array matches the given target .
syntax
/ * ( non - javadoc )
creates the empty ctor
{
creates the simple method wrapper for the given method signature .
{
returns the raw type name for the given type name .
resolves a reference to the given property descriptor .
resolve the reference from the given values .
reads the reference from the given property descriptor .
read all references from an annotation .
read annotation value .
build
build the default reference for the given property descriptor .
remove
converts an array of references to an array of references .
converts a string to an array of references .
run the joy .
starts the rw
find
finds a constructor in the given the specified by the given types .
is
get
is
return
resolve
resolve
get
get
compares two declarations .
compares two signatures .
compares two parameters .
force the {
checks if the given member is public public .
<p > newinstance . < / constructor . < / p >
creates a new instance of the specified type .
checks if the given member is assignable from the given member .
get the superclasses of the given type .
return
get
get
returns the component type of the given type .
get the component types of the given type .
return
read annotation value .
returns the caller class for the current thread .
get
find
find the child class of the given class .
returns the jar file of the given class .
convert
is
checks if the specified type is an integer type .
sleep
sleep
waits for the given object to the same as {
join
creates a new {
/ * ( non - javadoc )
visit a parameter .
visit an annotation .
visit a type annotation .
visit an annotation .
visits a frame .
visits a instruction instruction .
visits a method instruction .
visit a dynamic instruction . visit .
visits a jump instruction instruction .
add a number of dimensions to the set .
visits a try catch block .
visit a local variable annotation .
converts the specified properties to a writer .
{
{
{
moves to the next element .
joins the given array of arrays .
joins the given arrays into a new array .
joins the given arrays into a new array .
resize
resize
append
removes the element at the specified offset .
removes the element from the buffer .
converts an array to the specified array .
subarray
return
insert
inserts the given array into this array .
inserts an array
return
return
return
return
return
return
return
return
return
return
return
return
return
return
return
return
returns the index of the first occurrence of the specified value in the given index .
returns the index of the first occurrence of the specified value in the specified array .
compare
returns the index of the first occurrence of the specified value in the array .
compare
returns the index of the first occurrence of the specified value in the specified array .
return
{
returns the index of the first occurrence of the first occurrence of the first occurrence of the specified array .
to
<p > array to a string array .
enable xhtml mode .
{
parses the xml document .
{
compute all the frames .
compute the max stack and local edges .
adds a successor to the current basic basic basic basic basic basic basic basic basic basic block .
ends the current basic block .
visit the frame .
visit the current frame .
put the frame into the map .
put abstract types into the abstract frame .
put the frame type into the stack .
check if this signature can be used method attributes .
compute the size of the method .
adds the method info to the given vector .
collect attribute prototypes .
/ * ( non - javadoc )
{
parse the css selectors
parse a list of selectors into a list of { @link splitc .
register
lookup the pseudo pseudo class by name .
{
/ * ( non - javadoc )
closes a closeable .
copy all of the contents from the given { @link reader } .
copies all bytes from the input stream to the given output stream .
reads all available bytes from the input stream .
copies the contents of an { @link reader to the given output stream .
copies the contents of an { @link inputstream .
copy the contents of an { @link inputstream } to the given output stream .
copy
copy the contents of the given reader to the given writer .
creates an { @link inputstream } from the given inputstream .
creates an {
get all bean property names of the given class .
resolve
visit
{
{
resolve
read
creates the {
send
configure the class
register
set
creates the bundle file .
{
lookup
registers a bundle for the given )
create
create a bundle from the given bundle .
resets the bundle .
fix
fix
update
update
update
update
delete
delete
delete
delete
find
find
find
find
find
find
find
find
count
count
count
increase
creates the table ref name .
{
<p > to a string .
returns the name of the field .
/ * ( non - javadoc )
convert
convert
convert
parses a map of generics .
resolve
pushes a value to the stack .
{
{
serializes the given object to json
checks if a property type is ignored .
{
opens a connection for the given query .
opens the connection .
close
{
{
replaces the macros
creates an action definition .
return
creates a properties from a file .
loads a properties from the given file .
load
writes the given properties to the given file .
writes the properties file to a file .
writes the given properties to the given file .
write
creates a properties from a string .
loads a properties from a string
gets the properties of the given properties .
creates a properties from the classpath .
load properties from a classpath .
get
gets the value of a property .
resolve
resolve a property by key .
/ *
returns the transaction mode ) for the specified method .
/ * ( non - javadoc )
read a {
adds a selector selector selector .
{
checks if the given node matches the same node .
accept the given node in the given index .
<p > perform an unescape operation .
build the jre packages for the given java version number .
determines the java version number from the version .
clones the content of this object .
detaches the node from the parent .
adds a child node to this node .
adds a child node to this node .
inserts a child node into this node .
inserts a child into the specified child into this node .
inserts a new node into the tree .
inserts a new child into the child .
inserts a new node into the tree .
remove a child at the specified index .
removes all childs nodes from the list .
returns the attribute at the given index .
/ * ( non - document has the given name .
gets the value of an attribute .
sets an attribute value .
{
find a child node by name .
returns the node at the specified index .
returns the child node for the specified indexes .
returns the child element at the given index .
returns the first child of this node .
returns the last child child of this node .
find the last child child element in this list .
check if this node is a child of this node .
reindex
initialize the child element nodes .
initialize the sibling names .
initialize the child nodes .
changes the owner document .
{
get the next sibling element .
returns the next sibling name .
returns the previous sibling node .
returns the previous sibling element .
get the previous sibling name .
returns the text content of the text .
appends the text content to the appendable .
/ * ( non - lagarto html renderer ) .
returns the html
visits all children of the given visitor .
get
on decora tag .
on
define the decora
/ * ( non - javadoc )
{
/ * map
{ @inheritdoc }
{ @inheritdoc }
returns the mime type of the mime type .
find all extensions by mime types .
{ @inheritdoc }
{
add
add
find the root package for the given action path .
find the package path for the given action package .
begin
commits a transaction .
{
creates a json string from a list of violations .
resolve
remove
{ @inheritdoc }
/ * ( non - javadoc )
{
{
for each target and in the target scope .
{
extract the parameters
creates the targets for the given method .
creates an action method argument .
/ * ( non - javadoc )
/ * ( non - javadoc )
get a string at the given position .
gets the integer value at the given position .
reads a long value from the input .
gets the double value at position .
reads a float value .
gets the json object at the given position in the list .
gets the value at the specified position in the list .
get a byte array from the buffer .
get value
add
add
add
removes the value from the list .
/ * ( non - javadoc )
resolves the target path for the given value .
target
/ * ( non - javadoc )
process an input start tag .
converts an object to a string .
resolve the {
add an interceptor to the router .
resolve
checks if a list of nodes matches the given expression .
gets the name of the pseudo .
creates the string representation of the action .
{
{ @inheritdoc }
{
creates a socks4proxy
read an attribute .
write the content vector to the given writer .
returns the number of attribute attributes .
computes the size of the symbol table .
compute the size of the given the given symbol .
/ * ( non - table .
put attributes to the given symbol .
{
registers an action result .
looks up the action result if it s {
lookup an action .
creates an instance of { @link action .
<p > checks if two charsequences matches the same .
find the first occurrence of the given character in the source sequence .
find the first occurrence of the given array in the first occurrence .
adds a command line arguments to the command .
put
runs the process .
invokes the given listener with the given listener .
copy the contents of a frame
gets the abstract type from an api format .
returns the abstract type from the given descriptor .
sets the input frame from the given descriptor .
sets the input frame from the api format .
returns the local type of the local index .
sets the local locals .
pushes a new type to the stack .
pushes the given descriptor to the table .
pops the stack .
pop the descriptor .
adds an initialized type .
returns the initialized type of the given table .
{
merge two symbol
makes the given method visit the given method writer .
put the given abstract type { @link symbol .
{
schedules a new timer .
visit a module .
/ *
visits an outer class .
visit an annotation .
visits a nest member .
visits an inner class .
visit a field .
/ * ( non - javadoc )
get
close
create
<p > invoke . < / p >
read
calc
calc
parse an int value .
checks if this range of this range .
converts a char array to a byte array .
find the first diff in the array .
returns the node name for the given node .
returns the attribute name .
renders an attribute .
load properties
load
load
loads the configuration from the given map .
loads properties
loads system properties .
loads a configuration
loads the classpath from the classpath .
returns the value of the specified default value .
returns the double value associated with the given key as a double .
returns the value of the specified key .
sets the value for a profile .
{
extract properties from a map .
{
map
adds an inner map to the map .
/ *
get all profiles of all profiles )
gets the profiles for a given property name .
adds a property injection point .
{
add
add
add
returns the target class for the given proxy .
inject
injects the target into the target object .
get
{
finds a field descriptor for the given name .
returns the type of the field .
gets the getter .
creates a getter for a getter .
returns the setter of the setter .
creates a setter for the given field .
returns the key type for the field .
resolve
nosep
creates a serialized { @link jsonobject } .
return
resolve
equals
compare two characters .
returns the index of the first occurrence of the given string .
checks if a path matches the given pattern .
checks if the specified rule is matching rules .
<p > if the given class name .
resolves the resource loading .
/ * ( non - javadoc )
{
wait for the thread to complete .
returns the annotation type of the given annotations .
inspect the method parameter scopes .
build an injection point .
inspect the given class scopes ) in the given action .
/ *
on a property . < / >
return
sets the bean .
updates the bean .
loads the property descriptor .
returns the getter for the property .
returns the { @link setter .
connect to database .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
print logo
stops the joy .
{
create
connect to the given host .
creates a new { @link sslsocketfactory } from the server .
returns a {
random
random
random
parse an email address } from the given string .
{
parses an email file from the given eml file .
parse the received email from the given input stream .
creates a new instance of the given } . < / p >
creates a new object instance .
<p > inject .
convert
visits a service .
{ @inheritdoc }
{ @inheritdoc }
{
creates a new instance of {
put
get the value mapped by {
/ * ( non - javadoc )
{ @inheritdoc }
scan
get
returns the {
/ * ( non - level .
resolve
get
return
resolve
download
download
download
/ * ( non - javadoc )
checks if the action path is an action path .
{
/ * ( non - javadoc )
inject the given action .
sets the {
connects to the given hostname .
connects to the given hostname .
/ * ( non - private
returns the primitive class name index of the given class .
/ * ( non - javadoc )
loads a class from the classpath .
loads a class by its name .
{
/ * documented compare / p >
returns a { @link array for the specified element .
find the specified element in the specified element .
<p > exclude rules . < / p >
include
include
/ * ( non - javadoc )
{
ensure that the length of the map .
appends the content of the given appendable to the given appendable .
registers a component .
register
register a component instance .
register a component instance .
fires an event to all registered listeners .
{
{
{
resolve the base component name .
/ * ( non - javadoc )
resolve
preprocess
/ *
creates a { @link resultset } for the given result set .
searches for a generated key .
populate
{
{
{
see {
sets an integer value .
sets a boolean value at the given index .
sets a long value .
sets a byte value at the given index .
see {
sets a double value at the given index .
sets a float value .
sets a short value at the given index .
{
{
{
{
set .
sets a biginteger at the given index .
{
sets the value of the designated blob to the given blob .
{
{
sets a reference to the value .
set
set
<p > setter for map . < / p >
{
{
{
set
sets the objects of the given object .
set
sets a batch of parameters .
set a batch parameter to the value .
inserts a chunk into the list .
returns the entity descriptor for the given entity .
lookup the entity descriptor .
returns the { @link column by column
resolve the table name for the given table .
define parameter .
<p > protected
is
append
{
{
/ * ( non - javadoc )
get
{
include
checks if a named resource is named .
checks if a page is named .
checks if an absolute path is an absolute path .
checks if the page is an absolute .
forward
checks if the request is absolute .
redirect
redirect
returns the full url of the request .
get
checks if the request is included in the request .
gets the base request
returns the uri of the request uri .
resolve
build action path macros
creates a new instance of {
{
{
prints all beans of the specified width .
{
sets the subject term .
sets the message id .
sets the given address .
filter to filter to use of the given address .
filter
filter
filter the given flags .
adds a flag to the email .
filters the given operator by the given milliseconds .
filters a sent date with the given milliseconds .
filter
filter
filter
{
{
{
concat
and
or
encode a byte array into base64 notation .
decodes a base64 encoded by decoding format .
converts the specified value .
/ * ( non - javadoc )
{
checks if the request parameter is gzip .
adds a violation to the list of violations .
{
validate
sets the enabled profile to the user .
sets the enabled profiles .
checks if the profiles in the profiles .
parse
-----------------------------------------------------------------------
adds a new julian date .
return a sub - date of this julian date .
sets the fraction of the fraction
return
standard
sets the rgb sequence of rgb values
bg
bg
returns the index of the index in the specified index .
{
parse
emits a comment .
error
returns true if the given character name is a appropriate case .
creates a hash for the given password .
generate
converts a hex string to a byte array .
{
sets the name of the email .
sets the given { @link datasource .
{
adds an email attachment .
creates an email attachment from a datasource .
build
sets the content id from the email attachment .
{
records a signature .
parses a signature signature .
compute the size of the module .
put the attributes in the given vector .
decodes data from base64 notation .
decodes a query .
{
check
prints the entities in the database .
lookup a method signature .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a method signature .
return
return
/ *
create
returns the advice reader reader for the given advice .
read the advice data .
encrypt
decrypt
sets the logger provider .
gets a logger .
sets the name of the name .
{
{
creates an action .
creates an action request .
{
is
register
destroys a bean .
{
create session properties
/ * ( non - javadoc )
duplicate the term buffers .
main .
allocates a new { @link counter } .
/ *
creates a {
prints an error to channel .
prints the rate rate per line .
reads an existing file from the given location to a mapped to the given location .
closes the replay session .
{
poll the given fragment
{
{
{
{
{
{
{
appends the padding to the end of the term .
sets the {
closes the session .
connects to the aeron server .
connect to the server .
returns the error response for the error response .
checks if an error response is valid .
adds a recorded publication to the specified channel .
adds a recorded publication to the aeron
start the start of the start of the given channel .
stops all recording of a channel .
stops recording
stops all recording of a subscription .
start a replay stream .
stops the replay session .
this method .
list the number of a list of the specified record .
this method returns the number of recordings .
returns the number of recording recording for a given recording id .
returns the next recording position for a given recording id .
returns the last matching matching recording for a given session id .
truncates all recording recording .
returns the list of recording subscriptions .
dump the segment to the given buffer .
event
event handler for the image .
creates a {
creates a {
sends a channel status to a { @link counters
receives a { @link status } .
sets the number of bytes .
appends a range of bytes to the buffer .
removes the subscription
creates a new {
{
returns a map of streams .
prints the contents of the specified { @link outputstream .
generate a new optimal delay .
/ * ( non - javadoc )
/ * ( non - javadoc )
resets the consumer .
reads data from the {
creates a default {
flyweight
adds a label to the label .
poll the given fragment from interface .
documentation inherited from interface
{
return the number of bytes in the image .
returns an image by session id .
iterate over the image .
launches a new { @link archiving .
check if the original channel contains the original channel .
refreshes the catalog catalog .
claim the term
append a unfragmented message to the buffer .
appends a unfragmented message to the buffer .
append a fragmented message to the buffer .
connects to a aeron .
attempts to connect to the aeron .
closes a session .
start recording recording recording .
stops a message stops recording .
stops the subscription recording recording subscription .
this method .
stops a replay session .
this method is called from a given record id .
this method recordings for a given uri .
this method for a message with the given recording id .
this method to extend recording .
this method to get the recording position for a given recording id .
truncates the message to truncate the given position .
returns true if the stop position of a stop position .
find the last matching recording recording recording recording id .
list recording subscriptions for a given pseudo index .
parses the given { @link udp } into an { @link udp } .
return
{
returns the destination address of the given uri .
returns the description of this interface .
closes the subscription } .
adds a subscriber to the subscription .
removes a subscriber from the subscription .
called when a gap is detected .
adds a destination to the transport .
track the rebuild .
inserts a packet into the buffer .
check if the stream )
sends the pending status message .
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
map the counters to the counters
finds the { @link counter for the given the given counters } .
put
returns the {
returns the entity tag .
{
parse the {
adds a session id to the channel .
return
claim the specified term .
append padding
append a unfragmented message .
append a fragmented message .
update the publisher
filters an array of {
allocate a direct allocate and padded and padded and padded .
allocates a new { @link buffer } .
returns the label name for the given type id .
scan the number of a frame .
clears the session id .
validates the channel is valid .
sets the prefix for the channel .
set the media uri .
sets the control mode .
sets the ttl ttl .
sets the uri of the channel .
{
sets the term offset .
set linger
sets the initial position of the channel .
returns the string representation of the control .
send error
opens a datagram channel .
closes the transport .
check if the frame is valid .
receive a datagram address ---
{
{
process timeouts .
resets the consumer .
{
returns the status of the given status .
allocates a new counter .
{
resets this vector to the new buffer .
validates the buffer .
computes the length of the given vectors .
return
creates an instance of {
send
returns a {
creates a { @link supplier the flow } .
creates a multicast flow control supplier .
returns a supplier that can be used to congestion the congestion .
validates the mtu is valid length .
creates a validator validator for the given the termination .
validates the socket buffer lengths .
validate
validates that the session id is valid .
validates that the unblock timeout .
adds an error code .
gets the enabled cluster event codes .
returns all enabled archive event codes for the given enabled archive .
gets the enabled driver event codes .
resets the aeron .
parse a string representation of a cluster .
encodes the given cluster members into a string .
adds the member status publications to the cluster .
closes all member publications .
adds a member status publication .
add cluster ids .
checks if the given cluster has active quorum .
returns the quorum of the cluster .
resets all log positions .
returns true if the given cluster id is reached .
compacts a candidate candidate .
returns true if a cluster has a won t be won t exist .
returns true if the cluster has the given canvass .
returns true if a cluster has a majority vote .
determines the member endpoints .
validates that the member endpoints .
checks if two endpoints .
checks if a cluster is unanimous .
checks if a quorum is a quorum .
compares two log .
compares two log .
returns true if a cluster is not duplicate endpoints .
returns the index of a member in the given member .
returns the member by its id .
adds the given member .
removes the member from the cluster .
returns the high member id of the given cluster .
returns the facing endpoints .
/ * ( non - javadoc )
unblock the given term .
map
return
return
checks if the driver is active .
request the driver for the given cnc .
save
save the error log file .
get the length of the frame in the buffer .
frame
writes a frame type to the buffer .
writes the flags for the buffer .
frame
frame
register
send a datagram ---
find the counter id by recording the recording .
returns the counter id for a session id .
returns the recording id for a given counter .
gets the source identity for a given counter .
returns true if the counter is active .
parses the specified charsequence from a charsequence .
/ * ( non - javadoc )
scans for a gap of gap .
launches a new { @link consensus .
returns the receiver id .
creates a {
{
sets the application specific feedback .
reload
returns the last term recording id .
returns the last term in this map .
{
creates a new recovery plan .
creates a recovery plan . leadership .
appends a term to the log .
appends a snapshot entry to the log .
commits the log position .
{
connects to connect to the aeron .
connect to connect to the aeron .
closes the session .
{
{
/ *
creates a new leader .
unblock the given term buffers .
{
adds a {
check
check
cas active term count .
computes the position of the active term .
compute
stores the default frame header .
apply the default header .
rotate a log .
initialise tail with term id .
return
put a tail of the given {
------------------------------------------------------------------------
returns the number of volatile in the specified {
cas raw tail of raw tail of the tail of the specified partition .
entry point to run .
flyweight
allocates a counter .
find the counter id for a counter .
returns the log position for the given counter id .
returns true if a counter has a replay .
returns the snapshot recording id for a given counter .
converts a set of flags .
creates a report entry .
{
sets the {
try to fill the gap with the given term .
reads the fragments } from the fragments .
{
{
wraps the buffer into the buffer .
put a {
commits the buffer .
abort the buffer .
entry point for testing
launch an embedded { @link context } .
closes the network .
{
{
{
{
{
{
sets the {
{
{
allocates a counter .
find the counter id for a given service .
returns a snapshot of {
prints the contents of the {
scans the specified term .
{
{
{
scans the given { @link term } .
entry point to the consensus .
allocates a new { @link counter } .
starts the aeron .
print the counters .
adds a { @link subscription } .
adds a counter to the counter .
create a new {
/ * ( non - javadoc )
dispatches a {
inserts a packet into the buffer .
creates a new {
adds a slab to the slabs .
/ * ( non - javadoc )
resets the initial state .
sets a byte at the specified index .
adds a new stats
checks if the given comparator is descending .
initializes the page from the page .
initializes the {
{
set
sets the {
set
{
calculates the row ranges of { @link row .
set
convert a list of {
convert
convert a map type to a group .
expands the given glob pattern .
creates a single row ranges .
creates a {
returns a union of two {
returns the intersection of two {
add a range of ranges
converts a long value to an int .
parses a glob pattern .
annotate
/ *
/ * ( non - javadoc )
returns a filter that matches } that matches the given { @link filter } .
returns the first filter matching the criteria .
read all footers in parallel using summary files .
read all footers in parallel using the given configuration .
read all footers in parallel .
read all footers in a parallel .
reads all footers in a parallel .
read a list of the specified file } .
read all footers in the given { @link configuration file .
read summary file .
read a footer from the given file .
read a {
read a {
reads a { @link footer } from the specified } .
opens a parquet file for } .
opens a { @link parquet } from an input file .
reads the next row group .
{
get
reads a dictionary from the specified column .
adds a writer to the list .
removes the writer from the list .
updates the allocation of the parquet memory .
registers a {
starts the server .
starts a block .
starts a column .
write
writes the data page .
writes the data page .
writes a {
writes a {
ends the column .
ends the block .
copies all bytes from the given { @link inputstream } .
end the parquet
merges the metadata files into a list of files .
write the metadata file to the metadata file .
writes the metadata file to the given path .
writes the metadata file .
merges {
merges the {
merges {
reads the value of the binding .
returns true if the given schema is null .
merges the given {
merges two {
merges two {
returns the union of two {
merge two {
returns the {
creates a copy of the given {
/ *
{
/ * ( non - javadoc )
convert a string representation of the value .
parse
return
return
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
finalize
writes the current page
parse
keep
{
start a field .
end
starts the group .
ends the group .
adds a binary value to the delegate .
/ * ( non - javadoc )
returns the comparator that matches } s type { @link primitive .
{
allocates the values in the values in the backing buffer .
unpacks the mini block from a mini block
merges this merge
create a {
{
{
check
check
/ * ( non - javadoc )
checks that an enum is an enum .
gets the {
{
returns a read - only .
{
calculates the bit widths for the delta block buffer .
creates a new { @code record .
/ * ( non - javadoc )
creates a new { @link column .
creates a new { @link unbound } that filters the supplied { @link unbound .
throws an exception if the given .
get the stats based on a primitive type .
creates the stats for the given } .
returns a builder for the given primitive type .
merges the statistics of this {
returns the non - null schema of the given schema .
returns true if the given type is an element type .
creates a new instance } .
creates a new {
<p > get .
invoke
display
/ * ( non - javadoc )
merges the given group )
initializes the counter from the reporter .
/ * ( non - javadoc )
closes a closeable .
get the {
/ * ( non - javadoc )
{
{
{
generate a list of {
creates a { @code column } by value } .
creates a { @code column of { @code column containing { @code value } .
creates a {
creates a new { @code column } by the specified by { @code value .
creates a {
creates a { @code column } from the specified { @code value and value .
creates a new {
creates a {
/ * ( non - debug level . <p >
/ * ( non - javadoc )
log a message .
/ * ( message with extra information ) at the given log level . <p >
{
{
log an error message . <p >
log an error with an error )
creates a new { @link unbound } that filters the specified { @link unbound } .
{
generate the mapping of the given parquet schema .
serializes the given proto class .
creates a new {
creates a {
get the list of missing fields .
check
reads metadata from an {
{
set
add a primitive type to the class .
asserts that the type is valid .
joins all elements of the given string .
joins the given iterator into a string .
join strings
expands a list of wild card paths .
returns the specified long is checked .
creates a {
/ *
writes the meta data file to the output file .
writes data in - array into the buffer .
write a byte array ) buffer )
creates a {
creates a {
{
converts a {
converts a list of {
converts the parquet statistics from parquet . parquet .
{
returns the type of the given primitive type .
/ *
create a new row groups
creates a new instance of the row
get
creates a {
writes the data page to the given buffer .
writes a long to the output stream .
skips the next record to the match .
write an object to the base64
read
adds a new row to the list
adds a new row to the list .
build the {
{
put a value in the cache .
{
write avro value to an avro schema .
set
output content to the given content .
creates a new {
/ * ( non - javadoc )
/ *
creates a class loader for the given jars .
creates a classloader for the given jars .
creates a classloader for the given paths .
{
{
creates a new { @link unbound } from the specified column .
returns a new {
convert
convert
return
returns a {
returns a {
{
{
/ * ( non - javadoc )
returns a map of all the merged key values for the metadata .
get the {
{
{
reads an unsigned short from the input stream .
reads a long from the underlying stream .
creates a {
creates a {
--------------------------------------------------------------------------------------------
/ * ( non - javadoc )
creates a primitive builder for the given primitive type .
returns a primitive builder for the given primitive type .
returns a primitive builder for the given primitive type .
creates a new {
creates a new {
creates a new { @link group .
{
returns true if the given column should be created .
creates a {
get the fields by name .
returns true if the given {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
resolve the schema access schema .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
get the input files from the input files
check that the parquet files in the parquet files .
get the input files from the input directory .
{
creates a filter that filters filter } .
read
reads a heap buffer from the input stream .
reads a {
reads a direct buffer from the input stream .
reads all bytes from the input stream .
consume a {
initialize the map of the job .
{
converts the given {
{
/ * ( non - javadoc )
creates a {
set the {
set
merges the given tuple with the given tuple .
returns the sum of the given tuple of tuples
{
this function .
read a struct .
reads the struct content .
reads the content of the specified set .
reads the map content from the map .
read a map entry .
reads the content of a list .
write
little - endian little - endian little endian int .
little
reads an integer from an integer from the input stream .
reads a zig zag long from an input stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
set
{
wraps an {
convert a collection of objects .
{
create a redaction from a json file .
converts a json string to a string
create
duplicate
create a { @link stage } .
creates the {
creates an interceptor bean .
parses the given schema .
converts milliseconds to millis .
converts milliseconds to days .
get the avro schema from header .
from
upgrade
/ * ( non - javadoc )
copy
resets the state .
reports a health health report .
register a thread health .
stores the control configs in the given runtime
{
returns the ldap entry with the given username .
returns the list of the given user .
build a filter for the given attribute .
{
credential
{
moves all names of the specified names to the specified names .
moves the specified map of the configuration .
get a configuration by name .
re - login context .
upgrade
upgrade the given issues if necessary .
upgrade the given issues is needed .
upgrade the given stage if it is needed .
upgrade services if needed .
upgrade
{
get
returns true if the given name is a system class .
get
/ * ( non - javadoc )
adds the specified element to the list .
returns the value of the given key .
adds all reported errors to the stage .
returns the {
get all file descriptors from a map .
populates all the descriptors and extensions of the map .
returns the {
converts a {
creates a {
sdc
sdc
upgrade
check
convert a {
creates a field from a field .
intercept records from the list of records .
returns the text of the buffer .
checks if the configuration is active .
resolve
resolve library aliases for the given library .
add
validate the stage configuration .
{
/ * ( non - javadoc )
/ *
parses a response from an inputstream .
add the response headers to the response .
write the response header header
write the response header to the record header .
saves the metadata file to disk .
/ * ( non - javadoc )
configure the client .
/ * ( non - javadoc )
resolve
set
/ * make sure that the target target
returns true if the request should be completed .
/ * parse the response .
parse
increment the source offset for the given offset .
clean up the response .
returns the current page of the current page .
/ *
adds the response headers to the response .
resolve all the headers
process a response
returns true if the configuration is defined .
convert a com .
convert
returns the {
get the credentials for the given credentials
{
copy the contents of the buffer to the buffer .
/ * ( non - jar )
removes the logical duplicates from the set of packages .
<p > empty . < / p >
{
find the next main line in the chunk .
resolve a chunk of {
{
closes the connection .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
/ *
get the {
gets the { @link instantiating .
generate a {
generate a {
generate the column type definition .
{
compiles an expression .
digest
add
add
stops the aggregator .
roll the given {
gets the {
serialize an object to a string .
deserializes the given string to an object
deserializes the given file into an object .
{
{
write a record to the output stream .
evaluate the value of an xpath expression
extract the inner map from the list of fields from the list from the list of the list of the inner field .
generate an inner field from the given list of the hive fields .
gets the qualified table name for a given table name .
get the name of the column name from the given record .
get the {
get the partition name value .
returns true if the record is a schema change record .
validates the tbl of tbl .
returns the table name for the given record .
returns the database name for the database .
returns true if the internal value } .
get the location of the given record .
returns the custom location of the given record .
get the avro schema of the avro schema .
returns the data format for the given record .
creates a partition metadata field builder .
creates a schema metadata field builder .
/ *
get the {
generate the avro schema for an avro schema .
validate partition information .
generate a partition path for the given partitions .
generate the avro schema to use of the avro schemas .
returns the cache info for the specified {
sets the parameters of the given record .
handle
get the configuration configuration
build
initialize the gauge map .
generate
handle
init
wait for the query is needed .
get
{
parse
parse
sleep
format
serialize
deserialize live file from string .
refresh
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
returns a {
{
checks if the record contains solr fields .
filters the autogenerated field names .
check
handles an error .
handle an error .
sends a {
parses the dependency name of a jar file .
parse
get the {
closes the cluster .
validate
/ * ( non - javadoc )
returns the label from the given string .
verifies that the dependency exists in the given map
determines if the child of the given dependency .
creates a {
creates a client configuration .
creates a new {
creates a {
calculates user id
read
create an operation from the header
write
write
build subdoc mutation .
convert an action to an exception .
convert an action to a privileged .
{
/ * ( non - javadoc )
/ *
extract a frame from the buffer
configures this instance of the given map .
re - login context .
check if the worker status of the stage .
takes the {
commits the batch .
{
returns the ratio of two strings .
closes the file .
create a detached
/ * create stage for the given stage .
register a function definition .
{
{
{
/ * ( non - javadoc )
{
{
returns the {
get the value of the {
see {
get the definitions for the specified stage
returns the {
format the name of the column .
format
get
creates a draft pipeline fragment .
get all pipelines of pipelines .
imports a pipeline fragment fragment .
{
get
{
closes the file event .
returns the operation from the given record .
get the operation from the given record .
gets the columns to a map of parameters
get
{
{
get the map of map memory from the configuration
tar
get
{
return
destroy
validate
check
get the last shard id for the given stream .
process the queue .
handle
returns the column hash of the column
get
redirect to the request to self - self - token .
{
validate schema and tables
compares two files .
creates a {
truncate the glob pattern directory .
retrieve the pid of the process .
validate
returns a proxy user
roll
returns a snapshot of the active stats .
ensure that the given path exists .
{
format
get the catalog name of the given connection .
{
{
{
retrieves the primary keys of a table
{
write the {
write the given source table to the specified batch table .
write the specified {
generate
detect a map of the partition .
get the partition values from a partition
generate a new partition record .
set
processes the specified value .
returns true if the given {
entry point to mesos .
/ * ( non - javadoc )
configure the jersey client and build the client .
/ * ( non - > sensitive )
<p > headers into a map .
/ * ( non - javadoc )
sets the null values .
get
get
returns the value of a date stamp .
{
/ * ( non - blocking schema .
loads the schema from the registry .
get the schema id from the subject
loads the schema from the registry .
/ * ( non - javadoc )
returns the schema id for the given data .
get the default values for the given schema .
parses all records in - memory .
log
converts a field path to a field name .
/ *
process the response
fieldto
returns the bad records in the given {
compares this version with another version .
initializes the configuration .
returns a collection of the given vertex .
{
{
serialize a map of offset map
deserialize
this method sends a queue .
sends a report for a report .
{
write offsets to the main offset file .
read the cluster offset file from the given path .
creates a new {
[ variable delete ] for the blob .
copies data to the destination blob .
handle
adds an archive to destination .
returns a { @link reader } for the current file .
releases the reader .
setdpmbaseurl
add
parse
select
returns the content type of the given content type
escape string >
serialize an object
deserializes a response to an object .
get the {
initialize the connection
get the table metadata
create the bulk inserter .
create an {
build a schema from the given fields .
get the given string representation to an integer .
add the list of the list
adds the jars to the job .
{
{
{
{
check
checks if the given field name matches the condition expressions .
{
/ * ( non - javadoc )
get
see {
get
get the list of all the stage libraries in the stage .
returns the classpath urls of a classpath .
return the number of the kafka parallelism
given a list of urls to a front of jars .
[ variable .
<pre > {
converts a list of fields to a map .
<pre > {
returns the table description .
validates that the table accepts the table description .
returns the column type for the given field .
returns true if the field is nullable .
get the table schema
get the column properties for a table
gets the class for the given type .
{
/ * ( non - javadoc )
converts the date format to a date format .
translate a command .
{
upgrade
evaluates a field paths
returns true if the given path matches the given field .
releases the lock .
{
{
commits this file to the given output stream .
{
{
parses a {
validates that the stage libraries are required .
/ *
creates a new {
get the aggregator unit for the given aggregator .
creates an instance of the given aggregator .
creates a new {
starts the data window .
stops the aggregator .
creates a map to the aggregator .
resolves the scale or precision expression .
acquires a login manager .
releases the login manager .
closes all the instances .
converts the glob to a regex .
decodes a standalone standalone buffer .
lists the list of the given amazon dynamodb .
gets the list of a list of amazon .
/ * ( non - javadoc )
{
{
stop
produce
create
converts a bound statement to bound to the given record .
/ * ( non - javadoc )
/ * ( non - javadoc )
set
/ * ( non - javadoc )
generate
get the kafka properties
handle partitioning turned or on the table .
acquires a table as needed .
partition
returns the next table in the queue .
report
generate
reads the ahead ahead .
reads a line .
{
register
logout
register
return
retrieve
logs out the user .
update
update the dpm properties .
/ * ( non - javadoc )
/ *
unauthorized
creates a new {
creates a complex schema for a complex type .
creates a schema for the given type .
returns the decimal scale scale or precision value .
returns the default value for the given schema .
initialize metrics if needed .
{
returns the index of the specified group in the specified group .
returns the names of the group names .
returns true if the given string is a slash .
return
returns true if the given string is a valid quote .
returns whether a string is inside a char class .
noncapturing
count
extracts the group info from a named pattern .
replace
replaces the group name with the given prefix .
build
/ * ( non - javadoc )
/ * list of the response .
refresh
returns the list of schemas of the given schema .
expired
{
checks if the channel is fast .
initializes the rabbit configuration for the given channel .
returns the detached stage for a role
extract
{
convert a string to a appropriate appropriate number .
/ *
reads the values from the given buffer .
reads an unsigned short short field from a byte array .
/ * ( non - javadoc )
returns the name of the jdbc type .
get
get the quoted qualified table name .
populates the initial offset from the initial offset .
{
{
create the default field mappings .
create
getsqltypename
returns the table name .
set
{
returns the code
classify the given batch records .
this method .
prepare
{
/ * flatten
creates a runtime .
executes the given record .
{
/ * ( non - javadoc )
/ * build
returns the condition for the given partition column .
get
get the offset format from the columns .
returns a map from source key representation
validates that the actual offset is stored in - memory columns are stored in - as a map .
generates a new { @link bundle } .
generates a new { @link support } .
{
upload a new { @link bundle }
upload
read the number of input stream .
returns the requested { @link bundle
returns the query parameters
/ * ( non - javadoc )
gets the non - empty array .
get the operation for the given table .
converts a double format to a display format .
scan
returns the pending files in the file .
returns true if the rule is whitelisted .
returns {
{
checks if the given list of the given stage .
entry point of the spark .
{
{
propagate
/ * ( non - javadoc )
{
{
validates the report description .
escapes a string .
create a new {
create a { @link jdbc } for the given connection .
upgrade
extracts the named groups from a string .
{
creates a new {
fast
set
{
creates a future .
{
creates a gauge that will be used to run the specified pipeline .
removes a metric from the jmx registry .
{
/ * ( non - javadoc )
generate the header attributes for the given file .
validate the given record .
get
handle
returns an avro input stream from the given record .
get the { @link file } .
write avro data from the avro .
/ * ( non - javadoc )
validates that the given class .
validates that the given resource is valid .
{
{
check
{
prepare
{
generate
initialize the gauge if needed .
handles a stage error .
returns true if the graph ) is cyclic .
use
append
/ * ( non - javadoc )
replaces all properties of the properties of the parent .
get kafka properties
returns the last field name from the path .
escape quotes and back to single slash .
unescape quotes and back to a slash .
standardize
ensure that avro schema exists .
get
wrap
creates the start event .
creates a stop event .
get all the list of a relationship
fix
extract
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - partition
execute
execute a describe query .
{
executes the given query .
executes the given query using the given query .
/ * ( non - javadoc )
executes a batch of pipes .
accept
returns the {
on
accepts a consumer .
get
converts a record object to a map .
gets the value of a field .
check if the configuration is valid .
handle an error .
handle an error .
set
sets the document in the record .
get
get the number of an operation
handle whole file data format .
initialize the gauge map .
returns true if the incomplete ) incomplete )
with
try to the specified class loader .
calls {
calls {
internal
sets the stage .
returns the user attributes .
sets the user attributes .
login
logs out the user .
sets the list of the stage .
replace
ensures that the given path is proper .
generate the jdbc type info field .
generate the {
generate the column type definition for the given jdbc type .
start
/ *
returns the path of a given record ) .
rename the given filesystem to the filesystem .
closes the file event .
handle
{
{
/ * ( non - javadoc )
sets the path separator .
tokenize
to
returns {
sets the offsets of offsets .
get the list of the offsets .
get
get
/ * ( non - javadoc )
creates a new instance of {
{
creates a new {
{
get
gets the metric value .
gets the time from the runner registry
main
serve a file .
decodes the header from the request .
decode multipart form multipart form from the multipart form data
decode
finds the end of the header in the buffer .
returns the boundary of the boundary in the buffer .
/ *
save
creates a {
creates a {
load a keystore from the given keystore .
returns the mime type for a file .
/ * ( non - javadoc )
<p >
stops the server .
add
/ *
send body
creates a new { @link response } .
creates a new fixed response .
creates a fixed length response .
creates a new {
returns true if the gzip is gzip .
reads the websocket payload
encode
replies the text payload .
/ * payload information from the input stream .
/ * ( non - javadoc )
set
unload
removes a session
/ * ( non - javadoc )
/ * ( non - javadoc )
decode
encode
set the domain name pattern .
sets the table name .
/ * ( non - javadoc )
<p > serializer . < / p >
/ *
/ * ( non - javadoc )
/ * ( non - null country
{
sets the {
/ * ( non - javadoc )
remember
returns the name of the given principal .
/ * ------------------------------------------------------------
/ *
resolves the principal name for the session .
/ * ( non - javadoc )
gets a session by id .
returns the session bound hash for a session
{
returns the jndi name for the jndi name .
returns the canonical parameter types of the given method .
/ * ( non - javadoc )
/ * ( non - javadoc )
初始化
returns the current transaction .
returns the raw attribute value for the given attribute .
/ * ( non - javadoc )
{
returns the list of contained entries .
/ * ( non - javadoc )
read server config dependencies for the server names of the server .
validate the incoming principal .
assert that the given class validity of the given .
initialize the orb .
initializes this object .
binds an array of components to the specified component .
/ *
cleans up the contexts from the cache .
return
/ *
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
checks if the current loopback lock .
dec
read
add a bean
add the bean deployment deployment modules .
adds a service
get the policy name for the policy .
/ * ( non - javadoc )
/ * ( non - javadoc )
handle
get
/ * ( non - javadoc )
authenticate the security identity .
loads a module adapter for the specified adapter .
load the persistence provider .
{
/ * ( non - registered timer .
calculate the accessibility graph for the given deployment .
make sure that the top level bdas from the bean .
load
{
set
get the security meta data for a list of securityconstraintsmd .
gets the servlet url patterns .
gets the servlet class mappings .
resolves the {
{
get the available connectors of the given operation .
get the resource value .
parses the core environment element .
parses the process process id of the process id .
creates the {
returns true if the hibernate bean manager manager is supported .
returns the {
sets the {
returns the {
returns true if the operation } .
create a composite operation that } .
create a { @link map } .
creates a new {
creates a {
creates a write attribute for the given address
creates an operation that will be used to the given address .
{
adds a new url context factory to the url .
removes a url context factory .
/ * ( non - javadoc )
loads the validation providers from the given classloader .
/ * ( non - javadoc )
{
get
get the message destination refs .
modify the given {
configure endpoints
modify the context root .
returns the name of the transport class
/ * ( non - javadoc )
get
/ * filter out of activation properties .
/ * ( non - javadoc )
creates a new { @link security .
sets the security
returns the {
clears the security context .
returns the given {
removes the outgoing run as identity .
process the management deployment .
get the security domain name for the given deployment unit .
creates a new description .
install the binder service .
install the binder service .
/ * ( non - javadoc )
{
returns true if the given property type is a property type .
find a method in the given class .
find a field in the given class .
{
/ * ( non - javadoc )
escapes a string in a string .
initialize options
describe the description .
{
derive
/ * ( non - javadoc )
create a {
collect the current jdr )
registers a {
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
build
build the message info .
returns the subject
read an attribute name attribute . xml .
read an attribute value .
reads required attributes from the given reader .
{
add all the persistence unit for the given holder .
registers the transformers transformers .
creates a new {
write
{
/ * ( non - null exception is declared .
convert
{
{
returns a set of potential view interfaces .
get the potential view interfaces for the given class .
stores an entity manager in - transaction )
writes the filter to the writer .
resolves a list of {
create a security context .
sets the security
writes the content of the given {
put
add
returns the lock owner for the given synchronization registry .
releases an instance .
releases the given {
add
add a virtual file ) file .
add
add
add
create
adds the jsf filter to the module
add
returns the {
{
get the { @link method } for the given method .
checks if the given method matches the given method .
creates the management statistics resource .
{
get the { @link credential } for the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
get the security domain domain for a deployment .
check if the given endpoint is secure .
get the transport guarantee for the given endpoint .
gets the ejb security meta data for the given endpoint .
get the next security domain .
ensure that the security domain is same as the old .
get the value of the resource .
{
sets the idl the idl in the idl name .
{
returns the jndi name for the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
checks if the transaction is in the transaction
returns the {
get
get
return
returns a { @link exception } with the name .
creates a new { with the } and cause .
thrown when a { @link string with the specified .
creates a new exception is an exception .
returns an enumeration to a naming enumeration .
check if the value is a valid xml representation
unbinds the context
/ *
{
return the {
parse the connection attributes 5 5 .
parse the connection definitions 5 . 1 .
parses the connection definitions 1 .
/ *
creates a new instance .
creates a new {
construct the component instance .
stops the interceptor .
/ *
/ *
resolves the runtime name for the given address .
{
checks if a managed bean class validity .
creates a {
{
/ * ( non - javadoc )
returns the primitive analysis of the given class .
shuts down the invocation .
creates the { @link factory } .
get
returns the servlets for the given jbosswebmetadata .
returns a list of servlet mappings .
returns the security constraints for a given jbosswebmd .
get
returns a list of context params .
gets the web resource collections for a security constraint .
get the servlet init params for a servlet .
creates a { @link securityconstraintmd .
creates a web resource collection .
creates a servlet .
creates a new { @link list .
creates a new { @link authconstraintmd } .
creates a { @link userdataconstraintmd } .
creates a new { @link param } .
creates a new {
{
{
reads an interceptor binding .
registers the session bean bean interceptors .
creates a new copy of the given { @link byte } .
creates a new { @link tagged } for the specified metadata .
create a {
creates an array of compound mechanisms .
creates a {
creates an {
creates a transport mech for the specified codec .
creates a transport address from the given host and port .
create the number of the given target
/ *
return
converts an array of bytes for the byte array of bytes .
encode
decodes an initial context token token } from the given byte array .
decodes a byte array of an encoded name .
get the matching security mech from the security
{
process descriptor entries
process injection targets .
{
returns the jndi name of the given node .
/ * ( non - javadoc )
resolve an attribute .
/ * ( non - javadoc )
read an xmlstreamreader from an xml file .
/ * ( non - javadoc )
get
get all security constraints for a jbosswebmetadata
/ * ( non - javadoc )
returns true if a pooled connection adapter is pooled .
determine if the given resource adapter targets are external .
gets the value
find the persistence
returns the default persistence unit name for the given persistence unit .
{
returns true if a class contains an annotation .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
completes the invocation is completed )
/ * ( non - javadoc )
called when the {
{
{
{
returns the capability service name .
create the resource roots .
{
/ * ( non - javadoc )
detach the query non - tx .
/ *
gets the reference to the reference .
{
{
process the view annotations for the given deployment unit .
{
get the set of the given in the deployment .
checks if the given class file file transformer .
checks if the given persistence unit is two phase .
returns true if the given persistence unit metadata .
<p > close entity from the given entity .
checks if the given { @link map } is mixed .
checks if the given map } is joined to joined unsync persistence context .
{
connect
returns an orb for a server .
creates an orb from the given applet .
initializes the method
sets the active naming store .
initialize the naming manager .
{
binds a named object to the named object .
{
{
{
{
renames an existing entity .
returns an enumeration of {
{
{
{
{
compose the name of a parse name .
adds a property to the environment .
{
{
{
/ * ( non - javadoc )
/ * validate
get the list of converters for a composite index .
get the list of resouce classes for the given composite index .
/ *
lookup the default value of the given annotation .
validate
{
/ * ( non - javadoc )
register
gets the deferred entity managers .
convert a status of a rolling status .
check if the given attribute is defined .
creates the {
creates the {
starts the cache .
adds cache dependencies to the cache .
stops the cache .
{
extracts all the dialects from the database .
investigate
/ * ---
check
convert the given date to a scheduler to a scheduler .
set
marks the given unit as a deployment .
returns true if the deployment is a part of the deployment .
read
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the value
create a description object .
/ *
searches for a class by its depth of indexes .
/ * ( non - javadoc )
begin
ends the sfsb creation creation creation .
returns the map of extended entity manager .
push the extended call to the given map .
removes the call to {
returns the current call .
{
process the xml managed beans .
process the phase listeners .
get
isvalidrmiiiop
insert
return the given name to a hex string .
returns the name of a class name .
return
islegalidlidentifierchar
get
returns the signature of a class .
returns the signature of a method .
primitivetypeidlname
{
create a batch mapping for a given name .
binds the jndi services .
{
creates an { @link bean for the given component .
get the value of the deployment .
get
{
{
{
{
converts a security role to a security role .
consider
returns the java name of the given class .
returns the most recent recent recent recent entity version .
load timers from a map
gets the directory name .
{
creates a pattern that matches the given pattern .
/ * ( non - javadoc )
return
add a listener to the target scope .
remove a listener .
fires an event to all registered listeners .
closes a {
create the subject to use in subject
create a subject .
creates a subject from the given authentication context .
get the current service container .
adds a private credential to the subject .
creates a { @link agroal } .
get the {
{
creates an object factory .
{
/ * ( non - javadoc )
adds a {
load
displayable
subst
{
{
reads the transport configuration for the given context .
adds the ear prefix if it is configured in the deployment .
get
returns the service name .
creates a {
creates an {
gets the reference to the reference .
returns the list of { @link interceptor } of { @link method .
add a {
add an interceptor to the container .
returns the client interceptors for a given method
add a client interceptor to the list .
/ * ( non - client interceptor
put private methods
create a classloader for the given classloader .
read an unexpected element .
removes the given resource in the current step .
creates a new connection factory attributes .
returns the list of a given unit .
gets the jaxws of the given unit .
gets the endpoint name .
get
get the servlet for the given name .
returns the value of the specified { @link attachment .
gets an optional attachment from the deployment unit .
get the jbosswebmetadata for a given unit .
get the jbossportcomponentmetadata with the specified name .
get an ejb ejb endpoint for the given ejb deployment .
returns the root context for the specified deployment .
{
{
get configuration properties
setup the orb .
check if the ssl server is configured
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
pop
returns the entity manager by name .
registers a {
{
{
process
update server config
{
/ * ( non - javadoc )
{
starts a queue .
throws
return
gets the reference to the reference .
lookup a search by name .
{
/ *
create a description of this object .
decodes a string .
decodes a string .
encode a string into base64 format .
creates a new deployment model .
creates a new http endpoint .
creates a new deployment deployment .
returns the uri from the request
create the initial context token .
returns true if the deployment is jaxrs
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the next timeout .
/ * ( non - javadoc )
{
/ *
set
merges the deployment }
get the method roles as principals ) as principals .
gets the reference to the reference .
create a description of the module .
{
set up the jaspi to the deployment
sets the authorization manager .
parse
add the remote transactions to the deployment .
add the transaction manager dependencies .
{
{
returns true if the security level security level security metadata .
get all container interceptors .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - null value .
/ * ( non - static method is a method level .
/ * ( non - javadoc )
{
returns the service name for the given module .
abbrev
creates a new cdrstreamreader for a string .
creates a valuetype writer for a string .
returns a reader for the given class .
returns a new instance of the given class .
merges the injections for the actual class .
/ * package is only
refresh all the job instances .
try to runtime queue .
creates a copy of connection factory .
get
get
get
get
get the {
get the {
get the {
get the {
parses a string representation of a name
convert a name to an array of cos .
cos
convert a name to a name .
converts a string to a stringified vector .
/ *
escapes the string in string
{
/ *
/ *
/ * ( non - javadoc )
authenticate the security identity .
returns {
/ * ( non - javadoc )
{
creates a bean
configure
dispatches lifecycle
adds a remoting receiver connection ref .
creates a reference to a service .
{
returns the current {
converts the bean name to a bean name .
converts a service name to a service name .
get
find a class by name .
{
assert
{
/ * ( non - javadoc )
/ * parse all the persistence unit .
normalize the persistence unit metadata .
creates the bean name from the persistence unit .
define a new connection factory .
parameter
validates the given descriptor .
{
{
/ * ( non - app attachment
creates the web app descriptor .
set the security domain name for the given deployment .
creates servlets
create the servlet mappings
create security constraints
create the login config
create the security roles .
gets the auth method for the given deployment .
{
handle stateless session bean .
loads the stub class for the given class .
<p > id for the given search id .
/ *
scoped
{
{
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
remove all cached deployment providers from the classloader .
adds a set of the deployment
find the parent module cl .
read the element 1 element 1 .
read the element 1 . 1 .
/ * parse the xml 1 .
/ * ------------------------------------------------- [ parseorbconfig ] ---------------------------------------------------
/ * process attributes from the given in the reader .
/ *
/ * parse tree from the given node .
/ *
parses the xml configuration .
parses the interop config .
/ * security config 1 .
/ *
parses the properties config .
/ * this property 1 .
/ *
parse the attributes of the given xmlextendedstreamreader .
/ * write out of the xml node .
/ * write out of the xml node .
/ * write config config
/ * write interop
write the security config
/ * generic properties of the given node .
write attributes
checks if the given node is writable .
{
returns all persistence unit refs for the persistence unit .
get the persistence context refs for the given deployment unit .
{
/ * ( non - private methods
{
{
reject
add pu
deploy the persistence unit .
deploy the persistence unit phase one .
sets the annotation indexes for the given deployment unit .
gets the persistence provider adaptor
save
looks up the provider
parse the next phase depends on the persistence unit .
adds the management console to the deployment .
get the resource .
{
creates a new ejbarchivemetadata .
build the meta data for the deployment .
build the meta data .
validates the given {
add a participant
get the application name for the deployment .
returns the ear name of the ear .
gets the reference to the reference .
creates a description .
{
parse the object factory methods
convert a virtual nodes to a string .
handle an exception .
binds the service to the given target service .
{
get an analysis for the specified class .
lookup the analysis for the given class .
creates an analysis in the progress progress .
returns the idl module name .
to
to
checks if the given method is an accessor .
returns true if this method is a method .
checks if the given method has non - app exceptions .
analyze fields .
analyze the interfaces for each interface .
/ * ------------------------------------------------------------ methods
/ * ------------------------------------------------------------
returns the write name of the attribute .
analyze the constant analysis methods
analyze the attributes for each attribute .
/ * ------------------------------------------------------------
/ *
calculate
return
calculate the repository id .
{
{
parse xml attributes .
parses the default context propagation element .
process attributes .
load
entry point of the application .
gets the reference to the reference .
describe a description of this object .
create a new add operation handler .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
/ * /////////////////////////////////////////////////////////
/ * ( non - javadoc )
{
invoke the given input stream .
{
authenticate the security identity .
returns the {
setupjndibindings
creates a new session
infer the destination name from the jms queue .
{
{
{
{
/ *
set
returns true if the given metric is enabled .
registers an endpoint handlers .
register passivation 1 .
create the policies for the given poa .
generate the method code .
generates the code for the given analysis .
creates a class code for the given interface .
compile
create a {
gets the xml names of the job xml names .
/ * ------------------------------------------------------------ .
get
parse an instance of an url .
init the orb and root context .
/ * initialize the iiop
initialize the orb
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ *
binds the named object .
binds the specified object to the specified object .
unbind the specified component .
/ * ( non - javadoc
renames a composite name .
renames an existing name .
/ *
/ *
{
binds a new context to the given path .
creates a composite .
{
adds a property to the environment .
removes the value of the named property
adds the transformations to the builder .
/ * ( non - javadoc )
{
{
write the xml start of the xml pool
writes an entity bean bean to the entity pool .
writes the passivation
/ * writes the file passivation to the passivation
/ * ( non - javadoc )
get the {
get the authorization manager
get the identity trust manager
get
{
remove a security domain
/ *
{
create a new {
create an instance of {
creates an instance of {
creates an instance of the audit manager .
creates an instance of {
creates a mapping
set the deep copy subject mode .
gets the type of the given string .
creates a new instance of the given type .
creates a new modular . < / p >
creates a new instance .
{
{
entry point for command line .
parse the remoting receiver .
returns a primitive sequence of the given type .
wait for a service to finish .
computes the masked password .
initialize the security vault .
{
adds a secured attribute to the vault .
{
{
{
{
attribute
display
vault
adds a resource value to the deployment .
checks if the given value } is not { @code null } .
returns the name of the deployment
/ * ( non - javadoc )
insert
{
{
returns whether a given action .
returns the actions of this action .
returns a new {
return true if the jndi name is path0 .
returns the name of the log .
{
sends a notification notification
/ * ( non - javadoc )
{
/ *
/ * ( non - javadoc )
returns true if the given webdata has boot ) boot classes .
<p > invoke . security .
{
gets the value of the given type .
returns the context service ) service name .
get all interceptor interceptors .
/ * ( non - javadoc )
add a method interceptor to the list .
sets the method interceptors for the given interceptor .
/ * ( non - javadoc )
sets the naming mode .
add a dependency .
returns the component interceptors for a given method .
returns a list of {
adds an interceptor
add the component interceptors ) component interceptors
adds a component interceptor to the list .
adds the component interceptors for the given method .
add an interceptor to the list of {
get all the list of {
add an {
returns all the post construct the list of the interceptor factories .
add a post construct )
returns all the list of ) interceptors
/ * ( non - javadoc )
returns all the list of pre - passivate interceptors .
/ * ( non - javadoc )
this method is used to get all the interceptor
adds a post activate interceptor .
set
{
get the module for the given class loader .
returns the protection domain for the given class .
find the list of the given module
removes the given entries from the given list of entries .
sets the {
accept
returns a {
returns a {
create a new bind for the given module .
binds an info for a module .
binds the jndi name to the given jndi .
/ * ( non - javadoc )
get the raw attribute of an attribute .
{
binds a value } to the given service .
get the cache information .
gets the reference to the reference .
get the type of the type of the vm .
creates a description object .
returns an array of the value members .
returns the value members for the given type code .
{
creates the subsystem root address .
/ *
{
{
{
{
/ * ( non - javadoc )
{
creates a service name for the given deployment .
add a component to the deployment .
adds a message destination .
gets the components for a given view name .
gets the components for a component .
get the components of the specified component .
/ *
builds the transformers2 1 1 .
build the transformers1 4 4 4 . 0 4 .
build the transformers1 3 .
reject defined attribute with default value .
rename an attribute .
returns the connection principals for the current user .
push a new context .
pop the identity from the cache .
returns a {
{
lookup the security domain for the given security management .
loads the manually manually manually .
check if the active version of {
compute the jsf version for the jsf
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
get the { @link interceptor .
destroys the interceptor .
configures the credential .
{
populate the given model
returns the constant type code code for the given class .
get the type code code for the given class .
adds the type code to the given class .
get the java for the object
/ *
getjavaxrmicorbaclassdesc
ensure that a package exists in the container .
add constants to the ca container .
adds the attributes of the given analysis
adds the operations to the analysis
add
add an abstract valuetypes to the analysis
adds a class to the analysis .
adds an array of value
adds an interface definition definition definition
/ *
adds an exception to the analysis .
gets the class level injection type .
register
check if the jts node is enabled .
{
{
/ * ( non - javadoc )
{
configure token providers
configure the list of handlers .
checks if the given method type is allowed .
checks if the given method is valid .
throws an {
throws an exception if the given type .
get the security domain domain name for a deployment unit .
get all component classes for a composite unit
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
creates a timer .
creates a calendar timer .
/ * ( non - javadoc )
/ *
suspend all timers .
restores the list of the active
starts the timer .
returns true if the current {
schedules a timeout for the given timer .
cancels the timeout .
returns a map of the waiting timers
set
/ * ( non - javadoc )
returns true if the given bean is implemented .
returns the default local view of the given bean .
filters the interfaces of the given interfaces .
process the acceptors .
returns a map of extra parameters .
get the parameters for the given operation
process the connectors .
list of children of the children of a group .
create a deployment service name for the deployment .
converts a type to a class .
convert a value to a value .
get
finds a method in the specified index .
find a method in the given class .
checks if the given array is a simple check .
get the persistence unit metadata from the persistence unit .
{
get
/ *
adds the given property .
adds properties
observe the {
checks if the health check after the deployment check .
closes the {
{
{
bind
/ * ( non - javadoc )
{
converts an enum value to an enum .
returns an optional {
returns the value } to } to a { @link node } .
returns an {
returns an {
returns an {
returns the {
returns the value of a { @link property .
returns the {
returns an {
returns an enum value of the given node } .
create the resource root resource root .
constructs a builder for the runtime only read only .
create a builder for the given runtime only .
returns all granted roles for the given security identity .
skips the specified amount of bytes .
/ * ( non - javadoc )
checks that the given xml elements are not both elements .
invoke an operation
{
{
{
{
{
invokes the given operation on the given arguments )
invokes the given operation on the given operation
{
create the {
add or get
adds a component to this component .
add
{
{
binds the named object to the given name .
{
{
{
{
list the list of nodes of the named by name .
list all bindings for a given name .
{
{
returns the principal associated with the given subject
read the server element 1 .
{
/ * ( non - javadoc )
adds a factory to the registry .
save the context properties .
{
add a collection of {
{
create the security realm .
creates an io subsystem for the given base address .
creates the welcome content handler .
gets the default resource adapter name .
get
releases an object .
/ * ( non - operations )
analyze the operations .
calculate the analysis
calculate
collect metric metrics for a resource .
/ *
/ *
publish the publish monitor
stops web app .
{
{
{
add a {
register an endpoint config .
add the {
{
/ * ( non - javadoc )
retry
post
{
returns the declared methods of the specified class .
gets all fields of the specified class .
sets the {
get the constructor of the specified class .
get a method by name .
fix
adds the migration to the migration .
returns true if the parameter is allowed is allowed is allowed .
migrate the generic transport class .
sets the attribute to the given node definition .
{
{
{
cancels the current state .
/ *
sets the type of the global type .
get the page data from the buffer .
creates a log sequence number from the given data .
clone the given an object .
{
{
create an index definition definition .
extracts the field name from a field definition .
/ * ( non - javadoc )
calculates the number of indexed
find all classes in the given package .
returns a list of classes of classes ) of the given package .
returns the generic types of the given class .
get
is
execute this method .
{
derive the field type .
execute the role .
update the record with the given record .
/ * ( non - memory cache .
{
{
{
{
{
/ * ( non - javadoc )
{
create an edge } .
calculate the sharding strategy for the given query
get the minimal set of clusters for a sharded query
returns the list of servers that are not been that are not been that are not yet been that are not been found in the cluster .
calculate
translate a projection to a projection
returns true if the given item is distinct .
returns true if the query is minimal query .
splits the given {
move a list of flatteded expressions .
this method to order by projections
calculates the additional order by projections
splits the projections into projections
add a group by its projections
extract the sub queries from the planning
returns true if the cluster is in the given clusters
handle class = sort
returns true if the given oclass is a diamond hierarchy .
returns the order direction of the order of the query
returns true if the given condition key requires a multiple index .
finds the best index for the given indexes .
find the list of the given descriptors .
returns true if the given {
/ * index search descriptor .
build an index search descriptor for the given index .
common
creates a new {
create an object from a stream .
converts this object to a string .
execute the record method .
{
checks if the given resource is defined in the given resource .
get the compact server status for a server .
initializes the system database .
load all local databases .
/ * ( non - javadoc )
/ * ( non - javadoc )
assign the lock the lock manager from the lock .
{
{
{
{
/ * ( non - javadoc )
/ *
/ *
/ * ( non - commit .
update
prepare the given path for the given path .
moves a path to the target } .
returns a list of disjoint patterns .
executes the given nodes in the local node .
/ * ( non - javadoc )
parse
{
{
merges the short from the given buffer
merges the given {
merge long from buffer from the given buffers
splits a short to the buffers
splits the given {
splits a long into a byte buffer
{
{
{
{
run the database . schema .
run the first element )
returns the value at the given index .
shrink
creates the channel .
checks the number of the header .
opens the file .
closes the file .
delete the file .
replace the content of the file .
/ * ( non - javadoc )
ends an end request .
create the binary dns dns dns loadbalancing .
add
send a request to the server .
{
{
returns the {
get the index of a string index .
{
connect to the server .
connect to the server .
{
{
{
interrupt the channel .
disconnects from the connection ---
push
swap the elements of the specified elements
{
/ * update the edge .
changes the pointer of the vertex .
returns true if this record is a record instance .
{
/ *
generate the schema .
/ * ( non - anonymous schema .
updates the metric metadata .
returns the next record in the set .
{
{
{
{
{
reads the next character from the input stream .
execute the command .
creates a { @link obinaryresponse .
creates a {
parses a string representation of a string .
/ * ( non - javadoc )
registers a compression instance .
/ * ( non - files )
get the memory limit .
gets the physical memory size .
/ * ( non - javadoc )
{
sets the {
moves this buffer to the specified position .
returns a byte array representation of this buffer .
sets the content of this buffer .
fills the buffer with the given filler .
/ * execute
execute the full step
convert an object to a stream .
gets the generic types of an object .
{
{
{
{
writes the specified {
loads the configuration from the storage .
write the given network version into a stream .
check if an array contains an array
<p > checks if the array contains the specified element . < / p >
{
rebind
assigns the default aliases to the list of expressions .
{
{
this method to update at the given pattern .
returns a list of topological sorted by the given pattern .
adds a single result to the request .
builds a select statement .
{
{
add an index definition to the index definition .
{
returns the value of the given index in the index .
{
{
{
gets the ddl value of an index .
execute the command .
splits an aggregation for an aggregation
/ *
returns true if this chain ) field chain ) .
return the collate for the given object .
get
set
advance
/ * ( non - javadoc )
{
build
execute the query .
/ * ( non - javadoc )
parse the return value .
check if the password .
creates the hash of the given input .
checks if the given algorithm is supported .
creates a new index .
rebuilds the index of the index .
order
{
/ * ( non - javadoc )
{
{
gets the ddl key for the given index .
returns a byte array to a byte array .
/ *
remove an edge from the graph .
execute the database .
checks if the page is up to be filled .
{
/ *
/ * ( non - case .
{
{
{
{
merges this {
{
gets the values of the entry at the entry index .
create a cluster .
free a cluster .
startup
{
creates a singleton {
grants the given { @link orole .
revoke the given resource to the given resource .
{
{
/ * ( non - javadoc )
converts the given plan
{
{
binds parameters }
/ * convert to the list .
traverses the pattern edge .
convert the value to an enum .
returns the type of a string .
returns the type of the given string .
get the type value of a string .
{
increments the specified value at the given index .
resets the table .
returns the index of the specified item in the table .
spread the given an integer .
creates an index for the given type .
drop the indexes of the database .
returns the index of the owner .
/ * ( non - javadoc )
execute .
adds a key to the list .
creates an index .
{
sets the server role .
adds a new node in the server list .
sets the owner of the cluster .
remove a list of the given node .
sets the list of the server offline node .
configures the storage
{
remove listener }
register a database .
dispatches a response to a thread .
timeout
/ * ( non - javadoc )
creates a new database .
execute a delete record .
execute a read record .
{
/ * ( non - javadoc )
try to merge this ) of the same value ) into this one .
delete
transform
execute the database .
closes the pool .
on
returns a set of function names .
returns a set of collate names of the factories .
returns the names of all command names .
get the field size and type from the current position .
/ * ( non - javadoc )
write headers to the response .
write records to the response .
write a record .
sends a message to the server .
sends a stream to the server .
{
returns the next record in the list .
{
{
opens a {
/ * ( non - blocking configuration .
set
{
{
/ * ( non - running )
start a component operation .
complete the component operation
get the read speed from the cache
get the read speed from a file in pages .
get the amount of pages of the specified component .
get the amount of pages of the specified component .
gets the write speed in the cache ) for the given component .
gets the amount of pages ) written in the cache .
gets the cache hits for the specified component .
gets the amount of pages ) of the given component .
push
push
push
push
push component counters
{
increment the cache access to the cache )
stops the write cache flush timer .
stops the fuzzy checkpoint timer .
stop the page read from the cache .
stops the full checkpoint timer .
stops the page write in the cache .
stops the commit timer .
/ *
/ *
make a snapshot of the snapshot is needed to be used in the cache .
{
get a ostatement from the database
returns the ostatement for the given statement .
parses the given string from the given string .
starts the server .
starts the receive messages .
initializes the timer
init
check
serialize a obroadcastmessage message .
encrypt
removes the record from the graph .
sets the properties of this graph .
{
{
/ * ( non - javadoc )
saves the current element to the graph .
{
{
{
detaches the graph from the graph .
attaches the graph to the graph .
returns the active {
{
checks if the given class is in the schema .
sets the properties of this graph .
returns the value mapped by {
wraps a {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
define a vertex attribute ) .
define an edge attribute ) an edge strategy .
{
{
{
{
{
{
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
add an index entry .
merge two lists of the two lists .
/ *
config
returns the user for the given username .
checks if a resource is authorized .
update this record .
/ * update edge .
/ *
execute indexed function .
/ *
{
{
{
{
{
/ * ( non - javadoc )
opens a { @link odatabasesession .
opens a {
create a database
creates a new instance
checks if the database exists .
creates a {
creates a collection of the given {
find the best index of the given indexes .
/ * ( non - javadoc )
{
creates the set of the given index .
updates the counter
writes a page to the cache .
reads the page from the cache .
truncates the specified page .
reads a page buffer .
forces the file to disk .
closes the file .
opens the file .
{
returns true if the replication is active .
returns a new node strategy .
returns true if this cluster is synchronous .
returns true if the value is a read - your your cluster .
returns a map of all servers in the given in - memory cluster .
returns a list of owned clusters by server names of the given cluster .
returns the list of all configured servers .
returns true if all clusters is containing all clusters
checks if a server containing a server containing the given cluster .
returns a list of servers in the given cluster .
returns the list of master servers .
returns all configured configured servers .
returns the list of the given node .
returns all clusters owned by server name
returns the owner of the cluster .
returns the owner of the cluster .
returns a list of configured servers for the given cluster .
returns the server role .
returns the set of all registered servers .
returns all data centers .
get
returns true if the servers are sharded .
get the data center servers for a given data center .
returns the data center of a server .
gets the global read quorum .
get the number of a quorum .
returns the write quorum of a quorum .
returns the cluster configuration for the given cluster .
gets the data center configuration .
gets the quorum of the quorum .
clear
encodes the class names of the class names .
get the names of the edge of the edge of the given edge .
encodes a class name .
decode the class name .
configures the graph .
{
{
{
adds a vertex to the orient .
adds a vertex to the orient .
adds a temporary vertex to the graph .
{
returns the vertex with the given id .
returns an iterable of vertices of the given class .
returns an iterable of the given a given key .
returns a vertex by key .
returns an iterable containing the specified vertices .
get all edges
{
get the edge for the given id .
reuse this graph .
closes the database .
/ *
returns the vertex type of the given type .
creates a vertex type .
create a vertex type .
create a vertex type .
drop the vertex type .
gets the edge type for the given the type .
creates a new edge type .
create an edge type .
create an edge type .
returns the element with the given id .
{
{
{
returns the indexed keys of the given element .
removes all edges from the given vertex .
removes the inverse edge from the graph .
deletes an immutable edge if it is not in the document .
{
notifies all registered exception event that indicates that the background exception .
frees the free page check after the new page .
read the name of the name map .
{
{
starts the thread monitoring .
starts the monitoring monitoring .
stops all the cache .
registermbean
unregistermbean
/ * ( non - javadoc )
{
fetch the list of cache counters in the cache .
fetch all the system counters for the given holder .
fetch all counters for a component .
updates the list of dead threads .
gets the value for the given entry .
compress
returns the value of the specified name .
creates a new instance of the <code > permission / code > .
detaches the given {
removes all objects from the specified {
saves this record to the disk .
saves the given object to the database .
saves the given object to the database .
returns the version of this user .
register
execute this command .
convert parameters
sets the dirty record .
unset
convert
returns the set of the index types .
returns a set of index engines .
create an index by name } .
collect response
sets the local result of this node .
waits for a node to finish .
returns the list of missing nodes .
get the conflict of the conflict .
returns the best group group groups
compute the quorum response .
returns the list of the received responses .
get a new oexecutionplan for a given statement
/ *
gets the match pattern involved in - memory aliases .
{
gets the library for the specified library .
acquires a database engine .
releases a database engine .
unbind the specified script engine from the given binding .
gets the next position in the cache .
update
removes the given identifiable from the counter .
process and block index .
gets the value of the given object
returns the value at the given index .
/ * ( non - used fields are used by the given index .
returns the index of the first index of the first occurrence of the specified text .
returns the index of the specified text .
returns the index of the specified text .
returns true if the text starts with the specified .
sets the fetch plan .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
returns a map of dependencies that match .
sorts the edges in the given map .
assigns the default aliases for the default aliases .
creates a pojo for the given class .
deregisters all entity classes from the specified package .
/ * ( non - javadoc )
register
sets the handler
acquires a user .
returns the number of available connections for the pool .
acquires an access to this method .
{
dumps this message to log .
returns an iterator of the given class loader .
get
check the cache memory configuration .
fix
creates a vertex vertex from a json stream .
creates a { @link vertex } .
creates a { @link edge } from a json edge .
creates a { @link edge } from a json string .
creates a { @link edge } from a json vertex .
convert an element to a {
/ *
creates a { @link vertex } .
creates an { @link edge } from a json vertex .
creates a json representation from an {
creates a { @link ographsonutility } from an { @link element } .
{
returns the odocument
{
{
{
returns a comparator for the given class .
returns the active cluster map .
/ * ( non - javadoc )
{
get the index of an index .
separate
creates a { @link osymmetrickey } from the given { @link osymmetrickey .
load system variables from a file .
creates a osymmetrickey from an { @link stream } .
load a keystore from a keystore .
creates a new { @link keystore .
encrypt a string .
encrypts a byte array with the specified bytes .
<p > decrypt
decrypt
save the content of this base64key .
saves the key / value .
{
{
{
sets the child .
adds the specified object to the unique result .
{
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
convert the value to an object .
authenticates the user .
gets the map entry .
returns true if the other content of the same content has the same content .
checks if the same content of the given {
/ * ( non - javadoc .
get the record for this record .
reads the current record from the current record .
import a delta from the database .
/ * ( non - javadoc )
returns the simple heuristic cost for the specified factor .
returns the cost of the manhatan heuristic .
returns the cost of the diagonal heuristic .
returns the cost of the euclidean euclidean cost .
returns the heuristic cost of the heuristic cost .
{
returns the no - tx .
get a database for this pool .
{
set up the pool factory .
gets the value of the given property .
{
/ *
get
returns the token at the given index .
/ * ( non - javadoc )
get the name of the connection field .
returns the name of the name .
replace
gets the edge of the given field .
{
{
{
{
moves the specified class to the specified cluster .
{
adds an edge to the graph .
adds an edge to this graph .
{
{
{
{
{
get the connection class name .
gets the connection .
get the list of the connection fields in the given direction .
process broken rids .
{
/ * ( non - javadoc )
{
{
{
installs a database from the specified network .
{
creates a role for the given role .
{
get the text of the parser
waits for the next retry .
returns the argument at the given position .
returns the number of parameters matching the given request names .
connects to the server .
list all databases available databases .
get the server info .
creates a new database .
creates a database .
checks if a database exists .
drops a database .
starts a database .
releases a database .
cluster
{
gets the graph for the given graph .
parse
reset the sequence of the server .
saves this record to the disk .
deletes a record .
config
returns the authentication header for the database
config
/ *
{
returns a user by username .
/ * ( non - javadoc )
constructor .
constructor .
constructor .
constructor .
constructor .
constructor .
adjust
{
{
{
sets the pointer pointer for the given page .
returns the bucket pointer for the given offset .
{
start an atomic operation .
{
acquires an exclusive lock till the given lock .
acquires an exclusive lock till the given durable component .
change the maximum amount of memory of memory .
{
{
stores the queue state to disk .
starts the server .
reads parameters
applies the storage filter to all the loggers .
shuts down the log .
adds an item to the cache .
removes the mapping for the specified key .
acquires an entry from the cache .
blocks until all the files have been open .
returns the value associated with the specified key .
removes all of the mappings .
{
write
/ * this is called from the empty
add
/ * private buffers .
/ * put entry in read buffer
return
{
{
on
creates a ocommandrequesttext from the given byte array .
/ * ( non - javadoc )
creates an object from a stream .
{
convert this key to a string .
convert
get the serializer serializer for the given type .
process a request to process )
add
shutdown
register
returns the engine with the given name .
/ * ( non - running engine . )
returns the oengine
/ * ( non - javadoc )
{
removes the state of the specified state .
adds a new state .
shared
unlocks the shared monitor .
lock
try
attempts to lock the shared lock .
try
try
authenticate an authentication token .
creates the metadata for this database .
execute
dumps a heap heap to a file .
acquires a read lock .
returns true if the edge is labeled .
returns the label of the record .
removes a lightweight connection .
{
get the out of the vertex .
returns the current vertex in the vertex .
{
/ * ( non - javadoc )
{
{
{
/ * ( non - javadoc )
{
{
convert this {
returns the class name of the edge .
{
{
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
begin begin
ends the vertex .
creates a vertex .
creates a new edge .
execute the command .
/ * ( non - javadoc )
parses the given { @link ocommandrequest .
parse a strategy .
{
{
{
/ * ( non - javadoc )
get the positions from the embedded collection .
{
fix
initialize the transaction type .
{
intercept
fills the given record with the given version .
sets the identity identity for a cluster .
set the identity of the given record .
set
returns the record type for the given record .
initializes the database instance .
wait
print
print
execute index } query .
convert the link2record .
{
{
/ * ( non - registered command .
add a list of the server .
creates the user user user
authenticate the user .
checks if a resource is authorized to be authorized .
gets the user by name .
analyze a list .
/ *
detaches this instance from the object .
detach all objects from the specified object to the specified object .
attaches the given object to the given object .
returns the properties of the given ocommandcontext
returns the index class for the given class
calculate the metadata for the given ocommandcontext
send
returns an {
{
{
truncates all indexes of the indexes .
check if this class is a sub - class of this class .
returns true if the given oclass is a sub class .
adds a base class to the list .
add
evaluates this record .
convert a link to a stream .
build
{
{
acquires a direct direct pointer .
releases the given pointer .
check
clears all elements from the pool .
reads a big - bit from 4 bytes from the buffer at the given offset .
find the persistence unit with the given name .
parses the persistence unit information .
/ * ( non - javadoc )
writes an unsigned var var long to the stream .
reads a signed var var long from the bytes .
reads an unsigned var long from the given bytes .
/ * ( non - javadoc )
installs a database from the specified network .
installs the clusters of a class .
executes the lock in distributed database .
dumps the status of servers .
returns the index of the first occurrence of the specified list .
<p > the index of the first occurrence of the specified array .
returns the index of the first occurrence of the specified object in the specified array .
parses the {
{
{
get the number of this node .
apply
reports a report tip .
parses the request .
parse
returns true if the sort .
/ * expand all fields .
/ * ( non - javadoc )
executes the request .
creates a link from the given vertex .
/ *
write the given a ologsequencenumber ) log to the given output listener .
/ *
starts the {
completes the {
preallocate all the clusters in the cluster .
commits the given {
{
/ *
renames a cluster .
{
register a new cluster .
checks if the low - only if the low - only
sets a property .
{
{
{
create a new command .
loads a record .
deletes the specified record .
{
{
executes the specified command .
{
{
check if the security resource is valid .
check the security resources are valid .
check if the given resource against the given resource .
sets the status of this database .
sets the user .
registers a orecordhook hook .
registers a { @link odatabase } .
unregisters a hook .
callback method .
enables / disables validation is enabled .
delete this record .
load the specified record .
executes the given record .
/ * ( non - javadoc )
browse the class to the class .
{
{
{
{
saves this method to the disk .
counts the number of instances in the specified view .
count the number of class of the specified class .
{
register an encryption .
{
returns the relative index of the relative chunk .
parses an optional word .
parser
returns the next chars in the string .
returns true if the given string is an optional keyword .
returns true if the given character is a separator .
returns the path to the path .
execute the database .
clears the configuration files .
convert this record to the record .
returns the position of bytes )
extract
returns the {
acquire an access token .
copy the authentication token
put
parse the xml node .
parse
process
get
completes the given task .
completes a task .
creates a new {
takes a task and returns the task .
resumes a task .
/ * ( non - >
remove an actor
this method on a task .
reject
/ * assign task id
creates a new task .
get the task model for the given task .
create
creates a task base .
save
get the task actors for the given execution model .
get the task actors .
/ * ( non - javadoc )
open
copies all bytes from the input stream to the given output stream .
copies all bytes from the input stream to the given output stream .
initialize
/ *
get
checks if an operator ) is allowed .
parse the given element .
initialize the driver .
get the {
get
return
lookup
get
get
get
get
execute
get command line arguments
/ *
set
creates an order by id .
starts an order by id .
create an order by name .
starts an order by name .
start an instance of {
executes the process .
execute
executes a task .
executes the given task and returns the result .
creates a free task .
executes the given task .
/ *
run
run a script .
get
set order
returns all elements of the given {
get
textxml
build
throw
/ *
undo method .
find the fork task names .
find the active nodes .
creates an {
returns the {
put
put
finds an instance of the given class .
find
find by name by name .
/ *
{
callback
initialize the configuration .
cast a {
load
<p > newinstance .
creates a new instance of the given class .
{
returns the task models .
get all models of the given class .
get the start of this node .
returns the node with the given name .
{
find the value of type t .
find
{
put
/ * ( non - javadoc )
parser
loads the xml file .
get
set
invoke
find a method by name .
schedules the given entity .
start the database
set
intercept the given execution .
/ *
parses the given node .
<p > schedule .
handle
initializes the mapped to use for the given class .
returns the underscore name .
get
update
get
get
deploy
update
undeploy
cascade
get processs filtered by the criteria .
get the { @link processs } filtered by name .
cache
clears the entity for the entity .
parses the given byte array of bytes .
parses the model from a node .
parses the node .
get the next task models .
{
{
runs the given {
intercept
checks if the current node can be rejected .
save
{
{
creates a proxy for the given class .
/ * ( non - javadoc )
is
creates an order .
creates an order of an order .
add a variable
create
saves the {
set
access
completes an order .
terminates the given task .
resume an order .
this method removes tasks .
build
build
get
save
update
{
from
get
get
load
/ * ------------------------------------------------------------
reads a line from a line .
{
reads a line from the buffer .
{
skips the number of the specified bytes .
{
ensures that the array is within the specified length .
ensures that the array contains the offset } .
/ *
returns the lower bound of two specified range .
find the upper bound .
merge the specified range of {
swap two elements of two swapper .
parallel
quick sort of the array .
murmur
murmur
{
{
{
{ @inheritdoc }
{
{
refresh the end metrics reporting the end metrics .
waits for all current thread is completed .
creates a new builder from a {
find all matches matching the given query
compacts the current compaction .
returns the list of compaction targets for the schema of the same .
returns the matching ordinal for the specified key for the given key .
returns the index of the given keys .
sets the bit at the given index .
/ * ( non - javadoc )
returns the hash code for the given field .
compares two fields for equality .
add transitive matches to the hollow
remove all the outside closure referenced closure
/ * ( non - outside closure
{
{
{
/ * ( non - javadoc )
reads the header tags .
adds an object to this type .
write a flat object to the specified map } .
extracts the primary key from the given object .
initializes the type state for the given class .
clears all segments in - place .
creates a new thread set containing all segments } s segments in this one .
creates a new thread set or all of the segments in the given thread set .
gets the segment at the given index .
update cycle
{
main method .
reads the ordinals from the given stream .
{
{
/ * (
apply
get
sets the value at the given index .
copies all bytes from src
copies all bytes from this buffer to the destination buffer .
checks if this range equals the same range of {
copies all bytes from this buffer to the destination buffer .
copies all bytes from this buffer to the destination buffer .
reads all bytes from the given {
/ * ( non - byte array to the given outputstream .
ensures that the segment at the capacity .
returns the position of a field .
calculates the total
the main method .
returns true if the dataset has collections in the data set .
generate the files
generate the files in - memory schemas .
{
{
initializes the data model .
initializes the data model .
read a {
enable or disables the primary producer .
publishes the given {
checks if the given {
add a listener for the given listener
creates a {
creates a {
creates a {
creates a {
puts an object into the cache .
update the plan snapshot plan .
find the next delta in the plan .
initializes this method .
get
find the keys with the given prefix ) .
returns true if this map contains the given key .
returns the percent of the previous cardinality .
adds a {
/ * ( string
add
adds a field recursive field .
/ *
create a hollow from a string
add a listener
returns a list of hollow ordered by the given schemas .
initialize the class index with the default values .
{
returns the bit at the given index .
{
returns a map of records in the specified field .
set
sets the element key paths .
calculate
add a diff between two {
adds the results of two results .
{
trigger
trigger
trigger the refresh to the refresh to refresh the specified version of the version .
/ *
round a snapshot the given { @link hollow } .
round
round
creates a {
creates a {
creates a new {
restores the latest announced from the last announced .
/ *
execute
exclude
/ * ( non - javadoc objects .
/ * ( hollow
returns the bits required for the given a field .
calculates the type metrics for the given hollow .
sets the primary keys for the given primary key .
combine the primary keys in this combiner pool .
/ *
gets the field buffer .
writes a fixed length int to the buffer .
writes a fixed length long to the buffer .
returns a stream consisting of the elements of this stream .
documentation inherited from interface
sort the array of ordinals
hash
hash
adds an element to the bucket .
returns a list of the specified in the given node at the given .
resizes the storage storage .
processes the given file .
get the ordinal of ) for the serialized representation of the given data buffer .
/ * assign the ordinal to the serialized representation to the given hash .
returns the index of the specified preferred ordinal .
prepare
compacts the specified thread set .
checks if the given key with the serialized byte buffer .
resizes the specified size .
grows that the size .
rehash
return
compares two fields .
returns the number of bits required for the given field .
returns the match for the given key .
creates a new builder from a { @link hollow } .
swaps the current read state .
parses the {
parses a schema from a schema .
get
returns the hash table size .
/ * ( non - javadoc )
runs the compaction cycle .
writes a snapshot of the specified outputstream ) .
/ *
add a set of schema names to the collection is not .
get
add validators for the given schema with the given primary key .
generate
normalize a field path to a field name .
reindex .
searches for the matches of the given query .
trigger
trigger
/ *
calculates the diffs .
add
double
removes the specified number of the specified number of historical states .
write a long into the buffer .
writes a long to the stream .
writes a big - endian 32 - bit buffer .
writes a 32 - bit stream .
converts an unsigned int to an unsigned byte array .
reads a 32 - bit signed byte array from a byte array .
reads a 32 - array from an inputstream .
read a long value from a byte array .
get the length of a byte array .
reads a 32 - bit .
sizeofvlong
counts the number of bytes in a range of bytes in the specified in the field .
called when the activity is first created .
add
creates the proxy proxy proxy proxy .
on
called when the view is reset . <p >
refresh the loading views size .
sets the scroll direction .
refresh
pull event .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
scrolls the scroll by the given view .
scrolls over the scroll by the given view .
called when the activity is first created .
set the empty view .
creates a new {
/ * ( non - javadoc )
{
{
get the value of the specified property as a string .
returns the value mapped by {
returns the value of the specified dbl property as a double .
set a value for the specified name .
{
/ *
adds facts .
/ *
creates a rule builder .
creates a rule builder .
creates a new rule builder .
creates a new rule builder .
create a new {
create a new rule builder .
create a new rule builder .
create a new {
returns a new rule builder .
map facts to properties .
gets the rule instance . < / p >
run the rule
adds the given facts to the facts .
add
adds the rule
get
returns the annotated field of the given class .
get
get
returns the annotation of the given {
creates a standard decision .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
updates the audit
gets the rule status map .
creates a new instance of {
adds a {
adds a new { @link rule } .
{
{
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
adds an action to the rule .
adds an action to the rule .
creates a new {
resets the value to the default value .
{
/ * ( non - javadoc )
adds a {
add a {
creates a new {
/ * ( non - javadoc )
combine
combine
read empty line or end table .
skips the content of the file .
creates a deployment config for a deployment
add the kubernetes services to the list
converts a list of services to an array of service objects .
extract the labels from the configuration
extract the list of the image .
gets the ports from the build configuration .
extract the ports
parses a {
/ *
removes the {
returns the default service name .
add missing service edit service parts .
append
get the service name of the service .
returns true if the given port matches the given port .
returns the port of the given service .
returns the service host and port and port .
put
merge
merge
put
ensures that the template specs are in the builder .
updates the pod containers .
merges the image configuration with the given containers .
waits until the pod is ready .
get the image name of the build service .
compare
validates that the given kubernetes id .
convert an entity list to a list of metadata .
returns the resource version of a resource .
creates a string representation of a numeric .
returns the value of an int property .
returns true if the given is ready to be ready .
returns the current context .
check if a route has a route
replace
add
forward the port to the pod .
creates a class loader for the given classpath .
checks if the project has the specified dependency .
returns the version of the specified artifact
returns a plugin by its id .
checks if a resource has a resource has a compile .
returns the version of the specified group
checks if the given { @link logger } .
read resource fragments from the resource fragments .
get the metadata for the given the file .
read and enrich fragment from the given file .
get the metadata for the given fragment .
convert
merge
merges the {
merge
returns true if the pod spec .
reads the properties
flattens a map to a map .
converts properties to map
add
gets the httpgetaction from the given url .
gets the docker json config string .
get the configuration for the given system .
get the secret configuration for the given id .
download
get
compares two strings .
find the profile for the given profile .
blend the given { @link profile ( string string string string string )
lookup a profile by name .
read profile from classpath
read all resources from a classpath .
find the profile yaml yaml .
returns a list of meta inf paths
reads a yaml file from an { @link inputstream } .
returns the main classes of the given directory .
adds the url to the git service
get the image pull policy
returns true if open mode is open .
returns the number of replica items in the configuration
find the first child element with the given name .
returns the text content of the given node .
{
apply
apply
install
this method to the service account )
removes a tag by name .
applies a namespace to the given entity .
applies a {
applies a project request to the given request
returns the namespace of the given entity .
on
returns the peng for the specified strength .
check if the spring dev secret token
{
/ * ( non - javadoc )
extract
/ * ( non - javadoc )
returns the duration of the specified duration .
returns the duration from a duration .
scan files
returns true if the service is a valid id
disable open shift features .
returns true if the ingress rule has ingress rule is an ingress
replies the root project folder .
returns the root project for the project .
/ * ( non - javadoc )
parse
{
returns the {
extracts the blend configuration
{
extracts the blend profile
extracts the icon ref from the config .
returns the default icon ref .
copy
returns the embedded icons in the console .
get the spring boot application properties for the given compile class loader .
loads the properties resource from the given url .
get the spring boot boot version for the given maven project .
creates a list of service objects .
enrich
log
get the thorntail properties for the given compile class .
get the raw config .
gets the value of the configuration property .
/ *
{
get
/ *
extract the watcher config from the configuration
gets the singleton template from the list of resources
returns a list of resolved images .
get the build reference date .
compare two objects .
try
combine parameters
returns the value mapped by {
returns the value mapped by {
returns the configuration map for the given name .
/ * ( non - named processors for the given type ) .
merges the {
removes the list of a list
this method to the image source
get
returns the image name .
returns the registry registry .
gets absolute path
returns true if the configuration is online .
gets the service url of a service .
unfold
returns the value of the system property as a boolean .
returns the namespace namespace .
creates a {
creates an internal node .
scan the plugins of the given {
extract the distance between two points .
adds a single field mapping .
adds the multi field mapping .
convert a graphqlconfiguration from a json jsonobject .
get
get
create a json string from a json string .
creates a { @link venmo } from a json string .
fetch capabilities from a fragment .
send
tokenize
converts a json string to a { @link local .
from json from json .
opens the {
authorize
create a { @link card } from a { @link jsonobject .
get rewards balance balance to the rewards
pal
/ * ( non - javadoc )
{
add an authorization to the authorization
creates a venmo configuration from a json jsonobject .
converts json string from a json string .
collect device data .
collects device data from a device to device .
collect
get
checks if a signature is valid .
get
delete a payment method
get the start intent .
parse a response from the request .
get
perform a verification on a { @link braintree } .
performs a verification .
performs a verification verification .
creates a { @link jsonobject
tokenize a {
returns the value mapped by {
parse a list of {
parses a json string } from a { @link string .
parse
returns the { @link endpoint . <p >
cancel a url .
success
returns the {
get the billing billing agreement config config .
creates a { @link card } from a json string .
/ *
creates an { @link analytics } from a { @link jsonobject .
tokenize a {
get
performs a post request .
post
creates a visa from a json string .
starts a payment .
approve
converts an { @link authorization } .
get the error error error for the given field .
pal
/ * from json
creates a new { @link braintree .
add a {
remove a {
see {
creates a new { @link jsonobject } to a { @link jsonobject } .
request
create
on
parse
creates a json object from a json string .
return
adds nouns
removes a word from a dictionary .
returns a list of {
converts a list of tokens to a java string .
extracts the korean
converts a list of java converters to a list of java converters .
unmodifiable .
reads a {
calc
calc
get a bytebuffer from a bytebuffer
return a buffer from the buffer .
/ *
convert a avc frame into a bytebuffer .
converts a bytebuffer to a bytebuffer
write a avccbox to the given bytebuffer
read
/ * ( non - bytebuffer .
creates a {
creates a {
allocate a bytebuffer to a byte buffer
encode a list of {
computes the luma
get
/ *
get
get
/ *
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get
get
get
getchromaxx
decodes the channel map .
returns the {
normalize
resample
qmf
qmf
master
returns the index of the bands in the given range .
master
/ * derived
reads the next marker from the buffer .
reads the next marker to the next marker .
reads a tree3 of a tree
/ * ( non - available frame .
/ * pass2
prepare the range limit table .
modifies the given file .
copy a file to a destination file .
calc
calc
decode
get
converts a frame to a timevalue
converts a { @link trak }
computes the number of a edited media box .
computes the edited edited time of the given movie box .
get the number of times the video frame .
get the player time for a video box
this method to format the player timecode
format a timecode the player for a player .
convert a {
formats a timecode in a timecode
returns a 7 - 32 bit of 2 values .
sets a value to the specified index to the specified value .
{
comp
get the next picture .
get the next native frame .
gets the frame at the given file .
get a frame from the given channel .
get the frame from a file .
get a frame from the channel .
get a native frame at the given frame .
get the native frame at the given decoder .
get the { @link picture frame } for the given track .
get the native frame at the given location .
creates a {
/ * windows
{
reads a cache from the buffer .
{
{
{
{
/ * ( non - javadoc )
{
clones this frame .
/ * dif
/ * dct4 kernel
creates a wav header .
create a { @link wav } from the given headers .
/ * n - bit )
/ * ( non - javadoc )
/ * ( non - null )
read the side info from a header .
reads a frame from the stream .
reads the next frame ) frame .
read a aacdecoderconfig from a byte array .
{
read the decoder pic instruction
show
split the given track ) splits .
/ *
set
/ * deblockmbgeneric
deblockmbp
encodes the native frame to the video .
ebml
computes the length of the specified byte array .
return
/ * one
/ * package
/ * ----------------------------------------------------------------------------
/ *
read the header
returns the sbr
read a single channel element .
read the channel pair of the channel pair .
sbr
read a dtdf
invf
sinusoidal
sbr
/ * sbr
get the number of a byte buffer
/ * ( non - javadoc stream .
reads the ebml id from the given channel .
reads a file .
/ * duplicate
/ * duplicate
/ * ( non - 1 .
decodes a bin bypass from the stream .
goto a goto from the buffer .
return
filter2
filter4
filter8
filter12
/ * huff data in the data to be used by huff .
read a bit from the ld stream
clip
decode
delta
decode
/ * decorrelate
process the input data .
return
/ * ( non - javadoc )
clones this picture .
/ * reordered data .
start
coeff
finishes the block of the block .
create a {
returns the parent of the given mkvtype .
concatenates two bits into one .
rewind
rewind
/ * ( non - javadoc )
schedule
get a frame from the given file
creates a frame from the given channel .
get a new bitmap with the metadata .
get a frame from the bitmap
creates a bitmap with the bitmap .
gets a frame from a file .
creates a frame from the given file .
get a frame from the given decoder .
get a frame from the given decoder .
get a bitmap of the given track .
get the sloppy of the given track .
seek to the key frame
get the {
/ *
splits a picture into two picture .
/ * compensate
calculate the function data .
calculatefmd
returns the index of the first id
interpolate a gain function .
converts a byte array into an array of bytes .
converts a int array to a byte array .
converts a {
converts a bytebuffer from a bytebuffer .
format
deinterleave
{
build
build
build
reads an array of bytes from the given byte array .
reads an array of bytes from a byte buffer .
get a buffered image from the given file .
gets the image from the given file .
gets the native image of the native frame .
get a buffered image from a file
get a buffered image from the given file .
get a { @link bufferedimage } .
get a { @link bufferedimage } from a track .
get the sloppy of the given decoder .
get a { @link image } .
compute the probe size of the given {
/ * c - 1 )
/ * ( coeffs ) into coeffs
reads a scaling list from a reader .
read the scaling list matrix .
encode a frame into a frame .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the metadata of the metadata .
gets the property meta data for a property .
set a property .
set a property .
gets the value of a property .
sets the value of the property .
<p > a list of codec id . < / p >
returns the list of supported tags .
returns the {
returns the number of pinned objects .
dumps the memory log items .
adds a reference to the slot .
remove the jnireference .
starts the collection thread .
flushes all the survivors .
retry
add
load
unpacks a library from the specified path .
deletes all temporary files .
returns the default {
returns the index of the audio channel in the layout .
get the { @link channel } .
returns the {
get the installed format descriptor .
swap two pixel features .
get
creates a {
creates a {
creates a {
creates a media packet from a media packet .
get the data for this media packet .
get the side data of - side buffer .
get
returns a filter type } corresponding name .
opens a url to the given url .
read data
seeks to the specified offset .
writes data to the stream .
checks if the given url is streamed .
get the descriptor descriptor for this component .
returns the version information for the version .
returns the default time base .
returns the flag constant for a given position .
returns the flag constant constant .
constructs a new {
returns the {
/ * ( non - javadoc )
/ *
get a stream from the current stream .
reads a media packet from the specified packet .
query the metadata of this stream .
sets the flag for this container .
get the meta data for this key .
waits until the specified amount of milliseconds .
/ * ( non - javadoc )
<p >
copies this object .
compares this rational by another rational .
{
reduce the number of integers .
creates a new {
creates a argument by another argument .
creates a * x = a * b
divide this rational by another argument .
creates a { @link rational numbers .
subtracts two integers .
subtracts two integers .
adds a argument to the argument .
creates a + b + b
calculates the rescale between two points .
calculates the rescale between two points .
creates a new rational rational representation .
creates a rational - bit } .
creates a new {
creates a new rational rational number from the given integer .
calculates the rescale of two points .
calculates the swig of two points .
copies data from {
play a video .
display
gets a collection of installed bit stream types .
creates a {
creates a {
creates a {
creates a {
open the interface
encode
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
creates a {
prints out the configuration for the specified {
prints an option to the given stream .
configures the properties .
configure a configuration file .
set the base time base .
returns the descriptor of the given image .
creates a {
creates a { @link converter . picture .
creates a new { @link picture .
creates a {
creates a {
convert
pack the payload payload .
closes the stream .
opens a stream to the given url .
reads data from the file .
writes a buffer
registers a {
generate
map
map
map
map
map
map
map
maps the given { @link readable channel to a { @link string representation .
map
transforms a {
map
map
map
map
map
map
map
map
transforms a url to a string .
map
map
get a new iurlprotocolhandler for the given url .
removes the given url from the given url .
/ * ( non - javadoc )
gets a logger .
gets a static logger .
log
creates a new {
resample
gets the time base .
set
returns the index of index entries .
get the rate rate of this frame .
get the time base .
return the aspect aspect ratio .
get the container for this container .
get the metadata data bag
/ * ( non - javadoc )
returns the index entry for the specified position .
returns a {
returns a collection of installed codecs .
<p > the list of supported video rates . < / p >
<p > the pixel format for each pixel formats .
<p > the supported audio rates .
<p > a list of audio audio formats . < / p >
<p > the supported audio channel layouts .
creates a {
create a {
create a {
create a decoding codec for a given codec id .
create a {
create a decoding codec by its name .
creates a { @link codec } for the given url .
get a {
get the supported video frame rate for this video .
get the {
returns the supported audio format for the given index .
returns the {
get the supported profile for the given index .
resample
resample
creates a {
opens the given url .
/ * ------------------------------------------------------------
writes data to the file .
<p > the names of the keys in the list . < / p >
returns the value associated with the given key .
set a value for a given key
creates a key .
/ *
opens a
returns a {
returns the base time base .
set
/ * ( non - null value .
/ * ( or value .
returns a {
get the demuxer for this file .
get
guess the {
returns the {
returns a muxer for the specified index .
creates a new { @link filter } .
add a filter to this graph .
adds an audio source to this filter .
add a picture source .
adds a {
creates a {
queue a command .
creates a {
creates a new { @link bit .
creates a new { @link bit .
returns the { @link bit .
filters the given buffer
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
constructs a new buffer for the given buffer .
constructs a new buffer from a buffer .
creates a buffer from a buffer .
creates a buffer from a buffer .
creates an audio frame .
play the audio buffer .
creates a {
validates the image .
validates that the given picture .
{
{
returns a filter graph .
get the time base .
inserts a filter into this filter .
gets the time base time base .
get the meta data for this media
set
registers a new factory .
get a handler for the given url .
return
return
get the given java cpuarch string . util . cpuarch .
parse the native cpuarch string .
get the osfamily from the os .
parse a string representation of a osfamily .
get
get the time base time base .
play the audio file .
entry point of the command line .
delete this object .
loads a library from the given library .
loads the library from the library
/ * ( non - javadoc )
load
gets the library candidates for the major library .
initializes the search paths .
check if the library is loaded .
creates a {
creates a {
decodes data from base64 encoded data .
decode
decodes data from base64 )
<pre > record :
deletes this object .
adds a new audio audio .
resample
returns the {
get the alternate sample format for the given audio format .
get the packed sample format .
get the {
returns the number of the buffer .
get the number of the plane for the specified number of samples .
creates a {
returns the {
/ * ( non - javadoc )
adds a new {
get a stream from the specified position .
writes a {
constructs a {
returns the {
creates a demuxer format for the given short name .
returns the format for the specified index .
gets the number of streams in )
returns a coder for this file .
get the muxer for this file .
creates a {
decodes data from base64 notation .
generate
get
get the list of the given address .
get the list of an address
get a list of block header records
gets a block of a string .
send
sets a script
compile
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
write primitive array
write a byte array
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
writes the given object
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get
setmmfdata
get
get
resize the specified number of memory .
gets the binary data source from the given source key .
removes a binary entry from the cache .
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
writes a portion of bytes ) array to the array .
/ * ( non - javadoc )
{
{
create
creates a pointer
creates a json configuration . configuration } .
print
registers a serializer for the given serializer .
create a new {
/ * ( non - javadoc )
/ *
clears the cache caches .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
register
register
get
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the {
write an int value to the stream .
writes a long value
writes a packed
/ *
/ *
reads a array
/ * ( non - javadoc )
return a fstclazzinfo for the given class .
/ *
called when the object has been written .
/ *
get
/ * ******************************************************************** / * abstract methods ********************************************************************
/ *
resets the output stream ) state to the given output stream .
returns a copy of the buffer .
/ *
set a string .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
detaches an element from the specified pointer .
creates a copy of this heap .
finish
returns a temporary address as a {
creates a new {
creates a new {
documentation inherited from interface
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
coerce
adds the given source to the storage .
poll
reads a byte array from the buffer .
reads an integer from the input stream .
/ * ( non - javadoc )
register
set
starts an embedded cassandra cassandra .
cleanup the data embedded in a keyspace } .
copies a directory to the given directory
print
get
connect
returns an empty {
computes the gemm * a b
{
c = c - c = c
computes the gemm
{
/ * a dense matrix ) * c )
{
/ * a dense matrix ) * c )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
reads the op descriptors for the onnx
convert a {
sets the allocation mode for the given context .
{
calculate the output shape
probability
this method
and
returns {
returns true if the given {
returns a boolean array with the specified dimension
returns an array of the specified dimension and dimension
iterate over the given function and condition is the same as { @link function } .
apply the given number is applied to the given number of the given condition .
this method from the given an array
choose the given input from the given an array of equal elements .
apply the where the given function is applied to the given in the given function .
applies the given function to each of the given function .
returns the first index of the given condition
returns a {
creates a new { @link function from the given properties .
convert a collection of properties from a collection of properties .
/ *
set
normalize
merges two coordinates .
split
partitions the given list of lists into a list of lists .
split
convert a onnx to a onnx .
shuts down the transport .
get
get
gets the current device architecture .
{
update the view flags for the view .
generate a col2im output array into a matrix
this method to the input array
generate a sorted sorted sorted ) to an array
creates a {
creates a new {
returns a {
takes a list of batches from a list of the given partition } .
{
validate
{
creates a scalar matrix with the given matrix
{
bilinear products for the given an ndarray
reverses the given array
{
generate a random matrix with the given columns
generate a random gaussian matrix with the given columns
{
/ * ( non - javadoc )
{
concatenates the given dimension with the given dimension
{
{
creates a complex buffer with the given data .
creates an ndarray with the specified shape
{
{
creates a complex complex number from the specified shape .
{
create a scalar scalar vector
create a scalar array with the given value
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the complex number of complex components in the given float array .
returns the complex number of complex numbers .
creates a complex number
creates a new complex number from a complex number
creates a new {
creates a new complex number from } by a complex number . icomplexnumber }
creates a new complex number from the given complex number .
return the result of the result of the result .
exp
exp
{
frees the given point .
{
merges the given data set into a {
{
{
{
creates a random data set from the specified array
/ * ( non - javadoc )
stringify
simple
format
return
return
gets the time formatted time formatted string representation .
get
get
get
get
get
splits the given string into an array .
split
find
escapes a string in the given a string .
escapes a string in the given character .
escapehtml
join the given strings containing the given separator .
camelize
replaces all occurrences of a template in the given pattern .
get
case
return
inverts the given matrix
returns the <code > n< n< / lastn .
returns true if the host is actual on host side .
checks if the device is actual on the device side .
{
{
returns true if the shape is a vector
creates a new copy of the given shape
get the order of an ndarray
returns the offset for the given indexes
convert an array of indices to an array of indexes .
get the shape of an array
unzip
gets the short value of the given long
{
execute an action
copy the content of the {
starts a server .
{
{
{
{
generate the kafka uri for a topic .
this method for {
generate an ndarray of the given vector
ceiling function
creates a sin array
get an ndarray of an ndarray
get an ndarray of an ndarray
hard function
hard tanh derivative function
pow function
returns an ndarray
element - wise less than or equal shape
see {
eps function
returns the maximum element
returns the maximum element of an array
element wise wise function
returns the minimum element of an array
stabilize function
element - wise function
element - wise function
expm1 function
identity function
sqrt function
tanh function
creates a given array
log1p function
execute an ndarray
execute an ndarray
generate a matrix
prepare the bounds for the given bounds
adjust the scheme to the given bounds
{
/ * ( non - javadoc )
{
computes the upper triangular decomposition of a matrix
build a {
build a { @link allocation }
return
--------------------------------------------------------------------------------------------
sweep
{
{
randomly shuffle a list of dimensions
this method to an { @link indarray }
create an {
{
{
/ * ( non - javadoc )
{
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
retrieves the address of a device .
retrieves the pointer for a device .
{
get
{
{
gets the next device .
loads a library from the library .
load
load
load
returns the os os name .
creates the lib name for the given base name .
calculates the arch for the current user .
publish
/ * ------------------------------------------------------------
{
intercept an int data type data type
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
reads an unknown data from the given stream .
{
see {
see {
see {
see {
see {
see {
see {
see {
see {
see {
returns the covariance matrix for a matrix
get the principal components of the matrix
resets the state .
get
{
store and allocate new array .
this method returns the arr
returns the initial shape of the shape
evaluate an array with the input arrays
{
converts a complex icomplexndarray to a icomplexndarray
calculate the center of the given shape
truncates the given { @link icomplexndarray .
creates a new icomplexndarray with the given target shape
{
broadcast an ndarray }
{
returns the {
calculates the gamma gamma of the specified context .
returns the sqrt value . < / sup > } .
cbrt .
calculates the root of two numbers .
calculates the hypot of two { @link bigdecimal .
returns the { @link bigdecimal } represented by { @link bigdecimal ) } ) } .
returns the { @link bigdecimal } that is <code > } .
return
returns the log of the specified bigdecimal .
returns a { @link bigdecimal } whose value ) is the specified number . ) .
returns the log of two { @link bigdecimal .
returns the { @link bigdecimal } that is { @link bigdecimal / code > .
returns the { @link bigdecimal } that is rounded to the given number .
returns a sin .
returns the { @link bigdecimal } represented by a { @link bigdecimal .
returns a { @link bigdecimal } represented by the specified bigdecimal .
returns the { @link bigdecimal } represented by { @link bigdecimal .
returns the { @link bigdecimal ( bigdecimal ) } .
returns the { @link bigdecimal representation of ) } .
returns the { @link bigdecimal } represented by a { @link bigdecimal .
returns the { @link bigdecimal } represented by the same as { @link bigdecimal .
returns the { @link bigdecimal representation } .
returns the { @link bigdecimal } representation .
calculates the pochhammer of bigdecimal .
returns a bigdecimal of the given bigdecimal .
returns a bigdecimal of a bigdecimal .
calculates the { @link bigdecimal .
calculates the zeta1 between two ( values .
returns the broadhurstbbp of a b .
returns the specified numbers .
returns a double numbers .
returns the product .
returns the { @link bigdecimal of { @link bigdecimal .
returns a bigdecimal .
returns a bigdecimal of n .
returns a bigdecimal of { @link bigdecimal .
returns a { @link bigdecimal } that divides the specified { @code x } values } . < / p >
returns the { @link bigdecimal } value } .
returns the { @link bigdecimal } representation } .
returns the result .
updates the variable name .
gets the function by id .
adds a function to the given id
gets the inputs for a function .
updates an array with the given name
stores an array with the given name
returns the shape for the given variable name .
updates the shape for the given shape .
adds a new shape to the given shape .
associate an array with the given variable
gets the property for the given function .
add a property for a given property
adds an outgoing function to the list of outgoing variables .
adds a set of variables to the list .
checks if the given function has the given args .
evaluate an array of inputs
returns an array with the specified shape as elements
see {
see {
create a new variable with the same name as the input variable
returns an array with the same variable as the input variable
removes an argument from a function .
set the gradient for the given variable name
see {
see {
see {
see {
see {
element - wise max operation : out = max
see {
see {
see {
see {
see {
see {
see {
see {
see {
see {
see {
see {
see {
see {
see {
returns an {
returns an {
generate an output variable for the given function .
this method executes the given list of differential
this method returns a )
creates a {
{
{
todo : the output function :
this method returns the backward result
adds a variable as place holder .
this method variables in the given map
returns true if all place holder variables are resolved .
adds a place holder for a variable .
resolve the given inputs based on the given inputs
returns all variables associated with the given list of functions .
updates the input variable name and reference to the input variable name .
this method will be used by {
prints a function to the given differential .
permute
updates a variable with the given variable name
convert the given configuration to a {
prints the graph as a flat string
convert a byte array to a bytebuffer
returns the data type as a byte array .
get
converts a byte type to an op .
gets the flat op type .
{
set the data in the given array
returns the length of the given {
get the {
return
get the dtype from the context
write
/ * ( non - javadoc )
pick the reference reference
{
prints the allocation for current thread
{
{
{
{
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
computes the results of a dense vector .
computes the upper triangular of a dense vector .
receive
this method calculates the bernoulli for the given labels
{
{
{
{
{
see {
see {
returns the name of the node .
invoke
{
/ * ( non - javadoc )
execute a random vector
this method executes operation executes the given operation .
/ * ( non - javadoc )
/ * ( non - javadoc )
asserts that all workspaces are open .
{
negative log likelihood
request
try
releases the {
returns the current { @link state } .
build an environment .
/ * ( non - javadoc )
initialize the examples from the list of examples
set
initialize the host collectors .
{
{
{
create an ndarray from a tensor
add a vector to a vector
creates a {
{
frees the given memory point .
{
{
creates an array of row
broadcast op . see {
broadcast op op . see { @link indarray ( charsequence int int int int int } ) .
broadcast op . see {
broadcast an array . see {
broadcast greater than or equal to the specified dimensions . see {
see {
broadcast less than or equal to the specified array . see {
broadcast less than or equal to the specified array . see {
broadcast not {
this method for the given array with the specified in the given dimensions .
this method . see {
broadcast max array . see { @link y } .
broadcast an { @link min . see {
this method for the given array with the specified in the given dimensions ) .
this method for the given array with the specified in the given dimensions ) .
gets properties for function .
returns true if this {
returns the difference between two sets
calculate the offsets of the given shape
formats the given ndarray with the given string
{
{
{
{
this method copies of the given array
copies the given ndarray to the given array
{
{
{
return the distance1 function of the given ndarray
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
{
add an element to the matrix
{
{
{
{
{
add an element at the given element
{
{
{
{
{
{
{
{
{
{
{
{
{
this function creates a new complex array with the given result
{
{
this method
{
{
{
{
{
/ * ( non - javadoc )
{
compute the eigenvalues of the given matrix
convert a matrix to an array
compute the symmetric eigenvalues of the given matrix
probability density function
{
{
computes a sparse vector to a scalar .
/ * ( non - javadoc )
/ * ( non - javadoc )
see {
see {
merge the given input array of labels
convert an array of the given arrays
this method
{
returns {
check if two arrays are equal arrays are equal .
creates an array of the specified dimension
{
see {
see {
see {
reduce the two sets .
initializes this variable variables .
get
get
invoke
creates a new instance of the given constructor .
get
returns true if the to see {
get
get
return
creates a proxy instance .
{
loads the given entity from the given datastore .
creates an entity value from the given entity .
saves a { @code pojo } .
{
adds a filter to the filter .
translate an operator to a filter .
adds an order to the condition .
sets the ancestor .
sets the limit .
add
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
adds an order by sub - list of the order to the builder .
adds a projection to the query .
adds the distinct on a list of the builder .
creates a proxy service .
{
{
completes all pending futures .
register
gets the metadata of the given kind .
{
{
query for entities using the given chunk .
{
{
returns an iterator into an iterator
/ * load
returns a list containing the specified elements in the specified elements .
{
return
creates a { @link key .
creates a new key .
create a key .
creates a new key from the given url .
creates a new {
{
compares two identity .
creates a { @link key } .
<pre > {
gets the kind of a class .
returns the kind of a class .
get
returns true if the given type is missing .
/ *
get the exact super types of the given type of {
gets the exact field type parameters .
capture the given type .
returns a {
gets the populator for the given class .
/ * ( non - javadoc )
{
returns the instruction
returns true if the field is of the given field .
returns true if the method is of the given method .
returns the declared properties of the given class .
returns the key metadata .
get
translate
fetches the list of the pending datastore .
{
{
add
register
get
get
creates a forward path from the given path .
returns the final path of this path .
return
returns the depth of the node .
{
{
{
{
returns all the values in the cache .
put all of the mappings in the cache .
empty
returns a set of expiry seconds .
delete
returns a set of the given buckets .
finds the key fields of the given class .
sets the key for the given entity .
sets the key for the given pojo .
sets the { @link incomplete .
gets the incomplete key for the given pojo .
<code > optional {
sets the long id for the given pojo .
<code > the parent datastore for the given pojo .
registers a subclass for the given type .
parameterized
return
returns the parameterized class .
checks that the given type is within the given type .
returns {
/ *
creates a new instance } from } .
returns a wildcard type that is a wildcard .
get
{
adds a value to the cache .
/ * ( non - final )
sets the given key from the datastore . < / p >
loads a key from the cache .
{
make a live ref .
translates the given { @link map } into a { @link map .
fetches the list of keys in the datastore datastore .
loads the meta data from the given datastore .
adds a filter to this query .
{
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
converts the given object to a key .
<pre > {
creates a {
creates a new key for the given key .
<pre > {
create a list of keys from the given key .
returns the value of the given incomplete key .
converts an { @link com } to a { @link com } .
{
{
{
{
{
/ * ( non - javadoc )
{
{
{
{
{
{
{
/ *
checks if the given conditions matches the given conditions .
returns the {
creates a {
{
construct
construct
gets the metadata for an entity .
allocate a new id .
allocates a key range of ids } objects .
allocates a key range of ids .
allocates a new incomplete key range keys .
get the last {
opens the objectify .
opens a new objectify .
closes the given objectify .
{
run the given {
converts a list of indexes in a list .
coerce a number to a number .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a live ref .
create
{
add
/ * ( non - javadoc )
generate
/ * ( non - javadoc )
load
defer
/ * ( non - javadoc )
get
returns the given { @link future } .
unwraps a {
coerce a number to a number .
returns a {
creates a translator for the given class .
creates a {
/ * ( non - javadoc )
returns the value of the specified property from the path .
{
sets the value on pojo .
/ * ( non - javadoc )
----------------------------------------------------------------------------------------------------------------------
writes the extensions to the given json generator .
write the content category .
writes the content categories to the given {
processes the given snippet .
write the bid request to a string
writes the bid request to the given writer .
writes the bid request to an outputstream
writes the bid request to the given bid request .
write the bid response response
writes the bid response to the given outputstream .
/ * ( non - response .
writes the bid response .
adds the { @link seat } to the given { @link bid } .
constructs an iterable of {
returns the {
returns a {
constructs a stream of { @link bid } s based on the given { @link bid .
returns an {
updates the bids of {
updates the bids of the {
remove bids bids from the response .
removes bids from the bid response .
returns the {
returns the {
returns an {
add filters to the base filter .
returns true if the given {
write
write
write
writes the native {
write the native response to a string .
write
write
writes the native native response .
reads the extensions from the json extensions .
checks if the current token is empty .
register rtb json factory .
register
register
reads a native request from the given source } .
reads a native request from the given reader .
reads a native request from an { @link inputstream .
reads a native request from a json stream .
reads a native response .
reads a { @link response } .
reads a native response from an input stream .
reads a native response .
process all the bid
process the fields in the same as {
reads a {
reads a {
reads a {
read a bid request .
read a {
reads a {
reads the bid response from an input stream .
reads the bid response from the json stream .
returns a {
see {
updates the {
returns a list of {
returns a {
returns the current name of the current request .
start
end
start
end
peek
peek
write
write
writes the given {
write
writes a long field .
writes the given {
write an enum message .
write an enum field .
write enums to json .
reads a csv string .
replies the url of the base url to the specified target .
fix pure query targets of the base path .
fix the embedded params
get
get
get
load
extract
returns the {
emits the given url to the given url .
converts a map of fields to a byte array .
fix http headers in the given string .
<p > get
extractrefreshurl
get the metadata for a track for a track .
filter the given metadata .
reads all rules from a list of the rules .
{
put
add
getid
clean
get
get
read the charset name from a byte array .
get
get
returns true if the content is in the content .
/ * ( non - partition )
set
get
returns the current driver .
main
returns the list of cookies
check
get
get the robot rules from the cache
/ * ( non - javadoc )
extracts the meta tags from a fragment
extract
normalise
ack
{
/ * ( non - javadoc )
reads the rules from a list of the rules .
reads the rules from a file .
process query elements .
unmangle
unescape the path in the path .
escape the path .
get
create a new {
adds a {
return
attempt to see {
parse the storm filter }
append a node .
receive ignorable
receive notification of a processing instruction .
receive notification of a comment .
/ * ( non - javadoc )
{
{
set
parses the robot rules and returns a byte array .
filter the document is present in the metadata .
filter
returns the url of the given tuple
trims the text of the text .
/ * ( non - javadoc )
/ * ( non - javadoc )
check if the custom interval is valid .
construct a { @link urlfilters
get the scheduler instance .
execute the config
submit a topology
from
from
from
from
from
excel
from
gets the instance of the given field .
set
sets the wheel item count .
resolve the size and state of a { @link state } .
sets the wheel drawable .
sets the empty drawable .
sets the angle .
updates the selected position . <p >
invalidates the cache item at the cache position .
returns a {
updates the velocity of the velocity .
get the contrast color for the contrast to the contrast to be used .
clamp
matches
creates a {
write the coveralls
creates a {
set
{
returns the string representation of the shape
returns the string value at the given index .
get
set
set a string value .
set
return
creates a new {
creates a {
creates an array from a string array .
calculates the dot product
multiply two matrices
multiply the multiplication of this matrix .
/ * ( non - javadoc )
init
draws this draws of the specified affine .
shows the screen .
show
read the data from a nc2 file .
read compressed data .
make the size estimate for the size of the grid .
write a list of netcdf to a grid .
uncompress
usage : java .
creates a new { @link unit } .
creates a new unit name .
make a plural string for the given name .
choose
{
returns true if this date )
returns true if this range intersects this range .
intersect
extend
extend this date with another date .
set
set
set
/ * recalc
stores the persistent data in the controller
add a map bean to the map .
make sure that will be displayed .
reads a coordinate array from a coordinate .
get the coordinate value of a specific coordinate .
returns the position of the given position .
/ *
show
opens a {
creates a {
returns the name of the name of the name .
find a grid by name .
returns the grid with the given short name .
returns the string representation of this url
returns true if the projection points are cross .
computes the theta for a given point
converts a projection to a proj projection
transforms a projection to a lat point .
converts a projection to a proj
checks if a given location matches the given location .
/ * ( non - javadoc )
{
-----------------------------------------------------------------------
{
computes the bounds of the given llbb
initialize the collection of features .
creates a om observation .
/ *
bufr
reads all data from a file .
set the date range .
computes the unlimited chunking of the given dimension .
/ *
processes all the events in the directory .
set
register
register
register a factory for the given class .
opens a feature dataset . formatter .
wrap a {
determine if the feature type is ok .
find the feature
/ * ( non - javadoc )
/ * ( non - javadoc )
converts the catalog to html .
returns the html for the html .
get
get a catalog for the catalog
make the catalog for the catalog .
add global services
初始化
returns the content of the string .
put
returns the url contents of the url .
<pre > {
returns the error message for an error message .
/ *
/ *
/ * ( non - javadoc )
/ *
converts a collection name to the collection name .
adds the datasets for the dataset .
/ * ( non - javadoc )
{
extract the geospatial metadata from the gds from the gds coordinates
find a dataset in the specified path .
finds a dataset and group and group and group .
gets the {
compare two {
create an unitid .
parse an attribute .
reads the top of the top of the top of the top - level file .
read the netcdf from the ucar file .
create a new dimension .
set
convert two short integer
convert a byte array to an int .
get
/ *
returns true if the given name is a valid netcdf object .
make
returns true if the given name is a valid netcdf3object name .
/ * ( non - javadoc )
{
read the record data from a nc2 file .
read the record data subset .
{
{
/ * ( non - javadoc )
fill non - record variables .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
make
make
make a struct struct for a calendar .
replace
return
returns true if two seam
converts a projection to a proj
converts a projection to a lat point
/ * ( non - to )
proj
add a new { @link btfunction
get the named function .
get the {
load
returns the name of the given {
/ * ( non - javadoc )
get the {
read the fnmoc table3 from a file .
/ * ( non - javadoc )
expands the specified {
gets the grid parameter .
returns the name of the specified grid .
returns the description of the specified grid .
returns the level of the level of the grid .
get the projection type for a projection .
checks if the vertical coordinate is a vertical .
returns true if the given record .
encode a {
encodes a { @link rect } to a { @link cdmr } .
encode
encode a {
encode a {
encode a {
encode a {
converts a {
encode a { @link cdmr coverage .
creates a new directory stream for the given glob .
register
register
register
transforms a {
make a dummy transform variable .
make a projection for a projection .
fires a property change event .
creates a new {
main method .
get the array1d
gets the file location from the request .
saves the data in the database .
write a sequence of members to a sequence .
/ * ( non - javadoc )
parses an xml string to a string
init
-----------------------------------------------------------------------
encodes the given array of the byte array .
write a count
write atomic array of an atomic )
/ *
/ * ( non - javadoc )
{
parse
set
/ *
read a table from a file .
finish the ui
show
set the field in the grid .
/ * ( non - javadoc )
read the sub - center sub - center sub - center sub - file .
null
creates a grib2gds factory for the given template .
returns the earth earth .
converts a { @link projection } into a projection to a proj
proj a projection to a lat point .
/ * ( non - javadoc )
parse
parse
parse
parses the given dap2parse dataset from a dap2parse .
/ *
initializes the raf .
init
swap the grid header .
read a grid from the stream .
reads an int from the input stream .
main method for testing
check if the file is implemented .
write the service for the service .
writes the operations
executes the given file .
read all files in the specified directory .
scan the given log file .
creates an instance of gempak .
init
main method for testing
gets the grid packing type .
find a grid in this parm .
reads a grid from the stream .
/ * ( non - javadoc )
/ * unpack data from a float array .
dp
/ * unpack a single value from the grib1data to the scale .
/ * unpack record from the given position
creates a grib2section record from the given raf .
prints the current navigation block .
prints the anal block .
print the grids in the grid .
displays the grid information .
gb2
read a sequence of bytes )
reads the next byte .
add
prints out a dump of the given printwriter .
prints a dump of the form
{
writes this primitive to the given outputstream .
{
/ * [ icu ] representing a date in the given calendar system .
creates a new {
creates a new {
get
parses an iso 8601 udunits
get
parse
gets the value of the field as an int .
adds a period to this period .
returns a period with the specified period .
truncates a period of this period .
get the difference between two dates .
/ *
creates an atomic var variable .
creates a structure from the given cursor .
creates a sequence of dap .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
make the netcdf4 file ) .
escapes a string .
/ * ( non - javadoc )
creates a list of slices from a list .
is
return
returns true if the given variable is whole .
get the netcdf file for a given file .
returns true if the given dimset is a variable of the given dimset .
computes the effective shape for the given dimset .
extract long value from dataset .
extract a double value from a dataset .
convert
get
convert a list of dimset to a list of ranges .
{
add a date to this date
{
{
{
{
convert the amount to a derived unit .
converts an array of float array .
convert a derived value to a derived unit .
{
*************************************************************************
reads the data from an {
reads the data from a collection .
read the data from a partition .
reads a range of data from the input range .
read the data file
returns the {
{
{
/ * ( non - name .
resolve a uri of the given uri .
returns the string value of the value .
returns the gate size for a given datatype
returns the start of the gate in the specified range .
returns the gate count for a gate
{
convertunsigned
show
creates a new variable from the given variable .
creates a subset of this subset .
returns the layout size of the specified container .
verify that a descendant dataset is a collection of the given filter .
get the d3
get the array1d of a coordinate .
{
tryit
udunits
returns a udunits to a ucum
converts a string to a udunits string .
/ * to a udunits
get
returns the center name for the given center id .
returns the center name of the center .
/ * ( non - javadoc )
extracts the geospatial metadata from the given dataset .
extracts the {
extracts the metadata variables from a {
get
return
return
/ * ( non - null ) date )
make
main
choose the filename to save )
returns the filename of the file .
gets the quantity dimension .
entry point for testing .
check if the file is valid .
/ * ( non - javadoc )
read the records from a map .
<p > the names of the names .
read the stn from the ucar .
this method .
read a data1 variable from a nc2 file .
reads a int from the layout
reads a nc2 variable from a byte array .
elev
calc
calc
calc
calc
calculates the nyquist of a given wave .
make a vertical transform .
remove a partition
uncompress
set
sets whether the index of the extend .
/ * ( non - javadoc )
{
read a variable in the grid .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
get the bounding box of the bounding box .
get the coordinate
returns the bounding box )
scale
finish the shape
flattens this {
tab
pad a string .
pad
pad
pad
format
show
/ *
return
{
make the dataset description for the dataset .
make a grid form of the grid .
writes the axis axis .
returns the shape of the given shape
write the transform transform .
main method .
returns a slice .
counts the total number of the stride
returns the constraint to a constraint string .
composes two {
maps the value of the given slice
fill
dumpbytes
gets the earth ellipsoid
get the type of the given epsg .
encode a { @link section .
decodes the given { @link section .
decodes the vlen data from a vlen .
decodes the vlen data from the given { @link section } .
extract
get
filter
{
make a dataset description for the dataset .
write the transform transform .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the offsets in the time units .
/ * ( non - javadoc )
the main method .
/ * ( non - javadoc )
returns the {
{
prints a dump of the form .
/ * ( non - javadoc )
writes this sink
use {
returns true if the given projection is infinite .
compute the shape shape for each chunk
{
get
get
returns the origin of the origin ) .
{
creates a date from a date .
make a date value from a date .
make
returns the grid spacing in km
add dimensions
add a netcdf to the netcdf file .
adds a variable to the netcdf .
add a gaussian axis to the grid .
creates a projection for the given ncfile
sort
adds a system system system .
this method for testing
/ * makeps
creates the mercator for the mercator .
creates the rotated lat lon for the given ncfile .
create the grid view or othographic .
get the minor of the grid .
make the curvilinear axis for the given ncfile .
set dx
set
read access to a {
reads a {
read a dataset scan .
read time coverage coverage time coverage .
read the metadata content for a dataset .
read the metadata object from a dataset .
/ *
write the inherited metadata .
returns the level type1 )
{
open the lightning file .
adds the global attributes .
read a data from a {
/ * ( non - javadoc )
prints the content of the form to the specified print .
returns true if both arguments .
serialize a dataset to a stream .
{
prints the content of the tree .
prints the content of the tree to the specified printwriter .
prints the content of the specified space to the specified output stream .
{
/ * ( non - javadoc )
creates a new { .
returns the name of the coordinate of the given {
returns the coordinate name of a coordinate .
returns the response body ) response response
build an exception
parses a list of levels in a netcdf dataset .
read a dimension from a dataset .
creates a new variables .
make a time from a time reference .
convert a float to a float .
main
parse
init
wraps a {
opens a dataset .
opens a {
opens a {
enhance a set of {
acquires a {
acquires a {
opens a {
opens a {
acquires a {
acquires a file from the } .
try to open file from cache } .
acquires a {
removes all the coordinate systems .
find the coordinate of the given type .
find the coordinate with the given name .
find a coordinate system by its name .
find a coordinate by name .
/ *
/ * ( non - javadoc )
adds a coordinate axis to this coordinate .
/ *
{
{
make
{
dumps all classes in a group .
dumps the contents of the given {
main
returns a {
returns a {
returns a {
get a {
/ *
/ *
opens a {
opens a {
extract the member array from a iteration .
returns the index of the index .
returns an existing file or null if not found .
find the type by name .
returns the service type for the given name .
/ *
show
check
write the list
gets the features of the two features .
/ *
gets the axis type of the given dataset .
adds a dataset to this dataset .
add a new thredds to the keywords .
adds the documentation for the document .
remove the documentation
returns the index of the specified file .
returns the maximum number of bytes in the specified range .
get
prints the content
/ * ( non - javadoc )
writes this sink
/ * ( non - javadoc )
returns an input stream for the given resource .
returns true if the given ncfile is mine .
creates a new {
{
register a convention for a given class .
register
get the names of the breakup convention to a string .
returns the convention attribute for a convention attribute .
get a factory for a cancel factory .
{
find the coordinate axes for the given dataset .
find the coordinate systems in the given dataset .
find the transforms of the given {
make the coordinate axes for the given dataset .
makes the coordinate systems in the given dataset .
assign the coordinate systems to the given dataset .
make sure that the implicit systems .
make a {
returns true if the given variable is a coordinate axis .
make the transforms of the given {
assigns the coordinate transforms to the given dataset .
add
subset of {
/ * ( non - javadoc )
deletes the given filter from this dataset .
marks the given {
deletes the given dataset .
finish the dataset .
get the time base and factor factor .
convert a string representation of a factor to a double representation .
/ *
convert a string to a erddap .
main
find
{
/ * ( non - javadoc )
inquire
opens the file .
{
count
get the standardprefixdb .
adds a new prefix .
main .
{
compares two rows .
{
pull an event from the map .
pass
returns the event with the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
private
/ * ( non - javadoc )
returns the value of the given attribute .
returns true if the given attribute is an attribute .
append an attribute .
/ * ( non - null value .
append a new container to the attribute .
adds a container to this method .
adds an alias to the alias
delete an attribute from the model .
prints out the content of this method .
print
clones this method .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if two points .
step
/ *
registers a dsp .
returns true if the registry is registered .
unregister the given class .
get
get
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
finish
finish
lookup a node by its fqn .
sorts this algorithm in ascending order .
sorts the given node in ascending order .
compare tables
get the raf for a given partition .
get the filename of the file .
{
open the netcdf file .
reads the data from a file .
find a variable in the given name .
find a variable in the given value .
find the name of a variable with the given value .
find a variable in the given value
find the first structure in the given {
returns the nested structure of a structure .
return
get
get the feature type from a feature
get
returns the dimension of the specified {
returns the dimension name for a dimension
get the value of a coordinate .
connect
{
get a axis2d section from } to a { @link coordinate } .
computes the edges of the given midpoints .
d2
d2
computes the bounds of the aux .
returns the index of the single hit in the given run
find the index of the given run in the given run
/ *
set
returns the name of the {
unwrap a node .
/ *
adds an action to the menu .
/ * ( non - javadoc .
adds an action to the menu .
return
find a type by name .
returns the {
/ * ( non - javadoc )
read bo data from the input stream .
reads the data from the vinfo
convert a structure to a heap .
convert a heap to a heap .
reads the data from a layout .
reads a structure from a structure file .
augment a dataset .
calc
make a coord axis from a dataset .
adds a segment to the list .
the main .
/ * ( non - 1 )
compute
/ *
removes all least popular popular .
add
report
stops all the background loading .
stops the background loading except for a background .
{
{
{
{
gets the column at the given index .
create the columns from the model .
returns a { @link httpmethod object } object .
get the httpmethod instance from the given url
deflate
{
------------------------------------------------------------------------
returns the next integer ) random order .
returns the next float ) float
{
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
get the {
read the station table .
parses a line .
opens a netcdf file .
/ * ( non - null coordinate of a given coordinate index .
{
main method .
removes a data variable .
cloud
write the diff to the two descriptors .
/ * ( non - javadoc )
constructs the transient data .
sets the number of colors in the specified number of colors .
get the color of a color .
sets the min max max color .
prints the content of the print .
/ * ( non - javadoc stream .
sets the world bounds .
returns the buffered image graphics .
paint the image
calculates the transform for a screen .
authscope
upgrade
create an {
finish the grid .
returns true if this factor is reciprocal of another factor .
creates a new interpolation
returns true if this service javadoc ) is relative to the java .
setup the request context context .
setup
generates the dap
/ * ( non - javadoc )
find the index of the first occurrence of the specified range .
reads the metadata from the url
read the metadata content for the {
/ * ( non - javadoc )
validate
read the metadata content content from catalog
read the config
read a dataset source element .
reads the namer for a dataset .
reads a dataset filter element .
read the result service element .
create the config source element for the catalog .
create a dataset source element for the given source source .
create the namer for the given namer .
create a dataset filter element .
/ *
returns true if the given flag is set to true .
construct
adds the menu to the menu .
adds the parameters to the given string .
creates a gempak parameter from the given words .
returns the parameter with the given name .
/ *
reads the contents of an input stream .
reads the contents
returns an input stream for the classpath
initializes the uom .
get
returns the detail information for this trajectory .
sync the trajectory of the dataset .
{
make a double array of level values .
replaces the template template with the given index .
set
read all the members of a cancel task .
add a listener
validate
checks if the store )
accept
set the value of the given object .
sets the new value from the store .
/ *
show
format
reads a bitmap from a file .
writes the state to a stream .
find the type by name .
returns the {
creates a new point .
set the netcdf file .
subset of the coverage .
prints out the xml representation of a printwriter .
set
return
parse global attributes
/ * ( non - javadoc )
/ * ( non - pieces .
construct all top - variables for the given task .
adds a variable to this group .
returns true if the given dstruct is a group .
adds the attributes to the dods .
get the netcdf strlen for a dodsvariable .
returns the shared dimension of the specified group .
constructs a list of the given group .
get the encoded name of a dods
convert an integer value to an integer .
returns the {
convert a {
returns {
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a d2n variable to an array
get the detail
returns the { @link icon .
returns an image for the given name .
creates a cursor for an image .
get
main
reads the data from a layout } .
reads the data from a file .
fills the data from the input stream .
reads the data from a stream .
fills the data from the layout .
reads the data from a layout .
copies the contents of the given {
make
make
decode
encode
convert
reads a {
create a {
adds a field
{
gets the scalar string for the given member .
returns the scalar structure for the given index .
{
{
computes the effective computemembers for the given variable .
prints a single line to a printwriter
adds the dimensions to the netcdf file .
usage : java twitter4j . examples .
create a crawlable dataset from the given path .
normalizes a path .
gets the bounds2d .
set
adds an explicit dataset to the dataset .
adds a dataset scan .
adds a {
cancels the {
make the datasets for the given {
gets the typical typical dataset .
creates a {
set the {
put
adds a point to this shape .
sets the next line .
set the current line .
setup a line in the specified dataset .
get the coordinates of the points .
get the coordinates of this polygon .
validate
checks if the dataset matches the dataset .
checks if a list of {
adds all features in the given {
get the {
/ * ( non - clause .
/ *
/ *
/ *
marks all variables
prints a constraint to the constraint .
returns true if the specified group is a valid group .
parses the swath file from a struct .
set the shared dimensions for the specified variable .
check if the given dimension is unknown .
find a group by its name .
read the xlink
/ * ( non - url ) url .
/ *
parses the file .
returns an enumeration of the property ) .
returns the property
prints properties
sets the section of this section .
set
returns the name of the given dods .
writes variable entries
write variable attributes of the attributes
init the shape for the given shape
adds a layout
invalidates the layout .
removes a layout component .
returns the layout size of the specified parent .
get the minimum bounds .
{
returns true if the given parse is radial .
creates a {
/ * ( non - unit
/ * ( non - unit units .
main method .
read the data from a grid .
/ *
/ * ( non - javadoc )
allow
/ * ( non - javadoc )
convert a sat coordinate to a point .
converts the goes to an array of the geos geos and theta .
converts this matrix to an array .
converts a double array to an array .
{
convert a geographic coordinate to an image .
convert a line to an array of coordinates .
converts a point to an array .
scan
sweep
set
rewrite a netcdf dataset to a memory dataset .
writes a {
rewrite a point dataset to a file .
writes a {
returns an array of {
returns the scalar object for the given member name .
gets the scalar object for the given member .
convert a scalar float value .
returns the scalar string for the given member name .
returns the scalar structure for the given member name .
returns the array structure structure for a given member name .
returns the sequence sequence sequence for the given member name .
show
returns the full name of the parent .
getuniqueid
/ * ( non - javadoc )
/ *
find a dataset by name .
gets the parent catalog .
gets the list .
find a service by its name .
returns the access access access to the parent .
returns the {
{
converts a projection to a proj object
proj a projection to a lat point
convert a proj to the proj coordinates
/ * ( from )
entry point for testing
find all cat in a dataset .
convert a string to a uri .
get the coordinate of a given time index of the given time index .
/ * ( non - array1d ) for a given time for the coordinate .
add the d3
convert an array of double array .
{
computes the rho of the radians .
compute rho
computes the theta for a given lon
returns the scale of the coordinate
convert a projection to a proj
proj a projection to a lat point .
proj
compute the proj for a point in the given coordinates .
entry point of the example .
/ * ( non - standard text )
write a thredds dataset to the thredds .
main .
{
{
{
constructs a structure from a structure .
creates a missing variable .
creates a variable variable .
adds the global attributes to the ncfile .
get
make a list of station variables for a list of stations .
get1darray
creates a station variable .
yy
converts a string to a string .
/ *
/ * parse .
generates a string representation of an error .
print
parses a constraint .
/ *
{
{
reads the request from the request .
reads an error from the stream .
{
reads into the specified buffer .
reads the header from the given input stream .
read the code flag .
get
parseisodate
parse
converts an iso 8601 string to a date object .
creates a new {
read
reads a table from the given inputstream .
transfers {
transfers a group from one group to another .
transfer
transfer
find a group in the specified group .
get
/ * ( non - javadoc )
{
make a subset of the subset .
returns the index of the first occurrence of the specified char array .
is
replace
parses an integer to an integer .
parse
parse
convert a double array to an array of rational numbers .
returns the beginning of the node .
returns the end of this node .
/ * ( non - javadoc )
create
create multiple runtime collections for the given formatter .
create all runtime collections .
validates the edit value .
returns the edit value of the edit value .
sets the value
gets the data type for the given format .
run a dataset .
computes the xyzell of the xyzell of a ( ( and b .
/ * ( non - javadoc )
juday
/ * ( non - javadoc )
spin by v1
execute
convert a point to a double array .
read
clean the specified unit .
remove the name of a name .
equivilant
unitless
prepare
get the {
get the shape
get the projected shape for a projection
get the projected shape for a projection
init
create a new { @link note .
return
parses a {
parses the variables in - memory .
/ *
/ * data variables .
read the dods table to find the table .
find the dods with the specified name .
/ * ( non - javadoc )
returns the {
show
{
{
gets the dimension of the given index
returns the index of the dimension with the given name .
get the string representation of the units .
returns the shape as a section .
returns an immutable {
creates a new variable section .
create a slice of this variable .
reduce a list of dimensions .
sets the {
read an array of data from the specified array .
reads a range of ranges .
reads the specified {
reads a scalar string .
reads the cache
{
reads the contents of a range .
/ * ( non - javadoc )
reads the {
get the name and dimensions and dimensions .
get the name and dimensions and dimensions .
/ *
{
get the name and dimensions and dimensions and dimensions .
return a string representation of this class .
returns the string representation of this dataset .
sets the data type .
sets the shape
resets the shape to the shape
set the dimensions of the parent .
reset the dimensions of the dimensions .
sets the anonymous dimensions .
sets the dimension of the specified dimension .
/ * ( non - javadoc )
set
get all the dimensions in this dimension
returns true if this {
set the bounding box of bounding box
finish
-----------------------------------------------------------------------
gets all the datasets .
{
opens a new {
records a node .
records a variable .
records a struct .
/ *
/ *
/ *
builddim
/ *
buildseqtypes
add
finds the enum
creates a netcdf file .
gets the core dimset of the given dimset .
returns true if the given string is a valid attrname
scan
prints a constraint .
initializes the description of a station .
scans a bufr file for the given counter .
process a bufr message as a dataset .
process a sequence of members .
creates the record variables .
write a {
rewrite a point to a memory dataset .
get
/ * ( non - javadoc )
{
gets the transform .
rotate
calc
returns the map area that is the area .
convert a projection to a screen
create a screen to a world world .
converts this {
documentation inherited
zoom
/
adds a listener to the list .
remove a listener .
/ * ( non - javadoc )
/ * ( non - javadoc )
prints a command to the specified writer .
prints the command to stdout .
print
prints the current state of the specified file .
prints the current variables in a writer .
print
prints a variable data section to a string .
prints the data in the given {
prints out a array
print
write
main method .
returns the false easting scale factor for the given attribute .
read an attribute value .
read an attribute double2 .
add
returns the earth radius in km .
usage : java twitter4j .
finish
check
/ * ( non - javadoc )
reads an atomic variable .
/ *
sets the elements of this variable .
creates the actions dataset .
make sure the action is used to be used by the bamutil
save
enable / disables the button button .
show
start
get the grid parameter .
checks if this method is positive up to the given record .
initializes a observed property .
this method initializes action
creates the map select button .
converts the amounts }
converts an array to an array .
{
make a label for the given quantityid .
initializes the monitoring point type .
return a list of the polygons .
returns a list of lines .
get a list of points of the specified range .
sets the bit offset .
/ * ( big endian integer from the stream .
reads a long from the stream .
opens a connection to the server
{
{
getcompletece
getcompletece
{
parses an xml document from an xml document
/ * ( non - javadoc )
{
get the data
{
{
{
gets the intercepts intercepts between two {
get the intercepts edge intercepts at the specified by the edge .
get the intercepts intercepts at the given y .
returns the reference to the reference .
returns true if this {
return
idv
idv
initialize the phenomenon time for the given station .
/ * ( non - javadoc )
/ * read the header from the file
handle the file information .
handle the processing information
handle
handle sensor information .
dump
reads a {
clean
{
open the file .
add the global global attributes
check if the file is in the raf file .
read all data from the specified file .
read data from a variable } file .
xunescape
return
unescape
decode a string .
encode
make a lightning variable .
adds the global global attributes to the lightning .
sets the content disposition value .
prints out the content to the given writer .
prints out the content of a printwriter .
{
serializes a dataset to a stream .
set the projection for the specified dimension .
get the start of the specified dimension .
prints out the xml representation of the xml file .
swap two short arrays at the specified positions
swap two elements of two byte arrays at the specified positions .
swap two double arrays at the specified positions
swap two float .
swap two double .
short
return
long
read an array from a variable at the specified time index .
/ *
opens a grid dataset for the given element .
get the time coordinate of the given axis .
returns the vert of a given id .
returns the ens for the given ens .
write
writes the last modified document to the last modified date .
parse the xml string from the given xml string .
resets the state of this {
/ *
yyerror
reads a coordinate array from the given time index .
get the coordinate at a given time .
creates a new array with the given values .
make a height of the array .
{
write
add levels to the list ) grid .
returns true if a list of the records .
adds the dimensions to the netcdf file .
adds a group to the netcdf file .
find the coordinate transform )
{
exit
returns the default {
set
get
returns the file for the given location .
delete
gets the existing file or cache .
creates a unique file )
make
show
clean
get the message sequence .
/ * ( non - javadoc )
/ * ( non - javadoc )
calculates the bearing bearing for the given earth and bearing .
calculates the bearing bearing for a given point .
calculates the bearing bearing .
calculates the bearing bearing for two points .
/ *
find a point in a point .
returns a point in the given point and returns the position of the given coordinates .
returns a point in the bounding box .
find a point in the given earth
load
load
load
stops the image .
stops the image except that the image is loading .
{
adds a listener
{
sets the status of the spl .
set
returns the unresolved unresolved url
/ * ( non - associated with the given bit width .
transfers all the data from one list to the list .
counts the number of bits in the replication .
/ * ( non - javadoc )
get
load
loads the data from the file .
get the field with the given name .
returns the doubles of a field name .
/ * ( non - javadoc )
/ * ( non - javadoc )
get
/ * ( non - javadoc )
main
returns the attributes
sets the attribute for the given attribute .
removes an attribute value )
returns the {
gets the container of this node .
set the parent node of this node .
replies the escaped short name .
gets the path of this node .
gets the container path .
return the group path of the dap .
returns the path of the path .
returns {
/ * ( non - null .
add
{
/ *
build the d4data compiler )
writes the sobs dataset to the sobs file .
returns the value associated with the given key .
put
{
put
get
returns the names of the children of children .
get all children of a node .
/ * ( non - spi keys )
get the collection of the specified node .
sets the child of this preferences .
returns the spi value for the given key .
put
removes the node spi .
returns the value of the specified key
read the data points to the data file .
read the raw data from the given file .
read the data from the quasi file .
read the data from the specified file .
prints the current dap .
prints a variable .
prints a compound instance .
{
write an element to a string .
writes an element to the given file .
serializes the content of the given stream .
serializes the xml document to a writer .
make the explicit netcdf element .
creates an enum typedef element .
make a dimension element .
make an element element from the given variable .
creates a measure type .
make a transform a ) coordinate for the specified attribute .
get an integer array of attributes
/ * ( non - javadoc )
{
/ * ( non - javadoc )
init
generate the crawlable dataset .
creates a new {
clone a new unit .
creates a new {
creates a new { @link unitdbimpl .
returns a new instance of { @link si } .
update the dataset
/ * ( non - javadoc )
{
find the discontiguous element in the given array .
find the regular element in the given value .
find the index of the contiguous element in the contiguous .
returns the index of the specified interval .
find the discontiguous interval of the given axis
returns the index of the first hit in the given target .
find the closest closest point of the target .
adds a subset of {
find the subset of the coverage values .
create a subset of the coverage axis .
/ * ( non - javadoc )
write netcdf
show
data
grib
check the local params are not found .
check the tables for the given formatter .
scan all issues in the given formatter .
show
sort
opens a feature dataset .
opens a {
opens a feature dataset .
opens a dataset .
finds the {
annotate the given {
get the image access to the given result .
find the access by service type .
find the access by data format .
{
{
reads the data from the interpolation file .
reads the data from the raf file .
get the binary data info from a file .
reads the raw data from the file .
returns the url of the url .
/ * ( non - javadoc )
canonical
return
augment
normalizes the specified units .
create a lon axis for a lon axis .
assign the transforms of the given dataset to the given dataset .
checks if the given path matches the given path .
compiles this dataset .
/ *
get the groups of the nc4 of the groups
/ * ( non - javadoc )
finish
{
{
{
get
/ *
prints a node to the given node .
/ * ( non - dap .
/ *
returns true if the given attribute is special .
prints the dimrefs of a variable .
convert a string representation of xml .
{
checks if the given file is a valid .
reads a variable from the input stream .
sets the area directory attributes .
/ * set of attributes
/ * string representation of the specified index .
get the cal type .
set
finds the coordinates in the given table .
find
finds a {
finds a {
finds the dimension by type .
find the best coordinate of a netcdf .
find the dependent axis of the given axis .
{
{
prints the content of this tree .
prints out the content of the server .
/ * ( non - javadoc )
set
serializes a dataset to a stream .
add
get the variable with the given name .
returns the variable at the given index .
{
checks if all of the variables in this template .
prints out the contents of the tree .
/ *
deserialize
read single statusui from the given inputstream .
reads the marker from the given stream .
write
writes this marker to a stream .
{
parses the xml document .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------- [ event ] ---------------------------------------------------
creates a random time series .
creates the example .
gets the java array as a string .
returns the parameter list ) of the sensors .
setup the stn actions
set
sets the selected station .
document me!
sets the trajectory info .
returns the {
{
{
{
write the catalog
write the inherited metadata .
adds a projection to this projection .
add a point to the box .
determine whether the intersection intersect the intersection } in the given rectangle and store the parameter <i > x< / i > and store <i > x< / i - max / i > x< / i > in the given projection <i > x< / i > matrix >
{
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
returns true if two {
add a unitdbimpl
add
adds an alias to the unit .
adds a new symbol .
adds an alias to the unit .
add an alias to the unit .
get
add a unique unit test
add
add
build the file list of files .
adds the specified menu to the menu .
return
fancy
find a record by drspos .
read the next repeating repeating record .
{
sets the data for this structure .
serialize a dataset to a stream .
/ * ( non - javadoc )
return
{
precalculate
convert a projection to a proj
converts a projection to a lat point .
/ * ( non - to )
read the xml file from the template .
draws the project
opens a feature dataset .
opens a feature dataset .
opens a feature dataset .
open a {
finds the { @link dataset for the given access list .
annotate the global
get the image
/ *
find
removes all the dups of a list
add
returns an immutable collection of {
creates a {
gets the instance of { that matches the given duration .
gets an instance of {
/ *
read the xml document from an xml document .
parse the capability to a capability .
get the cdm of the given query
/ * ( non - javadoc )
writexml
query
set the projection of the specified projection .
{
reads the structure data from a nc2 file .
sets the picture .
sets the buffered image .
zoom the scl in the scl .
zoom
center
scroll the scl up to the scl .
scrolls the scl down the screen .
scroll the scl }
scroll the scl .
sets the location
paint the component .
scalable status change the scalable status .
returns the tg of the tg tg .
returns the tg of an array of the given int array .
tg
cdtm
itoc
return
st
return
lv
reverse
returns the grid packing name for the given pktyp .
get the data type for the specified int .
/ * data from the given stream .
copies all bytes from the input stream to the output stream .
prints out out to stdout to the output writer .
{
returns the tag enum for the tag .
entry point for testing .
opens a buffered image .
get the next image from javadoc .
returns the size of the given type .
convert a vector to a vector .
get the sum of an array .
set the grid grid .
sets the overlap of the overlap .
removes all the elements .
mark the specified object in the specified object .
find the intersection of the specified rectangle .
find the intersection of the given point in the grid .
returns the closest to the specified )
finds the closest perimeter of the closest perimeter .
returns the distance between two points .
sets the trajectory info .
return
send
reads a coordinate of a coordinate from the specified time .
get the height of a given time .
gets the base unit for the given name .
*************************************************************************
opens a collection of {
stores the metadata for a file
gets the protocols of a url .
find a dataset url from the given location .
search for a fragment .
parse a fragment into a fragment .
search for the url of the url .
decode a path extension .
decode lead protocol protocol protocol .
checks if the given location is a valid http service type .
check if the given location is valid .
check if the given location is valid .
checks if the given location is valid .
send
returns the suffix of the given fqn .
returns the prefix of the specified fqn .
locate a file in the given filename .
locates the relative relative relative to the specified relpath
canonicalpath
extract
returns a list of dap for a given variable .
return
returns true if the slices is whole slices
joins the elements of strings with the given separator .
return
get
converts a list of {
returns a list of {
creates an {
converts a list of indices to slices .
is
return
convert a list of slices to an index .
reads the data from the input stream .
/ * ( non - javadoc )
read the ncfile file from the proto file .
make the document for this xml document .
writes the index file to the index file .
creates a new {
copyfrom1djavaarray
sets the station information for the station .
sets the short names of the model .
{
prints out the content of the server
read the tables from the given tables .
read the sub - categories from a file .
add
read the configuration from a file .
read config from catalog from a catalog .
add a dap
update the groups of groups .
returns the {
find a variable with the given name .
compares two groups .
/ *
check if the given group is enums .
checks if all of the specified .
check
is
get the axis type for the given dataset .
returns the stat type for the given time range .
calculates the subset of the horiz .
subset of the subset of intervals
returns a list of intervals .
returns a list of this range .
calc
calculates the bounding
returns a list of { @link latlng } of the specified by the given coordinates .
calc
returns a list of connected
get a string representation of a string
set the properties for the property .
set
sets the global compression compression .
set global credentials
set the {
get the value of the cookie .
sets the maximum number of redirects .
sets whether the follow redirects should be follow .
sets whether the use sessions to be use of the {
closes all methods .
sets the {
set credentials
set the authentication and proxy credentials .
/ *
return
track
removes the authcontrols from the read
set
sets the global credentials provider .
kills all {
sets the global credentials provider .
validates the given url string .
creates a new index factory for the given shape .
computes the strides of the given shape .
flip the element at the given index
returns the index section of the specified range .
returns the index
reduce the index by the given index .
returns a new index with the specified index2
returns a new index from the specified shape
{
returns the index of the current element .
sets the current counter .
sets the element at the specified index .
sets the dim value .
sets the index of the specified index
returns the debug string to a string .
/ * ( non - javadoc )
/ * ( non - javadoc )
initialize the {
read stations and return true if there is null .
returns a list of the time keys in the list .
make a list of file dates .
make a list of parameters from the given part .
gets the list of the {
creates a station station from the given header .
returns the names of all the keys .
returns the list of station keys in the gempak .
returns the dates
prints all the dates .
prints stations
find the index of the given id .
returns the file type .
indent
sets the indent of the indent .
initializes the clause .
walk
/ * ( non - javadoc )
{
collects all components of the given stack .
/ * ------------------------------------------------------------ methods for the given components ) .
walk
/ * ( non - z ) clause to a sub .
translate the variable to a sub .
translates this { @link clause to a { @link clause } .
sets the variable for this chart .
{
creates an index from a single file .
opens a {
add
/ * ( non - javadoc )
scan
set
adds a new variable .
write
add
returns the atomic array of the given structure .
returns the xml representation of this document .
creates a document containing the axis .
main
marshals a {
validates the given object .
/ * ( non - javadoc )
{
sets the original variable .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
convert a {
convert a {
this method to struct .
find the variable with the given name .
/ *
this method .
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
registers a dataset source .
prints a constraint to the standard output stream .
/ * ( non - javadoc )
{
reads the sounding data from the given variable .
constructs an empty sequence sequence .
creates a sequence of members from a sequence of values .
read the gempak
build the file .
creates a sequence of parameters .
adds the vertical coord attribute .
set
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - > document
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
returns the {
show
creates a unit name .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts the given float array .
{
*************************************************************************
write a geometry to a string .
write a point
write
writes a polygon
parses the xml document into a document .
/ *
/ * ( non - javadoc )
returns the subnodes of the given parent node .
parse the xml tree .
pass
gets the subset of a subset of a variable .
creates a { @link arraystructurema } from a { @link arraystructurema
sets a member array .
creates a arraystructurema from the given shape .
read a polygon .
read a line .
read a point .
returns the geometry type for the given name .
creates a { @link station .
/ *
/ * ( non - javadoc )
add the specified node to the dataset .
object
creates an array object factory .
creates an array of the given index .
/ * ( non - javadoc )
checks if two points .
{
returns true if two points are contained in the {
extend this point by p
creates a rect with the specified rect .
returns the bounding box with the specified bounding box
returns a string representation to a string2 to a string2 representation .
adds two arrays
<p > performs the following operation : <br > <br > b
returns true if the two arrays are equal
returns true if the shape is the same shape is a shape
convert an array to an array .
copies the content of the specified data type } to the given index } .
copies the content of the array .
copies all elements of the given array to the given array .
copies the contents of the array to the given array .
copies the contents of the given array to the given array .
copies all elements of the array to the given array .
copies the contents of the given array to the given result array .
copies the content of the array to the contents .
copies the content of the array to the result .
copies the contents of the array to the given array
copies the content of the given array to the given array .
returns the maximum value in the given array .
sets the value at the given index
returns the sum of the sum of the elements in the array .
returns the sum of the second .
creates a new scale offset based on the input value .
returns true if they are equal .
/ * ( non - javadoc )
create a catalog builder .
returns the attribute table for the given name .
returns the value of the given name .
/ * ( non - javadoc )
/ * aliases for the given table ) .
/ *
/ *
{
creates a grib1gds factory .
returns the octet3 of the given start index .
/ * ( non - javadoc )
returns a projection adapter for a projection is a projection
{
convert a projection
{
unescape
decodes a string .
decode
escapes the given string .
/ * unescape characters in the given string .
returns the escaped name of an escaped name .
find the index of the first occurrence of the specified character .
backslashtodap
escape the given string .
backslashescapecdmstring
reads an atomic variable
reads an atomic scalar scalar scalar scalar value notes .
returns the offset of this variable
returns the size of the given type .
computes the true offset of the given nc4cursor .
returns the path of the given cursor .
returns the vlen
/ * ( non - javadoc )
gets the descendants of the given type .
gets all descendants of the given type .
returns the descendant component of the specified type .
gets the descendant descendant of a class .
returns the descendant component of a class .
gets all the descendants of the given container .
get the uidefaults of a class .
gets the uidefaults for a class .
get the value of the given property
get
return
compiles all the top - level .
compiles a structure array .
compiles a structure .
compiles a sequence array from a sequence of instances .
compiles a sequence of variables .
extracts the checksum from the given data buffer .
/ * ( non - space
reads a long from the stream .
read a number of bytes from the work .
returns the match type and dimension of the given type .
read a {
gen - last : action
removes an action listener from the workgroup
accept
returns the field with the specified name .
returns the value of the named field .
set
adds a field to this field .
adds a check box field .
add
adds a double field to the record .
add
add
add
add
add
add a heading to the layout .
{
{
finish
find the active frame in the jframe .
reads a single object from a dataset .
returns the cell spacing .
returns the factors of factors .
/ *
returns the factors
returns true if the dimension is reciprocal of the given dimension .
returns true if there is dimensionless .
initializes the observation member .
fires a tree event event .
fires a tree event event event .
fires a tree event event event .
persists the cache to disk .
persist
get the cache name .
make
returns a factory for a factory .
creates a new grib1param instance .
/ * ( non - table table .
add a lookup
add a parameter table .
{
{
{
converts an array to derived unit to a derived unit .
{
{
opens the file .
creates a dimension from the dimension
reads the data from a range .
initialize the unit table .
make a vertical variable .
add a set of variables to the map )
reads the descriptor from the file .
skips the specified descriptor .
returns the name of the file .
read
reads a short from a byte array at the given offset
reads an integer from a byte array .
reads a float from the byte array .
reads a double from the byte array .
get
<p > singleton instance of standardunitdb .
/ * au
parse the unit .
/ *
/ *
the main .
canonicalize
resolve the relative uri of the base uri .
creates a converter from the given unit .
write a {
{
{
sets the structure data .
set the point data .
draws this draws the specified transform
get the shapes for the data
initializes the document metadata .
/ * make sure that the time coordinate2d .
make the time coordinate2d for the given group .
constructs a lazy - time1darray array .
constructs a lazy - based time2darray
{
execute
read data from an input stream .
reads a buffer bytes
reads a buffer from input stream .
reads a buffer from input stream .
read more bytes from the buffer .
/ *
{
open the file .
main .
get the coordinate of the coordinate .
get the height of a coordinate .
returns true if a list of records in the list of records .
add the dimensions to the netcdf file .
adds a group to the netcdf file .
returns the index of the specified record in the specified record .
/ * ( non - javadoc )
open the file .
reads the data from the given variable .
reads a one scan data ) from the input stream .
read one row data from a row .
create the variable from the given dataset .
creates a new variable .
{
fire the map area event
set
set the map
sets the map area for a map area
/ * ( non - null )
adds the actions to the menu .
redraw
set whether the toolbar is changeable .
repaint
{
returns the graphics image graphics .
<editor - fold defaultstate = collapsed desc = misc >
new
draw the graphics
set
/ *
gets the double value of a given offset .
reads a double value from the dap4
get the value of the given index .
gini
gini
gini
returns the long name for a phys .
reads a scaled scaled integer
find a parameter with the given name .
/ * ( non - javadoc )
{
read the grads file .
swaps the byte order .
/ * ( non - javadoc )
/ *
gets the file names of the file names .
get the file name of the file .
get
adds a chsub to the list .
/ * ( non - javadoc )
writes the data to the stream .
converts a reference to a intv .
creates a boolean factory for the given index .
set
{
reads a ucar from the file .
/ * ( non - javadoc )
reads the netcdf file from the netcdf file .
pcode
create a pcode variable with the specified index .
checks the header
pcode
generate the pcode 128 - 128 - 128 - 128
/ * ( non - pcode )
pcode
/ * ( non - javadoc )
/ * ( non - javadoc )
parses a list of components .
/ *
/ * ( non - javadoc )
add
reads a string in a string .
reads a generic number of components .
returns an array of the levels .
returns the levels of the specified levels .
returns the levels of the given nlevel .
returns an array of dualpol levels for the given short array .
returns the levels of the given nlevel .
adds a variable to this method .
adds a parameter to the netcdf .
returns the product level of the product
/ * set of the product
reads a uncompressed uncompressed data from the uncompressed data .
reads a divider from the buffer .
reads the msghead from the station buffer
return
get
reads the proddesc from the buffer
convert data
convert a byte array
/ * ( non - javadoc )
encrypt
/ * ( non - javadoc )
creates a code between the two matrices .
pname
reslookup
levelslookup
{
/ * ( non - javadoc )
generate
read the dap to the given request .
/ * ------------------------------------------------------------
add common headers
get the {
send
sets the endianness for the dmr .
set the constraint constraint )
check if this point is inside this point
draws the specified point .
end
{
{
returns the last bounds of this rectangle .
converts a text to a date . util .
parse
parse
parse
parse
parse
to
this method .
ensures that an array size is not empty .
round to int .
initialize the local table .
reads a {
reads a {
reads the raf file from a file .
read the raf file from the given file .
reads the raf file from a file .
reads the raf from a file .
float4
reads a long from a file .
counts the number of bits in a bitmap .
{
calculates the radians .
returns a string representation of this origin
returns the scale of the coordinate
converts a projection to a projection } to a projection } to a { @link projection } .
proj a point to a lat point
/ * ( non - lon )
proj
escapes the given string .
escapes a string in the given string .
unescape all the special characters in a string .
backslashsplit
clean the string .
/ * ( non - javadoc )
creates a catalog from a collection .
make the fmrc inv from the given formatter .
get
get
counts the number of elements in this map .
adds a variable to this map .
returns the variable at the given index .
performs a set of the variables in this set .
prints a dump of the form <code >
/ *
returns the number of projected components in this map .
projection
{
make
{
{
{
gets the reference time .
creates a new {
{
optimize
reads a grib1section record from the given grib1record .
/ * ( non - grib
get
returns true if the given ncfile file is mine .
transform the makeutmprojection projection .
gets the axis type for the given dataset .
opens the area .
read a data from a variable .
{
{
{
{
parse
/ * ( non - catalog catalog ) .
creates a catalog from the given directory .
find a type of the given name .
get
sets the value of the specified value .
/ * ( non - javadoc )
externalize
adds a coordinate system system .
get
/ *
returns the string representation of the variable .
initializes the context .
clear
checks if the catalog is in the catalog .
reads the catalog from the catalog .
process the datasets .
read all the cats in the specified directory .
/ * ( non - javadoc )
returns {
returns the lon normal from the given lon .
convert a lat to a string
returns a string to a string to a string
compares this quantity .
main .
returns the selected dataset .
sets the selected dataset .
creates a tree path for the given node .
opens the catalog .
set
sets the catalog .
show
show
{
find
/ *
/ *
/ *
writes a string .
/ * ( non - ascii characters .
reads a string .
/ * ------------------------------------------------------------
reads the data from the index file .
set
get the table config for the given feature type .
get the coordinate at a range .
gets the coordinate of the given time index
add a member to this member .
hide the member .
<p > a list of member names . < / p >
returns a member with the given name .
reads a bitmap from a file .
restore the state of this class .
save
returns an iterator over all selected rows .
set
get the model index .
ensure that the row is visible .
sets the member data .
returns an array of {
returns the scalar scalar value of the scalar .
returns the java array as double array .
gets the scalar value of the scalar data .
gets a java array as an array .
returns the scalar scalar value .
gets the java array of java members .
returns the scalar scalar value of the given structure .
returns an array of int array of java members .
gets the scalar value of the data member .
gets a java array of short data array .
gets the scalar value of the given member .
returns an array of long array of java .
gets the scalar char for the given member .
get the java array of java array .
gets the scalar string for this member .
gets the scalar structure for this member .
writes the dataset entries to the specified directory .
write
is
add
returns a {
transfers the metadata from the {
transfers the inherited metadata from another {
returns the inheritable for the dataset .
adds a product to the list .
adds the extra attributes for the given variable .
make a variable from a group .
show
show
show
/ *
dump
returns the long name of the grid .
register
registers a factory for the given class .
opens a {
open a {
initializes the default point metadata .
/ * ( non - javadoc )
/ * ( non - encoded outputstream
returns {
get the object at the given index .
return a list of {
get the subset of the subset of { @link coverage .
/ * ( non - javadoc )
/ * ( non - outputstream .
check if the file type {
memequal
prints out the xml file to the given writer .
prints the ascii array to the given print writer .
/ * ( non - javadoc )
parse a dap dataset from a string .
process the attributes .
suppress
get
get
get
get
get
get
{
{
add a list of coordinates to a } .
collect all values of a string .
{
reads the data from a nc2 file .
read compressed data from a compressed data file .
reads the gini line from the raf file .
set
初始化
parses a {
/ *
creates a string representation of a variable spec .
returns true if the row contains the given row
returns true if a point is within the point
jump2
returns true if the row is a lat
{
closes this connection
/ * ( non - javadoc )
executes the request
get the table config for the given dataset .
get the table config for the given dataset .
get the profile config for the given dataset .
get the trajectory config for the given dataset .
get the time series config for the table .
identify the encoding station .
identify the raggeds .
identify the double raggeds of the evaluator .
make a table table table for the given type .
make a child table config for a ragged .
make a table config for a table .
make a table config for the middle .
find the full name and dimension of a dimension and dimension .
set
/ * ------------------------------------------------------------
/ * ( non - javadoc )
return
convert a string to a uri .
exclude a uri uri .
nullify
canonjoin
return
delete
returns true if the given path has a drive letter .
insert
accept
creates a mfile
copy
returns the filenames of all filenames in the filenames .
sets the index
gets the index filepath in cache .
set
{
prints out the attributes of the xml ) of the attribute .
returns the number of counters in this bit
opens an existing netcdf file .
creates a new netcdf .
add a new dimension .
add a dimension .
rename a dimension .
/ * ( non - javadoc )
adds a global attribute .
adds a global attribute .
/ * ( non - javadoc )
renames a global attribute .
adds a new variable to this method .
add
adds a variable to this variable .
adds a string variable to this variable .
{
adds a variable
add
add
/ * ( non - javadoc )
rename a variable attribute .
{
creates the service
rewrite the file .
/ * ( non - javadoc )
/ * ( non - javadoc )
writes a string representation of string .
write string data in the array .
/ * ( non - javadoc )
add
creates an instance of gempak .
/ * ------------------------------------------------------------ .
make the file sub - type sub type {
prints the ob of a matrix .
main method .
generate the wfsxmlhelper geometries .
write members
return
returns the xml representation of the xml document .
creates a collection of the station .
make a station obs for the dataset .
entry point for testing
/ *
sets the dmr from the given string .
extract
write an error message to output error .
/ * ( non - chunk of the stream .
closes the stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
converts a projection to a proj
convert a projection
entry point for testing .
adds a {
schedule
returns <tt > true< / tt > if this range .
compose
returns a new range .
get the element at index i .
get the index of the first element ) .
returns the intersection of this range .
returns {
shift an origin of this range .
creates a range of this range .
returns the index of the given interval in the interval .
return
/ *
/ *
reads the data from the {
writes the data to the layout .
get the table configuration for the given feature type .
reads in a dataset from the specified dataset .
/ * ( non - outputstream .
write
returns the subset of this vector .
{
set data type .
returns an iterable of {
/ * ( non - javadoc )
load
/ * ( non - javadoc )
delete
set
set
writes a {
write the swath
interpolation
get the swath information for each line in - point
{
convert a projection to a proj
converts a projection to a latitude point
/ * ( non - 1 )
proj
determine if two points are cross .
make a double array .
get the {
get
checks if the grid is requested .
returns true if the same name have the same .
create a latitude coordinate to represent a stereographic coordinate .
returns the scale factor for a given lat .
converts a projection to a proj
converts a projection to a lat point .
proj
returns a point to proj in the proj
returns the {
/ * ( non - javadoc )
/ * ( non - horiz .
make a list of the dense grid from the given grid .
make the vertical dimensions of the vertical dimensions .
read the awx file from the file .
/ *
transfers the metadata from the parent dataset .
/ *
transfers the metadata from another dataset to another .
transfers the metadata from the target metadata to the target metadata .
canonicalize the metadata .
{
add
removes a {
replace
add a service .
remove a service .
<p > a list of services .
removes the local metadata for the dataset .
{
writes the html description of the dataset .
resolves a href of the href .
validate
returns true if the specified dataset is a name dataset .
[ variable name for this dataset .
returns a list of all descriptors .
初始化
/ * ( non - javadoc )
construct
/ * get capabilities to the series
get the feature list
/ *
/ * ( non - javadoc )
dsp
/ *
get
generate a string representation of the given dataset .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get
generates the dataset
dataset the given dmr variable .
setup a point in the dataset .
form
return
return
return
return
set
get
forward
get
returns the {
get
get
get
show
show
shows the threads .
get the axis type of the axis .
saves the current file to disk
create a new dialog .
{
creates a new {
set
init
begin .
initializes the end position .
init
/ *
sets the bit offset .
/ * ( non - null bit counter .
counts the number of bits in the replication .
read the table
append
/ *
/ * ( non - javadoc )
the main method .
find a variable by name .
make a collection of a station collection .
get the capabilities of the xml document .
byte
/ *
returns the double value at {
get the record at the given subset .
returns the coordinate of the given index .
creates a new {
adds an item to the list .
get the list of nkeep
get the coordinate of a given time index .
{
get a slice of this slice .
return
/ * ( non - javadoc )
return
{
get
returns the level type for the specified code .
writes the index of the file .
write a sparse array to a sparse to a sparse
read dataset scan config .
read the dataset scan filter .
read dataset
read the files in the given element .
add a read to the dataset .
check if a feature type is an endpoint
set
creates a new time .
creates a grib1gds factory for the specified center } .
creates a {
read a file from an input stream
reads the total number of bytes from the given channel .
copies all bytes from the input stream to the output stream .
read
reads the contents of an input stream } into a { @link inputstream .
write
copy
copy
copy2file
copy
copy
copies all bytes from the given {
copy
reads the contents of a byte array .
read
writes the contents of a file to a file .
writes the contents of a file .
write
write
copy
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
prints help
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
prints the catalog to the given print .
/ * ( non - javadoc )
/ * ( non - javadoc )
prints the status of the server .
/ *
/ * ( non - javadoc )
show
print the print
get
init
resolve an entity .
reads the vlen data from a section .
open the file .
read an xml document from the xml file .
opens a collection of the specified ncml .
allow
break
cleanup
filter
get a string from a string .
makes a valid cdm object name .
compare two strings .
pad the given string .
pad
removes all occurrences of the given string .
removes all occurrences of the string .
removes all occurrences of string from the end of the string .
remove
collapse whitespace .
replace
replace
replace
unreplace
replaces all occurrences of the given string with the given match .
escapes a string in the given string .
un - >
replaces the given string in the given string .
remove
delete
replace
substitute
trims all occurrences of the given string .
/ * ( non - dataset .
/ *
show status
check the state of the current state .
updates the state
returns the full name of the dataset .
make the top - level .
make a catalog files from the given catalog .
get the {
gets the netcdf dataset for the given match path .
returns the file name of the given file .
copy the data representation of the nc2 to the output stream .
check the tables of the given .
do
sort
pds
id
drs
gds
show
rename
{
/ * ( non - blocking state ) . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
calc
/ * information for the gds .
load
build the global global attributes .
build the variable summaries for the given variable .
creates a deep copy of the given structure .
convert a bo from a bo .
convert a bo from a bo .
converts a {
create a bo from a bo .
returns the given structure to a heap .
/ * ( non - javadoc )
convert a range of numeric to a axis1d section into a range of numeric ] .
returns the names of the names of the names .
/ * ( non - javadoc )
get the table configurer for the given feature type .
analyze the analyzer factory for the analyzer .
returns the first feature type .
analyze
make the default structures for each axis in the table .
show
creates the xml document for the table .
open the netcdf file to the given file .
{
opens the grid .
opens the specified {
forces the buffer to the grid .
short
set
copyto1djavaarray
returns the double value at {
/ * ( non - javadoc )
/ * ( non - javadoc )
print
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
print
prints the help page menu .
/ * ( non - javadoc )
get
swap two long at the given offset
swap two float arrays at the specified positions
swap two char arrays at the specified position
find the axes of the given dataset .
add
returns the variable with the given name .
returns the variable with the given name .
find a group by name .
find a dimension by its name .
find a dimension by name .
/ * ( non - null .
find an enumeration by its name .
returns the common parent of this group .
returns true if this group is the parent of this group .
get the name - > ) name and attributes .
{
adds a new dimension .
adds a new dimension to the set .
adds a group to this group .
/ *
adds a variable to this group .
{
{
{
remove a dimension .
removes a variable with the specified name .
sets an immutable group } of variables .
make
get the das das das ) table .
/ * ( non - name ) .
check if a table name of the same name of the loose name .
repair
append attributes from the attributes to the bt to the bt .
populate the attribute table .
print
delete a variable .
returns the dconstructor of the given type .
/ * ( non - name .
{
/ *
/ *
checks if all of the elements in the same order .
prints out the content of this output stream .
resolve aliases
resolve all the aliases .
/ * ( non - absolute alias .
returns the deepest matching variable .
normalize
tokenize an alias field .
prints out out of the xml representation .
set the specified das attribute table .
ingest an attribute .
ingest an attribute table .
ingest
check if the attribute name is a conflict .
return
return
clone this map .
make an index for the given file .
creates an id proto id section .
write a grid to a grid .
writes a grid in the grid .
replace
replace
get the xstart for the xstart
write a single grid .
searches the aliased dimension of the specified dimension .
write
return
creates a {
copyfrom1djavaarray
returns the value at {
/ * ( non - javadoc )
acquires a grib collection from a grib .
returns the top index file from the given config .
make the top - level index file from config file .
gets the type of the collection .
creates an immutable {
this method to collection of {
checks if the collection of the collection .
update
updates the grib collection .
updates the partition index .
updates the leaf collection for the given leaf
update the partition index .
opens an immutable collection of {
creates an immutable grib collection from the given raf .
creates an immutable grib collection from the given data file .
creates a {
creates a {
{
url
add
find
set
load
insert
print a constraint declaration .
returns a list of the datasets .
find a dataset by name .
set the projection for this project .
returns an iterator of the shapes .
make the shape for the given iterator
{
start the progress monitor task .
scan the leaf directory collection .
checks if the given collection needs to see {
create the partitioned index for the given partition .
make the best complete dataset for each dataset .
writes the index of the given {
writes a {
writes a {
write a {
write a proto variable proto variable proto proto variable .
write the partition proto proto to write operation .
returns true if two data .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
normalize a list of {
writes a sparse collection of sparse to a file .
writes {
writes a {
write a {
{
returns the structure data for the given index .
returns an array of data as an array .
sets the member array .
extract a member array from a structure .
copies all structures from the given index to the given index .
gets the scalar object for the given data type .
convert a scalar float to a float
convert a double value to a double .
convert a scalar int to an int .
gets the scalar value of a scalar .
gets the scalar data of a byte array .
gets the short value of a scalar .
gets the scalar char for the given member .
gets the scalar data as a string .
get the scalar structure for a given member .
gets the array structure for the given data .
returns an array sequence as an array .
gets an array data as an array .
sets the direct value of the specified point .
precalculate
returns true if two points of the two points .
convert a value to an attribute .
returns the java size of the given type .
force
minmax
extract
returns the file name for the given response .
prints the proj args for a matrix
evaluate the expression .
converts this constraint to a constraint string .
/ *
determine if the given node references to this node .
returns true if two dap .
/ *
returns the index of the first variable in the given variable .
expands all the variables in the dap
sort
returns true if the two fields are r .
counts the number of fields in the given structure .
returns true if the given structure is a whole compound .
computes the dap of each dimension .
add
add
compiles the given string into a ceconstraint .
{
{
subset of {
{
stores the persistent data in the store .
/ * private void bamutil () .
{
creates a new { @link gempak .
initializes this file .
initializes the file .
get
set
read the header header information .
reads the keys from the keys and values
read headers
reads the parts .
main method .
find a key by its name .
find a file header by name .
/ * ( non - javadoc )
prints the parts of the parts .
returns the part of the part .
returns the part of the given part .
returns the data pointer for the specified part .
read
/ * ( non - javadoc )
returns the rflt of the specified word .
/ * ( non - javadoc )
{
see {
/ * ( non - javadoc )
dm
returns a string representation of an integer .
writes all the data in the specified {
write
writes the {
parse the xml tree } into a document .
parses the content from an inputstream .
parses the base element .
parses an xml array .
build an array template .
parses the grid grid .
/ *
new
creates a new base type factory .
/ * parse attributes .
parse
normalizetoxml
creates a { @link feature .
decode
replicate
grab
flatten
operate
/ * ( non - javadoc )
returns the dataset filename .
prints out the server methods .
{
get the feature type of this surface
reads the data from a file .
read the standard data from a variable file .
reads the ship data from the given variable .
build the gempak file
build the standard file .
build the ship file .
returns the difference .
returns the difference .
returns the relative difference between two values .
returns true if the { @code float } ) .
compares two bytes .
copies a {
read the wmo from an xml file .
read the wmo from an xml file .
write a {
write a {
converts a {
{
{
sorts the sort of the array of the ray .
probe
{
returns true if the variable is tiled .
creates a new coordinate from the complete .
{
converts a projection into a }
proj
returns a proj to proj in - to - proj
returns true if two points of this projection
converts a {
{
show
/ * ( non - javadoc )
sets the direct direct values .
show
make
returns an array of values .
returns the value of the data property .
gets the numeric value of the given index .
encode
set
set
set
scan
generates a catalog ds catalog .
returns the collection id for the dataset .
gets the url path for the given dataset .
returns the xlink href for a dataset .
writes the given { @link outputstream .
schedules a write message .
prints out the encoded line to the specified writer .
make a report for the specified parent .
set the thredds datatype .
jumpto
jumpto
sets the {
prepare the gui .
create the tools frame .
/ *
expand the specified {
creates a string representation of a list of axes .
lesser
finds the axis of the given type .
/ * ( non - javadoc )
returns the projection
returns true if this {
returns true if this {
is
checks if the given list contains the given axes
check if a given axis contains the given name .
returns true if a list of the given dimensions
returns true if the given list contains the given axis contains the given axis .
check if this axis contains the given type .
<p > clonedag map from a map . < = src >
{
/ * ( non - javadoc )
finds the type of the given center .
creates a new { @link standard } .
{
add a listener
remove a list of listener events
returns the selected bean .
{
returns the selected cells in the jtable
clear the selected cells
{
set
save
fires a bean data event
restore the state of the table
returns the class class corresponding to use .
/ *
create an unknown unit .
/ * ( non - javadoc )
returns {
/ *
find the axis axis for the axis
add the data variables to the list of data variables .
adds a cursor to the cursor .
{
make a station feature } from the given station .
creates a new {
creates a new var variable .
note the given note :
returns a variable in the given gid .
returns the field in the given variable .
find the {
/ * ( non - javadoc )
make
parse
creates a new {
make
is
is
is
return
is
get
{
is
/ *
/ * ( non - 1 .
creates a {
creates a new {
get a sub clause for the given function .
writes a record to the station .
rewrite the given file to the given file .
creates a { @link java } from an array of ma .
translate
crawl
crawl
crawl a dataset .
crawl the direct datasets .
gets the file or cache .
gets the existing file or cache .
initializes the {
get the {
/ * ( non - javadoc
set
returns a list of files .
closes the file .
moves to the current position .
{
/ * ------------------------------------------------------------
{
{
reads the contents of the file into the byte channel .
reads data from the input buffer
/ * ( non - javadoc )
writes a byte to the specified file .
/ * ( non - javadoc )
/ * ( non - javadoc )
reads an int from the stream at the given its length
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
reads a string from input .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
/ *
writeutf
search for testing
append a query to the query .
{
creates a new {
/ * ( non - modified index .
returns true if the given index is a leaf .
construct the children of the given {
scan all the children in the directory .
{
opens a {
opens a {
returns a list of {
get the grid information for the grid
closes the file .
shuts down the {
acquires a {
{
this method to acquire the cache only if there is locked .
removes the cache from the cache .
{
{
retrieves the info for the given ncfile
{
show
clean up all cached by the cache .
int4
{
{
acquire a cache only if the last modified .
updates the cache element in the cache .
adds the cache to the cache .
/ * ( non - javadoc )
returns the info for the given ncfile
clears the cache .
{
show
parses the given string into a { } object .
checks if a grid is grid is a grid is a grid is grid .
creates a { @link grid .
make a {
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the arrow size of the item
returns the item at the specified pixel
make
make a collection index path for a collection of directories .
{
/ *
{
{
returns the next filtered data point in the filter
/ * ( non - javadoc )
creates a new {
creates a new { @code period .
/ * [ deutsch ] <p > konvertiert .
subtracts the number of dates .
get
/ * ( non - javadoc )
gets the offset between two dates between two dates .
{
opens the grid
opens the specified {
synchronizes the file to the disk .
initialize the gempak
put
find
find
read the root data from the root node .
extract data roots from the specified in the catalog .
get
reindex
opens an existing netcdf .
creates a new {
adds a dimension .
create a dimension .
add a dimension .
rename a dimension .
adds a group to the group .
add a group attribute to the group
adds a typedef to the given group .
delete a group attribute ) group
{
add a variable to the group .
adds a variable to this method .
adds a variable to this method .
add a copy of a structure to a group .
add a string representation of a group .
add a string variable to this group .
rename a variable .
add a variable attribute to the table .
creates the large
/ *
rewrite the file .
add a record structure to this method .
/ *
writes a variable to the specified range .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - null values )
/ *
/ *
{
extract the thredds coverage data from the thredds .
extract the geospatial metadata for the specified feature point .
extracts the calendar range from a {
matches the names
make a map of mbean beans .
initializes the measurement timeseries for the given measurement .
/ * ( non - javadoc )
{
{
convert the amount of the derived unit .
convert a derived unit to a derived unit .
convert an array of double array to an array .
convert a nested variable to a list .
convert the top - level ) to an array .
{
iconvert the data structure array from the given structure .
/ *
this method .
convert a string array to a string array .
closes all databases .
opens the database .
/ * ( non - javadoc )
{
converts a value to a period .
reads a table from the classpath .
/ * ( non - 1 ..
returns true if the element is found ) force
read
adds a new value to the array .
ensures that the array capacity .
{
cancels a dataset .
/ * ( non - javadoc )
convert a latitude
set
/ * (
translate a {
/ * ( non - javadoc )
create a catalog ds catalog .
returns the {
creates a { @link grib2pds } .
show
calc
apply
write
resolves the specified href .
parses a local concept .
add
clean the specified line .
stores concept
write
write
show
main
respond
gets the wanted variables in the given subset
get
{
read the index of the station .
parses the given text from an inputstream .
prints the content to the standard output stream .
show
returns the {
initializes an identifier based on the authority type .
creates a new {
expands the {
{
name
generate the list of namer .
name
load
load
stops the url except that the given url safe .
/ * ( non - javadoc )
load a progress notification .
create
{
returns the scaled size of the scaled size .
writes the jpg image to the given file .
sets the status of the image .
creates an instance of gempak .
/ *
returns a list of merged parts .
prints the ob of the given row .
creates a string representation for the given station .
sn
checks if the given part is a valid group .
main method .
set
creates the root directory .
get
get
returns the cache path for the given file location .
clean
clean
make
returns the { @link icon for a resource .
gets an image by its name .
creates a button for a button .
creates a buttcon button .
creates a menu item from an action .
adds an action to the menu .
creates an action from an action .
adds an action to the container .
sets the action properties .
sets the action properties .
get the stations in the subset of the given subset
find the closest station in a point
returns true if the given fxy is a bufr table .
creates a new coordinate factory for a {
copy this copy of this coordinate .
{
get information about the axis .
gets the calendar
sort the rows in ascending order .
sets the list of rows .
{
returns the selected row in this table .
{
incr
get the model index .
ensure that the row is visible .
find
{
sets the selected index .
push
push
throw
returns the names of the given vector .
sort the array in ascending order .
swap two elements of two elements .
escattr
returns an existing file or null if not found .
/ * ( non - javadoc )
/ * ( non - javadoc )
rotate the given vector by the given coordinates .
create a new xmlstore from the given file .
creates a xmlstore
create a xmlstore from a resource .
creates a standard filename for the given app
saves the content to disk .
saves the xml document to the given output stream .
write the atomic
writes the structure to the given {
write the dap
writes a sequence of instances to the serial writer .
/ *
write the dap
prints out the values in - memory xml format .
set the coverage coordinates .
check if the file is a valid bufr
get the wmo
prints out the content of a space .
prints a matrix to the given printwriter .
prints the index of the array to the given print .
append a dim .
remove all the squeeze in this set .
get the dimension of the specified dimension .
{
compare two tables .
{
{
set the dimension
reads a row from a stream .
get
read the grib codes from the table
reads a variable from a group .
get the data of the bitmap .
get the data0 of the gdrs
get the data2 of the bitmap
/ * n
/ * data3 from the gdrs
get the data40 of the gdrs .
get the data40raw from the given {
get the data41 of the image
get the data50002 of the gdrs .
check
/ * ( non - javadoc )
reads an atomic object
make a file from ucar
make the size of the grid file size .
/ * ( non - javadoc )
computes the yx of the yx .
set
sets the selected station .
pick the station
pick the closest station from the geoloc
returns the selected station .
merge
writes the { } to the catalog .
convert {
set
returns the proj name for the specified type .
send message
entry point for testing .
move this image to the specified location .
dump the history of the user .
saves the message to disk .
get the stations for the bounding box
returns the {
{
{
reads the data from the ray file .
counts the number of elements in this collection .
returns the variable at the given index .
prints the content of the form <code >
/ *
/ *
clones this map .
/ * ( non - float )
returns the type of the given a lat and parameter .
get the lat lon2dcoord to a lat
compare tables
/ * ( non - javadoc )
returns the dot product of two vectors .
norm
normalizes the matrix to be normalized .
creates a new catalog .
sets the list of the dataset .
read the xml file from the file
read the catalog catalog .
read an access to a {
read a service } from an element .
read a catalog ref .
read a {
read the metadata group .
read documentation }
read the metadata from the metadata .
read the source source source .
reads a time range of an element .
read the variables for the given element .
converts a string representation of a duration .
parse
writes the {
{
returns the local parameter with the given id .
reads the parameter table .
read the parameter table ecmwf from the grib file .
read the table ecmwf
read the parameter table from the given regexp file .
add
add
returns the prefix of the given string .
returns true if the given metadata is an email address .
write
/ *
reads a character .
eat
real
eat
eat
parses the projcs attribute .
parameter
parse
| spheroid
returns the value of the specified parameter as a double .
creates a projection from a wktparser .
calculates the crc grid .
returns whether this octet is a thin .
returns the npts in the line
returns true if there is a vertical coordinate )
/ * ( non - javadoc )
gets the scheme scheme for the given field .
returns true if the coverage to see {
get
returns the time coord
appends an error message to the log .
get the value for the given key
sets the offsets of the given structure .
sets the next polygon .
set the polygon of this polygon .
setup a polygon from the dataset .
/ * ( non - javadoc )
/ * ( non - null .
set
create a subset of the given { @link calendar .
load
adds a new instance of providers
register
returns true if the given class is registered .
returns true if the given class is registered .
set
open
opens a {
checks if the file can be open .
opens a file
canonicalize the uri string .
opens a netcdf file in the given memory .
opens a ucar file in memory .
open
opens a { @link netcdf
closes the cache .
find a group by its name .
/ * ( non - memory group ) .
find a dimension by its name .
find the global attribute with the given name .
find the global attribute with the given name .
/ * ( non - escaped attribute .
get the value of a variable in the root element
write the given url ) to ncml )
start
/ * ( non - xml ) .
start
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add an attribute to this group .
adds an attribute to the group .
{
adds a dimension to this method .
remove a dimension .
add a variable to this group .
adds a variable to this group .
adds a string variable to this group .
{
send a iosp
make the record structure .
sets the immutable {
creates an empty group .
closes the group .
reads the data from the nc2 file .
reads a section from the stream .
reads the {
<p > a list of arrays .
reads a variable from the stream .
main
make a valid cdm object name .
returns the full name of a node .
make a full name of the given name .
returns true if the given {
returns true if the given {
returns true if the given {
returns the {
/ *
removes the given {
returns the string representation of the type .
convert a string representation of a string .
{
{
append
dispatch an attribute value is a valid .
force the value of the given type .
check that a string is a valid .
check if a string is a short .
check if a string is a valid integer .
check if a string is a valid long .
check if a string is a float .
check if a string is a double .
{
gets the attribute data type .
rank
returns the {
returns the next larger larger value } .
{
valid
return
valid
valid
contains
return
return
checks if the given string is a valid boolean string .
valid
valid
descend
valid
point2percent
add
add
add
returns the value mapped by {
compares two {
read data from an input stream .
this method .
encode a {
encode a struct data array into a { @link structure } .
/ * ( non - javadoc )
process an html get or post .
/ * ( non - javadoc )
/ * ( non - javadoc )
removes the quotes of string .
marks all stacked variables in a stack
constraint = expression
writes the ncml element to the specified location .
transform
check that the given {
returns the value of the configuration property
creates a new {
{
lookup
return
{
{
{
validate
convert a projection to a projection }
/ * ( non - to )
proj
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - fold times
get the latitudes of the latitude .
get the longitudes of this myasibs .
returns the altitudes of the altitude .
get the azimuths of the azimuths .
get the elevations of the elevations .
returns a subset of the members of this structure .
returns a structure by name .
adds a member variable .
sets the member variables .
removes the specified variable from this hash .
replaces the variable with another variable .
{
returns the variable with the given name .
creates a new {
calc
reads a {
reads a {
read a structure from a structure .
get a {
get the name and attributes and attributes .
read the table
get
returns the class name .
add
returns the header of the header .
returns a double array to the lat lon .
/ * ( from )
convert a lat to a proj
converts a point to a proj .
/ * ( non - javadoc )
creates a projection for the coordinates in the coordinates into the coordinates .
returns a projection that is a projection of the specified projection .
/ * ( non - javadoc )
convert a dms to rad .
convert a dms to deg
returns the distance between two points .
returns the nice number between two numbers .
get the level type for the specified code .
returns the version of the given name .
get zis
make
get the axis type for the given variable .
deletes the file .
sets the {
draw
/ * this method is used to calculate the readhslice .
set
render the plan view .
draw
returns true if this {
get
reads the data from the file .
show the fractal
see {
installs the renderer in one to install the alignment .
gets the key with the trailing delimiter .
{
gets the child child of the given path .
gets the temp file .
===================================================================
returns a stream of {
creates a new {
creates a label from the specified lines .
creates a html label with the given value .
creates a markdown label for the given string .
creates a string representation of a label .
creates an instance of { @link core .
connect to the given socket .
checks if the gae is running .
creates an ssl socket .
returns a list of ip types for the ip address .
returns the ssl info for the given certificate .
connect to the given host .
purge a logger .
compiles all the compilation units into a map .
compiles the given class .
adds a source to the memory .
reads the graphic
reads a block of the block .
returns the next frame .
/ * set the bitmap .
reads a block size from the buffer .
initializes the dialog .
{
{
inject the resource bundle to the given target object .
sets the fixed clock .
gets the highest message .
merges the resource bundle with the given { @link resource } .
merges the list of bundles with the given global bundles .
returns an instance of the given type .
initializes the list of list events .
process a list of {
removes the staging event .
process the update event .
/ *
find a person by id .
merges the given {
/ * ( non - javadoc )
process the queue .
{
{
add
removes a message from this method .
removes a message from this validator .
set the id
loads the { @link view from the given { @link view .
call {
{
creates an empty string binding for the given observable .
get
resolves the {
injects a view model to the given view .
creates a new {
create a {
initializes the {
get
adds the given {
checks if the given {
{
loads the countries .
load the subdivisions
{
publishes the given message to the observer .
/ * ( non - javadoc )
resets all the fields .
sets the default values of the current model .
commits the model .
reloads the wrapped model .
copies all values from the given model .
adds a new property .
-----------------------------------------------------------------------
set the value of the property .
adds a property field ) field .
add an immutable field to this bean .
/ *
add
/ * ( property
/ * ( non - javadoc )
/ *
add a field to the bean ) field .
/ *
/ * ( non - javadoc )
creates an {
add
adds a rule to the rule .
adds a rule to the rule .
creates a list of all the marker . <p >
creates a {
creates a {
registers a {
registers a {
registers an {
/ * from the map from the given map .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
creates the index events .
gets all fields of the given annotation .
get all fields from a class hierarchy .
execute an access member .
set
asserts that the given member } .
loads the fxml for the given view .
creates the fxml path for the given view type .
load a fxml of the given resource .
load the view of the given view .
{
{
{
{
/ * ( non - javadoc )
reads the pixel values ) from an image .
validate the image type
draw
draw the tile data
draw tile data
draw a png image from the coverage image
creates a png image with the specified width and height .
{
set a pixel value } at a 16 bit value
create the coverage data table coverage coverage data table coverage coverage coverage coverage data table coverage data table coverage data table coverage coverage data table coverage
set tile data
{
{
/ * ( non - javadoc )
{
{
{
execute a query
wrap a query .
{
{
queries the previous result .
query for the query
/ *
{
returns the index of the index in the table .
get the feature row for a specific index .
{
{
register the table cursors
{
{
{
get the tile row for the tile location
get the coverage data coverage data type
get the coverage data for the tile dao
get the coverage data for a geopackage
create the coverage data table coverage coverage data table coverage data table coverage
{
{
get the coverage data tile results
get the coverage bounding box
get the coverage in the bounding box
get the zoom out out of the tile matrix
get the tile matrix
{
set the icon for the geometry .
get the icon row for the geometry .
{
{
gets the {
creates a byte array to a bitmap .
compress
create the table
delete the table from the table
update the last indexed indexed indexed indexed
update the last indexed indexed table
update the last indexed indexed indexed rows
get the metadata for the table
get the metadata for the table
get the metadata for the table
get the id of the geopackage
create the table metadata
create the extension
read the feature row for the cursor .
execute a query and returns a cursor
{
{
{
query for rows within the bounding box
query for the geometry
count the number of times the geometry
query for where clause
builds the where where clause .
builds the where where x .
query for the bounding box for the bounding box
count the number of features within the bounding box
query for the geometry envelope
query by the feature query results
count the number of records within the specified location
{
get the data bounds .
sets the data of a bitmap .
sets the data of the bitmap to the given format .
sets the bitmap compression config .
get the tile count
adjust the bounds of the bounding box
adjusts the google projection
get the tile grid for the bounding box
adjust the tile bounds
get the bounding box for the tile level
get the tile grid at the specified zoom level .
query for a tile for the tile table and zoom level
query for tile level
get zoom level
get the zoom level
get the closest zoom level for the tile at the specified length
get the approximate zoom level for the tile at the specified length
query the tile grid for the tile grid
delete the tile at the specified column and zoom level
get the number of rows in the zoom level
determine if the tile is google
{
gets the pixel value .
gets the pixel values for the image .
validate the image type
{
{
draw a tile at the tiff image .
draw coverage data .
draw a coverage data from the specified tile
{
creates a tiff image .
set coverage
create the coverage data table coverage data table coverage coverage
include the json values of the geometry
get the geopackage
{
{
returns the current row .
{
enable
move the user to the next invalid cursor
{
json
query by base id
delete the geometry by base id
get the rectangle in the specified bounding box
get the rounded rectangle of the bounding box
return
returns {
return
return
{
{
{
delete
{
{
{
{
{
{
{
{
{
{
{
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
create the required geopackage package package creator
{
/ * ( non - javadoc )
{
{
{
{
{
{
{
{
{
import the geopackage
{
{
{
{
{
/ * ( non - javadoc )
{
check if the database
{
{
{
{
{
validate database and close on error .
/ *
validates the database .
validate the database header
determine if the database header is valid
add the databases
delete the external databases
import the geopackage
get the external metadata packages
get the metadata metadata for the geopackage
get the metadata at the external path
checks if the database is temporary .
{
create the geometry metadata envelope
create the geometry metadata
populate the geometry metadata for the geometry
delete the geometry
delete the geopackage
delete the geopackage for the id
creates or updates the geometry .
{
get the geometry metadata for the geometry
get the metadata for the geometry
get the metadata for the geometry
query for the geopackage
get the bounding box bounding box
get the bounding box for the table
query for the table for the geopackage
query for the geopackage
count the number of the bounding box table
query for the bounding box
query for the geometry envelope
count the geometry envelope for the geometry envelope
query for the geometry values
query for the geometry envelope
create the geometry metadata
{
update rows
{
{
{
draws a tile on the specified width and height .
get a list of {
{
{
{
{
{
{
{
{
{
/ * ( non - javadoc )
/ *
{
get the user mapping
get the simple attributes dao
get the mappings for the given base id
get the mappings for the given related id .
query
{
{
count
register the cursor wrapper for the geopackage
read the user custom table
get the tile in the request
draw the tile at the specified location
reproject the tile at the bounding box and height and height and height .
get the tile matrices for the bounding box
retrieve the tile results from the tile matrix
calculate the draw overlap .
sets the density of the polygon .
sets the line paint .
set the polygon paint .
draw the tile data at the specified x and zoom level .
draws a bitmap
draw the tile query index
query the number of the tile bounding box
query for indexed features
query for indexed features
query for indexed features
expand the bounding box in the bounding box
expand the bounding box from the bounding box
draw the tile query for the tile bounding box
simplify the points of a list of points .
get the { @link feature }
get the feature style for the feature row
{
{
{
get the polygon fill paint
document me!
get the style paint paint
check
{
documentation inherited from interface
{
set
inserts a bitmap at the given icon
creates a { @link bitmap .
{
{
{
{
wraps the given content values in } .
creates a bitmap from the image .
recycle the image
returns a bitmap at the specified layer
returns the canvas for the specified layer .
------------------------------------------------------------------------
get the feature table mapping
get the style dao style style
get the icon dao
get the table feature styles for a feature table
get the table styles for a feature table
{
get the table icons for a feature table
get the icon icon for the feature table
{
get the feature styles
get the feature style for the feature row
get the default { @link feature
{
get the style for a feature row
get the default { @link feature
get the style for the feature table
get the default style for the feature table
get the style row for a feature table
get the default style for the feature table
{
{
{
get the icon for the feature table
get the icon default icon for the feature table
get the icon row for the feature table
get the icon default icon for the feature table
get the styles for the feature id
get the icons for the feature id
set the feature styles
set the table styles for the feature table
set the table style
set the table style for the feature table
set the table icons for the feature table
set the table icon for the feature table
set the icon icon for the feature table
{
set the feature table
{
{
{
set the feature style for the feature table
set the feature style for the feature table
{
set the styles for the feature table
{
set the style for a feature row
set the style for the feature row
set a style style into the feature table
set the style for the feature table
{
set the icons for the feature table .
set the icon for the feature row
set the icon for the feature row
{
set the icon icon for the feature table
set the icon default icon for the feature
get
get or insert
==========================================================================
delete the feature style for the feature table
delete the icon icon for the feature table
delete the table mappings
delete the table mapping
delete a feature row
delete a style
delete the icon for the feature row
delete the icon for the feature table
delete the geometry mapping
get
get all table icon ids
get all style ids
get all icon ids
gets the image bytes .
flushes the image to disk to disk .
get the pixel pixel pixel pixel
read the pixels from the table .
{
{
{
draw the feature bounding box
draw the feature at the given location
draws a line path .
draw a polygon path
add a line string to the bounding box
add a polygon to the bounding box
draw a point in the bounding box
returns the cache for the given table creating one if it doesn t exist .
{
clears the cache size .
returns the cached table )
get the cached table icons .
{
get the feature style
{
{
{
{
------------------------------------------------------------------------
set the table icon
set the feature row style }
set the feature style
{
set the style for the feature type
{
set the icon icon for the feature
{
{
get the table dao
{
set the width of the column
set the height of the column
{
returns the tile length of the tile length .
get the tile density of the specified by the specified coordinates .
{
/ * ( non - javadoc )
read the blob value from the blob .
{
{
{
{
read the rtree table
{
returns the color of this color .
set the fill color .
validate the color
creates a color from the hex color .
get the current { @link geopackage
prioritize
prioritize
{
{
set the progress of the feature table
{
delete the feature index index for the feature index
{
{
{
{
delete the index with the given id
delete the feature index
{
{
{
returns the list of indexed types .
returns the last indexed indexed date .
query for all features
counts the total number of geometries
get the bounding box of the bounding box
query for the feature index results within the bounding box
gets the indexed type .
{
{
get
get
returns the geometry type .
set the geometry type .
check if the bounding box has a bounding box
replaces the url of the given url with the given in the url
checks if the given url is a valid .
replace bounding box
replaces the bounding box in the url
{
{
{
get the geometry data
{
{
get the index table for the feature
get the index of the index rows
create the index for the feature
update the last indexed indexed table
delete index
delete the index for a given id
returns true if this feature is indexed
get
query for the geometry
query for a bounding box
count the number of features within the bounding box
query for a geometry
count the number of features in the envelope
query for rows
count the number of features within the bounding box
get the feature bounding box for the bounding box
------------------------------------------------------------------------
get the feature row for the given cursor .
get the feature row for the given geometry .
get the tile daos for the feature table
get the feature daos for the tile table
get the bounding box for the bounding box
{
{
{
query for a single cursor by base id
get the unique base ids
get the unique related ids
delete the where clause
delete the related mapping
removes the given related to the base id
build
create the metadata table
delete the database
rename the geopackage
rename the metadata
get all metadata metadata table metadata
get the external metadata table metadata
get the metadata for the database
get the metadata for the id
get the metadata for the geopackage
{
get the external metadata at the path
get
get
get the metadata where the name is like like
create the metadata metadata metadata
{
{
{
{
called when the view is created .
attaches {
add
/ * ( non - javadoc )
creates a custom view .
called when the activity is first created .
convert a {
{
/ * ( non - javadoc )
find the config file from the system properties file .
returns the resource for the given filename
/ * ( non - javadoc )
add
accepts a client .
returns the address to a string
creates a new {
starts a converter .
/ * ( non - javadoc )
sets the rolling policy .
add
{
{
escapes the tags in a string .
escapes the tags in the given string .
appendescapingcdata
retain
retain
removes values
remove
writes an int to the byte array
reads an integer from a byte array
compile a converter into a converter .
{
/ *
parse a {
{
/ * ( non - javadoc )
converts a date to a regex string .
{
/ * ( non - javadoc )
/ *
{
creates a new instance of { @link org .
{
gets the external storage directory path .
returns the path to the backup files .
/ *
set
/ * ------------------------------------------------------------
opens a file .
returns the absolute path of the path .
{
returns the value of the discriminating .
updates the current mask
returns the filter
/ * ( non - javadoc )
create
begin
creates a { @link sslcontext .
create the keystore
creates the trust managers .
creates a {
returns the location of a system property .
returns the url of a resource .
begin
/ * ( non - javadoc )
{
stops the context .
prints out out of errors in the specified threshold .
prints out the highest status of errors
prints a threshold to the threshold .
append a throwable to the stringbuilder .
starts the remote host .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
handle the first line of the throwable .
returns the value associated with the given key .
{
gets a component
ends the end
creates a {
renames a file to a target file
{
return the value of the input variable .
get
get
returns the system system property for the given key .
returns the value of a system property .
extract
converts a string to a boolean .
{
get the caller data array .
map
/ * to string to a map
returns the value of the property .
{
extract the stack trace element from the given throwable .
checks if the current class is in the framework list of the given class .
adds a status
adds a listener to the list .
lookup the implicit implicit action for the given path .
get the list of applicable for the given path .
set
get the value associated with the property
retrieve a boolean value from the system property .
return
get
returns the property descriptors for the given class .
/ *
run
/ * ( non - javadoc )
set
/ * ( non - javadoc )
closes the output stream .
set
/ * ( non - javadoc )
resets all the component .
adds a {
{
gets the discriminating
/ *
checks if an event is discardable .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new { @link secretkey } .
closes a {
closes the given socket .
closes the given socket .
{
/ *
returns the enabled cipher suites .
remove
{
convert a string to a scope .
set properties
/ *
append
/ * ( non - javadoc )
detaches the specified appender from the list .
removes an appender from the specified name .
changes the parent level change .
/ * ( non - javadoc )
calls {
detaches an appender from the specified appender .
create
filter
call the {
/ *
returns a socket .
create
return
returns the integer to an integer to an integer .
converts a int value to a level .
converts a string to a level .
converts a {
converts a {
not
creates a keystore from the given keystore .
creates a new { @link keystore .
returns a set of resource occurrence of the classpath
get
returns the { @link classloader
get the class loader as privileged .
returns the class loader for the given class .
load
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the tag for the given event .
set the logger context .
/ *
begin
returns the separator of the separator in the specified separator .
{
creates a {
get
returns true if the files are on the same file .
starts the subject .
/ *
check if the entry ) entry )
/ *
/ *
put
/ * ( non - javadoc )
creates a converter for the given type .
creates a composite converter for the given composite node .
determine the compression mode .
configure
configure
configure
/ * ( non - nested rules .
configure
{
/ * ( non - 1 . 0 .
set the name of the context .
returns true if the given {
returns the time of the last reset message
adds an event to the list .
returns the element at the specified index .
/ *
resizes the specified size to the array .
{
/ * ( non - javadoc )
{
get
/ * ( non - javadoc )
returns the effective converter map .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
stops the client .
accept
/ *
run
add
removes a client from the clients .
put
removes the mapping from the cache .
returns the value for the specified key .
returns the set of the property .
gets the copy of the context .
convert
get
gets the turbo filter decision } .
{
adds a rule
returns a list of actions matching the given path .
find the suffix of the given path .
returns true if the system property is an application .
initialize the context
return
starts the scheduled executor .
stops the {
{
prints out the current time .
convert a log string to an integer .
set
checks if the node is visited .
get
/ * ( non - javadoc )
clears the expired logs .
checks if the last check is expired .
/ *
{
append
merge the given event .
binds the logging event to the logger .
binds the event arguments
/ *
computes the mask mask
merge
insert properties into the database .
binds the caller data to a caller .
insert exception .
get
/ * ( non - javadoc ) level .
introspect
sets a property .
/ *
is
returns the property value .
{
eopt : = e | e
| t = t
| e .
c : = pointer
/ * ( non - javadoc )
open
remove the sax event list from the list .
returns the name of the event name .
start
/ * ------------------------------------------------------------
<p > is .
sets the default hosts for the default hosts .
search for a places
search
get a json object
adds a { @link date }
{
set
ensures that the local index is local .
saves the mirror settings .
sync
sync
sync
simplified method form for invoking the search operation .
perform an asynchronous query asynchronously asynchronously .
search for a search
/ * ( non - javadoc )
request asynchronously asynchronously asynchronously request asynchronously asynchronously asynchronously request asynchronously asynchronously asynchronously .
start multiple queries asynchronously
multiple queries to multiple queries
multiple queries
get the query queries
browse an asynchronous
browse a {
{
retrieves the online object asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously .
retrieves the online online online online .
retrieves the asynchronous asynchronous object asynchronously asynchronously asynchronously asynchronously asynchronously retrieves the online request .
get an offline object offline
retrieves an asynchronous object asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously .
/ * ( asynchronously ) all objects contained in an asynchandler .
retrieves a list of online objects asynchronously asynchronously asynchronously asynchronously asynchronously .
get a list of objects online async
retrieves a list of online objects asynchronously .
get a list of offline
retrieves a list of offline objects from a list of objects .
simplified method form for invoking the search operation .
search for a {
search for a {
search for a {
search for a query
search for sync
asynchronously executes a asynchronous asynchronous query asynchronously asynchronously executes the provided by asynchronous asynchronous { @code queries } asynchronously asynchronously .
search the search the raw data
simplified method form for invoking the disjunctive operation with an asynchandler .
search for disjunctive query asynchronously .
search for values of facet for a facet in a facet
searches for a {
{
add a {
adds an object to the request
add an object to the server
adds a {
save a {
updates an existing object in the object .
update an object in the partial object
updates the given {
update an existing objects
retrieve an object asynchronously asynchronously retrieves a json document .
get an object from a json document
retrieves a list of objects from a list of objects .
get a json
wait for a task to complete
asynchronously deletes an object asynchronously asynchronously with the given name .
delete an object asynchronously
asynchronously delete objects asynchronously asynchronously asynchronously asynchronously
delete a collection
asynchronously executes a {
get a { @link request ( asynchronously )
sets the {
set the settings of this task
asynchronously call asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously returns a {
browse a {
clear an index
add an object to this index
batch batch
get an index
get an object
get all objects
get all objects from this index
update an object
update objects
save object
save all objects to a jsonarray
delete all records
delete all documents
search for { @link query
search for the raw query
wait for a task
get settings
set settings
clear an index
multiple queries
build
parse the query parameters )
sets a query parameter to the query parameter .
set the { @link latlng
set the radius of the query
sets the attributes to highlight .
set the attributes to the attributes .
returns the facet filters associated facet .
sets a collection of the query .
sets the bounding box to this query
sets the {
sets the inside polygon .
returns the numeric filters for this jsonarray .
sets the {
remove stop words
removes the results of {
parses the given query parameters into a query object
execute a disjunctive search for a collection
filters a map .
compute the disjunctive queries for the given query .
aggregate disjunctive results into a disjunctive
search for a query
search for sync
multiple queries
get an object from a list of server
get a list of objects
get settings
browse a query
browse a asynchronously
search for a {
search for a facet
build a { @link request }
build a { @link request }
search for disjunctive search in asynchronous fashion .
delete a query
convert a json object to a jsonobject
write a jsonobject to a file
write the json array
write
{
gets an offline index by name .
{
{
list all the indexes in the app directory
delete index offline index
delete an index
move an index to another index
move an index of the index
parse the search results
deletes the given item .
write
sets a url parameter .
sets a header value .
adds a user agent to the list of agents .
read
reads the contents of the given stream to a byte array
request
request a request
consumes a connection from the httpurlconnection .
returns a list of hosts that are up to the given hosts .
set the latlng for this latlng
set the around radius
returns the radius of this query .
sets the type of places .
parses the given { @link places } object .
{
starts the server .
asynchronously searches a json document asynchronously using the configured {
search for disjunctive query asynchronously .
searches for a specific to search values using the specified facet .
list all the indexes of the specified request
delete an index async index
asynchronously deletes an index async .
move an index async index the specified by the specified index
moves an index to another index . this operation moves an index . the index of the specified index .
multiple queries to multiple queries
alias for {
get a batch
asynchronously sends a batch request asynchronously asynchronously asynchronously .
get the indexes of this request
delete an index
move an index to another index
put the value to the cache .
returns the value associated with the given key .
/ * ( non - javadoc )
adds this interval to this stats .
spawn a new {
waits until all threads to finish .
compares two version strings .
report
copies a directory to a target directory .
init
binds the value of the specified test case
returns the value of a property .
get
get
launch a worker
get the pid of the pid
sleep
format
format
format
initializes the {
/ *
/ *
writes a json string .
writes a json integer .
writes a double
reads a json string .
reads a json chars
reads a json integer .
reads a json double .
read
execute
invoke
/ * ( non - javadoc )
enqueue a method call .
gets the ifile for the given location .
update
refresh
returns the { @link iworkbenchpage } .
opens an editor .
reports the authentication failure . <p >
prompt a { @link platformui } .
get the buffer s last element .
adds a buffer to the pool .
creates the default page for this form .
toggles the default page .
starts the tree .
adds a property .
returns an enumeration of the properties .
returns true if the element is alive .
sets whether the child elements .
sets the child is omit .
adds a lock token href .
returns the depth of the element .
returns an enumeration of the first .
get the owner of the owner .
sets the depth of the node .
sets whether the node is shared .
/ * ( non - javadoc .
sets the timeout for this node .
/ * ( non - javadoc )
creates a {
checks if the element is shared .
adds a condition factor .
creates a {
{
{
/ *
refreshes the layout .
/ * ( non - javadoc )
{
get the current java project .
returns true if the given completion is not contain the given completion .
/ * ( non - javadoc )
load the configuration file
read the configuration from the given inputstream .
find
append
gets the child url of the given parent .
returns the url of the given url .
returns the elements of the given url .
get
get
get
remove
returns true if two urls are overlap .
returns true if two urls are overlap .
{
returns the content length )
returns the content type .
returns the document body for the document .
returns the html for the query .
adds a response .
creates a new {
returns an enumeration of all the responses .
returns true if the given element is a guvnor resource .
adds an href to the href .
creates an {
return an enumeration of the hrefs .
inserts a new href into the tree .
removes the specified href .
/ * ( non - javadoc )
get a accumulate property value .
adds a child href .
adds the provided property to the property list .
changes the status of a child element .
returns the href of the element .
return an enumeration of the hrefs .
returns an enumeration of the property .
returns the status of the element .
returns true if the element is a prop stat .
{
sets the status of the node .
add
set
generate the credentials for the given username and password .
fire a property change event .
get the stack frame for the given value .
returns true if the given string is a subtype of the given class .
generate the list of the icompletionproposal . util .
list1
return
returns a list of completion of the list of completion .
append a child element .
create a child element .
clones a {
creates a new { @link element } . < >
asserts that the given {
get the {
ensures that an object is not null .
ensures that the given object is null .
ensures that the given node is not null .
extracts the xml element from the document .
extract the node from the given node .
find the child element of the given node .
get the child element with the specified name .
returns the child element of the parent element .
get the child text of a child element .
get the next element of the given parent element .
get the first child child of the given element .
returns the first child element of the given name .
returns the first text of the given element .
get the last child element of the specified parent .
returns the {
get the namespaces for the given element .
returns the next sibling element .
find the next sibling in the given element .
get
return
return
get the name of an element .
return
return
get the {
get the sibling sibling of the element .
returns the text of the parent node .
returns the twin of the given element .
inserts the specified { @code sibling } .
check if the node is a node .
check if the given node is a valid .
create a {
resolve an element with the given prefix .
set the child element of a child element .
sets the child of a child element .
reset the input stream .
this method is called from javadoc ) .
{
gets the value of a property .
{
sets the location of the property .
/ * ( non - javadoc property .
sets the size of the property .
dump the string array into a string .
set
parse a listing of properties .
{
add a lock entry .
returns an {
{
adds a child vertex to this vertex .
{
{
{
retrieve the resource string from the resource bundle .
{
gets the form colors } } .
/ * ( non - javadoc )
set
returns the default repository directory .
{
creates a status .
logs an error message .
adds a field to the list .
adjust
applies the font to the field editor .
calc
validates the state of the field .
{
/ * ( non - javadoc )
returns the parent field editor .
initialize the preference .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
returns {
/ * ( non - javadoc )
/ * ( non - javadoc )
put a value .
sets the value of a property .
/ * ( non - javadoc )
constructor .
set the active page
set
/ * ( non - javadoc )
determines the dialect for the given back text .
returns the parameters
decodes the given url .
decodes a file .
encode
creates a context .
save
creates the table listeners .
creates the table .
/ *
get
get
{
add a url to the given url .
put
put
add
add
set
{
adds a condition to the conditions .
add
{
bind
is
gets the value of the property property .
returns the status of the element .
sets the value of the property property .
sets the {
get
get
returns a list of the given adapter .
binds a binding to a string .
binds an id to the specified id .
binds the specified message to a string .
encode a file into a string .
encode
creates a figure
create a process .
create the package fragment for a package .
{
/ * ( non - javadoc )
{
{
find the index of the first occurrence of the specified array in the specified array .
{
/ * ( non - javadoc )
visit a rete .
visits the node .
dot
adds a remove element to the list .
adds a new set .
gets the sets of all sets of the sets of the tree .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new {
/ * ( non - javadoc )
{
{
{
creates a condition from a { @link condition .
creates a condition from a string .
add a property to this method .
add a property name to the xml
return an enumeration of properties .
/ * ( non - javadoc )
creates a {
this method to the ) pages .
/ * ( non - null adapter .
delete
http
get the status of a job .
double
{
set
creates an update label .
creates an update version .
returns the version of the policy .
sets the label name .
sets the version of the element .
{
handle pull results .
sets a value at the given index .
adds an active lock .
returns an enumeration of the active locks .
filter the given prefix by prefix .
read the backwards part of the document .
calculates the rete rows of a base vertex .
{
creates an {
returns the {
returns the image descriptor for the given path .
declares an image descriptor .
generates the credentials for the given request
add
returns the index of this vertex .
returns the width of all rows in the row .
dumps this matrix to a matrix .
optimize the matrix
returns the ifile from the processor .
configure graphical
/ * ( non - null )
load
initialize the graphical viewer .
zero the base diagram of the given graph .
draw the graphical graph .
returns the drools breakpoint for the given source string .
{
/ * ( non - javadoc )
set
sets the href of the href .
check if the server is valid
closes the response .
copy the content of a copy of the destination .
copies the properties file to the specified destination .
examine
extract the eclipse properties for a single webdav status
gets the content of the content )
/ * ( non - active locks )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the names of the property .
gets the version tree
head
lock
moves the specified document to the specified destination .
/ *
/ *
refresh a lock .
{
/ * ( non - javadoc )
/ *
set properties }
{
unlocks a lock .
update the document .
/ * ( non - javadoc )
deletes this object .
validate the status code .
{
{
/ *
adds a binding to the tree .
returns an enumeration of the next segment .
/ * ( non - javadoc )
create the figure .
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
to
to
/ *
{
{
{
find the given {
returns {
sets whether the property .
sets the value of the property property .
sets the value of the property property .
strips the last word from the given prefix .
get
return
returns the name of the given property name .
returns the writable property name for the given method name .
returns true if the method name is an accessor .
get
updates the package tree .
{
/ * ( non - outputstream )
/ * ( non - javadoc )
marks the errors
marks the other errors .
checks if a character matches the given character .
returns the next quoted string .
get the next token .
skips any non - space .
find the guvnor metadata for the given resource .
add
commits the file changes to the given file .
find the guvnor metadata for the given resource .
collapse
returns the value associated with the given key .
returns the age of the age .
returns the content length of this buffer .
returns the maximum forwards of javadoc .
returns the overwrite . < / p >
get
get
returns an enumeration of all the keys in this context .
put
sets the timeout for this method .
read the content of the file .
parse the metadata
strips the heading and code and code .
returns the metadata of the given text .
strips the metadata from the text .
add tokens
adds all tokens
get
get
get
get
adds a child to the list .
prints the tree tree .
prints out the node .
prints tabs
parses a json value from a string .
creates a { @link json } from a float value .
{
{
{
{
{
gets the image descriptor .
add
returns the {
/ * ( non - javadoc )
returns the {
{
sets the {
sets the {
/ * ------------------------------------------------------------
/ * ( non - javadoc )
get
returns the response name .
get the response header value .
get
sets the proxy server url .
set
sets the resource url .
sets the socket factory .
creates the sample launcher launcher .
creates a project for a project .
creates a flow flow for a project .
create the sample flow launcher for the given project .
{
/ * ( non - javadoc )
{
create the graphical viewer .
collapse the local keys .
{
{
runs the given action .
{
{
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the html
returns the field name .
returns the evaluator for this constraint .
returns the value of the mvel .
{
documentation inherited from interface
set
/ * ( non - javadoc )
{
query properties
this method properties resource properties to the resource
returns the contents of a resource
returns the version contents of the resource
/ *
returns the resource version of a resource
create
create a resource
/ *
get the resource versions for a resource
delete a resource
runs the specified action .
creates a baseline control xml document .
binds a member to a ilocator .
binds a member to a member .
returns the {
{
optimize the vertices in this list .
authorize the given a proxy to a given url .
confirm
confirm
get the {
get
returns the authorization authority .
calculates the md5 hash of a string .
md5
unquote
creates a {
{
this method initializes controls .
ok
validates the page .
replies the bounds
creates an { @link factor .
generate
creates a new document .
returns the opposite of the specified vertex .
generate
get
generates a { @link bcecprivatekey } object .
parse
get
generates a private key from the given byte array .
converts a byte array to a private key .
convert the public key to a byte array
generates a public key from the given byte array .
get the domain parameters from a curve .
get the domain parameters from the given name .
encrypt
get
encrypt
decrypt
creates a sum of insert metrics } .
{
initialize the partition .
import all documents in the specified collection of documents .
extracts the partition key value value .
{
{
{
initialize the yubico .
login
validate the otps
checks if the user is a right .
/ * ( non - null tokens )
sets the options of the command line .
checks if a right user is right .
returns the username of the specified id .
adds yubikey
verify the given otp
{
/ * ( non - null values .
initialize the subject
/ *
checks if the user is otp
clears the password .
fetch a list of urls .
sets wsapi
get the public id from a string .
isvalidotpformat
creates a new { @link evaluation .
{
{
call a static method on the given class name
clears the cache .
returns true if the jdk is jdk15 .
get
returns the base name of the given object .
returns the base name of a class .
get
returns the package name of the given class .
get
gets the pointer string for the given object .
returns the unique descriptor for the given object . <p >
return
get the parameter types for the given method .
/ * ( non - javadoc )
returns the parameter types for the given constructor .
get the permission for the given method .
gets the arg class for the given object .
checks if the given object is compatible with the given class .
returns true if the given class is more specific than one .
find the best appropriate appropriate for the given arguments .
call a method on the given target object .
call a method on the given object .
get
sets the value of the specified method on the specified target object .
returns a map of property descriptors of the given class .
returns the property descriptor for the given class .
returns the property descriptor ) property descriptor from array
returns the indexed property type {
set
get
returns true if the current type should be numeric .
get the child source of the given node .
returns the source .
/ *
/ *
{
reads a character from the stream .
/ * expression
/ * ( non - javadoc )
/ * logical
/ * logical
/ * inclusive
/ * exclusive
/ * and
/ * equality
/ * relational
/ * shift
/ * additive
/ * multiplicative
/ *
/ * navigation
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
is
parse
parse
parse
big .
format .
return
get
convert
to
convert
get
returns the numeric type of the specified types .
get
new
new
cast
/ * ( non - static class .
returns the current type .
returns the previous type .
returns the evaluation of the specified index .
adds an evaluation to the current evaluation .
removes the current node .
adds a cast string to the context .
get
returns the expression
returns {
checks if a method ) contains )
<p > compile . < / p >
generates the ognl for the ognl
generates the setter for the ognl
returns the {
get the class pool .
removes a node from the stack .
dumps the contents of this writer .
flatten
{
set
add a child to the list .
constructor .
find the class
makes sure that the table .
/ *
parses an expression from the given string .
compile an expression .
creates a default context .
creates the default context for the given class .
create the default context for the given class .
creates a default context .
adds the default context to the map .
adds the default context for the map .
adds the default context for the given member .
returns the type converter for the given context .
set
get
get value
<p > get . < / property .
get the value of the given expression . < >
get
get the value of the tree .
gets the value of the given tree .
get
get
set value
sets value
set value
set
return
<p > parse . < / p >
returns the default watch service id .
waits for a server to be started .
watch
/ * ( non - javadoc )
reads the file as a string .
{
read
resolves the given { @link file .
collects all class files in the given package .
returns an { @link archiver .
check if the archiver is valid .
{
reads the contents of a string .
calculate the list of the given paths .
{
watch
creates the ant project .
add a system property .
add a system property .
{
watch
/ * ( non - javadoc )
{
increments the current bucket in the given type .
returns the rolling sum of the given event type .
returns the values of the given event type .
returns the rolling max value for the given event type .
returns the current bucket in the current bucket .
add a value to the current bucket .
returns the maximum value }
set up the action bar .
factory method for creating a new { @link instance } .
opens the folder dialog .
changes the directory .
refreshes the button state . <p >
creates an observer for a file observer .
return the selected folder .
creates the folder .
checks if a file is valid .
called when the activity is first created .
checks if a domain is valid .
returns true if the given string is a valid infrastructure infrastructure .
{
returns true if the country is tld .
returns true if the string is a valid .
toascii
called when the activity is first created .
starts a foreground job .
starts a background job .
handles a start tag .
start
ends a list of styles . <p >
starts a list of the paragraph . <p >
/ *
returns the html color of the color .
get the hit of the specified location .
computes the motion of the edge .
move
grow the image by the aspect .
returns the crop rectangle .
computes the layout of the layout .
registers a listener to be registered .
get the paragraphs in the selection .
sets the rich text editing .
{
set the text of the media .
return the rich text } for this format } .
adds the span watcher .
applies the given value to the layout .
converts an rtplaintext
/ * ( non - javadoc )
{
{
{
convert the given text to a {
convert the paragraphs
within
/ *
creates a unique file .
create
determine the original file for the given uri .
{
returns the local name of the given name .
set an attribute value .
normalize a string .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
get
get
need
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
write
returns an { @link inputstream
/ * ( non - javadoc )
{
normalizes the given filename .
normalizes the given filename .
converts a path to a unix path .
returns the index of the extension of the given filename .
/ * ( non - ) spans for the given span .
recompute the focus focus .
ensures that the view is visible .
center
resets the current document locator to the current column locator
/ * ------------------------------------------------------------
/ * ( non - null value .
/ * ( non - javadoc )
returns {
returns the next line .
add a type type .
set an attribute value .
{
returns the {
returns the entity
takes an image from the image .
returns true if the given authority is valid .
{
clean up paragraphs from {
returns the absolute path for the given media type .
/ * ( non - javadoc )
{
checks if the email is valid .
checks if the given domain is valid .
returns the index of the char at the given text .
executed
perform the given editor .
flushes operations to the given {
pushes an operation to the stack .
replaces all occurrences of the occurrences of the given string in the given string .
gets the thread status .
sets the decoding options .
returns true if the thread is decoding .
decodes a file descriptor .
load
returns all fonts of the given context
gets the asset fonts for the given context .
returns the system fonts for the given font .
converts an inputstream to a byte array .
reads bytes from an input stream into a byte array .
copy
return
return
return
copies the content of an array of the given } to the given { @link outputstream } .
return
return
reads lines from the given input stream . inputstream .
reads lines
creates an { @link inputstream } over the given { @link inputstream .
creates a {
write
write
write
write
write
writes the data to the writer .
writes the contents of the given { @link bytebuffer } to the given { @link outputstream } .
writes the contents of bytes to the given stream .
write lines
write lines
write lines
writes the given collection of the specified writer .
copies the contents of data from the input to } .
compare the contents of equality .
read the content from the given reader
/ * ( non - javadoc )
set up the schema
read the reader
get an input stream for the given url
/ * ( non - javadoc )
/ * expand entities .
attempts to find an entity
restart an element
pop the current stack .
/ *
returns the prefix of the given name .
returns true if the given prefix is a foreign namespace .
/ * ( non - javadoc )
trimquotes
splits a string into an array of strings .
rectify
/ * make the name of a string .
called when the toolbar is visible . <p >
unregister the toolbar .
registers an editor .
unregisters an editor . <p >
register a toolbar .
unregister a toolbar .
{
inserts an image into the editor .
/ * ( non - javadoc )
handles the active editor . <p >
subscribes to the event .
computes the center of the view .
get the proper base matrix for a matrix
returns the maximum zoom of the bitmap .
{
gets the values in selection ) of the given editor .
removes all formatting in the selection .
gets the spans for the given span .
{
find
encode the given url into a uri .
decodes the given url .
returns true if the charsequence sequence of the same as {
pick the directory in the specified activity .
override
get
transform
rotates a bitmap from the specified degree .
called when the activity is first created .
/ * ( non - javadoc )
set
sets the prefix for the given uri .
/ * ------------------------------------------------- [ xml ] ---------------------------------------------------
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
prefix
/ *
writes a character .
/ *
write attributes .
checks if the given attribute is a boolean attribute .
/ * writes a string
/ * write out of the xml configuration .
write the name of a prefix .
/ * ( non - javadoc )
/ *
removes all attributes from the local name .
builds a { @link amazon } with the specified { @link string } .
ensure that the stream exists .
creates a stream if it exists .
waits for a stream to finish .
returns the type converter for the given class .
creates a collection of {
completes the store snapshot with the given path snapshots .
gets a unique shard .
waits for the next provisioning request to execute .
gets the records for the kinesis records .
performs an action on the given action .
try to try to amazon s3 .
builds a { @link s3 } using the given { @link string and region .
checks if a bucket is accessible .
<p > method . < / p >
loads the snapshot of the given snapshot .
locate
creates a wildcard collector file filter .
validates the context .
trigger a wildcard expander .
<p > replace
convert a collection of strings to a delimited string .
delete all occurrences of a string .
{
{
creates a {
adds a { @link report } .
initialize the script builder .
validate
builds the linter script .
/ * ( non - javadoc )
updates the configuration properties with the specified configuration .
get the config properties .
creates the config properties .
returns the pre - processors
gets the post processors map .
{
create a smart wro from the given standalone context .
create an {
{
/ * ( non - javadoc )
returns a map of pre - processors .
converts a map of {
creates a new {
submit a collection of callables .
process the content
compiles the given content .
{
/ * ( non - javadoc )
return
{
{
{
{
encodes the group url to encode a group url .
reloads the cache with the new value .
reloads the model with the new value .
/ * ( non - javadoc )
creates a new { @link scheduler } .
schedules a period in the scheduler .
destroy the scheduler
/ * ( non - javadoc )
gets the {
sets the resource pre processors
sets the resource post processors .
adds a post processor .
initializes the script builder .
<p > newinstance .
collect all configurable providers .
{
/ * ( non - javadoc )
resolves the css files
gets the context folders .
returns a {
returns a {
/ * ( non - javadoc )
get
get
locates the content of the given uri .
{
provide
on error .
/ * ( non - javadoc )
transforms the given {
process a resource .
compute the base name of the base name .
creates the expander handler for the given group .
/ * ( non - javadoc )
locate an input stream for the given uri .
initializes the script builder .
compiles a javascript .
create the wro configuration
create
registermbean
register the change listeners .
process the request .
on exception .
sets the configuration .
/ * ------------------------------------------------------------
identify
merge the given model with the given model .
{
locates the content of the resource .
process
applies the post processors to the cache .
decorate the {
{
{
processes the specified request .
on runtime exception .
splits the given string into an array of strings .
creates the script builder .
init the script builder .
load properties from the given input stream .
parses the properties of the properties file .
creates the standalone context .
get the {
creates a {
creates a new {
initialize the {
persist the resource fingerprints .
checks if the group is a target .
extend the plugin classpath .
{
returns the {
creates a resource from the given uri .
clean the uri of a uri .
locate
{
creates a new {
creates a new wro .
initialize the script builder .
sets the {
{
{
{
is
process the resources .
process a list of resources .
runs the given resources in the given list of resources .
apply pre - processors to the given resource .
decorate the {
called when the model is created .
flushes the fallback storage to disk .
{
process
get all fields of the given object .
accept
{
compute the css uri for an external server .
compute the new image location .
add
{
on
on
adds a transformer transformer .
/ * ( non - javadoc )
initialize the aggregated folder path .
extracts the variables from the variables .
process the content of the specified resource .
parses the css variables .
replaces the variables in the css string .
{
{
rename an inputstream to a file .
{
creates a { @link resource } to a { @link resource .
checks if the specified resource type is eligible .
on linter exception .
/ * ( non - javadoc )
process
/ * ( non - javadoc )
creates a new {
{
locate the content of a scss .
destroys the object .
/ * ( non - javadoc )
{
gzip
create a decorator that matches the given patterns .
create a decorator that matches the given patterns .
{
creates a new { @link resource } .
remember
process css import import processor .
remove a resource .
returns the hash of the given input stream .
creates a report for the given resource path .
filter
returns the name of the group .
returns the resource type of the request
encodes the group url to a group .
checks if the request is minimized .
process
{
process the content of the specified resource .
find all imported resources in the given css content .
create an absolute resource for the given import url .
compute the absolute url for the given import url .
checks if the request is changed .
create
creates a string representation of a string to a string .
returns the list
creates the context for the given initial scope .
adds the client side environment .
evaluates the webjar script
evaluates the script .
evaluates a script .
{
{
{
returns the version into a group path .
formats a versioned resource .
destroys the scheduler .
destroys all {
provide
returns true if the request is a handler .
creates a handler for the given request
renames an input stream .
compute the destination folder .
process a group .
wrap a { @link exception .
{
gets the supported resource type for the given processor .
check if a group exists .
/ * ( non - javadoc )
{
initializes the script builder .
{
locate
initialize the script builder .
validate
creates an object pool .
creates a new object .
process the content of the given resource .
{
{
{
{
opens a jar file .
locate a stream from a jar files .
extracts the path from the uri .
creates a cache key for the specified resource .
checks if the request is minimized .
writes the report to the outputstream .
{
adds a { @link uri .
decorate the given { @link transformer .
process the content of the variablize .
adds a require string to the list .
process
returns the hash of the given input stream .
prints the summary of the summary .
this method is called resource is required .
{
returns the lock for the given key .
on css lint exception .
creates a process .
{
{
{
provide a map of model ) model ) model ) model ) model ) .
parses the contents of the given contents .
/ *
pretty prints the tasks
returns the compilation command .
creates a {
creates a {
parses the header header .
adds the http cache headers
sets the headers
{
{
creates the exception message .
to
gets the path info from the request .
convert a class to a folder .
returns true if the given string starts with prefix .
get the servlet path from the request .
checks if the request is gzip supported by the request .
convert a string to a string .
checks if the request matches the given path .
creates a { @link resource .
load regexp
copy the content of the contents of a writer .
creates a temp file .
joins the given path to the given path .
clean the image url .
returns the full path of a path .
normalizes the given path .
create a new instance
{
{
{
generatedatauri
write the given byte array to the given writer .
creates a new { @link report } .
creates a new { @link lint .
{
creates the file element .
creates an issue element .
returns a new {
set
removes the correlation .
returns a { @link callable .
decorate the cache strategy . cache .
compute
try
check
on exception .
checks if a resource is changed .
checks if a group is changed .
updates the hash for a group .
check if a resource type has the given type .
replaces the resource to the given resource .
adds a resource to this group .
sets the list of resources .
copy
creates a process from the given source file .
gets the command line .
creates the script builder .
encodes a {
encodes the given object into base64 notation .
process group groups .
parse a group element .
create a group from the specified element .
parses the resource group .
creates a resource for the given element .
get the resources for a group
provide
/ * ( non - javadoc )
{
returns a {
supply a parallel {
like {
try to the specified futures .
like {
try to wait for the specified amount of time .
create
log
stops a named timer .
gets a named timer .
gets a named timer for the given timer .
returns the named timer for the given thread .
prints the statistics about the saturation .
wake
updates the number of processed counters .
updates the number of the saturation
update
adds the given { @link forward rule .
removes the given { @link rule } for the given { @link link } .
returns {
/ *
gets the set of { @link inference of { @link producer property .
returns a set of the sub - properties .
gets the left sub sub sub - composable
/ *
collect equivalent of the equivalent properties of a property .
/ *
restores the stage .
{
restores the {
returns the taxonomy
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
compute the query .
/ *
/ *
/ *
query the direct sub classes for the given class expression .
query the direct instances of the given class expression .
<p > this method is used to restore the {
{
/ * ( non - javadoc )
/ * prune the size from the entity .
{
register all the {
/ * package private
/ * ( non - javadoc )
/ * ( non - javadoc )
invalidates the {
invalidates all the {
{
removes all the nodes in the list to add them .
{
removes all nodes from the list .
returns a collection of operations to remove the same .
{
returns the {
unsupported .
{
get
removes the element at the specified position .
removes the element at the specified position .
returns the index of the specified array in the specified array .
returns true if the array contains the specified element .
adds the specified element to the end of the array .
/ * ( non - javadoc )
convert the specified { @link elk )
add a class
{
adds the given rule ) .
/ * ( non - javadoc )
create a { @link elk .
/ * ( non - javadoc )
/ * ( non - javadoc rule .
/ * ( non - javadoc )
puts a value into the cache .
removes the mapping from the cache .
/ * enlarge
shrink
save
returns the next position in the position .
print
prints the declarations of the given class .
gets all super nodes of the given node .
gets all sub - sub - nodes .
returns a new instance of {
returns a chain backed by the given map .
searches for a structural to the given entry .
adds a structural structural structural to this set .
removes the specified entry from this set .
resizes the table to the new table .
{
/ * ( non - javadoc )
returns the conclusion of the given factory .
combined
combine
combines {
combines two lists of {
combine
combines two { @link list } .
combine
copies all bytes from the input stream to the output stream .
get all the resources in the path .
returns the {
processes the next input stream .
get the reasoner incompleteness monitor .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
sets the incremental mode .
/ * ( non - javadoc )
removes all rules
returns the index of the first occurrence of the given property chain .
returns the { @link subsumer .
checks if a { @link elk } .
dumps taxomomy to file .
dumps the taxomomy of a taxonomy .
dumps the taxomomy to a file .
dumps an instance of the given entity .
get
process the taxomomy of the given taxonomy .
prints the member axioms .
block
hash the hash of the given entity .
{
/ *
appends the given object to the given appendable .
/ * ( non - javadoc )
dumps the diff of the given {
add
shrink the array .
get
runs the task .
runs the task collection .
runs the given task .
returns the {
{
convert
creates a {
returns a {
process
marks the computed query as computed by the query } .
marks the given query as computed by the query } .
registers a query .
{
returns the equivalent to be equivalent to )
returns the direct super classes ) classes of the given class .
get the direct sub - classes of the given class .
get the direct instances of the given class .
/ * ( non - javadoc )
returns a set of axioms .
combine two nodes of the given { @link taxonomy } .
{
{
checks that the given property expression is valid .
concatenates two {
splits the given { @link iterable into a { @link iterable } .
splits the elements in the collection .
returns a set containing the elements of the given set that condition .
dumps the diff of the given {
dumps a collection of the given {
creates a set view of the given set .
read a fragment from a byte array .
changes the fragment in the given sl .
/ *
shrink
adds the specified element to this position .
{
clears the mask .
derive the inclusion of the given inclusion .
adds the given counter to this counter .
log
log
logs an operation .
log
log
sets the {
shuts down the {
get the taxonomy node of the given elk .
get the instance node node node .
returns the type node for the given elk .
replies the taxonomy property taxonomy .
/ *
/ * ( non - javadoc )
get all sub classes of the given elk .
get all sub classes of the given class expression .
/ * ( non - specific classes ) of the given class .
/ * ( non - javadoc )
{
{
get all instances of the given elk .
get all the instance of the given class expression .
get the types of the {
/ *
prints the header .
add
print values
get
compares two { .
entry point to the command line .
convert a {
returns the index of the class .
removes all nodes of the ontology .
adds the given {
/ *
returns the body of the request parameters
writes the given object to the given writer .
/ * ( non - javadoc )
returns the property descriptor for the given property path .
/ * ( non - javadoc )
return
latin1number
add
set
add
sets the title of the link .
sets the title of the title .
set
adds a parameter to the list .
sets the anchor . < / p >
add
{
{
{
{
returns an unmodifiable list of the link .
returns the list of the link .
returns true if the action has unsatisfied is annotated variables .
creates a {
returns the value formatted as string .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns {
returns {
/ * ( non - javadoc )
returns true if the request is required .
returns the default value .
{
/ * ( non - javadoc )
recurse through the given value is supported by {
gets the property name in vocab .
writes the mapping
returns the exposed property name of the action .
gets the writable exposed property name .
converts a {
creates a {
creates a {
recurse
get the action input parameters .
get
/ * ( non - javadoc )
/ * ( non - annotated terms of the given element .
search for events
returns the query string .
appends the form to the request
@throws pageexception
recurse
append input or select parameter to the given parent .
create a link to a controller } .
creates a new { @link affordance } to the given controller .
build the affordance
add
/ *
adds a {
adds a link param to the request .
returns the {
get
adds the given {
returns the uri template template template components .
expand the given a b - >
expand the given uri components .
get the uri template components .
removes all optional variables from the given list of action descriptors .
returns the first node with the given name .
returns the first node with the given rel .
{
empty
creates an immutable set containing } .
empty
empty
returns an immutable map containing the elements }
returns an immutable {
clone
returns a string representation of an integer .
creates a {
returns a {
empty
empty
{
{
{
{
{
{
{
returns the last node in this list .
{
/ *
appends the given {
creates a {
/ * fold to each of the given operation .
/ * ( non - javadoc )
{
{
{
{
returns a {
creates a {
creates a {
{
{
{ @inheritdoc }
/ * ( non - javadoc )
{
{
{
creates a tuple
creates a {
returns a new tree
creates a new node array containing the given size .
helper method .
performs a match function to each element .
creates a range from a number .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
registers the given class .
static factory method for wrapping a value of type <code > a< / code > in a { @link tuple7 } .
returns an empty vector .
creates an immutable vector from the given items .
returns an array of nodes in the tree .
{
/ * ( non - javadoc )
{
{
{
assoc
static factory method for wrapping a value of type <code > a< / code > in a { @link tuple9 } .
map
returns a { @link map .
returns a mutable {
return
return
returns an immutable {
set
returns a sorted {
returns a sorted set containing all elements .
creates a mutable set containing all the elements .
return
creates an iterable from the given items .
returns an {
returns a string representation of the given number of spaces .
return
return
creates a lazy ref that wraps the given producer .
applies this producer to the producer .
single
insert
copy
splice
replace
splits the array into an array .
splits an array into an array
/ *
suspend
/ *
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the {
/ * ( non - unit ) components .
get the list of the jars in the given directory .
validates that the directory .
/ * ( non - javadoc )
/ *
adds a intercepted method to the list of parameters .
convert an array to an array
convert a primitive type name to a jvm representation .
copies methods
copy
/ * ( non - javadoc )
/ *
creates a { @link int } .
creates a { @link address from a string } .
set the timer for the specified activity
sets the timer for the specified timer .
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the alarm is enabled .
{
do
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
removes the sbb entity with the current class loader .
{
{
get the deployable unit ) unit of the specified deployment url .
returns the list of the deployable
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
returns the descriptor for the given deployableunitid )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
returns the number of activities in the activities .
returns the number of activities for the given executor
/ * ( non - javadoc )
gets the average event )
get the average event routing time
returns the number of events ) events for the given eventtypeid .
returns the number of events for the specified executor )
returns the number of executed tasks .
returns the number of executed tasks for the given executor .
returns the executing time of the event
{
returns the number of executed tasks .
returns the number of executed tasks for the given executor .
returns the number of tasks executing the given executor
get the routing time )
{
returns whether the parameter is enabled .
{
{
/ * ( non - javadoc )
{
activate the given serviceids .
/ * ( non - javadoc )
deactivate the state array ) .
{
/ * ( non - and ) operation ) .
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
documentation inherited from interface
get the average event routing time .
gets the average event )
get the routing statistics ) statistics for the given eventtypeid .
returns the routing time of the event .
creates a { @link alarm } from the specified int level .
converts a string representation of a { @link alarm } to an { @link alarm } .
checks if this alarm is higher .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a usage parameter set .
creates a usage parameter set .
creates the usage parameter set .
removes a usage parameter set .
{
{
this method name of the given sbb .
{
reset all usage parameters .
gets the {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
check
{
creates an {
/ * ( non - javadoc )
{
/ * ( non - javadoc )
creates a new {
converts a string to a service state .
<p > get .
<p > get . < / p >
/ *
/ *
{
/ * ( optional ) the <code > of the activity .
{
{
displays the result of the result .
unfold
{
/ * ( non - known notification is enabled .
removes all stale timeouts .
returns true if a notification is enabled .
{
/ * ( non - javadoc )
{
{
looks up the name for a given its name .
returns the name of the child nodes .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a { @link trace level .
converts a string representation of the specified string .
/ *
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
checks the combination of the given {
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
extracts the file from a jar file .
extract
pipe
{
attaches the sbb entity .
detaches an sbb entity from the sbb .
returns true if this node is no sbb entities .
returns all sbb entities attached to this node .
attaches a timer to the node .
detaches a timer from the cluster .
returns true if this node is no timers .
{
adds a child node to this node .
returns true if this node is unbound .
returns {
{
sets the value of an attribute .
/ * ( non - cmp )
returns a copy of this node .
appends a message to the buffer .
{
returns the {
initializes the notification info .
send a notification
creates a {
/ * ( non - javadoc )
{
{
{
installs the specified url to the specified url .
delete the given url .
write
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * process the internal components .
sci
show
slee
return
returns the logger .
{
output help about the help .
/ * ( non - javadoc )
creates a {
parse an option to a missed string .
returns the set of sbb entities .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
/ *
returns the permissions for the given principals .
loads the policy from the specified policy .
returns an inputstream from the given uri .
{
gets the code sources
{
{
creates a profile
{
/ * ( non - javadoc )
removes a profile from the profile .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the profile entities by attribute name .
gets the profile attribute for the given attribute .
checks if a profile exists in the profile )
rename the given a new profile .
{
gets the specs descriptor descriptor .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an array of ) units .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
deactivates this transaction
schedule all activities end end of - activity .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
set the fault tolerant ) resource
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * verify the configuration properties .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the fault tolerant resource . )
build the profile attribute map .
gets the specs descriptor descriptor .
resume the activity .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
{
{
{
/ * ( non - javadoc )
creates a usage parameter set .
sets the value of the value of a parameter name .
{
returns the usage parameter set for the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
<! -- start generic documentation -- >
<! -- begin - user - defined parameter
<! -- begin - user - doc -- > <! -- end - user - doc -- >
{
{
gets the child relation of the given sbb .
fires an event on an entity .
fires an event on a } .
gets the profile for the given sbb .
gets the sbb parameter set .
/ * ( non - javadoc )
/ * ( non - javadoc )
compute the convergence for the given event
gets the set of abstract methods of the given class .
get the object from the primitive type .
gets the class from the primitive type .
returns the primitive type from the given object type .
returns the abstract methods from the given class .
gets the concrete methods from a class .
returns the concrete methods from a class .
/ * ( non - javadoc )
returns the interface methods from the given interface .
/ * ( non - javadoc )
{
remove the object pool .
registers the mbean with the server .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
returns an {
converts a string to an address .
clear an alarm .
clear the alarms for the given notification source .
returns an array of all the alarms .
{
returns the descriptor for the given alarm .
returns an array of alarms .
/ * ( non - owner )
raise
gets the usage parameter set .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the specs descriptor .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
show
add
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
returns the {
execute
/ *
execute
execute
executes the priority
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - null tracer
binds an activity to the cache to the given aci )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an array of the members of this member .
/ * ( non - javadoc )
removes the failover data from the failover .
registers the {
{
compares two { .
rotate the given value .
/ * ( non - javadoc )
/ * ( non - javadoc )
remove the object pool .
/ * ( non - javadoc )
{
{
starts an activity .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
generate
make
convert a string to a string .
returns the local keyset of the cluster .
{
{
{
{
/ * ( non - javadoc )
sets the profile table name for a profile table .
returns the address of this profile .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
creates a { @link slee state from the given state .
converts a string representation of slee .
extracts the message from the result .
{
removes all stale timeouts .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
removes all the transaction manager
/ * ( non - javadoc )
{
{
{
/ * ( non - array
validates that the child name is valid .
/ * ( non - javadoc )
creates a { @link failure instance .
get the subsystem name of the given subsystem name .
{
sets the attribute value .
sets the attribute value .
set
sets the attribute value .
sets the attribute value .
sets the attribute value .
sets the attribute value .
sets the attribute value .
sets the attribute value .
set
/ *
/ *
parses the xml configuration from the given input stream .
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a profile call to the slee
{
passivate
/ *
/ * ( non - javadoc )
/ *
validates that the descriptor .
/ *
/ *
execute the given task .
execute
/ * ( non - javadoc )
creates an entity adaptor entity .
/ * ( non - javadoc )
generate the concrete methods .
creates an instance of { @link profile .
returns the log4j path for the given profile .
{
gets the specs descriptor .
returns the default config properties instance .
returns the activity flags for testing
/ * ( non - javadoc )
adds a name binding to the cache .
remove naming bindings
removes a name binding from the cache .
attaches a timer to the cache .
detach a timer from the cache .
removes the timer from the cache .
attaches an sbb entity to the cache .
detach an entity from the cache )
returns the set of sorted by priority .
updates the last access time in the cache .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a new component
/ * ( non - javadoc )
returns true if the deployment has missing .
returns true if there is a duplicates ) has duplicates .
gets the install actions for install actions
/ * ( non - javadoc )
check if this method id is a valid components .
load all the actions from the jar .
close
returns the object name for the given profile table .
method to write mode .
{
/ * ( non - javadoc )
resume
suspend
return
{
{
after
<p > invalidate . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the name of an entity name .
{
convert a string representation to use for the given service .
{
/ * ( non - javadoc )
delete
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * creates the constructor
sets the minimum free memory to turn to turn .
set the minimum free memory to turn to turn .
sets the number of checks .
/ * ( non - javadoc )
generate
/ * ( non - javadoc )
/ *
/ *
/ *
try
/ * ( non - javadoc )
create the child relations method .
add
/ * ( non - javadoc )
adds a query expression to this method .
checks if the given expression is nested by the given expression .
bind
unbind a <code > key< .
<p > unbind .
rebind
create a new context
{
fetch the logger info for the specified logger .
{
retrieves the trace level for the given component .
/ * ( non - javadoc )
gatherinfofromurl
--------------------------------------------------------------------------------------------
/ * ( non - javadoc )
{
/ *
/ * ( non - javadoc )
invokes the given method with the given arguments .
/ * create the constructor
set
{
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the real field name for the given field name .
set
gets the value of the field with the given name .
/ * ( non - javadoc )
{
{
{
initializes the profile .
/ * ( non - javadoc )
gets the profile local object .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the specs library descriptor .
create a class from a class pool
/ * ( non - javadoc )
/ *
adds a field to the class .
add
add
generate
generate
generate
adds an annotation to the pool .
adds the member values to the annotation pool .
/ * ( non - javadoc )
get the { @link classloader } .
/ *
clear the class pool .
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
{
returns the collator collator . < / p >
parses a dynamic query into a query expression .
replaces the last occurrence of the source string in the given source .
validates that the usage parameter is valid .
checks if the given class is a valid interface .
get
get
/ *
sets the trace level .
retrieves the trace level for the specified component .
/ *
get a { @link tracer } for a given source .
get a set of a notification .
get the list of a notification .
sets the trace level for a given source ) .
checks that the tracer name is a valid tracer name .
register
{
creates a tracer for a given tracer .
handle a collection of { @link profile
{
load
/ *
delete
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
route
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
generate
compares two solutions .
/ * ( non - javadoc )
returns the profile for the given name
gets the profiles by static query .
gets the profiles by dynamic query .
/ * ( non - javadoc )
retrieve the profile
rename the profile .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the entity manager .
starts the slee
shuts down the container .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
switch a class loader .
make a safe proxy call .
{
/ * ( non - javadoc )
/ *
/ *
process
return
is
/ * ( non - javadoc )
get
reset the logger
{
adds a logger to the server .
add a socket handler ) to the server handler
{
add a notification handler .
show
converts an int value to an {
converts a string representation of an address to an address .
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the priority of the cache .
set
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
get the object pool .
get the child relation )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the index of the next index .
/ * ( non - javadoc )
get the notification name for the given tracer name .
sync
assignlog4jlevel
resets the cache flags .
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
send a notification to the trace .
check that the tracer name is a valid .
write
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
{
returns the default profile for the specified profile table .
/ * ( optional ) the profile name
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
{
{
gets the profiles by static query name .
removes the profile from the profile table .
removes a profile table from the slee .
renames the profile table
creates a new instance of a } .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new {
gets the specs descriptor .
{
/ * ( non - javadoc )
registers a resource .
/ *
initialize slee
shuts down the slee .
validates that the state transition .
set
returns the local profile )
returns the profile name .
retrieves the profile table for the given profile table .
returns the name of the profile table
/ * ( non - javadoc )
get a { @link tracer .
/ * ( non - javadoc )
{
returns the library component } for the given id .
{
{
{
{
generate
generate
/ * ( non - javadoc )
{
{
{
{
inserts a { @link insert } into the database into the database .
executes the given update query .
set
sets an argument to the query .
sets the argument to the query .
build the {
custom
query
sets the argument to the query .
set
{
{
/ * ( non - javadoc )
creates a { @link region from a string .
gets the absolute region of this box .
resolve an image in the image )
url
gets the canonical form of the specified image .
get
gets the completeness for a given type .
sets the viewing hints .
add a viewing hint hint .
sets the list of this content .
add rendering
merges the given list of { @link profile } .
merges this {
creates a { @link rotation } from a string .
converts a converter from a string to a converter .
adds a member to this collection .
adds a member to this range .
returns the first value of the given locale .
creates a {
gets the canonical form of the specified image .
resolves a dimension of { @link dimension .
resolves the specified region .
initializes android devices
initialize the adb connection .
returns true if this {
/ * ( non - javadoc )
get
handles a pop box .
push
execute the temp command .
execute
input
{
replace
replace
replace
replaces the text in this editor .
indent
returns a collection of the tags .
markdown
escape
{
get
{
from databaseliaison
set
{
return
returns a listener that will be notified when the statement .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
get
{
{
{
{
set
validate
return
get
process the queue .
returns the parent fqcn of the given type .
find the barbershop for the given class .
write the java class to filer .
generate style method .
chomp
writes a bit vector01divider .
appends the bit strings to the given bv .
enum
/ * ------------------------------------------------------------
<p > get . < / p >
returns the value by path .
returns a list of json object from the request .
get
get
returns a set of all of the given code .
returns the list of booster
returns all the sets of a list of filters .
returns all sets of all the sets of the sets .
set the klov report .
adds a screen capture from the current step .
set
returns the severity for testing
split
adds a value to the list .
{
{
returns the value at the specified index in this vector .
{
/ * ( non - javadoc )
collects the list of the given results from the given selectors .
collects all the fields from a collection of selectors .
selects a list of a list of selectors .
selects a list of rows from the given selectors .
creates a { @link selector } for a property .
selects a row as a property .
selects an alias for the given alias .
flushes all the reads and flushes them to the queue .
flushes the writes to the output queue .
extract validation annotation data from an annotation
extract all annotations for a property .
returns the annotations of the given property
gets the property descriptor for the given type .
returns a {
/ *
set
from
return
creates a new instance of {
from
creates a new instance from } to a map }
converts a new instance of {
creates a new value from a value map .
to
converts an object to a map .
converts maps to objects to objects .
convert a collection of maps to a list of maps .
{
create
lookup the list of a list of validators in - registry .
looks up a {
apply
removes the property from the map .
returns a list of resources in the classpath .
get all paths from a resource loader .
/ * ( non - javadoc )
{
hash
returns the default {
checks if the specified file .
/ * ( non - javadoc )
{
{
{
load
{
returns the index of the end of the array .
reduce
reduce
returns the minimum value in the array .
create a double array from a double array .
returns the index of the given array .
returns the maximum value in the array .
returns the minimum value in the array .
returns the mean value of the given array .
computes the variance of an array .
returns the mean value of the given array of values .
returns the median of the specified array .
main
initializes the {
invoke
reduce
returns the sum of the specified float array .
returns the maximum value in an array .
computes the standard deviation of the given values .
get
returns {
<p > creates a field against the specified values . < / p >
returns a { @code criterion } .
creates a criteria that represents the specified type .
creates a new criteria from } .
creates a {
creates a new {
split
adds a float to the current set .
adds a value to the list .
adds a new array to the end of the array .
{
/ * ( non - javadoc )
searches for the specified item in the list .
search for the item in the specified item in the specified item .
return
sort
return
sort
get
return
sort
get
return
return
{
process
creates a collection of maps .
match
handle
process
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
gets the label of the given field .
creates a label with the given name space space .
returns the tool tip with the given name space .
generate the label value .
add
handle the message from the server .
/ * ( non - javadoc )
{
adds a value in the store .
removes all entries
this method .
/ * write queue .
starts the data store .
see {
slc
<p > checks if the given string is in the characters
add
add
compact
splits the given string into an array of strings .
splits the given string by space .
splits the given string by pipe each character array .
splits a char array into an array of strings .
<p > camel . < / p >
return
case
equals
equals
count
returns the sort of the sort } .
sort the given list of fields .
sort the list in ascending by this list .
sort
sort the given iterable using the given iterable .
sort
comparator
--------------------------------------------------------------------------------------------
returns the last entry in the map .
returns the value after the specified index .
returns the value before the specified index .
return
compare two {
returns true if both arrays are equal .
returns the sum of the array .
returns the maximum value in the specified array .
returns the minimum value in the array .
computes the standard deviation of the input list .
returns the median of the given collection .
round the given number up to power of2 } .
returns the message from the bundle .
sorts the given list of fields in the given list .
sort
handles a {
{
set
{
compile
/ * ( non - javadoc )
creates the sql key for the given table .
deep
calculate
has
return
return
gets the first comparable or primitive primitive primitive class .
get
get
get sortable field
{
compares the cache entry .
sort the given list in ascending order using the given sort algorithm .
sort
sort
sort
sort
sort
sorts the given iterable in ascending order .
sort
returns a comparator that compares two objects .
returns a comparator that compares two objects .
{
{
returns the value associated with the cache .
{
{
returns the order of the order .
evict the cache entries in the cache .
{
{
dynamically
return
unify
unify
allocates a direct buffer .
determines if the thread should determine if we are exit to exit .
manage
queue
waits for the next data to be written .
starts the monitor .
starts the {
{
validate
main
filter the results in the group .
applies the given criteria to the given criteria .
set
convert a set of maps to a list of maps .
tick
sync
closes the output stream .
/ * ( non - javadoc )
writes the contents of the disk .
initialize the output stream .
load
adds a value in the store .
{
check if the last delta of the last delta .
load
return
{
removes all the keys from the store .
read a list of a property .
loads the meta data props
extract
read
extract
extract
convert
compile
splits the given string using the given split .
split the given a string by white space .
splits string by delimiters .
split
splits the given string into an array of character .
parse
parse
parse
parse
split
adds a long to the set .
adds a value to the list .
{
split
adds an integer to the set .
adds the specified integer to the list .
{
{
/ * ( non - javadoc )
handles a message from the server .
get
return
value .
/ *
get a property by path .
gets the fields from an object .
returns a map of fields from a map .
get
get a property value by path .
get object at index .
inject
set
get a property value of a property
gets the value of a property .
gets the int value of a property .
get the value at a specific path .
get the value at the value .
gets the property path type .
get
get
returns the {
get
returns a map of all fields of the given serializer .
{
<p > create . < >
creates a message .
converts a list of keys to an array of values .
returns the current subject .
parses a json representation of a json string .
send
deletes a database from the database .
read a document for a document .
compacts the user .
returns a list of uuids that match the given count .
register interceptors
converts a json string to an object .
list
trigger a replication .
creates the json object .
visiblefortesting
query
deserialize a json document from a json document
parse the value of the given class and return an empty object .
query
descending
keys
synchronize a document from a document .
synchronizes all documents in the design .
returns a design document from the database .
get all the design from the desk
gets the design document from the given desk .
save
finds the {
finds all documents in the replicator database .
removes the document identified by its id .
find a document by its id .
returns an input stream } .
returns an input by id .
searches for a list of {
check if the document contains the given id
performs a post request .
execute a batch request to the given object .
removes a {
bulk bulk request
save an attachment to an xml file .
save an attachment to a document .
invoke
execute a request
executes the request .
/ *
reads a json document .
execute a put request .
performs an http put request .
executes a post request
performs an http delete request .
validates the response .
set
initializes the gson gson gson } .
add an attachment to the attachment .
sets the {
returns the list of the changes for the changes .
reads the next row from the input stream .
<editor - fold defaultstate = collapsed desc = generated code > // gen - begin : initcomponents
gen - last : field1action
gen - last : button4action
gen - last : button5action
gen - last : button6action
gen - last : button8action
gen - last : button9action
gen - last : box6action
setup
percent
converts an amount to a string .
converts this { @link double } using the specified money . <p > this method converts the specified money to a { @link double value using the money )
converts the specified number for the specified by the specified number .
shuts down the lock .
creates a new {
write a { @link observable .
{
verifies that the temp tables are valid .
returns the namespace id for the given namespace .
checks if a query is a query
sends an authentication request to the server .
returns the verb of the request
generate the access review review review review review
handles a request result .
on request failure .
{
reschedule
find scheduled jobs
converts a map of {
submits a compress job .
filter out a string .
sets up the gc .
ends the exchange .
parses an interval from a string .
/ * ( non - javadoc )
applies the given {
applies the given {
creates a { @code buckets } from the specified by the given count .
creates a new { @link buckets } from the specified range .
send
send
send
/ * ( non - javadoc )
match
searches for a project .
returns the cienvironment for the project .
sets the value of a property .
adds the given file to the given zip file .
replaces the given file with the given name .
builds a zip file .
generates a {
generate a new metrics } .
generates a set of {
generates a metrics from the given component .
{
{
/ * ( non - javadoc )
generates a {
returns the file in the given directory .
{
prepare the group .
/ *
registers the given group .
prepare the template .
/ * ( non - javadoc )
sets a property value .
add a child object to the collection
print
converts an iso 8601 string representation to date .
creates a {
{
{
creates a { @link sip } with the given by the given { @link assembler } .
{
creates a {
{
{
{
constructs a sip assembler } and { @link sip } for each } and { @link pdi } .
creates a {
{
{
{
copies all bytes from the given { @link inputstream .
creates a {
parses the given { @link file into a { @link document } .
parses the content from the given reader .
returns a stream of elements in the given parent .
creates a stream of the given parent element .
returns the first child element of the parent element .
returns a stream of elements in the parent element .
validates an xml document against the given xml schema .
creates an {
creates an instance of {
creates a yaml map from the given yaml string .
creates a yaml map from a } .
the main method .
{
creates a new { @link content } from the given resource name .
{
ascii
generate
generate
generate
generate
generate
checks if the download request is valid .
set a signature header .
encode
decode
remove
put
add a file to the cache .
put
signs the request .
set
complete
put
{
returns a set of the favorite .
sets the favorite notices .
returns a comparator for the specified request .
/ * ( non - javadoc )
creates a notification for the given entries .
creates a notification entry .
/ *
{
{
fetch the jpa proxy if it exists .
adds the notification entries in the given list .
list of notifications
creates a new notification )
get the notification for a notification
list of addressees
add a addressee
get a addressee
list all events for a notification
gets the event
creates a new {
get
/ * ( non - javadoc )
fetches the notification from the cache .
/ * ( non - javadoc )
parse the oidc
initialize this object .
set
{
{
gets the authentication token .
find a notification entry by id .
combines the given {
filters the given a set of errors .
{
{
adds all categories to the list .
clones this notification response .
{
/ * ( non - javadoc )
notification
reads the notification to a notification response .
map a notification entry .
attach the notification
normalize a link to a link .
creates a notification category from the request .
get the notification source for the portlet .
evaluates the redirect uri .
{
get the list of the notices from the portlet .
{
fetch the notification from the classpath .
reads a notification from a file .
handles a {
/ * ( non - javadoc )
returns the school id for the given request .
extracts the user id from the student
/ * ( non - javadoc )
{
calculate the number of a notification in the duration .
checks if a notification is snoozed .
hides the given notification entry .
/ * ( non - ) )
normalizes a geo vector to a vector
returns true if two points are inside the same coordinates
returns true if {
computes the closest point of two points .
sign from the cross product
sets the se3 of the matrix
{
{
<p > [ i ] = src [ src .
transforms a reverse transform from this image .
creates a {
<p > creates a {
converts a dense into the output
converts a { @link rectangle2d } into a { @link rectangle2d }
converts a {
converts a { @link rectangle
computes the bounding box of the rectangle .
computes the bounding box of the polygon
returns the center of the specified point .
returns true if the polygon is a polygon
computes the average average
<p > checks if two matrices are identical .
<p > checks if two matrices are equivalent are equivalent .
<p > flips the matrix by removing the results .
<p > sets every element to a matrix .
<p > shift matrix to a matrix in the matrix .
<p > computes the convex hull in the convex hull .
removes a parallel parallel from the polygon
removes the adjacent duplicates from the polygon
returns true if the polygon is adjacent duplicates .
returns the average of the closest point between two points .
<p > converts a matrix into a homography2d into a homography2d .
<p > creates a { @link dmatrixrmaj matrix
computes the area between two points .
inter
gets the point on the point
returns true if a polygon is convex
returns true if the polygon is concave
<p > checks if the point contains the same as defined by the triangle .
<p > checks if the triangle .
gets the intersection between two lines .
returns the intersection between two lines .
returns the intersection of two lines .
gets the intersection between two lines . < / p >
computes the intersection of two lines .
returns the intersection between two lines .
computes the intersection between two solutions . < = a .
returns true if the two points .
checks if two points are equal to be inside the two points .
returns true if the ellipse are inside the image .
returns true if two points are nan .
returns true if two {
returns the intersection between two lines .
returns the intersection of two lines .
converts a { @link rodrigues matrix into a { @link matrix } .
converts a { @link axis } .
converts a matrix to a euler matrix
converts a rodrigues coordinate to a quaternion .
<p > converts a quaternion to a rodrigues matrix .
converts a matrix to a euler matrix .
converts a matrix to a euler euler euler matrix .
returns the value at the specified index
converts a matrix into a quaternion .
creates a rodrigues matrix into a rodrigues matrix .
<p > computes the x = r [ r ]
sets the x = r = r .
<p > computes the y matrix for the given matrix .
<p > sets the z matrix to the z matrix .
sets the rot .
converts a symmetric matrix from a symmetric matrix from a symmetric matrix .
<p > computes the rotation about the axis .
computes the approximate rotation matrix .
creates a matrix into a matrix
sets the angle of this { .
gets the point on the point
creates a transform matrix into a transform .
computes the homogenous matrix into two matrices .
<p > creates a exponential matrix from two points .
computes the twist matrix from a motion matrix
sets the transforms of this matrix .
<p > computes the transformation
extends the extents
<p > computes the transform to a world matrix . < / p >
<p > computes the mean of a list of points .
computes the svd of the svd of the specified in the image .
<p > x = a * a b )
returns the length of the side
returns true if the point is inside the point
returns a line at the specified index
converts a list of storage into a list of vertexes }
sets the elements in the specified list
<p > extracts the { @link dmatrixrmaj } matrix into a dst matrix } matrix .
<p > converts a submatrix into a destination matrix .
<p > converts a submatrix into a {
<p > extracts the { @link dmatrixrmaj } from the src matrix .
<p > converts a { @link conic } into a { @link parabola } .
<p > converts a submatrix to another matrix .
<p > converts a { @link parabola
creates a cross - matrix from a matrix .
creates a cross matrix from the two matrices .
computes the cross product of two lines .
<p > computes the cross product of two instances . < / p >
<p > adds two observations of two matrices .
adds two lines to a point coordinates
<p > creates a matrix to the two matrices .
<p > computes the sub - vector multiplication
rotates a solution in the given a point .
rotates a point in the specified plane
<p > creates a new geo from the given matrix .
<p > computes the mod matrix for the given matrix .
computes the x = x * x = x * y * x * y
<p > creates a geo matrix into a matrix .
<p > creates a new geo matrix that is the same as {
<p > computes the inner matrix for the two matrices .
<p > computes the outer matrix for two matrices .
<p > adds the outer matrix to the two matrices . < / p >
<p > computes the inner matrix of the two matrices .
scales the results in the given v .
divide two vector v to v .
changes the sign of the given sign .
converts a geo matrix into a matrix
<p > converts matrix into a tuple3d matrix
sets the vector vector .
returns the half circle to half circle .
returns the bound of the grl .
returns the approximate .
bound
bound
computes the standard standard deviation of the grl .
convert the pi2 to a standard standard standard standard grl
computes the standard standard deviation between two grl
convert pi2 of pi2
computes the pi2 distribution
static
half
reflect
determine whether the plane with the parameter <i > p * ( / sup > t< ) < / i > i< / i > <i > x< / i > <i >
determine whether the plane with the given the parameter <i >
determine whether the plane intersect the same .
<p > returns how many times of two lines .
<p > determine if two lines contain the same .
<p > returns how many times between two lines .
determine whether two lines of the polygon is inside the polygon . < / sup >
returns true if two points have the same .
returns true if the point are inside a point
returns true if two points are inside the image
returns true if the line with the same line of the line is inside the line
<p > computes the where the two matrices .
extracts the quaternion from q
computes the hull from the input image
subtracts two points .
sets the covariance of the covariance matrix .
sets the motion to no motion
converts a se2 to affine to a affine matrix
<p > converts a se3 into a homogeneous matrix .
<p > creates a se3 into a se3 matrix . < / p >
<p > se into a homogeneous matrix [ se matrix
<p > creates a se2 into a se2 matrix . < / p >
<p > computes the xyz matrix .
<p > computes the xyz matrix from the axis .
<p > checks if two matrices are identical .
<p > extracts the best fit from the se3 matrix .
returns the distance between two lines .
calculates the distance between two lines .
converts a latlon coordinate to a vector to a unit vector .
evaluate
<p > true if the circle is inside the circle
returns the radius between two points .
computes the closest point of two points in the line .
determine if the closest points are inside the line
returns the closest point of the line
returns the closest point of a line .
returns the closest point of the plane
returns the closest point of the plane
returns the origin of the plane in the plane .
returns the closest point of the line in the two lines .
calculates the closest point of two lines .
<p > returns the closest point of two points .
returns the closest point between two lines .
<p > [ - za into a transform coordinates .
transforms a point into two points .
transform a point in - place .
transform a point to a point .
<p > [ i ] = p [ i ]
<p > creates a transform from a geometry .
<p > computes the transform of a matrix .
<p > creates a reverse transform from the two points .
converts a list of storage
sets the list of elements in the list .
<p > checks if two matrices are equal . < / p >
returns the acute angle between two lines .
returns the acute angle between two lines .
<p > creates a line into a line parametric2d from the line to the specified line
<p > creates a line into a { @link line .
<p > creates a line into a { @link line .
<p > creates a new line
<p > creates a new line
<p > creates a line from two lines . < / p >
<p > creates a line from two lines .
<p > creates a line polar2d
<p > creates a { @link line into a line .
<p > creates a new line }
converts a plane into a }
converts the { @link plane } into a { @link plane }
converts the { @link plane } by computing }
converts a { @link normal3d into a { @link plane }
computes the hessian of the plane .
computes the value of the plane
evaluate the plane
computes the axis2d from two points in the image .
computes a point from a point .
<p > computes the axis from two points . < / p >
converts a plane from a point to a world world to a plane .
{
creates a copy .
computes the norm
<p > converts a line }
computes the t between two points .
{
returns true if two matrices are equivalent .
computes the polar of a list of polar .
returns the area of this vector .
computes the center of the point
returns the acute angle between two lines .
<p > creates a list of points from the image
<p > computes the points3d from two points
returns true if two points are inside the same vector
creates a random point4d from the given point
converts a matrix to e .
<p > computes the transform of a matrix .
<p > transforms a point in the image .
acute
<p > computes the {
checks if two points .
sets the position of this rectangle .
<p > performs the following operation : <br > <br > a
compute the dot product
converts a { @link ellipse } into a { @link rotated }
converts a { @link ellipse } into a { @link ellipse }
evaluate
evaluate
computes the point for the two points inside the given point
computes the angle between two points .
computes the tangent of the two points .
returns true if two lines
<p > checks if two matrices have the same as {
computes the difference between two points .
<p > initialize the intersection of two points .
returns true if the intersection of the two points .
<p > = tmp
distance2
<p > extracts the best fit matrix from a matrix .
gets the corner of a corner
calculates the distance between two points .
returns the distance between two points .
calculates the distance between two points .
returns the distance between two points .
returns the distance between two points .
returns the distance between two points .
returns the distance between two points .
sets the point on the line
{
returns the distance between two lines .
calculates the distance between two lines .
returns the distance between two points .
returns the distance between two lines .
calculates the distance between two lines .
returns the distance between two lines .
returns the distance between two lines .
returns the distance between two points .
returns the distance between two points .
returns the distance between two points .
returns the distance between two points .
returns the minimum distance between two points .
returns the distance between two lines .
returns the distance between two lines .
returns the distance between two lines between two lines .
returns the distance between two points .
computes the distance2 distance between two points in the ellipse .
add
computes the closest point of the two lines in the line .
computes the closest point of the line
computes the closest point of a line
gets the closest point of the line
computes the closest point of two lines . < = p and output points .
computes the closest point of a point
computes the polynomial for the polynomial algorithm
{
<p > creates a random range [ min max ]
<p > computes the canonical perpendicular to a matrix .
<p > checks if two matrices are identical .
<p > performs the following operation : <br > v .
creates a matrix from the two matrices .
<p > converts a matrix into a { @link dmatrixrmaj } .
gets the acute distance between two lines .
<p > sets of this vector to the given vector .
creates a new instance of {
creates a new instance with the given scalar .
returns {
returns true if the two vectors .
checks if the given polygon is inside the polygon
checks if the polygon is inside the concave .
checks if two {
checks if two matrices are within the same .
creates a new instance of the specified matrix .
returns the distance between two points .
sets the ellipse for this ellipse .
computes the closest center of the image
normalizes this vector to be normalized vector .
{
gets the triangle between two points .
computes the quadrilateral distance between two points .
returns the simple polygon between two points .
<p > computes the mean between two points in the list .
returns the mean the mean of the two points .
<p > computes the mean of two points . < / p >
get the bounding box for the bounding box
get the bounding box between two points .
returns a list of points in the list of points .
computes the normal covariance for the specified in the covariance
generate a random norm from the two points .
{
normalizes this vector by the normalized .
<p > performs the multiplication
bounding box
adds the bounding box to the specified rectangle .
checks if a polygon is a positive polygon
flips the matrix to the specified matrix .
<p > true if the matrix is convex .
returns true if two lines are positive .
returns {
returns {
computes the mean of the mean of the two vectors .
<p > sets the values to a scalar vector .
set the scalar vector with the given scalar scalar .
/ * ( non - javadoc .
checks if a matrix is fitmm
<p > checks if the polynomial solver is the same as the polynomial .
checks to see {
fit the matrix using the specified offset
returns the distance between two points .
returns the distance between two points .
creates a random plane from the given point .
<p > generates a random distribution . < / p .
<p > generates a random distribution between two points .
returns the mean the mean of a list of points in the list .
<p > returns the mean of the given point .
computes the bounding box for the bounding box
invalidates all {
invalidates all cached {
combine
returns the list of features
get the list of config files in - memory dropins .
get the xml features of the server .
parses the include node .
parses a set of the feature manager .
this method to download all the product jsons .
download
returns true if the plugin is unsupported is unsupported .
returns all the set of liberty that are open .
checks if a list of features are open features are open .
case
installs features
/ * ( non - javadoc )
returns the next product version from the plugin .
extract
gets the map of all the map based on the given directory .
returns true if the given file is a replacement .
extracts the version of the file .
compares two strings .
validates that the product info .
retrieves the product information for the given install directory .
determine if the given artifact is a spring uber
get the arquillian properties for a map
/ *
/ * ( non - javadoc )
ask
show
parse
{
draw the shape of the specified color
draw
/ * ( non - javadoc )
move the given length to the center .
moves the specified length of the given length to the given length .
move the back to the center .
compare two objects .
display
load
get
}
returns true if the given topping has topping .
checks if the given file is a directory .
create the color palette .
draw
verifies the image .
returns the distance between two points .
swaps the elements of the given cells .
returns the distance to the goal .
/ *
play a sound .
printf
printf
test
show
draws a line .
draw a pixel in the image .
draw
draws a circle on the given radius .
draws a ellipse coordinate .
draws an arc .
draws a square matrix .
draws a rectangle .
draws a polygon .
draws a picture in the specified image .
draws a picture .
draws a text using the specified text .
scales the given text in the given text .
saves a file to the given file .
print a variable .
set
setup the color wheel .
draws the inner tkp p .
draw the tkp
draws the right bracket .
draw the tkp
draw the tkp
add a turtle to this panel .
create the color palette .
adjust
draw
set
moves the specified amount to the specified amount .
draw
{
weave
draws a triangle .
<p > checks that the specified by { @code a } . < / p >
uniform
returns the geometric geometric of a double value .
returns the poisson value to the given a lambda distribution .
discrete discrete function to a matrix .
main
set
connect
capitalize
capitalize
create
updates the user
updates the user by its id
/ * ( non - javadoc )
/ * ( elements
/ * ( non - javadoc )
/ * ( non - level
/ * ( non - matching the search model .
find
find the entity by id .
/ *
{
creates a new triggerinfodto
updates an existing trigger .
resume the specified trigger .
joins the given criteria to a string .
get
{
extracts the auth token from a cookie list .
register
login
logout
get
change password
{
finds all role permissions in the given parent .
returns the {
gets the entity identified by its id .
returns a list of job triggers for the given job .
schedule
pause
resume
/ * ------------------------------------------------------------
adds a projection to the list .
get
creates a {
convert2job
create a new {
set
set
send
{
{
initialize the scheduler .
get all fields of the specified class .
get
{
{
find the role permissions for the given id .
create
creates a new {
/ *
/ * ( non - javadoc )
configures the {
generates the hash attributes
generate a string representation .
{
{
verifies that a user
generate
changes the password of the user .
get a user by username .
hash password
{
verifies that the given password .
sets the asset to use .
set the last modified asset
loads the asset from the file .
loads the asset to cache .
fill
/ * ( non - javadoc )
{
create the reflections reflections .
find all the scanners in the given injector .
executes the given {
executes the specified { @link transaction } .
stores the previous session .
configure
commits the transaction .
error
closes the session .
starts the transaction .
read
returns all {
creates a new {
configure
checks if a method is authorized token .
{
checks if the given {
create a new {
bulk
{
gets the response .
creates a restriction that matches the given value
creates a restriction that matches the specified value and value .
creates a {
creates a {
creates a { @link restriction .
creates a {
creates a restriction that represents a restriction .
creates a restriction which is in the given value .
creates a new namespace manager with the given namespace and href .
creates a new {
creates a {
adds a link to this resource .
adds a link to this resource .
<p > a link to the resource .
creates a {
creates a {
creates a new resource representation .
creates a resource representation of this } with the given namespace .
returns an immutable copy of the specified map .
returns the root cause of the given {
returns the cause chain of the given {
get
returns a list of the given { @link throwable .
propagates the given {
encodes the given object into base64 notation .
decodes a byte array .
encode
decode
encodes the given string to byte array .
encodes a string into base64 notation .
encodes a 32 - array into base64 notation .
encodes a long into a long .
decodes a signed int from exactly 4 bytes .
reads a long from exactly 2 bytes .
copy
copy
copies the contents of the reader to the given } .
copy the contents of the specified reader to the contents } .
compare two <code > reader / code > s .
read
read
read
reads lines
reads lines
read
creates a hash of an iteration .
creates a {
creates a {
creates a {
copies a file into a directory
copy
copy
see {
delete
touch
reads bytes from the given file .
read
compare two files .
returns the base name of a file .
creates an {
reads the contents of a file .
parses the given string into a { .
create
returns the {
return
return
return
returns a new {
returns {
concatenates two iterators into a single iterable .
creates a {
creates a {
compare two { @link iterable are equal .
creates a {
returns an iterable that traverses } s in the iterable .
to
convert an iterable to a set .
convert an iterable to a bag .
add padding
returns an immutable copy of the given collection .
returns an immutable list containing the elements of the elements .
creates an immutable list containing the elements of the given iterator .
returns an immutable copy of the given array .
returns an immutable list containing the given values .
head
head
reads the content of a file .
tail
reads the contents of the specified file .
return
new
return
read
reads lines
creates a urn from a string } .
finds a resource by its name .
find a resource by name .
copies the contents of the url to the output stream .
copies the contents of the url to the specified writer .
{
read
{
return
is
return
is
return
is
return
is
return
{
return
parse
parses the given date into a string .
format
to
concatenates the iterators into a single iterator .
creates an iterator into an iterator .
creates an iterator yielding the elements .
creates an iterator yielding the elements in the given elements .
compare two {
creates an iterator yielding the elements in the iterator .
skips the specified number of elements in the iterator .
creates a { @link set .
converts an iterator to a iterator .
return
abbreviate
concatenates the given strings .
calculates the distance between two strings .
random
repeat
shuffle
strip
<p > strips all occurrences of the specified string .
<p > strips all occurrences of the string .
trims all whitespace from the string .
trims all whitespace from the string .
pad the given string .
pad a string with the specified .
quote
unquote
counts the number of occurrences of a string .
creates a { @link url from the given url .
relativize
resolves the given url .
gets the qualified name of a class .
gets the short name of a class .
get the package
returns the super types of the given class .
returns the common super types of the given classes .
verifies that the given password against a password .
read
appends a byte array to the buffer .
appends a byte array to the buffer .
/ * ( non - javadoc )
concatenates the given arrays into a new array .
concatenates the given arrays into a new array .
copies a range of a long array into a copy .
copies the contents of a new array .
returns a copy of the given array .
reverses the specified long array .
reverses the array .
rotate the given array by the given distance .
rotate the given array by the specified distance .
randomly randomly randomly randomly randomly shuffle .
sorts the array in ascending order .
sort the elements of the elements .
converts an array to a primitive array .
converts an integer array to a primitive array .
converts a short array to a primitive array .
converts a character array to a primitive array .
converts a byte array to a byte array .
converts a boolean array to a primitive array .
convert an array to a primitive to a primitive array .
converts a double array to a primitive array .
casts an array to an object array .
casts an array to an object array .
casts an array to an object array .
converts a char array to an array .
converts an array to a byte array .
converts an array to an object array .
casts an array to an object array .
casts an array to an object array .
decode
is
return
lower
returns a {
encode
decodes a string into a string .
decodes data from base64 notation .
returns a { @code fraction } representation of the specified integer .
parse a string into a fraction .
{
{
returns a new fraction by another multiplied by another .
returns a new fraction ) by the result .
returns a new {
returns a negated of this fraction .
returns a reduced fraction of this fraction .
returns an immutable set containing the elements of the specified collection .
returns an immutable set containing the given elements .
returns an immutable set containing all the elements of the given iterator .
creates a copy of the specified values .
creates an immutable set containing the given values .
parse a duration into a duration .
obtains an instance of { @code amount } .
creates a duration from the specified duration .
between
return
returns the minimum value of the specified array .
mean
returns the mean value .
returns the value of the specified { @code long } .
<p > returns <code > integer .
subtracts two values from the two values .
multiply two values of two values .
multiply two values .
divide two <code >
divide two values .
safe
returns the gcd of two values .
gcd
lcm
converts a long to an int .
check
throw
checks if the given type is a valid type .
checks that a type is a valid type of a type .
checks if the given boolean array .
xor
return
on
on
{
returns a {
returns a {
returns a {
replace
splits a string into an unmodifiable strings .
returns a comparator that is the given {
returns a comparator that matches the same as {
returns a comparator that compares the specified comparator .
returns a comparator that compares two {
returns a comparator that compares two {
returns a new {
returns a new {
returns a {
returns a joiner that is null values of {
returns a new joiner with the given separator .
returns a new {
joins the given parts of the string .
creates a digest from the given algorithm .
calculates the mac mac mac mac .
creates a new immutable copy of the specified collection .
<p > of
creates an immutable { @link bag } .
<p > of
creates a bag .
returns the relation
/ *
reads the body as json .
/ * ( non - javadoc )
gets the {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
/ *
executes an http request and returns the result .
/ * ( non - javadoc )
returns the object represented by token .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the collection type of the given type .
convert
/ * ( non - javadoc )
/ * ( non - javadoc )
{
fetch the content of a given longitude .
fetch the content of a meteo .
/ * ( non - javadoc )
/ * ( non - forecast for the given time .
create an instance of { @link jaxbelement } { @code < } { @link temperature } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link symbol } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link temperature } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link windspeed } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link value } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link location } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link value } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link precipitation } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link tidalwater } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link value } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link precipitation } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link score } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link windspeed } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link depth } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link cloudiness } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link temperature } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link value } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link temperature } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link weather } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link value } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link value } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link direction } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link temperature } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link windspeed } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link value } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link temperature } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link uv } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link cloudiness } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link temperature } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link location } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link location } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link value } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link pressure } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link cloudiness } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link value } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link value } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link value } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link groundcover } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link temperature } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link windspeed } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link location } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link cloudiness } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link temperature } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link temperature } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link cloudiness } { @code > }}
{
/ * ( non - javadoc )
returns a long term forecast for this series .
creates a location from a string representation .
fetch the content of the meteo .
create an instance of { @link jaxbelement } { @code < } { @link probability } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
returns the wind symbol name from the given a forecast .
finds the beaufort level of the given forecast .
creates a uri from the given uri .
checks if the current date is sun .
returns the forecast forecast of the given time .
gets the forecast fit period for a given date .
returns the best fit period forecast for the request .
{
fetch the content for a given longitude .
get the file extensions for the given decoder .
returns the name to a file .
load the datasource from database .
evaluates a script against the given inputstream
invokes a string .
{
get a new object of type {
creates a new instance of type t .
{
calls the remote call .
{
get
get the configuration for the given class .
checks if the bootstrap configuration is enabled .
/ * ( non - javadoc )
{
get
get a service for the given class .
gets the service or else else else returns default value is not found .
returns all services of the given intf .
get the module instance for the given interface .
acquires an input stream from a datasource .
{
creates a wrapped {
{
returns the prefix for the given upper index .
returns true if this compiler is a compiler .
exec
/ * ( cnfa ) of the given cnfa .
returns true if the given cnfa is a dfa .
/ * cfindloop
subset
/ *
/ *
returns true if the given dfa is a dfa .
/ *
/ *
/ *
/ *
makesearch
sets the arc of the given type .
optst
/ *
markst
return
compact
/ *
/ *
/ * parse a setter atom .
check if the freestate is no - freestate
/ * see {
check if the given directory to be ahead
word
scannum
/ *
parse the regex to the form .
/ *
parse a regex state of a regex .
return
/ * nfa of the nfa .
add
/ *
dovec
compiles a regular expression into an array of regular expression objects .
compiles the given regular expression .
find the arc of the given type .
get
get
get the sco of the given color
read the color value of a color
process a set of colors .
set the nosub of the arc .
sets the color of an arc .
uncolorchain
rainbow the color to the given type .
colorcomplement the color of the nfa .
dumpcolors
writes the extended to the map .
/ *
/ * ------------------------------------------------------------
lexnest
/ * ( non - javadoc )
checks if a regex is a valid note .
/ * ( non - ascii characters ) of advf .
lexdigits
get
initialize the state set .
set the miss
longest
returns the number of state sets in the last seen .
eclass
allcases
get the unicode . < / p >
carcsort the arcs of the carc .
dumpst
reset
/ * ( non - javadoc )
sets the given state .
/ *
sets the state of the arc .
sets the given state of the given state .
--
/ *
cparc
documentation inherited from interface .
check if the given state to the given state .
sets the given state .
sets the colorless of colorless .
/ * ( non - javadoc )
dumpstate
dumparcs
return
dumparc
optimize
analyze
pullback
/ *
pushfwd
push
/ * ( non - negative ) .
clean up all the states .
/ *
/ *
/ *
returns true if the arc is in the same .
/ * this method to load the same as a map .
this method to get the rule interpreter plugins
get the {
/ *
the main .
run the command .
get
gather the {
gather the standard options .
gather all the given the given options .
gather
interpret the command line .
get the command line .
executes a task .
reads the properties from the command line .
prints the usage of the specified options .
gets the home directory .
creates the plugin class loader .
parse the resources
write a geometry to a geometry
creates a new polygon
returns the set of the ids in the specified longitude .
returns the intersecting ids of the specified longitude .
check if a point is in polygon
route
{
----------------------------------------------------------------------------
----------------------------------------------------------------------------
add
{
{
{
add a route to routes
add
add a route to routes
removes a path pattern .
{
returns true if any of the request tokens ) is matched by the request .
/ * ( non - javadoc )
/ *
returns the name of the store file .
gets the store file .
get the bookmark set for a bookmark .
returns the children of this node .
compare two folders .
{
compare two bookmarks .
get the preferences for a bookmark .
/ * ( non - javadoc )
get
/ *
load
load
/ * ( non - javadoc )
/ * ------------------------------------------------------------
parse
add an include include files to the given parent .
receive notification of the start element .
/ *
/ *
/ * -------------------------------------------------
process
enable dtd validation of a dtd .
/ *
ends the end of a prefix .
parses a standard action .
parse a custom action .
adds the taglib info to the tag .
/ *
process an include directive .
check if the given uri is valid .
check if the given prefix is a valid .
create a saxparser from the xml document .
load a class .
/ *
load
wraps a callable into } .
wrap a callable in a callable .
parse an authorization request .
returns the instance of { @link instance .
maps a function to a class .
creates a map from a function .
resolve a function by its prefix .
set
set values }
/ * ( non - javadoc )
/ *
parse a jar file into a jar file .
{
/ * parse
parse
compare
get
/ * determine the syntax
returns the page encoding for jsp syntax
returns the page encoding from the directive .
resolves the file name .
returns true if the reader is a jsp root root .
creates a compiler
/ * ( non - javadoc )
/ * ( non - javadoc )
increment the jsp compiler .
compiles the jasper > } ) into a compiler .
/ * ( non - javadoc )
{
{
return
/ *
checks if the given classloader is a class loader .
this method .
read
/ * ( non - input stream .
/ * ( non - javadoc )
closes the input stream .
paginate
{
create a meta key from a string .
fills the rpm requirements .
builds the {
/ * ( non - javadoc )
get the tag information )
parse the implicit tld
gets the checksum of the specified file .
returns the size of the specified file .
validates the channel name .
{
get the encoder usage
returns the decoder memory usage of the given options .
reads bytes from the input stream .
/ * ( non - javadoc )
read position .
seeks to the specified block .
seeks to the next position .
locates the block at the given position .
locates the block by number .
initialize the block decoder .
/ *
generate iterators
get the maven artifacts for the given channel .
checks if the given artifact is a zip file .
/ * ( literal ) to opts
update the state and reps .
calc1byte
calc
calc
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
reads characters into the stream .
/ *
throws an invalid byte is invalid .
/ * ( non - javadoc )
scan the tlds
process the web dot xml files
scan
process all tlds in - file system
scan a listener for a resource .
scan
adds the manifest class path to the manifest .
/ * ( non - javadoc )
returns the {
sets the value of the specified bytecode value .
returns the value of the specified by name .
saves bytecode
check if the jsp file is removed .
initialize the class path .
/ * initialize the permission .
starts the thread .
stops the thread .
/ *
finds a channel instance by id .
find a channel instance by name .
returns the channel instance for the channel .
updates the deploy group cache .
{
{
copies all bytes from the input stream to the given output stream .
copy the content of the contents of the input .
parses the content of the given jar and returns the node nodes .
parse attributes
parses the attributes of attributes
parse an attribute .
parses the name of the form of the name .
/ *
/ *
processes the given file .
parses the page directive .
parses the include directive .
add an include attributes to the parent .
/ *
parses the directive .
parses the xml file .
parses the tag directive .
parse an attribute directive .
parses a variable directive .
parses the comment .
parses the xml declaration .
parse the xml tree .
parses the script expression .
parseelexpression
parses the scriptlet script .
parses the xml tree .
parse the xml element .
parses the forward tree .
parses the xml property .
parses the set property .
/ *
parses the use bean .
parses an optional body .
/ *
parses the jsp params .
parse fall
parse the xml plugin .
parses the plugin tags .
parses the standard action .
parses the custom tag .
parses the template text .
/ *
parses the elements of the xml tree .
parses the elements of the elements in the xml tree .
parses the elements of the elements of the template .
/ *
/ *
parses the jsp body .
parse the body of the body .
parse named attributes of named attributes .
returns the body of the attribute .
returns the value of the attribute .
/ * ( non - node by its name .
returns the named attribute nodes .
adds the body to the parent .
returns all the { @link processor for the specified by the given context .
adds an attribute to the map )
add a child node to this tree .
/ * ( non - null value .
{
find a child node by its name .
{
returns an iterator with the given name .
replies the {
returns the alias of the given name .
set
unset
find the {
write an optional field to the writer .
writes the given field to the given writer .
adds an element to the parent .
add the first element of the parent element .
get the text of the given element .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
closes the stream .
/ * ( non - javadoc )
set
/ * ------------------------------------------------------------
map
find the same parent of the given key .
registers a model . storage } .
stream
monitor
cleanup
checks if the request is authenticated .
checks if the request is authenticated .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
creates a {
returns the index of a slot
returns true if this ) is started .
get a string from a map
get a string from a map .
returns the union of a metadata .
writes an announce file to the given admin file .
get
introspect
/ * static
/ *
handle
get
include
reuse the specified tag handler .
releases all resources .
returns the sum of the given coordinates .
{
/ * ------------------------------------------------------------
/ *
evaluates the result }
creates the prefix from the osgi properties .
check if the given path is an xml file .
parse a tag file directives .
load
load
removes a proto type files .
entry point to the command line .
sets the uriroot
set
/ * ( non - errors
merge
scan
returns the next argument .
/ * ------------------------------------------------------------
locate the uri root for the given uri .
/ * ------------------------------------------------------------
remove all jsp fragment errors .
/ *
<p >
set the distance between the specified distance .
{
returns true if a string matches the given string .
skip until the next character in the string .
/ * ( non - >
mark
parses the token .
returns true if the delimiter is a delimiter .
register
removes the source file .
push
pop a file .
/ * ( non - javadoc )
add the method binders to the given method .
returns a string representation of the file .
returns an array of { @link iproblem .
sets the preset preset .
sets the dict size .
/ *
sets the number
/ *
sets the nice number of bytes .
set the match finder .
returns the number of the memory .
dispatch
send an error . < / p >
dispatch
sends an error messages . xml )
/ *
/ *
/ *
/ * ( non - javadoc )
dispatch an error message .
/ *
filters the given list of aspect information by predicate .
returns an array of missing ids .
sets the schema resource prefix .
/ * ------------------------------------------------------------
encode
/ *
parse the xml document from the given xml document .
convert a node to a tree
get the schema for the given document
get the schema for the given schema .
creates a new { .
merges all errors of the given binding .
add a new binder .
initialize the binder .
scans the aspect informations of the given bundle .
generate the smap .
extracts the path from the path .
invoke
returns the array from the cache .
add an array to the cache .
get
get
prepares all dependencies for the given directory .
prepare plain aether to the given directory .
process an array of artifacts in - memory repositories .
convert the given collection of maven coordinates to a result } .
/ *
get the tag library ) tag library infos .
read the content of the given jar files .
/ * this method for a scanner .
find the tag file info
/ * ( non - javadoc )
push
pop
get
creates the initial reader .
returns the encoding of the encoding .
read the xml file .
/ * ------------------------------------------------------------
scans the surrogates of a surrogates .
/ *
fill the repo links for the given channel .
fills the repo links for the given channel .
fills the repo links of the specified menu .
returns the real path of the given path .
/ * ( non - javadoc )
get
/ * ( non - javadoc )
<p >
/ * ( non - javadoc )
add
{
{
/ * ( non - javadoc )
{
/ *
closes the stream .
closes the stream .
get
returns the memory usage of the given dict .
creates an instance of { @link lzencoder .
sets the preset dict .
moves the current window .
fills a window from the buffer .
processes the pending bytes .
returns the number of the specified buffer .
read
checks if the matches the given matches the array
moves the given position
/ * ------------------------------------------------------------
flush the internal buffer .
{
/ *
closes the stream . out )
writes a string .
/ * ------------------------------------------------------------ to the output stream .
writes a portion of an array of characters to the underlying characters .
/ * ------------------------------------------------------------
allocates a char buffer .
returns a lock .
/ *
/ *
/ * ( non - javadoc )
resets the cache .
returns the localized message for the specified code
get
get
get the localized message from the given message .
make
generate
generate the class .
compiles the contents of source files .
checks if the target ) if the target file .
/ * ( non - javadoc )
initialize the java compiler .
returns true if the given path is a system .
reads bytes from the input stream .
/ * ( non - javadoc )
quote a character .
generate
compile the tag handler pool list of tag names .
generates the tag handler .
generate
gen
generate the list of the preamble
gen
gen - last : preamble
generate the preamble methods
generate
generates the xml prolog .
generate the constructor for the given class .
generate the common postamble .
generates the postamble code .
generate the html code .
generate the preamble preamble preamble .
generate the tag handler attributes .
generate the set of the jsp context .
generates the dynamic attribute .
generate the scoped variables for the page .
to
to
reads the properties from the given input stream .
exports a channel to an output stream
creates a new array of the given charset .
/ *
/ *
/ *
releases all resources .
parses the given expression into a elnode expression .
parses the elnode nodes .
/ * ------------------------------------------------------------
/ *
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
prints a comment .
/ *
prints a string .
prints a multi - based on - line .
returns true if the given token is an expression .
get
check that a scope is valid .
/ *
escape xml characters in a string .
return
convert a string to a class .
generates a interpreter call to interpreter .
validate
get the class name for the given path .
given a java path to a java package .
splits the given path into an array .
converts a java identifier to a java identifier .
converts a char to a string .
return
convert a java identifier to an xml identifier .
gets the canonical name of a class .
expand a list of the manifest file
create
add a property .
writes the xml element to the given xmlstreamwriter .
writes the xml for the given unit .
gets the job for a given id .
get the modifier .
returns the metadata of the given namespace .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
increments the error count .
/ * ( non - javadoc )
checks if the given key has the given key
get
/ * ------------------------------------------------------------
/ * ( non - javadoc )
closes the input stream .
{
gets the eligible data .
get
caches an entry in the specified key .
load
build a collection of the given the given payload .
resolve
serialize a string .
writes the given object to the output stream .
/ * ( non - javadoc )
{
/ *
converts a map of timestamp to a map of timestamp .
creates the prepared statements .
/ * ( non - javadoc )
returns the bound statement for the given locator .
/ * ( non - javadoc )
track
track
reads a unversioned double from the input stream .
put unversioned
{
creates the container .
{
{
updates the shard
schedule eligible slots to the given shard .
returns the next scheduled slot .
push a back to the scheduled slots .
clears the slot from the slot .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
insert metrics in batch .
registers a listener to be notified when the listener .
once
removes an event from the queue .
emits an event to all registered listeners .
/ * ( non - javadoc )
returns the remote name : timestamp )
appends the rollup event to the output stream .
parses the timestamp from the file .
starts the server .
returns a {
creates a {
puts the value to the ttl map .
computes the variance from simple metrics .
compute the average metric from the given rollups .
creates a {
returns the bound statement for the given locator .
compute the maximums for each output headers .
format
format the given array of outputs .
register all the metrics .
waits for a wait time .
prefetch all the locks .
waits for the quiesce to finish .
parses a string into a {
returns a collection of this slot .
returns the children of the children ) .
/ * ( non - javadoc )
format
/ * ( non - javadoc )
adds a metric to the map .
get the names of the complete metric names .
returns a map of the dirty slots in the given shard .
returns a list of tokens of the given locator .
put
gets the rollups for the specified locator .
gets the values for the specified column family .
add
/ *
selects a list of results from the specified column family .
converts a list of futures to a table .
derive a range of slots .
creates a {
creates a {
creates a {
constructs a {
creates a {
/ * ( non - javadoc )
add a shard to the shard .
remove a shard .
returns a set of unique tokens that token .
get the list of a list of imetric
process all tokens in the list of the tokens .
instrument
returns the list of unique hosts .
returns the unique set of unique hosts
returns a set of unique addresses as a list of unique parts .
returns the maximum number of cassandra hosts
serialize a {
returns the token query string for the given tenant id .
get the regex to handle the regex .
perform an index to the given url
returns an iterable of {
parses the command line options .
{
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
insert
get bound statement for metric .
returns the locators locators for the given execution .
get a list of metric names of the specified metrics .
get metric names from the elasticsearch
converts the given query string to a grab and returns the result .
starts the uploader .
stops the file .
computes the sum of simple metrics in simple metrics .
computes the sum of the given {
/ * ( non - locator is in the batch layer .
/ * ( non - discovery layer is currently in discovery layer )
/ * ( non - token )
{
add a slot
{
returns an iterable of { @link range of the given granularity .
/ * package private
returns an iterable containing the ranges for the given interval .
inserts a collection of metrics into the batch .
inserts the given metric if necessary .
inserts a batch of locator .
inserts a delayed locator } into the delayed locator .
inserts the metrics } into the cache .
/ * ( non - javadoc )
{
gets the datapoints for the specified range .
{
converts a map of {
returns the rollup type for the rollup
checks if the given metric is delayed .
inserts the metric locator into the metric is delayed .
returns the bound statement for the given metric .
get the metric names for a given tenant .
{
gets the data to roll the given type .
get the datapoints for a range of range .
get the datapoints for the specified range .
{
creates a serializer for the given type .
/ * ( true is valid .
/ * ( non - valid ) is valid )
inserts a list of {
return true if the gauge is valid .
marks the delay metrics received by the given delay .
check if the download file .
{
/ * ( non - javadoc )
{
returns the local port
get a new instance of {
return true if the os name is a valid .
returns the system property for the given property .
checks if the given version is a java .
checks if the specified os name of the same .
checks if the given os version is valid .
returns the rabbit mq port .
starts the server .
stops the process .
/ *
stops the state .
splits the split state .
/ *
resume the {
/ *
join
/ * ( non - javadoc )
{
{
list of plugins .
enable the process .
disables the specified plugin .
copy
copies the url to the given url to the given destination file .
copies the contents of an input stream .
{
create a plugin from a string .
returns an instance of {
adds a set
adds a peer to the peer .
connect
closes a connection .
closes all connections .
transmit
generate
transmit
transmit
gets the value of the weitere property .
gets the value of the user property .
gets the value of the user property .
sets the value of the jaxbelement property .
gets the value of the multimedia property .
getstatusvbm
getstatusis24
getstatushp
<! -- begin - user - doc -- > <! -- end - user - doc -- >
getter for the adressdruck property .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
entry point for testing .
returns the ad type .
creates a picture type .
the main method .
creates the agent .
creates the {
creates a property type .
creates an image image .
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link stellplatz } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link stellplatz } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link stellplatz } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link stellplatz } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link stellplatz } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link kategorie } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
<! -- begin - user - doc -- > <! -- end - user - doc -- >
sets the value of the region property .
sets the value of the <code > string / code > property . < / p >
<p > set the value of the <code > java / code > property . < / p >
<p > set the value of the <code > description / code > property . < / p >
sets the value of the rent property .
sets the furnished value for this rental .
<p > set the value of the <code > phone1 / code > property . < / p >
<p > set the value of the <code > phone2 / code > property . < / p >
use {
<p > setter for phone . < / p >
setter for main
use {
use {
<p > set the value of the agent property . < / p >
the main method .
creates a haus
creates a wohnung record .
init
writes a list of records to the given output stream .
writes a list of records to console .
sets the epart .
sets the jahrgang .
sets the gebaeudeart .
sets the value of the buero property .
return
parse
parse a string representation of a string .
print a number .
print
setter for gebiete
creates a new {
creates a {
creates a { @link marshaller .
creates an xml unmarshaller .
get
sets the value of the anhang property .
sets the gruppe .
sets the value of the floor property .
sets the value of the agent property .
gets the value of the property property .
reads the xml file from the given xml file .
read the xml file
prints overseas to console to the console
sets the value of the stand property .
gets the value of the user property .
checks if the given document is readable .
creates a new {
{
sets the zeiteinheit zeiteinheit
gets the value of the zimmer property .
gets the value of the haus property .
gets the value of the buero property .
gets the value of the gastgewerbe property .
gets the value of the land property .
gets the value of the sonstige property .
gets the value of the zinshaus property .
gets the value of the terrain property .
setter for periode
removes the energiepass jahrgang elements from the document .
creates a { @link casa
sets the umfang .
creates a {
{
sets the wohnungtyp .
get
return
get
return
returns the country name for the given country .
translates the country name into a string .
gets the value of the anbieter property .
setter for periode
sets the category - user - property property .
gets the value of the pdf property .
sets the aktionart
main method .
reads the contents of a file .
read the contents of the given input stream .
prints out a console .
setter for realestateitems
sets the value of the pacht property .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
main method for testing .
creates the uebertragung .
/ * ( non - javadoc )
{
read the befeuerung elements from the document .
downgrade the energiepass elements from the xml document .
remove multiple energiepass elements from the document .
main
gets the value of the content property .
get the names of the fields .
sets the blick .
setter for pauschalmiete value for pauschalmiete property .
setter for monatsmiete value for monatsmiete property .
<! -- begin - user
/ * ( non - javadoc )
sets the value of the lastenaufzug property .
<! -- begin - user
setter for zustand - sets
read the xml document from an xml document .
prints the feed to console .
gets the value of the feld property .
/ * ( non - javadoc )
dump
get
parse
print method .
sets the value of the given position .
sets the value of the check property .
read the xml document from an xml document .
prints to console .
sets the haustyp .
read the xml document from an xml document .
print
gets the value of the energiepass property .
sets the keller .
sets the value of the grundst property .
sets the value of the geschl property .
sets the value of the hallen property .
sets the value of the box property .
getter for the wiederholungstermin property .
getter for the teilungsversteigerung property .
sets the value of the kauf property .
{
{
downgrade
parse the child elements from the xml document .
sets the parken elements in the given document .
upgrade zinshaus .
create an instance of { @link jaxbelement } { @code < } { @link virtuelle } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link immobilie } { @code > }}
create an instance of { @link wohnung }
create an instance of { @link wohnung }
create an instance of { @link haus }
create an instance of { @link haus }
creates an instance of {
create an instance of { @link jaxbelement } { @code < } { @link grundstueck } { @code > }}
creates an instance of { @link grundstueck } .
creates an instance of { @link grundstueck } .
create an instance of { @link grundstueck }
create an instance of { @link jaxbelement } { @code < } { @link haus } { @code > }}
create an instance of { @link buero }
creates an instance of { @link einzelhandel } .
creates an instance of { @link gastronomie } .
create an instance of { @link halle }
create an instance of { @link sonstige }
creates an instance of { @link anlageobjekt } .
create an instance of { @link garage }
create an instance of { @link garage }
creates an instance of { @link zwangsversteigerung } .
creates an instance of {
create an instance of { @link jaxbelement } { @code < } { @link immobilie } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link hebeanlage } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link virtuelle } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link miete } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link kauf } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link pacht } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link miete } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link kauf } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link erbpacht } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link kauf } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link pacht } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link erbpacht } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link kauf } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link pacht } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link erbpacht } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link miete } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link stellplatz } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link byte } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
main method for testing
creates the anbieter .
creates the immobilie .
creates the uebertragung .
main method for testing
creates the database type .
creates the meta data type .
creates a product type .
creates the {
creates a new { @link number >
writes the given {
creates a {
read the xml document from an xml document .
print
gets the value of the bevorzugt property .
gets the value of the wunsch property .
setter for art
sets the modus .
gets the value of the email property .
gets the value of the tel property .
sets the value of the handel property .
sets the value of the erschl property .
/ * ( non - javadoc )
set the ausblick elements in the given document .
the main method .
createobjekt
writes the document to the given outputstream .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
gets the value of the row property .
sets the value of the distanz property .
creates a { .
gets the value of the anhang property .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
entry point of the immo .
reads the xml file from the given xml file .
read the xml file
print
print
gets the value of the vermarktungsart property .
gets the value of the interessent property .
sets the wert
creates a new {
{
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the einzelhandel property .
sets the value of the einzelhandel property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the keine property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
downgrade
upgrade the current version .
setter for anbieter
gets the value of the wohnung property .
gets the value of the grundstueck property .
gets the value of the einzelhandel property .
gets the value of the hallen property .
gets the value of the parken property .
gets the value of the freizeitimmobilie property .
gets the value of the objektart property .
gets the value of the stellplatzart property .
setter for dauer
creates a {
the main method to write application .
creates the record .
writes a list of records to the given file .
sets the value of the erschl property .
gets the value of the feature property .
parses the given csv file .
prints the contents of the csv file .
print a record .
print all the records .
replaces the line breaks in the value of the given value .
creates a {
creates a {
parse an area unit value .
parses a boolean value .
parse a date value .
parse a string representation of a foreclosure .
parse a string representation of a string .
parses a currency currency value .
parse a string representation of a { @link string } .
parse
parse a string representation of a string .
parse the given string to a type value .
print boolean value .
print content value .
print country value .
print
print latitude value .
print a biginteger area value .
print price value .
print rooms value .
print uri value .
print year value .
sets the zimmertyp .
remove all child nodes from the given node .
counts the number of nodes in the xpath expression .
counts the number of nodes in the specified xpath expression .
returns the root element of the given document .
creates a new {
creates a new {
creates an xml document from an xml string .
creates a document from an xml source .
parse an xml document from an xml source .
creates a document from an xml stream .
creates a document from an xml document .
creates a new { @link document } from the given xml file .
creates a document from an xml file .
creates an xpath expression from the given string .
creates an xpath expression from the given expression .
creates an xpath expression from the given expression .
prints the nodes in the document .
replaces the namespace in the given document .
replaces the namespace in the given node .
replacetextwithcdata
replaces the children of the given node with the given node .
write the xml document to the given file .
write
writes the content of the given document .
writes the content of the given {
writes the xml document to the given writer .
writes this xml document to the given file .
writes this document to an xml stream .
returns the content of the xml to an xml string .
creates a {
/ * ( non - javadoc )
{
select the energiepass elements in the xml document .
upgrade the energiepass
sets the value of the keine property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
sets the value of the jaxbelement property .
main method to the main method .
creates the property .
creates a random picture project .
creates the picture extended picture .
creates a new {
random
random
random
<! -- begin - user - doc -- > <! -- end - user - doc -- >
sets the value of the benutzer property .
sets the value of the objekte property .
gets the value of the feed property .
sets the moeb .
gets the value of the serviceleistungen property .
creates a {
creates a {
{
setter for administrative .
sets the city
setter for locality value
/ * ( non - javadoc )
{
sets the energiepass elements from the xml document .
upgrade energiepass elements in the xml document .
setter for miete .
sets the value of the jaxbelement property .
sets the value of the land property .
gets the value of the field property .
entry point to write out the console .
creates the anbieter .
create
create
create an instance of {
create an instance of {
create an instance of { @link feed . projects .
create an instance of {
create an instance of {
/ * ( non - javadoc )
{
parse the mieteinnahmen elements in the xml document .
removes the ausstattung child elements from the document .
upgrade mieteinnahmen elements . < = {
gets the value of the ad property .
sets the value of the gastgew property .
sets the platzart
<! -- begin - user - doc -- > <! -- end - user - doc -- >
getter for the daten
<! -- begin - user - doc -- > <! -- end - user - doc -- >
gets the value of the image property .
entry point of the console .
creates the realestate .
create
sets the value of the price property .
sets the value of the availability property .
sets the value of the <code > string / code > property . < / p >
<p > set the value of the <code > co2rating / code > property . < / p >
<p > setter for energy . < / p >
<p > set the value of the <code > viewing / code > property . < / p >
sets the value of the property property .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
sets the value - sets
creates a new {
read the xml document from an xml document .
prints the console to the realestateitems .
sets the value of the project property .
sets the value of the bebaubar property .
/ * ( non - javadoc )
{
remove the anhang elements from the xml document .
remove feedback interessent child elements from the document .
upgrade anhang elements .
upgrade anzahl the anzahl balkon
upgrade sonstige elements .
sets the value of the parken property .
sets the value of the foto property .
creates a new {
{
creates a new {
{
sets the value of the alter property .
creates a {
sets the value of the freizeit property .
setter for telefonart
reads the xml document from the given input stream .
print
setter for emailart
create a is24csv record for the given record .
value
setter for overseas - sets
creates an xml document from an input stream .
creates an xml document from the given xml file .
creates an xml document from an xml string .
creates an instance of { @link open } .
creates a user defined user defined by the given {
gets the value of the fehler property .
sets the value of the erbpacht property .
sets the value of the miete property .
reads the xml file from the given xml file .
reads the xml document from an xml document .
prints out the console to the console .
prints the console to the console .
gets the value of the sonstige property .
gets the value of the valuelist property .
sets the minimum dauer
sets the value of the zins property .
gets the value of the photo property .
read the xml document from an xml document .
prints out the object to the console
sets the metadata for metadata .
sets the value of the projects property .
sets the value of the feed property .
the main method .
creates an {
creates an {
writes the given {
creates a dom .
/ * ( non - javadoc )
{
{
set
downgrade
<p > unsupported elements from the document .
upgrade new build elements .
creates a {
prints out the console to console .
creates a {
{
/ * ( non - javadoc )
removes the objektart
<p > elements
gets the value of the immobilie property .
creates a {
gets the value of the objekt property .
gets the value of the fehlerliste property .
gets the value of the status property .
sets the value of the sonstige property .
setter for distanz - sets
gets the value of the distanzen property .
gets the value of the distanzen property .
setnx
creates a new {
return
creates a new { @link ssdb
replication
replication
write
send
reads a response from an inputstream .
return
get
get
get
get
get
returns a singleton .
returns the constructor of the specified class .
get
get
set
return
get
simple
compare two arrays
return
detect
reads properties from a file .
returns an xmlstreamreader to an xmlstreamreader .
returns a {
convert a {
convert an {
generate
encrypt
decrypt
generate
decrypt
checks if the given {
write
return
detect
sets the uri
binds a namespace uri to the given namespace .
{
get
get
checks if the given class is an interface .
parses a mime type from a mime type .
parse a list of {
sorts the given { @link mediatype } of the given { @link mediatype } .
detect
detect the validation mode .
returns true if the given string has an opening tag .
consumes the comment tokens of a line .
consumes a line .
returns the index of a comment .
return
get
get
get
get
get
parse
to
parse
return
return
parse
get
get
get
get
get
get
get
get
get
get
return
getedate
get
return
get
get
get
get
get
get
get
initializes the logging logging .
initializes the logging for the given location .
/ * ( non - javadoc )
create a qname from a namespace .
adds an iterator to the set .
/ * ( non - javadoc )
handler for inline images .
handler
super
adds an interface to the code .
filters all files in the include .
removes all files from the list of the file .
build
condition
condition
condition
condition
fill
to64
crypt
crypt
returns a collection of a jar .
returns the class loaders for the classloader .
returns all classes of the given package .
get all classes in the specified package .
find all the classes in a package .
lookup
capture the inputstream for debugging purposes .
capture system out of the system out of debugging purposes .
returns an {
returns an {
dump
return
adds an option .
adds a string option to the command line .
adds an integer option .
adds a long option .
adds a double option .
adds a boolean option .
parses the command line arguments .
open the given url .
prints the stack trace .
build
get
invoke
debug
read
read
get
compares two strings .
return
get the sun security action .
convert
read
<p > creates a new instance . < / p >
creates a new instance of the specified class .
gets the singleton instance of { .
detects the codepage in - codepage .
get
compares two dates .
caculator
set
generate
add
scans the classpath
accepts the given file .
encode
convert a {
decode
wait
/ *
--------------------------------------------------------------------------------------------
invoke
invokes the given method with the specified parameters .
get
get
calculate
deletes the specified file .
copies a file to a directory .
copies all files from a file .
check
process ignore properties .
----------------------------------------------------------------------------------------------------------------------
this method annotation .
get
creates a mix in annotation .
returns the {
return
set
prepare
/ *
find the matching method in the target class .
{
returns the type difference of a type difference .
converts an unsigned string to an unsigned string .
return
get
serializes an object to a byte array .
deserialize an object from a byte array .
prints a stack trace to the given stack trace .
reflect
/ *
return
encrypt
returns a list of child elements by tag name .
return a list of child by tag name .
find a child element by tag name .
returns the child element value by tag by tag name .
get all child elements of the given element .
returns the text value of the given element .
returns true if the node name matches the desired node .
returns true if the given node name matches the node name .
returns true if the given node name matches the desired names .
render the header of the header .
render this table .
remove
appends the given string to the string .
to
converts an object to a string .
return
return
list
get
set the size of a string .
to
adds a parameter to the request .
add
return
get
/ * ( non - javadoc )
add an entry to the monitoring .
checks if the monitoring thread is alive .
check
returns the mime type of a file .
list
get
read
return
read
read
cut
reads the contents of an inputstream .
reads the contents of a byte array .
write
write
serialize an object to a file .
resolve placeholders in - memory placeholders for the given text .
returns the package name of the package .
check that the import imports .
/ *
finds all interfaces of an interface .
checks if the interfaces of the given class segment .
checks if the super class is a super class .
checks the code fragment .
check if the annotations .
returns the documents from the win registry
calc
main
sort
enables the given {
disables the given {
get
returns the {
/ *
/ *
adds a {
{
/ * ( non - javadoc )
加密
encrypt
cut
cut
cut the given filename .
get
return
read
return
reads the contents of the specified file .
remove
formats the filesize in the given locale .
encode3to4
generate
returns the time bytes in milliseconds )
generate
return
parses the tree tree .
returns the search path of the given node .
get the list of childs .
/ * ( non - javadoc )
/ * ( non - javadoc )
mapper
codehaus
set
add
get
return
creates a list of the given namespace .
creates the object mapper for the given class .
encodes the given code .
encrypt
decrypt
add
accept
creates a gelf for the given plugin .
returns true if the text is rtl .
helper method to get the color of the specified item .
sets the values of the layout .
computes the color of the scroll item .
set
returns the index of the bounds of the given bounds .
clean the path from the path .
starts the server .
get
/ * ( non - javadoc )
run a keyword .
run a keyword
returns the keyword arguments for the given keyword .
returns the documentation documentation
main entry point .
put
add
add
stops the server .
starts the server .
configure
removes all prefixes from this handler .
convert properties from file to json .
convert properties from file to json .
converts inputstream to json .
converts properties to json string .
converts a map of properties to json .
converts a map of properties to a json string .
converts a map of properties to an object map .
convert properties } to json string .
sets the color of the color .
sets the color state list . <p >
initializes the background .
returns the radius of a circle
creates a { @link builder .
creates a builder that returns a { @link builder .
find the intermediate issuer in the given certificate .
creates a builder that returns a {
{
process the attributes .
checks if markdown files in the markdown .
replaces the variables in the given template .
process the markdown markdown options .
returns the title of the title .
adds the title to the html file .
replaces the variables in the map .
update
copy
adds the several special properties to the project .
checks if the given path is a valid path .
wraps the slider content of a view .
starts the animation up to the given duration . <p >
starts the animation down . <p >
calculates the percentage of the percentage . <p >
overlap the overlap view .
creates the launch intent for the given target package .
launch an activity
get a list of a user .
get the fact for a given relation .
sets the connect timeout .
set
serialize the given object to a map .
deserialize the response from the response .
download a file from response .
execute an http get request
builds a http client .
creates an access control entity .
update the data model .
create a full export .
get the exports for the specified export type
{
sets the host provider host .
sets the client credentials .
gets the graphqlresult from the specified file .
{
get bookmarks for a bookmark
binds the object to an object .
{
merges the given graph into the graph .
adds a {
writes the permissions to write permissions to the given graph .
rulesets
closes the client .
/ * ( non - javadoc )
adds a node to the graph .
creates a new { @link mark } .
creates a new {
{
/ * ( non - javadoc )
{
{
build
{
{
{
limit
resize the given geometry .
rotate an annotation .
sets the {
<p >
creates a font to the given style .
draw a text .
adds an image to the given file .
adds an image to the list .
sets the quality quality .
creates a new {
creates a {
creates a new {
parse
print
extracts the time unit from a string .
parse
zip
execute
execute
executes the given file .
read all actions of the specified file .
set
{
step2
{
step7
returns true if the dn supports a dn .
gen - last : drop
}
{
sorts a list of rectangle in ascending order .
convert the slide to a bookmark .
creates a new slide .
render
returns the relationships for the given slide number .
checks if the mouse event is in the range of the range .
sets the intersection of the selector with the specified ratio .
{
{
gets the sqs executor builder .
gets the sns executor builder .
/ * ( non - javadoc )
execute outbound operation
poll
/ * ( non - javadoc )
execute a outbound operation .
get
find a {
find an executable file .
find an executable file in the specified hardware .
see {
find an executable file in the given name .
load
find a file .
returns a file for the given name .
find a file in the specified directory .
gets the temp directory .
{
{
creates a new { @link log } .
create a new { @code k5 .
perform trace .
logs a message with trace log level . < / p >
record a message with trace log level .
record a message with level trace .
perform a {
trace an event with the provided message values .
perform a {
debug .
record a debug . < / p >
<p >
record a debug message with extra . < } and message information .
see {
record a debug message with the specified event values .
record a { @link message .
perform a consumer .
logs an info message with info level info level } and message .
<p >
logs an info message at info level .
see {
info .
see {
see {
perform warn .
<p >
record a warn message with level .
record a warn message with the provided .
record a debug message with extra information attached .
log a message with the provided message .
perform a warn message with the specified event values .
record a message with the specified message and message key2 .
logs an error .
record an error . < / p >
logs an error message with extra .
record an error message with level { @link event } level .
record an error message with the specified message .
record an error message with the specified message values .
record an error message with the given message .
logs a message with the provided event with the specified message values .
logs a message with the specified event level .
converts a collection of the collection of keys from a collection .
creates a collection of values from a collection of values .
create a string array of keys to an array .
creates a new array from the given array values .
extract a throwable from the array of keys .
returns an array containing the elements in the given array .
serialize an event to a json string .
serialize an event to a json string .
adds a join point and method } to the context .
start the steno wrapper for the given event .
ends a steno wrapper for the given event .
writes the end of an event .
write the value pairs to json .
write a throwable to a json json object } .
serializes the given { @link ithrowableproxy } .
creates the given { @link steno .
is
creates a logger .
gets the rate limit logger .
returns a logger with the given name .
creates a rate limit logger .
gets the rate limit logger .
sets whether the redact is enabled .
sets whether the filter is null .
creates a context from the given context .
{
check if the given marker is an array .
check if the marker is a json steno
checks if the marker is steno is steno event .
checks if the marker is a json steno event .
returns true if the marker is steno .
check if the marker is json steno
check if the marker is steno .
{
serialize an event to a json string .
build the string representation of the event name .
escape string values in the given array into an array .
creates a message for the specified event .
creates a safe context for the given event .
creates a {
returns the message
{
serialize an event to a json string .
gets the caller data trace element .
serialize an event to a json string .
serialize an event to a json string .
create a map of { @link map .
create a map of { @link steno } .
encodes the given { @link map .
encode a {
safe
encodes a list of { @link list .
encodes the given { @link object .
encode
{
{
creates a new database .
checks if the given position .
opens the application .
count the number of records in the specified table .
constructor .
registers an instance creator for the given class .
registers a type serializer
parse
save data to object in context .
refresh
parse
get
get
get column index of the column .
is
return
set
set
set
prepare
{
{
{
{
calculates the length of a string .
{
fmt
{
saves the state of the map .
recovers the specified sheet .
add shift shift attributes .
sets the serial
/ * ( non - javadoc )
returns the evaluator
re
load
load
on
load
export this file to a file .
save
submit
/ * ( non - control component .
get
read the state of the document .
{
{
returns the locale for the given component .
<p >
get
gets the pic .
gets the validation handler .
returns the { @link chart .
converts the shared formulas to an array of ptg .
returns the first supported row in the ptg .
converts a ptg formula to a ptg
converts a ptg to an array of a watch .
returns a single ptg of the given formula .
get
assemble
fixup
/ *
build
build the dynamic row for the area ptg .
returns true if the given value is a followed by the given value .
get the bg color for the given plot .
creates a color from a sp pr .
find the automatic fill color .
/ * assemble the xcolor .
get the cts from a cts .
get the xcolor from the given color .
gets the lum color from the given ctsrgbcolor color .
returns the automatic tint tint for the given table .
returns the automatic tint of the specified index .
converts an xssfcolor color to a clr color .
returns the theme index from the theme .
converts an xssfcolor color to an array of an array .
get
returns the component name from the class .
<p > attributes
match
set
get
setup
find
setup
setup
setup
initialize the charts map .
get
creates a {
get the title of the chart
sets the series style for the series .
create area chart chart .
create a bar chart .
creates a {
creates a {
setup the style for the chart .
set up the pie for the pie .
setup the bar style .
creates a {
create
returns the chart id of the chart .
initialize the anchors map .
create
<p > to collection object object .
get
re
setup
build
gather
change index number in shift map map .
changes the upper level final length of the upper level .
change
set
get
set
find
find the child rows from the shift map .
find an item in a collection .
build
checks if a row is a static .
checks if a row ref is a static row .
get full data collect name from full name .
replace
index
return
add
build
build
build
get
build
verify
build
check
init
build
build
checks if a parent command matches the specified command .
sets the parent for a child command .
checks if a command has each command in the list .
match
match
copy
build
process
process
move
create
build a map of the command attributes .
get
set
set
set
add
delete
remove ranges from shift map .
find
get each command from parts name of parts .
inserts an empty collection into the context .
deletes the specified object from context .
prepare collection data in a collection .
index
is
insert
evaluates a value
evaluate
evaluate
checks if a string is a user formula .
evaluates the value .
create
evaluates a script expression .
remove
removes a single row in the sheet .
remove
remove
load
load
{
{
assemble
get
get
get
get
set
set
set
set
set
copy
copy
copy
copy
copy
clone
create
create
match
get
returns the shape shape from the given cell
get
get
get
get
get
convert
get the row col from a uicomponent
get
returns the { @link row } from the body row .
get
get
get
get
get
{
{
{
{
get
{
{
--------------------------------------------------------------------------------------------
{
{
merges all the rows in the map
recovers all rows in the specified sheet .
returns the chart type of the given chart .
convert a string to a stroke .
create a chart data set from a chart
sets the chart data list
clear the given chart to the given chart .
associate
returns the anchor id of a chart .
extracts the chart id from the child node .
--------------------------------------------------------------------------------------------
recovers all sheet configuration .
/ * ( non - javadoc )
build
save
{
get
get
returns the cell .
restores the data context . javadoc .
returns the last collect data context .
check if the current data context is need to be restore .
start restore data context .
shift
<p > sets the first .
set
build
build
build
build
recovers the specified sheet .
/ *
reads the state of this object .
build
build the series list .
builds the chart series in the list .
get the list of the given cells .
get the ctdpt from the given index .
sets the command index map .
recovers the sheet .
get
clear
index
generate
generate
get
put
put
{
{
gets the pattern .
encode
<p >
--------------------------------------------------------------------------------------------
recover
get
get
get
get
get
get
get
get
return
calc
setup
set
get
get
get
get
returns a set of resource paths for the given path .
returns an input stream for the given path .
<p > evaluate expression
removes the prefix of a resource .
evaluate the input type .
<p > find by bean name .
<p > evaluates an expression on the specified class .
<p > evaluates an xpath expression . < / &gt ;
<p > array of short by the given separator .
rounds a double value to the specified double value .
get
get
get
returns the decimal separator by default locale .
get
sets the tie command alias list .
build
build
add
/ * ( non - javadoc )
{ @inheritdoc }
{
{
checks if a string is a command string .
matches
is
checks if a string is a widget method .
validate
parse
get
parse
get
finds the index of a pair of the string .
parse command line attributes
parse input attributes
parse
extract validation attributes .
split an attribute data string into an array of attributes .
parse
process
process select item attributes .
gather special attributes of special attributes .
parse
find
remove
get
get
get
get
removes the sheet name from the full cell name .
convert
get
pixel2width
width
height
return
parses a date entry .
check if the given string is a numeric comma - separated string .
returns {
set
compares two {
return
get
clear
delete
delete
get
{
{
{
{
refresh
validate
validate
check
validate
do
{
validates that the current page is valid .
validate
validate
/ * ( non - javadoc )
used by current
refresh
set whether the submit mode in the view .
pre
clears the template .
load
load
fill the list of the table columns in the max columns .
get
get
load
get
clear
load
load
init
load
refresh
refresh
refresh
returns the index of a tab with the given name .
loads a work sheet .
prepare
set
save
sets up the row info for each row .
load
assemble
refresh
process
create
add
refresh
sets unsaved
returns true if the view is unsaved
recovers a sheet .
parse an event from a string .
/ *
/ * ( non - javadoc )
returns {
returns a list of the given bindings .
{
/ *
adds a binding to the list .
returns a {
creates a new {
{
returns the upper bounds of this {
returns an array containing the elements of the specified array .
returns an array to an array .
find the property annotation by type .
is
is
returns the {
returns the common constructor of the given type .
compare two charsequences .
return
returns the parent of the given string .
returns a dependency for the specified type .
write
write a long to a writer .
writes a string to the writer .
send
{
{
set
adds a binary content to the request .
adds a binary content . < >
adds a bitmap to the bitmap .
adds a file descriptor .
remove a parameter with the given name .
adds a header to the request .
clears the result .
call a play .
/ * ------------------------------------------------------------
binds the service .
unbind the streaming playback .
drop the streaming playback listener .
stores image to disk
adds an image to the image .
adds an image to the image .
build the {
reads the contents of an inputstream to a string .
convert an inputstream to a string
transfers data from an inputstream to the output stream .
consumes a stream from an inputstream .
returns an {
returns an { @link inputstream for the given encoding .
checks if a bean exists .
{
/ * ( non - javadoc )
{
{
{
{
{
/ *
sends the disposition header .
/ * send
send the transfer encoding header .
send end of header
send end
sends the message } )
/ * ( non - javadoc )
sends the given byte [] .
returns the length of the part of parts in - memory .
decode
sends a {
set
sets the date and cache headers .
sets the content type header header .
closes the {
/ * ( non - javadoc )
/ * ( non - javadoc )
installs the specified version of the disk .
ensure that the working directory is not in the working directory .
gets the cache response .
creates an {
resets the bitmap to the specified width and height .
creates a new instance of { @link websockify .
validates the given keystore .
replaces the scale type with the scale type .
sets the temporary scale type .
{
stop the location
retrieve a pending intent .
disconnects the specified connection ---
binds this service .
{
notify
{
on accept data .
{
waits for a loader to become available .
adds a target image to this loader .
remove a target from this method .
/ *
set
sets the text of a textview .
sets the text of the textview .
hides the soft input .
shows the soft input input .
toggles the soft input of the window .
returns the width of the { @link display } .
searches for a view by id .
finds a view by id .
/ * ( non - javadoc )
save
sets the limit .
resets the stream .
skips the specified number of bytes .
clears the cache for the given url
populates an image with the given url .
cancels the image loading .
creates a { @link consumer .
sets the result image .
sets the loading image .
starts the image loader .
mem
get
releases the buffer .
adds the http request to the url
make a { @link urlconnection } .
adds a parameter to the request .
/ * connect to the server .
get
check if the given activity is an intent .
generates a random multipart boundary .
returns a string representation of the given constant
returns a string representation of the given constant
checks if the given result is enabled .
sets the vector of a device .
computes the vector of two vectors .
set a symmetric decomposition of a general matrix
returns the upper triangular decomposition of a matrix
copies data between two devices to a device .
this method to get the vector of a vector from a device .
creates a {
creates a submatrix from a submatrix .
<pre > description : cublas
<pre > description : cublas
<pre > description : cublas
<pre > description : cublas
<pre > compute dot product .
<pre > description : solution = n - 1 ]
<pre > description : solution = n - 1 ]
<pre > description : solution = n - 1 ]
<pre > description : solution = n - 1 ]
<pre > description : solution = n - 1 ]
<pre > <pre > t< / pre >
<pre > description of a * b
<pre > description of a * b
<pre > description of a * b
<pre > description of a * b
<pre > description of a * b
<pre > description of a * b
<pre > description of a * b
<pre > description of a * b
<pre > description of a * b
<pre > description of a * b
<pre > description of a * b
<pre > solution of a * x = b
<pre > solution of a * x = b
<pre > solution of a * x = b
<pre > solution of a * x = b
<pre > solution of a * x = b
<pre > solution of a * x = b
<pre > description of a sparse matrix
<pre > description of a sparse matrix
<pre > description of a sparse matrix
<pre > description of a sparse matrix
<pre > solution of a * x = incx ] < = y ] < / pre >
<pre > solution of a * x = incx ] < = y ] < / pre >
<pre > description : solution = x1 ] = x1
<pre > description : solution = x1 ] = x1
<pre > description : this matrix
throw an exception is enabled .
alloc
set a vector of a complex vector .
calculates the vector of a complex vector .
set the given complex matrix from a complex matrix .
returns the matrix of a complex matrix
compute the cublas vector for a complex vector .
calculates the vector of a complex vector .
creates a set of a complex matrix
returns the cublas matrix of the matrix
2 - d - place .
/ * cublas
/ * cublas
/ * ( non - zero - cublas ) .
<pre >
<pre >
compute the cublas of two integers
/ * 2 - 4 - 1 .
/ * 2 - d
2 - d distance to - sdot interpolation .
/ * ( non - n ) values .
/ * 2 - 4 - place .
sets the hostname from a hostname
/ * x - alpha )
/ * 2 - d
/ * x - axis .
/ * 2 - d
/ * 2 - d
/ * alpha * alpha * x ) of a complex number .
this function to make a complex memory
/ *
/ * cublas
/ * x - alpha )
/ * 2 - d
/ * 2 - d
compute the complex number of complex numbers .
compute the complex number of complex numbers .
<pre >
<pre >
compute the cublas of two integers
/ * ( non - n ) values .
2 - d * alpha + alpha * alpha * y * x * y * y
compute a complex number of complex numbers .
compute a complex number of complex numbers .
/ * alpha - alpha ) of a complex * alpha * x .
/ * zdscal * x = alpha * x * alpha * x .
compute the cublas of 2 .
this routine to perform a complex host
/ * 2 - 1 to a
/ * cublas ( 4 - zdrot
<pre >
<pre >
compute the cublas of two vectors .
/ *
/ *
<p > computes the upper triangular product of a sparse matrix . < / p >
<p >
/ *
/ *
/ *
/ *
/ *
/ *
/ *
/ *
/ *
/ *
/ * x = a * x = x ] ) * x * x
/ * x = a * x = x ] ) * x * x
/ * x = a * x = x ] ) * x * x
/ *
/ *
/ *
/ *
/ * y - alpha * y )
/ * cublas a sparse matrix .
/ *
/ *
/ * cublas a sparse matrix
cublas a sparse matrix
<p > n > t< / sup >
<p > <br > t< / sup >
/ * x = a * x = x ] ) * x * x
/ *
/ *
/ * x = a * x = x ] ) * x * x
/ *
/ *
<p > computes the following place : <br > <br > <br > <br > <br > t< >
<p > computes the following place : <br > <br > <br > <br > <br > t< >
/ *
/ *
/ *
/ *
<p > cublas a sparse values :
<p > cublas the following are the same type of a - 1 - place .
<p >
<p > <br > t< / sup >
/ *
/ *
<p > <br > t< / sup >
<p > <br > t< / sup >
<p > <br > t< / sup >
<p > c > t< / sup >
<p >
<p > <br > t< / sup >
<p > <br > t< / sup >
/ *
/ *
compute the cublas of two vectors .
2 - d quadratic to a scalar matrix .
/ * 2 - d
compute the cublas distance between two points .
compute the cublas of 2 .
/ * 2 - place of 4 - 4 - 4 - 4 - 1 .
sets the hostname from a hostname
/ * dscal * x = alpha * x * alpha * x .
/ * 2 - d
<pre >
<pre >
/ *
<p > sets of a dense matrix .
/ *
/ *
/ *
/ *
/ * x = a * x = x ] ) * x * x
/ * x = a * x = x ] ) * x * x
/ *
/ *
/ *
/ *
<p > cublas - place for a dense matrices .
<p >
/ * cublas - dspmv - dspmv - dspmv - dspmv - dspmv - dspmv - dspmv - dspmv - dspmv - dspmv - dspmv - dspmv - dspmv - dspmv - dspmv - dspmv - dspmv - dspmv - dspmv
<p > t< / sup >
/ *
<p > t< / sup >
<p > computes the following order of a sparse matrix : <br > <br > <br > <br > <br > <br > <br > t< / sup > * x and b is a * x + beta * beta .
<p > t< / sup >
<p >
<p > c > c > t< / sup >
<p > <br > t< / sup >
<p > <br > t< / sup >
/ *
/ *
/ *
/ *
<p >
<p > <br > t< / sup >
/ *
<p > sets of a sparse matrix . < / p >
<p > sets of a sparse matrix . < / p >
<p >
<p > t< / sup >
/ * x = a * x = x ] ) * x * x
<p > y > t< / sup >
stem
returns the list of the given celms
adds a lexeme
add
write
/ * ( non - null values )
is
tokenize
tokenize
tokenize
prints the description of the current user .
/ *
verify that the attribute is matching the kamols
kamols
/ *
adds an attribute to the avs .
removes the kamols markup from a tag .
creates a {
prolog
prolog
word
get a list of a list .
get query string representation .
process the metric data .
parse
process the data point and signal } .
returns the connection config .
{
get the metric time series .
parse the xml document } type of xml documents .
creates a { @link reader .
creates a { @link reader .
parse the xml document } type of xml documents .
creates a { @link reader .
creates a { @link reader .
convert the passed column name of the passed column .
get the value of the passed row as a string .
get all columns of the passed column set
get all columns of the passed column
convert the passed column set to a icommonslist
add all the elements in the passed column set to the passed column set .
get the { @link column as a { @link column set .
get all keys of the specified column set .
get all keys in the passed column set .
find all the elements in the passed column set to the target column set .
read the passed column with the passed column set .
check if the passed column is a key column
create a short name for the passed string value .
create a long name for the passed string value .
create a simple { @link string .
create a new { @link column }
create a new column with the specified column and column .
create a new key for the passed column .
set
add a column to the specified index .
creates a new { @link genericode .
creates a new { @link writer } .
creates a new { @link writer } .
creates a new { @link genericode .
creates a new { @link writer } .
creates a new { @link writer } .
creates a validator view of type { @link validator } .
creates a validator that allows to validate } .
creates an instance of { @link validator } .
creates a validator view of type { @link validator } .
creates a validator that allows to validate } .
creates an instance of { @link validator } .
{
send
unset the context
sets the context context .
set
gets the log level .
stores the {
get
set
get
sets the maximum log size .
send
send
return
logs a message .
prepend the metadata to the file .
appends the stack metadata to the jsonobject .
convert a json object to a json object
appends the full stack trace to the stack trace .
capture the json object to the file .
init
初始化
log
sets user identity
log a file .
get
starts the {
sets the size of the specified region .
size
dumps the specified region into the local region .
gets the locators .
/ * ( non - locators
returns the secured token for the given username .
construct
get the gem
reads a snapshot record .
/ * ( non - javadoc )
write
dumps the contents of a printwriter .
/ * ( non - value since the given value is the same .
creates a collection of user profile details .
converts the given file to a chart .
calc
returns true if the given distributedregionmxbean is a replicated region .
get a region for the given region .
get a pool for the given server .
get the pool for the given jmx locator .
returns the region for the given region .
list
returns the client cache .
return
get the region name for the given region .
get a member by name .
creates a new {
get all gateway receivers for the given jmx object .
get all the list of hosts in the jmx host .
looks up a network host for the given host .
find
is
same as {
flattens a collection of objects to a collection .
collects the results of a {
execute the given query using the given query parameters .
bridge
delete
removes the given event .
updates the event
add an entry in the gem .
removes the region for the given region
returns the value of a region
/ *
{
returns an array of {
/ * ( non - javadoc )
read the content of a file .
find a user profile by its name .
{
return
{
get the hosts of the jmx jmx host
checks if a member status of a member .
{
{
returns the app name of an app
construct the security truststore .
creates a pdx
read
clear
creates a region
returns the region for the specified region .
returns the region for the given region .
registers a {
registers a listener
registers a {
construct
{
export all regions from the cache .
export the specified region on the region .
exports a region to a collection
returns the security password .
returns the security user name .
/ *
return
returns the number of memory used by this {
add
closes the value .
returns the value of the specified stat .
update
closes this resource .
converts all files to cvs files .
entry point of the csv file .
reconnect
get jmx
get the jmx jmx host .
stop all members of a host .
shut
stops the bean locator .
shut
converts the jmx system to a distribute system
shut down the given redundancy zone .
store
to
stores a list of a list of keys .
read
{
import
imports the specified region into the region
import the given a region
check if the remote locators matches the remote locators .
parses the locator host name .
parses the locator port from the port .
/ * ( non - javadoc )
/ *
get
/ * ( non - 1 ) the values of the specified type .
shrink
{
exports the specified region to the specified region .
{
export
save
clear
<p > search for the specified by name and region . < / p >
{
imports all regions from the cache .
imports a region into the region .
starts the cluster .
shuts down the debugger .
waits for the member is running member .
waits for the member is running .
save search results into a collection of lucene results
save a collection of lucene results to a collection .
{
build
query
query
closes the connection
return
returns {
serializes an object to a byte array .
deserialize
creates an instance of the given class .
checks if the table id is a valid table id .
checks if the given {
check if the given type is a super type .
get
brew
emit
emit
emit
emits the insert table .
emits the update update .
update
delete
delete
generate the map cursor to the object .
emit
returns an {
check
return
capitalize
returns {
adds the table to the builder .
reads the temperature temperature temperature file
returns the value of the given type .
/ *
prints a message to the console .
prints a formatted message .
returns the list of the icon .
returns all icons of the icon .
{
adds a data point .
returns the y - coordinate of a point .
create the sld
creates the background decoration .
computes the value of the given point .
copy the copy of this matrix .
sets the array of the matrix .
norm
prints the matrix
power
returns the root of the specified bigdecimal .
returns a { @link bigdecimal } x .
returns a { @code x } x > } .
returns a string representation of { @code x .
/ *
get the value to bigdecimal .
arctan
returns a bigdecimal .
prints out out out out pi
generate a timestamp for the specified time .
sets the limits of the box .
put a value to the range .
prints the matrix
add a new complex numbers .
subtracts two complex numbers from this complex complex complex number .
multiply two complex complex number .
divide this complex number of another complex complex number .
copy the copy of this matrix .
sets the values of the matrix .
norm
prints the matrix to the standard output stream .
{
{
{
copy a deep copy of this matrix .
{
sets the values of the array .
{
{
return the transpose of this matrix .
add a matrix to this matrix .
subtract values from this matrix .
multiply this matrix by another matrix .
multiply this matrix by another matrix .
{
{
prints the matrix to the given printwriter .
{
{
sets the resource .
adds a data point to the data point .
validate the data points .
{
clears this map .
convert an sld to an xml xml document .
parses a { from a sld to sld to an sld
/ *
/ *
/ *
{
get the total area between two intervals .
create an area of the area .
sets the values of this matrix .
{
fires a save event on all registered handlers in the handler manager .
fires a sld event on all registered handlers in the handler manager .
return the inverse decomposition
returns the determinant of the matrix .
norm
{
{
{
solve a * x = b
prints the values to the given printwriter .
decompose the decomposition of the matrix .
calculate the forward elimination of a pivot .
clones the forward substitution of two rows .
generate the back the substitution of a column .
computes the upper triangular values of a matrix .
convert a square matrix to a square matrix .
return
{
{
{
{
{
check if an interval is an interval .
add a new float
multiply two integers .
raise
/ * ( non - javadoc )
{
/ * ( non - javadoc )
converts a long array to a long bit array .
/ *
prints the data as a printwriter to a printwriter .
validates that a float biased is valid .
validates that a floating point is a valid exponent .
validates that the given double is valid .
validates that a double is a valid unbiased exponent .
creates a sld gwt gwt service .
return
get the next polar .
returns the next ratio )
returns an array of sieve .
returns the factors of the given pn .
{
{
{
sets the java .
set
set the default configuration .
gets the converter for the given class .
return the {
set the given fxml for the specified fxml class .
checks if the target class is valid .
/ * ( non - javadoc )
adds a reverse geocode key
set the reverse geocode geocode to the server
reverse
returns the host port pair of the given service
get the attribute definition
/ * ( non - javadoc )
process variables to process .
returns true if an event is pertinent .
poll and process events .
sanitize the given tag .
/ * ( non - javadoc )
set the request key to be used for the server .
set the request address .
set the value of the request
convert a {
convert a service svc } to a service instance
query for the list of services in the service .
query by name of instances
{
get
returns a list of the request .
/ * ( non - javadoc )
{
/ * ( non - version1 objects .
/ * ( logged in by logged in collaboration .
returns a list of the collaboration .
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
get
creates a user .
updates a user .
activates the user .
activates a user .
increment a user to the user .
changes the password for logged in user .
deletes a user .
gets the logged in user information .
get
get
gets a user by id .
gets all users .
gets all users by job view .
gets all users by role .
get
get
get
get
checks if the given role is an access to the role .
does
/ * ( non - javadoc )
get
get
{
get
get the field value as a double .
get the field value as long .
get
get method .
get
get method value of this field .
get method .
get method .
set .
set
get
{
{
{
populate
{
get
does
{
set a step property .
get the value of the given name .
/ * ( non - javadoc )
{
creates a flow step .
updates the flow step .
get a flow step by id .
get a flow
get job views by step name .
get
get the {
/ * get
gets the {
gets the { @link job
get the {
delete flow step step .
delete flow step .
search
<p > search for a search request .
<p > search for hits hits .
get
search
search
populates the table fields for the table .
does
{
does
{
get the forms for the table .
returns the descendants for the given form in the descendants
returns the ancestor for the given form .
returns the form fields for this form .
return
returns the latitude from a fluid text .
gets the latitude from elastic search search text .
get
returns the given string to a double .
converts a string to a goe .
decode
encode
decode
encode
setflatfieldonjsonobj
return
/ * ( non - javadoc )
region closed implementation
adds an expected message to the page
returns a list of echo messages from the return value .
checks if a message contain all messages .
uncompress
gets the personal inventory items .
removes a form from personal } .
{
create
create a table record .
updates the form container .
executes custom action
execute custom action
delete
get the {
get
get
get
form
sets the lock .
unlock
form
form
execute a lock .
get
/ * ( non - javadoc )
get
map
map
convert
/ * ( non - javadoc )
creates a {
updates the form definition .
returns a form definition by id .
returns a form definition by } name .
gets all the {
get
deletes a {
/ * ( non - javadoc )
get
get
invoke
get
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
get
returns the value of the given properties
returns the value of the given properties
return
{
{
returns the list of identities from identities .
{
execute
get
get descendants
returns a list of table forms .
gets the form fields for the form .
populate
returns the field values from the given form the form .
close
{
convert this jsonmapping to a json object .
returns the value of long from json .
get
get
creates a flow step step rule } .
create a new {
create a flow step rule rule .
update the flow step rule rule .
updates the flow step exit rule .
updates the flow step rule rule .
compile a flow step rule rule .
/ * ( non - javadoc )
compile
compile a flow step rule rule .
compile a flow step entry
create a new { @link flow } .
creates a new { @link flow } .
delete flow step step rule } .
create a flow step exit } .
create a { @link flow } .
/ *
login
sends a login token .
initialize the encrypted session .
issue
/ * ( non - javadoc )
/ * ( non - javadoc )
combine
creates a user query .
updates the user query .
deletes a user query .
get a user query by id
get all user queries
execute a user query .
execute a user query .
get
get
get
get
get
map
create a role
updates the role .
deletes a role .
gets the role by id .
returns all roles
{
execute a command .
execute a command .
{
{
{
get
get
get
get
get
get
get
get
get
get
set
set
return
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
sends a {
get the service ticket as hex string .
convert
{
create
create
create
create
create
creates a field table .
update
update
update
update
update
update
update
get
get
gets the {
delete
force
returns the meta data for the table field
{
create
create
create
update
update
update
updates the field value for the field .
get
delete
force
merge
sets the additional properties for an existing form .
get
/ * ( non - javadoc )
/ * ( non - javadoc )
add
creates a flow .
updates the flow .
get flow by id .
get flow by name .
delete a flow .
delete flow .
update
get
get
get all the global field values .
returns the form ancestor ancestor for the given form .
/ * ( non - javadoc )
returns the form of form {
gets the forms table forms .
get
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a {
updates a user notification .
*************************************************************************
deletes a user notification .
creates a user notification by id .
get all read in user ticket .
get
returns a list of user notification version1 and date .
generate
hmac
generatelocalhmac
generatelocalhmacforreqtoken
poison
decrypt
decrypt
encrypt
calculates the sha256 value sha256
send
{
init
get the uri to use for the given uri .
set
get the exception message verbose .
creates an admin user .
/ * ( non - javadoc )
{
get
get
gets the form fields for the form .
/ * ( non - javadoc )
execute
get
get
post
post
post
delete
delete
post
put
put
execute
execute
execute string .
execute
add params to the request parameter to the request .
gets the json response handler .
encode
is
is
returns the client from the server
returns the path to fluid
closes the {
closes the connection .
get
closes the statement .
close
get
creates a flow item .
returns the {
sends a flow item to the flow .
sends a form to flow
/ *
handle
send
sends a message to the server .
closes the session .
{
gets the form fields ) for the given form .
/ * ( non - javadoc )
get a list of stored in the server .
returns the { @link instance .
{
get
is
returns true if the given text is many many characters .
{
{
request
apply a license to this license .
/ * ( non - javadoc )
create
create
create
create
create
create
create
create
create
update
update
update
update
update
update
update
update
update
create
get
get
delete
force
convert
convert
returns a configuration by key
get all configuration configurations
/ * ( non - javadoc )
create
returns the list of providers from the identities .
creates a new attachment .
returns an attachment by id .
returns all attachments by form .
delete an attachment
force an attachment .
returns true if the given restrictions } has the same value .
replace
/ * ( non - javadoc )
parses the jar file .
set
parse an {
returns true if the node is an xsd schema .
resolves the concrete concrete elements .
replaces the concrete concrete elements in the unsolved .
stores the unsolved reference
adds a schema to the schema
check if the xsd is valid .
check if the xsd is an xsd .
returns {
returns a list of all restrictions .
updates the existing restriction of the given restriction .
updates the existing restriction of an existing restriction .
returns true if the given {
check if the form is a valid .
/ * ( non - javadoc )
parses the given file .
returns the schema node node into a node .
check if the form is an xsd .
checks if the element is an xsd .
/ * ( non - javadoc )
parse a skeleton element .
convert a map of attributes to a map .
replace
parse the raw content of a node .
returns {
convert an enum value to an enum .
max
validate
validate
validate
validate
validate
returns the default value of the form {
returns the default value of the given element .
returns the default value of the given element .
creates a new {
/ * ( non - javadoc )
{
creates a new cli interface .
creates a cli instance of the given options .
parses a string representation of arguments .
parses the given string into a cli arguments .
{
get the event date from the given dates .
adds a {
add a header view .
remove the footer from the footer .
sets the start point .
sets the end point .
gets the value of the module )
gets the value of the module .
calculate the gradient between two noise .
calculates the gradient between two points .
convert an int value .
noise3d function .
gets the value of the specified angle in the given angle .
get the value for a particular lon
returns the cubic distance between two points .
returns the value
recalculate the scale bias .
sets the bounds of the current .
processes all plugins .
process an event .
get the list of the instance ids .
returns the account id from the given { @link cloud } .
read response elements from response elements .
read response elements from response elements .
{
build an instance .
returns the event serializer for the given input stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
creates a file .
{
deletes the root folder .
{
/ * ( non - javadoc )
returns the predicate predicate for the predicate .
returns the {
creates a new { @link extension } .
/ * ( non - javadoc )
/ * ( non - javadoc )
get system properties
restores the properties of properties .
returns a stream of jar } s jar from the given { @link inputstream } .
returns the dependencies of the given class .
creates a {
creates a {
creates a {
creates a {
/ *
adds an object to the collection .
creates a new soft object .
set
get
get
{
process the queue
{
loads the named class by its name .
returns the parameterized type .
returns the type variable of the given type .
peek
put
returns the class for the given class .
peek
put
get
/ *
{
sets the value of the given string .
replace
/ * ( non - javadoc )
set
/ *
task
/ *
/ *
stops the task .
put a job to the queue .
returns the next job .
put a job into the job .
convert a string to a blocking mode .
/ *
creates a weak object .
list all members in the given url .
list all the files in the given directory .
returns the url of the given url .
set up the readers .
adds a reader to the catalog .
/ * copy
create a catalog .
/ * ( non - catalog catalogs )
/ *
parse the catalog file ) catalog .
parse the catalog from the given url .
{
parse the catalog file .
/ * ( non - javadoc .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
/ * ( non - value of the given uri .
/ * subordinate catalogs .
creates an absolute catalog ) for the given sysid .
return
encoded
adds a catalog entry .
create a socket .
set the text to be encoded string .
create
{
calls {
add
/ *
adds an object to the list .
create a new socket .
/ * ( non - javadoc )
{
{
checks if a file .
returns the object at the given index .
{
adds an object to the list .
{
remove all the objects in the queue .
adds an entry type .
returns the entry type for the given name .
get the number of entries in the catalog .
gets the value of the argument .
inserts the specified object into this list .
/ *
sets the value as text .
sets the context class loader .
normalize
swaps the elements of the specified array in the specified queue .
removes a node at the specified index .
/ * ------------------------------------------------------------
check that the tree is in the queue ) .
/ *
preload
get the urlstreamhandler for the given protocol .
check if the system property pkgs is set .
returns the value of the context .
returns the implementation of {
closes an array of streams .
creates a new counter from the given counter .
creates a new directional counter from the given counter .
returns true if the extension is in the extension namespace .
{
/ * -------------------------------------------------
{
/ *
lookup
returns the value for the given name .
rebind
create
create
/ * ( non - javadoc )
subst
split a string array of strings .
joins the given byte array into a string .
append
trim
trim
returns the value of the value .
checks if the given directory ends with the given name .
/ *
{
{
{
{
flushes all buffers
/ * ( non - javadoc )
sets the resolution for the resolution .
{
returns an iterator over all children of the given element .
returns the unique child element of the given element .
get an optional child child child of the given its name .
get
returns the unique child content of the given element .
returns the child child content of the given element .
{
set
sets the blocking mode .
set
execute
{
schedules a timer task to the queue .
put a job to the heap .
sets the value as text .
adds an entry to the catalog .
{
/ * ( non - javadoc )
{
resolves an external system for the given system id .
resolves an external public public public public
/ *
appends a vector to the vector .
{
/ * ( non - javadoc )
{
resolve all local system entries in the given system id .
resolve all subordinate catalogs .
sets the catalog parser for the catalog .
returns the catalog parser for the given namespace .
reads the catalog from the given catalog .
read the catalog from an input stream .
{
{
receive notification of the end of an element .
receive notification of a processing instruction .
receive notification of the start of a prefix mapping .
/ * ( non - javadoc )
blocks until all users )
waits for the specified lock .
opens the file .
{
get
cas
delete a node with the given node .
/ *
creates a snapshot of this snapshot .
/ *
unlink the specified index .
create
appends a collection . < / p >
returns the class name of the class .
returns the string representation of the string .
returns the default property map .
add a property listener .
adds the given listeners to the list of listeners .
load the properties file . < >
load properties
loads the properties from the given reader .
loads the properties from the properties file .
sets the value of a system property .
removes a property by name .
returns the value of the specified in the specified property .
returns an iterator over the { @link iterator .
gets the property group .
get the compatible constructor of the given type .
copy
get
cast
to
initializes the jndi
updates the jndi cache with the given name .
{
{
{
{
{
add a property listeners .
{
fires a property added event .
fires a property removed event .
fires a property changed event .
fires a property changed event .
returns the name of the property name .
load
load the properties file
loads a class from the classpath .
{
returns an array of the given base property .
get a property group by its name .
/ *
/ * ( non - javadoc )
returns true if the entity is resolved .
load
load
return
/ *
load
set
normalizes a public id .
normalize
decodeurn
replace
starts the current
stops the time .
make
{
generate
generate
creates the list to the list .
set
{
reads the catalog from the given catalog .
read the next token .
returns an iterator that iterates over the elements in the given iterator .
initialize the system properties
/ * ( non - javadoc )
add
set
{
{
{
{
depth - first search of the given visitor .
searches the first search in the tree .
searches for the first vertex in this vertex .
depth - first search tree .
find
{
{
receive notification of the end of an end element .
normalize a string .
parses the xml element .
parse the xml document from an xml document .
parse the xml document . xml .
creates a {
parse an xml qname from an element .
returns the value of an attribute of an attribute .
get
copies all attributes from the given { @link element } .
returns true if the given node has a child elements .
returns an iterator over all child elements of the given node .
returns the text content of the given node .
returns an iterator over all child elements of the given node .
returns the parent element of the given node .
/ * ( non - javadoc )
read the catalog from an xml document .
{
returns the host address of the host .
/ * ( non - javadoc )
returns the catalog files for the classpath .
{
set
displays a class information of a class .
get
returns the description of an object .
describe
describe
strips the package name from the given classname .
get the package
force
returns the primitive wrapper for the given class .
get
get all unique interfaces of a class .
return
instantiate a class .
load
load
converts an array of classes to java classes .
returns the getter for the given attribute .
get the setter method setter for an attribute .
convert
gets the value of a system property .
sets the value as text .
returns the value of a property .
checks if the given directory starts with the given name .
remove the {
{
adds an object to the set .
get the urllister of the specified protocol
accept
/ *
/ *
{
{
{
/ * ------------------------------------------------------------
adds a listener to the list .
removes a property listener .
binds the field .
binds a method to the named property .
read the catalog from the catalog .
get a new instance of the specified class .
get the class loader for the specified class loader .
null
finds an editor by its name .
gets the editor .
gets the editor .
register an editor with the given type .
converts a string value .
map
map
creates a new {
get the context class loader .
isade
schedule the given time in the queue .
/ * ( non - javadoc )
creates a context
<p >
lookup a class by name .
<p > for a class name .
lookup a class by its name .
creates a new link ref
creates a link ref .
removes a link ref
removes a link ref
/ *
appends the class info for the given class .
{
read the catalog from the catalog .
/ *
check if the relative resources are relative to the resource .
query the catalog files
{
returns true if the property is public .
returns true if the catalog is static .
get the private catalog .
gets the catalog .
returns true if the system property is set .
returns the class name of the catalog
/ *
resolve the specified href .
creates an absolute uri for the given uri .
resolves a class
returns the property descriptor for the given bean type .
invoke the setter for the given value .
{
returns the prefix of the given element .
returns the local name of an element .
return
returns the prefix of the given element .
sets the value as text .
returns a list containing all of the elements in the enumeration .
get
loads the properties from the given properties file .
reads the properties from the properties file .
adds a new edge } .
adds an outgoing edge to the graph .
adds an incoming edge to the graph .
{
{
{
{
/ * ( non - null cost .
jar
jar
jar
jar
extracts the nested jar file from a jar file .
returns {
fires an event .
transition
sets the trace tag .
process the task queue .
installs the jvm type provider .
/ *
/ * internal methods
remove all files in the parent folder .
dispatches the given action to the fx thread .
returns an action stream for the given action type .
creates the fxml path for the given view type .
updates all the views .
updates the views of the given predicate .
---------------
/ * ( non - javadoc )
<p > log . < / p >
/ *
log
/ * ( non - javadoc )
<p > debug . < / p >
/ *
debug
/ * ( non - javadoc )
<p > info . < / p >
<p > info / p >
<p > info . < / p >
/ * ( non - javadoc )
log
log
log
/ * ( non - javadoc )
log
<p > error / p >
log
/ * ( non - javadoc )
returns a stream of {
returns a stream of {
convert a collection of rights to a stream .
convert a collection of {
returns a collection of rights to a stream
convert a collection of rights to a stream .
opens the given dsn .
opens the given dsn .
bootstrap the given dsn .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - generated command .
returns the first search by name of the given name and index .
main
main method .
returns the list of the words in the directory .
load
tail
adds the last modified time file .
returns true if this file is change .
reload
{
{
get
reads characters
/ * to a char array .
convert a code point to ascii .
main
return
return
returns the variance of the word
get
prints a list of chunks .
search the index of the specified index .
search the index of the specified node .
returns the index of two nodes .
max
main method .
creates a {
creates a new { @link mode } with the specified api key and port factory .
creates a {
creates a {
returns a map of superclass arguments for the command line .
{
check
{
{
calls {
inform
get datasource from a datasource } .
returns a { @link datasource .
create
creates an {
generate
generate
creates a collection from the given type .
generate
creates a set of {
creates a {
creates a queue from the given the given values } .
creates a {
creates a new deque from the given {
creates a sorted set of the given type .
creates a sorted set of {
creates a sorted map from the given { @link class type .
map
gets an anonymous value of the given type .
creates a list of tokens } to a list .
generates a fresh value for the given method .
return
return
return
creates a {
set
creates a set of the given objects of objects .
map
map
creates a {
creates an {
creates a {
creates a {
checks that the given { @code type } is { @code parameterized } .
checks that the given { @code type } is { @code parameterized } .
tries to try to try to try to try to try to try to try to try to try to try to try to try to call {
connect to a jdbc template using the specified url and password .
runs the given sql in the given database .
query
/ * ( non - javadoc )
filter
add
<p > upgrade .
{
restores the database from database )
returns the blob or null or null if not null .
set
dump
adds a constructor to the query .
adds a constructor to the query .
adds a constructor to the query .
adds a constructor to the query .
escape the csv .
<p > csv .
parses the values of a csv row .
reads the next value from the reader .
returns a csv string to a map
map
join
joins the given list of strings .
renders the order of the order .
read the database model from the specified index .
write
inspect
returns the base dao type mirror .
get
get
returns the first letter of the first letter .
import
import
parses and insert row .
{
/ * ( non - javadoc )
upgrade
{
{
restore all tables from a csv file
read the index file .
writes the index to the index .
add
{
creates a query for the given entity .
sets a parameter to the query .
sets a parameter .
sets a parameter to the query .
sets the parameter .
sets the parameters of the query .
render
delete a table with the given id
returns the {
inserts an object into the database .
insert
save
update
execute a query with the specified parameters
execute a query
{
convert the given cursor of the cursor .
set the query builder .
adds an item to the where clause
add
return
add a collection of items to the current collection to the collection .
add an expression to the query .
adds the specified collection to the collection
add a not in the current array
create a subquery with the given predicate .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the next active stack .
return an empty intention stack .
adds a plan to the plan .
selects a plan for the given policy .
selects a plan at the given index .
sets the plan variables for the given agent .
get the result at the given index
returns the parents of the parents .
returns the children of this node .
grow
creates a logger .
step
set goals
adds a goal to the goal .
pause the user input .
initializes the intention selection pools .
initialize the intention selection threads .
start intention
shuts down the intention selection threads .
load extensions
/ *
/ * ( non - javadoc )
parses the command line arguments .
resets all the jill .
load
process
complete
creates the agents in the catalog .
gets the goals of an agent
get the plans from goals
get the posts from the plan info
load
loads an extension extension from the classpath .
returns true if both name and obj2 .
returns the usage of the plan .
parses the command line arguments .
parses an argument with the given name .
load
for testing
evaluate an agent .
{
returns the aobject with the given name .
push
removes the object from the stack .
grows the array .
/ * ( non - javadoc )
{
returns the value at the given idx
adds an object to the queue .
removes the object from the queue .
increases the array .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
get
returns true if two {
entry point to the console .
returns the name of the field at the given index .
to
post
send
send
start
returns the goals of the goals .
sets goals
creates a belief set .
adds a belief
evaluate the query against the given query
{
/ * ( non - javadoc )
get
returns the index of the field in this field .
/ * ( non - javadoc )
parses the command line arguments .
/ * ( non - javadoc )
register
builds the name of the name of the middle .
parses the command line arguments .
run the agent
checks if the agent is valid .
removes all active agents .
checks if the agent is in the plan .
manage
removes all inactive agents .
adds all active agents .
waits for an external message .
shuts down the message .
sets the agent idle agent )
move the specified by pin .
main method .
init
starts the agent .
waits for all idle pools are idle .
closes all the agents .
returns true if any of the idle .
returns true if the pools are finished .
set the idle
return
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / div . g .
sets the expression .
joins the given attribute into a path .
returns a join the given properties of properties .
find or create a join for the given property .
/ * ( non - javadoc )
returns {
/ * ( non - javadoc )
returns an {
get
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the request path from the request path .
returns the {
returns a new { @link content } for the specified { @link string .
return
get parameter value .
parses the parameters of the given expression .
/ * ( non - javadoc )
get the target file .
write an artifact to the generated artifact .
/ * ( non - javadoc )
/ * annotations for the request annotations .
load the implementation class .
load
loads the instance scope .
loads the instance type .
get the instance of the instance .
returns the declared constructor of the given class .
scan
initialize the static fields .
builds the string representation of the given config descriptor .
returns the annotation of the given class .
returns true if the given class has an annotation of the annotation .
returns the annotation of the given method .
get
gets the interceptor class .
returns the class
creates a new {
returns the handler for the given type .
registers the given {
{
sets the value of the given property .
return
gets the dependency value for the given host .
returns true if the given host is required .
persist
get an observable from the given {
sets the default link .
sets the default link template .
executes the given request and returns the result .
executes the request .
/ *
/ * ------------------------------------------------------------
/ * links from the response .
/ * ------------------------------------------------------------
handle body links .
parses the link to a link object .
get the value from the key .
handle capabilities .
returns true if the method is allowed .
{
get full message .
/ * ( non - javadoc )
/ * ( non - javadoc )
register
register a scope factory .
registers an instance factory .
register the instance processor processors
register
/ * ( non - javadoc )
starts the managed instance
destroys all the managed by this scope .
/ * ( non - javadoc )
<p > .
register
----------------------------------------------------------------------------------------------------------------------
adds an argument to the list .
{
serializes this object to xml file .
serializes this object .
serializes this object to xml .
initialize the variables .
checks if the given file has the given reference .
creates a new { @link parameterized .
creates a new {
/ * ( non - javadoc )
sets the request path .
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a reader reader for the given content type .
{
{
check
returns an observable that starts with the given scheduler .
{
{
set the field
saves the given { @link qnetworkreply } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
parse the model .
resolve all the proxies .
gets the list of the given directory .
parses the files from the given directory .
returns true if this model is fully resolved ) .
returns all the contents of a resource set .
set
sets the file extensions .
sets the model resources .
{
checks if the expected level matches .
group and match the expected group and match the expected group .
checks if the expected to see {
compares two cells of a row
subst
{
{
{
{
{
#ifdef java4
#ifdef java4
/ * ( non - javadoc )
return true if the argument array contains the argument .
gets the value of an argument .
{
merge the given template into the template .
/ * ( non - javadoc )
{
gets the model directory .
gets the template directory .
to
{
/ *
starts the browser .
configure the proxy
configures the window . <p >
prints the dialog to the console .
saves the download to disk .
write
opens the web view .
{
/ * ( non - javadoc )
removes the object from the request .
returns the cookies
returns the current session .
prints out the request to stdout
load the given class .
get the list of meters that are meters .
config
pushes an event to the queue .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
loop
<p > get .
send event
removes a prefix of the path .
checks if a file is a sub - dir .
returns the parent dirs of the given directory .
returns the common common dir of the given file .
returns the given path to an absolute path .
returns the base path from the base path .
return
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the request is an empty .
send
sends a request
send
send an error to the client .
dumps an error .
send
adds a template template to the template .
adds the given list .
initialize the template .
finds all references to a template .
{
/ * ( non - javadoc )
enables / disables the save button .
deletes the dialog .
{
init variables .
opens a buffered reader for reading the input .
/ * ( non - javadoc )
creates a new instance of {
to
returns all link headers from the response
/ * ( non - javadoc )
{
gets the counts for the given file .
returns an array of files in this directory .
returns the summary of this file .
returns the html row } .
{
{
{
/ * ( non - javadoc )
gets an instance of the specified interface .
get an instance . < / p >
gets an instance of the given class .
get the remote instance of the given interface .
get the {
add a filter to the grid .
/ * ( non - javadoc )
/ *
get the list of model files .
returns the list of the model resources .
/ * ( non - javadoc )
{
append
/ *
read the content of the given input stream .
show
parses the parameter .
get the formal parameters for the given type .
converts the given string .
checks if the given type is an object .
{
{
/ *
pre - >
pre - processes the formal parameters .
extract
/ * ( non - javadoc )
{
interpret
returns the fixture . < / p >
load fixture
/ *
sets the port
return
returns true if the request is android .
/ * ( non - javadoc )
{
removes the table at the given index .
insert a row at the table .
{
{
/ *
{
gets all properties of a bean .
returns the list of the given type .
returns the annotation of the given type .
pattern
{
sets the encoding .
log
lookup a domain from the given domain .
checks if the whois is a parser for a whois
/ * ( non - javadoc )
get the managed class for the given interface .
get
returns the class name of a class .
process
process
<! -- start generic documentation -- >
/ * ( non - javadoc )
init variables .
/ * ( non - javadoc )
get
add
adds a converter to this converter .
removes the specified by name .
{
/ * ( non - javadoc )
{
add a field
compiles the class .
verifies a response
returns the value of the given file .
ensures that the given uri is a valid .
generate properties
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get
{
executes a mutable transaction .
executes an immutable transaction .
format
returns the unique file in the directory ) .
{
{
{
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
extracts the request path from the given request path .
save the dialog .
set the driver .
returns the concrete configuration .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if a request path starts with the given path path .
{
get
get
returns the window as a window .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the session associated with the given instance key .
/ * ( non - javadoc )
{
{
binds the row bindings
{
--------------------------------------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the key of the given resource .
get the content of the request .
put the content of the request .
deletes the content of the request .
{
/ * ( non - javadoc )
get
/ * ( non - javadoc )
/ * ( non - javadoc )
subscribe
/ *
uploads the notification to the tray .
delete the dialog .
{
get the value of the argument with the given name .
fit
extract
copy all the fields to the fixture .
gets the argument names of the command line arguments .
check
creates a new period in } .
timeout
removes a task .
{
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
extract
/ * ( non - standard )
sets the password .
/ * ( non - javadoc )
{
{
verifies the response against the given captcha .
gets the image for the given token .
returns a map of the chalenges
configure the application .
prints the banner banner banner .
prints the stopped banner .
creates a chameleon
gets the deploy directory .
register
checks if the given arguments are enabled .
{
{
{
wait for the actor is called .
transform
called when the user .
called when {
returns the first matching event event .
inserts the given row into the table .
returns the total number of the counts
locale .
format
setter for score - sets
getter for variants - gets
setter for variants - sets
getter for question - gets
setter for question - sets
create
getter for token - gets
getter for dep - gets
setter for dep - sets
getter for semantic - gets
setter for semantic - sets
getter for part - gets
setter for part - sets
getter for lemma - gets
setter for lemma - sets
getter for main - gets
setter for main - sets
getter for variable - gets
setter for variable - sets
getter for determiner - gets
setter for determiner - sets
getter for sections - gets
setter for sections - sets
indexed getter for sections - gets an indexed value -
indexed setter for sections - sets an indexed value -
getter for labels - gets
setter for labels - sets
indexed getter for labels - gets an indexed value -
indexed setter for labels - sets an indexed value -
getter for names - gets
getter for uris - gets
setter for uris - sets
getter for ids - gets
setter for ids - sets
getter for mentions - gets
setter for mentions - sets
getter for types - gets
setter for types - sets
getter for target - gets
setter for target - sets
getter for rank - gets
setter for rank - sets
getter for query - gets
setter for query - sets
getter for candidate - gets
setter for candidate - sets
indexed getter for candidate - gets an indexed value -
indexed setter for candidate - sets an indexed value -
getter for query - gets
setter for query - sets
getter for hit - gets
setter for hit - sets
indexed getter for hit - gets an indexed value -
indexed setter for hit - sets an indexed value -
getter for abstract - gets
setter for abstract - sets
getter for search - gets
setter for search - sets
setter for passage - sets
getter for offset - gets
setter for offset - sets
getter for offset - gets
setter for offset - sets
getter for begin - gets
setter for begin - sets
getter for end - gets
setter for end - sets
getter for aspects - gets
setter for aspects - sets
getter for triple - gets
setter for triple - sets
getter for source - gets
setter for source - sets
getter for subject - gets
setter for subject - sets
getter for predicate - gets
setter for predicate - sets
getter for object - gets
setter for object - sets
getter for uri - gets
setter for uri - sets
getter for operator - gets
setter for operator - sets
getter for operator - gets
setter for operator - sets
get the metrics for the given class
get the metrics for the given class
getter for concept - gets
getter for matched - gets
setter for matched - sets
getter for score - gets
getter for text - gets
setter for text - sets
getter for mention - gets
setter for mention - sets
getter for id - gets
setter for id - sets
getter for name - gets
getter for abbreviation - gets
setter for abbreviation - sets
setter for concept - sets
getter for variants - gets
setter for variants - sets
getter for named - gets
setter for named - sets
getter for concept - gets
setter for concept - sets
/ * ( non - static deployment infos .
getter for occurrences - gets
setter for occurrences - sets
setter for names - sets
getter for doc - gets
getter for concepts - gets
setter for concepts - sets
getter for original - gets
setter for original - sets
getter for args - gets
setter for args - sets
getter for label - gets
setter for label - sets
returns the next clear bit bit .
sets the bit at the specified index .
select
{
frees a buffer .
{
extend
parse an {
creates a record from the given arguments .
create a record from the given record .
find a record by key .
{
flushes the buffer to the given {
<p > list .
concatenates two arrays .
joins the given string with the given delimiter .
join
/ *
merge
removes the elements of the specified array from the specified array .
removes the elements from the specified list .
return
return
assigns the values at the specified index to an array of values .
map
partition
rehash
predicted
find the next separator .
find the next separator .
method to get the notations notations to use
method to get the notations )
/ * ( non - javadoc )
returns a string representation of the elements of the form of the elements .
/ * ( non - javadoc )
checks if the bracket
method to add details
returns the id of {
method to add a string representation .
/ * ( non - javadoc )
/ * ( non - javadoc )
main method .
{
checks if the given polymer id is a valid polymer .
check if the given polymer id is valid polymerid .
check if the details of the details of the details of the given hydrogen .
checks if the group id is a group id .
checks if the details of the details of the details of the details of the group .
check
checks if this is peptide or rna or rna or rna )
method to convert to json representation
{
/ * ( non - javadoc )
/ * ( non - javadoc )
method to get the simple polymer of the given string
method to get the current grouping notation
return
method to a string representation of all polymers
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a string
method to get the list of the listofids
method to get the list of the polymers
method to get all grouping of all the grouping
method to get the polymer of the given polymernotation
sets the polymer elements .
/ * ( non - javadoc )
{
convert
set
set
method to decide if the string contains a valid which
method to get the group for the group
method to decide string to a string
{
/ * ( non - javadoc )
/ * ( non - javadoc property .
parses the state machine .
/ * ( non - javadoc )
method to add a )
method to validate the contents
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<editor - fold defaultstate = collapsed desc = generated code > // gen - begin : initcomponents
gen - last : button1action
/ * ------------------------------------------------------------
{
{
{
creates a { @link aedge .
creates a adigraph from the given edges .
initialize the list of paths in - internal
{
unbuffered
<p > subscribe . < / p >
<p > subscribe . < / p >
subscribes to the specified pattern .
subscribe the number of the number of the stream ) .
unsubscribe from the stream )
asynchronously send a request to the server .
send a request .
send a sync request to the server .
asynchronously executes a list of trans from a redis server .
forward a request to the cluster .
forward an asynchronous request to the server .
send a new node in the cluster .
sync an erlang erlang stream .
recv
recv
recv
recv
recv a message from the asynchronous .
{
shutdown the stream
returns {
returns a {
blocks until the lock state .
blocks until the lock is completed .
unlocks the run state .
starts the worker .
try to add a worker to the buffer .
register a worker .
removes a worker from the queue .
/ *
try to the pool .
runs a worker .
scan a join task .
waits for the given tasks to be terminated .
completes the given task .
tries to try to try to try to compensate queue .
get
tries to terminate the lock .
/ *
/ * ( non - javadoc )
return
/ * package
completes the given task .
invoke
submits a {
returns the total number of steal queues
creates the common pool for the system .
same as a collection } .
{
blocks until the thread is available .
returns an empty leaf node .
{
{
build string string
{
{
creates a new { @link alist from } .
creates a new alist instance } .
creates a new alist .
/ *
{
creates a set from the given elements .
creates a set from the given elements .
creates a set containing all elements of the given elements of the iterator .
creates a set containing the given elements .
returns a string representation of the iterable of strings to a string .
/ * documented aoption
/ * documented apredicate
/ * documented map
/ * documented map
/ * documented map
/ * documented afunction1
flattens an iterable into a collection .
flattens the given iterable to a list .
flattens an iterable into a set .
/ * documented {
collect all elements of the specified list of lists .
collect all elements of the elements of the set .
/ * documented filter
/ * documented filter
returns a set of elements of the given set .
/ * documented by in a map
groups the elements of the specified list .
/ * documented afunction2
folds the elements of the list using the given accumulation function .
convert a collection to a acollectionwrapper .
create a acollectionwrapper from a collection .
gets a asetwrapper from a collection .
make a copy of the given array to an array .
converts an array to a java list .
as
convert an iterator to a java collection .
from
return
creates a { @link ahashmap } from the given keys .
creates a new {
/ * documented ahashmap from } from the specified keys and function } .
/ * merge
{
push a task to the pool .
pops the lifo from the task .
pop a new {
converts a {
creates a alonghashmap from the given keys .
creates a new alonghashmap
/ *
returns an empty alistmap .
creates a new { @link alistmap } from the specified elements .
creates an unmodifiable view of { @link alistmap } from the specified elements .
creates a { @link alistmap from } from the given keys .
append the tree to the tree .
{
creates a new {
{
load
normalize the resource name .
/ * ( non - javadoc )
parses the {
/ * ( non - javadoc )
{
appends a portion of the buffer to the buffer .
/ * ( non - javadoc )
get the character
return
appends a string to the buffer .
/ *
compare
find the first element of the specified range .
serialize
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add
adds a verb to the specified verb .
ignore the given patterns .
send
send
binds the given route versions .
binds the given { @link filter .
check
check
set
get
encode
encodes the given user name and password .
/ * ( non - javadoc )
get the app configuration .
process
render
make
get
get
get
apply
clean a path from a path .
trims an array of elements from a string array .
remove
splits an array of properties into an array .
collection
fill
fill
fill
to
to
to
cut
remove
isin
escapes the given string .
format the size of the given size
like
/ * ( non - javadoc )
{
login
logout
get
get
set
check
save
get
get
encrypt
private
decrypt
decrypt
constructs an ajax message with the specified message .
constructs an ajax message .
constructs an ajax message for an ajax message .
constructs an ajax message .
constructs an ajax message .
constructs an ajax message .
constructs an ajax message with an ajax message and exception .
constructs an ajax message with the specified message .
constructs a new { @link failure } and exception } formatted with the given message .
constructs a new {
generate
digest
/ * ( non - javadoc )
build the name of the name of the excluded method .
creates a composite handler for the given controller annotations .
/ *
create the action key .
returns the list of all the given method
returns all authz annotations of {
returns true if the given method is present in the method .
login
login
/ * ------------------------------------------------------------
append
returns the browser info from the request
get
get
robot
get
set
returns the domain name of a host name .
return
return
get
return
get
returns true if the request is ajax .
replacetaghtml
<p > debug . < / p >
get
sets the error correction level .
sets the fore ground color .
sets the back ground color .
get the hints for this hints .
/ * to json ) entity .
set
delete
delete
create
replace
return
return
converts a byte array to a simple char array .
to
converts a {
return
unreserved
returns the index of the first occurrence of the first occurrence of the specified substring .
returns the index of the first occurrence of the first occurrence of the specified array of characters .
signs
splitc
lookup the locale data .
returns a locale for the specified language and variant .
gets the locale for the specified language code .
resolves the locale code for the given locale .
decodes the locale code from the given locale code .
gets the number format for the given locale .
/ * ( non - javadoc )
/ * ( non - javadoc )
render
now
schedule
/ * ( non - javadoc )
create a resource from a } .
get
resizes the original image .
resize the specified image
crop
converts an image to a base64 string .
add
creates a { @link macro .
/ *
invoke
invoke
sets the credentials for the client .
returns the rest operations .
renders an ajax error .
renders an ajax forbidden message .
returns the template name
parse
render
renders the tables
render
renders the data tables .
renders the empty data tables .
renders the given {
render
render the given paginate .
render
gets the login user .
returns the principal of the user .
get
returns the value of the given name .
sets the list of items .
{
/ * ( non - javadoc )
register a {
decode
encode
url
decodes a string .
{
return
compacts all unused memory .
propagates or log info from the given metrics .
propagates a { @link metrics } to the local { @link metrics } .
checks if the given request vector is a valid request vector .
encode a string .
unchecked
get
return
returns a page of {
return
paginate
get
return
find
finds all records matching the given query name
searches for a collection by name .
closes the given {
closes the given writer .
copies all bytes from the input stream to the output stream .
copies all bytes from the input stream to the output stream .
copies the contents from an { @link inputstream } to a writer .
copy the contents of the reader to the output writer .
copy the contents of the reader to the output writer .
copy
copy
reads the available bytes from the input stream .
compare two streams .
compares the reader .
{
set
sets a pipeline at the specified index .
sets a function .
sets the specified function .
sets the pipeline of the pipeline
{
sets a pipeline for the specified predicate .
sets a pipeline at the pipeline .
removes the specified object from this pipeline .
sql
unmarshals a string to an object .
{
returns the file from the given resource location .
checks if the given url is a valid .
pipeline
zip
unzips a zip file to a zip file .
writes the response
init
creates a new instance of {
/ * ( non - javadoc )
equals
returns {
return
returns true if the given type is supported .
is
get
get
returns {
returns true if the given type is a user defined value .
add
get
match
is
is
is
is
birth
is
is
is
is
is
is
is
creates a new { @link qrcode with the given .
encode
convert qrcode
read
read
convert a qrcode image to a string .
create
{
write
/ *
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
/ * ------------------------------------------------------------
returns the version of the goja .
returns the template path for the given environment .
base64
decodes a string from base64 encoded form .
decode
read properties from an input stream .
read
read
reads the content of a file .
reads the content of an inputstream .
write data to a file .
write
write
copies a directory to a target file .
write
/ * ( non - javadoc )
{
returns a copy of this money with the same currency .
returns a copy of this money with the specified currency . <p > this localdatetime is immutable and unaffected by this method call .
/ * ( non - javadoc )
returns a copy of this money )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * [ deutsch ] <p > konstruiert } f&uuml ; } den angegebenen cent .
creates a new { @link security .
loads the {
serialize a document to a string .
parse
get
get
validates the signature against the signature .
signs the given public key and signs .
returns the default class loader .
resolves a class by its name .
get
return
get
get
get the package
get
get
get
get
return
is
is
is
resolve
checks if two types are assignable .
return
converts a resource path to a class name .
converts a class name to a resource path .
adds a resource path to the package path .
get
get
get
creates a proxy interface .
{
write
add
{
returns the pid of the pid .
lock a lock file for the given lock .
returns a map of variables for the uri .
{
adds a permission for the specified permission .
is
returns true if the given interface is an interface .
returns a map of all the fields of the map .
creates a new { @link org . apache .
binds the given extension point to the specified lm .
creates a {
returns the extension point of the given class
null
{
/ *
primitive
<p > parameter . < / p >
convert
convert
query
get
{
calculates the sha - 256 .
initialize the data source .
set the ftl shared variable .
set
set
response
creates a new { @link response .
creates a new { @link jsonresponse .
creates a new {
conver15card
validate
validate
validate
validate
return
validatehkcard
conver
returns the power of the given array .
get
get
get
get
get
get
vali
get
get
/ * ( non - javadoc )
sets the top body for the parent body .
{
sets the {
request
checks if the given bean is required .
shows the dialog .
on
invoke the annotated methods in - memory methods on the result map .
checks if all values are granted .
returns true if the given values are denied .
/ *
dynamic
return
find
find
delete
is
return
gets the application model model .
checks if an exception is an exception .
process the queue .
{
constructs and initializes a new { @link login } with the given { @link string message } formatted with the given { @link throwable } .
receive
<p > make copy .
match
constructor .
the main method .
execute the action . <p >
registers a primitive array for the given type .
{
set the property set to set up to the button .
set the text property .
get the instance of this class .
read the usage :
reads from the underlying stream } from the input stream .
{
{
get
get
checks if the given class is protbuf .
get
gets all protbuf fields for the given class .
get
get
get
creates a singleton instance of { @link password } .
<p > make entity filter . < / p >
set up the pathname .
set up the text property values .
get
return
mapper
returns the { @link factory } .
to
to
to
to
to
to
to
to
to
to
to
to
to
to
closes a connection .
close a prepared statement .
closes a resultset .
returns the list of a list of properties .
<p > fill given value .
sets the borders border .
create a new constructor .
gets the access token .
send
send
send
send
send
send
send
send
send
send
send
send
send
/ *
/ * ------------------------------------------------------------
execute
get
creates a {
creates a new instance
return
resolve
searches for the given elements in the given collection .
returns a list of elements in the given elements .
filter
{
{
get
get
add
sub
sub
mul
mul
div .
div > v1
rounds the specified double value to the specified scale .
<p > v > v to the specified scale .
converts a double to a float . < / p >
to
/ * ( non - javadoc )
parse
parse
copy attributes
/ * copy attributes from the target object .
browse
}
<p > fill entity value .
accepts this directory .
/ * ( non - javadoc )
as array .
filter the given collection
filter
filter
copy
copy the contents of the inputstream to the output stream .
convert this object from the class name .
parse
get
make a { @link filter } .
returns the value of a property .
sets a property . <p >
add the app to the frame .
{
{
prints the help for command line .
parses the given command line and returns a {
constructor .
constructor .
get the next pend .
{
{
constructor .
constructor .
add
add the controls that belong to the view .
set up the user controls .
set up the password properties .
get
return
creates a singleton instance of { @link password .
returns the default classloader .
load
load
returns the canonical name
<p > get .
get
get
get
initialize the query .
initialize the uri with the given uri spec .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
initialize the path for the given uri spec .
returns the scheme specific part of the scheme . <p >
set the scheme scheme .
set the userinfo userinfo .
sets the host name .
/ *
sets the path to the given path . <p >
appends a path to the path .
sets the query string . <p >
set the fragment .
returns the uri of the uri . <p >
is
encodes a string into a byte array .
encode a string into a string .
<p > write field value .
create
create
constructor .
get method .
set the muffin for this param .
get the clipboard
sets the clipboard contents .
{
/ * ( non - based file .
load
sets the parameters
returns the service params for the given operation
/ *
find
debug
parses a query and returns the response .
creates a device from the device .
gets a list of the span .
need
appends the specified element to this buffer .
appends the contents of the buffer
/ * ( non - javadoc )
{
format
format
format
format
format
get
xml
converts an array of object
xml
converts an xml string to a bean .
/ *
initialize the xstream .
returns the driver class name for the given url .
/ * ( non - javadoc )
map
returns the last modified time .
post
/ * ( non - javadoc )
<p > write given entity into db .
load
<p > checks if two {
creates a proxy instance of the specified connection .
/ * ( non - javadoc )
creates a proxy instance .
{
<p > retrieve entity entities .
returns the singleton audit instance for the specified properties .
<p > make entity request . < / p >
/ *
visits the type declaration .
visit a class declaration .
visits the executable declaration .
add method .
add the listeners .
{
set the properties to controls .
set up the button .
builds the common properties .
gets the value from the properties .
<p > sync entity .
returns a filter that matches the { @link collection .
returns an instance of {
filter and return declaration of the given by this declaration .
returns a {
{
{
/ *
set
creates a constructor accessible constructor .
get
get
get the super class genric classes .
returns the interfaces of the given class .
get
returns the interfaces of the given class .
get
add the controls to the view .
{ method .
set up the property .
constructor .
constructor .
add
constructor .
finish this transfer .
/ * ( non - javadoc )
skips the specified file .
add the controls to the view .
set up the controls controls .
set up the property .
{
get
{
creates a new instance .
copies the value from the source map to the target map .
constructor .
constructor .
closes the current transfer .
move the next file .
get
{
{
{
audits an event for an iti .
main method .
run method .
process the source properties file .
/ *
replace
bytes2hex
<p > read .
<p > read attributes . < / p >
returns the indexes of indexes for the given name .
parse
get
get
{
<p > make entity filter . < / p >
{
authenticate the user using the specified password .
<p > read entities ) .
initialize the client .
constructor .
add method .
encodeurl .
{
{
as
gets the identifier
returns the executable executable by name .
search the executable .
<p > checks if two {
writes characters
normalizes a path .
concatenates the given strings .
returns the relative path of a path .
converts a path to a unix path .
converts the given path to windows .
converts a path to a system .
create a new klass
returns the declared constructor .
search for a declared constructor .
returns the named method from the executable ) } . class ) method ) . class ) .
search for a method in the given name .
returns the {
returns a new instance )
gets the value of the pojo field .
serializes object -----
serializes the given {
convert a collection of non - protobufs to protobufs
set
sets the pojo
accepts the extension .
{
<p > read entities ) .
creates a new instance .
returns a map of labels for the expected labels .
extracts the expected to the expected labels .
<p > make commit . < / p >
gets the raw type of the given type .
resolves a {
gets the type
get
<p > fill given value .
returns the last modified date .
constructor .
constructor .
disconnects from the client .
add method .
changes the working directory .
poll
/ *
get
get
get
get
get
get
get
get
get
{
{
{
creates a new instance of { @link preparedstatement .
validate
add the controls to the view .
set the controls the controls .
set the text field .
get
accept
constructor .
constructor .
closes the current transfer .
get the next source file .
<p > replicate request .
<p > make url . < / p >
<p > makes request .
<p > form
dumps a byte to the output stream .
get
/ * ( non - javadoc )
<p > setter for last .
reads the class file .
resolve the utf8 value .
trims all whitespace from the string .
<p > convert the specified string to a string .
check if the passed string is empty or empty .
<p > checks if the specified string is blank or empty . < / p >
returns true if both ignoring case insensitive
checks if a string starts with prefix .
checks if a string ends with suffix .
returns the index of the first occurrence of the first occurrence of the specified string .
returns the index of the first occurrence of the first occurrence .
returns the index of the first occurrence of the specified string .
return
returns the index of the last occurrence of the string ignoring case insensitive .
returns the index of the last occurrence of the first substring .
returns the index of the first occurrence of the first occurrence of the specified string .
returns the index of the last occurrence of the string array .
return
get the substring of the specified string .
returns a substring of a substring of the specified string .
<p > returns the substring of the first .
returns the substring of the given separator .
get the substring before the first substring of the given separator .
returns the substring after the specified by the given separator . < / p >
get the substring of the string with the specified tag .
<p > returns the first character from the string .
<p > returns the right of the specified string . < / p >
<p > replaces the first .
returns a string with the specified repeat
<p > returns a string that matches .
<p > removes all whitespace from a string .
<p > removes the substring of the source string from the source string . < / p >
<p > removes all occurrences of the string from the source string .
<p > removes the first substring from the source .
<p > removes all occurrences of the substring from the source string .
<p > removes all occurrences of a string .
remove all occurrences of the given string .
splitcsv
{
{
{
{
{
clean up the pending state .
initialize the audit audit .
initialize the message queue .
initialize the pw validator .
initialize the pw
<p > retrieve entity . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
add the controls to the view .
{
set the filter to the filter properties .
gets the locale for the specified language .
returns the locale for the specified language .
returns the locale for the given language code .
resolves the locale code for the given variant .
resolves the locale code for the specified locale .
decode locale code code from the given locale code .
returns the date format symbols for the specified locale .
returns the number format for the specified locale .
lookup the locale information for the given code .
returns a proxy instance .
removes all of the mappings .
adds an element to the stack .
removes the element from the stack .
make an input stream from the contents .
returns a new { @link encoder } .
read properties from a file .
write
parse the given arguments from the given properties file .
add method .
register
get the value of the specified type .
constructor .
make a popup popup .
adds this combo box to the combo box .
creates a new {
get
encode
is
is
sets a parameter .
{
/ * ( non - javadoc )
build
match
returns the index of the given path .
returns true if the given string matches the given patterns .
moves the specified rectangle to the specified coordinates .
returns true if this rectangular rectangular .
{
returns the intersection of this rectangular .
returns a union of this rectangular with the specified rectangular .
replaces the x by another .
replaces the y with another .
gets the rectangular of this rectangular .
gets the rectangular of this rectangular .
get
returns the file extension of the given path .
this method .
set the pathname .
get the width of a column of column
{
get the bounds of the cell in the cell .
{
returns the absolute bounds of the specified area .
returns the index of a cell in the cell .
find
calculates the columns of the area
calculates the rows of the areas
replaces the object name parameters in the given pattern .
creates a new instance of the specified class .
<p > singleton instance of the specified class .
<p > sync entity into db . < / p >
add the controls to this panel .
unwraps a {
appends a byte to the buffer .
appends the contents of this buffer to the buffer .
md5final
dump
return
converts the request to a multipart request .
add
add
add
add
add
add
/ * ( non - javadoc )
/ * ( non - javadoc )
unwraps the given type .
entry point to the main application .
/ *
copy the contents of the code buffer .
/ * render
visit
visit
visit
get
/ * ------------------------------------------------------------
{
copies a { @link copy .
add a child to this tree .
removes all children of this node .
returns the next solution )
returns the next solution .
add
adds the instructions and this instructions to the parent .
{
/ *
registers a work panel .
{
add a layout component .
removes a layout component .
{
layout the container .
updates the component flags .
get
creates a new type .
accept this visitor .
submits a submits request to the cluster .
{
{
optimize the instructions
{
get the name of a test name
get the value of meta - returns .
fails if the absolute url when the server is absolute .
sends a boolean value when true if true .
requests that a long value returns a long .
gets a float value of a float value
get a double value returns a double value of a double .
unwraps a browser to the server .
service
render the start tag .
renders the button .
convenience method name of the functor .
{
resets the internal state .
{
{
{
{
{
{
{
returns true if the property has a property .
/ *
/ * ( non - javadoc )
checks if a primitive type is assignable to be a primitive .
initialize the list of the given object .
gen - last : change
returns true if the given state is a proof step .
{
initialize the lookups for the given node .
unify
unify
unify
ends the scope of this scope .
compiles the given { @link clause } .
compiles a clause .
compiles the given clause .
finds the index of the first arguments in the clause .
compiles the given expression into a list of waminstruction .
allocate the permanent program variables for the given clause .
/ * query
gather
displays the compiled predicate .
/ *
put a padded string into the buffer
converts a {
sets the id of the attribute .
returns the value of the attribute .
set the value of the attribute .
{
read a term .
returns the item at the given type .
return
return
returns true if the parent type is a sub type .
checks if the given class is a sub type .
return
creates a new instance of the given class .
<p > newinstance . < / p >
call
call
call a static method on the given object .
gets the constructor of the given arguments .
find the matching setters for the given property name .
render
returns the current url .
get
get
get
get
get
get
get
returns the type of the given object .
resets the state .
enqueue the given a ) search states for the given a given collection .
searches the goal path of the goal .
{
returns true if this proof step is a proof of the given state .
creates a new { @link type } .
returns the set of values set .
{
evaluate the value .
checks if the proof for the proof .
create the continuation states .
{ @inheritdoc }
{
{
{
{ @inheritdoc }
{
/ * ( non - javadoc )
{
sets the end point to the tz .
sets the dimension to the given dimension .
add a dimension to the table
build
/ * ( non - javadoc )
returns a set of free variables that match the given query .
returns a set of non - anonymous in the given query .
flattens a term into a list of {
flattens a term to a list .
converts a {
compares two nodes .
read
reads the contents of a string .
writes an object to a file .
reads the contents of the stream .
adds the specified element to this vector .
{
/ *
{
{
enter the given {
enter a predicate .
{
apply the given functor } .
generates a string representation of the trace .
compile the body
compiles the body arguments into a list of body .
}
allocate temporary registers all temporary ) registers the given term .
/ *
returns {
{
returns the biggest classification for the given property .
return
choose the best property to decide if the input properties in the given output .
functor .
{
returns a new variable with the specified name .
execute
returns the element at the specified index .
document me!
document me!
returns the minimum thumb size .
set
paint the cursor
paint the image .
create
creates a graphics2d
creates a binary image from the image
create a direct image from the input image .
visits this {
takes a {
/ * ( non - javadoc )
process a json request
/ *
{
/ * ( non - javadoc )
/ * ( non - javadoc )
splits a key into a pair .
returns a list of {
restores this method .
{
enter the {
enter the given predicate .
sets the queue search algorithm .
{
open the grid .
get the rel when the anchor of the anchor .
get the href of a get request .
sends a request to the server .
unwraps the browser to the server .
{
reset the sentence .
entry point for testing
returns a list of sentences contained in this sentence .
{
/ * ( non - javadoc )
returns the terms of the given terms .
consumes an atom atom .
consumes a functor .
consumes the next term .
{
consumes a new term .
parses a literal literal
parses a double literal .
consumes a literal literal literal .
consumes the next atom .
consumes the next directive and returns the result .
/ * ( non - javadoc )
initialize the built ins .
consumes the next token .
consumes the next token .
bind
rollback
collect
/ * ( non - javadoc )
reserve a call point .
-----------------------------------------------------------------------
-----------------------------------------------------------------------
returns the number of milliseconds ] .
-----------------------------------------------------------------------
-----------------------------------------------------------------------
sets the number of hours to the specified number of hours .
return
sets the number of seconds to milliseconds .
-----------------------------------------------------------------------
-----------------------------------------------------------------------
return
-----------------------------------------------------------------------
converts a long to a long .
convert a time only into a string .
-----------------------------------------------------------------------
{
{
returns {
removes the mapping for the specified key .
removes all mappings from this map .
applies the specified entry to the specified entry .
returns the entry for the given key .
returns the entry in the hash table .
rehash
return
return
return
layout
documentation inherited action
{
/ *
sets the property is finished .
returns an instance of {
{
expected
computes the remainder of the vector .
returns the probabilities of the distribution
returns the counts of the distribution .
--------------------------------------------------------------------------------------------
compares this year to another date .
set
/ * ( non - javadoc )
{
returns the current time to throttle
creates a new url from a string .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the page scope name
returns the scope scope
/ * ( non - javadoc )
/ * ( non - javadoc )
render the start tag )
creates a string representation for a property
convert a string to a string representation .
{
set the current screen state .
walk
{
/ *
changes the registers the delta .
notifies all registered listeners that a property has been active .
inserts a character at the given position .
inserts a string in the parent .
creates a {
creates a table with the given column .
enter a variable .
enter functor
leave the given clause .
returns true if the top level is in top level functor .
returns {
adds all of the elements in the collection .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieves the head of this queue .
get
--------------------------------------------------------------------------------------------
{
set
gets the fixity .
returns true if this {
{
changes the screen change .
updates the screen state for the screen .
updates the buttons
register a {
returns true if the given state ) of the given a proof of the current proof .
returns the factory for the given class .
{
creates a new component factory } .
get
{
gets the attribute at the specified index .
sets the attribute attribute to the given value .
sets the row attribute .
returns the column attribute or null .
returns the {
inserts a new attribute into the table .
{
create the text grid .
creates a grip panel .
{
creates a new instance . < } .
creates a random time instance .
--------------------------------------------------------------------------------------------
creates a new {
returns true if the specified value is an instance of { @link pattern () method .
returns true if the stack is a top level .
returns true if this context is in head .
returns {
gets the term .
returns the position of the context .
returns the parent context .
creates a {
creates a {
creates a {
creates a {
create
updates the registers the layout .
changes the registers a delta change .
returns the value of this scope .
find the goal path for the goal .
joins the reverse paths in the reverse node .
transforms a variable into an anonymous variable .
{
cache
returns the properties for a resource
set
{
{
{
compiles the body arguments .
/ *
gather
gather
{
visit a clause .
returns the key in this map .
returns the value associated with the given key .
reads an integer from the buffer .
writes an int to a byte array
converts a big endian int to a byte array .
reads a 32 - bit array .
reads a short from the byte array from the given offset .
write a short value
compile the body
returns the bound property of the given node .
returns the child state for the given operator .
{
returns the id of the attribute .
returns the value of the attribute .
sets the value of the attribute .
converts a string to an array of strings .
return
return
convert
returns a list of items of the given type .
unwraps the given type .
current
get the list of handlers for the specified handlers .
sets the value when the control )
unwraps the server with the server .
visit
visit
visit
visits this {
visits this clause .
visit
example :
/ *
reserves a reference
resolve
/ *
/ *
returns true if the given attribute is a sub category .
returns the id of the category .
sets the id of the category .
{
returns the last value of the path .
/ *
/ *
compute the h between two nodes .
{
returns {
{
removes the element at the specified position .
returns the number of the bucket .
adds an error message .
handle
/ *
{
read the ssl
/ *
/ * ( non - javadoc )
shuts down the handshake .
traverses the elements of this predicate using the provided predicate .
traverses the elements of this { @link clause .
traverses the elements of the functor .
enter
returns {
inserts an attribute into the grid .
selects a grid }
creates a {
classify the given ordinal } .
request a get request returns the id
get the type of the type of the type returns the type of .
gets the property returns ) property returns the property returns .
unwraps the server to the server .
{
create a {
traverses the elements of the specified clause .
traverses the given functor .
visit
visit a variable .
visits this {
visits this clause .
visit
visit
{
log
log
returns the log base2v3 value for the given value .
log
log
returns the number of the given value .
log
get
get
get
creates a fader fader } .
changes the background }
/ * ( non - javadoc step ) .
sets the head of the head .
/ * ( non - javadoc )
documentation inherited from interface
sets the commit order .
save
discard the next screen .
set
{
returns the value of the specified key .
returns the value of the specified property .
get the property
returns the properties
get the properties for the properties file .
get the properties of the given key and modifier .
returns an iterator over the given key .
creates the array properties
build the term .
sets the rate rate .
throttle
returns the current time in - place .
/ * ( non - null value .
{
find the properties using the system property
returns the properties using the system property .
get the properties using the classpath .
get the properties of the resource .
leave the functor .
gets the value of this term .
set
--------------------------------------------------------------------------------------------
accept a {
structural
returns a {
compares this asciistring to another .
compute
computes the hash code .
creates a { @link queue } for the given search .
closes the connector .
/ *
/ *
/ *
visits this {
visits this {
visits the visitor to the printer .
visits this variable .
initialize the printers .
prints the table .
<p > when when the item is not found .
sends a link to the server
get
unwraps the document to the server .
get the control control returns the control returns the control returns .
get the initial value returns )
set the value sets the value sets .
get the control group returns the control group group of the control group .
submits a submits request to the cluster .
unwraps the browser to the server .
enter functor .
leave
enter
returns the value of the checked value .
/ *
commits the transaction .
rollback
request
adds a cached operation to the cache .
acquires a global write lock .
releases the global write lock .
enlist
{
inserts the specified element at the tail of this queue .
/ *
removes and removes the head of this queue if available .
retrieves the head of this queue waiting for the head of the specified timeout .
/ *
/ *
/ * ( non - javadoc )
removes the head of this queue from the queue is available .
removes all elements from the specified collection .
drains the specified {
drains the specified collection of elements from this collection .
inserts an element into the buffer .
/ *
{
sets a sys property value is null .
sets the value of a sys property .
set the value of the specified .
sets the value of a sys property .
set a float property if it is null .
sets the value of a sys property is null .
sets the value of a system property .
sets the value of a property .
sets a short property of type { @code propname property .
set the value of a property .
set a long value for the property is null .
/ *
set the value of a double is a double .
/ * ( non - null property
sets a property .
sets a property .
set a property .
set a property .
set a property .
set a property .
returns the value of the specified property
returns the value of the specified property as an integer .
returns the value of the specified property as a long .
call a mixin on a given name .
set
/ * ( non - javadoc )
gets the connection to the server .
{
/ *
updates the given predicate .
updates the given query .
/ * ( non - null code from the given call .
/ * ( possibly empty buffer .
execute and extract all bindings in the given in the query .
decodes a heap term
capture the fields
restore the properties from the field
get the value of the specified attribute
put
get
entry point for testing .
{
appends the classpath to the classpath .
/ *
returns the value mapped by {
adds a value to the buffer .
{
retrieves the head of the head of this queue .
{
creates a new { @link queue } for the specified { @link search } .
open the grid .
simple
constructs a {
positional
positional
positional
adds a {
sets the {
resolves the current {
resets the query .
{
returns an iterator over all solutions in this set .
read properties from an input stream .
read properties from a file .
read properties from the given url .
get the properties of a string .
trim all properties from a properties object .
returns true if the given name is a valid name .
{
computes the grid size of the grid
initializes the font metrics .
{
adds a property change listener .
{
fires a property change event .
creates a new type . < / p .
compiles a list of the instructions .
documentation inherited from interface
fade
creates a matcher that matches the given {
--------------------------------------------------------------------------------------------
shows the main window .
{
show the console .
show the left pane .
show the right pane .
{
shows the horizontal bar .
shows the left bar .
shows the right bar .
get all items for a given type
returns a list of the document .
unwraps the given type .
remove all elements from the document .
sanitize the radio controls from the given form .
waits for the specified amount of the queue .
waits for the specified amount of time .
{
appends the classpath to the classpath .
creates a new instance .
accept this visitor .
frees this object .
/ * ( non - empty by the given rel .
/ *
print introduction
initialize the command line reader .
evaluates the sentence .
evaluates a query
get the multi - type data .
returns the data type data .
get the data type data .
get the data type data .
get the data type data .
get the data type data .
get the data type data .
get the data type data .
convert a string representation of a multi - type .
get the data type data .
convert a data type to a class
returns the best matching conversion of the given type .
adds an attribute to the page .
determine if this dimension is equivalent to another dimension .
enter
enter
returns {
{
{
clears the specified key up to the specified key .
{
clears this map .
{
expands the specified key to the specified value .
{
insert
get
creates a text grid .
creates a {
update the listeners
inserts a new row into the buffer .
parses a sentence .
{
{
--------------------------------------------------------------------------------------------
parses the operators of the given a term .
sets an operator for an operator .
returns a map of operators matching the given name .
check if the given candidate is a fixity .
expand the given node into the given queue .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
right
returns the list of the parsing .
/ * ( non - memory property .
returns the usage of the command line .
parses the command line arguments .
add trailing trailing properties to the properties .
adds the options to the list .
adds an option to the command line .
take free args of properties to properties .
check that an argument is a valid option .
compares two iterators .
/ * ( non - javadoc ) of the list of options .
set
{
sets the selected stemmer .
get the actual stemmer stemmer .
get
entry point for testing
evaluates the given term as a numeric type .
creates a new instance .
sets the state of the property .
resets the internal state of the heap .
/ * ( non - javadoc )
returns the layout layout )
execute the given call point .
trace the trace frame .
trace a choice frame .
get
/ *
internal
/ * ------------------------------------------------------------
/ * this method is the heap .
returns the next stack frame .
/ * returns false if the data is false .
/ * a1
/ *
/ *
/ *
unify
unify
prints a slot .
get
check if the given state is solvable .
gets the child state for an operator .
returns an iterator
print
swap the tile at the specified location .
updates the operator with the given operator .
swap tiles
return
converts a {
publishes a record .
converts a {
converts the specified level to log4j log4j level .
inserts the specified element to the queue .
/ * ( non - null )
/ * ( non - javadoc )
removes the first record from the queue .
acquires an object from the pool .
releases the specified object .
/ *
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds an element to the map .
/ *
increments the record and count of the given record .
decrement the size and count to the given record .
signal
{
binds an object to the named object .
binds a named object }
/ *
{
{
{
{
{
composes a composite name to a composite name .
/ *
removes the value of the specified property
run the finalization
-------------------------------------------------------------------------
media
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
filter function
-------------------------------------------------------------------------
filter an argument
-------------------------------------------------------------------------
url - url - of ws0
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
rgb - hex :: = rgb - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex - hex
-------------------------------------------------------------------------
-------------------------------------------------------------------------
{
push
record
{
{
{
{
returns the maximum column size .
{
updates listeners
update the column width .
execute
compiles the given clause into a clause .
transforms a functor .
{
executes the given an action ) action .
compiles the given sentence .
substitute
initialise
check
/ *
prints a list of arguments
removes all of the map .
{
see {
removes the mapping for the specified key from this map .
creates a new symbol .
returns the symbol key for the given key .
returns the value associated with the given key .
see {
clears the value up to low mark .
{
open the breakpoint .
evaluates the expression .
change
terminating
shutdown
waits for the termination to finish .
adds a listener to the list of listeners .
remove a listener .
create the continuation states .
{
{
returns the number of non - zero
updates the minimum node .
compares two nodes .
inserts a node into the tree .
/ *
restart
/ * ( non - null if not found .
{
{
{
sweep
fails the name of the server name of the control .
get the control returns the control returns a control returns a list of controls .
return
find
find
returns an iterator for all of - in the given search method .
find
open the pane .
returns the next element in the sequence .
get the code buffer .
compiles the body of the given expression .
/ * ( waminstructionset ) instructions .
restore the values of a multi - property .
{
{
see {
capture
main method .
documentation inherited from interface
documentation inherited from interface
get
/ * ( non - empty )
removes the element from the queue .
returns the next element ) in the next available . )
reset
/ *
prints the table to the given print table .
stroke
converts the modifiers to a string .
insert an attribute in the attribute set .
inserts a column attribute into the table .
insert a row attribute .
updates the listeners on the attribute change .
parse
parse
return
return
return
creates a {
returns a {
returns a {
returns the next token from the set .
peek
/ * ( waminstruction to the next .
returns true if the given instruction is a constant .
return true if the given instruction is a valid variable in the symbol .
returns true if the given instruction is a non - arg argument .
create
render
get
/ * ( non - javadoc .
accept this visitor .
add a transformer to this clause .
returns an iterator over elements of this stream .
returns true if any ) is ground .
returns the argument at the given index .
compare two arguments .
returns an iterator over all the children of this {
return a copy of this javadoc )
accept this visitor .
set the transformer .
converts the string representation of the arguments .
{
{
execute a query .
{
{
{
{
returns a list of disassemble ) ip address of the given instruction .
/ * ( non - javadoc )
returns the default instance .
returns a random random instance )
set
compile
prints a solution .
prints a solution to a string
print
expand the set of variables ) to map )
set an operator .
compiles the body of body arguments into a list of waminstruction objects .
{
read the packet from the packet . xml file .
initializes the ip address
return
get
return
stop the music
updates the current track information .
update
/ * ( non - javadoc )
update the play information of a playlist .
{
{
{
handles the resource request .
handle the {
handles an event request .
fires the start music request
roll
init
{
shuts down the connection .
resets the parser .
parse the packets packets .
processes the packet .
sets the cli
creates a chat chat .
returns the user chat address for the given userjid .
returns a list of addresses to a } of the specified domain .
/ *
resets the state .
/ * ( non - null value .
adds a filter to the list of filters .
{
resets all properties of properties .
base64
process
adds a {
removes a acl from the acl .
filters the acl for the given acl .
gets the principal key from the given principal key .
lists the permissions of the given perms .
creates a synchronized map .
{
init
--- send packet ---
returns the next packet .
opens the stream .
get the schema for a given schema .
get the schemata schemata schema .
creates a new {
creates an { @link event .
creates an { @link event .
{
adds a descriptor to the specified descriptor .
{
adds an event life cycle .
{
start
shuts down the timer .
creates a synchronized { @link filterable .
/ * package
compare two files .
clean the direct byte buffer .
/ * ( non - javadoc )
checks if the entry is valid .
mask
hash
compare two objects
{
{
{
/ *
resizes the specified capacity .
{
{
{
{
removes all mappings from this map .
add an {
/ *
creates a new delegate to the given map .
parses a date string .
/ *
parse a name of a string .
parse a server from a string .
parse a resource from a string .
returns the bare address of the given string .
checks if the given jid is valid .
escapes a node .
/ * perform an unescape operation based on string .
encode
hash
encode
encode a string into base64 .
encodes a byte array into base64 notation .
decodes data from base64 notation .
random
{
sets the play pause controller .
sets the track selector .
sets the next controller .
sets the { @link consumer } .
sets the playback changeable controller .
sets the controller changeable controller .
broadcast a playlist for a playlist .
handle command resources
handle the volume .
handles a jump jump .
handle the select track .
returns the cache for the given scope .
get
get
on delete
/ * ( non - javadoc )
get
insecure
returns an immutable map containing all entries in the given map .
gets the filtered map of all the values .
shard
escape
escape
adapts a source .
safe
delete a tree
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the { @link instance } for the given connection .
enable
disconnects from the connection .
/ * connect to the server .
sets the ping interval .
schedule a ping server task .
creates an object
destroys an object .
/ *
{
/ * ( non - javadoc )
removes all children of the specified key .
add
adds all options to the command .
adds an option to this option .
{
parses the command line arguments .
prints the usage of the application .
/ *
shuts down the socket .
initialize the connection .
{
handle
returns the {
use {
request
start
--- connect ---
notifies that the connection error is closed .
notifies all registered connection listeners .
add an implemented class to the cache .
get the list of implemented preferences .
{
{
/ *
/ * ( non - javadoc )
create
--------------------------------------------------------------------------------------------
/ * ( non - javadoc )
returns the sling home home home .
parse the command line arguments .
/ *
<p >
log
creates an {
creates a start event .
notifies all registered listeners that a string has been registered .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
creates a new transactional .
returns a map from the cache
get the cache key
removes the specified key from the cache
put
set
/ * ( non - javadoc )
include
include
adds the sasl mech mech
add
creates the connection listener .
declarative services
execute
register standard events .
registers an event listener .
reload
tries to lock the file .
write
/ * ( non - javadoc )
creates a {
creates a player update for a player .
creates a player update from a playlist .
creates a player update for a player .
creates a new { @link cluster .
creates an instance of { @link cluster .
creates a new {
creates a new { @link dse } .
creates a new {
create
starts the player .
stops the player .
adds a command to the player .
creates a playlist request .
creates a new {
creates a new {
/ *
appends the given post to the url .
adds a query param parameter .
adds a query param to the url .
adds a query param param .
adds a query parameter to the url .
gets the playlist of the given event model .
<editor - fold defaultstate = collapsed desc = generated code > // gen - begin : initcomponents
gen - last : nakamura
launch
exists
gen - last : localhosturl
creates an image icon for the given path .
get
the main method .
{
exports the data to a map .
imports the presence of a {
returns the value at the given index .
returns the value associated with a key .
get the integer to an integer property as an integer .
returns the double value as a double .
returns the value of the given value as a } .
create a command resource .
verify a command
verifies that the capabilities are able to select the command .
verifies a command against a command .
creates a new cluster .
creates a session for the given cluster .
gets the cluster for the given key .
get a { @link cluster
/ * ( non - null )
returns the {
/ * ( non - javadoc )
bind values } to the given values of the supplied values .
binds the values of the supplied values to the supplied values .
{
{
/ *
execute a one row in the given consistency level .
{
executes the given consistency level of the consistency level .
wraps a {
asynchronously executes a callback asynchronously asynchronously .
executes the given callback asynchronously ) asynchronously asynchronously
wraps a {
execute asynchronously asynchronously asynchronously asynchronously .
{
execute batch }
executes the given callback asynchronously .
set
returns all subclasses of the given class .
returns a set of subclasses of the specified class .
searches for testing .
search for the specified by name .
/ *
set the resource to the given resource .
sets the provider for the given provider .
sets the consumer for the given identification .
/ * ( non - javadoc )
{
{
{
returns the next result )
processes a packet .
creates a synchronized { @link filterable .
gets the volume of the given event model .
error
error
creates an {
creates an error response .
checks if the given {
decorate
comparator
checks if the given subject is impersonate
enable or disables the login .
{
decorate
sets the name of the group .
updates the state of the subscription .
returns an unmodifiable collection of { @link roster .
compares two objects .
returns the value associated with the given key .
associates the entry in the cache .
removes all children for the specified key .
returns a list of values in the cache .
sets the rsm to the rsm .
creates a {
get the list of objects in a list of objects in the list .
/ * ( non - javadoc )
creates a {
reloads the connection .
creates a new group .
creates a new entry .
{
gets all the entries in the roster .
returns the roster entry for the given user .
returns the presence for the given user
returns the presence of a user
returns an iterator of the presences for the given user .
get
sets the presence of the presence of the presence .
fires a roster changed event .
sets the digest .
/ * ( non - javadoc )
set
{
/ * ( non - javadoc )
creates a {
creates a presence event . presence .
decorate
clears the map .
set the volume for the player .
get the resources for the existing resource models .
create a player request .
creates a {
creates a player request for a playlist .
creates a player request for a playlist .
returns the time passed in event container
registers an update listener .
initialize the properties
reloads the properties from the properties .
parses an error stream error .
<p > mechanisms >
parses the compression methods from the given compression .
parses a packet extension .
decode a string to an object .
creates a new { @link music } . start .
creates a {
creates a new music request } .
starts a playlist music request .
starts a playlist request for a playlist .
verifies that the given { @link identifiable .
create
filter
creates a filter that compares two elements of the specified base .
create
returns the playback state of a resource model .
return
returns true if the specified subdomain is allowed .
{
{
{
gets the entries in the map .
returns the set containing all keys .
returns a collection of the values .
purge the queue .
purges the specified reference from the specified reference .
/ *
hash
/ *
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
/ * ( non - javadoc )
sets the presence of presence of the presence .
updates the presence of the vague .
send
send a message to all registered listeners .
generates the javascript javascript .
initializes the configuration .
init
/ *
init
/ *
load properties
write a file to the file .
gets the progress of an event model
decorate
adds an object to the collection .
discover
resolve
returns the jsonresult
/ * ( non - javadoc )
returns the names of this query .
sets the attributes of the packet .
{
creates a stop music .
verifies that the given event model is valid .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get a {
/ * ( non - javadoc )
/ * ( non - javadoc )
get a { @link dse }
get a session
gets the session
adds a connection listener to this method .
create a packet
adds a {
adds a {
notifies all registered listeners that a packet has been sending .
adds a {
notifies all registered {
initialize the debugger debugger .
convert a string to a value .
connect
shuts down the connection .
registers a new iqresultlistener
rollback
get
checks if the node is valid .
returns the key for testing
returns an {
{
returns an iterator over the elements of this collection ) .
/ *
/ *
lookup a node for the given index .
lookup the node in the specified index .
compare two objects .
returns the least node of the given node .
returns the most recent node in the tree .
find the next node in the tree .
find the next smaller node in the tree .
returns the most - valid node
/ * least
copy a color from the to to the to copy
returns {
returns true if the specified is black .
make sure that the specified by the given index .
make sure that the black order .
returns the parent parent of the specified node .
returns the parent of the specified node .
returns the right child of the specified node .
returns the left child of the given node .
returns {
returns true if the node is the right child of the node .
rotate a node in the node .
rotate the right node at the specified index .
inserts the specified node into the tree .
delete
deletes the red at the specified index .
swap the position of two nodes of the two nodes .
checks that an exception is non - null .
inserts a value into the tree .
{
{
{
/ * ( non - javadoc )
{
{
{
{
{
/ * ( non - javadoc )
find the ceil node in the tree .
{
deletes all expired entries .
removes the cache from the cache .
ds method to activate this component
/ * ( non - javadoc )
/ * ( non - javadoc )
this method
gets a playlist for a playlist .
get a request for a player .
gets the playlists from the given player .
creates a new roster .
opens a roster store .
gets or create or create one if it doesn t exist .
localhost
scan
convert an inetaddress to an address .
decorate
synchronized
/ * ( non - javadoc )
{
{
{
reads xml } from the given reader .
reads the content of the given text .
reads an xml from an xml document .
read xml }
parse the xml document and returns the document .
decorate
{
{
/ * ( non - javadoc )
updates the track information ) of the track .
exports the data to a map .
imports an album from a hash map .
convert a {
{
sets the jar filter .
add an application to the classmap )
add
execute the command .
/ *
prints the list of classmap .
print the usage of the jar .
entry point .
creates a mute event .
creates a mute event .
this method to refresh cache .
get the {
writes a file to the given file .
{
add
/ * ( non - empty {
get the field by name .
returns the name of the given jar .
gets the response body as an input stream .
gets the response body as string .
closes all the streams .
creates a map of {
{
releases the client .
creates an {
sets the {
{
/ *
returns the track info for the given event model .
exports the data to a map .
imports a {
error
get
getjson
getjson
gets the acl for the specified object
{
reverses the specified map in the specified map .
creates a new {
returns the set of elements in - two .
/ * ( non - javadoc )
execute
/ * ( non - javadoc )
return
decorate
creates an {
get the current track .
gets the name of the {
returns the data of the data .
update a playlist .
returns a playlist of the queue .
verifies that the playback mode is valid .
exports the data to a map .
imports a resource from a resource model .
/ * ---
capture
imports a {
creates a stop event .
creates a stop event .
parse the name of a string .
escapeforxml
hash
encode
initializes an authentication client .
opens a connection
authenticates the sasl server .
/ * ( non - javadoc )
return
return
/ * ( non - javadoc )
{
join all the queues .
{
removes a property .
add
remove a principal
/ *
creates a player command .
documentation inherited from interface
decorate
process
change the password for the user .
creates a new {
fires the user encountered .
/ * ( non - javadoc )
copies a copy of properties to the specified destination
{
{
retrieves an input stream for a file
{
/ * ( non - javadoc )
{
checks if the given {
checks if the resource is permanent .
sets the name of the group .
returns the roster entry for the given user .
adds a roster entry to the group .
{
returns {
returns {
{
{
removes the mapping for the specified key from this map if present .
removes all of the mappings .
hash
returns {
{
returns the entry for the specified key .
updates the entry with the specified entry .
reuse
add
removes the mapping for the specified entry .
removes the entry at the specified index .
destroy the entry .
