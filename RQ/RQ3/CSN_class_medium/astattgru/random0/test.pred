parse a dataset from a file .
find the class hierarchy for the given class name .
creates a new path for the given path .
creates a new instance of the given class .
check if the url is a url .
checks if the given exception is a log message .
adds a new listener to the list of listeners .
add a file to the list of files .
add a folder to the folder .
start the scheduler .
stop the thread .
reads the contents of the input stream into a string .
scans the classpath and scans them in the classpath .
copy the input stream into the output stream .
writes the given { @code byte } to the given { @code outputstream } .
copy input stream to output stream .
close the { @link io . netty . stream . stream . } .
close the { @link io . netty . stream . stream } .
updates the files in the given url .
restarts the jar file .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
package private for testing
clear the caches .
create a new instance of the given { @link } .
creates a { @link } from a { @link bbox } .
creates a new bounding box from the given bounding box .

<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
check if the given { @code } is a { @code } .
creates a { @link } for the specified key .
returns a list of all the points in the given point .
returns a list of all the points in the given list .
returns a list of all the points in the given point .
returns a list of all the points in the given list . <p >
returns a list of all the points in the given linestring .
returns a list of all the points in the given linestring .
returns a list of all the components that are equal to the given point .
returns a list of polygons with the given index .

splits a linestring into a list of lines .
returns a list of all the components that are equal to the given point .
returns a list of all the polygons in the polygon .
<p > . < / p >
returns a list of all the features that are located in the given coordinates .
add a new hole to the list of coordinates .
returns a list of { @code geometry } with the given { @link geometry } .
get the point of a point in the given geometry .
returns the byte array as a byte array .
returns the message buffer .
list the filters in the list .
print the output of the output stream into the output output stream .
parse the xml file .
{

sets the json file to use for the given { @code inputstream } .
create a { @link } object from the given { @link inputstream } .


get the next json object from the json object .


get the list of components that should be used to retrieve the component .
returns the string identifying the given { @link } .
encodes the given string into a string .
compares this object with the specified object .
get the value of the specified component .
returns a new { @link } instance that binds the values of the given { @link snakgroup } .
grants the proposals for the given { @code } .
{
{
{
{
/ * ( non - javadoc )
{
{

{
{
sets the logging level of the given logger .

logs a warning message .
logs a message with the given message .

returns a new { @code joiner } for the specified dn .
returns a unique name for the given attribute name and value .
lookup a list of attributes from the given dn .
lookup a list of attributes from the given attribute name .

checks that the row is a valid row .
{
add a new row to the list of the .
returns a new vector filled with the given column index .
{
locks a row of the specified row .
locks a row of the specified row .
sets the value of the specified column .
sets the column s columns .
sets the row col in the row .
returns the vector array of the given array .

encodes the given string into a string .
encode a string into a string .


parses the given string into a { @link } .
update the current index of the given cluster .
assigns a unique key to the given id .
get the labels for the given concepts
{
{
computes the entropy of the given array of doubles .
returns the mean value of each element in the collection .
computes the mean value of each of the values in the array .
returns the median of a collection .
calculates the median of the array .
returns a new { @code } instance .
returns the number of values in the specified array .
calculates the number of bits in the given array .

calculates the average of the total number of elements in the given { @link number } .
calculates the average of the given number of samples .
sums the sum of all values in the array to the specified values .

create a new index index .
read the data from the array .
/ * ( non - javadoc )
add a new element at the specified index .
sets the value at the given index .
{
returns the vector that is the first element of the vector .

在线学习
get the list of all the in the array .

find all children of this node .
finds all the words in the given .
returns the index of the first occurrence of the specified indices in the array .
read the file name from the file .
parse the arguments and the arguments and the arguments of the compiler .
cleans up the resources .
returns the next element in the document .
registers the request with the given request .

handle the given request .
start the server .
logs a request to the server .

parses the from the given url .

close the input stream .
sets the for the given .


returns a {
returns a { @link } that maps all models to the specified { @link map } .


score the and returns the result as a { @link } .
动态添加词典

put a key from the cache .


calculate the for the given .
/ *
returns the index of the first element of the list .
returns the best match for the given node .
returns the list of all the elements in the specified array .
compares this to another .
{
{
returns the value of the given vertex .
returns a graph that represents the graph of the graph .
joins the elements of the iterators with the specified iterator .
advances the next available {
returns the next element in the list .
{
translates a tag .

{ @inheritdoc }
calculates the for the given matrix .

{
get the stack of the given file .
get the agent stack for the given url .
get the stack trace for the given { @link javax . osgi . } .
get the for the given connection .
get the input stream from the given inputstream .
get the xml for the given configuration .

sets the properties of the given .
get the value of the specified key .
get the first value of the first item in the list .
returns the list of all the responses for the given list .
process the documents .
adds the index to the index .
{
/ * ( non - javadoc )



get the value of the matrix element in the matrix .
selects the row in the row .
sets the value of the specified column .
sets the row to be equal to the specified object .
{

adds a new options to the options set .
{
{



{
start the

open a stream to the stream .
save the data to the given outputstream .

search for the specified { @link indexexpression } .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
process the tokens .

get the next row of the given index .
creates a new pkcs12 object .
creates a new { @link } instance .
creates a new { @link } instance for the given { @link } .
creates a new instance .
sets the response response .
shutdown the server .
writes the bytes to the given buffer .
writes the given byte buffer to the given buffer .
reads data from the given bytebuffer .


sets the { @link } for the given { @link } .


adds a new index to the index .
sets the index of the specified element in the array .
adds a promise of { @code promise } to the given { @code promise } .
add a new value to the list .
sets the value at the given index .
returns the vector array containing the vector of the specified element .
creates a new { @link } for the specified { @link } .
creates a new mail mail message .

creates a new { @link karyonserver } that delivers the specified { @link } to the given { @link } .

loads properties from a file .

set properties for properties .
returns a stream that is a protocol - level protocol .
check if the is a

send heartbeat heartbeat to the heartbeat .
<! -- begin - user - doc -- > <! -- end - user - doc -- >

<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
creates a message from the given message .

<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
add the specified { @link } to the list of .
add a message to the given action .
add a new validation execution .
reads a record from the given record .
decodes a { @code string } into a { @code string } .
/ * ( non - javadoc )
{
{ @link specification } for retrieving { @link distributionset } s by a given { @link } .
{ @link specification } for retrieving { @link distributionset } s by a given { @link distributionset } .
{ @link specification } for retrieving { @link distributionset } s by name .
{ @link specification } for retrieving { @link } s by key .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >


checks if the given user is a window of the window .
creates a new tab with the given name .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
this method is called when the is below the search box .
{ @link specification } for retrieving { @link distributionset } s .
{ @link specification } for retrieving { @link distributionset } s by { @link distributionset } .
{ @link specification } for retrieving { @link distributionset } s .
compress a byte array into base64
returns the maximum number of bits in the given { @code long } .
check if the zookeeper has already been deleted .
returns a new { @link } instance that will be used to acquire a { @link } .
acquires a mutex lock lock .
generates a new zookeeper ticket key .
releases the lock .

waits for a node to be deleted .

check if the node is a node with a given number of nodes .


adds a new hole to the given location .
check if the current page is valid .


returns the target types for the given action .
{
remove all the data from the queue .
compute the distance between two vertices .



decorate the given {
visits a { @link } with the given { @link } .

parse the given { @link } to the given { @link } .


returns the { @link } that is used to determine the .
{
/ * ( non - javadoc )
{
{
decodes a { @code bytebuf } header from the { @code bytebuf } header .
decodes a header and returns a object .
read a from the given address .
convert a port number to a port .
check that the given is valid .
{
{
close the connection .
calculates the for the given .
returns the for the given source .
returns the set of transitive dependencies for the given set of dependencies .
get the for the given connection .
process a single byte buffer .
registers a binding for the given { @link } .
resolve all the { @link } s by the given { @code } .
creates a new { @link } with the given { @link } .
create a new with the given name and method name .
creates a method with the given name and type .
returns true if the given method is a getter method .


iterate through all methods that are not in the target .

{
run the given build and executes the results .
publish the files to be installed on the given directory .
creates a report of the report files .

creates a summary for the given .
returns the name of the file in the file .
process a message .
write the contents of the given byte array to the stream .
calculate the best line for the given .
initialize the probability for the given probability .
sets the input buffer .
get the string representation of the given number of bytes .
returns a <code > string< / code > value for the specified character sequence .
sets the stream for the given { @code instream } .

sets the number of bytes to the given position .
{
initialize the connection .

add a host to the list of host
reset the current host and expire time .
sets the current state of the master .
<p > . < / p >
returns true if the given method is a method .

{
returns a port of { @link } s for the given port .
computes the specified number of rows and cols .
compute the for a given colour .
{
fetch the from the given repository and return it .
creates a new { @link bytebuf } from the given { @link bytebuf } .
encodes the header into the response .
decode the given object .
find the next line in the buffer .

process a single message .
initialize the profiler frame .
returns the name of the .
{
flush the input to the underlying outputstream .
returns the { @link } for the given { @code version } .
parse a range of strings from a string .
removes the head of this .
{
{
get a connection from the connection .
sets the content - type header to the given content type .
parse the body body and return the response body .


skips the next chunk of bytes from the input buffer .
find the first chunk of the given chunk of bytes .

/ * ------------------------------------------------------------
{
cleans up the mapping from the http method .
reads the next line from the given { @code reader } .
reads the next chunk of the given chunk and returns it as a string .
/ *
removes the from the .
updates the number of in the current state .
/ *

render the
prepare the destination destination for the destination .
move the specified coordinates to the given location .
check if the given point is a point .
check if the given point is inside the chart .
check if the is a .
check if the is a .
called when the user has been disconnected .
get the from the given location .
returns the number of steps in the current step .
{
{
populate the data with the given column and column index .
converts a { @code int } array to a { @code int } array .
creates a new for the given { @link } .
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
returns the number of bits in the hash table .
/ * ( non - javadoc )
/ * ( non - javadoc )

/ * ( non - javadoc )
returns a list of the that are associated with the given name .
returns a collection of the that are assigned to the specified location .
/ * ( non - javadoc )
splits a string into a string .
{
returns the key row key from the row .
get the value of the row from the row col .
returns a new instance .
sets the filter to the given filter .
initialize the draggablepanel .
sets the .
transform the transform to a transform .
renders the screen .
free the resources .
insert a record to the table .
returns a new array containing all the indices in the order of the specified { @link } .
creates a new { @link } instance with the given { @link } .
get the system property system property .
sets the random { @link } .
performs a lazy evaluation for a lambda function .

gets the value of the trigger property .
<p > returns the value of the specified component property . < / p >
gets the value of the property .
adds a component to the component .
adds a component to the component .
add a new to the list of
remove a from the feature
update the list of .
clear the and delete the list of listeners .
update the list of parameters .
{
serializes an { @link outputstream } into an { @link outputstream } .
creates a { @link xmlreader } from the given { @link inputstream } .

returns an array containing the elements in the array .
copy the input stream into the output stream .
create a new instance .
creates a new { @link } with the given genes .
create a new { @code } with the given genes .
create a new { @code } with the given genes .
create a new { @code integerchromosome } .
create a new { @code integerchromosome } .
copy the contents of the input stream into the output stream .
copy the input stream to the given outputstream .
process a stream of input stream and returns a stream of { @link } .
process the input stream .
this method is used to get the cached cache header .
create a new header .
/ * ( non - javadoc )
get the cached cached cache object .
returns the token as a byte array .

disposes the connection and disposes the resources .
applies the specified arguments to the specified value .
/ * ( non - javadoc )
converts a regular expression to a string .
decode a set of properties .
decode a set of codepoints to a .
compares this { @link } with the given state .
returns a { @code collector } which applies a collector function to each element of the input stream .
{
combine two dfas with other { @link } .
{
returns a constrained {
computes the probability distance between two sets .
{
returns true if the given { @link } is equal to the given { @code } .


{
copies the data from the given copies .
creates a new { @link } from the specified byte array .
copies the data from the given { @code } to the given { @code bytebuf } .
sets the field on the specified field .
>
add a colour to the direction of the specified direction .
add a new line to the current position .
sets the value of the gauge .
sets the last modified bit of the last modified bit of the last modified bit .


updates the object .
returns a { @code } representing a date in the given { @code calendar } .

parses the number of seconds and seconds to a { @code chronounit } .

check if the current node is a full node .
pushes the node to the node .
removes the node from the stack .
create a new { @link } from a { @link } .
creates a new { @link } from a { @link } .
traverses the node by node .
checks if the node is a node with the given type .
removes a node from the list of nodes .
add a new node to the list of nodes that are associated with this node .
get the id of the item id .
remove a node from the list of nodes .
/ * ------------------------------------------------------------
get the byte array data from the stream .
writes the data to the given byte buffer .
get the data data for the data .
sets the state of the given state .
returns the state of the given context .
{

sends a message to the server .
sends a message to the data .


build the list of .
performs the following operation : <br > <br > > = > k< = > > > > > > > > > > > > > > > > > > > > > > >
get the endpoint information for the endpoint .
initialize the endpoint information for the given endpoint .
initialize the endpoint for the given endpoint .
check if the given { @code } is { @code true } .
get the endpoint for the given endpoint id .
this method is used to check the endpoint of the given endpoint .
/ * this method is used to determine the list of endpoints that are members of the endpoint .
creates a regex regex regex for the regex .

check if the image is aligned .
extracts the image from the image .
get the tile number for the given tile .
extracts the from the passed in document list .

checks if the given { @code } is a { @link } .
create a new { @link } .
create a new { @link } with the given { @link } .
creates a new { @link } from the given { @link node } .
transform a tree of trees into a tree .
returns the number of elements in the given array .
normalize the array array .
divides the given { @code double } value using the specified divisor .

returns the value of the specified double value .
returns the value at the specified position in the current position .
selects the offspring population of the given { @link bloomfilter } .
get a {
expand the given pattern using the specified separator .
expand the char array .
returns a { @code } that is used to encode the given { @code input } into a { @code char } .
{
inserts a child of this node .
replace the treenode with the given child .
removes the treenode at the specified index .
remove a path from the path .
replaces the child with the given path with the specified path .
removes the child from the tree .
removes all children of the children of this node .
add a record to the list .
insert a record to the disk .

attaches the specified { @code } to the given { @code node } .
attaches the given { @code } to the given { @code } .
maps the values of the given function to the mapping of the mapping to the provided { @code function } .
returns a { @code } that applies the specified mapping to the provided { @code function } .
returns a { @code treenode } that will be used to convert the treenode to a tree of the tree .
parse the given { @link astnode } with the given { @link string } .
parses the given { @link function } into a { @link } .
{
grows the capacity of the capacity .
returns a { @link dateformat } instance that uses the specified locale as a { @link } .
get the fields for the given class .
returns the name of the type of the given class .
sets the { @link } that will be used to configure the { @link } .
returns true if the is a valid .
calls { @code ( throwable ) } and { @code } .
returns a { @code predicate } that returns the { @link } that satisfy the given predicate .
returns a { @code } whose value is { @code true } .
merges the specified pair of elements into a single pair of the two sets .
<p > apply the specified number of elements to the downstream input stream . < / p >
<p > apply the operator to perform the accumulation of the specified accumulation function . < / p >
{
{
{
{
{
{
{
{
{
{
{
returns a { @code } that is a { @code } .
adapts a { @code } to a { @link funcn } to say if it is not a { @link } .
get the date value of the date picker .

adapts a throwable to a { @link runnable } .
adapts a runnable to a { @link runtimeexception } .
returns a left - fold right left left right - wise right - wise and right and right .

returns a view of the specified element in the list .
returns a new { @link joiner } that will be used to average the items of the given { @link } .

adds a radio button to the radio calendar .
sets the text field value .
change the date of the datepicker and the date / time .

initialize the components of the panel .
{
draws the text box .
compares two objects with the same value as the first element of the object .
returns the number of the .

returns the first element in the list .
get the screen .
get the for the given location .
get the screen .
<p > . < / p >
<p > . < / p >
returns the date as a string .
<p > . < / p >
get the coordinateaxis corresponding to the specified direction .
check if the date is a valid date .
returns true if the component is pressed .
returns the index of the first occurrence of the specified substring within the specified text .
returns the number of classes from the given { @code } .
returns the java class from the given { @code file } .
sets the default user s default table .
run the command line options .
main method for printing the command line arguments .

stop command line args
cancel the command and then execute the command .
decodes a column from a string .
decodes a { @link } into a { @link } .
parses a column from a column .

/ * private methods ------------------

this method is used to determine the for the given command .
builds the program program for the given file .
handle the .
handles a { @link throwable } to process the error code .


parses the arguments and return the parameters .
main method to run the configuration .
get the directory configuration from the configuration file .
get the list of for the given locale .
sets the for the .
returns the command line arguments for the specified command line arguments .

joins the given with the given type .
join the join with the given join type .
returns a { @link } that is a { @link } .
transfer all the to the file .


{
returns the value of the given .
check if the given segment is a valid .
find the best match for the given range .
returns a stream of all elements of this stream .
split the given stream into a { @link } .
{
sets the input stream for each element of the given stream .
creates a windowed stream of { @link datastream } .
creates a { @link keyedstream } that wraps a { @link keyedstream } with the provided { @link } .
writes the given { @code path } to the given { @code path } .
writes the specified { @code socket } to the given { @code socket } .
adds a { @link } to the given sink .
resolves the artifact from the maven artifact .

parses the command line arguments .
executes a command line on the command line .
get the pid for the given pid .
check the process engine for the given process engine .
execute the command line and returns the command line arguments .
execute the command line arguments .
execute the script .

returns a { @code a } .
returns a copy of the given { @code } with the specified { @code } .
{
{
returns a new { @code } containing all the { @code } objects .
check if the file is a file .
reads the next value from the stream .
{
closes the underlying stream .
returns a new {
parses the input string into a list of strings .
marshall the given parameter object .

{




get the resource as a string .
creates a new { @link } object from a { @link } object .
reads the contents of the given reader into a { @link reader } .

trims the input string by the given character .
scans the next token in the list of tokens .
{ @inheritdoc }
compacts the segment and the segments .
{
compares this { @link comparable } with the specified value .
set the for the given .
creates a new cipher with the specified iv key .
creates a new { @link cipherlite } for the given { @link secretkey } .
opens the file and returns the file .
returns the list of objects .
caches the statistics associated with the specified index .
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{ inheritdoc } .
{
find the column with the given column and column name .
/ * ------------------------------------------------------------
returns true if the rows of the resultset is a resultset .
returns true if the resultset is in the resultset or the cursor .
returns true if the row is a row .

returns true if the rows of the resultset is in the database .
{
{ inheritdoc } .
{ inheritdoc } .
{
{ inheritdoc } .
{ inheritdoc } .
{
{
{ @inheritdoc }
set the value of the designated column to the specified string .
{ inheritdoc } .
{ inheritdoc } .
{ inheritdoc } .
{
adds a new to the set of current time .
sets the maximum number of the .
sets the number of milliseconds in the .
{
handles a single event from the given event .
factory method for creating a new trigger trigger to { @link } .
add a new hole to the list .
sets the element at the specified position in the specified position .
inserts the specified element at the specified index in the list . shifts the element currently at the specified position .
returns a list with all the values of the specified { @code int } array .
returns a new array with the specified length in the array array .

calculates the mean value of a given .
searches for a dense vector by applying a search transformation .
searches for the neighbors of the flatdatacollection .
returns the next pseudorandom { @code int } .
this method initializes
this method initializes the instance .
this method initializes the fax client spi .
initializes the fax job action .
this function will submit a new fax job .
this function is invoked by the fax job id .
this function will resume a new fax job from the fax job .
this function will cancel a new fax job .
this function returns the fax job status from the fax job id .
this function creates a new fax client spi .

this function updates the fax job from the fax job .
executes a process and returns the output process .
copies the properties from the given source to the target map .
creates a new fax job .
replaces the specified value of the given parameter with the given parameters .

decodes the given url into a url .
this function returns the fax job parameter .
returns the type of the type of the given type .
get all selectable renditions in the list of { @link } .
adds a new binding to the list of .
adds a new binding to the list of .
remove the specified from the list of
removes a { @link } from the list of { @link } s .
clear all evidences in the context
disposes the resources .
returns true if the specified {
returns a new graph with the specified vertex name and type .
assign a vertex to a vertex .
{
{
{
returns a new { @link graph } for the given type .
returns a vertex that is backed by a vertex vertex .
read a number of lines from a file .
read a block from the given reader and set the value of the .
read a single block from the given datainputstream .
read a single block from the given reader .
read a file and return the result as a set of lines .
read a single line from the given reader and returns the result .
reads the contents of a { @link } with the given delimiter .
read the contents of the given { @code path } into the specified { @code path } .
read a file from the given path and returns the result .
read a reader from the reader .
read the contents of the given { @code path } into the { @code path } .
read a reader from the reader .
sets the value of the given vector .
sets the mean value of the given proposition as the mean value .
sets the aggressiveness of the .
sets the value of the gauge .
returns the inverse of the given vertex .
calculates the for the given .
update the given with the given parameters .


update the of the given .

compute the of the
returns the number of bytes in the table .
this method is called by the process to send the output to the .
process the command .
returns the index of the keys in the set .
returns the integer value associated with the specified key .
get the float value for the given key .

increment the index of the idx th index .
<p > add a new matrix to the specified position . < / p >
aij + row =
add a row to the row .
alters the row col in the row .
alters the given complex matrix that is a symmetric matrix .
<p > performs the following matrix : <br > <br > a = a + b <br > <br > a = 1 + 1 + 1 + 1 + 1 + 1 + 1 . 0 + 1 . 0 + 1 . 0 < / p >
divides the given double into a double .

add a column to the matrix .


aij - matrix = a + n * + c * > a = a * b + c
{

swap the rows of a matrix .
swap the rows of a matrix .
swap the rows of a matrix .
fills a row from the given row and col .
creates a string representation of the specified string .
computes the complex number of complex numbers in a complex number .
returns a new complex number in a { @link } .
returns a new complex number in a complex - based complex number .
copy the given to the given .

sets the tolerance to be used as a double .

compute the value of the given function .
sets the maximum number of active sessions .
add the history to the history .
returns the list of available resources .
adds a new datapoint to the list of objects .
<pre > alpha value of { @link } . < / pre >
get a pair of data points that are the data point in the given range .
returns a list of all the data in the list of .
creates a new { @code } instance containing the specified column .
sets the gaussian distribution with the specified amount .
converts a x - major number into a number of digits .
<p > converts a double - precision floating point numbers to a number of precision and the mean / v1 / gamma / gamma / gamma / gamma / gamma / gamma / gamma / gamma / gamma / gamma / gamma / gamma / gamma / gamma / gamma / gamma / gamma / gamma / gamma / gamma / >
sets the width of the image .
sets the width of the column .
loads the attributes from the resourcemodel .
create a new element with the specified styles .
<pre > the path to the path . < / pre >
<pre > the path to the path . < / pre >
sets the image to be used for the given image .

sets the number of times the given strategy is used to store the given number of times .
--------------------------------------------------------------------------------------------
check if the flag is true false otherwise .
disable the .
sets the .
validates that the configuration is valid for the given configuration .
creates a new { @link } with the given properties and values .
merges the given keys and values into the given { @link key } .
get the producer configuration from the given configuration .
returns the text of the given text .
updates the font and the font .
update the font .
draw a css style for the given css panel .
calculates the length of the given { @link } that is the difference between the two specified offsets .
returns the angle between the two longitudes .
get the for the given font .
returns the for the given font .
returns the last modified appearance of the given .
validates the configuration file .
returns a string representation of the specified { @link } .
prints a bigdecimal to a string .
sets the { @link } for the specified { @link datetimezone } .
<p > checks if the specified timecode is a valid monetary value . < / p >
parses a text from the given text and returns a new { @link edittext } .
prints the result of the given { @code appendable } .
configures the configuration of the configuration .
------------------------------------------------------------------------
sets the paths for the given configuration . <p >
get the paths of the requested file .
get the options for the .
get the options for the .

creates a new instance of the given type .
<p > . < / p >
sets the { @link } .
sets the {
sets the value of the {
sets the name of the field .
sets the field name for the given field name .
sets the { @code } .
sets the { @code } and { @code } .
<p > sets the { @link } for the { @link } . < / p >
creates a new instance for the given object .
sets the { @link resiliencestrategy } for the given { @link classloader } .
sets the cache loader for the cache .
sets the { @link keyfactory } for the cache .
sets the cache loader for the given loader .
sets the { @link copier } for the { @link } .
adds a new { @link listener } to the cache .
adds a { @code } to the { @code } .
adds a new { @code listener } to the { @link } .
sets the policy used to use for the policy .
sets the retry interval .
sets the maximum number of seconds to the given { @code long } .
sets the { @code future } to the { @code } .
{
sets the { @link } for the given { @link } .
sets the { @link } for the given { @link context } .
sets the { @code } and { @code } .
<pre > message to be included in the list of violations that are not successfully deleted . < / pre >
<pre > message to be used in the future . < / pre >
sets the time for the given time .
sets the { @code } and { @code } .
生成缓存 key
生成缓存
sets the { @link } for the given { @link } .
<pre > message for specific api . < / pre >
<pre > message configuration . < / pre >



merge two sets of and .

get the list of calendar names for the given year .

{ @inheritdoc }
returns the version of the .
returns the { @link } object that is used to format the { @link } .

returns the memory size of the memory memory .
returns the size of the memory allocation .
returns the version of the .
returns the { @link } for the given { @link } .
returns the first option in the array .
returns the maximum number of bytes that are read from the file .
logs the info log .
{ @link } bean .
checks if the foreign key exists and is a constraint constraint .
creates a new { @link } with the given id and the id of the given id .
checks if the table exists in the table .
execute the command and execute the command .
returns the foreign key columns of the foreign keys . <p >
{ @inheritdoc }
adds a new { @link } to the provided { @link } .
get the type of the field .
{
returns the column usage for a given column . <p >
/ * ( non - javadoc )

returns true if the given { @link } is { @code null } .
returns true if the first element is a valid integer .

get the current state of the current state .
initializes the animation .
sets the title of the gauge .
sets the text value .
sets the sections to the list of sections . sections for the sections are set to the current list .
adds the sections to the list of sections .
removes the sections from the list of sections . sections are removed from the list .
defines if the sections should be drawn .
defines the tickmark sections .
sets the list of tickmark sections .
adds the gauge to the set .
remove the areas from the gauge .
defines if the gauge is a gauge .
defines the highlight color .
cleans up the object .
defines if the title of the gauge is shown .
defines if the text is a rich text text .
defines if the date picker is a valid color .
sets the mode to be used for the current mode . <p >
sets the background color of the gauge .
sets the border paint .
defines if the led is visible .
sets the insets for the gauge .
sets the color that will be used to colorize the gauge .
defines the color that will be used to colorize the tickmark text .
converts the given object to json .
sets the width of the gauge .
defines the color that will be used to colorize the gauges .
defines if the led is a valid tickmark .
defines if the led is a chart .
defines the color that will be used to colorize the tickmark .
defines the color that will be used to colorize the tickmark .
enable or disable the current gauges
defines if the gauge is a gauge .
/ * ( non - javadoc )

enables the lcd colour for the led .
sets the location of the gauge .
enable or disable the gauge .
returns the fieldpositions of the .
sets the font .
check if the alarm is a alarm .
check if the date is valid .
******************** initialization ************************************
******************** methods *******************************************
******************** resizing ******************************************
creates a default .
******************** initialization ************************************
******************** methods *******************************************
returns true if the given value is a valid color .
<pre > list of all consumers . < / pre >
<pre > a producer - only destination destination topic . < / pre >
<pre > {
<pre > the producer configuration for the specified destination . < / pre >
<pre > list of all consumers in the specified destination . < / pre >
<pre > all the destinations that are configured on the specified . < / pre >
<pre > this operation sets the data to the specified destination . < / pre >
<pre > this operation sets the value of the specified type . < / pre >

get the format for the given .
returns true if the style of the given style is a css style .
get all the locales that are available in the bundle .
get the singleton instance of the .
checks if the given string is a valid style .
loads the css style .
check if the given string is a valid xtext .
returns the html for the given xml document .
sets the output output output format for the specified output file .
set the flag
sets the name of the .
registers a new .
creates a list of all the ids for the given ids .




creates a new instance from a given style .
create a new with the given id .
******************** initialization ************************************
******************** methods *******************************************
{
sets the value of the specified attribute .
returns the value of the specified attribute .
sets the value of the radio radio button .
set the value of the specified element .
returns the first element in the list .
set the icon for the given type .
sets the content of the given content .
returns the value of the specified attribute .
sets the hidden field .
returns the cause of the given exception .
set the properties for the given properties .
parses all { @link } instances .
parses a list of { @link file } objects from a { @link file } .
parses the input stream into a list of { @link } .
******************** initialization ************************************
******************** methods *******************************************
sets the value of the gauge bar .
creates a new for a given pattern .
checks if the given { @link } is empty .
applies the given { @link datastream } to the output stream .
applies the { @link } for the { @link } .
applies the { @link } for each output stream .
{
get the log table for the given log file .
/ * ( non - javadoc )
{
creates a new { @link } instance for the given { @link } .
returns the next available port number .
{
fires a new on the specified handlers .
creates an intent that will be used to show the activity of the activity .
creates an intent that will launch the intent to be shown when the intent is running .
creates an intent that is used to create an intent to be used for the given intent .
add the specified class to the list of bootstrap classes .
sets the { @code } .
returns the capabilities of the app engine .

returns the value of the given key or null if not found .
creates a new with the specified number of samples .
create a new number of data from a given region .
create a new array with all the neighbors and the number of factors in the specified array .
creates a new distribution with the specified number of samples .
merge the specified merge and the given merge and the given merge and the given merge strategy .
{ @inheritdoc }
returns the { @link } for the given { @link } .
returns the constructor for the given class .
write the message to the output .
serialize a session to the given session .
{
{
serialize the given session to the given session .
creates a for the given { @link } .
encodes the given number of bytes into a byte array .
creates a { @link } that uses the { @link } to use for the { @link } .
/ * ( non - javadoc )
find the next record in the list .
{
parses the given input stream and returns the { @link } .
read the entry from the reader .
{
parses a line from the given { @code string } .
<p > . < / p >
creates a new thread if it is already started .
{
finds the index of the first occurrence of the given message .
{
{
returns the number of rows in the table .
returns the next available memory segments .
returns a copy of the buffer .
this method is used to check the validity of the size of the network .
close the mmap .
free the memory allocated in the current thread .
returns the hash of the specified hash code .
creates a new { @link } that is used to create a new { @link } .
/ * ( non - javadoc )
{
writes a variable to the output stream .

returns the number of lines in the given range .
creates a new { @link } instance for the given { @link } .
restores the state of the state of the given {
registers a new { @link } for the given { @link } .
opens a new {
flush the queue to disk .
creates a producer producer .
add a new to the

installs the given { @link } to the given { @link dataset } .
main method .



get the for the given and .
determine whether the given method is a getter method .
returns a { @link fielddescription } that maps enums to be a field of enum constants .
adds the specified field to the given { @link } .
<p > . < / p >
checks if the input field is a valid type of field .
open a new { @link } .
open the and the .
close all buffers and releases all the buffers .
create a new partition table .
clear all garbage collector .
releases all allocated clusters .
partitions the and the of the .

this method is used to check the validity of the size of the file .
returns the number of bytes written .

returns the number of tiles that is currently running .
returns the slot for the given slot .
returns the lowest slot of the slot for the slot .
removes the slot from the slot .
/ * ( non - javadoc )
returns a list of the available { @link } s by the given amount .
sends a { @link } to the stream .



returns the { @link } for the given element .


parses a duration value .

prints the files in the given { @code } .
generate the for the given .
{
disposes the shutdown hook .
shutdown the shutdown hook .
checks if the given list of { @link } is { @code true } .
scans the next scan .
/ * ( non - javadoc )

{
cancel the
returns true if the given table is a valid record .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a broadcast channel to the dataset .
creates a from the given string .
open the command .

parses command line and returns the command line .
creates a default { @link } .
joins the given string builder with the given separator .
writes the content of this <code > / code > to the <code > / code > .
process a line of a line .
write the byte array into the specified byte array .
get the class for the given class .
tokenize the given string .

the given score with the given separator .
the given score with the given score .
adds a task to a task group .
{
pushes the current token to the current thread .
{
writes the zookeeper information for the cluster .
{
creates a filter that applies the provided { @link intent } to the { @link intent } .

close the connection .
closes a connection .
writes the content of the output stream to the output stream .
creates a javascript function that encodes the given { @code descriptor } to a { @code } .
converts a { @link sanitizedcontent } of { @link sanitizedcontent } of { @link sanitizedcontent } of { @link } to { @link } .
sets the { @link } to be used for the { @link } .

{
returns the address of the server .
shuts down the server .
creates a directory for the given file .
check if the file is pkcs12 .
returns the string at the specified index .
resets the data buffer .
{
this method is used to compare the data array to the given range .
returns a copy of this iterator with the smallest number of rows .

create a new instance .
converts the given { @link inputpreprocessor } to a { @link typeinformation } .
returns the location of the file in the file system .
deletes the specified file .
{
resolve the expression to resolve the given string .
sets the global directory for the global directory .
sets the .
rewrite the given to the given .
report a error .

write the code to the current stack .
print the trace of the logger .
get the content of the given string .
checks if the given string is a qname or an empty attribute .
returns a { @code } for the given { @code stringvalue } .
<p > decodes the given regular { @code } . < / p > <p > defaults to <code > s< / code > . < / p > <p > the text must not be specified by the { @link } < / p > <p > if the text is not specified the given regular expression is returned .
returns a { @link } that applies the given separator to the given { @code safehtml } .

returns a { @code } for the given { @code uri } .
returns a { @code } for the given { @code } .
returns a constant that is used to convert the given constant name to a constant pool .
returns a { @code } constant for the given { @code value } .
returns a constant that is a constant value of the given constant .
returns the uri of the given { @link } .
returns the font number of the font .
writes the font definition .

creates a new for the given type and value .
returns a { @link } that encloses the given content .

returns a script that is used to render a script from a script .
returns a script wrapping the script and returns the script wrapping if it is not already present .
returns a { @link } that is used to convert the given { @link sanitizedcontent } of { @link } to a { @link } .
creates a { @link } from the given { @link } .

returns a { @code } that is used to convert the given url to a { @link } .

returns the url of the given url using the given url .
validates the given resource against the given resource .
resolve the { @link appendable } for the given { @link appendable } .
<p > logs the message to be used for the specified logging . < / p > <p > the logging is used to determine the value of the . < / p >
creates a safestylesheet from the given { @code } .

creates a new .
generate a message for a literal .
generate a for a given node .
builds a message from the message namespace .
build the message for the message .
builds the message body for the message .
generate the message for the given instruction .
generates code that checks the { @link } for the given { @code label } .
helper method for subclasses to use the { @link } for the { @link } .
method to generate a for the given node .
for the given message and return the message for the given message .
/ * returns the name of the form of a field name .
generate a bracketed message for the node .
{
returns a new instance .
add a string to the set .
checks if the given char contains a range of characters .
adds a new page label to the page .
adds a label to the page .

returns the pdf of the pdf of the given tag .
gets the pdf of the specified page .
--------------------------------------------------------------------------------------------
closes the underlying resultset .
{

<p > . < / p >
<p > . < / p >
get the constructor for the given class .
returns the first accessible constructor for the given method .
finds the best matching parameter type for the given class .


returns a writer for the given { @code } .
get the { @link } for the given { @link } .
multiplies the matrix elements .
writes the pdf document to the output stream .
sets the key to the specified object .

gets the dictionary for the given key .
returns the array for the given key .
returns the stream for the given key .
returns the specified { @code } .
returns the value of the specified key .
returns the name of the specified key .
returns the associated with the specified key .
get the reference to the specified reference .
{
returns the ids of the given job ids .
creates a new slot for the given slot id and returns the number of slots in the given subtask .
returns a new { @code slot } that is used to allocate a slot for a given slot id .
marks the active tracker .
check if the current thread is paused the current thread .
returns the slot for the given slot .
check if the given { @code } is valid .
checks if the given slot is a checkpoint id .
marks the specified slot if it is active .
returns the { @link } for the given { @link jobid } .
{
{
get the task instance .
{
returns the slot for the given slot id .
{
this method is called by the scheduler thread to execute the jobtracker .
execute the given job and executes the given arguments .
get the plan for the given topology
creates a plan for a plan .
{
{
deletes the commerce notification queue entry with the primary key from the database .
updates the commerce notification queue entry in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
converts a string to a { @code string } .
convert a float float into a float .
convert a double to a double .
converts a byte array into a byte array .
converts a short into a short .
creates a number of digits and returns the number of digits in the given string .
<p > . < / p >

create a { @code int } from a string .

creates a biginteger from a string .
creates a bigdecimal from a string .
returns the minimum value of the specified array .
returns the byte array as a byte array .
returns the minimum value of the specified array .
returns the minimum value of the specified array .
returns the maximum value of the specified array .
returns the maximum value of the given array .
returns the maximum value of the given array .
returns the maximum value of the given array .
returns the minimum value of the specified minimum number .
{
returns the maximum value of the two - dimensional long value . if the max value is not in the range the maximum value is returned .
checks if the given string is a valid string .
{
{
returns the value of the given option as a key .


normalizes the specified element to the specified value .
rotates the specified rectangle .
returns true if the border indicator is equal to the specified width .
updates the border of the border of the border .
returns the shadow nearest neighbors for the bottom of the viewport .
updates the track position of the mesh .
this method is called by the interface .
aggregates the given aggregation mutations and returns the result .
sums the specified field in the given tuples .
returns the maximum value of the specified field .
returns the minimum value for the specified field .
sorts the given { @link order } by applying the given { @link } to the order of the { @link } .
sorts the given { @link keyselector } using the specified keyselector function .
{
{
{ @inheritdoc }

creates a new .
get the full path for the given prefix .
returns the first occurrence of the specified tag .

returns the type of the given type .
returns the type of the given type .
sets the dynamic remote service .
sets the cp organization rels remote remote service .
sets the cp definition link remote service .
sets the cp definition link remote service .
sets the cp link local service .
sets the local local service .
sets the remote service .
generate checkpoint checkpoint checkpoint .
adds the commerce wish list to the database . also notifies the appropriate model listeners .
returns the commerce wish list with the primary key .
deletes the commerce wish list with the primary key from the database . also notifies the appropriate model listeners .
deletes the commerce wish list from the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns the commerce wish list matching the uuid and group .
returns all the commerce wish lists matching the uuid and company .
returns an ordered range of all the commerce wish lists matching the uuid and company .
returns the commerce wish list matching the uuid and group .
returns a range of all the commerce wish lists .
updates the commerce wish list in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
sets the commerce wish list item local service .
returns the first cp option value in the ordered set where uuid = &#63 ; .
returns the last cp option in the ordered set where uuid = &#63 ; .
returns the cp option where uuid = &#63 ; and groupid = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
removes the cp option where uuid = &#63 ; and groupid = &#63 ; from the database .
returns all the cp option values where uuid = &#63 ; and companyid = &#63 ; .
returns the first cp definition option value in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the first cp option in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the last cp option in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns a range of all the cp option values where groupid = &#63 ; .
returns the first cp option value in the ordered set where groupid = &#63 ; .
returns the first cp option in the ordered set where groupid = &#63 ; .
returns the last cp option in the ordered set where groupid = &#63 ; .
returns the cp option values before and after the current cp option in the ordered set where groupid = &#63 ; .
returns a range of all the cp option values where companyid = &#63 ; .
returns the first cp option value in the ordered set where companyid = &#63 ; .
returns the first cp option in the ordered set where companyid = &#63 ; .
returns the last cp option in the ordered set where companyid = &#63 ; .
returns the cp option values before and after the current cp option in the ordered set where companyid = &#63 ; .
returns a range of all the cp option values where cpoptionid = &#63 ; .
returns an ordered range of all the cp option values where cpoptionid = &#63 ; .
returns the first cp definition option value in the ordered set where cpoptionid = &#63 ; .
returns the last cp option value in the ordered set where cpoptionid = &#63 ; .
returns the last cp option value in the ordered set where cpoptionid = &#63 ; .
returns the first cp option in the ordered set where cpoptionid = &#63 ; .
returns the cp option where cpoptionid = &#63 ; and key = &#63 ; or returns <code > null< / code > if it could not be found .
removes the cp option where cpoptionid = &#63 ; and key = &#63 ; from the database .
returns the cp option where companyid = &#63 ; and externalreferencecode = &#63 ; or throws a { @link } if it could not be found .
returns the cp definition option value rel where companyid = &#63 ; and externalreferencecode = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
removes the cp option with the primary key from the database . also notifies the appropriate model listeners .
returns a copy of this period with the specified period . <p > this returns a copy of this period with the specified period . <p > this method subtracts the specified period with the specified period . the years and the number of days in the period will be ignored .
returns the next instant of the given time .
sets the data .
sets the data to the data .
{
add a file to the file .
updates the cp definition link with the primary key from the database . also notifies the appropriate model listeners .
creates a new cp definition link with the primary key . does not add the cp definition link to the database .
deletes the cp definition link from the database . also notifies the appropriate model listeners .
deletes the cp definition link with the primary key from the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns the cp definition link matching the uuid and group .
returns all the cp definition links matching the uuid and company .
returns a range of cp definition links matching the uuid and company .
returns the cp definition link with the primary key .
returns a range of all the cp definition links .
updates the cp definition in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .

register a message handler for the given message handler .
unregister a message handler .

notifies the { @link } to report a new file .
sets the labels for the given label .
sets the filter to be used by this filter .
updates the layout of the layout .

loads the folder from the given folder .
returns the first commerce price list account rel in the ordered set where uuid = &#63 ; .
returns the last commerce price list account rel in the ordered set where uuid = &#63 ; .
returns the first commerce price list account rel in the ordered set where uuid = &#63 ; .
returns all the commerce price list account rels where uuid = &#63 ; from the database .
returns the commerce price list account rel with the primary key from the database . also notifies the appropriate model listeners .
returns the commerce price list account entry where uuid = &#63 ; and groupid = &#63 ; or returns <code > null< / code > if it could not be found . uses the finder cache .
removes the commerce price list account rel with the primary key .
returns the first commerce price list account rel in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the last commerce price list account rel in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns all the commerce price list account rels where uuid = &#63 ; and companyid = &#63 ; from the database .
returns all the commerce price list account rels where commercepricelistid = &#63 ; .
returns a range of all the commerce price list account rels .
returns the first commerce price list account rel in the ordered set where commercepricelistid = &#63 ; .
returns the last commerce price list account rel in the ordered set where commercepricelistid = &#63 ; .
returns the commerce price account rels before and after the current commerce price list account in the ordered set where commercepricelistid = &#63 ; .
removes all the commerce price account rels where commercepricelistid = &#63 ; from the database .
returns the commerce price list account rel with the primary key from the database . also notifies the appropriate model listeners .
returns the commerce price list account rel with the primary key from the request if it could not be found optionally using the finder cache .
removes the commerce price list account rel with the primary key from the database . also notifies the appropriate model listeners .
caches the commerce price list account rel in the entity cache if it is enabled .
caches the commerce price list account rel in the entity cache if it is enabled .
clears the cache for all commerce price list account .
deletes the cache for the commerce price list account rel .
returns a range of commerce price list account rel with the primary key .
calls the default locale .
/ * ( non - javadoc )
{
removes the commerce price list account rel with the primary key from the database . also notifies the appropriate model listeners .
returns the commerce price list account rel with the primary key or throws a { @link com . liferay . portal . nosuchmodelexception } if it could not be found .
returns the commerce price list account rel with the primary key or returns <code > null< / code > if it could not be found .
returns all the commerce price list account rels .
returns a range of all the commerce price list account rels .
read the data from the file .
{
sets the file name for the file .
updates the icon color icon .
returns a list of the type of the given type .
returns a collection of objects that can be used to instantiate a collection of components .
render the pdf file .
loads the application template engine from the specified template .
list the templates for the specified application .
creates a new application application .
returns all application packages for the given application .
shuts down the application .
logs the login message .
huawei api client
parse a bean from the given bean .

sets the field names to the field .


{
{
returns a new { @link record } that contains all of the fields in the specified key .
{


{
{

serializes the given { @code instream } to a list of { @code } .
parses the given json into a json array .
parses the given input stream into a single byte array .
parses the input stream into a single input stream .
parses a json - ld stream into a { @link } .
parses the input json into a json object .
parses the given reader into a { @link reader } .
parses the given json input into a json object .
parses the given json input into a json object .
get a log by name .
get a log object for the specified log .
creates a instance .
creates a new instance .
converts the given { @link } to a list of { @link } .


add lines to the file .
validates the configuration .
parses a list of objects .
parses the given { @link file } object .
check if the given { @link } is a valid { @link } .
check if the tag is in the form of a tag .

check if the specified is a valid .
create a new if it is not already in the cache .
create volume from a volume .
this method is used to determine if the specified volume is a valid .
returns true if the volume is a valid storage account id .
this method retrieves the from the .
attach a new volume to the .

{
returns a new { @link } instance for the given { @link } .
returns a { @link } that can be used to create a { @link } .
creates a graphics2d instance with the graphics graphics color .

get the y y coordinate .
/ * ( non - javadoc )
{

combine two dfas tuples into a single { @link tuple2 } .
computes the union of two dfas and returns the result .
xor two tuples and xor pair of dfas and performs a reduction of the automaton .





parses the variable .



returns a new { @code joiner } that is the first and then queryable and returns a new { @link } .
returns a { @code } that compares two dfas and returns the result as a { @code } .
returns a new { @link } that wraps a dfa and returns a new { @link dfa } that is used to compute the { @link dfa } .
find all the in the given namespace .
find all the redundent namespaces prefixes
find all the redundent namespaces that are not in the specified property .
find all the components that are not in the given scope .

returns a new dfa that calculates the first intersection of the given dfa .
finds the best - matching { @link } from the given { @link } .
create a new { @link } instance .

sets the charset for this charset .
sets the header to be used for the given header .
sets the header for the given name .
sets the name of the method to the given method .
sets the method for the given method name .
sets the { @code } method to the given { @code method } .

sets the { @code } .
sets the named param .
sets the named method parameter .
sets the parameters of the given parameters .
write the { @code } to the { @code outputstream } .

send a request to the response .
send a response to the response .
sets the value of the given parameter name .
skips the specified stream .
copy the input stream to the output stream .
copy the contents of the input stream into the output stream .
copy the contents of the specified reader to a writer .

closes a {
get the inputstream from the stream .
returns an { @link inputstream } that reads the contents of the input stream into a stream .
returns a stream that is a file of the given file as a stream .
creates a new { @link outputstream } for the given output stream .
creates a outputstream for writing to the given file .
returns a file containing the given file as a { @link file } .

finds the text of the given text .
returns the cp specification option remote remote service .
returns the cp option matching the uuid and group .
returns the cp specification option remote remote remote service .
deletes the cp specification option from the database . also notifies the appropriate model listeners .
{
{
returns the first cpd availability estimate in the ordered set where uuid = &#63 ; .
returns the last cp specification option in the ordered set where uuid = &#63 ; .
returns the last cp specification option in the ordered set where uuid = &#63 ; .
returns the commerce tier where uuid = &#63 ; and groupid = &#63 ; or throws a { @link } if it could not be found .
returns the cp definition where uuid = &#63 ; and groupid = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
returns all the cpd availability estimates where uuid = &#63 ; and companyid = &#63 ; .
returns the first cpd availability estimate in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the last cp specification option in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the cpd availability estimates before and after the current cp specification option in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns a range of all the cpd availability estimates where commerceorderid = &#63 ; .
returns an ordered range of all the cpd availability estimates where commercepricelistid = &#63 ; .
returns the first cpd availability estimate in the ordered set where commercepricelistid = &#63 ; .
returns the first cpd availability estimate in the ordered set where commercepricelistid = &#63 ; .
returns the last cpd availability estimate in the ordered set where commercepricelistid = &#63 ; .
returns the cpd availability estimate in the ordered set where cptaxcategoryid = &#63 ; .
returns the cp definition inventory where cproductid = &#63 ; and cproductid = &#63 ; or returns <code > null< / code > if it could not be found .
returns the cpd availability estimate where cproductid = &#63 ; and cproductid = &#63 ; from the database .
removes the cpd availability estimate with the primary key from the database . also notifies the appropriate model listeners .
returns the commerce shipping fixed option with primary key or throws a { @link } if it could not be found .
refreshes the cache for all the items in the list .
refresh the cache .

build a condition for the given entity .



creates a new commerce shipping fixed option with the primary key . does not add the commerce shipping fixed option to the database .
deletes the commerce shipping fixed option from the database . also notifies the appropriate model listeners .
deletes the commerce shipping fixed option with the primary key from the database . also notifies the appropriate model listeners .

<p > . < / p >

resolve the given {
returns a hash of the specified hash .
store the in the .
returns the number of bits in the specified range of the specified { @code k } .
splits the given number of characters into a list of strings .
registers the listener for the given listener .
{
waits until the current thread is interrupted .




returns the value of the given type .
returns the first type of the given type .
returns a set of all the ids of the given type .
returns the { @link } for the given { @link } .
returns true if the given method is a method that is a method that is a method that is a method that is a method that is a method to the specified type .
returns a { @link } that is used to retrieve the { @link } from the given id .
check that the given id is not null .
wraps a class to a primitive wrapper .
builds a { @link } for the specified { @link } .

get the full path for the given header name .
get the start of the next line .

get the header information for the given header field name .
gets the value of the attributeset property .
create a { @link } with the { @link objectmapper } .
returns true if the character is a whitespace character .
checks if the given character is a valid character .
compute the dot - factor of the given shape .
returns true if the current solution is a valid solution .
returns a random .
encodes the given integer into the given { @code int } .
index a file index .
create a new index index .
query the of a query .
returns a { @link } which is used to estimate the number of bands in the image .
returns a new region that is used to perform a search on the specified region .
returns the region of the region that is the same as the region of the region .
converts the soap model instance in the request .
converts the soap model instances into normal model instances .
adds the commerce tax method to the database . also notifies the appropriate model listeners .
creates a new commerce tax method with the primary key .
creates a new commerce subscription entry with the primary key .
deletes the commerce subscription entry from the database . also notifies the appropriate model listeners .
returns the commerce subscription entry matching the uuid and group .
returns a range of all the commerce subscription entries .
returns a range of all the commerce subscription entries matching the uuid and company .
returns the commerce subscription entry matching the uuid and group .
adjust the quality of the quality of the .
check that the given stream is valid .
checks if a file is a valid file .
get a region for the given region .
print the text of the given .
creates a .
decode key = value pair
calculate the score for the given .

sets the cp instance in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
returns the cp instance with the matching external reference code and company .
returns the cp instance matching the uuid and group .

checks if the file exists in the file .


returns the version of the .
converts map map into map .
returns the body of the response body .
get the response body for the given http response .
returns the body of the response body .
/ * ()
reads the next character from the input stream .
/ * ------------------------------------------------------------
/ * this method is used to determine the correct html code for the given tag .
get the profile name from the given name .

returns true if the line contains the specified line .
----------------------------------------------------------------------------
sets the size of the image .
returns the for the layer .
set the texture to the shader layer .
find the shape for the given shape .
/ * ( non - javadoc )
add the layer to the layer .
{
{
move the current position of the current layer to the given { @link } .
move the current position of the current layer to the given { @link } .
move the specified layer to the specified location .
create a new .








adds a shutdown hook to the list of shutdown hook to be used for the shutdown hook .
returns true if the given path matches the given path .
log a message with the given exception .
log a message with the given exception .

returns the text display of the given id .
get the name of the .
find the best matching path for the given file .
returns the data for this request .
returns the data for this request .
copy a source to target .
copies a source { @code destination } to a { @link } .
initializes the template .
init the given <code > / code > .
creates a new template engine that is used to create a new template engine that is used to create a new template engine that is used to create a new template engine .
get the template content template engine .
<p > . < / p >
/ * ( non - javadoc )


transforms a template into a writer .
writes the given template to a writer .



parse the request context and returns the form of the request .
parse the given session and return the current session .
creates a new template instance from the given properties file .
main method .
/ * ( non - javadoc )

/ * ( non - javadoc )
write the input stream to the output stream .
initializes the freemarker parameters .
initializes the server .

get the client data from the client .
send the client to the client .

{
/ * ( non - javadoc )
sends a request to the queue .
notifies the { @link } to send to the { @link } .
replaces the components of the given component with the given separator . <p >
append a path to the given path .
get the canonical path for a file .

creates a { @code } that is used to execute the { @link } .
get the value associated with the key .
put a key / value pair to the cache .
removes the mapping for the key .
{
{
get the worksheet for the first worksheet .
this method is used to convert the record to a { @link } .
process the given .


closes the file .
<p > . < / p >
retrieves the password for the given password .
sets the password for the given password .
stores the given { @link file } to the given { @link outputstream } .
add the meta data for the
builds the article table for the given article .
initializes the teaservlet .
log a message at the given { @code throwable } .
converts the soap model instance into a normal model instance .
converts the soap model instances into normal model instances .
if the user is not allowed to be a valid user it is allowed to be the user s user agent .
put the given string into the given string .
{
register a hook for the given component .
dispatches the given event to the registered {
add a target to the target url .
load the jar file from the given jar file .
loads the jar file from the jar file .
loads the jar file for the given jar file .
loads the jar file from the given jar file .
adds a jar file to the jar file .
returns a list of all jar files in the given jar file .
check if the given file is a file or file .
creates a new commerce virtual order item with the primary key . does not add the commerce virtual order item to the database .
deletes the commerce virtual order item from the database . also notifies the appropriate model listeners .
returns the commerce virtual order item matching the uuid and group .
returns the commerce virtual order item matching the uuid and group .
returns a range of all the commerce virtual order items .
adds the specified element to the specified position .
returns the list of all the active sections .
toggles the given touch item .
adds the commerce address restriction to the database . also notifies the appropriate model listeners .
creates a new commerce address with the primary key . does not add the commerce address restriction to the database .
deletes the commerce address from the database . also notifies the appropriate model listeners .
deletes the commerce address from the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns a range of all the commerce addresses .
updates the commerce address in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
parses a json object and returns a json object .
returns true if the given {
<p > compares the specified object and its corresponding field . < / p >
<p > . < / p >
<p > adds a { @code } to the specified field . < / p >
initializes the input stream .

creates a new variable binding .
returns the first parameter in the request .
returns the parameter value from the request .

parses a parameter with the given name and value .
checks if the given string is a valid form of the form of a parameter .
checks if the specified request is a valid form of a request .

returns the set of parameters for the given request .
returns the parameter value from the request .
returns the value of the specified parameter or the default value if the parameter is not null or empty .
returns the long value of the given parameter name .
checks if the request is a valid request .
check if the request is valid for the given name .
parses a date from the request .

get date value from the request .

returns true if the given request is a valid httpservletrequest or http request .
check if the request parameter is null or not .
parses the given string into a { @link string } .
parses a long message from the given string .
parses a float value from a float .
parses a date value from the given string .


unescapes the given string with the given unicode character .
sets the text .
sets the width of the image .

loads the url from the url .
loads the file from the given input stream .
get the values for the group

returns true if the specified collection of values is not equal to the specified collection .
adds the given { @link } to the given { @link } .
get the width of the canvas .
get the list of all the that are visible .
get the height of the selected .
lays out the components of the scene .
lays out the components of the panel .

render the specified render form to the specified render component .
creates a new spannablestringbuilder of the text that is used to represent the text .
add a new value to the given value .
adds a value to the given value .
adds a value to the given value .
adds a property definition .
adds bindings to be used by bindings .
adds a bindings for a given bindings .
creates a new commerce warehouse item with the primary key . does not add the commerce warehouse item to the database .
deletes the commerce warehouse item with the primary key from the database . also notifies the appropriate model listeners .
returns a range of all the commerce warehouse items .
updates the commerce warehouse item in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
close the input stream .
closes the given { @code outputstream } .
close the reader .
closes the given writer .

returns the name of the specified field name .
get the map of field names .
adds a source to the target source .
adds a target to the target target .
adds the source to the target source .
remove the specified component from the adapter .
add a target to the target target .
adds the specified component to the target panel .
removes the specified component .
sets the component position of the component .
finds the target component of the target component .
checks if the given component is a jpanel .
returns the rectangle that the screen is located in the specified rectangle .
resets the current state of the current thread .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
loads the xml report for the given stream .
loads the report report for the given xml file .
loads a cyclonedx report from the given xml file .
loads a cyclonedx report from the given xml file .
save the report report to the given output stream .



check if the given version is valid .
returns true if the given version is newer than the given version .
returns true if the given version is newer than the specified version .
compare two versions .
returns the report version of the given file .
reads the version from the input stream .
read the contents of the file .
reads a string from the given stream .

get the images that are available for the given image .


returns the { @link indexexpression } for the given expressions .
find the list of expressions that are referenced by the given facet .
checks if the sql sql is a valid sql message .
<p > checks if the sql table is a valid sql message . < / p >
get all the report files in the report .
get the list of all the report .
get the list of charts for the given .
get the report for the specified .
get the for the given .
get the report for the given { @link } .
returns true if the given { @link } is a { @link } .
returns true if the given { @link } is { @link } .
returns the cp attachment file matching the uuid and group .
adds the cp attachment file entry to the database . also notifies the appropriate model listeners .
deletes the cp attachment file in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
checks if the given { @code path } is in the { @code } .
returns true if the given path is a path .
returns the { @link } that is the same as the { @link } .
compute the of the .
creates a .
creates a new for the given .
creates a new for the given parameters .
creates a new for the given .
creates a new for the given parameters .
creates a new instance of the { @link } .
creates a new { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
gets the value of the property .
初始化
<p > . < / p >


create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
returns an iterator over the iterator of the elements in the iterator .
returns an iterable with the specified elements and the first element of the iterable .
returns a map with the specified weight and weight as a map of the counters .
returns a new { @code } with the specified values .
reduces the value of the specified iterator to the given value .
returns an iterable with the specified elements and the first element of the iterable .
traverses the iterator from the iterable .
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
gets the value of the property .
{
start the .
compiles the given file into a compilation unit .
verifies that the actual { @code long } value is less than the given offset .
verifies that the actual { @code long } value is less than the given offset .
returns the first cp definition specification option value in the ordered set where uuid = &#63 ; .
returns the last cp definition specification option value in the ordered set where uuid = &#63 ; .
returns the cp definition specification option value where uuid = &#63 ; and groupid = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
removes the cp definition specification option value where uuid = &#63 ; and groupid = &#63 ; from the database .
returns all the cp definition specification option values where uuid = &#63 ; and companyid = &#63 ; .
returns the first cp definition specification option value in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the first cp definition specification option value in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the last cp definition specification option value in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns a range of all the cp definition specification option values where groupid = &#63 ; .
returns the first cp definition specification option value in the ordered set where groupid = &#63 ; .
returns the first cp definition specification option value in the ordered set where groupid = &#63 ; .
returns the last cp definition specification option value in the ordered set where groupid = &#63 ; .
returns the cp definition specification option values before and after the current cp definition specification option value in the ordered set where groupid = &#63 ; .
returns a range of all the cp definition specification option values .
returns the first cp definition specification option value in the ordered set where cpdefinitionid = &#63 ; .
returns the first cp definition specification option value in the ordered set where cpdefinitionid = &#63 ; .
returns the last cp definition specification option value in the ordered set where cpdefinitionid = &#63 ; .
returns a range of all the cp definition specification option values where cpspecificationoptionid = &#63 ; .
returns a range of all the cp definition specification option values where cpspecificationoptionid = &#63 ; .
returns the first cp definition specification option value in the ordered set where cpspecificationoptionid = &#63 ; .
returns the first cp definition specification option value in the ordered set where cpspecificationoptionid = &#63 ; .
returns the last cp definition specification option value in the ordered set where cpspecificationoptionid = &#63 ; .
returns a range of all the cp definition specification option values .
returns the first cp definition specification option value in the ordered set where cpoptioncategoryid = &#63 ; .
returns the first cp definition specification option value in the ordered set where cpoptioncategoryid = &#63 ; .
returns the last cp definition specification option value in the ordered set where cpoptioncategoryid = &#63 ; .
returns a range of all the cp definition specification option values where cpdefinitionid = &#63 ; .
returns the first cp definition specification option value in the ordered set where cpdefinitionid = &#63 ; and cpoptioncategoryid = &#63 ; .
returns the last cp definition specification option value in the ordered set where cpdefinitionid = &#63 ; and cpoptioncategoryid = &#63 ; .
returns all the cp definition specification option values where cpdefinitionid = &#63 ; and cpspecificationoptionid = &#63 ; .

returns the first cp definition specification option value in the ordered set where cpdefinitionid = &#63 ; and cpspecificationoptionid = &#63 ; .
returns the last cp definition specification option value in the ordered set where cpdefinitionid = &#63 ; and cpspecificationoptionid = &#63 ; .
returns cp definition specification option values where cpdefinitionid = &#63 ; and = &#63 ; or throws a { @link } if it could not be found .
returns the first cp definition specification option value in the ordered set where cpdefinitionid = &#63 ; .
removes the cp definition specification option value where cpoptioncategoryid = &#63 ; from the database .
returns the cp definition specification option where cpdefinitionid = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .



get the class for the specified class .
propagates { @code } to the given { @code } .
converts a value to a string .
reads the class from the given class .
skip whitespace characters .
copy the contents of the text to the specified stringbuffer .
copy the contents of the content into the output buffer .
allocate a new byte array .
creates a new thread pool for the given executor pool .
creates a new thread pool for a given thread pool .
creates a new { @link } instance .
creates a new { @link threadfactory } for the given { @link threadfactory } .
creates a new { @link } for the given { @link eventloop } .
creates a new { @link } for the given { @link threadfactory } .
creates a new thread pool for a given thread pool .
creates a new { @link } for the given name .
creates a new { @link scheduledexecutorservice } for the given { @link taskscheduler } .
creates a new { @link scheduledexecutorservice } for the given { @link threadfactory } .
returns a { @link } that will be used to create a { @link } instance .
creates a new { @link threadpoolexecutor } for the given { @link threadfactory } .
creates a { @link } for the given { @link threadfactory } .
creates a { @link } for the given { @link threadfactory } .
updates the cp rule user segment rel in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
creates a new cp rule user segment rel with the primary key .
deletes the cp rule user segment rel from the database . also notifies the appropriate model listeners .
deletes the cp rule user segment rel from the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns a range of all the cp rule user segment rels .
updates the cp rule user segment rel in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
sets the exception to be sent to the server .
sets the handler to be used for the handler .
{
adds the commerce discount user segment rel to the database . also notifies the appropriate model listeners .
creates a new commerce discount user segment rel with the primary key .
deletes the commerce discount user segment rel with the primary key from the database . also notifies the appropriate model listeners .
deletes the commerce discount user segment rel from the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns a range of all the commerce discount user segment rels .
updates the commerce discount user segment rel in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
sends a message to the specified number of messages .
/ * ( non - javadoc )

create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
{
gets the value of the property .
converts a byte array into a byte array .
converts a byte array into a byte array .

returns the number of bits in the current network .
returns the maximum size of the scalablepicture .
{
returns the first locale for the given locale . <p >
returns the first matching locale .
returns the locale for the given locale . <p >
set the property .

add interceptor interceptor to be used by the interceptor .
adds the commerce discount usage entry to the database . also notifies the appropriate model listeners .


get the for the given .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new commerce discount usage entry with the primary key .
get the username for the user .
sets the aliases for the aliases . <p >
sets the aliased name of the given name .

sorts the given prefix and sorts them in the map .
normalizes a path to the given path .


check if the string is a valid java identifier .
returns the first commerce tier price entry in the ordered set where uuid = &#63 ; .
returns the last commerce tier price entry in the ordered set where uuid = &#63 ; .
returns the commerce tier price entries before and after the current commerce price entry in the ordered set where uuid = &#63 ; .
removes all the commerce price entries where uuid = &#63 ; from the database .
returns the commerce price entry where uuid = &#63 ; and groupid = &#63 ; or throws a { @link nosuchpricelistexception } if it could not be found .
returns the commerce price entry where uuid = &#63 ; and groupid = &#63 ; or returns <code > null< / code > if it could not be found . uses the finder cache .
removes the commerce tier price entry where uuid = &#63 ; and groupid = &#63 ; from the database .
returns the first commerce tier price entry in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the last commerce tier price entry in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
removes all the commerce price lists where uuid = &#63 ; and companyid = &#63 ; from the database .
returns all the commerce price entries where groupid = &#63 ; .
returns a range of all the commerce price entries where groupid = &#63 ; .
returns the first commerce tier price entry in the ordered set where groupid = &#63 ; .
returns the last commerce tier price entry in the ordered set where groupid = &#63 ; .
returns the commerce tier price entries before and after the current commerce price entry in the ordered set where groupid = &#63 ; .
removes all the commerce discount usage entries where groupid = &#63 ; from the database .
returns all the commerce tier price entries where companyid = &#63 ; .
returns a range of all the commerce tier price entries where companyid = &#63 ; .
returns the first commerce tier price entry in the ordered set where companyid = &#63 ; .
returns the last commerce tier price entry in the ordered set where companyid = &#63 ; .
returns the commerce tier price entries before and after the current commerce price entry in the ordered set where companyid = &#63 ; .
removes all the commerce discount usage entries where companyid = &#63 ; from the database .
returns all the commerce tier price entries where commercepriceentryid = &#63 ; .
returns a range of all the commerce tier price entries where commercepriceentryid = &#63 ; .
returns an ordered range of all the commerce tier price entries where commercepriceentryid = &#63 ; .
returns the first commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; .
returns the first commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; .
returns the last commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; .
returns the last commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; .
returns the commerce tier price entries before and after the current commerce price entry in the ordered set where commercepricelistid = &#63 ; .
removes all the commerce addresses where commerceusersegmententryid = &#63 ; from the database .
returns the last commerce tier price entry with the maximum id in the ordered set where commercepriceentryid = &#63 ; and minquantity = &#63 ; or throws a { @link } if it could not be found .
returns the commerce tier price entry where cptaxcategoryid = &#63 ; and active = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
removes the commerce tier price entry with the maximum id equal to the maximum size of the database . <p >
returns all the commerce tier price entries where commercepriceentryid = &#63 ; and minquantity = &#63 ; .
returns all the commerce tier price entries where commercepriceentryid = &#63 ; and minquantity = &#63 ; .
returns an ordered range of all the commerce tier price entries where commercepriceentryid = &#63 ; .
returns the first commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; and minquantity = &#63 ; .
returns the first commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; and minquantity = &#63 ; .
returns the last commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; and minquantity = &#63 ; .
returns the last commerce tier price entry in the ordered set where commercepriceentryid = &#63 ; .
removes all the commerce price entries where commercepriceentryid = &#63 ; and minquantity = &#63 ; from the database .
returns the commerce tier price entry where companyid = &#63 ; and externalreferencecode = &#63 ; or throws a { @link nosuchpricelistexception } if it could not be found .
returns the commerce tier price entry where companyid = &#63 ; and externalreferencecode = &#63 ; or returns <code > null< / code > if it could not be found . uses the finder cache .
removes the commerce tier price entry with the matching external reference reference with the commerce tier price entry where companyid = &#63 ; and externalreferencecode = &#63 ; from the database .
caches the commerce tier price entries in the entity cache if it is enabled .
caches the commerce tier price entries in the entity cache if it is enabled .
clears the cache for all commerce tier price entries .
clears the cache for the commerce tier price entry .
creates a new commerce tier price entry with the primary key .
removes the commerce tier price entry with the primary key from the database . also notifies the appropriate model listeners .
returns the commerce tier price entry with the primary key or throws a { @link com . liferay . portal . kernel . exception . nosuchmodelexception } if it could not be found .
returns the commerce tier price entry with the primary key or returns <code > null< / code > if it could not be found .
returns all the commerce price entries .
returns a range of all the commerce tier price entries .
creates a new instance of the given model instance .
converts the soap model instances into normal model instances .
get a class loader that is a class loader that is a class loader that is not a class loader .
get the class name of a class .
get the method for the given method .
loads the configuration properties from the configuration file .
returns a range of all the commerce addresses where commerceregionid = &#63 ; .
returns an ordered range of all the commerce addresses where commerceregionid = &#63 ; .
returns the first commerce address in the ordered set where commerceregionid = &#63 ; .
returns the first commerce address in the ordered set where commerceregionid = &#63 ; .
returns the last commerce address in the ordered set where commerceregionid = &#63 ; .
returns the commerce addresses before and after the current commerce discount category rel in the ordered set where commerceregionid = &#63 ; .
returns a range of all the commerce addresses where commercecountryid = &#63 ; .

returns the first commerce address in the ordered set where commercecountryid = &#63 ; .
returns the last commerce shipping fixed in the ordered set where commercecountryid = &#63 ; .
returns the last commerce address in the ordered set where commercecountryid = &#63 ; .
returns the first commerce address in the ordered set where classnameid = &#63 ; and classpk = &#63 ; .
returns the first commerce address in the ordered set where classnameid = &#63 ; and classpk = &#63 ; .
returns the last commerce address in the ordered set where classnameid = &#63 ; and classpk = &#63 ; .
returns all the commerce addresses where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultshipping = &#63 ; .
returns a range of all the commerce addresses where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; .
returns the first commerce address in the ordered set where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; .
returns the last commerce address in the ordered set where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; .
returns a range of all the commerce addresses where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultbilling = &#63 ; .
returns the first commerce address in the ordered set where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultshipping = &#63 ; .
removes the cp attachment where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultbilling = &#63 ; .
returns the number of cp instances where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultbilling = &#63 ; .
returns a range of all the commerce addresses where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultshipping = &#63 ; .
returns the first commerce address in the ordered set where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultshipping = &#63 ; .
returns the last commerce shipping fixed in the ordered set where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultshipping = &#63 ; .
removes the cp attachment where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultshipping = &#63 ; from the database .
returns the number of commerce orders where groupid = &#63 ; and classnameid = &#63 ; and classpk = &#63 ; and defaultshipping = &#63 ; .
removes the commerce address with the primary key from the database . also notifies the appropriate model listeners .
returns the commerce address where commercecountryid = &#63 ; or throws a { @link nosuchpricelistexception } if it could not be found .
sets the environment variables .
returns the { @link } for the given { @code } .
returns the address of the .
returns the network interface .
returns the for the specified network interface .
{
{
adds the extension to the list of extensions that are not in the list .
sets the value of the specified preference .
factory method for creating a new { @link } .
add the specified number of milliseconds to the current agent .
start the process .
get the configuration for the given url .
returns the validation error .
sets the error message .
sets the timeout for the request .

sets the configuration for the given config .
generates a string representation of the text that is used to convert the text to a text window .
adds a time to the current time .
returns the average of the duration for the given interval .
returns the error rate for the given interval .
updates the commerce virtual note that the database or the c product to the database . also notifies the appropriate model listeners .
returns the c product matching the uuid and product .
returns the cp definition matching the uuid and group .
returns the cp definition definition where cproductid = &#63 ; and cproductid = &#63 ; from the database .
returns the cp definition matching the uuid and group .
returns a range of all the c products matching the uuid and the range of the database .
returns a range of all the commerce accounts matching the uuid and company .
change the master account to the given address .
returns the metrics for the given list of metrics .
build the path to the path .
updates the cp option category in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
creates a new cp option category with the primary key . does not add the cp option category to the database .
deletes the cp option category with the primary key from the database . also notifies the appropriate model listeners .


deletes the cp option category with the primary key from the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns the cp option category matching the uuid and group .
returns all the cp option categories matching the uuid and company .
returns a new {
returns a range of cp option categories matching the uuid and company .
returns the cp option category matching matching the uuid and group .
returns a range of all the cp option categories .
updates the cp option category in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
cleanup all the and pods .
creates a new with the specified threshold .
returns the status of the .
returns the status of the .
read config from the table .
converts the given { @link } to a { @link } .

check if the is a valid .
check if the is a .
builds a new instance .

creates a new instance of the .
create a new sql instance .
get the data source map for the given source data source .
get the source map configuration map from the input source map .

advance past the token token token .
encodes a sequence of bytes into a uuid .
encodes the segment into a segment .
creates a hash map .

encodes the given { @link } into the { @link } .
encodes the given uri uri with the given { @code uri } .
parses the phone number in the format of the phone number .
/ * ( non - javadoc )

sets the type of the transaction .
sets the schema for the given schema .
{
closes all the listeners and closes the resultset .
locates the resource from the url .
find the resource in the uri .
find all the url patterns from the given path .
finds the available url for the given url .
returns all the files in the given map .
returns the keys in the map .
find the class of the given class .
finds all classes that are not in the classpath .
finds all classes that are available for the given class .
returns a map of classes that are mapped to the given map .
loads all classes from the classpath .
find the class that implements the given class .
find all classes in the given class .
find the best effort for the given class .


find properties in the classpath .
find all properties in the properties file .
find all properties in the classpath .
returns a map of properties that are used to parse properties .
loads the properties from the map .
get the resources from the url .
create a new { @link } from the given { @link classloader } .
creates a new connection instance .
shows the dialog .
sets the target widget .
create sharding data source .
returns all the commerce warehouse items where commercewarehouseid = &#63 ; .
returns a range of all the commerce warehouse items where commercewarehouseid = &#63 ; .
returns an ordered range of all the commerce warehouse items where commercewarehouseid = &#63 ; .
returns an ordered range of all the commerce warehouse items where groupid = &#63 ; and commerceaccountid = &#63 ; .
returns the first commerce warehouse item in the ordered set where groupid = &#63 ; and key = &#63 ; .
returns the first commerce warehouse item in the ordered set where groupid = &#63 ; and primary = &#63 ; .
returns the last commerce warehouse item in the ordered set where groupid = &#63 ; and active = &#63 ; .
find the table definition by tableid .
find the first column of the table .
returns the last commerce warehouse item in the ordered set where groupid = &#63 ; and couponcode = &#63 ; .
returns the commerce warehouse items before and after the current commerce warehouse item in the ordered set where commercewarehouseid = &#63 ; .
/ * ( non - javadoc )

removes all the commerce notification attachments where groupid = &#63 ; and primary = &#63 ; from the database .
returns the number of commerce notification attachments where groupid = &#63 ; and billingallowed = &#63 ; and primary = &#63 ; .
returns a range of commerce warehouse items where commercewarehouseid = &#63 ; and cpinstanceuuid = &#63 ; or returns <code > null< / code > if it could not be found .
returns the commerce warehouse item where commercewarehouseid = &#63 ; and cpinstanceuuid = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
returns a range of all the commerce warehouse items where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
returns a range of all the commerce warehouse items where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
returns a range of all the commerce warehouse items where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
returns the commerce warehouse item where commercewarehouseid = &#63 ; and cpinstanceuuid = &#63 ; or returns <code > null< / code > if it could not be found .
returns the first commerce warehouse item in the ordered set where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
returns the first commerce warehouse item in the ordered set where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
visits a .
returns the first commerce warehouse item in the ordered set where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
returns the commerce warehouse items before and after the current commerce warehouse item in the ordered set where cpinstanceuuid = &#63 ; .
removes all the commerce notification links where cproductid = &#63 ; and cpinstanceuuid = &#63 ; and cproductid = &#63 ; from the database .
returns the number of commerce price lists where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
caches the commerce notification items in the entity cache if it is enabled .
generates a new .
caches the commerce wish list item in the entity cache if it is enabled .
clears the cache for all commerce shipments .
clears the cache for the commerce warehouse .
creates a new commerce warehouse item with the primary key . does not add the commerce warehouse item to the database .
removes the commerce warehouse item with the primary key from the database . also notifies the appropriate model listeners .
returns the commerce warehouse item with the primary key or throws a { @link com . liferay . portal . kernel . exception . nosuchmodelexception } if it could not be found .
returns a range of all the commerce warehouse .
returns the commerce warehouse item with the primary key or returns <code > null< / code > if it could not be found .
returns all the commerce warehouse items .
executes the given method on the given object .
returns a { @link string } that contains all delimiter characters in the specified { @link iterable } .

converts a { @code charsequence } into a { @link java . io . byte [] } .
converts a { @link iterable } into a { @link iterable } .
converts a { @code double } to a { @code list } of { @code iterable } .
converts a { @code int } to a { @code list } of integers .
converts a { @code long [] } to a { @code long } .
converts a { @link iterable } into a { @link compoundcurve }
returns the singleton instance of this .
sets the value of the property .
add a new table value to the database .
returns the default template for the default locale .
parse the given file as a map of strings .
add a new table to the table .
get the database values for the database .
get table names for the given table .
creates a new { @link } instance for the given { @code } .
checks if the given { @code group } is a list of { @code } .
insert a list of members into the list of groups .
replaces the specified substring with the replacement string if the replacement is a replacement .
returns the url of the address of the given address .
{
creates a new .
populate the object .

create a new document in a dom document .
serializes the given xml representation of this data into a { @link } .
convert the name of the to a dotted name .
convert the name of the form of a string to a string .
add a selector to the list of .
returns a new containing the selector selector .
recursive method to simplify the to a list of .
parses the string representation of the given string .
{
{
returns the charset if the charset is not null or empty .
returns a {
get the metrics for the { @link } .
create a closure for the given closure .
returns a new { @link } instance for the given { @link hystrixmetricspublisher } instance .
returns a { @link } instance for the given { @link hystrixmetricspublisher } instance .
get the object for the given auditor .
audits an iti - select pix event event for a given event .
audits an iti - 10 - device for a single transaction .
audits an iti - 43 - planned story for a single document event for a bill way .
audits an iti - 43 list of and .
audits a event for a single typeid for a given typeid .
creates a new with the specified amount .
get the medium value of the given medium value .
adds the commerce shipping method to the database . also notifies the appropriate model listeners .
creates a new commerce shipping method with the primary key . does not add the commerce shipping method to the database .
converts a byte array to a byte array .
returns a request object with the specified bytes .
returns a response object with the specified name .
deletes the commerce shipping method from the database . also notifies the appropriate model listeners .
deletes the commerce shipping method from the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns a range of all the commerce shipping methods .
updates the commerce shipping method with the primary key . does not add the commerce shipping method to the database .
/ * ( non - javadoc )
converts the soap model instance into the soap model instance .
converts the soap model instances into normal model instances .
/ * [ deutsch ] <p > interpretiert den angegebenen parameter des angegebenen parameter . < / p >
saves the given to the given .
/ * ( non - javadoc )
fire the event .
/ * ( non - javadoc )
sets the state of the state .
sets the state of the state of the listener .
close the connection and close the connection .
check if the channel id is a channel id .
returns a request object from the given byte array .
returns a range of all the commerce notification queue entries where commercenotificationtemplateid = &#63 ; .
returns the first commerce notification queue entry in the ordered set where commercenotificationtemplateid = &#63 ; .
returns the last commerce notification queue entry in the ordered set where commercenotificationtemplateid = &#63 ; .
returns the commerce notification queue entries before and after the current commerce notification queue entry in the ordered set where commercenotificationtemplateid = &#63 ; .
returns a range of all the commerce notification queue entries where sent = &#63 ; .
returns the first commerce notification queue entry in the ordered set where commercenotificationtemplateid = &#63 ; .
returns an ordered range of all the commerce notification queue entries where sent = &#63 ; .
returns the first commerce notification queue entry in the ordered set where sent = &#63 ; .
extracts the image from the image and returns the .
returns the first commerce notification queue entry in the ordered set where sent = &#63 ; .
returns the last commerce notification queue entry in the ordered set where sent = &#63 ; .
returns the first commerce notification queue entry in the ordered set where sent = &#63 ; .
update the list of devices and updates the list of devices .


returns a new instance for the device descriptor .
set the active .
<p > returns the for the specified device . < / p >
remove a from the .
extracts the from the image and returns the .
fire the event .
collects all devices from the list of devices .
trims the first character in the string .
check if the is valid .
find the device name and its id name .
get the list of all the in the current thread .


write the path to the output stream .
write the contents of a file into a file .
write the contents of the input stream to the specified stream .
write the image to a stream .
creates a new { @link } for the given { @link } .
returns a new expression that evaluates whether or not the given expression is a { @code null } .
initialize the default { @link } for the given { @link } .
translate a file and return the result .
validates that the source file is not valid .
check if the target file is a valid target name .
returns the name of the namespace that is the name of the namespace .
/ * ( non - javadoc )
adds the commerce order item to the database . also notifies the appropriate model listeners .
creates a new commerce order item with the primary key . does not add the commerce order item to the database .
deletes the commerce order item with the primary key from the database . also notifies the appropriate model listeners .
deletes the commerce order item from the database . also notifies the appropriate model listeners .
performs a dynamic query on the database and returns the matching rows .
returns the number of rows matching the dynamic query .
returns the commerce order item where commerceorderitemid = &#63 ; and externalreferencecode = &#63 ; or returns <code > null< / code > if the appropriate object was created with the appropriate model listeners .
returns a range of all the commerce order items .
updates the commerce order item in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
returns a new { @code sortedmap } instance with the specified { @code order } .
returns a range of all the commerce user segment entries where groupid = &#63 ; .
returns an ordered range of all the commerce user segment entries where groupid = &#63 ; .
returns the first commerce user segment entry in the ordered set where groupid = &#63 ; .
returns the first commerce user segment entry in the ordered set where groupid = &#63 ; .
returns the last commerce user segment entry in the ordered set where groupid = &#63 ; .
returns a range of all the commerce user segment entries that the user has permission to view where groupid = &#63 ; .
returns the cp user segment entry where groupid = &#63 ; and key = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
removes the commerce user segment entry where groupid = &#63 ; and key = &#63 ; and groupid = &#63 ; or throws a { @link } if it could not be found .
returns the first commerce user segment entry in the ordered set where groupid = &#63 ; and active = &#63 ; and active = &#63 ; .
returns the last commerce user segment entry in the ordered set where groupid = &#63 ; and active = &#63 ; .
removes the commerce user segment entry with the primary key from the database . also notifies the appropriate model listeners .
creates a new { @link } .
parses the given date and returns a date value .
formats the date and date / time pattern in the format <code > yyyymmdd< / code > .
get all { @link boxwebhook } s available by the { @link } .
converts the soap model instances into normal model instances .

/ * ( non - javadoc )
returns a file name of the given parameter name .
sends a html html page .
log a message at the specified position .
log a message with the specified arguments .

creates a new instance of { @link } .
creates a radio instance with the specified name .
finds the { @link } by its id .
loads the specified class .
{ @inheritdoc }
{
{
adds a new listener to the list of listeners .
{
{
check if the database is valid .
log a message with the given message .
send a log message to the log .
send a log message to a list of all the log messages .
log a message with the given message .
{
send a log message to a log message .

log a message with a severity level .
collects the of the given type and returns the corresponding object .
returns true if the given condition is not valid .
removes the given string from the given string .
creates a new instance of .
checks if the given variable is a variable name .
{
{
encrypt the key and password .
encrypts the { @link } using the specified algorithm .
decrypt a {
decrypt a { @link cipher } .
{
create a new { @link } instance for a given id .
create a from the given factory and creates a new { @link } .
/ * ( non - javadoc )
returns the capabilities of the .
/ * ( non - javadoc )
{
returns all the registered {
{
{
add a listener to the message listener .
add a listener to the message listener .
{
add a listener to the message listener .
add a listener to the message .
{
{
{
{
{
remove a listener from the list of listeners .
sends a message to the server .
sends a message to the specified message .
send a raw response to the given byte array .
start the server .
stop listening for the specified port .
creates a new { @link } for the given { @link } .
remove the port from the port .
handle the and send the data .

dispatches the message to the listeners .
parses the expression .
parses the expression and returns the result .
parses the { @link semanticspace } from the { @code } .
parses the { @link } for the given { @link version } .
parses the given { @link } .
returns the major minor version of the given version .
creates a new commerce discount with the primary key . does not add the commerce discount to the database .
returns the commerce discount matching the uuid and group .
returns the commerce discount matching the uuid and group .
returns a range of all the commerce discounts .
updates the commerce discount in the database or adds it if it does not yet exist . also notifies the appropriate model listeners .
creates the version of the .
creates a component .
build config .
parses the configuration and returns the json context .
checks if the given is a valid .
get the text of the document .
returns the first index of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first
checks if the given line is a block of text .
returns the first commerce country in the ordered set where uuid = &#63 ; .
returns the first commerce country in the ordered set where uuid = &#63 ; .
returns the last commerce country in the ordered set where uuid = &#63 ; .
returns the commerce country where uuid = &#63 ; and groupid = &#63 ; or throws a { @link } if it could not be found .
returns the commerce country where uuid = &#63 ; and groupid = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
returns all the commerce countries where uuid = &#63 ; and companyid = &#63 ; .
returns the first commerce country in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the first commerce country in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns the last commerce country in the ordered set where uuid = &#63 ; and companyid = &#63 ; .
returns a range of all the commerce countries where groupid = &#63 ; .
returns the first commerce country in the ordered set where groupid = &#63 ; .
returns the first commerce country in the ordered set where groupid = &#63 ; .
returns the last commerce country in the ordered set where groupid = &#63 ; .
returns the commerce country before and after the current commerce country in the ordered set where groupid = &#63 ; .
returns the commerce country where groupid = &#63 ; and twolettersisocode = &#63 ; or returns <code > null< / code > if it could not be found .
removes the commerce country where groupid = &#63 ; and twolettersisocode = &#63 ; and externalreferencecode = &#63 ; from the database .
returns the commerce country where groupid = &#63 ; and primary = &#63 ; and active = &#63 ; or throws a { @link } if it could not be found .
returns the commerce country where groupid = &#63 ; and key = &#63 ; and groupid = &#63 ; or returns <code > null< / code > if it could not be found optionally using the finder cache .
returns the first commerce country in the ordered set where groupid = &#63 ; and active = &#63 ; and active = &#63 ; .
returns the first commerce country in the ordered set where groupid = &#63 ; and active = &#63 ; and active = &#63 ; .
returns the last commerce country in the ordered set where groupid = &#63 ; and active = &#63 ; and active = &#63 ; .
returns the commerce country before and after the current commerce discount in the ordered set where groupid = &#63 ; and active = &#63 ; .
returns all the commerce countries where groupid = &#63 ; and billingallowed = &#63 ; and active = &#63 ; and active = &#63 ; .
returns a range of all the commerce countries where groupid = &#63 ; and billingallowed = &#63 ; and active = &#63 ; .
returns the first commerce country in the ordered set where groupid = &#63 ; and billingallowed = &#63 ; and active = &#63 ; .
returns the last commerce country in the ordered set where groupid = &#63 ; and billingallowed = &#63 ; and active = &#63 ; .
returns all the commerce countries where groupid = &#63 ; and billingallowed = &#63 ; and active = &#63 ; and active = &#63 ; and active = &#63 ; and active = &#63 ; and active = &#63 ; and active = &#63 ; and active = &#63 ; and active = &#63 ; and active = &#63 ; and active =
returns a range of all the commerce countries where groupid = &#63 ; and billingallowed = &#63 ; and active = &#63 ; .
returns the first commerce country in the ordered set where groupid = &#63 ; and billingallowed = &#63 ; and active = &#63 ; .
returns the last commerce country in the ordered set where groupid = &#63 ; and billingallowed = &#63 ; and active = &#63 ; .
removes the commerce country with the primary key from the database . also notifies the appropriate model listeners .
returns the commerce country where commercecountryid = &#63 ; or throws a { @link } if it could not be found .
/ * ( non - javadoc )
copy the given iterable into a new collection .
computes the signature for the specified endpoint .
returns the header value for the authorization header .

install the .


handles a file of the file .
handle the read - only upload message from the server .

deploy the server - side - effect
execute the request .
creates a new .



undeploy a message .


remove all deployments for the deployment
undeploys a new network network .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
verifies that the token is valid for the token .
starts the thread if it is not already started .
returns the next permutation of the next permutation .
find a set of symbols that match the given .
check if the given {
evaluate the objective function of the objective function .
configures logback to the given file .



calculates the distance between the two .
calculates euclidian distance between the two planes .
sets the solution for the given solution .
build the for the given .
build the .
returns all the members of the given list .
generates the list of solutions in the list of solutions .
compare the versions of the given version .
update the data at the given position .
{
evaluate the solution and returns the solution of the solution of the solution .

returns the actions that are currently registered .
get the directory directory for the log directory .
get the for the given file
returns the current .
connect to the server .
disconnect the connection .
acquires the { @link } for the given { @link eventloop } .
sets the remote server to use to execute the server .
returns the { @link node } that is a { @link } .
sets the current .
returns a list of all { @link } s .
sets the node to be used by the node .
sets the maximum number of threads .
returns all the { @link } for the given { @link } .
returns the preferred default { @link } .
check if the current idle is idle or not .
returns the maximum number of threads that were not processed by the server .
returns the next run .
get the description of the given node .
removes the executor from the pool .
interrupt the shutdown hook .
get the monitor for the given context .
get the environment variable .
build environment variables from the environment variable .
get the host name from the host .

dumps the contents of the output file to the output .
render the script .
handle the script .
build the configuration .

updates the xml document .
deletes the specified {
log a warning if it is not already present .
returns the {
check if the given { @link } is not valid .
returns the for the given .

evaluate the solution
find the best match for the given index .
returns the euclidean distance between the given power .


checks the size of the buffer .
returns an iterator over the elements of the iterator .
returns a { @code } which is the specified { @code } .
returns a { @code } which is a { @code } .
factory method for creating a new { @link } .
returns a stream containing all elements of the stream .
returns a { @code collector } that extracts { @code source } from the given { @code { @code spliterator } .
returns a { @code } which is the { @code } and { @code } .
returns a { @code } that uses the specified { @code } .
returns a { @code } that wraps the given { @code } .

evaluate the solution from the
fills the specified byte array with the specified bytes .
returns the byte at the specified index .
returns the index of the bit at the specified index .
returns the index of the specified index .
returns the index of the specified long at the specified index .
returns the float index of the specified index .
returns the double index of the specified index .
transfers the specified destination into the destination buffer .
transfers the specified data from the given array of bytes to the specified destination starting at the specified absolute buffer position .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the value of the specified byte array .
sets the index of the specified value in the given range .
sets the index of the specified value .
sets the index of the given value .
sets the index of the given float value .
sets the value at the given index .
sets the source of the source to be the specified index .
transfers the specified source array into a byte array starting at the given index .
{
returns a slice of the specified length .
compares this { @code bloomfilter } with the specified numberrange .
compares this { @code } to another .
create a new file with the given name and length .
create a new { @link } from a byte array .
creates a new { @link } from the given byte buffer .
read the file from the given file .
updates the current working strategy .
process the command .
collects all the and .

add a new symbol to the
synchronizes the current { @code } .
/ * note : this method is the best approach to add the algorithm to the list of algorithms .
execute the objective function .
sets the .
remove a page from the context .
get the current frame context for a given page .
returns the for the given .
evaluate () method
write the header .
sets the state of the state and sets the state of the state .
thrown when the response is not a valid url .
check if the state is a state of the current state .
applies the given response to the response .
create a new symbol for a given name .

returns a new symbol for a given type .
returns a that represents the given type of the given type .
returns a that represents the type of the given type .
returns a type variable that represents the type of the given type .
returns a { @code } from the given { @code type } .
find a from the given statement .
{
{
/ * ( non - javadoc )
{
{
{
{
{
/ * ( non - javadoc )
evaluate the solution and the solution
returns the value of the given objective .

throws a { @code } if the specified number is not equal to the specified number .
create a new { @link condition } with the given location .
reads the next delimiter from the given { @code reader } .
reads the next chunk of bytes from the given { @code bytebuf } .
read the content of the given { @code byte } array .
populate a list of and it into a ( return true if the id is not found )
loads the data from the data set .
cleans up a string .
skip the next chunk of files from the file .

get the next element in the list .
returns true if the size of the size is the size of the array .

dumps the given gpx source code into a { @link } .

convert the type of a field into a byte array .
{
checks if the specified is valid .
creates a chain that combines the list of chain items from the list .
email email address grant verification email granting email auth ticket .
reimages a token that will be sent to the user s password . the password will be updated to the password . the password will be updated and the password is updated . the password will be updated and the password is updated . the password will be updated and the password is updated . the password will be updated and the password
{
listing users in the request . the user must be provided by the user grant and the user grant grant grant grant grant grant and authentication user credentials grant . the user must be a member of the request . authorization : requires users for users for more information about users . for more information see <a href = https : // auth0
update the specified tenant .
{
returns the { @link } that is used to determine the elements of the .
returns the string representation of the given string .
{
returns a { @code } that is the first of the given type .
checks if the given property is a property of the given type .
returns true if the given { @link } is a { @link } .

returns true if the given term is a valid property .
returns true if the given {
returns true if the given type is a valid type .
returns true if the given type is a valid color of the given type .

process the given { @link } .

checks if the given { @link } is a { @link } .
reads the contents of the given file and returns the result .
replaces the given object with the given name and the given object .
read the given reader from the given file .

wraps a object into a object .
returns the maximum length of the given maximum number of bytes .
allocate a memory sketch .
returns the number of times that the given number of times is equal to the given number of times .
check if the family is in the family family .
/ * ------------------------------------------------------------
heapify the given memory object with the given memory range<br > and store the result of the sketch .
heapify a memory object with the given memory object .
creates a new sketch with the specified number of samples .
creates a new object with the specified byte array .
creates a new 64 - bit long .
create a new 64 - bit integer .
creates a new 64 - bit integer .
update the density of the given data .
open a new plan .
open a new { @link } with the given id .

returns the intersection of two sets .
returns a { @code } that is a { @code } .
returns a union of two { @code } objects .
heapifies the given sketch with the given size .
returns a new { @code } instance with the specified power power of the given power .
heapifies the given memory updatesketch and returns the memory footprint of the sketch .
returns the preamble position of the current { @link } .

removes the from the .
cleans up the cache from the cache .

returns the color value from the given { @code int } .
builds the { @link } for the given { @link } .
returns the number of bytes in the current buffer .
{
compress memory into memory .
{

add a new record to the server .
set the to be used by the executor .
check if the given number of times in the current thread is a .
returns a set of all the {
returns all the registered {
{
/ * ( non - javadoc )

initialize the connection channel .
closes the connection .
check if the idle idle time is idle .
closes the socket .
{
if the current thread is thread - safe it will be called if the current thread is interrupted .
load a map of files from the specified parent folder .
shortcut for { @link } .
creates the current content of the given request .
copy the contents of the specified file to the specified file .
sets the executor for the given executor .
if the given { @link } is null then the result is returned .

get a list of all the contacts for the given indexes .
populate key from the given map .


<p > atomically sets the { @code } and { @code b } and the { @code } .
{
{
update the counter with the given rng
returns a { @code } with the specified { @code } .
builds a object from the given { @link } .
$antlr start
$antlr start
$antlr start
returns the string representation of the .
$antlr start
$antlr start
{
process the given {
$antlr start
$antlr start
check that the given size is a power of the k - 1 .
$antlr start
sets the list of the to be used by the .
parses the given { @link color } and returns the { @link } .
/ * ---------------------------------------------------------------------------- -
build json for the given json object .
returns the value of the specified progress .
write the json object to json .
write a json file to the jsongenerator .
write a json object to a json object .


returns a property from the specified property .
get the long property .
calculates the approximate approximate probability of a given k - randomly randomly randomly choose faster for the given factor .
calculates the approximate maximum number of k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k
computes the probability density function for the given .
compute the .
create a new instance of { @link } with the given size and index .
creates a new instance of {
compute the of the given sketch .
updates the items in a range of items .
skips the specified number of bytes .
resets the to the set .
get the array of elements that are not in the array .
returns a byte array containing the given byte array of the given type .
convert a byte array to a byte array .
returns a predicate that aggregates results from a single - valued histograms .
returns the value at position 0 if the value is not null .
inserts a value at the specified position in the position of the given position .
returns a copy of this sketch with the same size as the original array .

grows the data in the array .
{

compares two { @link } s .
$antlr start
check if the given offset is a valid offset .
parse a unicode integer value from the given string .
pad a { @code } with the given length .
returns the index of the specified character in the specified offset .






write the given reader to the given writer .





verifies that the given { @link } is valid .
verifies that the given documents are linkable .
asserts that two documents are equal .
verifies that the source and destination is a valid xml document .
verifies that the actual { @link } is equal to the given one .
asserts that the given string is a valid xml element .
asserts that the given { @code string } is equal to the specified value .
asserts that the given { @code string } is equal to the specified { @code } .
asserts that the given { @code value } is equal to the given { @code attributename } .
asserts that the given { @code string } is equal to the given { @code } .
asserts that the given { @code string } is equal to the specified value .
asserts that the source and values are the same as the source and the supplied { @link } .
asserts that the source is a valid xml element .
asserts that the given string is not a valid xpath expression .
assert that the input element is a valid xml element with the given input stream .
asserts that the specified { @code xpath } is equal to the specified value . the operator must be a valid xpath expression . the operator must be a valid xpath expression . the operator must be a valid xpath expression . the operator must be a valid xpath expression . the operator must be a valid xpath expression . the operator must
asserts that a given element is a valid iri expression .
verifies that the input is a valid xml element .
verifies that the actual expression is a valid xpath expression .
verifies that the given { @link java . lang . reflect . } is a valid xpath expression .
verifies that the first element is a valid expression .



returns the instance .
serialize the given string into a string representation .
get the key value pair .

returns the major version of the .
parses the given string into a .
<p > . < / p >
merges the given sketch into a sketch .
sort the given array into ascending order .
sorts the given array into a new array .
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
add a column to the column name .
add a value to the value .
{
generates a list of all the columns of the given string .
$antlr start
$antlr start


verifies that the actual { @link object } is equal to the given { @link object } .
verifies that the actual schema is valid .
verifies that the actual { @link schema } is not empty .
verifies that the actual { @code } is equal to the given { @code } .
verifies that the actual { @code } is equal to the given { @code } .
$antlr start

check the for the given .
updates the peer peer peer alive .
check if the url is a valid url .
check if the url is a url .
check if the url is a url .
sends a batch of replication tasks to the replication stream .
creates a new instance of the given { @link } instance .
returns the maximum length of the given number of bytes .
{
read project properties file .
read calendar data from the calendar calendar .
read calendar calendar calendar .
read the resource from the resource .
write the to the stream .
reads the next message from the stream .
read resource from a file .
read the project files from the given project .
process the given { @link } for the given { @link } .
checks if the given is a valid .
replies the layout of the layout .

process the activity and process the activity .
set the source map to be used by the compiler .
creates a validator which allows to validate the language of the language .
***********************************************************************************
execute the command and execute the given task .
get the list of all the and execute the given {
gson invokes this call - back - to - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
{
{
returns true if the given {
creates a new instance of { @link } .
creates a new { @code } instance with the specified annotation .
{
get the value of a field by casting it to a class object .
sets the value of the { @link } for the given { @link field } .
sets the value of the given field .
alters the row and the field in the table .
create a new instance of the specified { @link } .

returns all rows matching the specified row .
/ * ( non - javadoc )
/ * ( non - javadoc )
parses a string containing a single - valued string .
parses the given string into a { @link } .
loads properties from a resource .
/ * ( non - javadoc )
returns the uri of the uri from the uri .
decodes a uri from a uri from the uri .
returns a boundstatement that is a query for the given statement .
check if the given uri is a valid uri .
validates the given resource .
checks if the given uri is a valid uri .
create a uri from a uri .
returns the prepared statement for the given query .
creates a new { @link } with the given values .
sets the { @link } for the given { @link } .
adds a { @link } to the given { @link } .
add a new to the request .
sets the execution of the execution engine .
{
{
create a new with the given name and the given name .
create a new instance .
creates a new { @link } instance for a given executor service .
set the argument index to the specified index .
get the set of field name for the field .
verify that the given field name is valid and field name .
returns the file s next file .
get the next batch of files .
returns the absolute path to the specified absolute path .
check if the path is a file or path .
find the best matching rule .

{
{
resolve the type parameters of the given type .
resolve the type variable declaration for the given type .


main method to run the main class .
returns true if the current { @link } is empty .
/ * ( non - javadoc )
check if the vertex is a vertex .
move the specified subtree to the specified position .
find the first child of the given child .
lays out the children of the given node .
create a { @link } for the given { @link } .


generate a new { @link privatekey } for a given { @code signaturealgorithm } .
returns a certificate type from the certificate type .
get the .


returns the key usage of the given .



converts a { @link } to a { @link } .
get the certpath from the certpath using the certpath certpath .
run the event loop .
creates a new identifier with the given id .
closes the connection .
{
adds a new socket to the socket .
creates a new { @link } with the given { @link } and the { @link } .
returns true if the is a valid
creates a new { @link } with the given context and context .
add the mapping to the map .
returns a list of all the elements of the specified collection .
check if the given string is a valid xml identifier .
generate the prefix from the uri .
sets the page .
returns the id of the first page .
get the first element of this element .
sets the parent element to the parent element .

creates a { @code } tag for the given { @code uri } .
get the canonical path for the given path .
{
<p > memoize . < / p >
<p > applies the { @link } to the { @link } . < / p >
rethrows the given throwable and rethrows it if it is not a valid { @link throwable } .
adds a participant to the list .
remove a event from the list of receivers .
/ * ( non - javadoc )
returns the channel channels for the channel .
remove all channels that have been set .
handle the .

returns the channel name of the channel .
get the from the channel .
handles the event .

creates a temporary file with the given name and the temp directory .
delete the file .
handles the attribute attributes .
create a pattern for the given pattern .
collect values from a list of attributes .
returns a { @link predicate } that returns { @code true } if the value of { @link } is equal to the { @link } .


find the subscriber for the given method .
{
returns the centroid of the given data point in the .


check if response is ok
calculates the maximum time interval .

get the date value from the date .
audit method .
/ * ( non - javadoc )
returns the name of the resource .
<p > . < / p >
shutdown the server and returns the server socket .

transfer the given file to the given destination .
transfer the given stream to the given outputstream .
converts a hexadecimal string to a hexadecimal representation of a long .
add a record to the specified record .
add all records in the specified record to the specified value .
adds all records in the collection to the specified collection .
lookup a { @link type } from a { @link type } .

returns the token as a .
wrap a message using the given { @link } .

parses the given { @link } into a { @link } .

check if the token is a valid token .

get the trust - related trustmanager for the given trust store .
{
{
add the given to the cluster .


{
process the authentication method .
populate metadata attributes .
adds the authentication attribute to the { @link } .
resolve the principal from the given principal .
checks if the user has a transaction .
authenticate user .
returns the { @link } for the given { @link } .

build the authentication handler .
evaluate the authentication process .
evaluate the { @link } .
handles the { @link } .
read the resource from the resource .

checks if the node is a leaf .
cleans up the {
returns the id of the .
returns the info info for the given info .

create a new action state for the given action state .
create a state drawable for the given action state .
creates a default { @link } .
create a transition for a given target type .
{
create a new expression that evaluates to expression with the given expression .
gets the .
create a new { @link } instance .
create a new instance
check if the flow has a flow .
check if the state of the flow has a flow .
check if the transition is a transition .
create a new flow flow for a given flow flow .
creates a list of configurations for the given configuration .
creates a new for the given type .
get configuration configuration .

get the symmetry chains that match the given criteria .

creates a { @link } .
create action state .
get the state state for the given flow .
get the state state for the given state .
get the state state for the given state .
create a state state .
registers a flow action .
registers a flow action .
sets the state of the action state to be applied to the action state .
adds action to the list of actions .
resolve the { @link } for the given { @link } .
the roles that are not available .
{
creates a {
encrypts encryption key from the given { @code outputstream } .
verifies that the jwt token is a valid json - ld access token .
create a new client

creates a new instance of { @link } .
get the contents of the input stream as a stream .
updates the next record .
add a new to the list .
execute javascript .
execute a script and execute the script .
execute a script and executes the given closure .
sorts the specified property and returns the value .
execute the script using the given script .
execute a script and returns a script .
parses the { @link } .
execute a method with the given script and return the result as a map of the given script .
execute the given javascript method .
parses a script file .
execute javascript engine .
execute javascript engine .
get the object from the given resource .

get the profile profile for the profile .
builds the response body for the given entity .
returns the root cause of this .
returns the resource uri for the given uri .
prints the stack trace of the specified stack trace .
prints the stack trace of the specified stack trace by the given {
prints the stack trace of the specified stack trace .
generates a tweet for the error response .
create a new { @link } with the given id and returns the result as a new { @link } .
get the list of repository objects .
reads the contents of the given .
commit the offline commit messages .
returns true if the repository has been set .
<editor - fold defaultstate = collapsed desc = generated code > // gen - begin : initcomponents
gen - last :
gen - last :
serializes the given { @code } to a { @link outputstream } .
add a tag attribute .
get the id of the attribute .
{
get the id of the attribute .
builds a single line definition for the given attribute name .
import configuration bean .
get configuration file for the given configuration file .
check if the current user has the
check if the is a valid service .
compiles a task to run on the given .
connect to the cluster
add a file to the destination folder .
rbac
sends a message to the client .
checks if the topic has a topic .
check if the is valid .


setup the server server .
sends a request to the server .
sends a request to the client .
sends a request to the client and the client type of the request .
sends a unicast request to the server .
get a { @link } for the given { @link } .
get a new { @link } instance .
executes the npm commands .

get the from the request .
process a flow flow .
builds a new { @link } to be used by the { @link } .
gets the view .
gets user account .
checks if the given attribute is a valid url .
compacts the data from the array .
find the element with the given key .
register a new value for the given value .
get the index of the specified entity .
creates a new { @link } from the given { @link short } values .


gets the key time for the given key .

get the url for the given url .
get the url for the given user .


<p > checks if the string contains a valid numeric value . < / p >




check if the given { @link } is compatible with the given { @link } .
check if the fields are valid .
drops the given name from the list of properties .
returns an object that represents the best match for the given object .
handle the request .
seek to the end of the record .
{
{
returns the principal name from the given principal .
{
<p > decrypts the specified secret . < / p > <p > the <code > / code > operation decrypts the specified { @link } instance . < / p > <p > the <code > / code > operation decrypts the specified { @code password } . < / p > <p > the <code > string< /
decrypts the given string using the specified key .
checks if the given message is a valid condition .
encrypt the specified data .
encrypt a string .

generates a diffie - key pair pair .
encrypts the specified byte array with the given encrypted text . <p > the { @link } is used to encrypt the encrypted data .
encrypt a string using the given encryption key .
decrypts the specified text with the given key .

returns a { @code privatekey } from the specified key .
returns a publickey for the given key .
get the number of bytes from the given array of bytes .

installs the given { @link } .
encode a byte array into base64 notation .
decodes a base64 encoded string into a base64 encoded string .
creates a new http client from the given http client .
read the next record .
get the for the given parameters .
creates a new { @link } with the specified parameters .
creates a new { @link } instance with the specified { @link } .
creates a new { @link } for the given user .
creates a new { @link } for the given { @link } .
creates a trust connection with the trust key trust managers .
write a json file into a single project .
serializes a { @code } into a { @code <thead } .
sets the values of the values for the given values .
constructs a new { @link builder } with the { @link } builder .
converts a soap message into a message .
main method for testing .
visits a type declaration .
{
returns the type of the given type .


returns the service name for the specified service .
returns a map of methods that are annotated with the given class .
returns a list of service classes implementing the given service interface .
validates that the method is valid .
returns the { @link } for the given { @link } .
main method for testing

handles the { @link } .

normalize the resource name .
get the properties for the given class .
returns the node in the current node .
returns the segment that is the child of the given node .
removes the child from the given child list .
{
<p > setter for . < / p >
returns the transaction id associated with the transaction .
/ * ( non - javadoc )
returns the transaction associated with the transaction .
{
rollback the current transaction .
updates the primary key .
resume a transaction .
reads the next character from the stream .
reads the next character from the given array .
returns true if the token is valid .
initializes the attributes map .
{
{
find the best match for the best match .
get the path to the file .
{
{
{
returns true if the two vectors are equal by the specified vector .
get the link to a database .
create new .
<p > creates a document that is used to export the database document . < / p >
check if the current user has a valid .

creates a new document template .
create new instance of .

{
matches a given { @link match } for the specified { @link match } .
matches a given pair of elements .
matches a wildcard with a given element .
creates a new { @link } instance for the given { @link } .
creates a new { @link } for the given { @link } .
send the {
returns a { @link } for the given { @link context } .
calls the server on all server calls .


read the message payload from the stream .
/ * ------------------------------------------------------------
import the from the import .

computes the data offset of the data array .
/ *
{
compuets the gradient of the

constraint constraint constraint constraint .
releases the current working point .
returns a node that is a leaf of the specified type .
{
returns the node node with the specified child and child node .
returns the node of the specified node .
returns the node of the specified node .
{
{
save the node to the given node .
checks if the repository is granted to the current repository .
check if the given role exists in the given role .
check if the user has a permission to the user .
checks if the given { @link } is not in the { @link } .
checks if the repository is not installed .
{ @inheritdoc }
get the path value from the path .
creates a new node from the given { @code nodeid } .
checks if the key is a key .
key

resolve the given class .
returns a { @link list } of { @link } s .
sets the { @link } for the given { @link } .

returns true if the given { @code } is { @code true } .
checks if the given array contains the given array of strings .
create a new { @link } .
sets the maximum number of journals .

returns the host name for the host .
{

called when a stream is received .
releases the connection .
returns the {
adds a new buffer to the buffer .
/ * get the bytes from the given byte array .
<code > optional . tensorflow . . = 1 ; < / code >
<pre > the name of the agent . for example if tensorflow is enabled for the job id the job is not used for the job s name . < / pre >
<pre > the name of the job . < / pre >
<pre > message settings . < / pre >
<pre > the name of the application . < / pre >
<pre > the uuid of the server . < / pre >
send the message to the reply .
read the data from the given .
process the message .
process the message body .
find the node with the given primary key .
{
matches a specified element with the specified elements .
process the request .
<pre > set of parameters . < / pre >
<pre > output configuration of tensorflow . < / pre >
<pre > input output for this object . < / pre >
<pre > input output for this object . < / pre >
<pre > output configuration of the tensorflow operation . < / pre >
<pre > output configuration of the tensorflow operation . < / pre >
<pre > output of the . < / pre >
<pre > output configuration of the . < / pre >
<pre > attribute . < / pre >
<pre > attribute . < / pre >
<pre > attribute . < / pre >
<pre > attribute . < / pre >
<pre > . < / pre >
<pre > the name of the agent . for example if the name of the summary is set to the last one at the time the last one is returned . < / pre >
<pre > the summary of the . < / pre >
<pre > string representation of the number of characters . < / pre >
<pre > type of the type of the following types : <ul > <li > <p > <code > / code > <code > / code > < / pre >
<code > repeated repeated ( int int ) < / code > .
<pre > shape of the tensor . < / pre >
<pre > the number of allocations allocations . < / pre >
<pre > this operation is used to get the summary of the variables . < / pre >
<code > optional . tensorflow . = 1 ; < / code >
<code > optional . tensorflow . = 1 ; < / code >
<pre > list of attributes that are assigned to the attribute . < / pre >
<pre > set the attribute of the attribute . < / pre >
<pre > the name of the request . < / pre >
compile a jsonpath expression into a jsonpath expression .
matches a path expression

inserts a node in the given column definition .
add a new column to the list .
factory method for creating a { @link } .
compress a buffer .
returns a copy of the given buffer .
check if the current value is a valid { @link net . dv8tion . jda . core . entities . permissionoverride permissionoverride } .
checks if the given object is a single value of the two lists .
main method .
returns the hash code for the given { @code key } .
parses a single http request .
encodes the given { @link } into a { @link } .
converts a { @link java . util . charset } to a { @link contentvalues } .
/ * private > ( ) { return . () ; }
creates a new { @link } instance for the given { @link context } .
creates a new { @link } instance from the given { @link java . io . writer } .
/ * ( non - javadoc )
writes the { @link bytebuf } to the { @link channelpipeline } .
{
{
if the exception is empty then the exception is empty .
set the property of the specified type .
{
{
change the node type .
/ * ------------------------------------------------------------
renames a node .
/ *
recycle the state of this {
sets the value of the .
commit the head of the response .
sets the size of the buffer .
/ * ------------------------------------------------------------
resets the http response .
set the locale for the locale .
/ * ------------------------------------------------------------
sends the response to the client .
sends a redirect to the url .
sets the header field .
set a header value for the given header .
sets the header value .
add a header field .
add a header to the response .
add a header field .
returns the output stream for the specified output stream .
<p > . < / p >

sets the encoding charset .
get the string value of the encoding .
unwraps a {
/ * ------------------------------------------------------------
returns a copy of the given { @code int } array .
converts a string into a byte array .
returns true if the given string is a valid address .
find a dns lookup by name .
get all the addresses in the given address .
get the address of the given address .
get the info information for the given .
get the address of the given address .
returns the address of the given address .
parses the given { @code agent } into a { @link } .
process the given and .

copy the from the to the
checks if the specified user is a valid command .
loads a file from the given file .
loads a data from the stream .
create the list of objects .



atomically adds a new memory instance to the given memory cache .
returns metadata for the given configuration .
set the to be used for the given filter .
get the input instance from the given input stream .
recycles the servlet .
sets the servlet .
returns the locale of the requested locales .
returns the locales mapped to the specified locale .
get the cookies for the cookies .
get the <code > enumeration< / code > object from the <code > http / code > header field .
get the path to the file .
returns the http type for the given http request .
check if the user has a role in the user .
set the session id for the session .
returns the next request .
returns the current session .
returns the session id from the session .
sets the character encoding . <p > this method is used to set the encoding charset encoding of the encoding .
get the input stream .
get the parameter values for the given parameter name .
get the local name of the connection .
get the local url .
{
find the index of the first occurrence of the specified property .
get the url from the request .

gets the value of the property as a string .
get the value of the given property .
returns the value of the specified property .
get the value of the specified property .
sets the value of the specified property .
sets the value of the given property .
sets the value of the property for the given index .
sets the property value for the given property value .

get files ************** ************** files ************** / --- >
returns a {

returns the index of the first column of the specified column .
populate the model with the given list of fields .
{

{
get the data source data for the given data source .
updates the data source and metadata and updates the data source .
populate the .
populate the rules for the given expressions .
check if the path is a file or not .
rename a object .
get the serialized representation of the given id .


generates a document that is a document that is a document .


get the repository from the repository .

imports all imports and imports them .


returns the for the given .
register a schemaconcept type .
writes a { @link } to the given writer .
get statistics about all the levels in the window
adds a field to the given value .
adds a field to the list of fields that are used to serialize the result .

{
close the connection .
check if the current thread is a wake lock .
get the field name from the field info .
get the field info for the given field name .


formats a date and time zone as a date .
returns the field names that are contained in the given field .
get the field field .
returns the field that is a valid field .
returns true if the field contains the field with the name of the field .
returns the field with the specified name .
returns a copy of this enumeration with the specified name .
sets the field name and value of the field name .
put the specified list into the list .
adds a field to the list of fields of this field .

get the value of a field from the given name .
get the date field from the calendar .
adds a date field to the date .

read the next line from the input stream .
writes the given writer to the writer .
clear the map and clear the values of the field .
destroy the and clear all fields .
returns the value of the specified parameter value from the input parameters .
get the number of bytes from the input string .

add a new cookie to the current cookie .
add the fields to the list of fields that are not in the list .
returns a sequence of { @link } s that are the same as the last consumed in the sequence .
add a new node to the list of columns .
returns the value of the specified value .

cast a value to a value


returns a canonical name of the given name .
create a map entry with the given name and tags .


get the value of the given { @code value } .
extracts the tag from the tag source .
creates a object from a given string .

get a stream of lines with the given name .
creates a new { @link } with the specified { @link } .
remove all listeners that have been registered .
{
get the properties of this property .
sets the { @link } for the given application .
sets the content type of the content type .
sets the encoding charset encoding .
sets the id for the given id .
set the message mode to the specified message .
sets the failover id .
sets the headers to be used for the given request .
sets the message id to be used for the given message id .
set priority priority
sets the reply to the reply .
sets the timestamp of the timestamp .
set the type of the type .
sets the user id for the user .
decodes a float from a string .
get the user s state for the user .
get the list of users for the user .
get the user s favorites by the user .
get the list of for the user .
get user profiles for the specified number of users .
get user groups
add a user to the user
update friends of the user
returns the command type .
set the user s user group


creates a { @link } for the given { @link } .
register a { @link } with the given prefix .
returns the state of the .
connect to the server .
{
removes a listener for the given event listener .

sets the action to be used to dismiss the action .
returns a list of for the given .
initializes the list of namespaces that are not in the list .
creates a bindings binding bindings .
creates a bindings for the bindings .
creates a binding for the given bindings .
create a new binding for the given bindings .
applies the tile matrix to the specified coordinates .
{ @inheritdoc }
configures the resource manager to load the resources .
configure the default configuration for the xml file .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
<p > . < / p >
initialize the for the given .
initialize the context param .


initializes the servlet .

initializes the listener .
initialize the .



initializes the .
this method is used to get the error page page page page page page page page .
initialize the for the given node .
parse the xml element and return the xml element .

login for the given .
/ * ------------------------------------------------------------

initialize the .
get the directory to be used for the given directory .
returns the list of files in the directory .
process the files and delete all files in the file .
returns the next value of the given value .

use this api to apply nspbr6 .

register a { @link } with the given { @code classname } .
returns the host name of the server .
sets the port for the given port .
check if the current thread is currently running .
start the server .
stop the server .


add the content of the member to the given {
returns an iterator over the elements of the specified iterator .
returns an iterator over the elements of this { @link list } .
uploads a new request .
uploads the specified content to the specified url .
get the list of all the objects .
retrieves the list of child objects .


{
{
{
create a new instance .
{
configures the security configuration for the given request .



splits the given { @link } into a { @link } .
{

/ * ( non - javadoc )
{
adds a new element at the specified position .
remove a specific element from the given element .
returns whether the given { @code iterable } is equal to the given { @code } .
/ * ( non - javadoc )
{
adds a new to the list of listeners .
removes a from the given .
clear the current selection .
increment the current tick state .
add a new list of to the list .
add the grid to the list of tracks to the contour .
draws the specified rectangle .
paint the canvas .
paint the graphics .
decodes a format string into a { @link } .
decodes the user s data from the given { @link } .
.
/ * ( non - javadoc )
returns the .
get the shape for the shape
get the colour for the given color .
creates a { @link } instance for the given instance .
returns a new with the specified shape .
{
get the inputpreprocessor for the given input type .
get layer output type .
{
initialize the ecore element with the given name .
add a constraint to the given type .
add a constraint to the set of constraint constraints .
generate the builder for the given { @link } .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
trains the given { @link columnfamily } using the given { @link dataset } .
write a { @link } to a { @link outputstream } .
restore the given input stream from the given input stream .
creates a new { @link } for the specified port .
normalize the host name .
{
--------------------------------------------------------------------------------------------
get the { @link dataset } for the given name .
get the value of the specified field as a single value .
get a list of broadcast objects .
initialize the ecore element when the script is not defined .
{
activate the activation strategy for the given network activation and stores the input as a negative sdvariable .
add a modifier .
adds the fields to the fields .
returns the default value of the specified component .
adds the specified { @code } to the list of { @link } s .
returns a stream of { @link stream } that contains the elements of the given { @link stream } .
returns a stream of { @link stream } that contains all entries in the specified { @link list } .
map the values of the given { @link metric } to the given { @link metric } .
returns a { @link } that applies the given { @code metric } to the given { @code function } .
{
{
returns a list of all listeners that are subscribed to .
connect to the server .
disconnects from the connection .
open a channel .
this method is called when a connection has been reached .

get the bundle for the bundle .
sends a unicast response to the server .


close the connection .
sends a unicast message to the server .
sends a unicast rpc call to the client .
register a flow request .
fired when a new event listener is fired .
fired when a new event listener is fired .
fired when a new event listener is fired .
fired when a new event listener is fired .
compute the arctangent of the specified operation . <br > if the given number is not zero then the input matrix is not a number .
set the input array to be used with the given input reduction .
returns true if the given class is a class .
check if the class is a class .
get a sound from the given sound .
disposes all sources in this group .
clear all the sources in the swarm .
returns the source of the given { @link } .
initializes the .
transforms the transformable
set the logging options .
creates a new { @link } .
creates a new { @link } for the given { @code } .
creates a stream that will be used to read the files from the given { @code } .
create a new .
transform a value into a map .

sort the given sort by applying the given sort algorithm .
get the validation data for the given key .

add a to the list of .
get the parameter value for the given parameter .
reads the configuration from the configuration and returns the .

load the configuration from the configuration file .
add the given to the list of plugins .
add a new to the pool .
get the input gate with the given index .
get the output gate for the given index .

{
{
{
sets the label for the given label .
transform the given data to a string .
add a field to the json document .
add a field to the field .
add a field to the field .
use this api to fetch resource of given name .
builds the { @link } of the given { @link } .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
check if the file is valid .
{
{
read the contents of the buffer into the buffer .
reads the { @link } annotation for the given { @code } .
reads the { @link } annotation for the given { @link } .
returns the {
sets the status of the status bar .
check if the given name is a name .
sets the names of the names of the names that have been set .
updates the status of the current page .
{
formats the given offset in the given region .
get the certificate configuration .
returns the { @link } property of the given { @code indexname } .
counts the number of elements in the given array of { @code n } elements .


compute the number of bits in the input array .



compute the number of bits in the input array .
main method that takes a random number of examples of the given .
{
maps the given mapping to a { @link } .
applies the { @link } to the mapping of the result .
{
groups a dataset by applying a given key selector to the provided keyselector .
groups the fields of a field with the specified field .
joins the joiner to this join and returns the result .
applies the provided { @link } to the other cross product of the provided { @link } .
applies the provided { @code } to the other cross product of the other and then applies the provided { @code } to the other cross product of the other .
applies the provided { @link } to the other cross product of the provided { @link } .
{
sets the operation to use for the operation .
writes a dataset to the specified file .
sets the output output for the output sink .
checks if the given { @link } is not { @link } .
print the product of the given .
{
draws the specified svg color .
initialize the ecore element with the given name .
performs the imports and delete all the imports and delete all the imports and all the imports in the given { @link } .
add a new event to the list .
shutdown the thread .
returns the next element in the list .
create a new { @code } .
<p > add a to the . < / p >
add a new { @code } .
adds a field to the destination record .
adds a field to the field .
add a field to the list of fields .
reads the given stream from the given stream .
add a { @link } .


<p > add a new space to the list . < / p >
add a new {
add a new class to the list .
add a new variable to the list .
add a new value to the list .
creates a new { @link } for the given { @link } .
creates a { @link } for a given { @link } .
{
register a new { @link } with the specified host name .
find the value of the specified key .
returns the path to the request .
{
writes the given ndarray to the output stream .
request the request to the server .
resets the to the .
get the container from the given .
send a request to the given { @code eventloop } .
generates the closure definition for the given closure .
generate the class definition for the given class .
generate the given class .
generate a new object .
generate the given expression for the given expression .
generate the given expression .
generate the given expression .
generate the given expression .
generate the given expression .
generate the given expression .
generate a new .
returns the next { @link } .
generate a object .
generate a new .
generate a .
generate the given .
generate the given expression .
generate an object for the given expression .
generate the given expression .
throws an exception if the value is not null .
asserts that the given value is not null or empty .
generate the given expression .
generate the given expression .
generate the operator .
generate the given expression .
generate the given expression .
generate the .
generate the given expression .
generate a new instance of the given expression .
generate the given expression .
generate the given expression .
replies the variable description for the given expression .
converts a { @link } to a { @link } .
creates a new { @link } for the given { @link } .
get a file from the given file .
{
determine if the given class is a valid module .
compute the inferred types of the given type .
compute the state of the given type .
compute the for the given type .
check if the argument is a valid message .
checks if the given message is a valid message .
check if the given { @link cursor } is equal to the given { @code value } .
check if the given message is a valid message .
check that the given object is not null or empty .
check that the given object is not null and throws an exception .
load model from the given file .
load the from the .
loads the number of words from the input array .
{
sets the to be used to show the .
computes the next by the given number of seconds and the total number of lines .
draw the divider .
initialize the .
/ * ( non - javadoc )

{
writes long to long value .
writes the double value to the output stream .
/ * ( non - javadoc )
{
writes the bytes to the stream .
{
adds the prefix to the prefix .
<p > add a new japanese date to the target . < / p >
add a modifier modifier .
/ * ( non - javadoc )
start the thread .
writes rfc2445 data for a given offset .
writes the bytes to the given offset with the given offset .
check the passed in value .
adds the default mapping to the default mapping .
returns a new { @code bloomfilter } .
flush the buffer to the given buffer .
writes the data to the output stream .
process the { @link } .
this method is called when the {
split the given node into a .
splits the given into a cluster .
sets the .
add the dependency to the list of dependency .
sets the interval interval for the given interval .
check if the current resource is a valid .
check if the dependency is a dependency .
gets the for the given query .
get the first adapter for the given controller class .
<p > get from . < / p >
outputs the specified output to the specified output
evaluate the output for the specified indarray
evaluate the given .
get the number of lines in the input matrix .
compute the double precision recall distance from a double precision recall .
returns the value of the given { @code double } value .
returns the squared euclidean distance between the given .
calculates the number of times the result of the given is the sum of the expected number of times .
returns the value of the given .
returns the mean value of the .
returns the mean value of the .
returns the theoretical > = = = =
returns the value of the nth pair of the double bond .
returns the mean value of the specified element .
calculates the of the given .
returns the value of the given .
returns the probability of the given correlation id .
calculates the probability of the of the given .
returns the number of elements in the .
merge the specified merge and another merging .
convert a string to a string .
get all of the from the list of .
returns the number of elements in the list of .
get a list of all the for the given number of cpus .
/ * ( non - javadoc )
registers the module .
creates a guice module injector for the given injector .
{
{
inject bean bean factory bean .


parses the given map and returns a map of values to the given map .
applies the given { @code } to the given { @code } .
sets the border of the panel .
{

save model data to the model .
{
main method for testing .
--------------------------------------------
define the name of the input and output names to be used .
define the replacement for the inputs .
get the name of the file name .
read metadata from a stream .
write the properties to the writer .
returns the { @link } that is the same as the { @link } .
returns the symbol table for the given symbol table .

prepares the field and flags .
/ * ( non - javadoc )
{

writes the hll to the byte array .
writes the value of the stringvalue to the output .
writes the bytes to the given offset .
truncate the file .
waits for the shutdown shutdown .
returns the next token in the list .
parse the given and returns true if it is not already in the current line .
read a single bit from the input stream .
/ * package - private
{
destroy the connection .
start the current thread .
clears the cache for the cache .
shutdown the thread context classloader .
<p > the { @link } used to copy the result in the { @link } . < / p >
reads a compressed string from a binary encoded file .

read a utf8 encoded string from the input stream .
write a { @link } to a { @link dataoutput } .
compress a string into a {
reads a string from the input stream .
reads the data from the input array .
write the header to the output buffer .
returns the number of bits in the given bit .
reads a { @code value } from the given { @code enum } .
write a { @link } object .
skips the specified number of bytes from the input stream .
returns the bigdecimal value for the given bigdecimal .
create a new { @link } with the given { @link relationaloperator } and { @link } .
convert a byte array into a byte array .
get the type of the .
sets the password for a user .
creates a new { @link } .
clear the response from the response .

create a new { @link } from a { @link } .
returns a { @code } that is represented by a { @code predicate } .
get the base string for the given base path .
clear the base directory and the base directory .
sets the base directory of the given directory .
get the directory for the given resource .
loads the data from the list into a list of { @link } s .
sets the encoding for the encoding .
adds a new byte to the end of the stream .
add a character to the character buffer .
reads a character from the input stream .
reads the next byte from the stream .
sets the list of connections to the list of consumers .
starts the lock .
{
returns the number of versions of the specified version .
submit a new task to the scheduler .
start the execution of the transaction .
shutdown the gossip and wait for the shutdown hook to shut down the thread .

returns the greeting .

initializes the form .
retrieves the document from the document .
get the document from the document .
creates a new document object .
insert a document into a document .
deletes the documentstore document .
returns the id of the user .

<p > . < / p >
/ * ( non - javadoc )
returns a map of all items in the document .
{
retrieves the attachment of the attachment .
returns the attachments for the documentstore .
deletes the specified revision from the given revision .
returns the next available value for the given future .
shows the current modal dialog .
loads the current window and window .
{
creates the form of the form of the form .


returns a new { @link } that is used to create a { @link } .
check if the current is a .
undo the undo state of the undo and the undo state of the undo .

{
indexes the index for the field .
{
indexes neuron to the index .
asserts that the given string is not equal to the expected value .
asserts that the given { @code } is equal to the given one .

asserts that the given { @code value } is equal to the given { @code mismatch } .
asserts that the given { @code string } is equal to the specified { @code } .
/ * ( non - javadoc )
{
opens a { @link } .
opens a { @link } to the given { @link httpconnection } .
creates a new { @link } .
initializes the http client .
get the value of the attribute
writes the bytes to the stream .
reads the next byte from the given byte array starting at the given offset .
reads the data from the input stream into a byte array .

get the .
parses the given reader and returns the result as a string .
parses the from the given { @code } .
applies the filter to the given url .
parse the headers and headers to be sent to the end of the stream .
close the connection and close the connection .
{
get the absolute path from the given { @link path } .
put the given path in the provided path .
/ * ------------------------------------------------------------
removes the given { @code } from the given { @code path } .
{
/ * ( non - javadoc )
cancels the current thread s current thread .
{
{
waits for the specified { @code timeout } to the specified timeout .
/ * ( non - javadoc )
writes the specified integer value to the given {
create a new url for a url .
returns the address for the device .
create a new url for a url .
copy the url to the url .
creates a copy of the url that is a copy of the url .
returns a url for the given url .
returns a url for the given url .
returns a url for the given url .
get the parent of the component .
check if the url is a valid url .
{

calculate the n - 1 ( s ) of the ndarray
/ * ( non - javadoc )
generate a vector of vectors .
this function is used to store the values of the ndarray with the given shape and the imaginary mean value
/ * ( non - javadoc )
get the session from the given session .
this method returns the vector of the specified vector of coefficients .
convert the given array of into a list of examples

convert a projection to a blob
returns the user’s the predicted - text document for the specified document .
returns the for the given ptb pos word .
get the genbank words
get the labels for the specified paragraph
get the words as a list of words .

calculate the labels for the labels in the matrix
get the list of all elements in the list of the specified arrays .
returns the label of the word in the given word .

calculate the of the given molecule
/ * ( non - javadoc )


restores a file from the specified file .
save the given hml to the given directory .

restores a sequence of files into a list of files .
save the given file to the specified directory .
restores the specified file and returns the file data .
saves the given file to the given { @link file } .
save the data in the given { @link } to the given { @link } .

restores the given hml entries into the specified file .



/ * ( non - javadoc )
/ * ( non - javadoc )

creates a new { @link } instance for the given { @link } .
creates a new instance .
creates a factory for the given { @link } .
/ * ( non - javadoc )
transforms a { @link } into a { @link } .
create a new with the specified type .
/ * [ deutsch ] <p > bestimmt das des angegebenen . < / p >
copies the data from the specified { @link } to the table .
loads the class loader from the given classloader .
{


returns the names of all rdns of this domain .
get the raw list of all the types in the given list .
get the domain for the domain .
add a new element to the list .
check if state changes to state .
{
the method to store the values of a map of nodes in the list of { @link } s .
checks if the given { @link } is equal to the given number of elements .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > set the { @link } to
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of variables in the
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of elements in the
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of /
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of values in the
{
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of elements in the
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of elements in the
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > calculate the number of elements and /
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of variables in the
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of variables in the
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of occurrences of a
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of values in the
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of elements in the
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of elements in the
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of arguments associated with
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > perform a numeric canonical / strong >
/ * ( non - javadoc )
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of elements in the
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of elements in the
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the number of /
{
reads the character buffer .
writes the given character to the output stream .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the of the .
returns the request for the request .

get the from the
get the definition .
get the name of the .
returns the type of the argument type .
returns the method with the given name .
calculates the bit of the given bytes .
calculates the hash of the given hash .
calculates the hash of the hash .
calculates the hash of the hash .
/ * ( non - javadoc )
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = - - > < / b > < / div > <div color = red style = - -
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > specify the following example : < /

<p > checks if the { @link } is a valid { @link } . < / p >
<div color = red style = - > 24px ;
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = - http : // host : // www . w3 . org / tr / - -
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > evaluate the element of the { @code
{
sets the value of the specified entry .
returns the entry at the specified position .

returns the current context for the current user .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
returns true if the given string is a valid language code .
{

parses the given parameters and returns the set of parameters .
check that the map is not present in the map .
{
this method is called by the httpconnection to process the request .
upgrade the upgrade request to the server .
returns the key used to store the key - value pairs from the given key .
lookup the host name and value .
tries to find the specified port and port as a default value .
lookup the properties from the given properties .
reads the contents of the file into a .
{
returns all the available .
returns the { @link } for the given { @link } .

writes the bytes to the underlying stream .
writes the given byte array to the given byte array .
writes the given { @code byte } to the given { @code buffer } .
closes the connection .
close the connection .
{
{
get the size of the image .
get the size of the image .
get the output size of the output stream for the specified texture .
returns the image for the given image .
check if the given mode is a valid mode .
get the size of the network .
performs a solid - endian buffer .
{
initialize the .

loads the class loader from the given classloader .
add a new value to the list .
update the statistics about the .
create a new query query callback for the given .
creates a query object from the given query .
create a new query object .
creates a { @link } for the given { @link entity } .
get the region name for the given criteria .
sets the title of the .
handles the request to execute the request .
/ * ( non - javadoc )
get the first input source for the first match .

calculate the url of the refresh flow of the url .
/ *
search for the specified page .
search for the given resource .
this method is used to create a dashboard for the user .
returns the list of all the results in the specified list .
get the results of the results .
cleans up the text from the text .
searches for the first page of the given search .
/ * ------------------------------------------------------------
get the url to the url .
classical - space - able to estimate the number of tracks in the specified partition and the specified number of segments .
get the value of the attribute name .
check if the given configuration is a memory usage for the given configuration
writes a file to a file .
reads a file from the given file .
write a file to a file .
read a file from the given file and returns the value .

get a list of all files in the specified path .
classical - set a single - valued dataset for a given dataset .
this method is used to determine the for the given .
this method returns a new instance .
splits the given { @link dataset } into a { @link dataset } .
get a list of all the paths in the file system .
get a list of all the paths in the file system
returns a { @link list } of all the files in the file system path .
checks if the given {
checks if the given {

{
flush the list of to the pool .
{
/ * ( non - javadoc )

get the output for a given type .

returns true if the specified collection is equal to the given collection .

get the instance for the current thread .
binds the bind bind bind components to bind .
{
initializes the http client .
{
get the host port .
returns a header that is used to retrieve the header of the header .
add the specified char to the list of the keys in the header .
checks if the given char array is a valid character .
returns the header value for the given header name .

get the value of the header field .
returns the encoding of the encoding .
returns the for the .
fills the object from the given .
close the connection .

returns the stream as a { @link } .
check if the header is in the list of keys that are equal to the specified name .
get the input header .

sets the header field .
adds a new header to the list of .

sets the .
add a new structuredefinition header to the specified value .
returns true if the given stream is a read - only stream .
returns the response content of the response .
{
{
/ * ( non - javadoc )
{
{
returns the type of the parameter type .
parse the given { @link indexexpression } with the given { @link indexexpression } .
add a filter to the list of filters .
generate the .
generate the for the given .
{
checks if the given id is a member of the given entity id .
initialize the .
{
{
load the source object from the source object .

creates a new instance of the given { @link joiner } and { @link } .
merges the child of this child object into the new child list .
find the first occurrence of the specified symbol by the specified symbol .
find the first occurrence of the given symbol in the given array .
find the first symbol of the symbol by searching the symbol of the symbol table .

copy the contents of the array to the given array .
rehashes the size of the array into a new array .
returns the average of the largest clusters .
{
configures the configuration .
returns the property of the specified property .
returns true if the current page is the last modified time .


<p > . < / p >
get the url from the database .

get the init parameter from the given name .
get the parameter value for the given parameter name .

process cors request .
joins the specified collection of elements into a single separator .
checks if the request is a cors request type .
get the content type for the given media type .
parses the given http servlet request and returns the response .
/ * ( non - javadoc )
inserts a row of data into the buffer .
removes the row from the table .
find the row in the table .
searches the index for the row and row col .
returns true if the next row of the first row is matched .
find the next row in the first row .
returns the decoratedkey of the decoratedkey .
fills the dataframe tree with the given entry .
check if the block is a block of rows .
fills the row with the given entries .
copies the data from the given { @link } to the { @link } .
writes the checkpoint to the output stream .
reads the next checkpoint from the stream .
reads the next row from the given row .
get column mapping from table .
get the set of groups that match the specified key .
get the serializer for the given property name .
{
creates a new .
/ * ( non - javadoc )
initialize the .
returns a new sessioncommandexception of the given throwable with the given location .
converts a throwable to a sessioncommandexception . if the throwable is a invalidnameexception it will be passed through unmodified ; otherwise it will be passed to the unmodified message .
loads a file from the classpath .
registers a service .
returns the instance of the given weekday .
creates a new instance of the given { @code } .
{
serializes the {
returns a list of { @link } s for the given { @link } .
builds a list of rows and columns into a list of columns .

opens a file .


put the into the database .
creates the engine .
{
binds the values to the given { @code } .

/ * [ deutsch ] <p > pr&uuml ; ft das subtraktionsergebnis - > - - - - - . < / p >
converts a throwable to a sessioncommandexception . if the throwable is a sessioncommandexception it is thrown .
converts a throwable to a sessioncommandexception . if the throwable is a sessioncommandexception it will be passed through unmodified ; otherwise it will be wrapped in a new sessioncommandexception .
search for the index within the specified range of the specified month .

creates a block with the specified block and block .
decrypts the given input stream and returns a stream of bytes that can be used to encrypt the data stream .
decrypts the given encrypted file .

sets the list of shards that are currently available for the current thread .
gets the instance .
find all the { @link } s that are currently active .
{
/ * returns the date of the form of the form of the form of the form of the form of the form of the form of the form of the form of the form of the form of the form of the form of the form of the form of the form of the form of the form of the form of
{
converts a throwable to a sessioncommandexception . if the throwable is a sessioncommandexception it will be wrapped in a new sessioncommandexception .
converts a throwable to a sessioncommandexception . if the throwable is a sessioncommandexception it will be wrapped in a new sessioncommandexception . if the throwable is a sessioncommandexception it will be wrapped in a new sessioncommandexception . if the throwable is a sessioncommandexception it will be wrapped in a new sessioncommandexception . if the throwable is a sessioncommandexception it will be wrapped in
/ * [ deutsch ] <p > erzeugt eine sequenz von wiederkehrenden zeit - intervallen . < / p >
returns a new { @link throwable } with the given { @code throwable } . if the throwable is a queryexception it will be passed through unmodified ; otherwise it will be wrapped in a new one with the given { @link throwable } .
returns a new message with the specified parameters . if the throwable is a queryexception it will be passed through unmodified ; otherwise it will be wrapped in a new sessioncommandexception with the detail message .
/ * [ deutsch ] <p > erzeugt eine maschinenzeit auf der posix . < / p >
returns the number of modifiers for the given year .
/ * [ deutsch ] <p > pr&uuml ; ft ob die angegebenen parameter ein wohldefiniertes kalenderdatum beschreiben . < / p >
/ * [ deutsch ] <p > entspricht entspricht { @code of ( hour minute second seconds ) } < / pre >
expands the given array of { @code } into { @code } .

get the singleton instance of this class .
converts a { @link timevalue } from a { @link } .
/ * ( non - javadoc )
copies the files from the given directory to the given directory .

collect all files in the directory .
generates a new .
generate the for the given .
returns a new instance for the given descriptor .
{
this method gets the singleton instance of this { @link } .
parses a .


get the object .
find column name by name .
/ * [ deutsch ] <p > interpretiert den angegebenen zeitpunkt mit hilfe des angegebenen . < / p >
{
{
creates a { @link } for a channel .
returns true if the given page is a valid page .
/ * [ deutsch ] <p > erzeugt eine sequenz von wiederkehrenden zeit - intervallen mit der dauer der datum und . < / p >
/ * [ deutsch ] <p > erzeugt eine instanz mit der angegebenen instanz mit der angegebenen beschreibung jahres . < / p >
/ * [ deutsch ] <p > erzeugt eine neue uhrzeit
/ * [ deutsch ] <p > bestimmt die l&auml ; nge dieses intervalls jahres intervalls jahres intervalls in ohne . < / p >
/ * [ deutsch ] <p > pr&uuml ; ft ob die angegebenen parameter ein wohldefiniertes kalenderdatum beschreiben . < / p >
/ * [ deutsch ] <p > liefert den . < / p >
/ * [ deutsch ] <p > entspricht entspricht { @code of ( hour minute ) < / pre >
returns the default { @link } .
/ * ( non - javadoc )
resolve the given value to the list of values .
{
get the field from the query .
get the class for the specified interface .
remove expressions from the list of expressions .
{
split the given into a .
{
decode a map of key - value pairs .

returns the expression that is represented by a given expression .


returns the name of the .
reserves the request to the given { @link } object .
reserve the given number of bytes from the given { @code cursor } and returns true if the request is not a segment .

parses a { @code long } value from the given { @code value } .
parses a timestamp from the given timestamp .

parses a timestamp from the given time zone .
@deprecated use { @link #gettimemillis ( datetime ) } instead . <p > this method allows to parse the timestamp of a timestamp into a time zone . <p > the time zone is used as a { @code zoneid } . <p > the time zone is used as a { @code zoneid } . <p > the time zone is used
parses a long literal .

@deprecated use { @link #gettimemillis ( datetime ) } instead .

sets a new rule expression .
adds a new { @link } to the current { @link } .
sets the current state of this node .
sets the cipher for the given cipher .
sets the host name for the given host name .
sets the key for the given key .
returns the for the given user .

redirects the user to the user .
calculates the uri for the given uri .

returns the node s nodes in the collection .
{
clear the cache and clear the caches .
{
/ * ( non - javadoc )
reads the contents of the given reader into a { @link reader } .
/ * ------------------------------------------------------------
returns the url of the image .
returns the for the given resource .
initialize the .
create a new scope from the given function .
decodes a base64 encoded string from the gzip file .

/ * ( non - javadoc )
/ * ( non - javadoc )
returns the string that is cropped cropped the characters in the text .
sets the value of the given property .
{
checks if the given path is a valid path .
add the given state to the list of nodes that are not in the given node .
updates the child dirs for the given node .
check if the given node is a valid js node .
check that the given {
find the first occurrence of the given content .
creates a new .
{
gets a request that retrieves the information about the specified id .
gets a folder s access to a specific folder
gets a folder with the specified folder .
creates a folder with the given name .
gets a trashed folder with the specified id .
gets a request that retrieves the specified id from the given id
gets a trashed folder that is associated with a given id .
gets a folder with the specified id .
gets a request that deletes the specified folder
gets a request that retrieves the specified id from the request
gets a request that retrieves the specified id in the request .
retrieves a shared access location for a specific project .
gets a folder s folder with the specified id .
gets a request that deletes a specified id from the specified folder
sets the image background .
{
gets a trashed folder with the specified id .
gets a request that gets a list of collaborations contained in the request .
gets a request that deletes the specified folder
retrieves a trashed folder for a specific region
get the description of the .
sets the value of the field .
get the link link for the given link field .
sets the link to the link .
returns the list of tags for the given tag .
sets the tags for the tag .
initializes the panel .
get the .
gen - last :

returns the number of decimal places for the given locale .
get the base uri for a specific locale .
get the base base of the passed as argument .
get the precision of the format used by the format .
check if the format is valid .
check if the passed string is a valid bic .
converts a string into a string representation .
convert a string to a string .
returns the number of progress in the progress bar .
refresh the status of the .
{
sets the maximum number of instances .
/ * [ deutsch ] <p > erzeugt eine sequenz von wiederkehrenden zeit - intervallen . < / p >

/ * [ deutsch ] <p > entspricht { @code of ( days ) . < / p >
/ * [ deutsch ] <p > subtrahiert den angegebenen von diesem . < / p >
translate a { @link } to a { @link } .

/ * [ deutsch ] <p > erzeugt eine sequenz von wiederkehrenden zeit - intervallen . < / code >
get the user data for the given key .
proxies a ternary function spying for given function .
/ * [ deutsch ] <p > erzeugt eine verschiebung ob die angegebenen zeitpunkt < / p >
/ * ( non - javadoc )

/ * [ deutsch ] <p > schreibt diese methode mit den angegebenen zu einem . < / p >
resets the state of the .
creates a filter filter if the given value is a valid expression .
create a { @link } instance .
creates a { @link } instance .

/ * [ deutsch ] <p > erzeugt eine sequenz von wiederkehrenden historischen . < / p >
/ * [ deutsch ] <p > erzeugt eine sequenz von wiederkehrenden historischen jahres
/ * [ deutsch ] <p > pr&uuml ; ft ob die angegebenen parameter ein wohldefiniertes kalenderdatum beschreiben . < / p >
/ * [ deutsch ] <p > entspricht { @code of ( hour minute ) < / pre >
create a new request .
create a request method .
{
returns a matcher that matches when the element with the specified element is present .
creates a new { @link } from a collection of nodes .
get the account owner of the specified user .
lists the live ( or list of all the live ) or a list of all the live server - in request .
create a new bucket with the specified bucket name and value .

get acl for the specified user .
get the user’s directory .

delete the specified bucket from the specified bucket .
get the url for the given url .
get the url for the given url .
generates a request url for the given request .
list all of the specified names .
list all the items in the request .
lists all of the documents in the given batch .
get the object to be issued by the specified key .
{
get the request object from the request .
get the file object from the specified folder .
get the content of the request .
get the metadata for the specified key .
get metadata for a specific request .
put a key / value pair to a file .
put a key / value pair into a json object .
put a key / value pair into the map .
put a key / value pair into the map .
put a key / value pair into a map of key - value pairs .

copy a copy of a given name to the given destination .
copy a object into a object .
lists the specified s3 object for the specified key .
get the request for a given request .
delete the specified request .
uploads a to the s3 bucket .
upload a request to the upload request .
uploads a file to a { @link } .
list the uploaded upload of a given s3 bucket .
get the list of objects .
uploads a multipart request to the upload url .
uploads the specified uploaded request .
aborts a multipart upload request .
aborts a request to a multipart upload .

populates the metadata request for the given request and return the response .
creates a request to be used for the request .
asserts that the given string is not empty or not .
add the header to the response .
convert the request url to a url .

encodes the given key and value into a json object .
encodes the specified key and value into a map of key - value pairs .



uploads the given file to the given file .
<p > . < / p >
{

get the list of cookies from the request .
returns the parameters of the .
this method initializes jpanel
this method initializes
returns a predicate that evaluates to true if the supplied predicate evaluates to true . <p > the comparison is based on the value of the second argument . <p > the comparison is based on the value of the second argument . <p > the comparison is based on the value of the second argument . <p > the comparison is based
returns a predicate that evaluates to true if the supplied predicate evaluates to true .
returns a { @code } that is represented by { @code } .

composes a predicate that is a predicate that is true if the predicate is true and false otherwise .
returns a predicate that matches the given regular expression pattern .
returns a list of all the elements in the specified list .
creates a new option .
creates a { @link option } option .

highlights the highlights of the highlights .

register a new { @link } with the specified { @code } .
evaluate the value of the given action .
creates a new instance .
logs a log message .
shows the dialog .
returns a { @link } that is used to convert the { @link } to a { @link } .
wrap a { @link runnable } in a { @link runnable } .
wrap a {
returns the { @link throwable } that is the { @link invocationtargetexception } .
attaches the specified { @code } to the specified { @code } .


dumps the specified message as a list of { @code } .
dump the stack trace of the specified stack trace .
print a dump of the given exception .
dumps the given { @code stacktraceelement } to the given { @code stringbuilder } .


returns the list of all the elements in the list .
print the .
generate a .
create a new builder factory for the given class .
creates a factory for the given {
create the method .
{
scans the specified index and the uri and the uri and optionally the operation .
creates a new { @link } .
get the { @link } for the given { @link } .
print the message to the console .
dispatches a method to the given target object .
starts a new { @link } .
fetch the { @link } from the given { @link } .
sets the current state of the current user .

sends a request to the request .
adds a new listener to the list of listeners .
sets the {
sets the retry timeout for a retry
sets the maximum number of milliseconds in the current thread .
sets the current http connection .
sends a request to the request .
send a request to the client and sends the request to the client .

check if the request is a http request .
parses the redirect url and redirect to the given redirect url .
sets the evc to be used for the specified project .
sets the flag to be used for the specified update .
{
get the value of the given element .
open a new { @link } with the specified { @link bytebuffer } .
copies the specified { @code path } to a { @code file } .
get the list of all the available names .
get the .
<p > . < / p >
loads the { @link } for the given { @link } .
returns the stat of the given { @code stat } value .
sync the current memory cache .
{
validates that the {
sets the { @link } for the given { @link } .
sets the theme .
sets the theme .
adds a serializer to the serializer .
set the axes to be used for the axis .
set the axes to be used for the axis .
get the list of all the for the given key .
set the axis axis .
set the axis to the axis .
adds a new point to the list .
scan the scan .
start the .
add the current scope to the list of all sites .
add the current .
adds a new { @link } to the list of { @link } s .
adds the given node to the list of nodes .
add a { @link httpmessage } to the { @link httpmessage } .
add a listener to the list of listeners .
initializes this panel with the default settings .
this method initializes
generates a string representation of the source class for the given class .
generate a new .


check if the given file is a valid url .
this method initializes jpanel

sets the description for the given { @code id } .
set the given id for the given id .
creates a new instance of the { @link } .
get the icons for the given .
binds the specified target to this { @link } .
binds the specified target to the list of listeners for the specified target list .

loads the extension from the extension .
returns { @code true } if the { @code } is not present in the { @code map } .
returns a {

loads the class name from the specified class loader .
load a class from the given classloader .
load the list of rules for the given locale .
get the list of files that are not included in the file .
resolve the type declaration of the class .
finds the annotations of the given type .

checks if the given address is a valid address .
sets the .
{
checks if the token is a valid token .
checks if the given user is a valid token .
marks the current token in the session .

checks if the current token is a valid token .
stores the token with the given token .
{
sets the redirect request .
/ * ------------------------------------------------------------
get the session context for the given session id .
returns the current session for this request .
get the list of all the sessions in the request .
creates a new team .
conference the team for a team .
conference the player for a team .


removes the folder from the rfs .
resolve the name variables for the given name .
returns the folder if the jawr folder is not valid .
this method is used to determine the for the model .
get the map of { @link } s from the given { @link } .
get the view state for the given view id .
adds a new view to the map .
adds a presenter to the view .
removes the given item from the request .
indexes the index of the document .
{
{
creates a table from the table table . <p >
returns the first table of the table . <p >
delete a single member .



writes an unsigned integer into the stream .
reads a biginteger from the input stream .
create a new json object for a specific type .
converts the given collection of { @link } to a { @link } .
get the collection of objects from the given collection of objects .
get the primarykey for a given key . <p >
checks the definition of the .
/ * ( non - javadoc )
returns the column usage for a given column . <p >
validates the given and .
initialize the for the given .

delete the ftp server .
create a directory and create a directory .
{
{
{
removes the and .
get the head of the head element .
{
add a link to the list of links .
get the response body .
returns the table for a given id . <p >
creates a new table with the specified columns and columns . <p >
returns the value of the specified double value .
wraps a given value to a { @link double } .
bessel function of the cubic spline
compute the distance between two points .
returns the latitude of the given latitude and longitude .
calculates the distance between the two .
calculates the offset in the region of the specified region .
interpolates the fraction from the given { @link fraction } .
compute the distance between the two points .
computes the angle between the two sets of roads .
compute the number of the in the given range .
/ * package private
calculates the area of the area that the given point is the area .
returns the primary key of the primary key . <p >
/ * ( non - javadoc )
{
prints the system .

logs arguments from the arguments .


{
sends a chunked body to the given chunked body . <p > the message is written to the response . <p > the message is written to the response . <p > the message is written to the response . <p > the message is written to the response . <p > the message is written to the response . <p > the
returns a matcher that matches the given regular expression .
matches a matcher that matches the supplied matcher .
matches a matcher that matches the supplied matcher .
{
matches a matcher that matches the examined and returns the result .
matches a matcher that matches the supplied matcher .
initializes the meta data for the data .
returns the for the given resource .
update the base url of the
returns a matcher that matches any of the given { @link } .
returns a matcher that matches the given regular expression .
returns a matcher that matches the given regular expression .
returns a matcher that matches the specified separator .
computes the initial state of the .

returns the initial state of the .
checks if the given key is a binding .
saves the given xml schema .
save the xml schema to the given xml schema .
gets the xml schema for the given xml document .
creates a log entry for the given message and id .
log a message object with the given exception .
put a new thread if it is already in the cache .
returns the specified { @code k } mapped to the specified key . if the map is empty { @code null } the returned map is returned .
returns the specified { @code k } mapped to the specified { @code timeunit } .
waits for a specified amount of time to acquire the given timeout .
removes the cache from the cache .

initialize the for the given .

returns a client that can be used to connect to the client .
recursive method that deletes the specified path from the given directory .
run the .
returns true if the tile table exists in the table .
purges the database .
imports the file from the cache and returns the index of the file .
{
get the column count for the given table .

returns the specified { @code } with the specified number of tiles .
returns the next available value for the given id .
get the index of the table .
deletes the specified table with the specified name .
read a network - related to a network .
finds all classes that are not available for the given type .
save the given { @link file } to the given { @link file } .
parses the input text and returns the parsed macros .
register a { @link } .
registers a default { @link } for the given { @code viewgroup } .
adds a new { @link } to the given { @link } .
get the for the given key .
clear the current color .
<p > . < / p >
extracts the keys from the map .
tries to find the tile from the given tile .
{
get a list of all tiles in the specified bounding box
get a list of all tiles that are currently in the specified preference
returns the maximum corner of the tiles for the specified maximum number of tiles .
get the bounding box for a given rectangle
returns a list of all tiles in the specified list .
returns a list of all tracks in the specified list .
{
{
cancel the .
{
{
{

creates the { @link } for the specified { @link } .
get the for a given key .
resolve the given method name and return the result as a .
get the name of the .
/ * ( non - javadoc )
returns the { @link typeelement } s of the given typeelement .
show the { @link } for the given { @link } .
returns a { @code zoneddatetime } representing the next time in milliseconds .

{
method to check if the current view is a touch event .
initializes the default settings .

this method is used to generate the .
{
visits a property with the given type and the passed { @link annotation } .
indexes the index in the property list .

build the report report for the current thread .
build log log messages
build device control information from device configuration .
build the application data .
scan the current position of the current scan .
scan the current position of the current scan .

write the data to the image .
get the quality of the .
build the report .
clones the given node and returns a new node .
{
{
initialize the .
calculates the clusters from the cluster .

add a new indexdefinition to the list of .
add a new partition to the graph .
registers a new .
assert that the given activity is a valid activity .
assert that a { @link } is { @link } .

remove a vertex from the
remove a vertex from a schemaconcept
get the list of all the elements in the list .


selects a list of select items in the given list of select entities .
selects a list of values for the given value .




returns a { @link } that is used to create a { @link } .
returns a { @link } that is used to create a { @link } object .
update the sql statement with the given id .

delete a sql query .


handles a {
checks if the given index is a valid .
checks if the given request is a valid .
appends the next request to the list of .
perform a query on the query .
creates a new local query and returns the next local future .
get the path to the file .
get the input stream for the given resource .
returns the class name of the class .

get the extension file extension .
returns a response to the current session .
/ * ( non - javadoc )
index a query .
applies the given query to the next query .
polls the response .
{
{
/ * ( non - javadoc )
add a category to the list of category .
find a { @link } with the given name .
find the instance by looking up the .
load a plugin from the given file .

returns the next token in the token stream .
creates a new {

creates a new snapshot store account .
deletes a file .
creates a new { @link } with the specified name .
deletes a file .
sets the flag set to the specified number of .
sets the primes to the specified address .






/ * ( non - javadoc )
execute the given { @code op } .
add a new point to the end of the list .
returns the list of holes for the given line .
update the bounds of the array with the largest values .
updates the date and time index of the given timestamp .
commit the sessions of the session .
/ * ( non - javadoc )
reset the connection to the connection .
creates a new connection with the specified connection and connection .
closes all connections and returns the connection .
add the index to the list of links .
main method to run the user to the user .
sends a mimemessage to the user .



sets the minimum value .
returns all anchors active set active .
returns the string representation of the current { @link } .
returns a string representation of the current value of the .
get the priority string for the given priority .
/ * ----------------------------------------------------------------------------
configures the configuration .
/ * ( non - javadoc )
remove all the ids from the list .
/ * private void ( ) { if ( . () ) ; }
get the command .

<p > . < / p >
resolve the resource type for the given resource .
returns a { @code collector } which finds the elements of the input elements with the specified comparator .

/ * ( non - javadoc )
initialize the panel .
{ @inheritdoc }
returns true if the given {
copy the contents of this file into the new one .
{
{
checks if the given path is a prefix of the given path .
/ * ( non - javadoc )
find a base path for a given class name .
find a method for a given path .
create a { @link } from the given { @link } .
check if node is a node .
add a new clause to the query .
externalizes a { @link } to a { @link } .
check if the value is a valid value
returns the for the given .
extracts the from the passed in .
extracts the hole from the image and returns the number of tiles .
updates the progress of the given .


check that the is valid .

create a new instance
check the given and the to the
pause the given .


returns a list of all the buckets for the given bucket .
adds items to the list .
searches for the list of items in the list .
converts a json object into a json object .




unmarshals a json jsonobject from a json object .
find the first matching the specified key .

inserts a key / value pair into a jsonobject .
put a key / value pair into a jsonobject .






{

sets the value of the jsonobject .
returns a value mapped to a key .
sets the value of the jsonobject .
get the double value for the given key .
get the integer value for the given key .
get a jsonarray from the json object .
get a json object from the given key .
get the long value for the given key .
get the string value of the specified key .
get the value of the key .
returns the value of the specified key .
returns the value of the specified key .
returns a json value with the specified key .
returns the value of the specified key . if the key is not present or is not a double or is a double it will be used as a long .
returns a jsonarray that is equal to the specified { @code jsonarray } .
write the current { @link } to the writer .
sets the value of the jsonobject .
sets the json string for the given json object .

sets the method name .
sets the hash for the .
compute the for the given class .
returns a new variable with the given name .

compares this object to another object .
creates a new { @link } for the given { @code name } .
/ * ( non - javadoc )
check if the given value is a valid value of the specified value .

create a new { @link } .

returns the default { @link streamer } for the given { @link class } .
find the name of the given class .
find the specified { @link } instance .
returns the name of the given property name .
find the type of the given type .
find the value of the specified field .
find the value of the specified field .
returns the collection of all the that are contained within this list .
returns the collection of the specified { @link } s that are contained within this collection .
registers a default value for the given { @link class } .
register a property name to be used for the specified class .
{
registers a property with the given name .
{
{
register a custom mapping for the given key .
{
register a property with the specified name .
register a property with the given property .
resets the to be used by the .
set the array of { @link } to the given array of { @link } .
sets the type of the collection .
add a field annotation .
add a field annotation for the given annotation .
unregister the streamer .
unregister a bean .

remove a property from the target class .
check if the resource is a resource .
returns true if the given resource is a resource .
determine if the file is a file or file .
returns true if the resource is a resource .
copy the content of the given content to the given content .

add a new attribute to the collection of attributes .
add a new attribute to the set of attributes .
parses the task data .
/ *
merge the given list of tasks .
returns the list of tasks that match the given list of tasks .
merges the given source into the target source .
get the task for the given stage .
called when a channel is received .


delete all items from the list of items .
get the total number of all files in the file .
returns the size of the file .


delete the number of items in the table .
get the number of files in the file .
get the size of the file .
calculates the hash of a hash .

returns the offset in bytes of the bytes .
calculates the hash of the given bit .
{
{
read certificate from the stream .
handles a request .
handles the request .

compares this { @code } to another .
format a line and return the result .
convert a type to a type .
convert a string to a { @link } .
returns the first qualifier annotation that is annotated with { @code } .
{
clear the cache .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
build the class path .
create a new for the given .
configures the features of the features and returns the result as a new .
creates the and .
analyzes the and returns the number of classes that have been set .
logs a warning if it is not a .
returns a map of { @code } s for the method { @code } .
transforms the given { @link map } to a { @link map } .
execute the analysis .
returns the blocks in the graph .
{ @link } bean .
{ @link } bean .
get the .
{
calculates the distance of the to the given .
calculates the distance of the to the given .
/ * ( non - javadoc )
get the map of objects .
start a new iterator .
add a new value to the list .
closes the current child and recycles the current child .
handles the method invocation of the method .
sets the classpath .
set the reference to the default path .
check that the plugin is a plugin or not .
创建引擎

read a long from the input stream .

sets the { @link } for the { @link } .
{
get the value of the x y and y and y offsets for the specified pixel .
returns the absolute value of the specified pixel .
copy the specified area to the destination .
get the buffered image for the image .


send messages to topic topic .
{
validates that a file is a valid xsd .
validates that the input stream is valid .
parses the xml schema and returns the schema .
parses a jsonschema from the input stream .
find types of a given type .
find a map of nodes that match the given criteria .
handle a warning message .
handle a warning message .
get the attribute value .
get the attribute value for the given attribute name .
get attribute value .
get the byte order of the given type .
check if the given node is a valid xml name .
sleep for the given milliseconds .
sets the typeface used to the specific typeface .
initialize the .



{
set the settings for this timepicker .
{
checks if the text is valid .
opens the popup and closes the popup and closes the popup and halts the popup . <p >
sets the date of the datepicker .
setenabled the jcalendar value .
sets the date field value .
set the minimum value for the .


returns the number of bits in the given range .
returns the minimum value of the specified random number .
returns a random number of random integers .
returns the minimum value of the given random number .
returns the maximum value of the given double value .






returns the length of the specified length .
returns a random character of the specified length .

/ * ( non - javadoc )
parses the query string from the query string .
parse the properties from the properties file .


{

get the integer value from the database .
get the long value of the given name .
<p > returns an array of the specified long - encoded value of the specified object . < / p >
adds a { @link resultset } into a { @link resultset } .
get the id of the given .
create a new instance

this method is called when the application is stopped .
{
<p > logs the given { @link } to the given <code > / code > . < / p > <p > the <code > / code > method is used to create a new <code > java . io . / code > object . < / p > <p > the <code > / code


returns a future syncrhonously that is a future that is a future that is in the given future .
executes a given { @link } using the specified { @link } .
executes a given { @code } using the specified parameters .
runs the given command and executes the given parameters .

executes the given { @code } using the specified { @code } .
executes the given { @code } .
executes the given { @code } using the specified { @code } .
executes the given { @link } using the specified { @link } .



creates a new { @code } with the specified parameters .
creates a new { @link } with the specified name and default values .
creates a new { @link } with the specified { @link } .
starts a new { @link } .
{
sets the maximum duration of the delay .
sets the duration of the duration of the view .
sets the maximum duration of the duration .
installs a new .
show the collision item of the view .
{


registers the given jmx object .
unregister the mbean .

called when a key is pressed .
get the absolute path of the given path .
get the list of media types for the given media type .
returns the name of the template name .
returns the { @link } for the given { @link mediatype } .
get the annotation for the given annotation .
returns the first { @code annotation } from the { @code annotation } .
get the output charset for the given charset .
get the base path of the given base path .
returns a list of the extension for the given jobtype extension .
get the configuration string for the given key .
get the working directory for the specified configuration .
get base path for the base path .
<p > creates a new . < / p >

run the given runnable .
clear the .
reads the contents of the input stream into a file .
opens the file .
{
{
returns a set of policies that are configured on the policy .
sets the date time .
promotes the specified node to the mru position in the list .

evicts if the given { @code k } is not equal to the given { @code countername } .
returns the next node in the set .
evicts the entry from the cache .
check if the arguments are not valid .
check if the given expression is a valid expression .
creates a new { @code } from a { @link } .
parse a { @link } from the given { @link object } .
specifies the capacity of the capacity .
sets the { @code executor } s that will be used to serialize the result .
sets the maximum size of the map .
sets the maximum value of the preference s capacity .
sets the { @code } to the specified value . the { @code } is used to evict the value of the { @code } .
sets the key to which the key is not already present .
sets the value of the { @code } .
atomically sets the value of the { @link } to the values of the { @link } .
sets the maximum amount of time .
sets the maximum amount of time .
sets the { @code } to be used by the { @link } .
resets the { @link } to be used by the { @link } .
resets the { @link } to be used .
adapts a { @code } to a { @code } .
sets the { @code } to be used by the { @link } .
sets the key to the specified output stream .
sets the statistics .
sets the { @code } and { @code statistics } .
returns a new { @link } instance with the specified { @link } .
returns a new { @link } object for the specified { @link cache } .
returns a new { @link } object that will be used to create a new { @link } .
returns a cache of the specified { @link cache } s cache as a { @link } .
creates a new { @link } for the specified key . if the key is not already present in the cache it will be overwritten .
sets the maximum allowed value of the preference s .
prunes the current node and returns the maximum number of items .
returns the next available number of items that are currently in the current cluster .
returns true if the current key is a power of the .
invalidates the current { @code } .

atomically removes all entries from the current thread .

check if the given node is a read - only stream .
/ * ---------------------------------------------------------------------------- -
if the current window is not empty then this method will return the last observed value .
this method is called by the .
returns the maximum maximum of the maximum top bottom .
returns the maximum of the current state of the cluster .

read the next read from the stream .

returns the value of the specified key . if the key is not present or is not present it will be returned .
updates the value of the specified key . if the key is not present in the key it will be updated if the value is not valid .

helper method to create a new { @link } .
schedules a new { @link } .
cleans up the task if it is not already in the queue .
if the {
primes the key and returns the key if it is not already present .


decrease the maximum node s node .
the node in the subtree rooted at the given node .
reallocates a {
if the node is a new node it is called .
put the key / value pair to the queue .
removes the specified key from the map .
removes the specified key from the map .
returns the value of the key in the map .
returns the value of the specified key .
returns the next item in the map .
returns the next item in the map .
returns the next in the list .
returns an iterator over the elements of the map .
returns the next item in the map .
returns a new instance for the specified cache .
<p > . < / p >
set the provider injector for the given provider .
configures the json mapper for the jackson objectmapper .

returns the set of { @link } s that are present in the config registry .
creates a new { @link } with the default values .
add the specified element to the panel .
write the xml representation of the xml element .
create a new { @link cacheconfiguration } instance from a configuration object .
sets the value of the stringvalue to a value .


initializes the .
invoke the method with the given name and the arguments .
returns a map that contains entries that are present in the map .
splits a name into a string .

creates a new extension from the given extension .
create a function that is a function that is a simple function .

returns true if the given { @code name } is empty .
get the label for the given label .

returns a constrained constraint that is used to determine if the constraint is a valid constraint .
returns a list of all the indexes in the given index .
returns a list of all keys in the map .

{
{


configures the { @link } for the given { @link } .
{



checks if the service is a service .
{
{
returns the generic type of the given type .
解析反馈内容
解析反馈内容
appends items to the list .
fetches the service services from the service .
get a logger instance with the given name registered?
{
/ * ( non - javadoc )
get the configuration from the configuration .
get the value of a key from the preferences

get the string value of the given key .
get the value of the specified key from the string .

registers a new { @link config } object for the given configuration .
loads the { @link } configuration .
creates a new { @code } object .
get all files that belong to the filefilter .
get the file version of the file .
get the output file .
check if phone number is allowed
returns the list of all .
builds a request to build a instance .
<p > returns a new <code > string< / code > object from a <code > string< / code > .
copy the contents of the specified array into the given array .
decodes the given byte array from the given byte array .

{
close the stream .
{ @inheritdoc }
reads the chunk from the given byte array .
build the list of servers with the host names .

create a new { @link } with the specified name and value .
get resource url for
get resource url for
get resource url for
initializes the validator .
{
get resource url for
get resource url for
get resource url for
get resource url for
{
get resource url for
{
get the response .
add a response to the response .
remove the response from the response .
checks if the given string is a valid character .



sets the value of the field .
get resource url for
{
attach the view to the view .
detach the view from the view .
checks if the view is a state .
sets the view state to be used to visualize the view state .
returns the for the given .

returns true if the is a .
returns the track offset of the track .


execute the mojo on the given mojo .
/ *
{
returns a { @code } that is represented by the specified { @code iterable } .

{
returns all the elements in the given array .
{
{
{
get the value of a property as a double .
{
{
{
{
{
{
get a duration duration for a given duration .
get the value of a key .
/ * ( non - javadoc )
{
{
{
converts a { @link } into a { @link } .
get resource url for
get resource url for
applies the given { @link } to the list of { @link } s .
/ * ( non - javadoc )

this method is called when a request is received from the server .

this method is called when the request is not available .
/ *


get resource url for
get resource url for
get resource url for
get resource url for
get resource url for
returns the first element in the list .
compare the specified character array .
searches the specified char from the specified array .






delete a date from the fluid .
check if the given json string is a valid json string .
check if the given date is valid for the specified time zone .
updates the object with the given object .
convert the given { @link } to a { @link } .
creates a message for the given flow .
remove all the project ids from the project .
deletes the specified resource .
main method to run the .
main method to start the image .
returns true if the given { @code } is active .


lays out the ui panel .
sets the method for the given method .
get resource url for
get resource url for
get resource url for
get resource url for
get resource url for

validate that the given id is valid .
get the set of paths from the given path .
reads a bracketed clause .
generates a for the given .
create a new for the given .
read the from the list of .
update the catalog information .
gets the format number for the given element .
returns a new { @code } instance .
writes the byte array to the specified byte array .
write a block to the block .
write the block to the block .
close the file .
handles a job from the job .
reads the entire contents of the specified { @code iterable } .

returns the list of topics for the topic .
creates a new topic from the given topic .
find the topic for the given topic and the topic name and the topic name and the topic .
returns the name of the archive file .
checks if the is valid .
sets the { @code } .
set the field of the given .
set the field of the given .
sets the { @link } to be used for the given { @link } .
{
sets the properties for the specified properties .
returns the vmware for the specified .
cancel a .
kills the and the .
returns the date of the date in the range of the given date .
check the authorization token for the user .
get the authorization token from the given { @link } .
sign the given payment .
loads the properties from the given input stream .
/ * ( non - javadoc )
sets the to be used for the model .
/ * ( non - javadoc )
{
add a comment to the photoset .
delete a comment from a photo .
get a listing of all the contacts members of the specified photo .
serializes the buffer into a bytebuffer .
returns a directbytebuffer for the specified directbytebuffer .
{
/ * package private
returns true if the row is a row .
{

add a batch of records to the queue .
/ * package private

rollbacks the lock .
get the list of objects .


construct a histogram from a bytebuffer .
decodes a { @link bytebuffer } from a { @link bytebuffer } .
sets the property value for the given key .

get the raw raw comment of the given raw key .
set the raw comment .
set the comment .
get the raw comment .
get the services for a specific person .
get the list of for the given service id .
post a photo to the user .
record a long record with count number of bytes long .

{
add a new pair to the list .
calculates the line of the line .

calculates the value of the given point in the given point .
returns the maximum value of the given point .
normalizes the specified coordinates in the polyline .
returns all listeners that the given { @link } is not registered .
notifies all listeners that the listeners are notified .
{

get the expression that is the same as the .
returns the expression that is used to determine the .


/ * ( non - javadoc )

read the data from the given byte array into a single byte array .
creates a new program for the given type .
log a message and add it to the batch .


this method returns the configured list of all the records in the table .
process the table and returns the result .
creates a new batch with the specified id and returns the result .
returns a { @link } for the given { @link } .

{
calculate the number of columns in the table .
calculate the average rate of the given .
returns the number of bits in the given range .

creates a new for the given and .
creates a new { @link } instance for the given { @link } .
create a new for a given .
send a unicast subdocument response to the characteristic .


{
/ * ( non - javadoc )
score the node in the given
compute the for the given .

{
{
{
{
register a new schema with the given schema .
registers all the schemas with the given schema .
get the schema for the given schema .
get the schema for the given class .


create a schema from a schema .
{
convert a string to a string .

creates a new { @link } instance for a given key .
adjust the number of steps in the .
register the given number of states in the .
returns the next .
returns the number of times the current state of the current thread is the current thread .
await until the next poll is completed .
await until the next guard is reached .
mark the current thread that will be used to acquire the current thread .
converts a string into a string .
releases the current thread s thread .
loads the properties file from the given file .
configures the resource adapter for the resource adapter .
loads properties from input stream .
start the
sets the value of the given double .
sets the value of the given float value .

/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
process a event from the current thread .
returns the state of the current state of this converter .
{
check the security permission .
add a new { @link } to the worker thread .
registers a new .
<p > reinstate the { @link } that is used by the { @link } . < / p >
submits a new task to the given task .
this method is called by the { @link } to process the { @link } .
run the worker thread
scan the current thread .
waits until the outbind is complete .
returns the task count of the next task .
unwraps a task .
returns true if the given { @code } is not in the given { @code } .
wait for the task to be used for the given task .
returns the number of tasks that have been added to the given task .
find the next from the list of .
tries to find the current thread pool and returns the result if available .
returns the number of concurrent operations .
waits for a permit to be stopped .
invokes the given task if it is not already completed .
submits a task to the given task .
returns the number of threads that this thread is currently running .
returns the number of times that the given number of times in the given { @code count } is not empty .
returns the number of tasks that are currently available in the worker thread .
checks if the current working queue is a .
returns a { @link } that will be used to compute the task if necessary .
returns the number of tasks that have been added to the queue if the number of tasks is not available .
waits until the permit is available .

creates a new { @link runnable } for the given task .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
defines if the chart is a gauge .

computes the best scoring of the and to the given .

{
compute the model for the model .
/ * ( non - javadoc )
/ * ( non - javadoc )
defines if the gauge is a set of gauges .
sets the locale for the specified tickmark .
waits until the command is received .
returns the available list of all languages .
a optional value that is used to indicate the integration is the integration of the integration to the default value .
returns a copy of this member s declaration .
returns an {
configures the server to configure the server .
creates the context handler for the servlet context .
loads the catalog .
sets the value of the given { @code value } .


write a message to the message stream .
write a field value to a given value .
/ * ( non - javadoc )
returns a matcher that matches any of the specified elements in the specified matcher .
returns a matcher that matches any of the specified elements in the specified { @code size } .
notifies the pool confirming the specified port .
creates a new { @link } .
creates a new { @link } object from the specified string .
creates a new { @code } with the specified capacity .
registers a new { @link } with custom { @link } .
sets the specified { @link } for the given { @link } .
parse the payload from the given { @link gnu . . } .
parse the payload from the array .
creates a connection from the given connection .
creates a { @link statement } that applies the { @link statement } to the { @link statement } .
creates a { @link } that will be used to write the { @link } to the given { @link serializer } .

creates a { @code } for the given { @code reference } .
close the given { @link } .
create a node from the tree .
create a child child node with the given child node .
create a new child node with the given child node .
get all files in the classpath .
appends a value to the given value .


appends the value to the given object .
checks if the given string is a valid character .
trims the size of the size of the size .
discard the and the .
returns the {
{
/ * ( non - javadoc )


find the first occurrence of the specified symbol in the specified parent .
finds the pocket for the given id .
adjust the positions of the .
print the level of the given .
prints the banner output for the given .
/ * ( non - javadoc )
find the next chunk of a single segment .
check if the receiver is currently registered .
update the of the given .
handles the message .
{
{
this method is called when a task is received .

handle the .
handle the and send a heartbeat to the .
handles the { @link } .


if the task is not yet completed the task will be rescheduled .
handle the message .
handles the case where we can send a message to the peer .

write the allocated to the buffer .
/ *
update the hosts for the given host and leader .
enqueue the given task to the given node .
{
resets the to be used by the .
reset all the statements to be used for the current thread .

returns the first row for the given transaction id .
link a { @link } to a { @link } .
register statement .

clear the data from the table .
remove a from the given session id .
{
get the value of the given field as a string .
parse the given value as a string .
check if the given element is a valid element .
get the property type for the given name .
returns the getter method for the given name .
returns the value of the property or a property name .

sets the value of the property .
get the property value for the given property .
returns true if the property is a property .
sets the property value .
notifies the {
notifies the {
notifies the { @code } to be notified when the { @link } is { @code true } .
execute the given {




this method will delete the object from the .

get the configuration for the osgi service registry .
generate the for the given .
returns the database s complement table .
get the system properties for a given table .
retrieves the table s <code > table< / code > object .
/ * ( non - javadoc )
<p > returns the foreign key - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
returns the primary table for a given table . <p >
creates a new table for the given table . <p >
returns the for the given . <p >
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
retrieves the table s columns for a specified table . <p >
returns the primary table for a given sql statement . <p >
returns the sql statement for a given key and column name . <p >
returns the first table of the table . <p >
get the primarykey for a table . <p >
$antlr start
creates a { @link } for the given { @link } .
$antlr start
$antlr start
this method is called by the connection to the to be used for the connection .
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start literal
checks if the given { @code } is a { @link } .
sets the current thread .
shutdown the thread .
close all resources .
runs the server .
returns the { @link } for the given { @link } .
$antlr start
log a message with the specified message .
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
sets the state of the channel .
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
creates the index .
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
this method is used to determine the cluster leader .
update the index of the .
initializes the index of the given url .
add a resource index to the list of .
adds a mapping mapping to the given mapping file .
check if the resource exists in the url .
searches for the facet files in the specified sort field .
retries the request with the given request and returns the response .
$antlr start
$antlr start
src / main / resources / org / drools / compiler / lang / drl5expressions . g : : 1 : : ( ( | ) ;
$antlr end

reads the next date from the given date and returns true if the date is not valid .
reads the next char from the buffer .
pause a list of workflows with the given list of workflows .
restarts the workflow .
execute a list of workflows with the given status and returns the status of the workflow .


get the field type from the given class .
resolves the type of the given type .
resolve the given type for the given type .
returns the type of variable { @code } .
returns the declared fields for the specified field .
get the field with the specified name .
returns the method type of the given class .
returns the method with the given name .
get the method for the given class .
get all methods in the given class .
returns the getter method for the given class .
get the setter method for the given class .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the given field in the given { @code string } . <p >
checks if the field name is a field name .
returns the value of the field .
returns the message message associated with the given message .
wrap a { @link object } .
creates a new instance of the class with the specified name .
creates a new instance of the specified class .
<p > . < / p >
check if the field has a field name .
{
<p > creates a new instance of { @link } . < / p >
create a constructor with the given arguments .
get the method with the given name .
check if the specified class is a public method .
get all methods
invokes the specified method on the specified object .
checks if field is a field name .
sets the value of the field .
get a field from the field .
determine if the given file is a directory .
decodes the given input and returns the result as a byte [] .
decodes a block of a block into a block .
checks if the given string is null .
checks that a string is not empty .
check that the given number is equal to the specified size .
checks if the specified string is a valid size .
returns the maximum size of the size .
returns a string that contains the specified string that contains the given string .
matches a string with the given name and the given string .
checks that the given string is a valid lower case .
checks if the given string contains a specific number of characters .
returns an empty range of integers .
checks if the given email is a valid email address .
loads the given url from the given url .
initialize the thread context .



find the first occurrence of the specified list of { @link } s .

returns the lowest common interface .
find the path to the annis directory .
/ * ( non - javadoc )
logs the error to the client .
called when the browser is stopped .
get the handler for the given request .

sets the action to the given action and returns the result .
check if the set of is a .



get the resource adapter for a given resource .
get the base base resource for a given resource .
put a resource with the given resource .
get the resource adapter for a resource .
get the package resource .
get the class of the given class .
get the base class name for the given package name .
returns the value of the given property . if the property is not set it is returned .
get the xml element from the xml stream .
returns the name of the element or null if it is not a child element .
returns the name of the element in the list .
returns the value of the given node .
get the attribute value for the given key .
get the attribute value for the given node .
normalize the properties from the given string .
decodes a row from the table .
read a from the given byte array .
decodes the specified column from the given { @code } .
decodes the given biginteger into a { @code bigdecimal } .
decode a string from a byte array .
decode a signed object from the given java object .

decode a bytebuffer into a byte buffer .
get the list of team objects for the specified team .
list the ( ) of the specified list of objects .
[ variable ]
query the features of the .
creates a new { @link } .
get the for the contig .
get the details projectrole numberofpersonnel compensation based on the .
check the status of the given {
/ * ( non - javadoc )
write data to the data stream .
writes the data to the specified data set .
returns the key for the given key .
get the http http request .
get the response stream from the url .

execute http request and returns the response .
/ * message mentions
updates the id of the object .
returns the message for the message .
recycles the list of receivers .
this method will remove the given item from the queue .
returns a list of all that are contained within the given range .
returns the string representation of the .
returns the number of bytes that are canonically in the list .
returns the maximum size of the size .
flattens the buffer into a buffer .
extract the offset from the given offset from the given offset .
extracts the { @link bytebuffer } from the buffer .
/ *
convert a list of to a list of tokens .
add a new hole to the file .
sync the sync data .
opens the file .

























verifies that the certificate is trusted .
print the ffdc information for the current thread .
binds the specified type to the specified type .
returns a { @link } that is a { @link } .

overrides the visitor to initialize the stack and initialize the stack and reset the stack and the stack trace of the stack .
implements the visitor to look for the code that are not in the specified method .
overrides the visitor to look for the field and the and .
check if the field is a class or a field name .
check if the class is not a class .
check the method of the .
check if the is a valid type .

counts the number of times the number of times the given string is the number of times the number of times the string is not a valid string .
returns the number of arguments for the given number of arguments .
checks if the exception is a member of the type .
check if the file is in the file .
/ * ( non - javadoc )
visits the given method and return the next .
check if the class name is a package name .



returns the string identifying the given string .
implements the visitor to reset the opcode stack
returns true if the method is a method or set .
implements the visitor to look for the of the class and the
report the map of the given name and the map of the given name .
implements the visitor to reset the stack
implements the visitor to look for a
initializes the .

handles a block of data .
returns the segment that is associated with the given segment .
check if the given stream is valid .
find the first segment of the given segment .
returns the offset of the segment .
release the segments in the cache .
acquires a readlock on the given { @link } .
shutdown the server shutdown .
returns a new { @link } for the given { @link jobid } .
returns a new { @link } for the given { @link jobid } .
creates a new .
creates a new { @link } for the given { @link } .
/ * ( non - javadoc )
commit the transaction .
commit the transaction associated with the transaction .
mark the current transaction .
this method is used to restore the transaction associated with the transaction .
open a new page for a particular .
{
/ * ( non - javadoc )
{
{
{
{
{
open a new block with the given id .
remove a block from the given block .
overrides the visitor to initialize the stack and initialize the stack and initialize the stack and initialize the stack and initialize the stack and initialize the stack and initialize the stack and initialize the stack .
implements the visitor to reset the opcode stack
overrides the visitor to look for the stack of the type of the stack .
returns the method with the given name or null if no such method exists .
adds a new sample to the sample .
/ * ( non - javadoc )
recovers the checkpoint of the checkpoint .
{
generate a checkpoint id .
deletes the given path from the given path .
get a data from the given data
sets the light and device position .
draws a new link to the specified { @link link } .
/ * ( non - javadoc )
{
validate the metadata of the given entity .
returns the metadata field .
build metadata for a given entity .
build metadata for a property .
creates a new instance . <p >
creates the command line arguments .
<p > the list of ip addresses associated with the aurora db cluster . < / p >
<p > the list of ip addresses in the aws account . < / p >
<p > the metrics for the cluster . < / p >
main method to run the .
invoke a method with the given name and arguments passed in the specified class .
<p > the list of grants . < / p >
<p > the list of managed instance ids . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
add a key pair to the list of .
add a filter to the filter .
read from the file name from the file .
update the update key and update the existing state .
parses the given input stream and returns a new object .
{
returns the value of the element .
resolve the given { @link } to a { @link } .
execute the sql statement .
adds the specified number of bytes to the specified number of elements .
removes the specified number of bytes from the specified size .
{
compute the range of the given range of the given range .
loads the schema from the database schema .

{
returns the matrix that is nearest to the specified matrix .
run the given { @link } .
returns the matrix matrix by the given column vector .
returns the matrix vector by the given column and col vector .
returns the matrix norm of the matrix .
subtracts the column vector from the matrix .
compute the column vector .
compute the matrix norm of the matrix .
creates a new matrix that contains the given vector and stores them in the matrix .
creates a new matrix that is the inverse of the matrix .
permutes a sparse matrix by a sparse matrix
returns a new vector that is backed by the given array of { @code } .
sets the value of the specified component .
sets the value of the specified component .
sets the values of the given component .
returns the product of the two vectors .
add a new vector to the other vector .
add the other vector to the other vector .

returns the value of the given component .
returns the index of the first row of the given component .
{

compares two values with the specified value .

writes the given row to the list of columns .
{
{
create a new task with the given name and type .
write the contents of the specified channel to the output stream .
get the file from the given file .


encode a url into a url .
decodes a file from the given filename .
returns the instance for the given .
converts a value to a double .
{
{ @inheritdoc }
reads a segment index .
returns the host name of the given host .
start the start tag of the document .
checks if the given char is a valid char .
generates a html page for the html page .
this method is used to create a file from the given file .
read the css css css css prefixes .


find the best match for the given number of neighbors .
computes the difference between the two hypothesis and .
builds a qr - inverse of the given .

computes the householder vectors of submatrix in a sparse matrix .
compute the k - tridiagonal fft
find the best fit in the input array .
compute the offset in the array of the and .
adds a new item to the table .
compute the number of and .
start building a start tag .
add a new element to the specified element .
add a text element to the text .
returns the end element of the element .

print a warning message .
<p > . < / p >
add a { @link } to the given { @link } .
{
main method .
check if the given file is a valid maven artifact .
installs the jar file and returns the jar .
process the model .
reads the pom from the pom file .

clear the fastlist .
insert a node in the given node .
deletes a node by key .
balance a node by looking at the current node s subtree rooted at the given node .
******************** misc ******************************************
rotate the subtree rooted at the left and right left and right right left and right .
find the first node in the tree .
returns the first node in the map .
{
process the process process process process process process .
process a single process from a stream .
process the given { @link } .
open the database connection .
close the database .

this method is called when the checkpoint is already started .
opens a new { @link } .

configures the font name and sets the fonts to be used by the font .
clear all the sessions and clear all the sessions .
handles a peer message .
add a peer to the peer .
notifies all listeners that the peer has been received .
notify all listeners that the peer has been changed .
notifies all listeners that a peer has been received .
notifies all listeners that the channel has been received .
update the peer peer peer .
joins the join join join and joins the given join join .
generate the join list of all join joins .
generate the join tree .
joins the join join tree into a list of trees .
join the join join .
/ * ( non - javadoc )
dumps the join to the join join .
generate the path to the .
the parent class to find the first node that is the deepest node of the given parent node .
generate the tablealias for the given parent name .
generate the join plan for the given list of nodes .
find the join join by the join .
search for the join between the plan and join the plan node .
returns the { @code } with the given { @code } .
checks if the given list of expressions expressions match the given name .

encodes the given value into the map .


calculates the segment for a segment .
generate a unique id from the given id .
decodes segment id from segment segment .
<p > . < / p >

decode the given { @code } into a { @link } .
decodes uri and return uri .

returns the value of the given node .
registers the future with the given future .
restarts the {
returns the for the specified number of times .
creates a { @code } that is used to determine the rate of the specified { @code } .
creates a { @code } that is used to calculate the scaling between the two sets of values .
prunes the cache and returns the updated value .
updates the pn table of the table .
clicks a webelement matching the given element .
checks if the given element is a drop down .
returns the index of the last modified key / value pair in the cache .
returns the {
sets the last index in the cache .
returns the { @code } that is resolved by { @code } .
returns the { @code } that is a { @code } .
creates a new class with the specified name and class name .
creates a new class with the specified class name .

adds a new to the list of .
removes a from the given
{
lists all the descendants of the specified entity types .
lists the status of the specified entity types .
returns the specified { @link } .
returns a new session with the specified name .
creates a new .
creates a new session with the given id .
updates the specified managed instance type .
deletes a specified entity .
deletes a specified entity .

creates a new { @link } for the given { @link keystore } .
creates a trust trust trust manager with the trust key trust .
deletes the specified forwardingrule resource .
deletes the specified forwardingrule resource .
retrieves the specified forwardingrule resource .
retrieves the specified forwardingrule resource .
creates a forwardingrule resource in the specified project using the data included in the request .
creates a forwardingrule resource in the specified project using the data included in the request .
retrieves the list of forwardingrule resources available to the specified project .
retrieves the list of forwardingrule resources available to the specified project .
updates the target routing for a target .

updates the target routing for a target .
{
retrieves the list of all the disks and templates .
retrieves the list of referrers to a list of disks .
returns the specified list of available disk types .
returns a list of disk types for a specified type .
retrieves the list of disks in the specified zone .
retrieves the list of disks in the specified zone .
use {
<code > . google . privacy . dlp . v2 . unwrapped = 4 ; < / code >
<code > . google . privacy . dlp . v2 . = 3 ; < / code >
<code > . google . privacy . dlp . v2 . unwrapped = 3 ; < / code >
<code > . google . privacy . dlp . v2 . unwrapped = 3 ; < / code >
sets the greeting response .
sets the routing policy for the routing routing .
create a new { @link com . google . bigtable . . } .
{
{
{
draw the tile by the tile coordinate .
draws the geometry and labels in the geometry .
draws the collision geometry to the specified location .
draw a polygon in the polygon
get the bounding box of the bounding box .
draw a tile line .
get the area of the bounding box .
draw the polygon and draw the bounding box .
draw the tile by drawing the bounding box

creates a { @code indexcolormodel } from the given { @code } .

tag :: = / / . html > tag tag tag tag tag tag tag tag tag tag tag / code >
check if the request parameter is a valid request .
updates the specified project in a project .
retrieves the details of a project .
lists the project streams in the specified project .
closes the stream .
find the maximum length of the given size .
sets the flag .
open the image .
/ * ( non - javadoc )
returns the depth of the given .

get the audio data for a given byte array .
open the demuxer and open the ncfile .
creates a frame from the audio format and timecode .
get the quality of the from the input stream .
get the image from the given image .
/ * ---------------------------------------------------------------------------- - -
copy file to file .
copy a file to a file .
copy file to file .
copy a file from the given file to the given file .
copy the files from the given directory to the given directory .
copy the contents of the input stream to the given output stream .
get the file name from the file name .
get the file name from the file name .
get the path from the given path .

check if the file is a file or file .
get the temp directory for the current working directory .
reads the contents of the given file into a byte array .
reads the contents of the given input stream into a byte array .
write the contents of the file to the given file .
deletes the given file from the given file .
deletes the file recursively .
renames a file .


returns a file of the specified file .
/ *
get the free space .
convert a human - readable form of the to a human readable size .
visits a given file and writes them to the specified directory .
check if the string is valid .
check if the string is a valid form parameter .
check if the given string is a valid .
check if the given string is a valid type .
/ * ( non - javadoc )
this method is used to determine if the given is a valid .


returns the type of the given string .
returns a normalised representation of the given string .
returns the number of arguments for the given string .

factory method for creating a new label .
factory method for create a new { @link textfield } .
{
get the singleton instance of the given type .
set the attributes of the attributes .
{
lists the export logs in the specified list .
lists the logs in the specified log .
returns a log metric log for a particular metric .
returns a log metric log for a particular metric .
creates a log metric log sink that will be used to create a new instance of the list of metric names .
creates a log log log message .
creates a new metric with the specified metric .
creates a new metric with the specified name .
<p > deletes metric . < / p >
<p > log metric log ( that is a metric with the metric name ) . the metric must be empty .
parses a { @link } .
{
waits for a new {
sends a { @link } to the client .
sends a { @link } to the client .
sends a { @link } to the specified { @link } .
send a { @link } to the sentry server .
caches the mapping of the specified key .
decodes the data from the given byte array .
/ * ( non - javadoc )
converts a into a

converts a { @link bufferedimage } to a { @link bufferedimage } .
returns a copy of the image with the given size .
creates a from the given .
parses a file from a file .
initializes the channel with the specified channel .
{
adds a new version to the list of versions to be used for the current version .
send data to the given data .
/ * ( non - javadoc )


copies the resource to the specified file .
check if the file is in the file system .
create a new geometry index .
add a new geometry index to the list of children .
parse a geometry from a geometry .
get the index of the first vertex at the deepest index
returns true if the parent index is disjoint by the parent index of the parent vertex .
returns a list of all vertices that are within the specified index .
returns a list of all tiles that are contained within the given index .
checks if a geometry is a geometry and a polygon .
get the index of the first index of the specified geometry .
returns a new linearring linearring from a given location .
validates a geometry focusing on the geometry .
helper to create a new index object
captures the specified luis amazon s3 bucket .
validates the given request and returns the response .
validates the request .
registers a new connection .
add a geometry to the set of geometries .
remove a geometry from the geometry .
clear all geometries of the geometry .
stop the .
merges the given { @link } to a { @link } .
factory method for creating new mail .
factory method for creating a new { @link } instance .
creates a new instance of the profile .
factory method for creating a new instance of { @link } .
sets the description for the given .
sets the routing routing routing strategy field name and value .
add a custom profile to the client .
compresses the specified buffer into the given destination .
factory method for creating a component .
factory method for creating the component with the given id .
{
writes the response to the response .
write the response to the response .
writes the request to the given { @code } .
{
{
sets the .
set the for the given .
set the handler for the given handler .
show views for the view .
<p > . < / p >
creates a builder for a given dataset id .
fire the listeners for the given service .
fire the listeners for the given service .
fires a new session .
notifies all listeners that the session is being registered .
gets a list of agent s permissions .
returns a agent that is created by the agent .
lists the specified project .
list the search plans in the specified project .
submits a request to a single agent .
executes a request to execute a worker .
executes a request to execute a request .
export the agent .
export the agent in the specified agent .
[ target ]
imports a agent into a new agent .
restores the specified agent s tracking information .
creates a new { @link } with the given { @link } .
{
{
returns a map of all the { @link } s that are the same as { @link } .
writes the given text to the given writer .


show a dialog with the given message .
decodes a bit encoded from a base64 encoded string .
/ * ( non - javadoc )
decodes a string into a base64url encoded string .
decodes a { @code int } value into a { @code int } .
decodes a 64 - bit encoded int from a byte array .
decodes a { @code int } value from the given { @code byte } .
encodes the given bit into a bit buffer .
encodes the specified value into the given { @code } .

encodes the given value into the given byte array .
encodes the given byte array into a byte array .
encode a raw data to a base64 encoded string .
returns the number of bits in the given bit .
get the number of bytes in the given string .
returns the number of bytes in the specified { @code int } .
{
factory method for creating a radio button .
factory method for create a new { @link radio .
factory method for creating the new { @link textfield } for the components of the component .
{
closes the session releasing the connection .
get the destination for the given destination .
open the comm connection to the ooo server .
executes the given { @link } .

returns all annotations of the given annotation type .
returns all namespaces that are not in the namespace .
returns all terms of a terms that are terms of terms in terms of terms .
returns all parameters in the specified order .
returns all members of a group .
returns all statements that are referenced by the given statement .
sets the date of the date .


returns the namespace that is the namespace of the namespace .
returns the number of statements that are unique accross the statement .
get the map of { @link } s .
resolves the { @link } s for the given { @code } .
returns a map of statements that are the group of the given group and returns them as a map .
marshall the given parameter object .
build url url
build url url for url .

checks if the given key is a key .
creates a new { @code } instance with the specified key .
returns a new instance with the specified key .
returns a new instance with the specified key .
parse the given node .
get all available web templates .
factory method for creating the { @link } .
returns true if the database connection is not available .
/ * ( non - javadoc )
{
main method to run the .
creates a field of a field with the specified name and field name .
creates a builder for a given type .
converts a list of strings to a list of strings .
{
checks if the given url is a valid url .
/ * ( non - javadoc )
deletes the next paragraph .

returns the line type of the line .
returns the level of the specified section .
build the section of the section .
/ * returns the name of the navigation .
parses the { @link } and adds the { @link } to the list of links .
parses the spans of the spans .
parses a line of text and returns the spans .
{
parses the content of the element .
parse the content of the given content .
returns a list of links for the given list of links .
returns a list of all templates that are contained in the given list .
sets the paragraph paragraph .
serialize json string to json .
/ * ( non - javadoc )
verify that the given sequence is valid and is not valid .
loads the classes from the class hierarchy .
loads all classes from the given class .
build the union of the .
returns a new array containing the intersection of this {
returns a composite array of classes that are imported .
filters all classes and their transitive members .
returns the { @link class } that is used to filter the classes .
returns the interfaces that this class is a member of this class .
logs a error error log error .
logs a message to the log .
logs a message and then logs the error to the log .
logs the given log message .
returns the first member of this class .
returns the interfaces that this classloader is located in the specified package .
returns the { @link annotation } s .
decodes the block from the given block .
/ * private methods
returns a { @link com . hazelcast . core . resourcemodels . list } .
returns all superclasses of the specified class .
generate a new from the given package .
generates a from the given .
generates a dot file containing the of the given { @link } .
generate a new .
generate a parity file .
generate a generator file .
sets the input stream .
set the input string .
reads a block from a block .
this method is used to generate a block of a block that is aligned to the next block of bytes .
/ *
parses a block of bytes .

sets the input .
validate the settings of the .
{
sets the parameters to be used .
{
returns the text of the given .
stores the buffer size and update the current buffer .
returns true if the given class loader is a class loader .
find the classpath for the given class .
build the click control bar . <p >
/ * ( non - javadoc )
{
this method is used to convert the value of a string to a string .
compares the specified .
check if the geometry is valid .
analyzes sentiment - > operator analyzes the sentiment of the sentiment .
analyzes the specified entities into a single document .
analyzes the response .
analyzes the given { @link } .
parse the text and return the result as a json object .
find the classpath entries for the given class .
creates a new topic in the specified project .
creates a new topic .
publishes a list of messages to the specified publish list .
publishes a list of messages to the topic .
returns the specified topic topic .
returns the topic for the specified topic .
lists all topics in the project .
lists all topics in the specified project .
lists all subscriptions in the specified subscription .
lists all subscriptions in a subscription .
deletes the specified topic .
deletes the topic .
retrieves the list of interconnect templates available to the specified project .
retrieves the list of interconnect templates available to the specified project .
returns the specified number of network templates in the specified list .
returns the specified interconnect and target type .
retrieves the list of available rules in the specified zone .
retrieves the list of available rules in the specified zone .
/ * ( non - javadoc )
use {
returns all the { @link annotation } s that are annotated with the given { @link annotation } .
{
log a message with the given arguments and arguments .
initialize the .

{
{
{
saves the given database to the given { @code } .
{
find the first column name in the database .
creates a new instance of the given class .
creates a new { @link } from the given { @link } .
<pre > type of a key - value pair . < / pre >

generate the for the given method .
generate a for the given field name .


validates the given value against the given value .
generates a for the given method .
generate the output stream for the given method .
generate the method for the given method .
generate the method .
generate the for the given method .

find the first parameter of the given parameter name .
find the number of parameter types in the given { @code parameter } .
generate the sql condition for the given method .
generate the method .


generate the output stream for the given method .

{
{
{
{

read a timestamp from the given timestamp .
{ @link }
creates a new { @link } with the specified number of seconds and the specified time .
returns a { @link } that is used to calculate the difference between the two { @link } .
generate the schema .
cdf of distribution
calculates the cumulative probability of the given .
calculates the number of times the given probability is the probability of the given .
quantile function .
<p > . < / p >
check that the value is a valid integer .

check that the size of the string is a valid integer .

check if the given string is a valid value of the given value .
returns the first letter of the first letter .
writes the given string to the given writer .
convert a string to a string .


check if the agent is a valid
/ * [ deutsch ] <p > schreibt diese eine instanz mit hilfe - angegebenen { @code bind . < / p >
computes the of the from the array of parameters .
performs the algorithm on the given .
returns the vector array of the given array of elements .

returns the boolean value of the given attribute .
configures the { @link subscriber } to be used for the lifecycle of the adapter .
calls the {
retrieves the list of interconnect attachments contained within the specified project .
retrieves the list of interconnect attachments contained within the specified project .
deletes the specified targettcpproxy resource .
deletes the specified targethttpsproxy resource .
returns the specified targethttpsproxy resource .
retrieves the specified target resource .
creates a targethttpsproxy resource in the specified project and region using the current virtual network gateway if it could not be created .
creates a targethttpsproxy resource in the specified project and region using the current resource template .
retrieves a list of forwardingrule resources available to the specified project .
retrieves the list of interconnect attachments contained within the specified target .
{
returns the label of the given selectitem - style string .
factory method for create a new { @link textfield } .
{










returns the start of the given character .
returns the character at the given index .
{
{
warning : this is a warning integration .
output the output stream .
closes the current thread .
add a mutation to the list of aggregates .
get the index of the
{
{
splits the bounding box and the split split into a .
returns the first item in the list .
/ * ( non - javadoc )
{
computes the knn distance of the knn distances of the subtree of the given map .
compute the knn distance of the knn distances of the given node .
performs the k - k - k knn distance of the knn distances of the knn distances of the knn distances of the specified element .

get a { @link } from the adapter respecting the given { @link } .
/ *
create a new { @link } with the given { @link } .
compute unscaled distance .
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
get the result result .
returns the list of available { @link } .
adds the given { @code } to the tracker .
run the algorithm .
main method to run the .
use {
check that the type is a type of type t .
checks if the given type is a valid type .
nonsymmetric reduction to
compute the tridiagonal ql algorithm .
nonsymmetric reduction to hessenberg .
adjust the double - precision floating - point values .
nonsymmetric reduction to the input array .
symmetric tridiagonal ql algorithm .
/ * the point is the following :
unitize the given .
returns the vector array of the given array of doubles .
{
/ * ( non - javadoc )
get the driver for the driver .
registers driver .
creates a new instance of an instance .
deletes a single instance .
deletes a single instance .
deletes a single instance .
completes the specified instance .
run the algorithm .
serializes the content of the object into the { @link com . google . gwt . user . client . rpc . serializationstreamwriter } .
deserializes the content of the object from the { @link com . google . gwt . user . client . rpc . serializationstreamreader } .
creates a chart chart chart .
calculate the coefficients of the .


loads the class name from the class loader class loader .
loads the class name from the class loader .
creates a chart chart chart .
process the tag .

parses the given reader into a { @link reader } .
parses a { @link reader } from the specified reader .
parses a reader into a { @link org . w3c . dom . reader . reader } .
parse a text element from the given text .

executes the given script and returns the result .
initialize the .
/ * public int ( int int ) {
returns the value of the .
serializes the content of the object into the { @link com . google . gwt . user . client . rpc . serializationstreamwriter } .
deserializes the content of the object from the { @link com . google . gwt . user . client . rpc . serializationstreamreader } .
creates a new instance .
returns the value of the given property name .
cleans up the string of the given string .
{
{
{
converts a { @link bytebuffer } to a { @link bytebuffer } .
serialize a page to a byte array .
add a vector of vectors to the vector .
subtracts the vector from the vector .
{
copy the vector vector from the vector to the vector .
returns the number of characters in the given double .
multiply this vector by vector vector vector by vector vector vector .
returns the average distance of the average of the given number of points .
calculates the euclidean distance between the two vectors .
returns the euclidean distance between the given number of points .
returns the vector of the given angle .

returns the dot product of the dot product .

normalize the vector .
checks if the minimum corner of the box is equal to the minimum corner .
checks if the given sphere is a circle of the given radius .
returns the vector that the vector is equal to the specified vector .
returns the vector that is equal to the supplied vector .
returns the vector of the product of the two vectors .
serializes the content of the object into the { @link com . google . gwt . user . client . rpc . serializationstreamwriter } .
deserializes the content of the object from the { @link com . google . gwt . user . client . rpc . serializationstreamreader } .
check that the { @link } is an annotation that is a member of the annotation .
generate the declaration .
print a error error message .
print the warning message .
find the least key in the cache by the specified key .
get the bean context bean context bean context .
moves the specified elements into the specified position .
returns the object that is the specified result set .


initializes the property .
get the package name .
returns the value of the property .
run the algorithm .

computes the neighbors of the given .
ensures the given data point is a power of the form of the second .
tries to acquire the lock held by the lock held by the lock .

get the object at the specified index .
swap the elements of the specified array at the specified position .
{


creates a default { @link } for the specified { @link } .
calculates the for the given .
{
finds the best - defined item for the given index .


sets the authentication token for a user .
get a path for the given path .
delete a path .
post a path to the user .
put a path into the path
serializes the content of the object into the { @link com . google . gwt . user . client . rpc . serializationstreamwriter } .
deserializes the content of the object from the { @link com . google . gwt . user . client . rpc . serializationstreamreader } .
/ * parses a bracketed expression .

run the algorithm on the given database .
check if the given { @code } is equal to the specified tolerance .

fills the with the given number of data points .
pdf of the pdf of the distribution .
pdf function .

create a new leaf entry
run the algorithm .
returns the clusters that are clusters in the cluster .
find the best matching with the specified number of clusters .
find the best match for the given list of .
initialize the object from the given database .
update the density matrix .
find the best solution for the given database .
find the best match for the given subspace .
prunes the clusters in the given vector .
compute the of the .
computes the of the array .
/ * ( non - javadoc )
returns the roles for the specified roles .
creates a random collection of the specified values .
run the algorithm .

calculate the for the given .
calculate the score for the given .

returns a copy of this period with the specified period . <p > this returns a copy of this period with the specified period . <p > this returns a copy of this period with the specified period . <p > this returns a copy of this period with the specified period . <p > this returns a copy of this period with
returns a copy of this period with the specified period .
register a .
checks if the type of the first element is a member of this type .
get the type of the type .
checks if the given type is a wildcard type .
returns the value at the given index .
get the root of the current context .
add a new child node to the list of children .
write the output to the output stream .
this method is called when the tag is rendered .
sets the value of the attribute .
get the property for the given property .
{
get the value of the property .
put a key / value pair into the cache .
/ * ( non - javadoc )
put all the keys in the map .
fire the children of the given result .
fire the .
fire the children of the given result .
check if the is a .
add a new value to the set .
add a new value to the list .


serializes the content of the object into the { @link com . google . gwt . user . client . rpc . serializationstreamwriter } .
deserializes the content of the object from the { @link com . google . gwt . user . client . rpc . serializationstreamreader } .
serializes the content of the object into the { @link com . google . gwt . user . client . rpc . serializationstreamwriter } .
deserializes the content of the object from the { @link com . google . gwt . user . client . rpc . serializationstreamreader } .
rehashes the iterator to the given node .
returns the number of entries that are the same as the last element .
{
{
{
read the leaf node of the given node .
{
/ * ( non - javadoc )
get the destination destination for a specific destination .
converts a string to a xml string .
convert the xml xml into a string .
initialize the .


invoke the given arguments and invoke the method on the given arguments .
sets the specified method on the given object .
register a property with the given name and property name .
registers a method with the specified managedbean name and the given method name .



invoke the method with the given arguments and invoke the method .
无视private / protected修饰符 .
get the value of the specified property .
get the property associated with the specified object .
sets the property for the given object .
returns a new property value corresponding to the given property name .
returns true if the property name is a valid property name .
checks if the given name is a getter or a name .
returns the property name for the given property name .
returns the property value for the given property name .

creates a new { @link } .
adds a new { @code protocol } to the builder .
insert a new value to the list of listeners .


build map map with the given parameters .
build map map from the page map .
decode the .

decodes a string into a list of filters .
compile a file from a file .
parse a file into a file .
parses a file into a file .

compile a compile - line file into a file .
compiles the given compile file .
compile a compilation unit .
decodes a row from the page .
parses a file into a { @link } .
write the given { @code } to the given { @link } .
creates a new that is a copy of the given expression .
creates a new expression that is a binary expression that is a variable expression that is used to modify the input variables .
visits all method types of the given class .
creates a .
adds the fields to the fields .
returns a new { @code } instance for the given closure .
get the tiles for the given tiles with the given size .
get the tiles inside the tile

/ * ( non - javadoc )
serializes the content of the object into the { @link com . google . gwt . user . client . rpc . serializationstreamwriter } .
deserializes the content of the object from the { @link com . google . gwt . user . client . rpc . serializationstreamreader } .
visits a value of a type .
returns the size of the file .
puts the byte vector into the given byte array .
puts the specified into the given array .

returns the smallest power of the specified subspace .
merge the specified space and stores them into the array .
updates the given size and fill the specified number of elements .
update the given with the specified number of elements .

/ * ( non - javadoc )
sets the mode .
sets the proxy for the given .
wait for the task to finish .



log a single event .
log a single event .


start the background thread .
clear the current thread .
check the type of the call to the constructor .
publish a message to a specific message .
publish the log messages .




returns the value of the specified property .
checks if the given value is a valid value .
/ * ( non - javadoc )
release the current thread .
builds the match for the specified object .
check if the hypothesis is a vector of the given vector .
{
create a new for the given type .
tag :: . () . () () {
ends the tag .
process the given html page .
process the template .
renders the given tag id .
renders the given attribute as a string .
compute the of the given .

persistencedelegate . ()

render the tag .

==========================================================================
transform the given source into a file .
validates that the given is not valid .
parses the given input stream and returns the { @link } .
parses the xml element and returns a { @link xmlreader } object .
check if the document has been parsed .
validates the given .
update properties with the given properties .
/ * ------------------------------------------------------------
render the tag .
release the current thread .

acquires the resource listener .
release resources held by this managedconnection .
ping a single { @link } .
schedules a new { @link } that will be used to fetch the number of connections to the specified { @link } .
this method is used to create a { @link } .

retries the request .
handles a request that is received from a stream .
parses the given string and adds it to the given string .

converts a json object into a json object .
returns the next in the direction of the given direction .
======================================================
process the given http request .
returns the host address by the host name .
visits a array .
swap the spans in the subtree rooted at the end of the array .
sets the state of the .
sets the data set for this dataset .
formats the message with the given key .
adds a new resource to the list of .
get the path to the sort direction .
process the request tree .
selects the selected node in the given list .
find the first sibling of the given node .
find the first sibling of the current tree .
select a node .
sets the button styling .
start the user .
{
sets the value of the specified field .
sets the value of the map to the map .

returns the calendar date of the calendar object .



<p > . < / p >
formats the given date as a string .

gets the time string from the date picker .
formats a date and time string to a date .
performs the following operation : if the date is a date and the end of the end of the given date is closed .
initialize the search .

convert the given map to a list of strings .
{
get a list of all notes in the specified page
get a pager of all notes in the collection .
get a pager of project objects .
get a list of all discussions for a given project and authenticated
get a pager of project snippets .
get a pager of all the authenticated user and all the projects in the authenticated user .
get a single issue from a project .
get optional optional optional optional optional optional optional optional optional optional instance rel .
creates a single project that is a link - id .
creates a new issue for the specified project .
issues a single issue and delete a single issue .
update a single edit item .
deletes a specified project .
get a specific .
get a specific .
get the for the specified project .
get a { @link } for a specific instance .
get all merge requests that match the specified merge request .
get a pager of all merge objects that match the specified merge request .
get a stream of all merge requests that match the specified merge request .
create a new { @link } .
build a new instance .
injects the feature and items from the current window and the current station s and .
register a { @link } to listen to the { @link } .
register a { @link } to listen to the { @link } .
register a { @link } to listen to the { @link } .
register a { @link } to listen to the { @link } .
registers a { @link } to listen to the state change events .
************************************************************************
add a { @link } to a { @link } .
------------------------------------------------------------------------
method
add a new { @link } to a { @link } .
moves the array to the given coordinates .
removes the index of the specified geometry from the list of indices .
set the state of the state of the given state .
create a callsite
{
get the object id of the given object .
get the id of the given object .

url encode the given url .
executes the given url and returns the result as a result .
performs a http post on the given http response .
performs a http post on the given url .
performs a post request .

performs a put request on the given url .
put the response into a file .
adds a form parameter to the form { @code form } .
adds a form parameter to the form : { @code name }
validates the response .
handle exception thrown exception .
returns a { @link } for the specified key .
returns a {
get a list of the parameters for the specified page .
get the default value for the user .
returns the version of the given project .
sets the range of the range .
returns the number of bytes that are available to the end of the array .
if the adapter is currently being used by the fastadapter this method will return the oldest item .
set the layout of the layout .
{
returns the offset of the next chunk of the first occurrence that the next position in the range [ offset ] = offset .
adds the view to the backstack .
{
updates the parameters of the view with the given parameters .


get a service service service .
{
update a service service .
sets the project id for the specified project .
get a specific project .
update the service endpoint service service .
get the service service for the given service id .
update the given service name for the given service id .
update a project .
get a specific project .
get the value of the field .
this method initializes checkboxes
creates a new instance .
receive notification of the start of a start element .
receive notification of the end of the element .
compute the distance from a geometry .
set the feature list .
enable or disable the flag .
build the widget .
returns a list of all the elements in the list .
creates a linestring from a geometry .
returns the child node with the given child .


{
sets the value of the specified object .
sets the logger for the given logger .
get the logger with the given key .
get the logger with the given key .
add a to the job .
adds a new rule to the scene object .
/ * add a new layer rule to the
creates a new instance of the given type .
creates a new array containing all the elements of the given array .
creates a new array with the specified elements .
creates a hash for a hash .
creates a new { @code elements } containing all elements of the given { @code elements } .
get an array of { @link } s that are in the specified array .



returns a new { @code sortedmap } with the specified key .
returns a hash of the specified paired - scoring hash .

creates a range of { @code } from the specified range .
returns a range of ranges for the specified range .



returns a { @code } that is equivalent to the specified { @code offset } .
loads a configuration from the given configuration file .
shuts down the .

create a url for the given url .
parses a date time format .
clear the .
read a file from the specified table .
{
{
parses a duration from a duration .
returns the duration of the duration of the specified duration .
returns the number of seconds in seconds .
sets the time zone of the given { @code string } to the given { @code date } .
sets the timezone for the given timezone .
returns the nearest end value of the given value .

returns a new calendar object with the specified amount .

converts a { @link calendar } to a { @link calendar } .
returns the list of dependencies for the given dependency .
returns the set of dependencies for the given .
/ * package
returns the { @link } for the given { @code } .
/ * ( non - javadoc )
returns true if the is a valid .
create a new artifact that is used to create a artifact .
logs a user with the given password .
logs the current user .
login for a user .
check if the is a .
creates a new { @link } with the given { @link } .
returns a { @link } that uses the given { @link } .
sets the .
returns the total number of holes .
returns the maximum area of the polygon .
returns the length of the polygon .
returns the distance between the two specified coordinates .
check if the input is valid
get the bounds of the bounding box .
adds the options to the options .
returns the coordinates of the bounding box .
get the position of the given position .
returns the first element of the given element .
create a linestring geometry from a geometry
gets the id of the given event id .
parse the locale from the locale .


get the annotation for a given annotation .


get the method for the given class .
get the value of the attribute of the
{
imports the data from the given tsdb into the specified columndefinition .
/ * ( non - javadoc )
invokes the given method on the given target object .
sets the visibility of the notification .
execute a method with the given parameters and returns the result .
executes the given request and returns the response as a result .
collect all stats and statistics to be used for the last stats .
generates the stats for the stats .

initialize the cache for the given tsmeta .
collect all the and the .
formats the given name as a string .
generate a query for the stats .
/ * ( non - javadoc )
create a style for the geometry .
returns the length of the specified dimension .
index a json index with a specific index .
read the contents of the given file into the given file .
{
index a single index .
parses a json string into a { @link } .
parses a json object from a json object .
parses a json - ld stream into a { @link jsonparser } .
serializes the object into a string .
serializes the given object into a byte array .


returns the value of the preference s value .
returns the value of the preference s preferences .
{
add the ui to the ui panel .
normalizes a geometry from the given geometry .
returns a geometric geometry .
extract the type from the map .
export a file into a file .
draw a .
initializes the scroll position .
returns the {
{
{
creates a new template instance from the given template .
creates a template builder for the template builder .
create a template variable with the given template name and template name .
sets the template variable .
check if the given candidate is a valid template name .
returns the names of the variables in the given { @code name } .
expands the given uri into a template .
replace the template variables in the specified form of the uri .
appends the given { @code value } to the { @code template } .
appends a value to the given value .
reads the contents of the input stream into a byte array .
creates a new { @link } from the given { @link } .
create a new { @link } from the given { @link } .
get the { @link } for the given { @link } .
adds a button to the button .
add features to the scene .
handles the selection event .
adjust the features to be used by the scene .
set the export data set .
lists the forwarding forwarding services to the specified ports .
{
creates a new opinion object .
find a map of all templates in the given .
validates the model and validates the model .
parses the given query and returns the response as a string .
flushes the underlying output stream to the output stream .
collect all timers and returns the result .
{
{
{
updates the trigger for the given trigger .
get the job id from the job .
get the trigger trigger .
{
get a list of all job - defined properties .
<p > acquire the trigger and returns the first fire trigger . < / p >
releases the trigger and remove it from the trigger .
{
called by the scheduler to trigger the trigger .
{
{
parses the given type from the given type .
{
creates a token for the given token .
run the run method .
returns a { @code } that is used to convert the given { @code } to a { @code } .
{

this method is used to generate a node from the mathml tree .
generates a latex of the given mathml formulas .
parses the input stream and returns a reader for the given line .
extracts the language from the language .
creates a new { @link } field for the given { @link } .
adds the specified { @code } to the list of { @code } .
returns true if the key equals the specified key .
returns the value of the specified key .
{
returns an immutable set view of the set of entries .
ensures that the array is not empty .
/ * ( non - javadoc )
{
returns the next integer in the array .
get the last bit .
returns the next bit in the next bit .
returns true if the specified range of the given range is equal to the specified value .
add a new value to the list .
adds the element to the set of elements in the range .
removes a mapping from the input list .
removes the first occurrence of the specified range from the list of elements from the list .
returns true if the given { @code set } is equal to the specified <tt > bitvector< / tt > .
removes all elements from the input stream .
removes all occurrences of the given set of characters .
adds all elements of this set to the specified set .
returns the number of elements in the array .
returns the first element in the array .
resize the eldest space .

get the response as a string .

put a new { @link } to the specified { @link path } .
delete a path from the given url .
convert a { @link } to a { @link } .
returns a long - padded with the specified number of hours and the unit .
adds a temporal amount to this { @link flux } . <p > this adds the specified amount to the current amount of time the amount of time to the other one . <p > this adds the specified amount to the current amount of time the amount of time to be added . <p > this adds the specified amount to the
subtracts the specified temporal object from the source array using the specified amount subtracted . <p > this returns a temporal object of the same observable type as the number of values in the source array are the same as the number of days in the range . <p > this returns a temporal object of the same observable type as the number
read the data from the given file .

parses the and returns the result .
creates a new { @link } with the given name and { @link } .

add a list of words to the list of words
set the score for the score .
{
creates a new { @link } instance .
create a new bean with the given bean name .
benchmark up to {
register a .
reads the token chunk from the given context .
parses the input parameter list .
returns a new { @code } instance that will be used to configure the { @link } if it is not a { @link } .
creates a new { @link } with the specified name and value .
get the value of the attribute .
remove attributes from the attributes list .
set the attributes of the attributes .
creates a scope if it is a scope .
creates a endpointdefinition for the given endpoint .
converts a string to a string .
creates a new { @link } from a { @link } .
returns a {
gets the { @link span } for the given { @link span } .
creates a new { @link } instance .
{
{
updates the current thread .
update the current thread .
sends a message to the sentry server .
{
deletes the specified { @code } .
{
{
/ * ( non - javadoc )
get the security handlers for the given { @link } .
check if the connection is a connection to the server .
checks if the given server is a valid security handler .
check if the user is not allowed to delete all the registered { @link } .
check if the given message is a valid mail message .
/ * ( non - javadoc )
{
{
clear all the listeners and clear the listeners .
writes a long to the specified output stream .
read medium bit integer .
read medium bit integer .
reads a 32 - bit integer from the input stream .
encodes the given byte array into a byte array .
returns the number of bytes in the specified { @code long } .
sets the value of the message .
{
{
creates the registry .
process the { @link command } and { @link } .
creates a new { @link } instance for a given { @link gauge } .
creates a new instance of the given class .
returns the class of the given class .
returns a { @code } that is declared by the given { @code parametertypes } .


returns true if the given { @code generictype } is equal to the specified { @code cls } .
无视private / protected修饰符 .
asserts that the method is a method that is a method that is a method that is a method that is a method that is a method that is a method that is a method that is a method to check if the value is a method that is a method that is a method that is a method that is a method
asserts that the method is not null .
start the server .
register all

save the given file to the given file .
load the model from the file .





get the label label for the given label .
get the label of the label
returns the label of the given tag .


returns the list of features that are currently in the list .
updates the current position and the end of the list .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
{
selects the next .
merge the given into the given .
returns the value at the given position .
log a message with the given message .

process the xml input .

/ * ( non - javadoc )
extracts all from the xml element .
{
this helps you transform the current { @link } to a { @link builder } .

parses a request from a request .
{
this operation retrieves a list of all the user - defined values .
循环向上转型 .
get the field value for the given field name .
checks if the given name is a reference to the given type .
checks if the given type is a type or a type .
returns the id of the specified .
this method is used to retrieve a list of patches .
init fxml .
gets the field value by field name .
sets the value of the request .
creates a new network - agent .
this method is used to execute the action and returns the result as a string .

create a new { @link } instance for the given { @link } .

connects to the specified amazon guardduty sms status .
{
{
{

get the base path for the given key .
<p > schedules a request to retrieve the results of a managed cluster . < / p >
add a new message to the message .
method called to remove the from the .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the number of messages that have been locked on the next message .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the next available value in the list .
method to set the for the transaction .
remove a message from the matchspace .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the message value for the .
unlock all the messages in the list .
unlock all the messages in the list .
get the diff diff as a string .
sets the maximum number of the page .
marshall the given parameter object .
sets the .

send a mail message to the mail .
{

reads the json data from the json stream and returns a jsonparser .


export a json resource .
export the given {

parses a json property or a json object from a json object .
parses a json string from a jsonparser .
imports a property definition into a javabean property .
writes the json object to a json object .
write the json representation of the given json object to the json file .
writes a property value to the json object .
write a property value into a json object .
writes a json representation of the specified json object .
write a json object to a json object .
get the value of a property .
sets the property value for the given property name .
create a new jcr value .
build the data source info .
/ * ( non - javadoc )
returns the set of all elements satisfying the specified match .
validates that the file is not valid .
validates that the file is valid .
{
returns the set of matching patterns for the specified match .
{
returns the range of all the images that match the criteria specified by the filter function .
get the type .
returns the set of the that match the pattern .
{
returns the set of all the matching resources that match the criteria specified by the match .
resets the cache .
sets the id of the given id .
sets the policy for the policy .
sets the maximum number of milliseconds in the current thread .
get the number of times the requested is used .
sets the number of times the client is used to connect to the cache .
sets the expiration time for the expiration time .
{
{
checks if the given resource is a resource .
check if the current resource is valid .
returns the value of the specified property .
/ * ( non - javadoc )
returns a new instance of the relationtype of the type t .
returns the node of the node .
/ * ( non - javadoc )
updates the current state of the given object with the given id .
returns the id of the .
find the first matching child node for the given name .
get the list of children for a given type .
get the list of children of this resource .

checks if the given string is a valid string .


create a new instance

create a new { @link } instance .

returns the { @link } for the specified { @code } .

returns the resource type of the resource .
get the mime type of the file .

{




check if the given string is valid .
parses the given string with the given name and value .
this method is called by the { @link } to find the next scan .
creates a new .
sets the path to the path .
sets the list of objects .
search for the files that are not in the list .
creates a new .


get all tables in the given { @link iterable } .
returns the names of the records in the table .
get metadata for all the tables in the given table .
returns a table entry for the given table .
get the table s columns .
gets the splits split as a string .
checks if the given table is a valid {
returns the validation handler for the given handler . <p >
sets the workplace settings for the workplace configuration . <p >
sets the online notification to be used for the given project . <p >
extracts the value of the given jpaentry from the given object .
/ * package protected for testing
record job status .
acknowledges the message from the queue .
sets the notification for the user . <p >
returns all roles for the given subject subject .
returns all roles groups in the user group .
returns the role role for the given role .
creates a role for the given role role .
creates a new role with the specified role and role name .
updates the role for the given role in the specified role .
updates the specified attributes with the specified id and value .
delete a role .
{
{
{
loads a bitmap from the specified file .
remove all the from the list .
returns the attribute name of the attribute .
split a text into a single node .
creates a new styled { @link } .
creates a new for the given output stream .
/ * ( non - javadoc )
allocate a new instance
attach a new hole to the list of listeners .
detaches the from the current instance .
creates a new { @link } with the given { @link } .

{
gets the raw key of the given row .
returns a { @code } that will be used to establish the { @link } for the given { @link } .
returns a { @link } that will be used to determine if the given { @link } is not available .
get the { @link } for the given { @link context } .
unwrap a given { @link executor } object .
factory method for creating a thread factory .
factory factory method for { @link java . util . factory }
splits a string into a single - valued array .
lock the current thread .
lock the current thread if the current thread is a lock .
this method is used to update the { @link } for the given { @code } .
starts the cluster with the given cluster .
adds a new cluster to the cluster .
scan the items in the { @link } .
/ *
unlock the session .
method to read the lock from the .
lock the current thread if the current thread is a lock .
sends a message to the specified queue .
sends a message to the specified queue .
sends a message to the specified queue .
unlock the current thread .
check if the given string is a valid gln .


this method is called when the connection is idle .
creates a new { @code } with the given { @code type } .
parses a string .
parses a string with the given string .
splits the string into a string .

remove the connection from the managedconnection instance .

get the connection connection for the connection pool .

remove all the from the pool .
cleanup all the connections in the connection pool .

get a template for a template
create a new template template
get the list of for the given .
{
get the template name from the given template .
serialize the given { @link } object to the given { @link outputstream } .
read the contents of the packagecompilationdata from the specified field .
adds a process to the given {
returns the for the given .
remove a from the matchspace .
/ * ( non - javadoc )
main method for testing
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the given object to the output stream .
populate the map from the given map .

{

{
print a string literal into a string .
returns a string containing the parameters of the map .
encodes the specified value into the string using the specified separator .




{
unescapes the given string .
process the and .
add the collision tree to the list of children .
create a new block with the given id and id .
create a new { @link } .
{
/ * ( non - javadoc )
{
create a provider provider for a given resource .
create a new instance
get the time unit .
add a constraint to the constraints .
add a constraint constraint to the constraints .
add a constraint constraint constraint to the constraint .
updates the constraints for the given constraints .
replaces the with the given declaration .
generates a new for the given exception .
/ * ( non - javadoc )
put the specified object into the specified object .
{
sets the attributes of the specified attributes .
extracts the names of the first occurrence of the given name .
sets the parameters for the request .
this method is used to determine the destination of the given service .
returns the { @link } for the given { @link } .
returns the context for the context .
check that the user is pressed .

print the given { @code field } .

alert message badge to display the alert message .
this is the main method to add a new message to the dialog .
shows the alert dialogue with the given alert button .
adds a new dialog to the list .
cleans up all the objects .
<p > this method is used to enable the { @link } to process the result . < / p >

encode the given string into a string .
decode a string from the given string .


initialize the .
/ * private methods ---------------------------------------------------------
initialize the .
creates the default editors .
creates the menu bar .
main entry point for the main thread .
{
atomically updates the index of the given .



sets the date of the given date picker with the given date and date . <p >

creates a security application security collaborator for the specified security group .
/ * ( non - javadoc )
processes the and them .

{
{
{
/ * [ deutsch ] <p > liegt eine
=======
check if the is a valid .

sets the text of the text .
sets the text of the given text .
sets the { @link } for the given intent .


sets the edit text for the view .
sets the edit text .

sets the color for the color .
set the typeface to be used for the specified typeface .
sets the text of the view .
sets the adapter for the adapter .
sets the image for the image .
set the image to be used for drawing .
set the bitmap to be drawn .
tag :: tag :: = ( tag )
sets the current { @link } to the specified { @link } .
checks if a given component is a .
returns true if the current {
sets the visibility of the view .
sets the background of the .
sets the background color for the .
sets the adapter to be used for the adapter .
returns the tag value for this tag .
sets the listener for the specified view .
sets the animation for the specified view .
sets the item for the given item .
sets the item adapter for the item .
sets the item for the given item .
sets the position of the adapter .
clear the image and clear the image .
sets the margins of the view .
animates the animation with animation .
animate the animation .
log a error message .
sets the error .

sets the animation for the animation .
decrease the rectangle of the specified rectangle .
set the typeface to be used for the specified name .
get typeface for the specified typeface .
sets the text of the edittext .
get the bitmap of the bitmap .
sets the animation .
sets the animation .

returns a {
{ @link } bean .
configure the client to configure the server .
returns a set of all the bits in this set .
{
converts the given { @link } to a { @link } .
creates a new { @link } from a { @link } .
creates a new instance .
returns a new { @code } instance .
creates a new { @link } instance for the given { @link } .


generate a .
generates the for the given clauses .
creates a assignment assignment .
save the given { @code } into the { @code } .
saves the given mapping from the given { @link } to the given { @link } .
dumps the filenames to the file .


encode a string into a string .

clones this object with the specified metadata object .
get the filtered workitems in the specified collection .
get the filtered secondary workitems in this subscription .
get the { @link } for this { @link } .
get the list of all the issues in this .
get all the filtered requests that are filtered by this request .
get epics of all epics in this collection .
get the estimate of the total number of iterations
get the average of the
get the average of the current .
create a new conversation with specified conversation .
get the .
returns the number of from the given { @code } .
normalizes the given elements .
normalizes the specified input .
returns the number of variables in { @code assignment } .
evaluate boolean expressions .
creates a new instance from the given { @code } .
get the primary workitems in the specified subscription .
creates a new instance with the specified parameters .
creates a new instance of the facebook application instance .
this method is used to create a new bundle for the given bundle .
get the sum of the values in the passed in parameter
get the value of a tag by name .

returns a relation that is a relation that is a member of the given name .
returns a relation that match the given name and a name .
save the to a file .
get a list of all the class names for the given name .
sets the attribute value for the given attribute name .
get the value of the type for the given type .
get a list of the class values for the given class name .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
calls the method to check the selection state . <p >
add a new clause to the given {
add a new {
add a new {
add a new pair of clauses to the given array .
add a new clause to the given array .
update the
update the current .
add a new to the list of .
sets the progress of the progress bar .
sets the progress of the progress bar .
sets the progress of the progress .
cancel the task when the task is completed .
{
configures the route .
add a new to the list of
get the list of that are currently held in the matchspace .
/ * ( non - javadoc )
indicates whether the cursor is in the list of mes .
get the reference id for this cellule .
increment the current state of the .
returns true if the message is currently active .
start the transaction transaction .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is called when the transaction manager is committed .
this method is used to retrieve the transaction associated with the transaction .
get the isolation type for the transaction .
/ * ( non - javadoc )
suspend the slee session .
the error message is the error .
add a new term to the _shards operation .




sets the reader to be used for reading .
get the current state of the current state .
discard the current state of the given state .

returns the value of the current value of the current value of the current value .
returns the value of the current state of this { @link long } .
returns the value of the double value for the given double precision .
returns true if the current value is a boolean value .
returns a copy of this { @code stream } .
gets the local file buffer .
returns a { @link } that will be used to retrieve the data from the dataset in order .
returns a { @link } that will be used to retrieve the data from the request .
returns a { @link } that will be used to retrieve the data from the stream .
returns a stream of the specified { @link file } s that are not in the { @link } .
get the { @link } for the given { @link } .
get the local file system for the given file .
get the { @link } for the given { @link } .
returns a { @link } that will be used to determine the { @link } .
returns a { @link } that will be used to read the contents of the { @code } .
returns a { @link } that fetches the specified { @link } .
/ * ( non - javadoc )
returns a copy of the given { @code } .
returns a { @link } that contains the contents of the specified { @code stream } .
get the data source for the given data source .
returns a { @link } that will be used to calculate the data in the { @link } .
computes the factor of the input buffer and returns a new { @link } .
returns a { @link } that will be used to encode the input stream to the { @link } .
creates a new { @link } from the given { @link } .
returns a { @link } that will be used to convert the { @code } to the ring buffer .
creates a new { @link } from the given { @link } .
returns a view of the source input stream that is used to compute the memory segments .
returns a { @link } that will be used to convert the input buffer into a { @link } .
returns a { @link bitmap } that contains the sequence of { @link filebatch } s that are not in memory .
sets the directory to be used for the given directory .
sets the output directory for the given directory .
scans the files in the file system .

get the value of the specified key .
returns the value of the specified key .
returns a set of keys to be used by the key .
get the raw key / value pair as a key .
updates the specified key if it exists .
update a new { @link } with the given key and value .
update a property with the given key and value .

binds the given { @code view } to { @code } .
cleans up the current directory and its subdirectories .
get the path for the given path .
creates a new directory with the given name and the specified directory .
get the from the given file .
{
stop the .
sets the animation for the animation .

returns the current animation .
{
gets the image thumbnail .
calculates the image for the given image .
returns the image of the image .
returns true if the is a .
returns the height of the logo .
generate a string for the given path .


/ * ( non - javadoc )
/ * ( non - javadoc )
process the tag name .
sets the bitmap to use for the given bitmap .
creates a new { @link } instance .
put a key / value pair into a jsonobject .
inserts a { @code short } value into the map .
put a key / value pair into a jsonobject .
put a key / value pair into a jsonobject .
put a key / value pair into a jsonobject .
put a key value into a map
put a key / value pair into a jsonobject .
{

resolve a token for the given id .





parses a { @link } from the given { @link } .
parses a { @link } from a { @link } .
returns true if the object is null .
returns the first file name of the file .

checks if the object is a valid object .
containskey keys and values are equal to the given map .

{
copy bitmap from src bitmap to dest bitmap .

closes the resources .

puts a serializable object into the specified key .
remove a key from the map .
returns the value associated with the specified key .
{
sets the text .

returns the hash of the specified hash .
sets the icons for the .
sets the size of the gauge .
get the hash key for the hash key .
/ * ( non - javadoc )
method .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the message type .
/ * ( non - javadoc )
cancel all the pending requests .
/ * ( non - javadoc )
get the number of active connections .
get the next available packet .
get the next reliability to retrieve the next message .
get the associated with this lcp
get the stream state for this itemstream .
returns the random long value .
checks if two collections are equal .
loads a keystore from a file .
add a new hole to the list .
add a new character to the list .
encodes the specified byte array into a byte array .
decodes the given byte array into a byte array .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the id of the .
/ * ( non - javadoc )



returns the status of the given .
/ * ( non - javadoc )
send the message to the message .
send a message to the message .
send a message to the client .
send the message to the peer .
close the connection .
update the lowest priority of the
<p > @deprecated use { @link #with ( string ) } . < / p >
sets the image controller s { @link } .
sets the controller for the given controller .
sets the image at the given index .
{
returns the first element in the map .
checks if the given { @link annotation } is not present in the given { @link } .
processes the given { @code } .
find the first element of the given annotation .
returns the .

{
{
{
get the file extension for the given file .

moves the given { @code element } to the given { @code } .
moves to the specified { @code path } .
get the for the given element .

restart the given {
{
start the timer .
cancel the timer .
{
adds the specified proposition to the facet .
returns whether the given element is a static annotation or not .
returns the annotation if present .
returns a { @code predicate } that returns the { @link } that is a { @link java . lang . reflect . modifiers } .
returns a { @link predicate } that returns a { @link predicate } that is a { @link } that is a { @link java . lang . reflect . equals } .
returns the declared methods of the given type .
returns the declared methods of the given type .
returns true if the given type is a subtype of the
find the first matching methods of the class .

get the page page for the page .
returns the list of children of the given children .
visiblefortesting
visiblefortesting
visiblefortesting
{
get metadata for a given type .
create a new for the given type .
checks if the given type is a member of the given type .
creates metadata for a given entity .
creates a new { @link } for the given { @link } .
returns the list of { @link } s that are contained in the given list .
returns the first property of the given property .
/ * private methods
creates a { @link } object .
returns the { @link } for the given { @code } .
creates a method with the given parameters and returns the result .
get metadata about the given type .

remove the given file from the file .
collects all the files in the classpath .
sets the temporary directory .
{
{
{
============================================================================================
create a new instance of the given type .
get the cached instance .
creates a new instance of the given type .
validates that the type is not a primitive type .
{
{
{

converts a list of { @link list } into a { @link list } .
returns a list of validators that should be used to resolve the given value .
called when the synchronous handshake has been completed .
called when an error occurred during the call .
sends an error to the underlying channel .
schedule a timer .
parses the given string into a map of strings .
checks if the resource is a resource .
get the binary data from the resource .
returns the mime type for the given resource .
sends a response to the given stream .
/ * ( non - javadoc )
send a connection to the server .

register a for the specified .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is called by the when the is not in the .
<p > . < / p >
add a new to the .
remove a from the .
find the next scan .
returns true if the is a .
this method is called by the method to use this method to reinstate the recovery log .
add a new to the recovery log .
remove a from the .
returns true if the recovery log is a .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a new transaction to the recovery log .
run the given .
get the log configuration for the current transaction .
/ * ( non - javadoc )
registers a new listener for the given transaction .
/ * ( non - javadoc )
initialize the .
persist the specified to the given .
creates a new { @link } instance for the given { @code } .
creates a new connection pool .
creates a new { @link } instance for the given { @link supplier } .
execute the provided function and executes the next call to the next thread .
execute the given function and returns the result .
create a new { @link } .
check if the given is a valid xml file .
{
add a new item to the list .
check if the given event is active .
returns the default object that is used to create the .
/ * ( non - javadoc )
returns the number of strokes in the specified direction .

returns the number of times the number of times the given number of times .
concatenate the given { @link } with the given { @link vec } .
combine two dfas with the given parentheses and the given { @code } .
moves the given item into the target .

returns a that extracts the specified range of the specified range of the specified range .

returns a { @link } that extracts the specified range of the specified range .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
jcalendar that will change the value of the jcalendar .
jcalendar :
adjust the jcalendar to add to the jcalendar .
jcalendar :
sets the date value of the date picker .
sets the time for the time picker .
set the date time picker date .
removes the ranges from the ranges .

returns a new that contains the range of integers in the range [ 0 ] .
returns a new { @link vec } of { @link } s that are represented by this { @link vec } .
returns a copy of this range with the specified range .
create a list of parameters .
prints the stack trace of the specified stack trace by printing the specified <code > / code > .
get the classpath for the given class .


find the annotation with the given annotation .
{

parses a xml document from the xml document .
converts a list of elements to a list of elements .
convert the map to a map of strings to a map of strings .
parses a xml document from the xml stream .
parse xml schema or xml xml .
print a document to a { @link outputstream } .
{
sets the maximum allowed value of the preference s .
creates a new list with all elements of the given elements .
creates a new { @code list } containing all elements in { @code iterable } .
creates a new { @code list } containing all elements in the specified collection .
returns unmodifiable list of elements .
returns unmodifiable list of elements .
set the time stamp
process the bean with the given bean .

triggers a { @link } and notifies it to the given { @link } .
create a new proxy with the specified default proxy .
add a new to the list of interfaces .
log the specified class .
check if the specified class loader is a valid .
{
abbreviates a string with the given separator .


split the text into a list of strings .




checks if the given string is a valid string .
returns the string identifying the given string .
returns the length of the specified string .
joins the given delimiter with the given delimiter .
joins the joiner to the given strings .
converts a camel camel case camel camel case camel camel case camel camel case .
converts a string to a camel case string .
checks if the given string is a valid string .
check if the given string is a valid string .
checks if the given string is a valid string .
returns a copy of the { @link } instance .
resolve the from the .
get the launcher for a given connection .
creates a new { @link } from a { @link } .
{
{
returns true if the next element is in the list of elements .
visits a object .
check if the class is not a .
check if the method is a method signature .
returns a list of all of the elements in the list of .
check if the job is a valid .
/ * public void ( string ) {
checks if the given string is a valid label .
returns true if the given { @code string } is empty or empty .
creates a builder for the label .
creates a builder for the given label .
build label label label label label .
creates a label for the given label .
adds a label to the given { @code label } .
run the command line arguments .
adds a new label to the end of the { @link } .
returns the first label of the given name .
returns the best matching the given pattern .
returns the best matching the given { @code string } .
get the label for the given language .
returns the label for the given language .
get the list of labels for the given language .
returns the list of labels for the given label .
replaces the given label with the given label .
creates a new builder for a given name builder .
format a string to the given string .
get the type of the type of the field .
generate the { @link } for the given { @link } .
returns the version of the version .
build request configuration .
get the { @link } for the given user .
returns the path to the configured .
check that the application packages are not available .
get the current jar file .
get the current { @link } .
get the { @link } for the given { @link virtualhost } .
returns the default factory for the given . <p >
get the object associated with this object .
returns the object that is associated with the specified object .
creates a new instance of the given type .
parses the given configuration from a { @link } .
get a new
get the
add a new member to the list of
get this object properties
add a new member to this service
get this object properties
add new option to the list of
get statistics about statistics
alter this object properties
get statistics about statistics
解析反馈内容
decodes the input data into a list of { @link } .
sets the input stream to be used for reading purposes .
adds a new { @link dataset } to the { @link dataset } .
sets the { @link } for the given { @link dataset } .
{
add a bundle to the bundle .
remove bundle from bundle .
resolves the bundle for the given bundle .
get the list of all resources .
执行http post请求。



splits the query string into a map of strings .
{
initialize the property .
/ * ( non - javadoc )
returns true if the property is not defined in the propertymap or not .
check if the property is true .
loads the properties file from the specified properties file .


set the value of the property .
binds the view to the view .
checks if the given object is a valid property name .

returns the next available object .
get the current { @link } instance .
get the { @link } instance .
adds a tag to the tag .
sets the property value for the key .
remove a property from the map .
sets the properties of this .
get the property value for the given key .
returns true if the cache is stale and if it is not a cache miss .
returns true if the specified item is present in the cache .
returns a set view of the set of entries .
returns the cache associated with the specified key .
returns the entry with the specified key .
{
put a key / value pair into the cache .
initialize the .
put all keys in the map .
puts a cache item into cache .
bulk bulk bulk
removes the specified key from the map .
replaces the key value with the specified key .
replace the specified key / value pair with the specified key .

<p > add a list of { @code } to the list of { @code } . < / p >
get the deployment manager for the given deployment .
{
returns the product of the given product .
checks if the resource is a resource type .

find predecessors of the cluster .
find the partitions of the specified partitions .
check if the host is valid .
create a new partition
<p > . < / p >
partitions the list of partitions to partitions .
initializes the .
initializes the resource with the given index and returns the new value .
generates a new for the given resource .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method returns the enumeration of the enumeration object .
/ * ( non - javadoc )
/ * this method is used to create the from the .
imports the values from the map .
sets the value of the specified key .
sets the value of the specified key .
setup the buffer .
sets the value of the key to the given key .
sets the value of the given key .
sets the value of the .


stop the .
update the direction of the given key .
sets the value of the .
sets the value of the key .
get the first position of the first key in the array
returns the list of all key - value pairs for the given key .
determine whether the given parameters are not supported .
checks if the given key is a parameter .
get the value of the property .
get the value of the field in the array .
remove the specified key from the map .
get the value of the specified query .
update the values of the object .

returns the value of the array .
returns true if the list is a copy of the current order .

rethrows the given exception if it is not a { @link runtimeexception } .
get the { @link expressionfactory } for the specified { @link } .
finds a type - based parameter type .
resolve the type of the given constructor with the given type .
check if the given object is a target type .
returns the method with the given name .
copies the values from the into a new array .
returns true if the is a member of the network .
reads the contents of the given { @code inputstream } into a { @code stream } .
write the document to the output stream .
write the specified document to the specified outputstream .
creates a new { @link } from the given { @link } .
initializes the engine .
checks if the given string is a valid error message .
returns the string of the first occurence of the first occurence of the specified string .
check if the given minimum number is equal to the specified minimum and maximum .
{
{
remove a from the given operation .
check if the operation has a .
{
renders the view .
returns true if the view is a view .
set the view to be used by the jsf view .
returns the response response of the response .
creates a new { @link } .
sample count of ferry
sets the number of seconds to the specified interval .
serialize a byte array into a byte array .



create a new file with the given name and size .
write a record to the output stream .
write the record to the output stream .
get the md5 checksum of the stream .
release the file .



write the to the output .
{
get the command line arguments .
{
registers the index of this index .
returns the first matching .
<p > . < / p >
set the consumer for the consumer .
/ * ( non - javadoc )
sends a message to the server .
fire the message .
close the connection and close the session .
sends a message to the client .
this method is called when a message arrives from the message .
/ * ( non - javadoc )
unlock a message from the list of .
/ * ( non - javadoc )
flushes the data from the input stream to the given .

compacts the specified row into the array .


create a method declaration .






calculate the size of the .


get the license from the manifest .
{
creates a new {
checks if the container is a container or container .
add a cell to the cell .
add a new row to the list of rows .
add a new region to the list of rows .
creates a { @link } event from the given { @link partitions } .
compares the specified managed entity to the database .
{
write the contents of the file to the output stream .
returns the decoded byte array as a byte array .
returns the value of the specified { @code value } .
returns a copy of this { @code } with the specified value .
returns a set that is a set of values that are not set in the set .
put a key / value pair into a map of key - value pairs .
get the custom key for the given key .
loads a { @link } from the given { @link inputstream } .
loads a { @link } from the given reader .
loads the xml from the given { @code path } .
sets the content of the response .
add a metadata object to the metadata .
returns the password for the given authentication method .

check if the package is not installed on the package .
get url from url
converts the url to a url .
sets the property name .
adds a new item to the table .
open a file .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the specified key . if the key is not found it returns the value if the key is not already mapped to the specified key .
parses a string value into a list of strings .
add a new pair to the list .
returns the first matching type .

get the for the
get the timeout for the timetolive of the timetolive .
method to get the message value from the message .
/ * ( non - javadoc )
/ * ( non - javadoc )
event listener
get the plugin plugin class name .
register a plugin with the given plugin .
sets the memory foot memory .
{
returns the { @link } for the given member type .
merge the given { @link } instance .

if the configuration is not found the { @link } is used .
{
sets the minimum value of the .
add a cache config configuration to the cache .
sets the list of objects .
sets the cache for the cache .
/ * ( non - javadoc )
create a new connection connection to the connection manager .
get the connection connection for the connection .
get the connection connection for the specified connection .
<p > . < / p >
/ * private static
{
returns the for the given class .
returns the connection for the specified managed connection .


set the output writer for the .

this method is used to format the current class .

returns a cache of cache entries for the specified cache .
{
returns the name of the cache for the given name .
generate the xml description for the given configuration .
this method is responsible for creating a new partition partition .
check if the cluster is congruent to the cluster .
sets the partition repair for the given partition .
remove all partition leader members from the cluster .
returns a copy of this { @code } .
updates the partition id and agg blocks from the partition .
convert a byte array to a int value .
convert a { @code int } to a { @code int } .
/ * package private
convert a { @code int } to a { @code int } .


/ *

convert a byte array to a byte array .
returns a byte array that is a bit indicating that the bytes are written to the specified byte array .

returns a { @code bigdecimal } whose bytes are the bytes of the specified { @code biginteger } .

compare two arrays .

set the number of elements in the list .
check if the specified is a remote server .
adds the specified { @code } to the specified destination .
/ * [ deutsch ] <p > liefert eine verschiebung verschiebung < / pre >

compute the stack array of the .
allocates a new { @link com . google . gwt . client . } .
sets the value of the property .
{
sets the { @link } for the specified { @link } .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
get the list of objects .
returns the first value of the specified attribute .
returns the first attribute of the given attribute .
returns the value of the specified attribute .
gets the list of { @link } s for the given { @link } .
returns the first value of the specified attribute .
<p > . < / p >

returns the number of elements in the given { @link } .
{
/ * this method is used to determine if the current value is valid .

check if the given string is a valid helm2 string .
returns the parent path of the specified parent .
returns the last modified child of the given { @code path } .

cancels the that is the same as the given { @code } .
cancels the given { @link } and the parent directory that is the same as the parent directory .

returns a list of all methods that are annotated with the given method .
returns a { @code supplier } that is the first time in the { @code future } .
executes a given callable in a { @link completablefuture } .
{
handles the given { @link throwable } to be used .
handles the { @link } for the given { @code } .
{
{
add the results to the result .
returns true if the result is not a success .
returns true if the given { @code } is equal to the given { @code } .
returns a { @code } that is the result of the given result .
returns a { @code nullable } that is the provided { @link predicate } .
returns a predicate that evaluates to true if the supplied predicate evaluates to true .
returns a { @code } that is a { @code } .
initializes the .
{
{
sets the proxy type for this request .
sets the host to be used to connect to the host .
sets the port to be used for socks connections .
returns true if the user has a permission to the server .
sets the proxy authentication for this request .
check if the target action is a target or a target .
/ * ( non - javadoc )
returns the class of the specified class .
/ * ( non - javadoc )
{
creates a new instance .
applies a { @link } to the given { @link } .
asserts that the expected string is equal to the expected expected value .
asserts that the given object is not equal to the given one .
asserts that the given long is not equal to the given one .
asserts that the given { @code value } is equal to the expected value .
asserts that two strings are equal .
asserts that the given { @code } is equal to the expected value .

asserts that the expected value is equal to the expected value .
asserts that the expected value is equal to the expected value .
asserts that the given { @code float } is equal to the specified value .
asserts that the given object is null .
asserts that the given object is a valid expected value .
asserts that the given object is a valid { @link object } .
assertequals with the given object and throws an exception if the assertion fails .
asserts that the given { @code string } is equal to the specified { @code mismatch } .
assert that a given throwable is a checked exception .
assert that the given exception is a mismatch .
adds a json string to the request .
adds a new request to the request .
encode a value into a string .
encodes the given value into a json object .
build a new { @link } .
resets the {
returns the locale for the specified locale .
create a new { @link } instance with the specified name and value .
creates a new instance with the specified name and value .
creates a description for the specified { @code } .
creates a description for the specified { @code } .
creates a new { @link } for the given { @link } .


returns a verifier object that trusts the openid connect certificate .
all certificates .


returns a { @code a } that binds the values of the given { @code stringjoiner } .
returns a { @code } whose { @code type } is { @code null } .
returns a { @code } whose value is the same as { @code { @code ( function } ) .
returns a fluent iterable that returns a { @code predicate } that will behave as a { @code predicate } to the specified { @code predicate } .
sets the { @code } to the downstream consumers .
sets the { @link } that will be used to establish the { @link } .
serialize the given { @code } to the underlying { @code } .
reads the object from the stream .
creates a new { @link } .
converts a into a .
returns the name of the field name .
{
write a field to the specified field .
read the field from the specified field .
updates the specified data array with the specified data .
check if the method is a method with the given name .
{
get the authenticated user .
/ * ( non - javadoc )
get the { @link hostconfiguration } object for the given { @link } .
f111627
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method will create a reference to a object .
/ * ( non - javadoc )
sets the parameters .
/ *

{
marshall the given json object .

add a new state to the state .

serialize a file into a file .





serializes the given object to a file .
deserialize a json object from the given file .
initialize the .
/ * package private
/ * package
/ * package private
/ * ( non - javadoc )
/ * package private
<p > . < / p >
add the to the list of .

{
peek by this { @code bytebuf } .
advances the next token to the current token .
this method is called to alert the to be notified when the server is received .
adapts a to a list of
adapts a to a ticker object
sends a unicast message to the payload .
sends a request to the payload .
handles a unicast message payload .
read the next message from the stream .
returns a list of the children of the given resource .

ds method to activate this component .
ds deactivate deactivate

{
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
adds the given { @link } to the given { @link } .
this method is used to determine if the given user has a .
checks if the given { @link } is not present in the list of { @link } .
write the data to the output stream .
get the exchange object for the given
calculates the length of the packet .

{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
check if the string is valid .
clicks a .

sets the image that is shown by the image .
sets the image .
sets the size of the view .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > informs the rls that the logcursorimpl is currently running on the server . < / p >

returns the type of the given class .
{
sets the timeout for a client connection .
sets the time in seconds to a client .
<p > . < / p >
<p > sets the client id to be used for the client . < / p >
returns the first element in the list .

updates the metadata for the given resource .
updates the version of the .
updates the version of the .

returns all classes that are available for this class .
returns a builder for the specified {
returns the list of objects .
sets the address to use for the address .
sets the maximum number of bytes that are available for the specified message .
copy the settings from the to the .
创建一个过滤器
adds the given field to the list of fields .
{

creates a new { @link } instance .
build a new .
builds a url to get the url of the url .
builds a that is used to create a new .
build a new build .
find the attribute with the given attribute name .
decodes a hexidecimal array of bytes into a byte array .
ds method to activate this component .
deactivates all destroy methods that are registered by this method .
{
unregisters the specified instance of the given .

{
{

process the given { @link } to be notified when a { @link } is registered .

{
removes a class from the list of listeners .
get all { @link elementdescriptor } s that are registered by the given class .
returns the number of strokes for the given file .
returns the number of strokes for the given file name .

returns the file name for the file .
loads the file and returns the file name .
get the for the given key .

add a new listener to the list of listeners .
add a new listener to the list of listeners that have been registered .
remove the listener from the list of listeners
generate the definitive sql command .
/ * ( non - javadoc )
extract data from the
generate the for the given string .
generates a string containing all the arguments in the given string .
adds a new { @link } to the list of listeners .
removes the specified { @link } from the list of { @link } s .
check if the class is a class .
check if the given class is a .
fire the listeners that the given object is currently being notified of a .
get the table icon for the specified key .
maps a portion of the file to a { @link randomaccessfile } .
{
{
opens the file and initializes the file .
{
/ * ( non - javadoc )
check if the input stream is valid .

returns the version of the .
returns the version of the given url .
initialize the .
get a relative path from a relative path .
debug
import a package name from a package name .
download the files in the given { @link file } .

creates a { @link } from the given stream .
creates a new { @link } object that will be used to create the target object .
{
handles the map of that are not included in the map .
sort the list of and sort them into ascending order .

returns the sort order of the given { @link order } .
get the node s node .
returns the next node in the list .
returns the next node in the list .
returns true if the specified element is not present in the specified value .

searches the first occurrence of the specified value in the range [ ] .
remove the last element of the list .
removes the last element from the list .
removes the last element from the list of nodes .
removes the specified node from the list of nodes .
removes the mapping for the key from the map .
create a new object name .
get the format for a file .
get the format for a file .
{
<p > . < / p >
balance a node by node .
returns the minimum value of the specified node .
creates a new mbean object with the specified name and name .
creates a new { @link objectname } object for the given name .
creates a new { @link objectname } object for the given { @link objectname } .
creates a new { @link objectname } for the specified mail smtp server .
creates a new mbean object .
{

execute the script .
/ * ------------------------------------------------------------
<p > acquire the next read lock . < / p >
ends the head of the current thread until the end of the end of the stream is reached .
/ * ( non - javadoc )
<p > acquire the current thread if the next successful is not already running .
move the current position of the current thread to the end of the stream .
put a batch of consumers into a queue .
put the into the queue .
/ *
get the itemstream for the
get the batch of the .
returns true if the queue is empty .
unlock all the messages .
check if the queue is empty
sets the track position of the .
returns the that is used to convert the given to a .
computes the dot product of the given module .
normalize the vector .
resolve the given node name from the given node .
{
executes the given action on the given event .
{
process the message .
{
this method is called when the user has been started .
initializes the file .
copy the contents of the input stream to the given stream .
copy the contents of the given { @link reader } to a { @link writer } .
copies all files from the given { @link inputstream } to the given { @link outputstream } .
remove the given tag from the collection
write the file to the output stream .
sets the title of the given title .
sets the text of the button .
sets the text for the given .
set the comment .
sets the type of the .
sets the year for the specified year .
sets the track position of the track .
sets the current .
sets the text of the current browser .
sets the copyright information for the user .

sets the text for the user .
get the template name for a given name .
get the from the given .

sets the value of the .
set the text frame to be used for debugging purposes .
sets the data frame .
returns the total time for the given tick in the current time .
get the time picker from the given time picker .
get the current frame .
get the current button .
get the comment as a comment .
get the type of the
get the title of the specified type .
{
get the track for the given track .
returns the value of the specified type .
get the frame of the given id .
returns the file name of the file .
get the text description for the given helm2 string .
/ * ------------------------------------------------------------
returns true if the given element is a member of the given .
sends a message to the server .
this method is used to process the { @link } to process the { @link } .
create a map of variables for the given node .
creates a new child view with the given parent view and the parent view .
creates a new instance .
creates a new { @link } .
sets the child views for the given view id .
cancel the and the .
aborts the current user .
sets the position of the view .


calculate the absolute value of the specified value .
sets the maximum number of views to be used to adjust the number of views to be removed .
adjust the current view to the given view .
returns true if the specified view has been changed .
check if the view is a touch .
check if the image is in the list of pixels .
check if the is a touch .
returns true if the edge is a vertex edge of this vertex .
returns true if the view is a view .
finds the child of the child view of the given child .
creates a new { @link } for the given id .
returns a range of attributes of the specified attributes .
creates a { @link } for the given { @link query } .
creates a new association .
returns a new instance of the object .
injects the bean to the given bean .
get the .
computes the of the image .

method to create a from the .
initialize the .

{
{
{
get the list of for the specified .
checks if the given value is a valid user .
/ * package
check if the file is a file .

reads a sample from the given file .
{
{
{

/ * ( non - javadoc )
{
get the value of the specified key .
{






generate a object from the given .

returns a map of strings that are the elements of the given map .
/ * ( non - javadoc )
<p > . < / p >
activate scope .
{
checks if the given scope is a scope .
loads the topology from the
shows the given and shows the information about the current user s settings . <p >
updates the properties of the given property .
------------------------------------------------------ dialog
read the from the .
sets the identity provider for the given identity .

/ *
creates a new component .
creates a new .
remove all project ids from the project .
get the .
validates that the given parameters are valid .
get the name of the .
{

adds a file to the file .


serializes a message to a stream .
serializes the given message into a stream .

creates a stream from a stream .
returns a { @code predicate } that matches all values in the specified { @code value } .
returns a { @code predicate } for the given type .
returns a { @link predicate } that can be used to convert an exception to a { @link predicate } .

checks if the given version is a version of the given version .
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
load the entity from the entity and returns the entity .
finds the { @link } identified by the given { @link } .
skips the specified bytes in the file .
reads the contents of the specified byte array into a byte array .
commit the specified changelog to a collection of users .
delete the specified keys from the database .
calculates the hash of the hash .
get the cache cache for the cache .
returns a stream containing all the specified { @link com . vdurmont . emoji . emoji } s of the given location .
creates the logging plugin .

encodes the given password into a string .
encodes the given password into a string .
encodes the given password into a string .
encodes the given password into a string .
calculates the password algorithm .
returns the full string representation of the form .
checks if the algorithm is a valid password .

decodes the password using the specified password .

removes the password from the given password .
converts a string into a byte array .
converts a byte array to a string .
convert the given string to a byte array .
convert a string to a string .
decodes the password from the password .
encodes the password into a password .

permutes the columns of the matrix and stores the result in the input matrix .
collects the module names of the module .
find the element with the key from the given key .
persist the user with the given { @link } .


removes the specified element from the specified element .
removes the specified key from the cache .
put the given { @link } to the given { @link } .
get the { @link } for the given { @link } .
replies the minimum value for the given array of values .
adds a new { @link } to the cache .
sets the bucket for the given bucket .
get the field mapper .
get the mapper for the mapper .
sets the mapper for the mapper to use for the mapper to use for the mapper to use for the mapper .
create a new instance of the given type .
create a new instance of the given class .
create a new { @link } .
create a new .
create a new instance of { @link } .

sets the parameters of the given parameter .
sets the { @link } for the given { @link } .
sets the sort property for the specified sort order .
replies the angle between the specified { @code } .
selects the { @link } for the given { @link } .
{
{
copy the contents of the given stream into an output stream .
copies the reader into a reader .
sets the image type .
update the metadata for the given metadata .

{
returns the next value in the json array .

/ * ( non - javadoc )
{
generate the service info for the given service id .

returns the value of the specified string .

extracts the sql from the resultset and returns the result .

{
update the metadata for the given .
searches for the atoms in the atomcontainer .
{
remove all the plugins from the plugin .
returns a { @link list } of all the { @link } s that are contained in the given collection .
add the plugins to the list of plugins .
parses the plugin and returns the plugin .
returns the profile plugin .
find the plugin with the given plugin .
resolves plugin pom .
returns all the plugins that are currently installed on the given { @link } .
checks if the given version is newer than the given version .
checks if the given artifact is a version of the given version .

returns the for the given .
get the {
find the first matching from the given .
find the project for the given project id .
find the plugin that is the plugin name .


{
{
{

returns the response body of the response .
{
create a new { @link } .

returns the value at the specified index .
{
{
returns true if the specified { @code } is a { @link } .
evaluate the rule and the rule .
{
<p > sets the execution of the activity s execution id to the given activity . < / p >
check that the execution state is not allowed to be a .
creates a default client .
create a new { @link } instance for the given { @link } .
creates a new client - based account .
creates a new .
get a list of users .
adds a new user to the user .
get the user s favorites .
<p > the list of all user users . < / p >
add a new email .

add a new user to the user .
creates a subscription that will be used to determine the specified subscription id .
resolve the scope name from the scope .
cholesky factorization = 1 * = 1 * ----------------------------------------------------------------------------
this method initializes
extracts the pac name from the request .
creates a new { @link } instance for the given { @link } .
{

sets the value of the specified medium rectangle .
sets the color of the .
sets the value of the .
returns the number of components that are used to adjust the number of times to the given location .
{
paints the given .
paint the .
paint the .
paint the bars .
paints the given .
returns the closest point at the given index .


invokes the given method with the given parameters .
creates a { @link } for the given { @link } .
enterprisebean to
d367572 . 9 . 9 . 9 .
sets the exception exceptionhandler for the given exception . <p > if the exception is null then the method will throw an exception .
returns the index of the method in the method .
<p > . < / p >
get the task id from the task id .

{
{
/ * ( non - javadoc )
returns a map of all listeners that are registered with the given map .



updates the attributes in the request .


get the list of for the given request .
get the server - side .
get the iterator from the .
execute the given command and returns the result as a new string .
execute the given method with the given name and arguments .
set attributes of a filter .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the id of the .
remove the given id from the list of .
removes all the transactions from the given transaction .
remove the given transaction id from the list of .
<p > add a transaction to the transaction . the transaction is not affected by the transaction . < / p >
returns the total number of all the elements in the specified iterator .
output class
output classes .
output the resource adapter .
set the version
{
returns the version number of the versions .
returns the version of the version of the .
returns the first version of the given version .
get the parent container .


check if the given string contains a value in the specified range .
check if the string contains the specified tag .

handles the request .


get next token from the stream .
read the string and return the string representation of the .
read the number of bytes from the input string .
creates a new class definition .

read the next char from the stream .
reads the character identifier and the character in the given identifier .
create a text with the specified text and footer text .
apply the specified text to the specified text .
apply the specified style to the specified text .
loads a single - valued input stream from a given stream .
returns true if the request is a cached request .
<p > get ( ) . < / p >
<p > get . < / p >
<p > returns a <code > / code > object .
check if the master is currently running on the master state .
if the current user has the same name we can use this to be used to get the .
/ * ( non - javadoc )
compare the field and the record .
compare the field and the field in the record .

write the field to the output stream .
read the field from the stream .
set the state of the .
compares the specified number of the .

predicate - if predicate is true
checks if a subject is a member of the membership .
check if the predicate is true if the predicate is true .
constructor .
set the field owner to the current set .
called when a change is the record status is about to happen / has happened .
handle the response .
handles a response .
handle the response header value .

creates a proxy handler for the current thread .

swap the elements of the two arrays .
swap the elements of the array at the specified index .
swap the elements of the array at the specified positions .
swap the elements of the array .
swaps the elements of the given list of elements .
swap the elements of the specified list .
swap the elements in the specified list and sets the elements of the list .
swaps the elements of the two lists .
swap the elements of two arrays of elements in the array .
swap the elements of the array at the specified index .
swap the elements of the array at the specified positions .
swap the elements of two char arrays at the end of the array .
swap the positions of the char array at the specified position .
swap the elements of the char array at the specified positions .
swap the elements of the array .
swap the elements of the array at the specified offset .
swap the elements of the specified array at the specified positions .
swap the elements of two arrays .
swap the elements of the array at the given index .
swap the elements of the array at the specified positions .
swap the elements of two arrays .
swap the elements of the array at the specified index .
swap the elements of the specified array at the specified positions .
swap the elements of the array .
swap the elements of the array at the specified index .
swap the elements of the array at the specified positions .
swap the elements of the array .
swap the elements of the array by the specified number of elements .
swap the elements in the array at the given index .
matches the path of the given path against the uri .
swap the elements of the tuple
swap the elements in the array using the specified comparator .

get the object for the given domain .




/ * ------------------------------------------------------------


/ * ( non - javadoc )
send a set of messages to the underlying stream .
flush all the data in the {

shutdown the remote server .
close the connection and close the connection .
marks the given .
marks the given exception .
resumes the resume connection .

/ *
get the set of groups in the group .
get the groups that are referenced by the search filter .

get the groups in the group .
returns the for the given criteria .
generates the latex for the . <p >
get the search scope for the search scope .
report an error if the exception is not enabled .
handle the request .

returns a { @code predicate } that evaluates to { @code true } if the path is a { @code predicate } .

creates a predicate that matches the given regular expression with the given name and { @link } .
parses a predicate from a { @link predicate } .
parses a predicate from a { @link predicate } .
check if the request is a .
converts a byte array into a hexadecimal string representation .
converts a byte array into a byte array .
convert a byte array into a hexadecimal representation of the given byte array .

ensures that a payload is a new one .


verify that the given character is a valid character .
check if the given header is a header or not .
returns the message as a string .
get the from the current user .
get the file name from the given file .

get the mode string for the given path .
sets the name of the file .
set the file name for the given file name .
sets the permissions for the given file .
checks if the given file is a valid file name .
returns the file type of the given path .
create a new path with the specified path .
creates a new file .
returns the { @link file } for the given { @link file } .
gets the short mode from the given network .
returns true if the given { @code } is not present in the view .
get the user s attributes .
get the { @link } for the given { @link } .
compiles the given source file into a map .
sets the url for this request .
get the host name from the host name .
returns the host address of the request .
returns the host port number from the host .
updates the data in the request .
called when a new connection is received .
sets the request for the request .


sets the response headers .
get the query parameters for this query .
get the absolute path of the request .
set the current cookie .
returns a new instance for the given stream .
checks if the request is a complete request .
this method is called when the request is received .
returns a channel s response object .
gets the response .
sets the status code for the request .
add a new to the list of .
add a new to the server .
<p > . < / p >
set the current state of the response .
/ * ------------------------------------------------------------
set the current state of the current state .
sets the maximum number of requests sent to the client .
add a new response to the response .
reads the state of the connection .
returns a list of all the { @link } s that are not in the specified { @link } .
transform the given list of strings into a list of strings .
transform the given list of { @link } to a list of { @link } .
injects the given object into a bean .
get the value of the given property as a value .
returns the value of the .

one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
builds the functional interface implementation and if it is not possible to add the functional - driven - case - the operation is not important .
ds method to activate this component .
ds method to deactivate this component . best practice : this should be a protected method not public or private
ds method to initialize the component .
update the properties of this .
check if the is valid .

{
initializes the .
connect to the connect connection .
returns true if the is a or
gets the properties property .
handles the {

compress the input data into a byte array .

/ * ( non - javadoc )

joins the specified address in the given address .
{
add a { @link } to the given { @link } .
execute a from a given .
start the server .
{
returns the next available time .
shutdown the remote server .
/ *
/ * ( non - javadoc )
{ @inheritdoc }
find a file in the given pid .
create a file with the given name and value .
flush the memory cache to the cache .
{
sets the provider for the specified provider .
lookup a single value with the specified name .
<p > get the <code > / code > configuration .
<p > . < / p >
main method to run the .


set the value value .
copies all files from the file system to the file system .

get the list of from the .
compares the given { @link } to the given { @code } .
checks if the specified { @code type } is assignable to the given { @code targettype } .
matches a regular expression with the given regular expression .
if the iterable is not null the first argument is empty .
ensures that an array is neither { @code null } nor empty .

check that a collection is not empty .
ensures that a map is not empty .
<p > validate that the specified character is not empty . < / p >
<p > validate that the specified array is not empty . < / p >

verifies that the given { @code string } is not equal to the specified index .
arg ( a - z ) { @code arg } to { @code index } to { @code 0 } if the { @code charsequence } is not { @code null } .
loads the class with the specified class loader .
checks if the given object is null .
<p > validates a message . < / p >

checks if the given class loader is loaded using the given classloader .

checks if the given { @link object arguments } is not equal to the specified value .
check if the specified object is a valid object .
validates that the argument is a valid double value .
<p > validate the specified arguments . < / p >

<p > validate that the argument is { @code null } . < / p >
<p > validate the specified array . < / p >
if the specified object is null or empty elements are neither { @code null } nor empty .
assert that the array contains the specified index .
check that a collection of objects is not empty .
returns a { @code } that is the first element of the specified index .
returns the index of the specified index within the specified index .
ensures that a map is not empty .
<p > validate that the specified character is not { @code null } . < / p >
returns an array containing the given index within the specified index .
asserts that the specified field is not equal to the specified value .
matches a regular expression with the specified pattern .
check if the given value is a valid range .
<p > validate the given object and a { @code } . < / p >
returns the type of the specified type .
<p > attach a to the specified destination . < / p >
returns a list of providers that are loaded from the provider .
returns a { @code } that is between the specified range and the end of the specified value .

returns the value of the specified element .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
returns the json document for the given { @code } .


{
get the json response for the given header .
returns the name of the service name .
cleans up the and then removes all the resources .
{
get the value of the given field in the given object .
checks if the given class is a class or not .
/ * ( non - javadoc )
returns the list of available for the given url .
returns a list with the passed elements as the first element of the list .
get the map of data from the map .
/ * [ deutsch ] <p > liefert eine l&auml ; ; ; ; ; ; ; ; ; ; ; ; ; / a&gt ; ; . < / p >
/ * ( non - javadoc )
/ * extract the element from the map .
{
/ * ( non - javadoc )

create a { @link } instance for the given { @link date } .

returns a date time that is used to adjust the specified number of hours in the given date .
encodes the header into the header .


get the connection connection for the current connection .
sets the object for the managedconnection instance .
remove the connection from the managedconnection connection .
create a new instance of the class .
returns the next { @code timeout } that is used to estimate the next amount of time .
/ * ( non - javadoc )
{
creates a new { @link } for the given class path .
sets the base directory for the base directory .
builds the { @link } for the given { @link virtualhost } .
get the object associated with the given object .
remove the given from the list .
add this record to this bookmark .
get the position of the record .
find the record that is the bookmark in the list of the bookmark .
put the array of into the list of .
remove all the elements in this set .
get the table name .
add this field in the record s field sequence .
get the absolute offset for the given index .

get the lowest bit of the specified .
find the first field in the given parent .


get the next frame .


returns true if the specified is a valid .
/ * get the contents of the .
/ *




get the number of the .
get the instance .
get the content of the .
this method is used to determine if the specified is a valid .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
creates a new { @link decorator } that is used to create a { @link } .
{
{
{
{
clears the roles .
populate the roles and their values .
for the given member name it will be used to find the access roles for the given member .
find the roles for the given member .
get the user id for the user .

/ * ( non - javadoc )
creates a new { @link } with the specified { @link } .
creates a new decorator for the specified { @code decorator } .


/ * ( non - javadoc )
log a log record with the given log and logs the audit log .
creates a new mapping from the given mapping .
method to check if the is a valid .
/ * ( non - javadoc )
/ * ( non - javadoc )
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
set the {
calls the case of the method on the target class .
creates an intent that is used to create an intent to be used when the intent is an application .
initializes the activity .
{
returns the default value of the .
creates a new { @link decorator } for the specified { @link } .
toggles the current page .
add a reference to the list .
remove the reference from the sbb reference .
get the service service service from the service .
returns the {
returns the {
returns an iterator over all elements of this list .
get the { @link } for the specified { @link } .
returns an iterator for the services that are registered by the service .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
adds full new case for the argument that are of specific classes ( matched by instanceof null is a wildcard ) .
sets the type of the specified type .
add a dependency to the list of dependency ids .
check if the given { @link } is in the given { @link } .
copy the object into a object
webdav method to send a request to a file .
returns the set of property names to the set of names .
create a new dom element with the given element and tag name .
creates a link element with the given content .
creates a link element .
{
adds the to the book .
get the list of actions .
append the specified action to the list of .
clear the file .
initialize the output file .
reads the given file and returns the { @link } .
process the given xml element .
process a .
process a topic and returns a list of templates .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
process the topics for the given topic .
process a .
check if the current thread is a
get the http form of a remote uri .
converts the given { @code } into a { @code } .
converts the given message into a { @link } .

returns the class that is used to find the interface .

get the for the specified class .
reads the next byte from the stream .
creates a new { @link circuitbreaker } from a { @link } .
creates a new { @link } with the specified { @link } .
creates a new { @link circuitbreaker } from a { @link } .
creates a new { @link circuitbreaker } from a { @link } .
creates a new { @link circuitbreaker } from a { @link } .
process the command .

handles the request .
get the response used to parse the request .
handles the request .
checks if the request is a valid url .


add the header to the cache
{

composes a function with the specified function and returns the result .
adapts a consumer to a consumer .
adapts a { @code consumer } to a { @code consumer } .

/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
check the permissions of the given list of { @link } s .
check if the is a .
{
check the arguments and the arguments are not available .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
create a jwt ticket .
parses the given { @link } and returns the { @link } instance .
returns the parent uri for the given uri .
returns a uri for the given uri .
creates a new { @link uri } from a file .
initialize the .
get the base key for the given key .
{ @inheritdoc }
get the map of { @link } s .


returns all the names of the specified names .
get the names of the property .
{
get the number of rows in the list .
collect all documents from the given { @link } .
check if the given { @link } is not in the { @link } .
get the datasource data source from the resource adapter .
{
get the table name .
add this field in the record s field sequence .
add this key area description to the record .

gets a target network or a target network .
create a plot canvas with the plot canvas .
create a plot canvas with the given plot .
create a plot canvas with the poly plot plot of given data .
returns a configured network security group for a specified resource group .
get the for the jcr settings .

{
{
{
get the specified network definition for a specified resource .
get the source details for a specified resource .
process the command . step 3 - if children didn t process pass to parent ( with me as the source ) . step 3 - if children didn t process pass to parent ( with me as the source ) . step 3 - if children didn t process pass to parent ( with me as the source ) . step 3
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
{
/ * package
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > acquire the connection manager for the connection . the connection manager is associated with this managed connection manager . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
{
returns the current connection .
returns the active active transaction associated with the specified transaction .
called when a transaction has been started .

returns true if the subject is a subject .
checks if the user has the specified user .
<p > . < / p >
get the value of the field value .
converts a subject to a string .
sets the context for the context .
set the location of the location .
/ * ( non - javadoc )
binds the given module to the given module .
{
validate the given parameters .
binds the given { @link visitable } to { @link } .
{
returns the set of cursors that are not in the database .
remove a node from the repository
get a connection to the database .
cleans up the database connection .
{
compute a cholesky factorization of the given matrix .
computes the eigenvalue decomposition of the given matrix .
compute the k nearest neighbors of the given { @code k } .
computes the symmetric symmetric symmetric symmetric symmetric symmetric symmetric symmetric symmetric symmetric symmetric symmetric symmetric symmetric symmetric symmetric symmetric - clockwise / k pair of the specified symmetric k k k k k k k k k k k k k k k k k k k k symmetric k k k k k k k k symmetric k k symmetric k k
{
/ * ( non - javadoc )
{
{ @inheritdoc }
{
{
sets the timeout for the specified transaction .
returns a char at the given position .
returns the substring of the subsequence of the subsequence specified by the subsequence of the charsequence .
compares this range with the specified number of characters .
this method is called when a method is called .
f743 - 506
<p > acquire the singleton instance of the and the . < / p >
unlock the and the .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
reconstitute the serializable object .
get the meta data bean for the bean .
serializes the object into the given object .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
constructor .
called when a change is the record status is about to happen / has happened .
{
returns the vector of the specified x y and y - of - 1 if needed .
returns the vector of the given { @code x } th vector .
returns the vector of the specified x y and y - coordinate of the given vector .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
/ * ( non - javadoc )
set the message payload for the message .
/ * ( non - javadoc )
/ * get the payload length for the payload .
get the xml document from the document .
add a new line to the list of words

waits for the current thread to be used for the current thread .
find the first occurrence of the given id .
find the best match for the given id .
bfs of the nodes .

push a new one ( i . e . the number of edges ) .
returns the value of the given range of the given amount .

/ * ( non - javadoc )
/ * ( non - javadoc )
computes the eigenvalues of the matrix .
computes the eigenvalues of the matrix and a dense matrix .
merges the { @link } objects to the given { @code } .
constructor .
set custom fields
get the raw data for the current field .
put the fields in the record .
{
{
loads the { @link } from the given { @link } .
/ * ( non - javadoc )
add the to the .
get host host and host
/ * ( non - javadoc )



returns the for the given .
get the cache for the cache .

sends the response to the response .
sets the .
add the behaviors to the screen .
add the toolbars to the screen .
set up the screen screen screen screen fields .
process the command .
process the command .
get the hidden parameters for this request .
get the properties of the given properties file .

initialize the .
free the resources .
get the field value .
convert the value to a field .
initialize the popup object for the given field .
returns the total size of the total number of entries that have been modified since the last modification time .
{
returns the that is currently being used to merge the items .
{
computes the medoid of the given data with the specified probability .
generate the command - line arguments for the given command .
main method .
get the table name .
add this field in the record s field sequence .

{
{
{
{
{
{
{
initializes the .
initialize the .
creates a new .
{
save the file into a file .
computes the grid grid center of the grid .
resets the to the current panel .
initializes the upper bound of the base base component and the base base base base base base base .
sets the value of the given line .
returns labels for the labels in the torque variable labels .
sets the label for the given label .
adds the specified to the list of components .
removes the specified from the grid panel .
highlights the bounds of the bounds of the given bounds with the given lower bound .


sets the label for the given label .
draws the specified colour .
creates a new 1d plot for a given color .
creates a plot of a data plot .
/ * [ deutsch ] <p > erstellt eine von angegebenen . < / p >
{
{





calculate the histogram by the given id and a histogram .
returns the grid grid from the sparkline .

get the attributes for the attributes .
initializes the database and initializes the database .
get the table name .
add this field in the record s field sequence .
add this key area description to the record .
returns the boolean value of the specified { @code boolean } .
get the integer value of the specified attribute as a { @code int } .

get the value of the property .

get the value of the given attribute .
add a to the list of listeners .
/ * ( non - javadoc )

get the record for this record .
get the value of the property .
{
/ * ( non - javadoc )
get the script script from the list of .
{
{
removes the specified element from the specified value .
this method removes the specified number of elements from the specified { @code name } . if the value is a { @code int } then the value is a valid value of the range . if the value is a { @code int } then the value is a valid value of the range . if the value is a { @code
remove the value from the given name .
get the message type for the given message .
sets the name of the .
method .
initialize the .
initialize the file .
check if the specified file is a directory .
get the directory to be used by the .
get the directory names for the specified directory .
delete the specified file .
rename a file .
update the cell s .
<p > returns the { @link } that is used to convert the data group to a map . < / p >
<p > returns the cumulative group of the input map . < / p >

{
{
get the list of all in the map .
<p > process entity request . < / p >
replies the for the given class .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
{
returns the stream for the given stream .
{
{
receive notification of the element in the given namespace .
ends the node from the node .
check for properties
/ *
parse the given list of values .
/ * ------------------------------------------------------------
get a function that is a function of the given function .


{
initialize the stream .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
sets the length of the content .
reads the next number of bytes from the stream .
read the data from the stream .
/ * ( non - javadoc )
copy from src to dest buffer .
skips the next element in the stream . <p > the next byte is returned as the next number of bytes .
returns the number of bytes that are available to the next number .
close the underlying stream .
fills the buffer with the current size and the current position .
restarts the current thread .
/ * ( non - javadoc )
checks if the given { @link } is configured to be sure to be used to determine if the { @link } is not configured .
returns a new instance that is cropped cropped the and the second .

execute the given { @link } .
reply the message .
returns the string representation of the .
checks if the given profile is a valid profile id .
/ *
parses the page and adds it to the page .
calls the finder model and returns the result in <code > casexxx< / code > . <p > if <code > m< / code > is <code > true< / code > if the specified <code > pos< / code > is <code > true< / code > then a <code > result< / code > interface is created and returned .
get the list of all the annotation annotations for the given tag .
{
{
{
{
{
{
{
get the workspace size of the repository .
sets the quota of the repository .
{
get the repository quota for the repository .
get the data size of the repository .
get the repository size for the given repository id .
get the total number of all the files .
get the global memory size for the data store .
get the repository repository id repository from repository .
returns the for the given .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<p > process entity request . < / p >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
load the xml document from the xml document .
/ *
/ * ------------------------------------------------------------
reconstitute the method for the given object .
{
f743 - 506
{
add all the screen listeners .
setupsfields method .

this method is called when the client is received from the server .
determine if the is a valid .
marks the .
get the messageconsumer .
get the next message from the queue .
this method will check if the consumer is a read lock .
ensures that the file path is a file or the file name . <p >
{

set up the default screen control for this field .
returns the language of the language .
get the query string .

<p > process entity object . < / p >

get the context servlethandler . conveniance method .
get the context for the current thread context .

ds method to activate this component .
ds method to deactivate this component .
sets the reference .
ds injection for the reference
/ * ( non - javadoc )
{
{
get the list of available for the given .
sets the for the .
add a new column to the table .



login for the user logged in web browser page .
adds a new option to the list of options .
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the given exception is a valid .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
initialize the converter .
get the field name .
executes the given { @code node } .
returns the property of the specified property .
dispatches the given message to the session .
deactivates the endpoint .
deactivates the specified managedbean .
closes the connection .
notifies the connection to the given exception .
this method is used to determine the connection to the connection .
/ * package
find the endpoint for a given endpoint .
create a record for this record .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
get the socket factory for the given { @link } .
get the sslsocketfactory for the given connection .
configure the ssl socket server .

/ * ( non - javadoc )
receive notification of the beginning of the element .
this method is called when the application is done .
dumps the ffdc information about the given exception .

validates the given parameters .
validates the path to the file .
/ * ( non - javadoc )
{
{
add the behaviors .

this field is used to display the field s field .

set up the screen fields .
get the message field from the message header .
{
check if the current thread is a lock .
check if a node is a node or not .
get the lock data for a given node .
returns the next .
get the lock lock for the given session id .

remove the lock from the list of .
start the .
returns the token as a string .
{
remove a lock node from the persistent storage .
removes all the memberships of this node .
{
{
<p > formats the input string with the given { @link chronology } . < / p >
<p > converts the specified date into a { @link calendar } . < / p >
<p > it converts the specified date to a date using the specified date - time . < / p >
<p > it parses the specified { @link date } as a date - time using the specified { @link locale } < / p >
<p > determines whether the target field is set to the specified date - time . < / p >
<p > it converts the input field into a { @link java . util . date } if it is not set . < / p >
<p > it converts the specified date into a { @link calendar } using the specified date - time . < / p >
<p > it converts the specified { @code date } into a { @link calendar } . < / p >
<p > . < / p >
<p > . < / p >
<p > . < / p >
<p > the conversion is not supported . < / p >
<p > . < / p >
<p > . < / p >
<p > . < / p >
<p > . < / p >
<p > changes the date of the date / time field in the specified calendar . < / p >
<p > . < / p >
<p > . < / p >
<p > . < / p >
<p > sets the value of the { @link } for the specified time stamp . < / p >
<p > sets the value of the { @link } for the specified { @link predicate } . < / p >
<p > sets the value of the specified field . < / p >
<p > the date / time field ( s ) is the first time in the range ( inclusive ) and the maximum number of fields in the target collection . < / p >
<p > generates a { @link } that is used to store the value of a field in the specified range . < / p >
<p > the number of { @link } s that the specified { @link } is used . < / p >
<p > generates a predicate that is used to filter the calendar results . < / p >
<p > . < / p >
<p > creates a { @link interval } with the specified value and { @link interval } . < / p >
<p > . < / p >
<p > sets the time zone of the specified time zone . < / p >
<p > sets the { @link } to be used by the { @link } . < / p >
<p > it converts a { @link interval } into a { @link interval } . < / p >
<p > . < / p >
<p > converts the specified date into a { @link calendar } . < / p >
<p > it converts the specified { @link date } into a { @link date } . < / p >
<p > it is only valid if the date is not specified by the date of the date . < / p > <p > this method is only valid for date - time . <p > the date is based on the date of the date . <p > the date is based on the date of the date . <p >
<p > determines whether the target { @link number } is specified by the { @link () } < / p >
<p > determines whether the target calendar is the specified { @link date } < / p >
<p > it converts the calendar to a { @link calendar } . < / p >
<p > it converts the calendar to a { @link calendar } . <p > the input is only valid if the calendar is not specified by the { @link calendar } . <p > the input is only valid if the calendar is not specified by the { @link calendar } . <p > the input is only valid if the calendar
<p > . < / p >
<p > it is preferred for date and time . < / p >
<p > . < / p >
<p > . < / p >
<p > . < / p >
<p > it converts the calendar into a calendar . < / p >
<p > it is important to use the following steps : <p > <ul > <li > <p > { @link calendar } s : <ul > <li > a { @link calendar } . < / p > <p > this method is only used by { @link ( calendar ) } . <p > the time zone is created by
<p > the conversion conversion conversion conversion . < / p >
<p > it is not intended for use by the time zone and the { @link java . util . duration } returns a { @link } . < / p >
<p > it returns a { @link calendar } that is the same as the { @link ( int int int ) } . the input { @link } is used to determine the value of the { @link period } < / p >
<p > it is only valid for date - time zone . <p > the time zone is determined by the { @link } to be used by the { @link java . util . date } . <p > the time zone is determined by the { @link } to be used by the { @link java . util .
<p > returns a { @link java . util . concurrent . conversion } with the specified number of millis .
<p > returns a { @link string } that is the same as the { @link period } < / p >
<p > it converts the specified { @link datetimezone } to a { @link date } . < / p >
<p > it converts the specified { @code } to a { @link date } . <p > the conversion is only allowed to override the original { @link } . <p > the conversion is only allowed to override the original { @link } . <p > the conversion is only allowed to override the original { @link
<p > the conversion conversion conversion . < / p >
<p > it converts the specified { @link date } to a { @link calendar } . <p > the conversion is based on the date and time zone . <p > the input string must be specified by the date field and the date and time zone . <p > the input string must be specified by the date field and the
<p > it converts the specified { @link calendar } to a { @link mutabledatetime } . < / p >
<p > it converts the specified { @code calendar } to a { @link calendar } . <p > the conversion is only based on the date of the date . <p > the input is only allowed to override the original { @link calendar } . <p > the input is only allowed to override the original { @link calendar } .
compares the property with the given id and returns the number of properties .
sorts the entity objects in the list of entities .
returns the length of the given file .
remove a string from the string .
create a query object from the given query .
create a new iterator iterator .
add a tag to the tag tag tag .
sets the serializer for a given type .
sets the type of the field .
sets the json output writer for the given writer .
writes a field to the specified field .
serializes a field to a json object .
writes a value to the given value .
writes a value to the specified value .
writes the value of the specified value to the given value .
write the value of the given class .
creates a proxy object for the given { @code } .
/ * ( non - javadoc )
{
adds a link to the list of links .
sets the embedded embedded embedded embedded embedded items for the given tag name . <p >
sets the embedded embedded embedded embedded embedded items for the given item . <p >
defines the link to the given { @link } .
compress the set of and .
builds a { @link } with the given { @link virtualhost } .
creates a new { @link client } from the given { @link clientoptions } .
initialize the .
adds the given { @code } to the given { @code } .
add a to the .
adjust the size of the size of the size .
log a record in a record .
dumps the contents of the object .
returns the object that is associated with the given object .
closes the connection and cleans up the connection .
decodes a { @code buff } into a byte array .
compare two strings .
compares this byte array to the specified range .
calculates the corner points in the contour
check the number of times .
validation of the error and returns the errors .
validation of the error message .
checks if the input is a valid validation error .
checks if the given { @link } is not valid .

returns the first parameter of the given parameter name and value .
/ * ( non - javadoc )
checks if user permission has permission to enter .
log a warning event .
resolves the path to the given path .
initialize the .
get the float value from the float property .
converts a { @code long } to a { @link long } .
writes float to float array .
writes the double array to the given byte array .
writes the given long to the given byte array .
{
handles the request to the given url .
reads a long from the given byte array .
writes the given integer value to the given byte array .
reads a signed int from the given byte array .
<p > parses the specified char from the specified character array starting at position { @code endindex } . < / p >
writes the given byte array to the specified byte array .
reads a short from the stream .
parse the given character from the given position .
/ * ( non - javadoc )
/ *
remove the key from the matchspace .
this method is used to set the current state of the .
method .
get the .
this method is called when a group of mes is ready to be sent to the matchspace .
get the next .
set the active state of the .
determines if the list contains the specified item .
get the .
attaches the to the message .
/ * ( non - javadoc )

returns a pseudo - - index with the specified index .
find a line of a character .


<p > computes the product of the given <code > result< / code > matrix . <br > <br > if the given <code > p< / code > is a hessenberg vector with the given tolerance . <p > if the given <code > l2 - 1< / code > is a scaling segment . <p > if the given <code >
<p > computes the dot product of the given two points . <br > <br > if the given <code > x< / code > is a scaling segment is rounded to the specified point . <p > if the given <code > l2 - 1< / code > is a scaling segment by the given <code > l2 - 1< / code
<p > computes the intersection of a cubic - segment quadratic equation < / p > <p > <em > note : < / em > if the given <code > l2 - result< / code > is true the line is the intersection of the specified <code > / code > . <p > if the intersection is a intersection the

creates a new { @link } object .
creates the context for the current context .
get groups of a user .
get the field name .

get groups of a group .
search for users .
finds the search for the given user .
retrieves the attribute of the specified attribute .
returns the attribute value associated with the specified attribute .
get attribute value from given attribute

check if the given {
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
/ * [ 1 ]


returns the length of the specified { @code float } in the range [ 0 ] .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
{
put the key / value pair to the map .
/ * ( non - javadoc )
removes all keys from the map .
{
get the for the given type .
initialize the database .
free the database .
get the name of the database .
get the table table .
set the record table for the table .
get the current database .
creates a table for this record .
get the property for this property .
get the property for this user .
/ * ( non - javadoc )

get the number of property .
get the number of .
this method is used to determine the database properties for the database .
set the table to this table .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
writes the given { @code gpx } into a { @link outputstream } .
returns the size of the specified size .
returns the size of the iterator .
returns the minimum size of the specified enumeration .
returns an iterator over all elements of the iterator .
returns a new { @link joiner } that is the first element of the first occurrence of the given { @link enumeration } .
get all elements of the passed enumeration .
returns an iterator over the elements of the iterator .
get the map of all entries in the passed in map .
returns the method parameter .


set the client info property .
set the client info property .
get the client info property .
returns true if the jdbc jdbc class is a valid wrapper .
populates the {
returns the { @link } for the given { @link } .

add a list of objects to the list of objects .
/ * ( non - javadoc )
set the .
/ *

{
{
{
creates the list of widgets for this dialog . <p >
get the string representation of the underlying string .
sets the value of the current state of the current state .
set the field value .
read the contents of the given input stream and return the passed in value .
read the passed in stream from the passed in stream .
write the passed in xml stream to a map .
find the match from the matchspace .
skip the number of strokes .
/ * package private
load the configuration from the given configuration file .
/ * ------------------------------------------------------------
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is called when a is not active .
register the given class .

get the for the given class .

{
write the content of the file to the given file .
write the content of the file to the given file .
write the content of the file to the given file .
write the path to the file .
write the passed in stream to the passed in stream .
write the passed in stream to the passed in stream .
write the contents of a node to the writer .
write the specified { @link } to the given writer .
get the node node from the passed string .
get the passed node as a string .
get the passed node as a byte array .
add a new item to the list .
{
<! -- begin - user - doc -- > <! -- end - user - doc -- >
create a for the specified ejb - ra . xml .
get the for the given .
/ * package
/ * package
<p > . < / p >
<p > reads the next byte from the specified byte array . < / p >
returns the next byte buffer .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
iterate over all elements of the passed <code > / code > .
get a list of all elements of the passed element .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
build the .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
read the passed <code > / code > from the given reader .
get the base base base base base string for the given object .
/ * ( non - javadoc )
/ * ( non - javadoc )
close the connection .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
/ * ---------------------------------------------------------------------------- -
/ * ( non - javadoc )
rehashes the state of the object to the current thread .
/ * ( non - javadoc )
/ * this method is called when the segment is not yet deleted .
/ * private methods
writes the given log record to the given log .
marks the current log .
add a record to the log .
add a new record to the given buffer .
add a new record to the end of the buffer .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
print the output of the output stream to the output stream .
get the list of all the locales that are contained in the list .
get the locale from the locale .
checks if the given locale is a valid locale .
returns whether the given locale is a valid locale .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
get the cache for the cache .
set the cache cache for the cache .
returns a map of all the children of this node .
returns the header value associated with the specified header .
returns a new iterator iterator that will be used to read the contents of the given iterator and returns the offset .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
sets the credential for the credential .
sets the credential for the credential .
{
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
builds the functional interface implementation and if it is not possible to add the functional - driven - operation to use .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
set the field owner to the current map .
move the current position of the current record to the current position .
compares two { @link comparable } s .
sets the retry delay for the retry delay .
sets the list of exceptions that are not in the list of exceptions .
{
execute a synchronous call to execute the given callable .
calls the { @code } and { @link } to execute the { @link } .
execute the given runnable and returns the result as a runnable .
calls { @link ( biconsumer ) } with the given { @link biconsumer } .
execute the given { @code runnable } and notifies the { @code } and notifies the { @code } .

create a new with the passed .
get the resource schema for the given resource .
get the schema for the specified resource .
gets validator for the given schema .
this method is used to determine if the given validator is a validator .
method
<p > deregister the operation . < / p >
removes the from the matchspace .
method

method .
/ *
add a to the list of
method
method
removes the consumer from the list of consumers for the specified consumer .
create a new { @link } for the given { @link context } .
remove the consumer from the list of consumers

method
get the from the matchspace .
returns the number of that is associated with the specified .

get the selector for the selector
/ *
/ * ( non - javadoc )
/ * private
create a new .
create a new instance

parse the given { @link } from the given { @link } .
this method is called by the .
/ *
/ * ( non - javadoc )
replace the string with the given string .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
replace the string with the given string .
/ *
/ *
/ *
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
sets the { @code } and { @link } and { @link } .
configures the { @link } for the given { @link } .

writes the contents of the specified output stream to the writer .
writes the contents of the specified output stream to the writer .
write the attributes of the given attribute as a string .
write the to the writer .
write the attributes of the given attribute as a { @link } .
escape the quotes .
escape the string literal .
write the given json to the writer .
write the given writer to a writer .
write the contents of the given tag .
write a object .
check if the tag is not null
get the bundle resource bundle for the given resource bundle .
get the path prefix for the given path .
check if the passed <code > / code > is present in the classpath .
get the input stream for the given path .
get the input stream for the given class loader .
get the input stream for the given input stream .
get the inputstream from the class loader of the given class loader .
get the reader to use for the given class .
get the classpath resource .
get the file as a { @link file } .
checks if the file is in the file .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
adds full new case for the argument that are of specific classes ( matched by instanceof null is a wildcard ) .
get the passed type as a list of the passed type .
check if the passed object is a primitive or not .
returns the first index of the first occurrence of the specified array .
checks if the given array contains the specified element .
returns the first element in the array that is the first element of the array .
returns the first element at the specified array .
returns the last element of the array .
get the last element of the array .
returns the last element of the array .
returns a copy of the given array of elements with the specified array of elements .
returns a copy of the specified array with the specified length .
get a copy of the given array of elements .
returns a copy of the given array with the same length as the array of elements .
returns a copy of the array of elements .
get a list of all the elements of the passed array .
get a list of all the elements of the passed array .
get a list of all the passed in range .
get a list of all the passed in range .
get a copy of the passed in array .
creates a new model model with the value of the model .
visit a .
returns a copy of the given array with the first common number of elements .
returns a copy of the given array with all the elements of the given array .
returns a array containing all the elements in the array .
get all the elements in the array .
create a new array type with the given array of elements .
create a new array with the passed array as argument .
create a new array with the passed elements .
create a new array with all elements of the array .
create a new array with the passed array as argument .
get a collection of objects from the given array .
returns true if the passed array is a boolean array .
checks if the given array contains all elements of the given array .
returns true if the given array contains all elements in the array .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the payload of the .
method to check the state of the conversation .
/ * ( non - javadoc )
loads a keystore from a pkcs12 store instance .
loads the keystore from the given keystore .
create a new { @link } with the given { @link } .
loads the keystore from the keystore .
loads a pkcs12 access key from the keystore .
loads a keystore from the given { @link keystore } .
loads a pkcs12 access key store using the provided trust key store using the provided trust key .
read the specified char from the passed in byte array .
check if the passed in array contains a specific byte array .
read the charset from the passed in string .
sets the text to be displayed .
sets the title of the .
sets the encoding of the input input .
sets the output output for this output .
sets the location of the file .
sets the title of the window .
add a new template to the template .
adds a new id to the list .
this method is used to add a cache entry to the cache .
constructor .
set the field that owns this listener .
/ * ( non - javadoc )
collect the files in the directory .
adds a new alias to the list .
add a file to the file .
create a new archive archive
create a new pool or create a new pool or null if not pool .
loads the content of the given node .
get the for the given .
adds a new transaction to the current thread .
/ * ( non - javadoc )
removes the first entry from the head of the list .
returns the first occurrence of the specified index .
{
returns a copy of this list with the specified list of entries .
this method is used to add a to the destination .
reads the next line from the next line .
if the passed { @link } is not set it will be invoked .





{
find the first type of the given type .
finds the first type of the given type .
returns a cached { @link } instance that implements the { @link } .
returns a list of all the children of the given list .
returns a set of all the dependencies that are reachable from the dependency .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
adds full new case for the argument that are of specific classes ( matched by instanceof null is a wildcard ) .
/ * ( non - javadoc )
get the default value for the given name .
returns the registry entry for the given application .
process the pid for the given .
returns the { @link } for the given element .
returns the table column for the current key .
clear the current facesmessages .
checks if the current user has the and .
sets the registry for the given method .
this method returns the object that is referenced by the specified facet object .
returns the type of the specified type .
/ * ( non - javadoc )
register all validation for the registry
initialize the registry with the given name .
generates a page of the title of the page .
initialize the user .
get the user s settings for this user .
get the property for this field .
returns the number of elements that are filtered by the specified filter .
iterates over all elements of the provided { @link } .
set the property for this field .
set the properties for this user .
get the properties for this user .


create a new { @link } instance with the given name and type .
create a new instance of { @link } with the given name and value .
create a new { @link } .
flush the buffers to the queue .

<p > process entity request . < / p >

initialize the object .
update the properties for this connection .
create a channel .
destroy the managedconnection instance .
/ *
visits all files in the file .
validates the given file .
/ *
/ *
returns the enumeration attribute of the attribute name .
returns the enumeration name of the enumeration .
sets the value of the attribute .
puts a value in the given session name into the session .
/ * ------------------------------------------------------------
/ *
/ *
check the method to check if the given method is not a .
get the bean for the given beanid .
get the bean instance for the given bean .
schedules the given time and returns the result .
schedules the given { @code timer } and returns a { @code } .
returns the { @link } that is used to execute the specified { @code } .
{
sets the { @link } for the given { @code runnable } .
{
/ * ( non - javadoc )
{

execute the future and returns the result .
registers a custom serializer for the given { @link } .
sets custom serialization for the custom serialization .
execute the and returns a new future that is ready to be run on the server .
submits a task to the scheduler .
schedules a new task synchronously .
returns a new { @code } with the given { @code } .
gets the value of the specified key .
returns a collection of all the entries in the specified collection .
sets the value of the specified key .
this method is used to set the value of the given key .
dumps the value of the { @link outputstream } to the given { @link outputstream } .
load the data from the disk .
increments the last element of the delta .
updates the index of the index .
initializes the .
start the server .
stop the server .
builds the list of soymsgparts for the given member .
initializes the button and initializes the current chart .
{
injects the given { @link class } into the given { @link class } .
injects the given { @link } into the given { @link } .
retrieves the details of a specific resource by id .
retrieves all the for the specified resource .
this method is called when a timeout is not in the future .
this method is used to check the to be ready to be delivered to the .
this method is called when the is not a valid .
updates the last time stamp in the current state of the .
the message to the message .




perform the operation .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<p > creates a new schema . you can create a new schema with the specified schema and version . < / p >
<p > creates a new lex for the specified resource . the resource is created and the current instance of the specified resource group and the specified product is created . < / p > <p > you can create a new link to the specified project and then creates a new one . < / p >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
{
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<p > retrieves the version of the specified version . < / p >
add a mapping filter to the list of .
add a servlet to the servlet servlet .
get the path to the .
add a mapping between target and target name .
sends a request to the client .
<p > retrieves the specified directory . < / p >
<p > retrieves the facet facet listings for the specified facet . < / p >
<p > returns information about the specified attributes . < / p > <p > you can list the following attributes : < / p > <ul > <li > <p > <code > / code > – the <code > / code > operation . < / p > <p > for more information see <a href = http :
<p > returns information about a specific version of a specific key . < / p >
<p > returns a list of schema summaries for the specified schema . < / p >
<p > retrieves the details of a specified resource . < / p >
<p > lists all the rules for the specified resource group . < / p >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
calculates the circle of the circle
calculates the of the given .
calculates the arc data of the given ( ) .
calculates the of the given .
<p > lists the specified tagoption . < / p >
returns a stream of { @code iterable } from the specified iterable .
returns a sequential ordered { @code stream } from the specified array of elements .
returns an iterator with the elements of the iterator .
reduces the elements of the stream to the specified value .
reduces the elements of this stream into the specified value .
filter the elements of this stream .
returns a stream consisting of the elements of this stream applying the given mapping function to the elements of the input stream .
checks if the predicate matches the predicate .
concatenate a stream into a stream .
<p > lists the <code > / code > objects . < / p >
create a new .

constructor .
handle the field .
update the record .
returns the list of for the given .
parse the name of the .
this method initializes the .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
initialize the .
/ * ( non - javadoc )


returns the last occurrence of the specified { @code int } value .
{
returns a new { @code bytebuffer } .

sets the position of the line .
sets the point of the point and move to the point .


bulk copy of src / dst / src / srcoff / src / srcoff / src / main / srcoff / src / > / src / dest / src / dest / src / dest / src / dest / src / dest / src / dest / src / dest / src / dest / src / dest / src /
/ * ( non - javadoc )
/ * encode the body text to the body of the payload .
/ * private void ( string ) { if ( ! = null ) { stringbuilder buf = new ( body ) ; }
/ * private static final string = ( body payload ) ;
/ * send message body to
/ * set the encode information about the message .
encodes the given value into the given value .
calculates the centroid of the centroid of the centroid of the centroid .
open the main record .
set up the screen field .
adds a symbolic link to the given evidence .
compares the specified to the given .
compares two strings with the same name as the other .
renders the content of the page .
prints the text of the given { @code graphics2d } to the specified { @code graphics2d } .
renders the footer of the footer .
serialize a object to a byte array .

serialize a file into a new object .
read a from a given file .

append a field to the field builder .
append the value of the field .
returns an iterator over the elements in the iterator .

read the file and write it to the file .
executes the given iterator until all elements of the specified iterator is satisfied .
returns an iterator over the elements of the specified iterator . the returned iterator is not polled until the elements are exhausted .
returns the validation errors .
returns the feature description of the feature .

checks if the given message is a warning message .
{
check if the file is not valid .
release the lock held by this instance .
{
/ * ( non - javadoc )
read the file lock .
get the file value of the file .
returns the message that should be used to send the message .
initialize the .
{
{ @inheritdoc }

process the files and delete the files .
{
read a raster from a file .




get a line from a line .













connect to a remote address .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the index of the column in the column specified by the columnmetadata index .
returns the column name for the column .


get the value of the specified column .
returns the column types for the given column .
returns the widths of the table .
get column column number for a column .




get the column as a string .



splits the column into a table .
creates a new row with the specified key and column name .
{

returns a list of all the tables for the given table .
creates a gaussian kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel kernel value

compute the radius of a kernel .

returns all methods annotated with the given method .
获得指定类过滤后的public方法列表
find the method with the given method name .
finds the annotation that matches the given annotation .
verifies that the method is not null .
get all messages in the given range .
open a file .
writes the specified file to the given file .
check if the file is a valid .
creates a new .
create the file .
creates a from a pdf file .
draws the .
get the textual representation of the type .
reads the input reader from the given input stream .
sets the .

get the token as a map .
method to reset the state to be used by the .
creates a new { @link } instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
write a tag element .
open a new element with the given name .
open a new closing element .
close the element .
write a line element to the output stream .
write a single line element to the given value .
initialize the field .
initialize the .
process the command .
get the properties of the command .
create a new { @link } .
<p > setter for specifics . < / p >
<p > setter for specifics specifics . < / p >
<p > setter for item . < / p >
returns a new { @code } object .
start the
thrown when the exception is thrown .
get the result of applying the given statement to the result of the given resultset .
retrieves the results of the given query .
check if a file is a file that is not a file .
deletes the specified file .
deletes a file from the given file .
deletes all files from the file .
deletes all files matching the given file name .
deletes the file from the file .
deletes a file from the file .
deletes the files from the file .
deletes the file with the given file .
deletes the files from the given file .
get the resource as a file .
returns the last modified last modified modified resource .
merges the specified { @code } into another .
/ * ( non - javadoc )
invokes the specified request .
get the input stream from the given input stream .
check if the given string is valid .
get the string representation of the .
get the string value of the string .
set the value of this field .

/ * ( non - javadoc )
returns the for the given .
calculate the value of the x - axis value of the x - axis ( ) and the value of the given pair .
compute the double - precision - precision - value pair of the .
get the list of properties that should be used to get the properties of the .



opens the table and creates a new file .
create a new cursor with the specified name .
create a new cursor with a cursor .
create a new entry in the list .
create a new { @link } instance .
transfer the to the destination .
returns a new { @link } instance for the given { @link } .
init the <code > / code > .
free the gui .

returns the value of the specified key .
creates a new { @link jedispool } with the specified { @link virtualhost } and { @link virtualhost } s .
creates a new { @link jedispool } with the given { @link virtualhost } and defaulting to { @link } .
{
{
get the output stream for writing to a outputstream .
main method .
{
compute the density of the grid pixel .
get the centroid of the grid space .
clear the of the
calculates the distance function .
fill matrix matrix .
fill matrix matrix .
fill matrix matrix .
compute the 2d matrix .
create instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the list of { @link } s for the given { @code list } .
parse the sql statement .

sets the color for the user .
sets the diffuse color for the current station .

returns a string representation of the specified value .
start the
draws the image at the specified coordinates .

/ * ---------------------------------------------------------------------------- - quantization -
returns the value of the specified coordinate .
get the value of the given .





constructor .
called when a change is the record status is about to happen / has happened .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
add timer timer timer timer timer timer to delay
write the field .
write the field .
write the field to the .
write the file to the output stream .
write the record to the file .
write the record to the output stream .
write the field to the output stream .

write the file to the output file .
write the field to the output stream .
write the to the output stream .
method .
write the to the output stream .
read the record class name and return the record .
get the data for a field .
get the base class of this class .
{
initialize the .
destroy the .
process the http method .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ( non - javadoc )
called by the objectmanager .
region >
connects to the specified port .
--- subscribe ---
returns a list of .
get the stack of the current stack .
get the user code for the specified permission .
<p > . < / p >
get the realm name for the realm .
{
connects the plaintext from the network to the client .

returns the response with the given key .
sets the http http header to be used for the request .
{
{
get the saml data for the given application .

initialize the javamelody registry .
refresh the repository files and refresh the current state of the current state .
start the timer .
stop the alarm .
get the instance for the given locale .
get the instance .
/ * ( non - javadoc )
destroy the current thread .
destroy the and destroy the .
this method will check if the file is a directory .
scan the list of and .
scans the files in the list of files and folders .
process the command .
get the next available endpoint .
notify the task of the task with the given id .
notifies the status of the task with the given id .
atomically updates the task for the given task .
executes a task with the given id .
cancels a task with the given id .
{
/ * ( non - javadoc )
{
sort the given list of files into a list of strings .
checks if the given name is a valid name .
read the stream entry from the stream .
decode a boolean value .
run the .
move the file to the destination file .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
{
constructor .
set the field owner to the current map .

returns the .
setupsfields method .
creates a new translator for the given type . <p >
execute the given { @link } .
/ * ( non - javadoc )
updates the key - value pair in the edb .
updates the index of the given group with the specified key .
adds the given { @code } to the list of existing summary groups .
serializes the data to a byte array .
set the value of the designated field in this line .
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
calculates the md5 hash of the md5 digest of the given string .
initialize the file .
this method is called when a change is the record status is about to happen / has happened .
get the for the project .
create a new record record .
returns a list of all the disks in the given bucket .
returns the last modified child list .
ds method to activate this component .
ds method to deactivate this component .
initialize the object .
method .
get the name of the record .
returns true if this node is a leaf node .
gets the value of the property .
returns the duration of the current thread .
gets the value of the property .
returns true if the requested property is set .
sets the value of the provided property to the provided value .
returns the value of the requested property .
check if the property is set
check if the property is set
get the list of all property names .
sets the value of the provided property to set if it is not set .
converts the given resource name to a { @link } .

get the length of the chunk .
returns the path to the parent path .
checks if the given path is a path .
get the name of the child name of the parent node .
returns the path to the specified path .
returns the specified { @link path } object .
returns true if the given path is a path .

retries the given exception on the given retry context .
checks if the given { @link rpctimeout } is not allowed .
get the table name .
add this field in the record s field sequence .
add this key area description to the record .
process a process and generates a process .
process the command .
process the .
<code > optional string = 0 ; < / code >
<pre > the master account to which the master account is running . < / pre >
<code > optional string = 1 ; < / code >

check that the file is corrupt and the checkpoint is not available .
deletes the file from the given location .
returns the list of text in the given string .
check if the query string contains the given query
update the tenant update .
check if the given {
returns all columns of the given column name .
get the column family for a given column family .

returns all records in the table .
returns the row for the given row .
gets the primary keys for a given row .
add parameters to the list of parameters .
get the table definition for the given table .
returns the variable as a variable .
returns the body of the request .
get the input stream for this request .
returns the content type of the content type .
returns the { @link } s for the given { @link } .
returns true if the hpp response is a valid charset .
reads the request body from the request .
stop the timer
build the .
initialize the database .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }

process the request .
get the current security context for the current thread .
returns true if the current user is the current thread .
get the singleton instance of the .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
returns the name of the resource name .
check if the class is a class .
/ * ( non - javadoc )
visits a {
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
visit a field .
visits a method call to the method .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
sends a request to the request .
sends a request to the request .
sends a request to the specified request .
initialize the .
add the authorization parameters to the user .
send a request to the client .
{
send a unicast message to a peer .
reads the response from the response and returns the response .
reads the next line from the given { @code } .
reads the header of the header .
reads the content of the given body into a byte array .
creates the socket .
sets the socket .
send a request to the client .
creates a new .

drop the table with the given name .
creates a new instance of the given { @link } .
creates a new { @link } for the specified { @link file } .
creates a new instance of the object .



this method returns the string representation of the .
converts the given string to a string .
execute a object .
creates a new instance of the .
create a new instance .
create a new instance .
returns true if the given version is newer than the given version .
checks if the given string is a valid .
checks if the specified product is a valid .
creates a new instance .

prints the help for the help print help .
log a cli command line arguments .
main method .
returns the { @code unsynchronizedratelimiter } that is assigned to the current { @code unsynchronizedratelimiter } .
returns true if the given property is a property .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
ds method to activate this component .
ds deactivate
/ * ( non - javadoc )
/ * ( non - javadoc )
declarative services method for setting the service reference .
set the configuration for this configuration .
get the { @link } for the given { @link } .
sets the service reference to the service .
returns the { @link } for the given { @link executorservice } .
get the { @link } for the given { @link } .
this method is called when a reference is created .
returns the { @link } instance .
declarative services method for setting the service .
set the provider factory for the .
sets the provider provider for the provider .
get the buffer manager .
registers a listener for the given class loader .
constructor .
put the object into the specified object .

get the value of the object .
get the string representation of the underlying object .
set the field data field .
get the raw record for the given field .
get the raw field data field .
initialize the message .
get the message key .
reply the message .
get the property names from the properties map .
get the value of the field as a string .
set the field value .
this method will check the for the .
configure the security configuration for the given security configuration .

process the login process .
process roles for the roles .
process roles for the roles .

process the .
process the security roles for the .

create a new constraint constraint .
create the list of objects .
/ * ( non - javadoc )

creates the login configuration .

send message to the message .
send message to the sentry queue .
send a message to the destination destination .
/ *
send a message to the client .
send message to the jms message message .
tell the destination of the message .
validate the priority of the given
check if the given is valid .
check that the message received is set by the .

/ * ( non - javadoc )
check if the is a valid .
validates that the message is not valid .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
method reinitialize the method .
sets the velocityengine for the given location .
returns the location of the file .
{

validates the given { @code } .
validates the given parameters .


get the body of the request .
sends a request to the server .

get a application s application .
parse the response object to retrieve the response from the response .
get the http method name .
print a single line into a single line .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
print the input stream to the output stream .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
builds the functional interface implementation .
print the contents of the input stream to the output stream .
print the contents of the input stream to the output stream .
print the input stream to the output stream .
print the input stream into the stream .
/ * ( non - javadoc )
print the contents of the input stream into the buffer .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
print the value of the input stream .
/ * ( non - javadoc )
print the message to the output stream .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
flush the request to the output stream .
stop the thread
set up the screen input fields .
{
<code > optional . alluxio . grpc . file . options = 2 ; < / code >
<code > optional . alluxio . grpc . job . options = 2 ; < / code >
applies the { @link } to the { @link } .
returns a new { @code } that applies the { @link producer } for the given { @code function } .
returns the { @link } that is used to determine if the specified { @code } is not equal to the given { @code } .
returns a { @link } that applies the { @link } s that are to be used by the { @link } .
returns a { @link } that emits the results of the { @link } .
applies a fallback strategy to the supplied { @code } .
returns a { @code } that applies the given { @code } to the next element .
returns the first { @link } cropped the next pair of elements .
returns a { @link } that applies the { @link } to the next { @link } .
composes a { @link } using the provided { @link allele } .
returns a new with the given pair of upper case .
{ @code } applies to the provided { @code } .
applies a { @code } to the { @code } .
applies a { @code bitmap } to the provided { @code } .
applies a { @code } to the specified { @code } .
returns a { @link } that is a { @link } .
applies a { @code } to the { @code } .
returns a { @code } that applies the specified function to the elements of the specified { @code } .
returns a { @code } that is a { @code } .
returns a { @code } that is a { @code } .
returns a { @link } that applies the { @link } .
applies a { @code } to the { @code } .
returns a { @code } that applies the specified operator to the specified { @code function } . <p > the function is not thread safe .
returns a { @code } that is a { @code } .
returns a { @code } that applies the specified { @code } to the { @code } .
returns a { @link } that applies the { @link } to the { @link } .
applies the given { @code } to the { @code } .
returns a { @link } that applies the given { @link } to the specified { @code } .
returns a { @link } that applies the provided { @link } to the { @link } .
returns a { @link } that applies the provided { @link } to the { @link } .
applies the specified { @code } to the { @code } .
returns a { @code } that applies the specified { @code } to the next element . <p > the { @link } is used to determine if the specified { @code } is not equal to the specified { @code } .
returns a { @code } that applies the specified { @code } to the { @code } .
returns a { @code } that applies the specified { @code } to the { @code } .
returns a comparator that compares the given comparator to sort .
<p > the comparator for the given key is equal to the comparator . < / p >
returns a comparator that compares the specified comparator to the specified mapping function . <p > the comparator is used by the comparator to perform a flatmap operation .
returns a predicate that evaluates to true if the given predicate is true .
returns a map with the values of the map .
returns a map that maps a list of { @code } into a map .
returns a { @code predicate } for the specified element and { @code predicate } .
returns a { @code } whose result is { @code false } otherwise .
returns a { @link option } that applies the specified mapping for the elements of this { @code } .
creates a new { @link } with the specified value .
returns a { @link configurationoptionbuilder } containing the specified value .
get the table name .
add this field in the record s field sequence .
add this key area description to the record .
put a key / value pair into the json array .
put the key / value pair into the map .
put a key / value pair into the map .
add a new mapping from the array to the specified array .
add a new pair to the passed array with the given key .
creates a new { @link jsonobject } from a { @link jsonelement } .
returns a { @link map } of { @link object } that contains the { @link field } s that matches the provided key .

if the passed array is a { @link jsonarray } it is a { @link jsonarray } .
create a new array with the given values .
sets the first element of the given collection .
creates a new { @link } instance with the given elements .
<code > optional . alluxio . grpc . file . options = 2 ; < / code >
<code > optional . alluxio . grpc . job . options = 2 ; < / code >
<code > optional . alluxio . grpc . sum ( ) ; < / code >
<code > optional . alluxio . grpc . block . = 1 ; < / code >
<code > optional . alluxio . grpc . block . = 1 ; < / code >
returns the bucket that is the bucket of the bucket .
adds a new { @code nodeid } to the given { @code path } .
removes the given bucket from the bucket .
returns a set of bucket names for time .

initialize converter for the specified converter .
set the value of the given field .
returns all superclasses of the given interfaces .

free the resources .
set the remote name of the remote remote remote remote queue .
check if the message header is valid .
compare two lines .
add a listener to the list of listeners .
remove the specified from the list of filters .
check if the filter is a filter .
remove the listener that is notified of messages .
returns the message listener for the given message id .
set the message .
check if the given filter is a remote filter .
updates the filter map .
updates the properties of this property .
update the of this .
sets the filter to the list of properties that are set by the user .
set the filter to use for the given filter .
check if the given resource is a valid resource .
returns the current context .
{
start the current thread .
updates the .


loads a file from the given file .
save the file to the given file .
adds a handler to the handlers .
stop the server .
register a file with the given file name and checksum .
register a file with the given name and sets the file name .
start the server .
/ * ( non - javadoc )
initialize the connection with the given address .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
skip the specified huffman data .
/ * private methods

----------------------------------------------------- stateholder methods
{
set the response body to the response .
/ * ( non - javadoc )
/ *
get the request body for the request .
sends a chunked message to the specified channel .
/ * ( non - javadoc )
get the type name for the given index .
{
/ * ( non - javadoc )
check if the response is valid .
logs the request .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sends a message to the stream .
/ * ( non - javadoc )
this method will clear the and the .
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
<p > returns the next request body . the buffers of the request is the first byte buffer . < / p >
/ *
/ *
/ *
{
/ * ( non - javadoc )
/ *
/ *
/ * package private
{
{
/ * ( non - javadoc )
{
returns a { @link } that is not found in the specified path .
finds a { @link } that is located at a given path .
finds all the files in the given path .
returns the commerce addresses before and after the current commerce country in the ordered set where commercecountryid = &#63 ; .
returns the file s status information for the given file .
{
<code > optional . alluxio . grpc . file . options = 2 ; < / code >
<code > optional . alluxio . grpc . job . options = 2 ; < / code >
returns the bundle for the given bundle .
returns the bundle descriptor for the given bundle .
<p > setter for itsid . < / p >
<p > setter for . < / p >
<p > setter for . < / p >
resets the value of the resultset .
checks if the given { @link boxwebhook } is in the result of the given { @link } .
returns true if the given {
/ * ( non - javadoc )
/ * ( non - javadoc )
get all messages in the list .

returns the value of the given { @code name } .
sets the value of the .

converts a string into a string .
check if the token is a sentence of the sentence .
/ * ( non - javadoc )

returns the list of property values for the given property .
sets the value of the literal property .
copies the list of { @code collection } to { @code list<object > } .

converts a list of { @code } to { @code } .
returns the set of fieldpositions that match the given set of tokens .
get the for the given .
get the from the .
get the from the .
get the for the given .

{
returns the number of the words in the given word .
validates that the given directory is not valid .

returns the language for the given file .

get the value of a series of doubles .
fill a single value from the given json string .
<editor - fold desc = object >
add a cookie to the response .
sends a single prompt to the server .
sets the date header .
/ * ------------------------------------------------------------
check if the is a .

/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the token is a token of the token .



initialize the .
{
fire the current thread .
invokes the method .
creates a new object .
=============
creates a new action .
<p > . < / p >
log a with the given .
free all allocated resources .

/ * ( non - javadoc )
lock the record .

get the lock table for a record .
returns the number of milliseconds associated with this session .
get the current thread .

check if the current thread is a thread .
clear the current thread .
/ * ( non - javadoc )
this method is called when a client is pressed .
/ * ( non - javadoc )
start the timer .
/ *
stop the timer .
/ * ( non - javadoc )
cancel the and the .
/ *
saves the given property key to the specified key .
add a resource to the resource manager .
rollback the transaction associated with the managedconnection instance .
add a new message to the list of properties .
/ * ( non - javadoc )
returns true if the resource has a set of resources .
/ * ( non - javadoc )
/ * ( non - javadoc )
save the given { @code } .
add a message to the list of properties .
returns true if the given tag is currently enabled for this tag .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the for this connection .

declarative services method for setting the reference .

returns the file extension of the given file extension .
check if the file is a file or file .
get the service for the given service name .
get the current location for the given location .

print a line of characters .
print a string .
print the help of the console .
delete the specified file .
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
builds the functional interface implementation .
get the components that are currently in the list .
get the renderer type for the given type .
initialize the .
region > ( programmatic )
{
returns a future that is a complete completed .
returns a future that is a successful future that is a future that is a future that is not a { @link future } .
{
creates a new { @link future } that is used to execute a { @link future } .
get the .

<p > this method is used to get the { @link viewid } to the <code > / code > parameter . < / p > <p > this method is used to determine whether the parameters are not permitted . < / p > <p > this method is used to determine whether the parameters are not permitted . < /
sets the filter to be used to filter the text .


<p > the request parameters . < / p >
get request parameters from request parameters .
{
{ @inheritdoc }
one of ways of creating builder . this is possibly the least verbose way where compiler should be able to guess the generic parameters .
{
checks if the given { @link } is not valid .
updates the model model .
{
returns the value of the specified string .
returns the value of the specified component .
{
returns a stream which is used to retrieve the data from the stream .
start the {
converts a json object to a json object .
get the field name from the field .
returns the first { @link } with the given name . <p >
creates a { @link } for the given { @link configuration } .
convert a value to a double value .
converts a double value to a double .
adds lines to the given collection of lines .
updates the lines of the given lines with the specified offset .
get the memory data from the file system .
clear the contents of the buffer .
clear the number of elements in the array .
deletes the specified application version from the database .
get the data from the request .
returns a { @link } that will be used to determine whether the file is in progress .
sets the headers to be used to send requests to the http response .
waits until the next event is available .
/ * ( non - javadoc )
method to get the message consumer for the
returns the next token in the list .
/ * ( non - javadoc )

/ * ( non - javadoc )
method to get the consumer for the consumer .
method .
overiding this method to perform a operation .
this method is used to determine the transaction manager that the transaction is not active .
/ * ----------------------------------------------------------------------------
overiding the method .
returns true if the is a .
/ * ( non - javadoc )
<p > . < / p >
get the object as a list of strings .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )

/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the is in the list of .
/ * ( non - javadoc )
get the stream reference stream .
get the stream stream stream .
delete all consumers in the destination group that the destination is deleted .
/ * ( non - javadoc )
/ * ( non - javadoc )
log a message at the debug level .
/ *
{
method to check whether the current state of the is active .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is used to determine the list of messages that match the list of messages .
{
deletes a specified request .
/ * ( non - javadoc )
{
<p > set the value of the <code > / code > property . < / p > <p > contents : css style to enable light position .
<p > set the value of the <code > / code > property . < / p >
<p > return the value of the <code > / code > property . < / p > <p > contents : javascript code executed when the user is pressed .
<p > set the value of the <code > / code > property . < / p >
<p > return the value of the <code > / code > property . < / p > <p > contents : javascript code executed when the user is pressed .
<p > set the value of the <code > / code > property . < / p >


converts a { @code } into a { @code } .
checks if the given field is a valid annotation .
checks if the given field is a valid type definition .
checks if the type of the field is a primitive type or a primitive type .
check if the field is a valid annotation type .
checks if the field type is a primitive type or a field .

build a string for the field name .
builds a list of paths for the given path .
{
check if the passed selectitem is a .
{
calls the registered { @link gvrcursorcontroller } for the given { @link key } .
{
process the given http response .


appends lines to the given file .

appends lines to the given file .

update the settings for the current settings .
get the local host name from the given port .
get the remote host name from the given port .

{

check if a file is a file or file name .
returns the extension of the file extension .
{
sets the .
{
{
returns the maximum size of the specified size .
returns the full name of the first element in the string .

returns a normalised representation of the given string . <p >
returns the maximum size of the text .
{
{
sets the .
set the .
{

{
{
{
{
{

/ * package
returns the value of the given .
execute the given task .
{
{
loads all entities from the given class .
executes the transaction .
execute a transaction
{
set the level of the .
writes the specified data to the specified output stream .
writes the specified data to the specified array .




calls the method on the given method .
log a message with the specified name and the given type .
returns a new { @code } that is backed by the given { @code } .
{
removes the head of the queue .
{
{
{
{


perform a call to this method for the specified service .
initialize the .
generates a secret urn .
returns a new { @link } with the given probability .
decodes the specified 64 - bit long into a long .
{
{
{
sets the property value .
{
/ * ( non - javadoc )
{

remove a map from the map .
{
get the metadata for the given key .
add a key pair to the metadata .
creates a { @link message } from the given { @link } .
validates that the field is valid .
validates the service name and service name .
validates that the given address is valid .

validates the metadata of the given .
check if the given url is a valid url .
shows the details of the alert .
returns the .
{
get the stack trace of the given exception .
get the stack trace of the given exception .
{
{
{

put the http response body into the url .
get the json response from the url .
{
{
returns a { @link } that is used to create a { @link } .
adds a new { @link } to the given { @link } .
adds a new { @link } to the given { @link } .
adds a new { @link } to the given { @link } .
process the given .
build the .
returns the value of the specified key .
returns <tt > true< / tt > if the specified key is not equal to the specified value .
returns the key for the given key .
override preparepaintcomponent to customize the .
sets the video clips to the .
marshall the given parameter object .
marshall the given parameter object .

add a parameter to the given { @code name } .
add a parameter to the given parameter name and value .
adds a parameter to the given parameters .
<p > a list of the patches of the specified patches . < / p >
<p > the list of patches . < / p >
<p > the number of operations that are permitted to receive status . < / p >
<p > the number of instances that are permitted to describe . the number of items in the range is the number of operations that are applied to the product . < / p >
<p > a list of objects . < / p >
get the package name from the package name .
<p > a list of source sources . < / p >
<p > the patch number of patches . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
/ * ( non - javadoc )
cancel all the listeners and marks it as the current thread .
<p > pause the thread that is currently active . < / p >
fire the alarm alarm to the alarm .
marshall the given parameter object .
{
<p > the list of event categories . < / p >
<p > the list of event categories . < / p >
<p > the list of event categories . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
paints the given component .
marshall the given parameter object .
get the request message .


releases the request .
get the jsmsgpart that is the response as a response .
returns the response response .
returns the response response as a response .
release the response .
get the jsmsgpart that is the first part of the request .
release the cached data .
paints the given .
<p > creates a file system . < / p >
<p > creates a new target directory . < / p >
<p > deletes a file system . < / p >
<p > deletes a directory . < / p >
<p > describes the specified file . < / p >
<p > describes the configuration information about the specified configuration . < / p > <p > you can create a configuration of a configuration object that is currently attached to the configuration . < / p >
<p > describes the specified target security groups . < / p > <p > if you have a maximum of the target group or a list of the target group permissions see <a href = https : // docs . aws . amazon . com / iam / latest / userguide / . html > working with roles< / a >
<p > describes the specified targets . < / p >
<p > associates a specified amazon ec2 security group . < / p > <p > for more information see <a href = https : // docs . aws . amazon . com / iam / latest / userguide / . html > / a > in the <i > amazon cloudsearch groups / i > . for more information see
{
<p > configures the configuration for the specified lifecycle configuration . < / p > <p > you can use the <code > / code > action to the infrequent configuration . < / p > <p > you can use the <code > / code > action to the infrequent configuration . < / p >
<p > updates the specified file system . < / p >
<p > attaches the specified instances to the specified instance . < / p > <p > you can attach the ability to amazon cloudwatch to amazon sagemaker security groups for the specified instance . < / p > <p > you can attach the ability to amazon cloudwatch to amazon sagemaker security groups . < / p >
<p > lists the specified target ports . < / p > <p > for more information see <a href = https : // docs . aws . amazon . com / opsworks / latest / userguide / . html > / a > in the alexa - premises resource . for more information see <a href = https : //
<p > attaches a specified configuration to the specified amazon ec2 instance . < / p > <p > you can attach a load balancer to the <code > / code > request to the <code > / code > request . < / p > <p > you can attach to a load balancer with the specified configuration . <
<p > deletes the specified action . < / p >
<p > updates the specified scheduled group . < / p >
<p > . < / p >
<p > creates a new instance of the specified group . < / p > <p > you can create a new instance of a group with a maximum of 25 - time zone . < / p > <p > you can create a new instance of a group with a maximum of 25 - 24 hours . < / p >
<p > creates a launch configuration for the specified launch configuration . for more information see <a href = https : // docs . aws . amazon . com / opsworks / latest / userguide / workingapps - . html > amazon launch com . < / p >
<p > creates a tagoption or tags . < / p >
<p > deletes a specified managed instance group . < / p >
<p > deletes the specified launch configuration . < / p >
<p > deletes a lifecycle hook . < / p >
<p > deletes a notification configuration . < / p >
<p > deletes a policy . < / p >
<p > deletes the specified action . < / p >
<p > describes the specified aws account . < / p > <p > you can use this api to configure the deliverability policies for a specified device . < / p > <p > you can use this api to configure the deliverability policies for the account . < / p >
<p > returns information about the scalable capacity . < / p >
<p > describes the specified scaling policies . < / p > <p > you can use the <code > / code > to get the list of all the specified groups . < / p > <p > you can use the <code > / code > to get the list of all the specified groups . < / p
<p > describes the specified instances . < / p > <p > you can filter the instances in a specific instance of a specific instance . < / p > <p > you can filter the instances in the aws account . you can specify only one instance of the specified instance . < / p > <p > you can filter
<p > describes the notification types for the specified notification type . < / p >
<p > describes the launch configurations . < / p >
<p > describes the lifecycle hooks for the specified lifecycle policy . < / p > <p > for more information see <a href = https : // docs . aws . amazon . com / iam / latest / userguide / lifecycle - endpoints . html > / a > in the <i > aws lambda amazon route lifecycle guide< /
populate the tree node from the given file .
<p > describes the specified load balancer . for more information see <a href = https : // docs . aws . amazon . com / opsworks / latest / userguide / load - balancers . html > configuring a load balancer for the specified target load balancer . < / p > <p > for more information see <a href = https
<p > retrieves the specified load balancer . for more information see <a href = https : // docs . aws . amazon . com / awsec2 / latest / userguide / . html > spot amazon ec2 load balancer spot amazon ec2 load balancer and load balancers in the specified amazon ec2 instance . < / p >
<p > returns the lifecycle hooks for the specified lifecycle hooks . < / p > <p > you can use the <code > / code > action to the <code > / code > operation . < / p > <p > you can use the <code > / code > action to the <code > / code
populate the data from the given file .
<p > . < / p >
<p > describes the specified policies . < / p > <p > for more information see <a href = https : // docs . aws . amazon . com / iam / latest / userguide / policies - policies - based - policies - policies > / a > . for more information see <a href = https : // docs
<p > describes the specified metric types that are associated with the specified instance . < / p > <p > for more information see <a href = https : // docs . aws . amazon . com / lambda / latest / dg / metric . html > / a > for more information about managing aws lambda type . <
<p > describes the scheduled actions for a specified scheduled account . < / p > <p > for more information see <a href = https : // docs . aws . amazon . com / iam / latest / userguide / id_tags . html > scheduled / a > < / a > in the <i > aws cloudformation aws cloudformation stack
<p > describes the specified policies . < / p > <p > you can use the <code > / code > action to determine whether the specified policy is managed . < / p >
<p > lists the notification configurations for the specified notification configuration . < / p >
<p > deletes the specified target network . < / p > <p > if you have a list of policies that are associated with the specified target group . < / p > <p > if you have a list of policies the target group is deleted and the destination group is deleted . < / p > <p > for more
<p > detaches a load balancer . for more information see <a href = https : // docs . aws . amazon . com / awsec2 / latest / userguide / . html > amazon ec2 elastic load balancer < / a > in the <i > amazon cloudsearch developer guide< / i > . < / p >
<p > describes the scaling capabilities of the scalable . < / p >
<p > detaches the specified instances . < / p >
<p > describes the scaling type of the specified target group . < / p >
<p > disables the specified metrics . < / p >
<p > disables the specified vpc to the specified directory . < / p >
<p > associates a list of with the specified lifecycle hooks . < / p > <p > you can create a custom { @link } to create a custom { @link } . < / p >
<p > adds a notification to the specified notification . < / p >
set the to be used by the client .
returns the {
<p > updates the specified amazon lightsail instance . < / p >
<p > enables or disables the aws account . < / p >
<p > returns a list of policy definitions . < / p >
<p > configures the scaling policies for the scalable . < / p >
<p > updates the specified action . < / p > <p > you can use the action to update the action . for more information see <a href = https : // docs . aws . amazon . com / iam / latest / userguide / id_tags . html > amazon ecs management groups< / a > in the <i > amazon
<p > this action is used to determine the action for the specified action . < / p >
<p > associates a specified amazon s3 network connectivity . the virtual machine must be a direct connect gateway . if the specified service is already in progress it will be deleted . if you use this call the <code > / code > parameter to resume the <code > / code > parameter . < / p >
<p > sets the maximum capacity of the specified capacity . < / p >
<p > modifies the health settings for a specified health check . < / p > <p > for more information see <a href = https : // docs . aws . amazon . com / opsworks / latest / userguide / workinginstances - health - - . html > working with roles< / a > . < / p >
<p > modifies the specified tagoption . < / p >
<p > suspends the specified interconnect . < / p >
<p > disassociates the specified instance group by the specified instance group and <code > unlimited< / code > . < / p >
<p > updates the specified parameters . < / p > <p > you can use the <code > / code > parameter to add a new <code > / code > to the specified instance group . < / p > <p > you can use the <code > / code > parameter to add a new <code >
<p > the list of execution summaries of the specified job execution . < / p >
<p > the list of execution summaries of the job execution . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
{
gets a field from a class field .
循环向上转型 .
returns the field that matches the specified field name .
returns all fields in the list .
gets a method that is a method of the specified method descriptor .
gets the method with the specified name .
get all methods in the list of methods that are not accessible .
find the method with the given name .
get the class of the given class .
get the type of the class or null if the type is not null .
creates a new property with the specified name .
create a new property object with the given name and value .
marshall the given parameter object .

confirm that the user has a rate constraint .
negotiates the current sasl message .
returns the locale for the specified locale .
{
run the given model .



get a query parameter by name .
get a by name .
list the specified query .

add a query to the query .
paints the given .
/ * ( non - javadoc )
/ * ( non - javadoc )
atomically add the queue to the queue .
paints the given .
marshall the given parameter object .
<p > the request parameters . < / p >
copy the input stream to the output stream .
copy the contents of the specified input stream to the output stream .
closes the { @code stream } .

registers a resource .
closes the specified resources .
marshall the given parameter object .
<p > the list of step steps for the step of the step . < / p >
<p > a list of the step steps for the job . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
<p > the attachments for the virtual private gateways . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if

{
refresh the refresh button .
returns suggestions for the suggestions .
sets the suggestions of the suggestions .
{
{
{
{
{
get the row for the given row .
<p > . < / p >
sets the bean property value .
sets the request to use for the request .
execute the given { @code response } .
execute the provided callable asynchronously .
execute the request .
redirects to the next redirect to the current request .
gets the content of the request .
<p > a list of grants . < / p >
<p > a list of grants . < / p >
adds a new { @code } to the specified key .
find the key in the given { @code key } .
<p > an array of <a > / a > objects . < / p >
<p > an array of input strings . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
{
{
calls the method on the method of the method .

set the to be used for the given file .
add a new paragraph to the list of documents .

marshall the given parameter object .
<p > enables the specified iam user s iam user . < / p >
<p > deletes the specified amazon chime account . < / p >
<p > enables the specified tagoption . you can use the <code > / code > operation to add the specified tags to the specified <code > mlmodel< / code > . < / p >
<p > lists the import findings of the specified import import . the <code > / code > operation supports tag - based visual information about the import of the product . < / p >
<p > creates a new instance of the specified amazon s3 bucket . the parameters are not affected by the aws account . < / p >
<p > creates a new list of all members of the specified group . < / p >
<p > enables the specified platforms . < / p >
<p > deletes a specified amazon redshift pipeline . < / p >
<p > deletes the specified tagoption . < / p >
<p > deletes the specified list of all members of the specified members . < / p >
<p > deletes the specified product . < / p >
<p > disables the specified security security security security credentials . for more information see <a href = https : // docs . aws . amazon . com / cloudsearch / latest / userguide / . html > configuring a user - defined access control access control by the specified amazon chime account . < / p >
<p > disassociates a master account from a specified account . the master account is the master account from the master account . the master account is the master account id and the master account id from the master account . < / p > <p > you can use the <code > / code > to <a > / a
<p > returns a list of all members of the specified vpc . < / p >
<p > deletes a product that is associated with the specified product . < / p > <p > you can use the <code > / code > action to track of the product of the product . < / p > <p > you can use the <code > / code > action to track of the product of the
{
<p > returns information about the specified tagoption . < / p >
<p > lists the findings that are associated with the specified findings . < / p >
<p > returns information about the specified tagoption . < / p >
<p > returns a list of all the specified expressions . < / p >
<p > returns the number of platforms in the specified region . < / p >
<p > retrieves the master account from the master account . < / p >
<p > retrieves the list of all members for a specified group . < / p >
<p > returns a list of all the authorizers for the specified vpc . < / p >
<p > lists all the import import of the specified import import or a <code > / code > . < / p >
<p > lists the specified tagoption . < / p >
<p > lists the associations for the specified endpoint . < / p >
<p > updates the specified findings . < / p >
<p > updates the specified aws account . < / p >
marshall the given parameter object .
setup the .
adds a curved circle to the specified coordinates .
adds a new kernelpoint to the vector .
this method is called by the to remove the from the graph .
{
add a corner to the end of the mesh .
paints the given component .


paints the given .
paints the given { @code } .
paints the given .
resolve configuration parameters .
marshall the given parameter object .
<p > the list of tmpfs options for the specified aws account . < / p >
<p > the options for the specified aws account . < / p >
<p > the options for the specified availability zone . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > a list of the options for the specified aws account . < / p >
paints the given .
<p > a list of <a > / a > objects . < / p >
{
get the for the given .
<p > the options for the specified tagoption . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
<p > the list of inventory options . < / p >
<p > the list of inventory options . < / p >
<p > the option defaults to be updated . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
<p > the list of inventory configurations . < / p >
<p > the list of inventory options . < / p >
build the service .
<p > the option defaults to be used for the specified entity . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
{
add the specified number of paragraphs to the list .
add the button to the button .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .

paints the given .
render the editor .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
returns the type of the given type .
decrement the number of data from the data set .
marshall the given parameter object .
parses a from the given status .
returns the status code for the given status code .
returns the status of the given .
sets the rule to be used for the rule .
validates the given value against the given value and returns the result .
injects the given object into a single value .
validates the validation .
validates that the given value is not valid for the given value .
validates the given value and validates it to the given value .
adds a component to the component .
removes the component from the given component .
removes the component from the given component .
adds a parameter to the list of parameters .
sets the engine engine engine engine .
sets the height of the target image .
adds the specified { @code option } to the given { @code option } .
removes the specified option .
returns the map for the given key .
/ * package
/ * package
compares the given predicates to the given value .
compares degree and probability .
returns the number of lines in the given line .
returns true if the list contains a list of strings .

returns true if the current element is visible .
adds the node to the list of nodes to the node .
{
adjust the current node in the tree .
adds a word to the semantic space .

add a new pair to the list of .
add a list of number to the list of .
add a new to the dictionary .
sets the message for the given message .
{
checks if the input is a .


converts a set of objects to a set of strings .
extracts the tree from the tree .
adds the request to the response .
{
list the request .
put a request to the request .
put the request into the specified file .
deletes the specified request .
creates a request that will be used to create a request to a request .
creates a new request that is used to send a request to a {
marshall the given parameter object .
creates a new request that is used to decrypt the specified s3 bucket .
creates a request that will be used to create a request to a request .
returns the commerce warehouse item where commercewarehouseid = &#63 ; or throws a { @link } if it could not be found .
returns the number of commerce notification lists where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
returns all the commerce warehouses lists where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
returns the first commerce warehouse item in the ordered set where cproductid = &#63 ; and cpinstanceuuid = &#63 ; .
checks if the given { @link } is entailed by the { @link } .
creates a new instance .
{
calculates the distance between the two geometries .
create a new { @link } from a { @link } .


this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
<p > a list of the content of the specified tag . < / p >
<p > a list of the content - type of the parameter . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
<p > a list of objects . < / p >
<p > the ids of the inventory status . < / p >
marshall the given parameter object .
returns true if the polygon with the given geometry is a geometry .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
returns the maximum long value .


creates a new { @link } with the specified index and values .
checks if the given type is a type or a type .
returns the number of bytes in the given { @link biginteger } .
marshall the given parameter object .
<p > the amazon inspector amazon chime voice connector . < / p >
<p > the amazon chime voice connectors . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
sets the value of the specified colour .
get the value of the property .
deserialize a json string into a json array .
marshall the given parameter object .
write a object to a object .
marshall the given parameter object .
applies the filter to the list of elements .
{
get the value of the property .

loads properties from the given properties file .
loads properties from the properties file .
loads properties from a file .
loads properties from a specified { @link properties } .
check if the is a valid product
get the uri from the resource .


returns the distance between the given point and the given distance point .

parse a numeric value from a string .
parses a long value from a long .
parses a double value from a double .
<p > a list of the cluster operations . < / p >
<p > lists clusters . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override the
download the file from the given file .
uploads the file to the specified file .
marshall the given parameter object .
handles the request .
{
serializes an http response to a response .
serialize a string into a string .

<p > renders a response body to a <code > / code > response .
<p > adds a new request to the specified <code > / code > .
<p > renders a { @link } . < / p >
creates a checkpoint checkpoint .
commit the current thread .
{
{
{
waits until the timer is available .
marshall the given parameter object .
<p > the ipv6 addresses associated with the specified vpc . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
<p > information about the associations . < / p >
<p > information about the cidr block . < / p >
<p > information about the cidr blocks . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want

copy the fields in the specified {

find the index of the first occurrence of the given id .
connect to a connection .
{
get the values of all values in the map .
flush the response and the response .
remove expired requests from the request queue .
marshall the given parameter object .
marshall the given parameter object .
{
/ * ( non - javadoc )
returns true if the field is not in the given field .
{
send a request to the given { @link } .
builds a new { @link } instance .
returns the list of network interfaces for the given network interface .
<p > information about the person . < / p >
<p > an array of faces in the list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
{
marshall the given parameter object .
returns the response content of the request .
marshall the given parameter object .
sets the value of the setter property .
marshall the given parameter object .
<p > the list of log events that are used to log events . < / p >
<p > the log records for the trail . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you


format the specified date and returns the object as a string .


设置一个header<br > {
returns a new { @link properties } object that can be used to serialize the properties .
marshall the given parameter object .
returns the number of concurrent partitions .
{
<p > a list of objects . < / p >
<p > information about the endpoint configurations . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
hashes a hash .
hashes a hash .
hashes a hash using a hash code .
hashes a hash using a hash function .

atomically add a new item to the queue .
add a new item to the list .
put a new item into the list .
{
creates a new { @link } instance .
{
create a new instance of the given class .
marshall the given parameter object .

<p > a list of all the errors in the batch . < / p >
checks if the given job is a valid .
marshall the given parameter object .
get a value from the given type .

convert a to a object .


arr1 a sql statement with the given string .
find the first occurrence of a given name and return the value of the .
adds a value to the string .

marshall the given parameter object .
marshall the given parameter object .

returns a that will be used to generate a .
loads the keys from the given file .
compare the specified integers .
returns the metric metric metric for the given id .


compares two strings from a given type .
compares this object to a specific column .
create a new instance .
creates a new instance of the given class .
<p > a list of <a > rulegroup< / a > objects . < / p >
<p > a list of <a > rulegroup< / a > objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setgroups ( java . util . collection ) } or { @link #withgroups ( java . util . collection
marshall the given parameter object .
create a new record object with the given name and value .
creates a list of from the given .
parses a string into a { @link } .
update the payload of the current request .
{
returns the for the given .
registers a new type .
marshall the given parameter object .
unregister a type from the given type .
returns the type of the specified object .
converts a { @link } to a { @link } .
converts a value into a { @link type } .
converts a value to a value of a type .

converts a byte into byte array .
converts a short value to a short .
converts an integer to a value .
converts a long to a long .
converts a float value to a float value .
converts a double value to a double .

returns true if the value is a boolean value .
converts a string to a string .
marshall the given parameter object .
get the children of the specified iterator .
marshall the given parameter object .
get the children of the specified object .
marshall the given parameter object .
returns true if the given { @link rpctimeout } is a { @link } .
returns a list of all the components that are annotated with the given list of components .
returns a { @link filter } that applies the provided { @link filter } to the { @link filter } .
returns a constrained { @link filter } that applies the specified { @link filter } to the specified value .
returns an { @code } that is less than equal to the specified value .
returns a copy of this { @link filter } with the specified values .
returns a constrained by less than the specified value of the specified value .
returns a copy of this { @link filter } with the specified values .
marshall the given parameter object .
writes the data to the output stream .
returns a new { @code iterable } with the given { @code collection } .

{
creates a new object .
{
{
{
{
shutdown the command .
schedule a timer of a task .
schedule a timer of a given delay .
logs a warning message .
<p > information about the tags . < / p >
<p > a list of tag values . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
set the parameters for the connection .
marshall the given parameter object .
receive notification of a line .
<p > the list of policies associated with the specified cluster . < / p >
<p > a list of the policies that are assigned to the specified cluster . < / p >
<p > a list of the names of the specified clusters . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
<p > the tags for the specified tag or tag values . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #settags ( java . util . collection ) } or { @link #withtags ( java . util . collection )
<p > the date - time ( if any ) to be used in the specified stack . < / p >
<p > the date and time ( s ) of the next page . < / p >
<p > the date - time for the stack . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > the date - time for the next page of time . < / p >
<p > a list of clusters . < / p >
<p > a list of clusters that are associated with the specified cluster . < / p >
/ * ( non - javadoc )
set the value of the field .

get a instance .
start the start of the section
ends the start of the current thread .
get the current time stamp for the given time stamp .
marshall the given parameter object .
marshall the given parameter object .
creates a new event from the given event source and destination .
create a new address with the given name .
connect to the server using the given address .
creates a new connection with the specified address .
{
add a new to the list of .
add a new list of to the list of elements .
removes the given element from the list .
initializes the pipeline .
returns true if the given {
{
list the messages for the specified message .
get the command line arguments .
==========================================================================
reply .
get the attribute list .
read attribute values from a string .
get the attributes for a given .
===========================================
===========================================
===========================================
==========================================================================
/ * ( non - javadoc )
get the list of all the members of this group .
returns the size of the iterator .
returns the group of the group with the given group name .
find the first element in the list .
add a new member to the list of .
remove the given from the list of .
/ * ( non - javadoc )
dumps the to the output .
{
this method returns the index of the first record .
execute the command on the database .
read the from the given enumeration value .
{
read the attribute value .
/ * ( non - javadoc )
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
execute the corba any object and returns the result .
marshall the given parameter object .
returns a { @code } that is used to generate a { @code } .
returns the default value of the given { @code value } .
returns a new instance that contains the specified collection of objects .
creates a new whose keys are the same as the key and the specified delta .
creates a new { @link } .

returns a map that maps { @code values } to a { @code map } .
returns the number of elements in the array .
adds all elements from the specified array to the specified array .
appends all elements from this list to the specified array .
{
resize the internal buffer .
ensures that the size of the capacity is growing the size of the capacity .
marshall the given parameter object .
returns a { @code splitter } that will be used to adjust the specified number of insertions to the specified { @code limit } .
executes the npm and execute the npm .
marshall the given parameter object .
<p > the list of objects . < / p >
<p > the list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > an array of <a > / a > objects . < / p >
<p > information about the image . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
get a from the given .

read a string from the given string .


returns a bytebuffer that represents a buffer that is aligned to the specified buffer .
parses the given url .
{
<p > the attributes of the request . < / p >
<p > the attributes of the request . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
create a filebatch from the given archive .
marshall the given parameter object .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
marshall the given parameter object .
{
<p > the identifiers of the document . < / p >
<p > the arns of the document . < / p >
<p > the list of document ids to the document . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
scales the image that is the scale of the image .
returns the string representation of the .
sends a unicast message to a phone number .
parse the response object from the response .
registers a new { @link } with the given { @link } .



link the given { @link } to the given { @link } .
builds the url url for the given url .
init the connection and send it to the connection .
init fxml .
init the connection and send it to the connection .
init the connection and init parameters .
init the connection .
init the connection .
build connection connection information from the connection .
create a connection to the device .
marshall the given parameter object .
===================================================================
get the connection name from the database .
initialize the connection .
get the name of the connection .
read the database and returns the connection .


set the connection timeout for the connection .
set the connection timeout for the connection .
get the timeout for the connection .


get a command from the database .
==========================================================================
ping a connection to the server .




get the command line arguments .
get the connection from the connection .
get connection string
get the connection name from the connection .
check if the given version is valid .
===================================================================
check the to be used for the .

this method is called by the method to check the and .
check if the class is a .

{

{
{

<p > . < / p >


sets the { @link } for the given { @link } .
calculates the for the given .
{

returns the instance .

get the properties from the arguments .

returns the class id for the given entity .
get the table schema for the given class .

get the connection to the database connection .
close the resultset and close the resultset .






create a new { @link } instance for the given path .
sets the acl for the acl .
get acl for a file .
create a new { @link } .
create a new { @link } .
create a new watch request with the given path and path .
create a new { @link accesscontrollist } with the given path and path .
adds a new { @link } to the given { @link } .
connect to the server .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
marshall the given parameter object .
<p > the list of <a > / a > objects . < / p >
<p > the list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
marshall the given parameter object .
<p > the list of member types . < / p >
<p > the parameters of the request . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setparameters ( java . util . collection ) } or { @link #withparameters ( java . util . collection ) } if you want
<p > the list of operations that are used to modify the specified network interface . < / p >
<p > the list of all the instances in the specified list of traffic . < / p >
creates a new { @link karyonserver } that will create the { @link webclient } passed as a { @link } .
creates a new { @link karyonserver } that will be used to create a { @link } instance .
creates a new client that is used to connect to the server .
creates a client server server server auth client .
calculate the for the given id .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
get the url to use for the url to the url .
check that the result is a valid type .
performs a post request to the client .
==============================================================
==============================================================
==============================================================
==============================================================
marshall the given parameter object .
/ * ( non - javadoc )
{
marshall the given parameter object .
marshall the given parameter object .
sets the parent group .
checks if the pattern matches the pattern .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
builds a waiter by using custom parameters waiterparameters and other parameters defined in the waiters specification and then polls until it determines whether the resource entered the desired state or not where polling criteria is bound by either default polling strategy or custom polling strategy .
marshall the given parameter object .
==========================================================================
check the device name
===================================================================
==========================================================================
==========================================================================
<p > . < / p >
==========================================================================
get the device name from the tango db .
===================================================================
===================================================================
==========================================================================
==========================================================================
{
==========================================================================
==========================================================================
==========================================================================
==========================================================================

==========================================================================
===========================================
get the list of objects .
==========================================================================
===========================================
==========================================================================
===================================================================
===========================================
==========================================================================
/ * ( non - javadoc )
set the attributes of the attribute .
==========================================================================
read a from a object .
read a from the tango db .
read the attributes from deviceattribute to a object .


===========================================
read the device data from deviceattribute to a device .
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
======================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
======================================================
======================================================

======================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
sets the for the given request .
marshall the given parameter object .
==========================================================================
==========================================================================

===================================================================
read a json object from the given .
read a from deviceattribute from a .
==========================================================================
==========================================================================
==========================================================================
==========================================================================
/ * ( non - javadoc )
write a medium reply to a device .

==========================================================================
==========================================================================
read a from the session .
==========================================================================
{
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
==========================================================================
======================================================
get the list of for the .

===================================================================

read the from the tango db .
===============================================================
===============================================================
===============================================================
unsubscribe from a device .
marshall the given parameter object .
get the attribute configuration for the attribute .
get the attribute configuration .
get the label value for the attribute .
==============================================================
==============================================================
=======================================================================
=======================================================================

marshall the given parameter object .
merges the given map into a map of types to produce a map of types to a map of types .
marshall the given parameter object .
<p > the schema schema . < / p >
get the list of nodes that are not in the cluster .
==========================================================================
==========================================================================
===================================================================
===================================================================
==========================================================================
===================================================================
==========================================================================
===================================================================

===================================================================
marshall the given parameter object .
marshall the given parameter object .
<p > the parameter values for the specified parameter name . < / p >
<p > the parameter values for the specified parameter name . < / p >
<p > the parameter values for the specified parameter name . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
adds a new { @code } to the specified { @code name } .
<p > the tags to associate with the specified tag key . < / p >
get a list of from the specified .
returns a list of that is cropped to the next available tag .
returns a list of that is cropped cropped the of the
returns a list of from the specified stream .
returns the list of for the given .
returns the list of objects that are used to read the list of acls .
get the bean instance for the given name .
get the bean instance for the given bean class .
check if the given { @link } is valid .
marshall the given parameter object .
get the output formats of the given .
get the command line arguments .
<p > a list of the validation errors . < / p >
<p > a list of the validation errors . < / p >
<p > the validation of the validation validation . < / p >
<p > the validation of the validation validation . < / p >
compute the distance between the two specified columns .

returns the color of the given color .
truncate the .
adds a token to the token .
{
{
returns the character from the .
get the list of for the given .
returns the token as a string .
main method .
{
marshall the given parameter object .
marshall the given parameter object .
update a specific card .
update a specific card with a given id .
get the stream as a stream .
returns the uri for the given host or host name .
write the contents of the given file to the given output stream .
returns a { @link inet4address } for the specified address .
returns the address information for the given address .
returns a { @link inet4address } for the specified ipv4 address .
<p > information about the workspaces . < / p >

returns a range of all the commerce notification queue entries where groupid = &#63 ; .
<p > the names of the resource names . < / p >
<p > the names of the load balancers . < / p >
<p > the names of the load balancer . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
<p > the cloudwatch log metrics . < / p >
<p > the cloudwatch log metrics for the cloudwatch log metrics . < / p >
<p > the cloudwatch metrics . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
<p > the tags for the tag . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #settags ( java . util . collection ) } or { @link #withtags ( java . util . collection ) } if you want
<p > a list of <a > / a > objects . < / p >
<p > the policies used by the security services . < / p >
returns the first commerce notification queue entry in the ordered set where groupid = &#63 ; .
returns the first commerce notification queue entry in the ordered set where groupid = &#63 ; .
returns the last commerce notification queue entry in the ordered set where groupid = &#63 ; .
returns the commerce notification queue entries before and after the current commerce notification queue entry in the ordered set where groupid = &#63 ; .
/ * ( non - javadoc )
get the .
{
paging list of paging .
/ * ( non - javadoc )
/ * ( non - javadoc )
update the transaction with the given key and update the state of the transaction .
commit the transaction .
{
returns a range of all the commerce notification queue entries where sentdate &lt ; &#63 ; .


returns the first element in the list of .

returns the first commerce notification queue entry in the ordered set where sentdate &lt ; &#63 ; .
returns the last commerce notification queue entry in the ordered set where sentdate &lt ; &#63 ; .
returns the last commerce notification queue entry in the ordered set where sentdate &lt ; &#63 ; .
<p > the manifest entries that are associated with the specified manifest . < / p >
<p > the manifest to be included in the list . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
removes the commerce notification queue entry with the primary key from the database . also notifies the appropriate listeners .

builds the page url .
this method is used to add the navigation to the list of links for this menu .
get the environment variable name .
initialize the properties file .
initialize the .

/ * ( non - javadoc )
get a connection from the connection .
close all connections .
/ * ( non - javadoc )
无视private / protected修饰符 .
无视private / protected修饰符 .


get the object field from the given object .
invokes the given method with the given arguments .


无视private / protected修饰符
get the type of the given class .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last :
{
marshall the given parameter object .
run the main method .
runs the given input and output lines .
runs the given input and output lines with the specified output .
/ * ( non - javadoc )






sets the value of the named parameter .
gets the value of the property .
search for movies .
build url id
build the url for the url .
encode a uri from the url .
read a json object from the given json object .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
getter for lastname - gets
setter for - sets list of strings that are not in the list of strings .
indexed getter for - gets an indexed value - list of strings
indexed setter for - sets an indexed value - list of strings
getter for - gets
setter for - sets
indexed getter for mentions - gets an indexed value -
indexed getter for endings - gets an indexed value -
getter for - gets
setter for - sets
indexed getter for endings - gets an indexed value -
indexed setter for endings - sets an indexed value -
process jcas
<p > updates the specified security configuration for the specified aws account . < / p >
sets the stream to be written to the stream .
returns the specified index of the specified element at the specified index .
<p > the list of inventory blocks that are associated with the specified network interface . < / p >
<p > the list of billing operations for the specified product . < / p >
<p > the list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
loads the data from the disk .


ensures that the { @link } is not equal to the { @link } .
{
start the server .
index a json entry with the given name .

update a specific
creates a new { @link } instance for the given { @link sharedpreferences } .
returns the value of the preference property .
returns the value of the preference s value .
delete a user .
list all dashboards
returns the value of the preference s value for the given key .
returns the value of the preference s preference .
returns the value of the preference s preference .
find the user who have a user name


returns a property value with the specified key .
returns the value of the preference s preference with the given key .
returns the value of the preference s value for the specified key . if the key is not present or the default value is not a { @link map } will be used instead .
returns the value of the preference s preference with the given key .
gets a property value with the specified key .
returns the preference s value from the given key .
run the algorithm with the given function and returns the result .
sets the element at the specified position .
get the column s col in the list .
returns a list of all the elements in the array .
returns a set of preference s values for the given key .
returns the set of all the languages for the given physicalentity .
main method to run the server .
getter for - gets
setter for - sets list of links that are not included in the document .
indexed getter for - gets an indexed value - list of links to the specified text .
indexed setter for - sets an indexed value - list of the links of the document
marshall the given parameter object .
marshall the given parameter object .
{
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
asserts that the given field is not null or throws an exception .
asserts that the given string is not null .
checks that the given number is not equal to the specified number of digits .
process the file .
{
returns <code > true< / code > if the given { @link cursor } is not in the { @link iterator } .
register the { @link } object .

marshall the given parameter object .
<p > the devices used by the devices . < / p >
<p > the devices used by the devices . < / p >
<p > the devices for the device . < / p > <p > valid values : <code > true< / code > <code > / code > <code > / code > <code > / code > <code > / code > . < / p > <p > <b > note : < / b > this
<p > a list of <a > / a > objects . < / p >
<p > the list of inventory parameters . < / p >
<p > information about the amazon redshift security connection . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
{
creates a new instance .
creates a new .
returns a provider that is used for the given key .
returns a copy of this { @code byte [] } array .
sets the byte at the given index .
{
sets the occurrence of the specified element at the specified index .
sets the index of the given array of elements to the specified array .
sets the index of the element at the specified index .
sets the index of the element at the specified index .
appends all elements of this array to the specified array .
returns the { @link } for the given { @code } .
marshall the given parameter object .
<p > a list of the attack summaries . < / p >
<p > a list of summaries of the attack . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
remove a file from the given directory id .
creates a new instance of the given type .
{
{
marshall the given parameter object .
sorts the keys in the map by the natural ordering of the keys in the map .
checks if the given string is a valid gln .
get the value of the given { @link } .
adds a new component to the specified descriptor .
clear the components of this component .
setter for - sets
getter for - gets
setter for - sets
{
obtains the specified clock to obtain the specified clock . <p > this will use the specified clock to obtain the current date - time .
obtains a { @code japanesedate } representing the specified number of hours in seconds . <p > this conversion is based on the amount of time and nanosecond fields .
-----------------------------------------------------------------------
/ * [ deutsch ] <p > liefert eine . < / p >
-----------------------------------------------------------------------
compares this { @code offsetdatetime } to another . <p > this method subtracts the specified { @code date } and compares it to another . <p > this method subtracts the specified { @code date } and compares it to the specified date - time . <p > this method subtracts the specified { @code date } and compares it to the
marshall the given parameter object .
/ * [ deutsch ] <p > pr&uuml ; ft die l&auml ; / pre >
obtains a local date - time from the era year - of - era and day - of - year fields .
{
obtains a { @code localdate } from a temporal object . <p > this returns a { @code zoneid } that is a date - based { @code temporalaccessor } .
-----------------------------------------------------------------------
{
{
/ * ( non - javadoc )
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
adds a new monitor to the given {
notifies the listeners that the listeners are currently being used .
notifies the listeners that the specified { @code count } is not equal to the given { @code value } .
notifies the listeners that the progress is fired .
<p > a list of cache keys to be used in the cache . < / p >
returns all fields annotated with { @link } .
returns the { @link field } that is annotated with { @link } .
get the value of the field .
marshall the given parameter object .
marshall the given parameter object .

rem : <pre > { @code : : // . ( ) ; } < / pre >
marshall the given parameter object .
marshall the given parameter object .
<p > the list of all the instances that are associated with the specified instance . < / p >
<p > the list of objects . < / p >
<p > the list of all the instances in the specified solution group . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
getter for - gets
setter for - sets list of mmax annotation
indexed getter for - gets an indexed value - list of synonyms
indexed setter for - sets an indexed value - list of mmax annotation that is indexed by the given index .
marshall the given parameter object .
marshall the given parameter object .
<p > the product of the product . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > the user groups to be used in the user . < / p >
<p > the user groups to be used in the user group . < / p >
<p > a list of the user groups that you want to describe . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
main method .
getter for - gets
setter for - sets
indexed getter for - gets an indexed value -
indexed setter for - sets an indexed value - list of the mmax annotation .



converts a hexadecimal string to a hexadecimal representation of a hex representation .
returns the bit at the specified index .
<p > the license licenses for the license licenses . < / p >
<p > the license licenses . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
checks if the current line is a line .
<p > the list of objects . < / p >
<p > the list of inventory filters . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
marshall the given parameter object .

read the from the file .
sets the value of the parameter .
marshall the given parameter object .
sort the elements in the list .
converts a string array to a string array .
marshall the given parameter object .
setter for - sets the name of the substance that the title is valid .
getter for - gets
setter for - sets
configures the default configuration .
get the credential associated with the given credentials .
marshall the given parameter object .
close the file .
marshall the given parameter object .
<p > a list of query parameters . < / p >
<p > a list of query objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > a list of the query ids . < / p >
<p > a list of the query ids . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
sets the toolbar button . <p >
{
marshall the given parameter object .
prepare the given string as a .
explain the and variables to identify the .
assign the value to the given value .
<p > creates a new channel for a specified channel . < / p >
<p > creates a new endpoint for a specified endpoint . the endpoint is used to create a new endpoint for the endpoint . for more information see <a href = https : // docs . aws . amazon . com / opsworks / latest / userguide / . html > endpoint - the - service - service - service - connect
<p > deletes the specified channel . < / p >
<p > deletes the specified endpoint . < / p >
<p > returns the channel for the specified channel . < / p >
<p > returns information about the specified endpoint . < / p >
<p > lists the associations for the specified vpc endpoint service . < / p >
<p > lists the origin that are associated with the specified vpc . the workspaces must be in the same vpc as the endpoint service . < / p >
<p > enables the specified interconnect to the specified channel . < / p > <p > the <code > / code > operation is provided by the <code > / code > operation . < / p > <p > the <code > / code > operation is provided by the <code > / code > operation .
<p > enables the specified endpoint for the specified endpoint . for more information see <a href = http : // docs . aws . amazon . com / opsworks / latest / dg / dg / . html > / a > endpoint . for more information see <a href = http : // docs . aws . amazon .
<p > updates the specified channel for a specified channel . < / p >
<p > updates the specified endpoint . < / p >
marshall the given parameter object .

{
destroys the session manager .
sets the value of the attribute .
/ * ( non - javadoc )
resolves the session to the session .
calls {
calls {
traverses the queue


marshall the given parameter object .
/ * ( non - javadoc )
creates a new { @link } instance for the given { @link properties } .
creates a new prefix for the prefix .
creates a { @link } instance for the given property name .
process the command line arguments .
clear the map .
clear the and .
removes all prefixes from the given prefixes .
{
returns true if the specified key is not present .
{
/ * ( non - javadoc )
{
get the value of the specified key .
get the value of the specified key .
returns the property value stored in the given key .
get the key array for the given key .
returns the value of the specified property .
returns the value of the specified key .
returns the boolean value of the specified key .
get the byte value from the given key .
get the byte array from the given byte array .
get the byte array from the given byte array .
get the double property as a double .
get the double value for the given key .
get the double value for the given key .
returns the prefix for the prefix .
get a float array from a float array .
get a float array value .
get the integer value from the property .
add a file to the file .
get the key value pair .
get long as long as long as long as a long .
get the long array for a given key .
get the long array for the given key .

persists the given file to the given file .
restores the given file to the list of files in the file .
{
main method to start the server .
{
{
get the short value for the given key .
get the short value for the given key .
get the short value for the given key .
{


{
{
{
loads the data from the stream .
{
loads the reader from the reader .
{
sets the prefix for the prefix to be used for the given prefix .
sets the prefix for the prefix to be used for the given prefix .
returns the number of elements in the array .
sets the value of the property .
sets the configuration for the config .
{
{
stores the contents of the specified stream into a stream .
writes the given writer to the writer .
{
loads properties from a properties file .

compare the given { @link } with the given { @link } .
compare the given { @code } .
returns true if the iterator is not null .
returns the number of elements in the iterator .
returns the iterator of the iterator .
creates a map of properties that are used to create a file .
remove all properties from the map .
serializes the given { @code instream } to a { @link outputstream } .
{
{
returns the value of the specified key .
the method calculates the for the given atom .
returns true if the bond is not in the bond .
calculate the line between two lines .
calculates the electronegativity of the .
calculates the distance between the two atoms and atom .
{
splits a string into a list of strings .
returns the names of the first letter of the specified character .
returns the total number of buckets for the given bucket .
returns all the .
sets the full distribution of the specified distribution .
{
remove a space from the list .
marshall the given parameter object .
calculate the of the given atom .
calculate the of the .
returns the for the given iatom .
find the best guess that the atom is not bonded .
marshall the given parameter object .
returns a datasetfilter for the given locpathiterator and a given path .
marshall the given parameter object .
<p > the list of db clusters that are associated with the specified network interface . < / p >
<p > information about the vpcs . < / p >
<p > the list of db clusters that are associated with the specified db cluster . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java .
marshall the given parameter object .
get the domain for the given domain name .
converts a string into a string representation of the form of a query string . <p >
verify that the jwt token is authenticated .
verify that the token is stored in the token .
returns a { @link accesstoken } for the given { @link accesstoken } .
returns a { @link accesstoken } for the given { @link accesstoken } .
returns a token for the given token .
marshall the given parameter object .
<p > information about the agents . < / p >
<p > information about the agents . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
extract the request token from the given request .
encode a http client from the client .
get the url of the url .
{
{
{
{
{
{
{
{
get the range of the range of the given range .
get the ip address from the request .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
{
marshall the given parameter object .
{
<p > the attributes of the grant . < / p >
<p > the templates used to enable / disable templates . < / p >
read the shelx from the input file .
add a new to the list of .
add a group to the list of
calculates the average of the molecular formula .
{
analyzes the family family family family family family family family name .

get the of the atomplacer3d object .
calculates the for the given atom .
search for the atoms of the aliphatic and bonds .
given the next permutation of the tree .
creates the next .
get the next .

returns the symbol symbol for the symbol table .
calculate the nodes of the tree .
sorts the list of nodes in the list of nodes in the list .
fills the object with the
marshall the given parameter object .
marshall the given parameter object .
{
add a new { @link } to the list of attributes .
<p > specifies the provider s value provider for the provider . < / p >
<p > attributes to map of attributes to attributes to the user . < / p >
get the node from the given node .
returns the element at the specified element .
create an expression that is used to execute the given expression .

<! -- begin - user - doc -- > <! -- end - user - doc -- >
/ * [ deutsch ] <p > entspricht sax2< . < / p >

{
{
{
{
{
{
{
{
{
add attributes to attributes .
adds the attributes to the list of attributes .
visit a single attribute .
{
{
marshall the given parameter object .
{
/ * ------------------------------------------------------------
returns the of the bond with the specified bond .
{
constructs a new { @code } from the given { @code } .
compare two { @link ichemobject } classes and returns a { @link idifference } .
{
{
{
remove the specified items from the list .
updates the key of the given key and update the result .
{
{
{
{
save the entity to the given .
get the .
get the directory for the given application .
<p > the ids of the fleets that are not permitted to access the request . < / p >
returns true if the given { @link } is a { @link } .
{
<p > the resources that are associated with the specified resource . < / p >
<p > the list of resources . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
<p > the list of attack objects . < / p >
<p > the list of attack summaries . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > a list of the dashboards that you want to use for the specified key . < / p >
<p > a list of the property . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
<p > the list of objects . < / p >
<p > the list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
{
{
sets the binding to the given binding .
<p > a key - value pair of key - value pairs . < / p >
<p > attribute . < / p >
<p > a list of the users that are currently in the user group . < / p >
<p > a list of users . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to

register a .
sets the locale for the given locale .
query the query results for a query .



marshall the given parameter object .
<p > a list of iam groups . < / p >
<p > the ids of the ec2 instances . < / p >
returns the value of the property .
find the file that is a directory and then find the file .
marshall the given parameter object .
marshall the given parameter object .
.
returns the index of the given .
returns a new vertex with the specified vertex indices .
marshall the given parameter object .
marshall the given parameter object .

compute the best equally spaced solution matrix .
compute the best equally spaced equations of the matrix .
search for the atoms in the list .
returns the number of running tasks that have been installed in the specified project .
find the best atom matching the specified atom .
searches the substituents of the given atom .
search for the atoms in the ringset .
get the number of atoms in the .
returns the number of rings in the specified atom .
get all the atoms in the list .
{
returns the atom color of the given atom .
marshall the given parameter object .
{
sets the .
returns the deepest enclosing the road .
returns the absolute location of the given .
{
{
marshall the given parameter object .

check if the last element is the last element of the last element .
build a query for the given query .

returns a list of all keys in the map .
find the object by the id of the given type .
{
<p > associates a device with a specified device . for more information see <a href = https : // docs . aws . amazon . com / opsworks / latest / userguide / . html > amazon ec2 acquisition for com . < / p >
<p > creates a new placement for the specified aws account . you can create a new placement for the specified <code > mlmodel< / code > . < / p >
<p > deletes the specified placement . < / p >
<p > describes the placement of the specified job . < / p >
<p > retrieves the project configurations for the specified project . < / p >
kills the given .
<p > disassociates a device from the device . < / p >
<p > returns information about the specified devices . < / p >
<p > lists the specified list of all the specified users . < / p >
<p > updates the specified placement . < / p >
{
marshall the given parameter object .
sends a mail message to the given mail message .
marshall the given parameter object .
process the command .
<p > a list of endpoint endpoint objects . < / p >
<p > information about the endpoint endpoint endpoint details about the endpoint endpoint . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
activate the specified call on the specified channel .
activate the interaction specified in the call activate on the call .
renew the current agent&#39 ; s nickname .
marshall the given parameter object .
get the member of the member of the specified member .
get the attribute of the specified member .
get configuration configuration for a specific configuration .
get the configuration for a particular type .
get the get of a member of a type
get the target of a specific type .
get the current session for the given session id .
get devices for a specific device .
get device metadata for a device&#39 ; s device id
region
generates a for the given .
<p > the table names . < / p >
<p > the storage storage options for the storage . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
get user information for a user .
get the agent of the specified managed service .
get the agent mode for the specified workspace .
get the agent of the specified call .
logs the given redirect with the given redirect url .
login to redirect the user to the user to redirect to the specified redirect url .
logout the agent with the specified interaction .
redirects to the specified redirect url .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
list assets in the specified project .
retrieves information about a specific device .
<p > the relationships to the user . < / p >
<p > the relationships that you want to receive notifications . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
<p > the entity types for the specified entity types . < / p >
<p > the entity types . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
<p > the list of objects . < / p >
check if the given string is valid .
get the singleton instance of the .
returns the first component for the given locale .
removes the specified { @link } from the given { @link locale } .
sets the { @link } for the given { @link } .
{
compare the isotope patterns for the isotope pattern .
returns the number of elements in the given .
marshall the given parameter object .
<p > the response models for the response . < / p >
marshall the given parameter object .
check if the is a mass of the .
check that the input is valid .
returns the maximum value of the specified value .
returns the minimum value of the specified element .
get the value of the given member .
{
associate the given context with the current context .
send the sms endpoint to the specified port .
{
get the address of the passed in { @link } .
get the number of tasks that match the given number of times .

/ * ( non - javadoc )
<p > a list of <a > / a > objects . < / p >
the method calculates the atom electronegativity of the given atom number .
marshall the given parameter object .

get the default class loader for the given class loader .
marshall the given parameter object .
<p > information about the virtual router . < / p >
<p > the virtual interfaces that the virtual router is created . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setassociations ( java . util . collection ) } or { @link ( java . util . collection )
marshall the given parameter object .
/ * ( non - javadoc )
store a key / value pair in the given key .
marshall the given parameter object .
marshall the given parameter object .
convert a { @link jsonobject } into a { @link jsonobject } .
add a new to the
marshall the given parameter object .
sets the parameters of the .
calculates the for the given .
returns a reference to the object reference .
marshall the given parameter object .
returns the current locale .
load properties from a file .
marshall the given parameter object .
calls {
build sql insert query
build sql update query result table .

get all the sql statements that have been created .

delete the sql statement .
returns the next row in the list of columns .
parse the list of fields in the list of fields of the given .



get the column name for the field name .
marshall the given parameter object .
get the bond id for the given descriptor .
adds the specified bond to the set .
marshall the given parameter object .
create a new { @link map } from a map .
returns a map with the given map of map entries .
returns a map with the map entries from the map .
returns a map with the given map entries for the given map .
adds a constraint to the specified constraint .
returns a new { @code } instance with the key and value mapping .
returns a new instance of { @link } that is backed by the specified key .
returns a new instance of { @link } .
returns a new { @code } with the key and value key .
returns a {
returns a {
filter the specified filter .
get the { @link } for the given { @link } .

add a constraint to the map .
create a new instance of the given class name .

returns a list of all tags that are contained in the given tag .
get the field that is declared by the given field .
get the field name for the given field .
loads properties from a file .
sets the user s credentials .
returns a string representation of the current { @link string } .
write a { @link streamable } to a { @link writer } .

<p > information about the attributes . < / p >
<p > a list of attributes that are presented in the request . < / p >
<p > a list of attributes . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
<p > the task execution summaries . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #settasks ( java . util . collection ) } or { @link #withtasks ( java . util . collection ) } if you want to
<p > the list of all the log entries . < / p >
<p > the list of all the pending connections . < / p >
marshall the given parameter object .
returns the file name for the given path .
loads the templates from the given resource .


writes the given number to the given output stream .
returns the ringset of the ring aromatic .
returns the color of the bond type of the given color .
get the width of the bond .
{
generate a new .
generate a new bond for the bond .
generate a bond for the bond .
generate a new for a given atom .
generate a polygon with the specified coordinates and 3d coordinates .
check if the bond is wedge .
marshall the given parameter object .
determine if the bond is bonded to the bond .
generate a new .
{
{
{
this method is used to convert the given xmlfile object to a json object .
read the xml from the given xml stream .
serializes the given xml content to a { @code } .

unmarshals the given xml source into a document .
{
unmarshals the given xml source into a xml file .
{
<p > log text with text and text . < / p >
print a line of text and output lines .
print a line of text and output lines .
extracts the field value from the given field .
calculates the for the given atom .
check if the field is valid .
set the field for the given .

returns the atom atom atom atom type .

returns true if the atom is a substructure of the given isotope .
given a atom type and the atom type and the atom s position .


marshall the given parameter object .
<p > the vpc security groups . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
<p > the ip addresses of the ipv4 addresses . < / p >
<p > the ip addresses of the ip addresses of the ip addresses of the ip addresses . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setprivateipaddresses ( java . util . collection ) } or { @link #withprivateipaddresses (
<p > the ipv6 addresses . < / p >
<p > the ipv6 addresses . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setprivateipaddresses ( java . util . collection ) } or { @link #withprivateipaddresses ( java . util . collection ) } if you want to override
marshall the given parameter object .
returns the first { @link } that is used to store the given object .
<p > newinstance . < / p >
create a new instance of the given class .
computes the householder vector vector by the given vector vector vector vector vector vector vector vector projection matrix .

determine if the atom is bonded to a atom .

dumps the prefix of the specified prefix .
marshall the given parameter object .
marshall the given parameter object .

{
marshall the given parameter object .
fixes the plugin to the given plugin .
{
returns the localized message for the given message .
returns a string representing the message that is currently in the message .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
the to find the .

marshall the given parameter object .
marshall the given parameter object .

get the list of roles for the given role .
{
{
{
marshall the given parameter object .
<p > the table storage storage . < / p >
<p > the table names . < / p >
<p > the storage storage options for the storage . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > the list of objects . < / p >
<p > the list of objects . < / p >
<p > the list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
combine the given { @link } into a { @link } .
sets the data data .

if the flow is not active the current thread is interrupted .
execute the given tenant and execute it .
executes the given { @code runnable } asynchronously .
executes the given { @link trigger } .
unmarshals the given xml content from the xml content from the xml content . <p >
loads the templates from the given reader and returns the template .
creates the folder .
returns the index of the specified index .
creates the folder folder folder .
creates the folder folder folder .
creates the file folder if it is not available .
creates the folder folder .
creates the .
get a logger instance with the given name .
get a logger for the given class .
marshall the given parameter object .
add a new to the list .
sets the select select box .
sets the string representation of the given string .
<p > groupby . < / p >
generate the query string for the given query .
get the parameters for the given parameters .
builds a query object from the given query .

marshall the given parameter object .
returns the first argument that is the first argument of the given argument .
creates a new { @link option } .
creates a { @code } from the given { @code option } .
get all the elements in the array .
launch the current thread .
transfers the specified { @code } to the given { @code } .
sets the context for this context .
binds the specified bean to the specified bean .
starts the stopwatch .
marshall the given parameter object .
stop the stopwatch .
<p > information about the inbound inbound connection . < / p >
<p > the amazon resource names ( arn ) of the amazon vpc and forwarded to the specified container . < / p >
<p > a list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > information about the endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint . < / p >
<p > information about the endpoint endpoint endpoint endpoint endpoint endpoint to the endpoint endpoint . < / p >
<p > information about the endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint endpoint to enable . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use {
returns a new with the specified type .
creates a wildcard for each pattern .
returns the entity type of the given entity .

returns the names of the parameters of the given parameter .

marshall the given parameter object .
calculates the energy of the .
creates a { @code } from a { @link jsonelement } .
creates a { @link } from a { @link } .
creates a { @link } from the given { @link bytebuf } .
merges the { @code data } into the { @code } .
merges the { @code schema } into the { @code } .
serializes the { @link } to a { @link outputstream } .
set the active center of the center of the atoms .
get a { @link } for the specified { @code class<t > } .
get a { @link } for the specified { @link } .
get a bean for a given bean .

get a new instance of the given bean .
get a bean by its name .
get all beans matching the specified type .
get the provider for the specified provider .
returns the number of atoms in the atomcontainer .
converts a list of strings into a string representation .

compares two { @link comparable } with the given comparator .
<p > the resource id of the resource . < / p >
<p > the resource id of the resource . < / p >
marshall the given parameter object .
{
{
checks if the atom is a substructure .
returns all the ids of the specified list .
returns the list of all that are referenced by the specified set .
initialize the .
marshall the given parameter object .
<p > a list of the keys in the key - sets . < / p >
<p > the list of mfa keys . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > a list of the keys in the key - sets . < / p >
<p > the list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > the arguments for the specified template engine . < / p >
<p > the list of devendpoint . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
<p > the mapping of the key - value mapping for the endpoint . < / p >
returns true if the atom is bonded to the atom aromatic atom .
<p > the names of the key - value pairs for the key . < / p >
<p > the name of the aws account . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
<p > the names of the key - value pairs for the key . < / p >
<p > the key - value pairs for the key . < / p >
<p > the list of key - value pairs for the key . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
<p > the list of key - value pairs for the key . < / p >
{
<p > the list of key - value pairs for the specified key . < / p >
<p > a list of the key - value pairs that you want to use . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java .
<p > a list of <a > / a > objects . < / p >
get the text value from the given key .
checks if the given command is a valid command .
update the index index of the file .
<p > a list of compliant resources . < / p >
<p > a list of resources that are noncompliant . < / p >
<p > a list of compliant resources . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
marshall the given parameter object .
rounds the specified rounding to the given { @code fraction } .
calculates the rounding rounding mode rounded to the given { @code fraction } .
returns the decimal value of the given biginteger as a power of the decimal rounding mode .
returns true if the given { @code x } is a power of { @code power } .
returns true if the two adjacent element is equal to the specified tolerance .
returns the number of occurrences of the given two double numbers .
computes the mean mean value of the mean value .
returns the mean value of the mean value .
computes the mean mean value of the mean value .
marshall the given parameter object .
marshall the given parameter object .
returns a list of items from the list .
marshall the given parameter object .
configures the option for the specified evaluator .
/ * ( non - javadoc )
get the response as a string .
check the response redirect to the given url .
analyzes the metric and returns the list of metrics .
get the properties for a given request .
get the form data from the request .

<p > the compliance count for the compliance . < / p >
get the context for the given context .

generates a request id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id id
returns the request information for the request .
marshall the given parameter object .
creates a new { @link injector } for the given { @link } .
get a { @link } instance for a given expression .

create a new instance of the given object .
/ * ( non - javadoc )
returns a list of manifest entries for the given manifest .

reads a { @code } from the given { @code bytebuf } .



converts the json object to a json object .


print the object of the object .
get a instance .

get the singleton instance of the .
get a from the given

marshall the given parameter object .
<p > the stage variables for the canary . < / p >
creates a new { @link } with the specified capacity and key values .
creates a hash .
{
check if the current thread is a system .
waits for a new { @code } .
waits for a deadline to be waiting for the given deadline .
sets the value of the specified multimap .
evaluate the objective function .
copy the contents of the given input stream to the given writer .
marshall the given parameter object .

marshall the given parameter object .
<p > the list of uploaded files . < / p >
<p > the list of upload uploads . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
returns an unmodifiable view of the specified iterable .
returns the last element of the given list .
returns the head of the list .
returns a list containing all the elements in the list .




copies the contents of the specified array into the specified array .
concatenates the given collection of items into a list .
returns a set that contains all elements of the specified collection .
sets the buffer size .
{

marshall the given parameter object .
<p > the list of <a > / a > objects . < / p >
<p > the list of <a > / a > objects . < / p >
<p > the list of all the tapes . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
marshall the given parameter object .
returns the option value of the given option .
returns the option values for the option .
get the value of the option .
check if the command option is a command line option .
get the url for the url .
<p > adds a facet to the specified resource . you can use the <code > / code > to the <code > getutterancesview< / code > operation . < / p > <p > you can use this operation to add a new <code > / code > to the specified <code > / code > . < /
<p > applies the specified schema to the specified schema . < / p >
<p > attaches the specified list of resources to a <a > resource< / a > . < / p >
<p > attaches the specified policies to the specified managed policies . < / p > <p > you can use the <code > getutterancesview< / code > operation to access the specified policies . < / p > <p > you can use the <code > getutterancesview< / code > operation to access the specified policies . < / p > <p
<p > attaches the specified list of items to the specified amazon s3 bucket . < / p >
<p > attaches a specified project to the specified resource provider . you can use the <code > / code > to the <code > / code > action . < / p >
<p > deletes the specified pipeline . < / p >
<p > this operation is asynchronous operation . you can use the <code > / code > operation to retrieve the <code > / code > operation . < / p > <p > you can use the <code > / code > operation to add a batch of records to the specified batch . < / p > <p
<p > creates a new amazon lex and returns the results . < / p >
<p > creates a new index . < / p >
<p > creates a new <code > / code > object . < / p > <p > you can create a <code > / code > object to create a <code > / code > object . < / p > <p > you can create a new <code > / code > object . < / p



<p > deletes a specified <a > / a > . < / p >
<p > deletes the specified schema . < / p >
<p > deletes a specified link . < / p >
<p > detaches a specific inventory of a specific region . you can use the <code > / code > operation to retrieve the specified <code > developeruseridentifier< / code > from the specified <code > developeruseridentifier< / code > . if the <code > / code > is not specified the <code > / code > is called .
<p > detaches a specified amazon guardduty amazon ec2 instance of a specified managed instance . you can use the <code > / code > operation to retrieve the <code > / code > object . < / p >
<p > deletes the specified policy . < / p >
<p > detaches a specific forwardingrule / gateway from a specified resource . < / p >

<p > deletes a specified facet . < / p >
returns the type of { @code } .
returns a { @code } that is a { @code } .
get the duration of the duration of the current duration .
<p > retrieves the attributes of the specified attributes . the attributes are not included in the request . < / p > <p > for more information about managing security groups see <a href = https : // docs . aws . amazon . com / iam / latest / userguide / id_tags . html > tagging amazon lex lex : <
returns the value of the given member .
returns the text of the first element of the given text .
resolves the type of the given type .
<p > deletes the specified directory . < / p >
<p > deletes the specified directory . < / p >
<p > lists the specified indexes . the list of all the returned lists are paginated and the last voted . < / p >
<p > lists the names of the specified tagoption . < / p >
<p > lists the directories that are associated with the specified directory . < / p >
<p > lists the facet attributes of the facet attributes . < / p > <p > for more information see <a href = http : // docs . aws . amazon . com / iam / latest / userguide / id_tags . html > tagging amazon lex / a > . for more information see <a href = http : //
<p > lists the names of the facet names . < / p >
<p > returns information about a specific build . < / p >
<p > lists the index of the specified index . < / p >
<p > lists all managed rules that are associated with the specified managed instance . < / p >
<p > lists the attributes of the specified tagoption . < / p > <p > for more information see <a href = http : // docs . aws . amazon . com / amazondynamodb / latest / developerguide / concepts . html > / a > operation . < / p >
add a new entity to the list of entities .

escape the given string .
<p > unescapes the string in the string . < / p >
unescape the string representation of the given string with the given string .
<p > returns the list of all policies that are associated with a specified resource . < / p >
<p > lists all the dashboards defined in the specified amazon resource name ( arn ) of the specified amazon resource name ( arn ) of the specified resource group . < / p >
unescape the string representation of the given string builder .
create a new { @link documentbuilderfactory } .

export the xml into xml .
<p > lists the specified list of dc2 objects . < / p > <p > for more information see <a href = https : // docs . aws . amazon . com / iam / latest / userguide / id_tags . html > / a > in the <i > amazon ec2 / i > . for more information see <a
<p > lists the specified tagoption . < / p > <p > you can list the <code > generateservicelastaccesseddetails< / code > operation about the specified policies . < / p > <p > you can list the <code > / code > parameter in the <code > / code > parameter . < / p > <p > you
<p > returns a list of all capabilities of the specified project . < / p >
<p > updates the specified attributes . < / p > <p > you can use this operation to change the attributes of the <code > / code > parameter . < / p > <p > you can use this operation to change the attributes of the <code > / code > parameter . < / p > <p >
<p > updates the specified attributes . < / p > <p > you can use the <code > / code > operation to update the attributes . < / p > <p > you can use the <code > / code > operation to update the attributes . < / p > <p > you can use the <code >
<p > lists the attributes of the specified attributes . < / p > <p > for more information see <a href = https : // docs . aws . amazon . com / iam / latest / userguide / id_tags . html > tagging iam identities< / a > in the <i > iam user guide< / i > . < /
<p > lists the names of the resource names . < / p >
<p > returns the name of the specified iam policy . the name of the policy is authorized to the aws account . < / p >
<p > modifies the schema for the specified aws account . < / p >
<p > adds a schema to the specified schema . < / p >
<p > deletes a specified facet from the specified pipeline . < / p > <p > you can use the <code > / code > to remove an <code > / code > object . < / p > <p > you can use the <code > / code > to remove an <code > / code >
<p > updates the specified tagoption . < / p >
loads a pem file from pem file .
parses the given object and returns the object .
<p > updates the specified schema . < / p >
<p > updates the specified tagoption . < / p > <p > you can use this operation to change the list of labels in the <code > / code > . < / p > <p > you can use this operation to change the list of labels in the <code > / code > . < / p >
<p > updates the schema definition . < / p >
<p > modifies the schema for a specified managed cluster . the status of the operation is used to determine the status of the upgrade . < / p >
returns the source source .
get the element s value .
marshall the given parameter object .
returns the resource as a url .
returns the value of the specified property .
returns a list of properties whose name matches the given name .
{




reads the configuration from the serialization .


<p > . < / p >



returns the first substring of the given substring .

returns the substring of the given substring .
returns the substring of the given substring .
returns the last element of the given string .

returns the last element of the given string .

arr1 a list of strings with delimiter .
get the list of { @code delimiter } objects from the given delimiter .


removes all whitespace from the given string .
initializes the string .


returns the value of the specified key .
returns the entry for the specified key .
creates a new { @link } with the key and value pairs .
creates a new { @link } that is used to create a new { @link } .

copy the contents of the given to the given .
returns the segment that is the specified segment .
validates the parameters of the .
{
build the message message .
marshall the given parameter object .

get the time from the date
{
returns the minimum value of the specified array .
returns the maximum value of the specified array .
sorts the specified array into a new array with the specified minimum number of elements .
sorts the specified range of the specified array using the specified comparator .
parses the specified number of digits from the specified radix .
marshall the given parameter object .
<p > the arns of the sns topic selectors . < / p >
<p > the arns of the resource . < / p >
<p > the list of inventory filters . < / p >
<p > the entity names . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
<p > the date and time intervals for the last time . < / p >
<p > the tags for the tags . < / p >
<p > a tag - formatted key - value map . < / p >
<p > the tags to be deleted . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #settags ( java . util . collection ) } or { @link #withtags ( java . util . collection ) } if you want
<p > the tags to be deleted . < / p >
<p > the status codes for the status codes . < / p >
<p > the status codes of the status codes . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > the status codes for the status of the status codes . < / p >
creates the default for the given .
main method .
create a new attribute from the given string .
{
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
returns a {
<p > the list of local secondary indexes . < / p >
<p > the index of the table . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > a list of the global indexes that the global secondary index is global . < / p >
<p > a list of the global indexes that are used to track the index of the table . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link
parses the input and returns the .
add a to the
add the to the
/ * private methods -----------------------------------------------

<p > the details of the route table . < / p >
<p > the details of the route table . < / p >
<p > the ids of the route ids that you want to describe . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .

creates a new instance of the given type .
add a constructor that is used to add a constructor .
add a new property to the list .
creates a new item that is associated with a given type .
creates a new { @link } from the given { @link } .
returns a new { @code } with the specified { @code throwable } .
returns the next element that is the first entry in the list .
creates a new instance of the given url .
converts a { @link } to a { @link } .
gets the name of the { @link } .

check that the cell is empty .
get the { @link } for the given { @link } .
get the retry executor .
==============================================================
marshall the given parameter object .
simplified method form for invoking the operation with an asynchandler .
creates a hash map .
deletes the entries whose key is equal to the bucket .
<p > the list of cache ids . < / p >
create the form of the form
<p > the list of cache ids . < / p >
<p > the list of availability zones . < / p >
<p > the availability zones for the availability zones . < / p >
prints the system .
prints the information about the given .
<p > the list of clusters to be used for the cluster . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
creates a { @code hostandport } from the given { @code host } .
get host host and port from host and port .
returns a { @code } instance from the given { @code host } .
returns the host port from the given host .
marshall the given parameter object .
sets the endpoint id for the given service name .
this method is used to get the by the
sets the region for the specified region .
configures the region forwarding region to the specified region .
adds a request handler to the request handler .
removes the request handler for the specified request .
<p > . < / p >
check if the request is a request to determine if the request is a valid request .
this method is used to create a metric collector that is used to create metric and metrics to be used by the .
returns the metric collector for the metric collector .
<p > . < / p >

resets the request to the client .
this method is used to determine the service name for the service .
sets the signer of the signer .
sets the region for the region .
sets the region for the region .
sets the endpoint endpoint service endpoint for the endpoint endpoint service endpoint .
<p > the names of the domains that are permitted to access dns domains . < / p >
<p > the names of the domains that are permitted to access dns domains . < / p >
<p > the names of the domains that are associated with the domain . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
marshall the given parameter object .
returns a byte array containing all the elements in the specified array .
returns a list of all the data in the given array .
returns a range of { @code } s by the specified range .
returns a new { @code } with the specified number of bits .
returns a new { @code } with the given { @code long } value .
get the cluster name .
creates a mutation mutation for a single hbase table .
create a new
creates a bulk read - only if it is not a read - only read - only read - only read - only read - only read - only read - only read - only rocksdb .
get the connection table for the specified connection .
get the sslconfig client .
get the singleton instance of the { @link } instance .
creates a new { @link managedchannel } for the given { @link channel } .
creates a new channel pool .
create a new { @link managedchannel } for the given host and port .
creates a new instance of { @link } .
create a new { @link } instance .
creates a new { @link } object .
create a new { @link } .
closes the socket .
marshall the given parameter object .
returns a new { @code cachestats } instance with the specified amount .
returns the delta extractor for this record .
returns a copy of the given { @code multiset } with the specified elements .
returns a copy of the given { @code elements } in the specified { @code elements } .
get the type of the class .
creates a new { @link } .


returns a json - encoded json string .
create the form of the .
sets the status of the current request .
checks if the given location is a valid location .
returns a new that will be used to filter the list of nodes .
returns the list of available { @link } s .

applies the given { @link } to the { @link } .
initializes the managed instance .
clear all cached beans and activating the .
marshall the given parameter object .
/ * ( non - javadoc )
{
handles the { @link } .
{
add a new server - side { @link } to the server .

<p > the list of objects . < / p >
<p > information about the provisioned product . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
marshall the given parameter object .
initialize the log .
initialize the log .
initializes the log .
initializes the log with the specified configuration .
initialize the log file .
creates a new { @link } with the given { @link context } .
adds a new { @link logger } to the specified { @link logger } .
marshall the given parameter object .
log a message with the specified arguments .
send a { @link throwable } to a { @link string } .
logs the formatted string with the given arguments .
logs a throwable with the given message .
logs the given arguments .
log a message with the given message and logging the log level .
log a message with the specified arguments .
send a { @link #constants . } .
log a formatted string with the specified arguments .
log a message with the given exception .
log a message with the specified level .
log a log message with the specified log level .
{
poll the queue to poll the queue .
/ *
$antlr start
check if the repository repository id is valid .

creates a new repository instance .
write the to the deroutputstream .
get the best level for the given location .
get the stack trace of the given stack trace .

create a new factory instance
{

marshall the given parameter object .
sends a unicast message to the network .
decodes the given string into a string .
marshall the given parameter object .
{
create a new { @link } instance .
creates a new attachment from the given url .
creates a new attachment from the given url .
creates a new mime body with the given charset name .
returns the url for the given url .
read the file .
read next chunk from the stream .
<p > the disk recognition . < / p >
<p > an array of <code > / code > objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
reads the next chunk of bytes from the input stream .

reads the next chunk of the given input stream and returns the result .
get the next state of the next token .
read the next number of tokens .
print a writer .
print the content of the output stream to the output stream .

parses a { @link inputstream } from an { @link inputstream } .
check that the input stream is not valid .


reads a data from the input stream .
{


returns the number of bits in the given bit .
encrypts the given byte array .
create a new .
create a new response from the given body .

marshall the given parameter object .
$antlr start
check if the request is valid .

checks if the request is valid for the request .
<p > . < / p >
marshall the given parameter object .
this method is used to create a new instance .

creates a { @code } that will transform the eventpublisher into a { @link publisher } .
creates a { @code flux } that emits all items emitted by the source publisher and then returns the resulting { @link publisher } . <p > the resulting { @link publisher } is used to convert the { @link publisher } to emit the { @link publisher } forwarding to the provided { @link publisher } . <p > the resulting {
returns a {
calculates the crc offset of the given byte array .
create a new { @link } instance .
creates a new { @link } .
creates a new { @link } instance .
method to handle the {
decodes a byte from base64 encoded bytes .
registers a new { @link } with the given { @link } .
sets schedulers for a specific { @link } .
removes a { @link } .
decorates the {

calls the { @code function } for each { @link } .
clear the and clear the .
adapts a runnable to a { @link runnable } to execute the given hook .
shutdown the and .
returns a byte array containing the bytes of the specified stream .
if the given {
returns the { @link } for the given { @link } .
copy the contents of the given byte array into the given byte array .
init fxml .

marshall the given parameter object .
returns the number of bits in the given array .
marshall the given parameter object .
compare two fields .
returns the set of keys that are contained in the given set of keys .
compare two nodes .
get the map of all fields of the given field .

converts a long to a byte array .
decodes a 64 - bit integer from the input stream .
encodes the given byte array into a byte array .
generates a hash key from the given byte array .
copy the contents of the input stream into the output stream .

clear the text of the given string
copies the data from the input stream into the output stream .
marshall the given parameter object .
add a new notification to the list of listeners .
remove all listeners that are not currently active .
initializes the .
sets the prefix for the given prefix .
sets the color of the given prefix .
get the list of all the items in the list .
returns the text of the text that is used to format the text .
clears the next range of the text .
marshall the given parameter object .
handle the .

add a new { @link } to the given { @link } .
remove all the items from the list of all the spans in the specified list .
clear all the cached objects and clear all the listeners .
/ * ( non - javadoc )
updates the current text value .
removes the text from the request .
insert a new token into the .
find the class that is the class of the class .
check if the current selection position is greater than the current position .
marshall the given parameter object .
marshall the given parameter object .
{
append a value to the request .
add a parameter to the request .
constructor .
{
{
creates a new for the given resource .
creates a new for the given resource .

draws the specified rectangle .
sets the color of the led .
enable the .
returns a list of all the users who have a specific type .
updates the patches of the patches of the patches .
creates a new object object .
returns the resource type of a resource .
pushes the type to the stack .
parse the given string into a datetime object .
returns a { @link } that is used to find the first { @link } .
adds the permissions to the list of permissions .
adds a new permission to the list of permissions for the given permissions .
{

{
adds a request to the list of rules .
marshall the given parameter object .
设置一个header<br > value

creates a new connection instance .
installs the given tunnel to the server .
sends a new connection to the database .
sends a request to the server .
<p > the cache id to be deleted . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
sets the id of the id .
marshall the given parameter object .
<p > information about the languages . < / p >
<p > a list of the provisioning artifacts . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
sets the time in seconds to start with a new { @link } .
execute a method invocation .

{
dumps the specified to the specified output stream .
marshall the given parameter object .

sets the { @link file } to be used for the given { @link file } .
marshall the given parameter object .
marshall the given parameter object .
<p > the configuration parameters . < / p >
parses the { @link } for the given expression .
parses a bracketed expression .
validates that the given file is valid .
closes the connection and closes the connection .
marshall the given parameter object .
marshall the given parameter object .
sets the parameters of the request .
<p > the keywords . < / p >
<p > the ids of the languages used by the user . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
<p > the list of the locations . < / p >
returns true if the given resource is a resource .
<p > the list of the platforms . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > the list of objects . < / p >
<p > the list of versions of the version . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > the ids of the aws organizations . < / p >
<p > the skill types for the specified skill . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > the details of the grant . < / p >
marshall the given parameter object .
sets the list of partners .
build the table .
get the for the given .
get the index of the .
get the for the given .
sets the configuration for the given configuration .
get the set of cp rules .
returns the set of languages identifiers for the given package .
opens a file with the given url .

get a file from a file .
resolve the from the player s .
returns the { @link } that is the first element of the given { @link } .
get the for the given .
open a file .

invalidates the key and deletes the key - value pair .
get the asset paths for the given asset .
marshall the given parameter object .
returns a { @code } for the specified { @code } .
returns the resource id for the given package .
marshall the given parameter object .
creates a new instance of the class name .
sets the field to the specified field .
reads the specified { @code } from the given { @code class<t > } .
writes { @code } to the given { @code bytebuf } .

serialize a into a byte array .
sets the position of the data .
check if the given { @link } is a bit of the given { @link } .
returns the value of the underlying buffer .
<p > the list of provisioned iops . < / p >
<p > the list of provisioned iops . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
reads a single item from the given { @code } .
get the class fields for the given class .
returns the annotation that is annotated with the given annotation .
finds the field with the given name and field name .
get the bean s name .
returns the getter method for the given method .
<p > a list of export export pages . < / p >
get the raw type of the type .
sets the user id to the user .
creates { @link } .
<p > a list of export export sizes of the export export export export configurations . < / p >
<p > a list of export export sizes for each export . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
sets the {
sets the number of user - defined devices for the user .
applies the operation to the list of operations in the given list .
check the request validity of the request .
get the text value of the given text .
marshall the given parameter object .
<p > the list of versions of the specified product . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setversions ( java . util . collection ) } or { @link #withversions ( java . util . collection ) }
<p > a list of configuration attributes . < / p >
<p > a list of configuration templates for the specified configuration . < / p >
<p > a list of configuration templates for the specified configuration . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
marshall the given parameter object .
resets the to be used by the .
returns the number of views for the given number of milliseconds .
checks if the user has a toast with the specified title and the navigationbar of the apptentive view .
checks if the toast is currently active .
create a file from a file .
creates a from the given .
creates a from the given xmp memory .
handle the next signed long in the file .
marshall the given parameter object .
invoke the method to invoke the method .
{
find the index of the node at the given index .
check if the given object is a valid variable .
checks if the value of the given object is a primitive or if it is not null .
check if the class is not a class or not .
create a new instance of the given type .
fill the given array with the specified number of arguments .
/ * ( non - javadoc )
calculates the bit of the stringvalue to encode the given byte offset .
<p > a list of the properties that are used to provision the game session placement . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java
<p > the player id of the player player . < / p >
<p > the player s player . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
<p > information about the player sessions that are currently being deleted . < / p >
<p > a list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
/ * ( non - javadoc )
this method returns the javascript object for the given script .
returns the for the given .
{
compile the script from the script .
invokes the method on the given object and returns the result .
{
returns the class of the specified interface .
{


/ * this method is used to determine if the object is a member of the given object .


marshall the given parameter object .
{
{
marshall the given parameter object .
<p > the items in the request . < / p >
<p > the request to the response . < / p >
<p > a collection of item summaries . each item in the map identifies the metrics that are associated with the metrics . < / p >
<p > a list of <code > / code > objects . < / p >
{
{
log the message and the size of the current session .
get the session id from the session id .



returns the image of the image .
returns the number of bits in pixels with the specified pixel as a pixel .
get the image from the given image .
get the image for a given image .

returns the color of the specified .

finds the next occurrence of the specified field from the given range .
resets the calendar to the calendar s field .
parse the fields of the given expression .
replace the string with the given string .
{
marshall the given parameter object .
<p > a list of patch baseline summaries . < / p >
<p > a list of patch names of the specified patch group . < / p >
<p > a list of patch groups . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
shifts the bit of the bit .
get the id from the given id .
check if the given name is a valid id .
returns the next token in this string .
sets the parameters of the given object .
returns true if this is a specific field .
{
{
returns the number of the .
pushes a value to the given value .
pushes a value to the given value .
pushes a value to the given value .
pushes a value to the given value .
pushes the value of the given value to the given value .
pushes a value to the given value .
returns the index of the first argument that is the index of the specified index .
load the type .
marks the given index as a primitive .
loads the arguments from the given arguments .
loads the array of arguments to be used for each member .
loads the local type of the given type .
stores the specified local type and local id .
swap the contents of the given member .
returns the type of the type of the type .
returns the type of the given member .
returns the value of the type of the given type .

visits a primitive field stack .

returns a new that contains all of the columns in the table .
.
get the type of the given type .

get the field with the given name .
add a new attribute to the set of attributes .
put a field with the given name and type .
set the attribute name of the attribute .
invokes a method on the given method .
invokes the method on the method .
compares two strings with the same name as the first element of the current element .
invoke the method on the instruction .
check that the type is a primitive type .
invokes the method on the given method .

/ * ( non - javadoc )
check if the given attribute is in the edb .
returns the first member of the specified attribute .
get the attribute value for the attribute
invokes the method on the method .
throws an exception if the type is not a type .
{
{

puts a row into the table .
get the value of the given row .
get the list of all rows that are contained in the given collection .
returns the { @link } that represents the column discriminators .
get all rows in the list .
removes a row from the data .
marshall the given parameter object .
create a new { @link } instance for the given method id .

marshall the given parameter object .
returns the names of the files in the given file .
get the percentage of the given location .
get the .
get all the files in the file
get the list of files in the file .
marshall the given parameter object .
get the next .
marshall the given parameter object .
registers a new repository .
registers the given message with the given id .



saves the configuration to the disk .
closes the underlying stream .
normalize the url to the url .

expands the given { @link } to a { @link } .
initialize the .
returns the current { @link } for the given id .
returns the timezone value of the specified timezone .
get the decoded output as string .
get the logger .
clear the cache and clear the cache .

initialize the .
creates a filter that will be used to create a from the given path .
initializes the .
configure the default engine engine .
creates a new fs .
restores the given file size .
checks if the given file exists in the given fs .
{
{
{
{
{
opens a file with the given name and value .
{

marshall the given parameter object .




converts the given model into a model object .

put a object into the object .
delete a file .

marshall the given parameter object .
<p > the names of the resource names . < / p >
<p > the names of the names of the resource types . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
<p > the tags to send to the specified tag key . < / p >

marshall the given parameter object .
<p > the log level log streams for the log . logging is not supported . < / p >
<p > the log records for the log . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
{
returns the permissions for the given index .
request the permissions for the user .
visits a parameter with the given name and arguments .
visits a { @link } annotation .
visits a type instruction .
visits a field instruction .
visits a method instruction .
{
{
visits a {
visits a {
set the number of bits to be used for the given dimension .
visits a { @link jsdocinfo } that is declared in a { @link classvisitor } .
visits a line number .
<p > information about the status codes . < / p >
<p > information about the status codes . < / p >
<p > information about the status codes applied to the status of the status of the status of the status of the pipeline . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection )
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
{
creates the default application context .
{

updates the device id for the device id .
adds a new library to the library .


/ * package private
marshall the given parameter object .
marshall the given parameter object .
write a string to a writer .
write a to the output file .

check that the current process is not
marshall the given parameter object .
returns a new { @code } instance .
{
{ @inheritdoc }

<p > the database to restore snapshots . < / p >
{
<p > the database to retrieve . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
{
{
{
initialize the set of all and initialize them .
get the tile for a particular tile coordinate
get the corner coordinates for a given latitude longitude and latitude and longitude
get the density of a corner of a corner .
get the set of all the tiles in the map .
returns a {
returns the corner of the specified tile .
{
{
<p > generates a sql sql statement that is stored in the given <code > / code > .
analyse the table schema .
check if the current row is a valid or not .
marshall the given parameter object .
returns a copy of the specified { @code } .
returns a { @code } that is equal to the specified { @code object } .
returns a { @code } that compares the specified numberrange .
returns a { @code } that compares the specified predicates to the specified value .
returns a { @code } that compares the specified numberrange from the specified { @code comparable } .
returns a { @code } that compares the specified numberrange .
returns a { @code } that iterates over the specified iterable .
returns a { @code } that handles the specified function function .
returns a { @code set } that is a { @code set } of { @code set } .
returns a function that applies the specified function to each element of the specified collection .
{
creates a request that will be used to obfuscate the request .
creates a signatureversion grant type with the specified username and password .
creates a new form grant type .
creates a grant grant .
get the response .
marshall the given parameter object .
set the input format for the given .
merge the given frame with the given type and return the new frame .
get the value of the specified key .
returns the value of the specified key type .
adds a mapping from the key to the map .
method to check if the current token is a method .
creates a cipher for the specified cipher .
encrypt a byte array using the encryption key .
{
converts the value to a { @link } .
marshall the given parameter object .
encrypts data with the given data as encrypted data .



returns the value of the specified key .
decrypts the specified encrypted data using the specified cipher .
decrypts the specified encrypted key and returns the result .
get the type of the class .
get the list of { @link } s .
decrypts the specified encrypted data with the given key .
decrypts the encrypted data with rsa private key .
decrypts the specified key using the specified encryption key .
encrypts a key from a byte array .
encrypts a byte array with the specified encryption key .


execute a remote database .
marshall the given parameter object .
marshall the given parameter object .
sets the value of the property .
sets the value of the property .
set the date value of the date .
returns the value of the given property as a boolean value .
sets the value of the property .
sets the default value of the default value .
sets the value of the property .
returns the default value of the default value if the value is null or empty .
returns true if the given { @link } is null .
<p > the files in the file . < / p >
<p > the files in the file . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
returns the number of bytes in the request .
############### serialization ###################
/ * ( non - javadoc )
skips the next n bytes of the given input stream .
{
given a path segment pattern and returns the path segment .
returns the class of the specified method .
returns true if the given class is a subclass of the given class .
returns true if the specified class implements the interface interface .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
{
{
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
{
{
{
{
{
sets the { @link metricregistry } for the { @link metricregistry } .
get the { @link chaiprovider } for this configuration .
{
{
************************************************************************
{
returns the value of the mapping for the key .
marshall the given parameter object .
{
{
marshall the given parameter object .
<p > the volumes to describe . < / p >
<p > the mount points to a mount point . < / p >
<p > the mount points to mount . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > the list of objects . < / p >
<p > the list of properties that were deleted . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if


get the date as a date .
returns the set of names of all the names of the given names .
wait for the to be used for the current thread .
adds a new solution to the setarchive .
add a new list of islands to the .
************************************************************************
{
returns the values of the specified member .
returns the number of bytes that are read in the given count .
************************************************************************
generates a benchmark that is functors used for the benchmark .
inserts the specified item into the cache .
returns true if the given { @code count } is equal to the given number of bytes .
add a { @link } to the given { @link uri } .
add the specified { @code regex } to the { @link } .
returns true if the specified tag is in the list of the specified tag .
<p > the thing types . < / p >
<p > the list of thing types . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
inserts the specified entries in the cache .
/ *
counts the number of items in the specified range of items .
deletes the specified item from the cache .
creates a copy of this {
returns the path to the request .
check if the current thread is a thread .
marshall the given parameter object .
sends a request to the request .
returns a new { @link } for the specified { @link virtualhost } .
marshall the given parameter object .
marshall the given parameter object .

************************************************************************
marshall the given parameter object .







<p > specifies the parameters to specify parameters . < / p >
<p > the names of the filters . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
marshall the given parameter object .


reads the rows from the given { @link } .
bulk .
imports the specified data into a { @link dataset } .
adds a table to the specified table .
imports a single - valued data node .
<p > the list of event selectors . < / p >
<p > the list of event selectors . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
marshall the given parameter object .
sets the timer for the given timer .
get the from the .
parses the xml url from the xml file .
sets the value of the property .
builds the instance .
{
{
<p > a list of all the documents in the list of uploaded objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setwarnings ( java . util . collection ) } or { @link #withwarnings ( java . util
run the task .
run the task .
run the task .
waits for a task to be run .
run the task on the specified task .
run the task for the given task .
acquires the lock from the remote peer .
marshall the given parameter object .
marshall the given parameter object .
<p > the list of objects . < / p >
creates a new { @link } with the given { @link } .
<p > the list of parameters for the specified pipeline . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }

<p > information about the device pool . < / p >
<p > the devices of the device . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > information about the devices . < / p >
<p > the devices of the device . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
factory method for creating a new { @link } .
creates a new { @code requestedattribute } object from the specified { @code name } .
creates a custom attribute for a custom name .
get the codec for the given { @code } .
{
{
scan the files in the file .
compute the md5 hash for a file .
returns the next state of the current state .
check if state state and state state is not valid .
marshall the given parameter object .
checks if the given {
check that the state is valid .

/ *
parses a single file from a given file .

generate a hash key from the hash key .
returns a static static static method that will be invoked when the { @link () } is not { @link } .
<p > the ids of the activity ids . < / p >
<p > the ids of the activity ids . < / p >
<p > the ids of the aws account ids . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
returns a { @code } that will be used to determine the { @code } .
removes the specified attribute from the given value .
attributes to a single attribute
registers a new { @link } with the given { @link } .
returns a { @code } that is a subclass of the given type .
returns a { @code } that is a subclass of the given type .
<p > the message data for the message . < / p >
formats the given string as a string .
<p > the localized message of the user . < / p >
marshall the given parameter object .
lists branches in the list of branches in the list .
list branches by branches .
set the { @link serversocket } to the given { @link serversocket } .
sets the { @link } for the given { @link } .
builds the configuration .
marshall the given parameter object .
marshall the given parameter object .
execute the command .
destroy the and destroy the .
returns the number of times the given code is available .
converts the given byte array into a byte array .
converts the given request into a request .


/ * ( non - javadoc )
returns true if the infowindow of the window is not in the window .
fade the current screen and sets the current state of the given animation .
adds a button to the current window .
close the input stream .
marshall the given parameter object .
sets the minimum minimum value for the minimum field .
<p > the list of permission attributes . < / p >
<p > the permissions for the user . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
sets the maximum value of the gauge .
marshall the given parameter object .
sets the value of the stringvalue to the specified value .
marshall the given parameter object .
records that the current thread is currently running on the current thread .

<p > a list of the errors that are used to provision the product . < / p >
<p > a list of all the versions of the table . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #seterrors ( java . util . collection ) } or { @link #witherrors ( java . util . collection )
update a with the given name and image name .
initializes the database and initialize connection .
creates a new { @link httpclientbuilder } instance .
close the { @link } and close the { @link } .
returns the user s response .
check if the user has a user to enter a user to enter to the user .
returns true if the user has a user to enter to the given panel .
gets the for the given user .

returns true if the given user has access to the given action .
returns true if the user has a user action .
returns the first key of the first element in the list .
marshall the given parameter object .
clicks the given click to the given favorites .
parses a { @link } from a { @link document } .
returns the value associated with the specified key .
get the document for the given key .
get the value of the specified key .
get the value of the given key .
get the value of the key from the given key .
get the for the given key .
get the value of the given key .
returns the value of the specified key . if the key is not found then the default value is returned .
returns the value of the specified key .
get the value of the given key .
returns the value of the specified key . if the value is not a date picker is not a date picker is not a valid date object .
get the value of the key property .
publish a { @link } to a { @link } .
get the value of the given key .
get the binary binary binary binary binary binary .

serializes the json representation of this {
marshall the given parameter object .
returns the { @code throwable } from the { @code throwable } . if the throwable is a { @code throwable } it will be passed through unmodified ; otherwise it will be wrapped in a { @code } . if the throwable is a { @code throwable } it will be passed through unmodified ; otherwise it will be wrapped in
returns a { @code } that is a { @code } .
adds the given { @code } to the given { @code } .
add a { @link } to the given { @link } .
creates a new { @code action } for the given { @code runnable } .
<p > the list of insight results . < / p >
<p > the list of flow filters . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > the map of iam roles . < / p >
split this tuple into two tuples of degree 3 .
split this tuple into two tuples of degree 3 .
skip 6 degrees from this tuple .
skip 7 degrees from this tuple .
skip 9 degrees from this tuple .
skip 9 degrees from this tuple .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
{
{
{
{
<p > the link to a link - relation type . < / p >
<p > the link to the link . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
set the location of the box .
loads the access token from the current user .
clear the session .
start the session .
updates the session info for this session .
resets the connection state .
copy the connection to the cluster .
get the json representation of the given connection .
expand all the tree and fills the tree of the tree .

expand the tree of the tree .
collapses all the items in the tree .
counts the number of nodes in the given node .
finds the first treenode that is located in the specified root .
finds the first node in the tree .
returns the children of the specified node .
returns the parent object of the specified node .
find the parent node of the given parent .
returns all the nodes in the tree .
returns all the children of the given node .

returns the leaf nodes of the given node .
returns the leaf nodes of the given node .
creates a root node from the given root node .
returns the paths of the given .
translates a { @link } to a { @link } .
translate a to a .
find the first child of the given node .
get the object from the given path .
get the value of the given object from the given object .
find the index of the first child of the specified node .
add a panel to the panel .
sets a property with the given name and value .
creates a new { @link } instance for a given name .
sets the value of the { @link throwable } object .
resolves the value of the given value .



marshall the given parameter object .
marshall the given parameter object .
/ * ( non - javadoc )
marshall the given parameter object .
returns a map of custom values for the given map .

create a dot symbol from the given file .
create a css style element from the given { @link string } .
parse a { @link string } from a { @link string } .
writes the given { @code path } to the given { @code file } .
check if the current thread is interrupted .
configurer the { @link attributekey } to be used for the builder .
sets the module module name .
add a module module .
sets the flag set to true if the specified is set .
execute the given and invoke the given method on the given path .
run the given callback on the given { @link } .
runs a { @link } .
this method is used to convert the given to a .
faz o de de de
formats a string to a { @link } .
creates a new instance of the { @link } .
initializes the application .
this method is invoked when the lifecycle is being unloaded .
{
returns the log record for the given log id .
copy a file to a file .
loads the { @link } for the given { @link } .

connect to the server .
disconnect the connection .
creates a new {
{
called when the user has been pressed .
combine arguments with arguments .

<p > . < / p >
returns a string that is used to repeat the given number of times .
returns the number of lines in the given string .
creates a new array with the specified width and col .

add a network to the network .
this method is invoked by the { @link } for the tasks that are subscribed to .
this method is used to persist the status of the asg to the .
marshall the given parameter object .
sets the state of the .
{
remove a task from a task .
sets the task state for the given task .
get the schedule for the schedule .
returns the for the given result set .
initialize the scheduler .
register a trigger to trigger the trigger .
disable the given trigger .
disable the given trigger .
<p > . < / p >
delete the trigger with the given trigger and trigger the
deletes the trigger trigger trigger delete trigger .
schedule a trigger to the scheduler .
check if the given { @link boxwebhook } is scheduled to be scheduled to be scheduled to be scheduled to be scheduled to be scheduled to be scheduled .
triggers a trigger to the scheduler .
execute the given trigger .
execute the given trigger .
sets the callback for this callback .
sets the value of the property .
schedules a new transfer to the next scheduled request .
schedules a new task .
<p > the names of delivery receipt receipt receipt addresses . < / p >
returns the resource status of the resource .
returns the resource adapter .
get the of the .
enable upgrade .
<p > the names of delivery receipt streams . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
creates a map of all the hosts and the .
get the { @link } for the given { @link operationcontext } .
sets the duration of the given duration .
shutdown the server .
check if the given duration is a valid host id .

marshall the given parameter object .
get the source for the given source .
read the given stream from the given inputstream .
get cell with cell row .


region >
marshall the given parameter object .
marshall the given parameter object .
<p > the ip address of the host id . < / p >
<p > the ip addresses of the host names and port numbers of the host names . < / p >
<p > the ip addresses of the host os certificate . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
checks if the path is a file or file .
checks if the class file is a class .
marshall the given parameter object .


get the class file for the given class name .
loads the classes from the given class .
get the file as a byte array .
send a list of to a list of .
marshall the given parameter object .


sets the shared attribute of the user s network .
returns the name of the .
marshall the given parameter object .
marshall the given parameter object .
tries to load a resource from the given location .

<p > the tags to send to the specified tag . < / p >
marshall the given parameter object .
encodes the given byte array into a byte array .
decodes a sequence of bytes into a { @code byte [] } .
decodes the specified element from the specified byte array .
encodes the byte array into a byte array .
encodes the given byte array into a byte array .
encodes the given number of bytes into a byte array .
write the to the output stream .
<p > a list of job jobs that are attached to the backup files . < / p >
<p > a list of the jobs that are currently active . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
marshall the given parameter object .
loads properties from a file .
returns the next duration in the { @code duration } .



wait until the upstream condition is satisfied .
{
marshall the given parameter object .
<p > information about the source details . < / p >
<p > the source of the source information to be used in the source file . < / p >
<p > a list of source information about the source . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
marshall the given parameter object .
loads the url from the classpath .
marshall the given parameter object .
marshall the given parameter object .
compute the score for the given score .
compute the score for the given .
marshall the given parameter object .
compute the score for the given .
marshall the given parameter object .
marshall the given parameter object .
<p > . < / p >
marshall the given parameter object .
sets the position of the adapter .
find views from the view hierarchy .
checks if the view is a specific position .
adapts the view to view .
sets the background view to be used by the view .
resets the state of the animation .
restore view from view .
marshall the given parameter object .
returns the exception message .
marshall the given parameter object .
returns the {
calculates the sha1 hash of the given input and returns the hex encoded value .

returns the number of concurrent operations in the given { @code long } value .
returns the for the given .
marshall the given parameter object .
open a new demuxer way .
open a connection to the given url .
open a new demuxer open demuxer and open .
open a new connection .
open a new connection .

adds a converter to the given { @link typeconverter } .
select a model for the given { @link } .
save the batch of all models to the given { @link dataset } .
delete the given object by using the given model .


{
/ * ( non - javadoc )
creates a new { @link } with the given { @link } .
/ * package
{
marshall the given parameter object .
marshall the given parameter object .
traverses the fields of the fields .
assign the field to the field .
this method handles the case of a field .
stores the value of the field .
traverse the collection of objects and their values .
{
{

reads the object from the given object and returns the object object .

get the raw type of the type .
returns the type name for the given name .
returns the type name for the given type .


print the given number of strokes to the given writer .

{
write the given { @link } to the given { @link writer } .


writes the object to the specified object .
{
transfers the contents of the given source to the given { @code outputstream } .
transfers the contents of the given { @code byte } to the given { @code buffer } .

write json object to json .
returns true if the given map contains all the keys in the map .
write a collection element to the json object .
writes a json string to the output stream .

write the object to the specified object .
write the object to the given writer .
marshall the given parameter object .
configures the vm to configure the configuration .
returns a new instance .
<p > a list of container definitions . < / p >
<p > a list of container definitions . < / p >
<p > the containers . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override the
<p > the attributes of the convertible reserved instance of the attribute . < / p >
<p > the attributes that are associated with the specified convertible reserved instance . < / p >
<p > a list of attributes of the attributes . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
<p > the constraints that the product of the target container . < / p >
<p > the constraints for the specified product . < / p >
<p > the list of ip addresses associated with the specified aws account . < / p >
<p > the list of resource types . < / p >
<p > the launch configurations . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
<p > the list of objects . < / p >
<p > the list of instance types . < / p >
<p > the list of instance types that are used to enable . < / p >
<p > the launch capabilities for the specified instance . < / p >
get the person .
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
get the list of all the addresses in the list .
marshall the given parameter object .
skips the next key from the next key .
deletes the key from the bucket .
marshall the given parameter object .

{
wraps the given { @link inputstream } to a { @link } .
{
<p > the list of entities that are associated with the specified entity . < / p >
<p > the list of entities . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
this method initializes
initializes the menu .
create the menu .
creates a link to the user .
marshall the given parameter object .
creates a new .
marshall the given parameter object .
check if the given policy is a valid configuration .
main method to run the main command line tool .
check if the threshold is valid .
initialize the and initialize the .
create a new { @link } instance .

wait until the is done .
check if the given rack is a block of the specified .
delete all blocks and blocks in the list .
parses the command line arguments and prints the result .
run the .
close the {
{

get the region for the given region .
get the for the .
get the level of the .
get the type of the .
marshall the given parameter object .
prepare the specified file .
get the list of jobs in the job .
get the number of times the given is the number of times the given number of times .
check that the given command is a valid sql command .
runs the command .
returns the number of times the specified exponent is equal to the specified number of bits .

<p > the actions for the actions . < / p >
<p > the actions to send to the target . < / p >
sets the string to the given string .
sets the length of the given byte array .
skips the specified data from the input stream .
compares this object to a byte array .

read a string from the input stream .
write the string representation of the string to the output stream .
returns the number of characters in the string .
start the server .
put the object in the map .
checks if the given { @link } is a valid { @link } .
starts the .
unlocks the specified .
wait until the device is running .
check if the given {


marshall the given parameter object .
stop the .
extract the port from the device .
send a command to the server .
start the command line .
returns the .
returns the wait wait time for the timer .
returns the options for the options .
returns the {
marshall the given parameter object .
check if the location of the location is a .
returns a new object .
repackage to the given files in the given directory .
collect all files in the file .
add a folder to the list of resources .
copy the contents of the input stream to the given outputstream .

returns the for the given .
marshall the given parameter object .
returns the jar file path for the file .
returns the jar file .
get the directory path for the given directory .
returns the absolute path for the given absolute path .
get the path of the given application .
returns the jar file that is located in the jar .
get the platform platform .

writes the package to the directory .
check if the given file is a directory .

adds the codec and adds it to the .
returns the blocks of the given blocks in the blocks of the given blocks .
returns the blocks of the blocks that is the blocks of the blocks that are in the blocks of the blocks of the blocks that is the blocks of the blocks .
check if the input is contiguous in the parity file .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
adds a new to the given address .
{
returns the last item in the list .
sets the edit text for the content of the dialog .
sets the text of the current user s title .
/ * ( non - javadoc )
{
renders the text .
sets the edit mode .
updates the edit text text text .
sets the text that is used to visualize the text .
sets the suggestions of the edit text window .
marshall the given parameter object .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
marshall the given parameter object .
<p > information about the notifications . < / p >
<p > information about the notifications . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
/ * ( non - javadoc )
************************************************************************
/ * ( non - javadoc )

marshall the given parameter object .
returns true if the service has a service name .
reply through the http response and the http method .
register a service to the service .
register a service to the service .
register a new { @link } with the given { @link } .
register a new { @link } with the specified { @link } .
registers a new { @link virtualhost } for the given { @code servicename } .
register a { @link boxwebhook } with the given { @link uri } .
remove a service from the service .
registers a new script .
registers a new check that is used to register a new user .
registers a new { @link } with the given name and ttl .
registers a new { @link } with the given id .
check if the given host is valid .
get the buffer buffer .
check if the given service is a valid pid .
returns the agent information for the given url .
returns the health of the given { @code temperature } .
get the members of the given member .
leave a node by joining the given path to the namenode .
check if the given url is a valid url .
check the presence of the given service name and the given id .
check the user id of the given repository .
logs a warning if it is not already in the database .
verifies that the user has been installed .
check the validity of the given member id .
marshall the given parameter object .
marshall the given parameter object .
{
register a new { @link } with the given name .
{
{
{
{
marshall the given parameter object .
sets the horizontal alignment for the given alignment .
sets the alignment of the paragraph .
sanitizes the name of the .
check that the { @link } is not valid .
check if the given is valid .
{
reads a single field from the input stream .
checks if the given is a valid .
set the mode .
get the job name of the job .
schedule a task to be run on the given task .
add a jar file to the jar directory .
append the given path to the system .
deletes the specified directory and all its subdirectories .
{
sets the parent branches to be deleted .
handle the request .
marshall the given parameter object .
/ * ==============================================================
/ * ( non - javadoc )
flushes all the listeners .
{
extract the request from the request .
extracts the headers from the request .
marshall the given parameter object .
marshall the given parameter object .
set the server s permissions for this server .
this is called when the server is unloaded .
disconnect the server .
{
creates a new { @link } for the given { @code serializer } .
checks if the image is valid .
/ * ------------------------------------------------------------
creates a new { @link } for the given { @code } .
creates a new { @link } for the given { @code } .
marshall the given parameter object .
checks if the given string is a valid string .
checks if the given { @code char } represents a character of the given { @code char } .

<p > a map of attributes to the user . < / p >
marshall the given parameter object .
get the for the given cluster .
check if the given file is a space .
get the list of the { @link } for the given { @code spaceid } .
{
{
compare properties in the given properties file .

cleans up the properties from the map .




{
convert the given thrift streamable field to the given tuple .
convert a protobuf thrift field to a protobuf object .
converts a type to a type .

<p > the list of db clusters that are permitted to access the aws account . < / p >
<p > information about the network security . < / p >
<p > the list of ip addresses associated with the aurora db cluster . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
returns a copy of the given { @code } .
returns the code for the given method .
marshall the given parameter object .
returns true if the given { @code } is a { @link } .
marshall the given parameter object .
skips the next bytes in the stream .
check that the file is not in the destination .
get the jobconf for the job and output files .
copy the configuration from the given { @code } to the { @code } .

get the files from the file .

returns the absolute path of the given resourcepath .
compute the number of rows in the datatree
deletes the given file and adds it to the given directory .
get the number of jobs in the job .
create a new { @link inputformat } instance for the given { @link } .
creates a new { @link } from the given { @link } .
this method is called when the configuration is not set .
creates a new { @link } instance for the given { @link } .
checks if the file is corrupted .
deletes the given file from the given { @code path } .
<p > the list of key - value pairs for the specified key . < / p >
check that the file is a file .
<p > the list of servers . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
check if the given path is a path .
convert a block of protein to a block of blocksize blocks .
convert the given block to a block .
creates a new { @link serversocket } that will be used to connect to the server .
creates a new instance of a { @link typedefinitionregistry } .
parse the given json object into a list of strings .
marshall the given parameter object .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
calculates the best - scoring { @link } that is used to calculate the best scoring .
computes the weight of the weight of the two sets .
computes the weight of the evolution using the given factor and the given weight .
computes the weight of the evolution each island and the given weight .
--------------------------------------------------------------------------------------------
compute the convex hull of the given { @code } .
{
marshall the given parameter object .
execute the mojo and returns the result .
this method initializes the .
add a list of dependencies to the given list of dependencies .
add a list of dependencies to the list of dependencies .
returns a set of dependencies for the given artifact .
marshall the given parameter object .
{
get the for the given job .
adds a new { @link } to the given { @link } .
sets the jobconf of the job .
configure the configuration .
get the output stream for the given output stream .
returns a { @link dataset } that will be used to create a dataset that is used to create a dataset that is used to transform the input stream into a single output stream .
close the stream .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
<p > the rows of the query . < / p >
<p > the rows of the rows . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
get attributes from a <code > / code > .
get the attribute value for the given attribute name .
/ * ************************************************************************* - process job job

compute the sum of the cumulative probability of the given number of samples .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
returns true if the given date picker is active .
updates the pie style for the given .
scroll the popup .
scroll the popup menu .
returns the current .
get the context for the component .
get the for the given .
returns the button state for the given user . <p >
paints the given paint .
paints the given tab panel .
<p > list of pipelines in the pipeline . < / p >
paints the given tab .
/ *
lays out the given label and labels .
paints the given label .
paints the given wpanel s border .
if the layout is not currently active the layoutmanager is cleared .
updates the spinner at the given index .
checks if the given browser is pressed
returns the horizontal component of the bottom sheet .
close the tab .
<p > a list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
marshall the given parameter object .
/ * ------------------------------------------------------------
get the compression codec for the given compression codec .
returns true if the given {
paint the background paint .
paint the paint .
paint the progress bar .
returns the shape of the image .
checks if the given component is a child of the given component .
{
marshall the given parameter object .
marshall the given parameter object .
{
remove a datanode from the list .
returns the collection of nodes that match the given number of nodes .
check if the given node is a blocksize node .
initialize the configuration file .
returns the blocks of the given block .
/ * ( non - javadoc )
find the sub directory of the given file .
{
records the given record .
compute the statistics for the stats .
add a new rotation to the end of the underlying { @link } .
add a new quaternion to the specified { @link } .
/ * ( non - javadoc )
{
returns a { @code vector } by the given x and y maxima by the given <code > / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
invert this matrix to be the specified { @link matrix4d } .
divides this matrix to be a simple scale matrix .
/ * ( non - javadoc )
calculates the dot product of this tensor .
rotates a vector by the given vector .
rotates the given vector by the given vector .
/ * ( non - javadoc )
{
convert a complex complex number to a complex type .
convert a complex number into a x y and z .
factory method for wrapping a { @link } .
convert a { @link } to a { @link } .
convert radians from radians to the specified angle between the origin and y axis .
converts a { @link matrix4d } into a rotation of the given complex type .
convert a { @link } to a { @link } .
converts a { @link matrix4d } to a { @link } .
convert a { @link } to a { @link } .
convert a { @link matrix4d } to a { @link } .
creates a new matrix from the given { @link matrix } .
create a random colour .
creates a kernel based on the specified direction .
creates a kernel based on the specified vector .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
<p > the list of inventory filters . < / p >
<p > the list of inventory filters . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setrules ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > the list of attributes that are associated with the specified network . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
/ * ( non - javadoc )
checks if the given component is a child of the given component .
marshall the given parameter object .
<p > the list of values for the specified aws account . < / p >
<p > the list of values . < / p >
<p > a list of strings for the specified tagoption . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
<p > the ids of the user ids . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
reads the header field .
returns the next record id for the given hash .
returns the next record for the next record .

returns the { @link } for the given { @code } .
get the files for the given file name .
returns the list of failed tasks that are assigned to the job .
find the best symbol for the given symbol .
returns the value of the given { @code value } as a { @code value } .


load the model from the model .
/ * ( non - javadoc )
{
marshall the given parameter object .
checks if the current state of the current state is not allowed .

returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
{
{
paint the foreground paint .
paint the background color for the current state .
paint the background pressed state .
paint the code for the given minecraft shadow .
calculate the shape of the interior of the given shape .
draws the specified rectangle .
/ * ( non - javadoc )
check if the file name is valid .
get the buffer size .
get the size of the current thread .

/ *
marshall the given parameter object .
<p > the list of day values for sunday . < / p >
<p > the list of day values for sunday . < / p >
<p > the list of the day - of - month . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
adds a new { @code } to the given { @code text } .
adds a new { @code } to the given { @code charset } .
marshall the given parameter object .

<p > the filter filters . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setfilters ( java . util . collection ) } or { @link #withfilters ( java . util . collection ) } if you want to override
marshall the given parameter object .
read a single line from the given line .
reads the lines from the given line .
reads the next line from the given line .
reads the next line from the given line .
get the state of the given state .
check if the job is completed .
write the pict data to the output stream .
returns the number of steps for the given job .
returns the number of characters per line .
returns the title of the given title or null if the title is not null .

create a new for the given file .
converts a { @code zoneddatetime } to a date - time representation .

marshall the given parameter object .
{
marshall the given parameter object .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
writes the queue to the given { @link bytebuf } .
returns true if the given { @code sequencenumber } is not set .
check if the source resource is a valid destination .
checks if the source is a valid mail .
copies the resource to the given file .
checks if the given file is a file or file .
check if the file is a file .
/ * ( non - javadoc )
copy the file to the given file .
creates a new { @link } from a { @link } .
creates a new { @link } from a given { @link } .
creates a new { @link outputstream } for the given { @link outputstream } .
get the location of the parent location .
checks if the location of the directory exists .

<p > specifies the integration to the attributes of the integration . < / p >
marshall the given parameter object .
<p > the list of expressions that are associated with the specified expressions . < / p >
<p > the list of expressions that are used to modify the specified expressions . < / p >
<p > a list of the expressions that you want to include the status of the specified expressions . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link
marshall the given parameter object .
marshall the given parameter object .
start the timer .
<p > creates a new inventory configuration . < / p >
<p > creates a new amazon s3 bucket . the client is used to create a new <code > batchprediction< / code > and the <code > / code > operation . < / p >
<p > deletes a specified hosted zone . < / p >
<p > deletes the specified key . < / p >
{
{
{
<p > returns information about the specified aws account . < / p >
<p > returns information about the specified hsm . < / p >
<p > returns information about a specific application . < / p >
<p > returns the specified configuration for the specified aws account . < / p >
<p > returns information about the specified ec2 instance . < / p >
<p > lists the authorizers for the specified aws account . < / p >
<p > returns the list of routes for the specified route . < / p >
<p > lists the authorizers for the specified vpc . the list of the returned objects are paginated and the last processed time . < / p >
<p > modifies the specified aws account . < / p >
<p > modifies the specified hsm . < / p >
<p > modifies the specified aws account . < / p >
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
<p > the tags to be deleted . < / p >
returns the expected value of the specified element in the array .
creates a new element { @code char } from the given { @code condition } .
{
{
verifies that the <em > actual< / em > { @code string } is not equal to the given { @code value } .
verifies that the actual file is not a file .
asserts that the given { @code file } is not a directory .
validates that the given file is a valid json file .
{
{
<p > the assessment list configured in the <code > / code > . < / p >
<p > the arns of the assessment run - based rules . < / p >
<p > the assessment list configured in the <code > / code > parameter . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java .
<p > the list of all the objects . < / p >
marshall the given parameter object .
converts a {
create a { @link keydeserializer } for the given json value .
marshall the given parameter object .
ends the current element and detaches the current state .
marshall the given parameter object .
/ * ( non - javadoc )
start the .

start the .
{
create a new for the given index .
initializes this .
get the server - side { @link } .

get the list of for the specified .
get the list of all features that match the specified criteria .
get the latitude of a bounding box .
get the bounding box for a particular latitude
get all features that match the criteria specified in the list

get the list of for the specified
get the list of features that match the given criteria
build the request url


get the bounding box for the bounding box .
destroy the listeners .
returns the error message for the given id .
registers the service registry for the service registry .
receive notification of ignorable whitespace .
{
{
check if the given { @code path } is equal to the given one .
marshall the given parameter object .
marshall the given parameter object .
get attribute value .
get the template for the given template .
marshall the given parameter object .
check if the given key is a valid .
add a new value to the list .
get the value of the key from the map .
marshall the given parameter object .
generate the for the given path .
clear the file and clear the files in the file .
marshall the given parameter object .
update the current thread .
run the .
read the data from the stream .
append a block of blocks to the .
write the to the output stream .
read metadata from the metadata file .
reads the block information from the stream .
read the data from the stream .
copy the data from the block to the given block .
replace the block with the given block with the new information .
send a response to the client .
read the data from the file .
marshall the given parameter object .
get the stream of the stream .
returns the length of the length of the array .
removes the element at the specified index .
{
print the details of the given { @link printstream } .
compute the capacity of the .

returns the condition for the given condition .
compare the value of the given condition .
returns the condition for the given condition .
returns the condition for the given condition .
returns the condition for the given condition .
returns the value of the property .
returns the condition for the given condition .
returns the value of the { @link condition } .
returns the condition for the given condition .

simplified method form for invoking the operation with an asynchandler .
simplified method form for invoking the operation with an asynchandler .
simplified method form for invoking the operation with an asynchandler .
marshall the given parameter object .
<p > the list of devendpoint . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
<p > the list of devendpoint names . < / p >
<p > the list of devendpoint ids . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > a map of attributes to be used for the specified encryption . < / p >
<p > the attributes of the user . < / p >
marshall the given parameter object .
calculate the distance between two points .
initializes the ui thread .
initializes the .
the main method to create a new .
{
export the device .
creates the system .
initializes the default { @link } .
save the current working directory .
sets the background of the .
update the mode with the given parameters .
main entry point for the demo .
get the resource stream for the given resource .
check if the resource exists in the given url .

adds a converter to the opencms vfs . <p >
adds a mime type to the mime type . <p >
adds a new resource type to the given type . <p >
<p > the details of the maintenance window . < / p >
<p > the maintenance window of the maintenance window . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
adds a resource type to the resource type . <p >
find the field with the given name .
write the data to the output stream .
reads the next tag .
read a type info from a field type .

returns the type name for the given resource . <p >
<p > the parameters that are associated with the specified resource . < / p >
<p > the list of parameters . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setparameters ( java . util . collection ) } or { @link #withparameters ( java . util . collection ) } if you want to
returns the resource loader for the given resource . <p >
get the mime type of the file .
<p > a list of reserved nodes . < / p >
<p > the node ids that are permitted to grant nodes . < / p >
<p > a list of reserved nodes . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
returns the mime type of the file . <p >
creates a new .
find the space space at the specified location .
find the collision of the specified path in the specified location .
returns true if the specified point is inside the specified rectangle .
optimize the path and find the .
marshall the given parameter object .
returns the resource type resource type . <p >
returns the template for the given resource . <p >
refresh the data store .
copies the files to the given file .
sets the { @link } for the given { @link } .
{
upgrade the { @code } .
upgrade the {
write the journal file to the journal .
completes the journal .
/ * ( non - javadoc )
marshall the given parameter object .
open the journal .
open the file .
upgrade the journal .
{
creates a new { @link } instance for the given { @link } .
check if the given totp is valid .
throws an { @link illegalstateexception } if the argument is not a { @link } .
logs the log of the log .
seals the segment and returns the log .
delete the file .
logs a log file with the given log id .
write the journal segment and the journal segment and the journal segment .
log a file with a name and a new file .
marshall the given parameter object .
schedule a .
saves the checkpoint to the given file .
returns the metadata for the given file .
write the journal data to the file .

find the first byte of the specified byte array .
find the first occurrence of the specified byte array .
split a string into a byte array .
read a line from the given reader .
<p > describes the specified provisioning job . < / p >
<p > cancels the specified amazon ecs resource . the <code > / code > operation is provided by the <code > / code > operation . < / p >
<p > creates a deployment job . for more information see <a href = http : // docs . aws . amazon . com / opsworks / latest / userguide / workingapps - deploying . html > / a > in the deployment controller . for more information see <a href = http : // docs . aws . amazon . com
<p > creates a new network rule . < / p >
<p > creates a new application . < / p >
<p > creates a new version of the specified version . the aws account is authorized to launch the version of the application . < / p >
<p > creates a new application . < / p >
<p > creates a new application version . < / p >
<p > creates a new amazon chime account . < / p >
<p > deletes the specified robot rules . < / p >
<p > deletes the specified application . < / p >
<p > deletes the specified application . < / p >
<p > deletes the specified amazon chime account . < / p >
<p > lists the deployment deployment configurations for the specified job . the <code > / code > action is used to retrieve the deployment summaries for the deployment . < / p >
<p > describes the specified fleet . < / p >
<p > describes the specified rules . < / p >
<p > describes the specified aws account . < / p >
<p > describes the application information in the simulation . < / p >
<p > describes the specified provisioning simulation job . < / p >
<p > lists the deployment deployments for the deployment . < / p >
<p > lists the rules for the specified aws account . < / p >
<p > lists the robots . < / p >
<p > lists the configuration for the specified aws account . < / p >
<p > lists the parameters for the specified amazon chime account . < / p >
<p > registers a new rule for the specified aws account . < / p >
<p > associates a specified job with a specified job id . the <code > / code > action disassociates the specified job id from the specified amazon s3 bucket . < / p >
<p > deletes the specified deployment . the action is updated to the deployment marketplace . < / p >
<p > updates the specified iam user s iam roles . < / p >
<p > updates the specified amazon chime account . < / p >
initialize the input stream .
seeks to the given offset and offset .
<p > the findings products . < / p >
<p > the findings products . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
reads the contents of the input stream into a byte array .
read the next number of bytes from the input stream .
{
returns the number of entries in the map .
get the number of characters in the input stream .
this method is used to get the from the input stream .
returns the file s contents as a string .
returns the utf - 8 encoded string as utf - 8 encoded as utf - 8 .
get the bytes from the byte array .
marshall the given parameter object .

log a message with the specified message .
marshall the given parameter object .
populates a { @link } from the given { @link } .
sets the .
sets the volume for the volume .
initialize the .
sets the repeat to the specified sound .

check if the given location is a rectangle .
returns the first free space in the image .
play the specified audio channel .
sets the sound .
get the file name of the file .
get a new from the given url .
get the file name of the file .
get the inputstream for the given inputstream .
get the file name of the file .
get the current for the current user .
get the current resource .
get a helm2 from the given input stream .
sets the .
sets the stream to be used for the given stream .
this method is called when the event is received .

marshall the given parameter object .
save the to the given file .
<p > the validation errors . < / p >
<p > the validation errors . < / p >
<p > the validation errors . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
check if the given point is a float .
sets the bounds of this rectangle to be the same as the other rectangle .
sets the x y position to the specified location .
applies the horizontal transformation to the viewport .
sets the width of the image .
sets the height of the light .
checks if the shape intersects the shape .
check if the given float is a float .
marshall the given parameter object .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
marshall the given parameter object .
dump the given file into a .
marshall the given parameter object .
initialize the .
main method .
get the value of the given class .
get the status of the task .
returns the for the given connection .
returns a new instance if the request is not valid .
converts the given { @code } to a { @code } .

<p > tags that are tagged with the specified tags . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
<p > the list of objects . < / p >
<p > a list of the metrics that are used to retrieve the results . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util
prints the usage for the usage for the usage .
upgrade the given node to the given node .
add a new to the list of metrics .
sets the value of the stringvalue to the value of the stringvalue .
sets the position of the cursor .
sets the length of the segmentchunk .

undo the undo actions for the given text and the text at the given position .
generates a job id for the given job .
marshall the given parameter object .
<p > the list of attributes . < / p >
<p > the paging of the facets . < / p >
<p > returns the statistics of the specified receipt statistics . < / p >
<p > the stats for each stats . < / p >
marshall the given parameter object .

returns the list of for the given command .
binds the specified command to the specified command .
clear all the command .
removes the given command from the given command .
fire a notification that the given command has been pressed .
fire a shutdown hook for all listeners that the server has been received .
marshall the given parameter object .
adds a list to the list .

sets the position of the given position .
sets the offset position .
sets the minimum number of strokes to the current position .
<p > the list of <a > / a > objects . < / p >
<p > the list of <a > / a > objects . < / p >
<p > the list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > information about the upgrade . < / p >
<p > the valid target hosts . < / p >
{
{ @inheritdoc }
builds a new { @link } instance .
check the status of the .
<p > the list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > the list of log types that are available for the specified aws account . < / p >
<p > the list of log types that are exported to the specified log . < / p >
<p > the log types for the specified db instance . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
<p > the list of tmpfs supported by the engine . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
<p > the names of the platforms . < / p >
<p > the names of the trusted advisor - sets of the docker configuration . < / p >
<p > a list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
marshall the given parameter object .
marshall the given parameter object .
write the json representation of this {
create a new { @link } .
create a new { @link } for the given { @link } .
create a new instance
create a new { @link } instance for the given { @link } .
check if the given { @link } is in the given { @link } .
get the configuration for the given configuration .
converts the given string to a string .
creates a new .
process the fields of the given field .
process the given field .
joins the given { @code string } into a { @code string } .
maps a collection into a { @link list } .
concatenates all elements of the given array into a list .
filters the list of items in the list .
convert a dom node into a dom node .
check that the given value is not null .
<p > . < / p >

handles headers headers .
marshall the given parameter object .

marshall the given parameter object .
generates a tag tag with the tag name .
set the host to the specified port .

process a response from the given request .
process a transaction .

this method is called by the method to add a request to the request .
sends a request to the request .
sends a message to the request .
/ * ( non - javadoc )
sends a request to the request .
sends a message to the request .
<p > process the request to send to the request . if the request is not specified it is not sent to the request . < / p >
wait for a to receive the received message .
wait for the to be sent to the given .
sends a request to the request .
/ * ( non - javadoc )
/ * ( non - javadoc )
sends a reply to the request .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method handles a request to the response .
get the authorization header for the given username and password .

marshall the given parameter object .
send a metric to the sentry server .
/ * ( non - javadoc )
marshall the given parameter object .
returns a new { @link } with the specified number of settings .
creates a sip transport protocol .
creates a sip request .
creates a sip request .
{
process the request .
/ * ( non - javadoc )
/ * ( non - javadoc )
dump the message and returns the message .
fills the list of with the given keys and their counts .
<p > the script scripts . < / p >
<p > the script scripts . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
<p > the network network network network network network network network network network network network network network network network network network network network network network network network .
<p > the network network network network network network network network network network network network network network network network network network .
<p > the network network network network network network network network network network network network network network network network network network network network network . <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or {

run the given command .
updates the zookeeper information .
main method .
get the integer value from the given name .
get the value of the specified property as a string .
get the value of the given name as a long value .
get the value of the specified property as a boolean value
get the value of the given name .
get the default value for the given name .
returns the version info for the given package .
check if the current thread is interrupted .
creates a new { @link } with the specified name and value .
builds a new { @link } for the given host name .
<p > the list of permissions to access the specified permissions . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
marshall the given parameter object .
builds the options for the options .
process the command line options .
get the file url for the given url .
check if the files are not valid .
parses the options from the options .
prints the usage information for the given {
<p > the list of inventory filters . < / p >
<p > the list of inventory filters . < / p >
<p > the list of all the associations for the specified resource . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
<p > the destinations . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setdestinations ( java . util . collection ) } or { @link #withdestinations ( java . util . collection ) } if you want to override the
<p > the list of objects . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
marshall the given parameter object .
reads the unicode char from the input string .
adds a listener to be notified when the session is unloaded .
removes the given listener from the list of listeners .
check the type of the file .

compresses the given output stream into a { @link outputstream } .
push the data to the queue .
removes the given from the list of .
returns true if the given tag is not present in the given tag .
returns the repository tag for this repository .
sets the javascript for the user .
get the first node from the given string .
marshall the given parameter object .
<p > the database elements . < / p >
<p > the database to retrieve . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to


returns the for the given node .
marshall the given parameter object .
find the from the .
get the character array for the given char array .

returns the name of the .
returns the for the given .
declare the modifier modifier .
add a modifier modifier to the current .
deletes the given attribute .
registers a modifier modifier .
get the for the given table .
get the modifier .
get the entity corresponding to the key .
get the element corresponding to the given key .
/ * ( non - javadoc )
updates the current store and adds the current to the current control .
adds the action to the current action .
put entity with the specified entity .
put the entity into the specified entity .
increments the throughput by { @code long } { @code k } .
deletes the specified delete .
deletes the given action .
delete the specified key from the cache .
{
get the { @link } for this entity .
create a batch of entities that are persisting of the entities .
marshall the given parameter object .
start a new iterator
add a new record to the list .
add a range of the to the list of all the nodes in the list .
add a new { @link } to the list of { @link } s .
marshall the given parameter object .
<p > the resource identifiers for the resource . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
<p > the list of all the nodes in the specified parent node . < / p >
/ * ( non - javadoc )
<p > the list of tags to be included in the specified location . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util .
checks if the given cssvalue is valid .
create a new { @link filter } .
returns a filter that filters the filtered collection of the filter .
parses the class name from the given class name .
reads a value from a { @link } .
reads the next bit from the buffer .
reads a primitive value from the given { @link float } .
<p > . < / p >



无视private / protected修饰符 .
无视private / protected修饰符 .
copies the specified object to the specified object .
copies the object into the specified object .
write the position to the buffer .
marshall the given parameter object .
returns a view of the dataset that can be used to store the dataset view uri .
returns a view of the dataset that can be used to store the dataset view uri .
create a dataset with the given dataset .
{
marshall the given parameter object .
checks if the type is a type or a type .
checks if the given schema is a valid schema type .
checks if a schema is compatible with the given schema .
create a new schema with keyschema and schema name .
returns true if the schema is congruent with the given name .
returns a { @link schema } for the given schema name .
creates a schema schema with a schema .
creates a schema from the given schema and schema .
generate a new field in the schema .
merges the specified { @link schema } to the specified { @code schema } .
adds a factory to the given class .
marshall the given parameter object .
marshall the given parameter object .
returns the { @link privatekey } key for the given { @code name } .
get the class for the given class .
get the class from the annotation class .
get the class of the given class .
get the struts xml name from the configuration .
<p > the attachments for the specified product . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you
marshall the given parameter object .
compares this { @code other } into another one .

checks if the given element is a static class .
marshall the given parameter object .
compute the inverse of the ( ) with the given vector .
compute the inverse of the ( ) with the given vector .
<p > the regions that are associated with the specified region . < / p >
<p > return a new vector that is backed by the given byte buffer { @code b } < / p >
<p > return a new vector that is backed by the given byte buffer { @code b } < / p >
marshall the given parameter object .
{
{

create a generator initialized with a default component generator that the default component is bound to use .
create a generator initialized with a default component generator that produces values in the range { @code [ - 65536 . 0 65536 . 0 ] } .
create a generator initialized with a default component generator that the <code > absolute - ordering< / code > element will be created .

attaches the specified {

create a new instance
prepare the given map of the user name and password .

checks if the url is a valid url .
parses input and parse the given input type .
parse a type from input type .
splits the input string into a list of strings .
split the given string into a list of strings .
returns true if the input string is valid .
<p > return a new vector that is backed by the given byte buffer { @code b } < / p >
{
returns the name of the specified name .
marshall the given parameter object .
<p > the profiles that the user profiles are enabled . < / p >
<p > the profiles that the user is created . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
marshall the given parameter object .
checks if the user is authorized to the user .
<p > information about the credit - only instances . < / p >
<p > information about the credit - up rules . < / p >
<p > information about the credit - based ranges . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
marshall the given parameter object .
returns true if the current class is a member of the form of this class .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > the tags for the key . < / p >
/ * ( non - javadoc )
{
<p > evaluate the xpath expression by applying the given expression to the given expression . < / p >
{
gets the metadata for a given region .
returns a uri for the given uri .
loads a { @link } from the given { @code name } .
loads a { @link } from the given { @link classloader } .
loads a { @link } from the given { @link classloader } .
<p > . < / p >
loads the file from the specified file .
initializes the resource with the given name and resource name .
loads the given resource from the given loader .
marshall the given parameter object .
{

<p > information about the trace segments . < / p >
<p > the trace segments . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to override
returns the value of the specified element .
get the value of the parameter from the config .
get the value of the parameter .
returns the info object for the given file .
serialise a json object .
initialize parameters from the init parameter .



check if the network is connected to the network .
<p > a map of attributes to be updated with the request . < / p >
get the url of the url .
check if the current wifi state is not valid .
check if the current user is a fan of the current device .
check if the is a
check if the connection is valid .
check if the connection is valid .
{
{
stop the service .
get the current context .
get the configuration configuration for this configuration .
{
sets the number of the currently selected items .
marshall the given parameter object .

{
{
marshall the given parameter object .
marshall the given parameter object .
<p > a list of iam roles that are assigned to a policy . < / p >
<p > a list of iam roles that you want to access policies . < / p >
<p > a list of iam policies used by the policy . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )

handles a request .
check if the http request is not a http request .
handles a request with the given request .
{
check if the is a .

encode the given { @link } into the output output stream .
writes the given http response to the output stream .
creates a new instance .
main method to start the server .
get the message for the given id .
main run method .
{
returns the metadata for the given { @code } .
converts the { @link accesscontrollist } to a { @link } .

converts a { @link } to a { @link } .
convert a string to a string .
returns the next .

returns a decorator that is used by the given { @code decorator } .
unwraps a { @link } instance .
build the engine engine builder .
add a new { @link directorypoller } to the given { @link } .
adds a new template to the given template .
add a resolver to the resolver .
sets the property value for the given key .
sets the value of the specified property .
registers a callback for the given callback .
add a listener to the list of listeners that will be used to add a new listener to the listener .
registers a new { @link } with the given name and { @code name } .
registers a new { @link } with the given name and { @code name } .
registers a new { @link } with the given { @link } .
add a converter to the current working converter .
add a converter to the given {
{
creates a new private key from the specified private key .
creates a new private key from the specified encryption rsa private key .
creates a new instance with the specified parameters .

pushes the given { @link } to the given { @link } .
add the segment to the segment .
validates the given .
returns true if the variable is a variable name .
marshall the given parameter object .
sets the expressions .
marshall the given parameter object .
<p > the tags to be deleted . < / p >
marshall the given parameter object .
marshall the given parameter object .

returns a set of atom for the given atom atom .

creates a for the given .


returns the first for the given id .
creates a that uses the specified constraint to determine if the given { @link } is a { @link } .
main method for testing .
unifies the given expressions into a .
{
deletes the given {
returns a list of all the {
get all stubbings nodes that are disjoint .
returns the first matching .
returns a list of all variables that are referenced by the given product name .
returns the unique member for the given member .
returns the type of the given .
returns a new with the specified parameters .
trims the string as a string .
trims the first character in the string .
add a new to the server .
/ * ( non - javadoc )
sets the for the given { @link } .
/ * ( non - javadoc )
<p > the current page of elements from the current page . < / p >
<p > the current page of elements from this collection . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setitems ( java . util . collection ) } or { @link #withitems ( java . util . collection ) }
returns the { @link } for the given { @link } .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :

append the array to the given array .

converts a string array to a list of strings .
<p > the results of the simulation . < / p >
<p > the metrics for each time . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want



<p > a list of objects . < / p >
returns the array of all the parameters .
returns the address of the current network .
<p > the list of managed policies . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
{
{
creates a new component component .
{
returns a { @code } that is represented by a { @link } .
returns the substituted value of the given .
returns a optional > value .
returns the term of the term of the given .
returns the substituted term from the given .
copies all the and .

<p > specifies the route settings for the route . < / p >
<p > the stage variables for the canary analysis . < / p >
get the component for the given component .
returns the { @link component } for the given component .

marshall the given parameter object .
marshall the given parameter object .
check if a response is a valid subdocument response .
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start
$antlr start float
$antlr start
src / main / resources / org / drools / compiler / lang / drl5expressions . g : : 1 : : ( | ) ;
$antlr start
$antlr start
marshall the given parameter object .
$antlr start
$antlr start
$antlr start

inserts a list of strings into a list of strings .
prints the subject to the subject .
{
{
{

marshall the given parameter object .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last :
gen - last :
gen - last :
gen - last :
notifies all listeners that the given event is fired .
returns the message corresponding to the specified locale .
returns the message with the specified key .
returns the message associated with the key .
execute the query and returns the result as a .


formats a date and time of the given date .
returns a {
{

converts the given { @link } to a { @link } .
/ * ( non - javadoc )
execute the action .
validate the field name and the value of the form .
applies the radio button .
validate the parameters .
checks if the given list is a valid .

shows the dialog menu .
make the request to the twilio api to perform the read .
/ * ( non - javadoc )
attributes to set the attributes of the element
add a new member to the list .
<p > adds a list of attributes to the specified attributes . < / p > <p > the <code > / code > operation supports tag - based attributes . for more information see <a href = http : // docs . aws . amazon . com / amazondynamodb / latest / developerguide / concepts . html > / a
<p > creates a scalable target or target group . < / p >
<p > creates a new template template . < / p >
<p > preview the specified region . < / p > <p > you can create a new <code > / code > to the <code > $latest< / code > account . < / p >
<p > creates a new group . < / p >
<p > deletes the specified run assessment run . < / p >
<p > deletes a scalable target . < / p >
<p > deletes the specified amazon chime account . < / p >
<p > describes the assessment product information about the specified aws account . < / p >
<p > describes the assessment targets . < / p >
<p > describes the assessment templates . < / p >
<p > retrieves the specified iam user account . < / p > <p > for more information about policies see <a href = https : // docs . aws . amazon . com / iam / latest / userguide / id_tags . html > access - access / a > iam roles in the iam user iam role . for more information
<p > describes the specified tagoption . < / p >
<p > describes the findings that you have paid the bounding box . < / p > <p > for more information see <a href = https : // docs . aws . amazon . com / iam / latest / userguide / . html > billing : < / a > in the <i > amazon cloudsearch developer guide< / i
<p > describes the specified resource group . < / p >
<p > describes the specified tagoption . < / p >
<p > returns the report report for the specified report . < / p >
<p > returns the details of the specified build or a <code > / code > operation . < / p >
<p > retrieves metadata for a specified account . < / p >
<p > returns the list of run run for the specified service . the action is the first time . < / p >
<p > lists the assessment information about the specified portfolio . < / p >
<p > lists the targets . < / p >
<p > lists the assessment templates that are associated with the specified domain . < / p >
<p > returns information about the specified sns topic . < / p >
<p > lists the names of all the exclusions in the specified folder . < / p >
<p > lists all available rules that are available to the specified project . < / p >
<p > returns a list of the specified images . < / p >
<p > updates the principal authorizer . < / p >
<p > removes a specified list of attributes from the specified portfolio . < / p >
<p > sets the resource tags for the specified tagoption . < / p > <p > you can use the <code > / code > to set the value of the <code > / code > parameter . < / p >
<p > starts a new run for the specified service . the <code > / code > action is used to determine the run - process of the run . < / p >
<p > stops a specified service . < / p >
<p > sends a request to a specified event stream . you can t receive the notifications of a subscription to receive notifications . you can t receive the notifications of a subscription to receive notifications . you can use the <code > / code > to the <code > getutterancesview< / code > interface . < / p > <p >
<p > sends a notification to the specified channel from the specified managed event . < / p >
<p > updates the specified target target target target . for more information see <a href = http : // docs . aws . amazon . com / cloudsearch / latest / developerguide / expressions . html > / a > in the <i > amazon cloudsearch / i > . for more information see <a href = http : // docs
<p > an array of <code > / code > objects . < / p >
<p > the list of inventory filters . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
create a new with the given parameters .
replace the string with the given replacement .
get all the files within the specified directory .
scan the given scan .
generate a for the given number of data .
get the number of times the given number of times .
make the request to the twilio api to perform the read .
make the request to the twilio api to perform the read .
<p > the match times for the specified number of times . < / p >
<p > the match times for the specified number of times . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
marshall the given parameter object .
sets the .
{
{

write a json field to the json stream .

write the json representation of the flow to the json file .
marshall the given parameter object .
create a to execute create .
create a to execute update .
<p > the tags for the tag . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #settags ( java . util . collection ) } or { @link #withtags ( java . util . collection ) } if you want
make the request to the twilio api to perform the read .
attributes to set the attributes of the .
marshall the given parameter object .
get the for the given .
get the cluster name from the cluster .
add the requested post parameters to the request .
returns an iterator over the elements of the iterator .
marshall the given parameter object .
create a to execute update .
marshall the given parameter object .
add the requested post parameters to the request .


sends a request to the given id .
{

attributes to set the attributes of the element
sets the content of the box chooser to be used to alert the content of the content panel .
/ * ( non - javadoc )

create a to execute fetch .
create a to execute delete .
create a to execute update .

this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
invoke the method with the given http_method .
marshall the given parameter object .
marshall the given parameter object .
converts a json object into a json object .
marshall the given parameter object .
installs the given { @link } to the default { @link } .
{
make the request to the twilio api to perform the read .
retrieve the next page from the twilio api .
retrieve the first page from the twilio api .
add the requested post parameters to the request .
make the request to the twilio api to perform the read .
<p > information about the vpn client . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
add the requested post parameters to the request .
{
sends a packet to the player .
add the requested post parameters to the request .
marshall the given parameter object .
creates a proxy for the given proxy class .
creates a proxy for the given class .
{
registers a new { @link } with the given { @link } .
callback for the { @link } callback .
calls {
callback method for invoking the { @link } callback .
registers a new block with the given { @link } .
registers a new { @link } with the given { @link } .
registers a new .

creates a sound event .
append a path to the path .
add a parameter to the query parameter value .
add a parameter to the query parameters .
add a parameter to the query parameter values .
replaces the value of the parameter with the given name and value .
resets the current state of the current thread .


adds a parameter to the url .
/ * ( non - javadoc )
creates a path from a path .


get the path to the list of .
create a to execute create .
add the requested post parameters to the request .
create a to execute fetch .
create a to execute create .
marshall the given parameter object .
encodes the given string into a string .
decodes a url and returns the url .
checks if the uri is a valid uri .
encodes the request parameters .

splits a string into a string .
splits a string into a list of strings .
splits a string into a set of strings .

{
{
creates a new file with the given path .
create a new root folder .
creates a new { @link resource } from a { @link file } .
gets the currencies that are referenced by the specified currency .
removes the currency from the given currency . <p > this method is idempotent .
remove a currency from the locale .
returns the amount of time in seconds .
elapsed time for a time picker and .
{
{
sets the content of the document .
marshall the given parameter object .
<p > a list of job summaries . < / p >
<p > a list of job summaries . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
returns a { @code currencyunit } for rounding with rounding with rounding with rounding with rounding settings .
/ * ( non - javadoc )
marshall the given parameter object .
<p > the domains that you want to use for the domain . < / p >
<p > the domains that you want to change . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
add comment to the given { @link } .
deletes a comment .
adds a comment to the comment .
gets the comment .
gets the { @link } for the given { @link } .
get the user s user code for a user .
gets the entity by id .
get the for the given .
shows a comment from the given { @code } .
<p > a key - value map specifying request parameters and attributes . < / p >
<p > a map of key - value pairs . < / p >
<p > the devices of the device . < / p >
<p > the devices of the device . < / p >
<p > specifies the maximum number of playback parameters . < / p > <p > the maximum number of times the maximum number of times the maximum number of buckets are allowed to be the maximum of 10 times . < / p >
{
clear all rows and clear keys .
<p > the dashboards for the specified dashboard . < / p >
<p > the dashboards for the specified dashboard . < / p >
<p > a list of dashboards with the specified attack . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) }
serializes the specified calendar to the given { @link string } .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the set of clusters that are currently active .
marshall the given parameter object .
/ * ( non - javadoc )
/ * ( non - javadoc )
marshall the given parameter object .
check if the given name is a valid name .
creates a new { @link } .
register a new http request .
check if the specified uri is a valid uri .
/ *
returns {
returns the next element in the list .
close the stream .
/ * ( non - javadoc )
marshall the given parameter object .
/ * ( non - javadoc )
returns the repository manager for the given repository id .
returns the {
creates a new for the given { @link } .
creates a for the given artifact .

/ * ( non - javadoc )
/ * ( non - javadoc )
marshall the given parameter object .
<p > specifies the parameters to enable routes . < / p >
<p > the name of the request . < / p >
/ * ( non - javadoc )
marshall the given parameter object .
<p > specifies the provider id . < / p >
<p > specifies the attributes of the grant attribute . < / p >
<p > the identity provider for the identity provider . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
parse the input stream into a stream .
this method will check if the { @link } is not set .
{
{
create a new credential .
creates a user principal for a given user .
/ * ( non - javadoc )
{
encodes the given byte array into a byte array .
decodes the specified source array into a byte array .
decodes a { @link string } into a { @link byte [] } .
decodes a byte array into a byte array .
shutdown the .
marshall the given parameter object .
initialize the version .
returns the specified language version .
creates a new { @link } from a { @link file } .
creates a { @link } from a { @link } .
creates a { @link } from the given { @link reader } .
creates a new { @link } from a { @link file } .
get the credentials credential for the specified credential .
encrypts the specified byte array using the specified encryption key .
gets the signature for the request .
encrypts a byte array with the specified key .
compares two strings .
{
returns the property key property value .
returns the key for the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the specified parameter name .
returns the names of the first parameter that are defined by the given name .
<p > . < / p >
builds a { @code } from the given url .
returns the { @link } for the given scheme .
{


converts the given { @link } to a { @link uri } .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
returns a { @link iterable } that maps { @code { @code iterable } s into a { @code graph } .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
creates a new instance of the given class with the given type .

get the list of for a given type .
find the best matching type for the given type .
registers a new { @link } with the given { @link } .
{
{
scan resources for the resource .
scans the classpath and returns the set of packages that match the given path .
parses the given { @code resource } into a list of { @link resource } s .
this method will check for the given resource .
marshall the given parameter object .
returns the global variables of the global variables .

compile the given compile - time file .
aes加密
marshall the given parameter object .
{
<p > a list of export records in the export export . < / p >
<p > a list of export records for the export export . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection )
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
<p > creates a new parameter group . < / p > <p > you can create a parameter group with the parameters specified in the request parameters . < / p > <p > you can create a parameter group with the parameters specified in the request parameters . < / p > <p > you can create a parameter group with
<p > creates a subnet group . < / p >
<p > deletes the replication . < / p >
<p > deletes a parameter . < / p >
<p > deletes a subnet group . < / p >
<p > returns the default parameter values for the specified parameter group . < / p >
<p > returns information about a specified parameter group . < / p >
<p > describes the parameters associated with the specified parameter . < / p >
<p > returns a list of <a > / a > objects . < / p >
<p > returns a replication of a replication replication . < / p >
<p > reboots a specified node . < / p >
<p > updates the specified parameter group . < / p > <p > you can update a parameter with a maximum of 25 parameters . < / p > <p > you can update a parameter with a maximum of 25 parameters . < / p > <p > you can update a parameter group . you can update the parameter values
<p > updates the specified subnet group . < / p > <p > if you are creating a subnet with a different subnet group or a subnet with a maximum of 10 capacity . < / p > <p > you can use the <code > / code > to update the subnet group . if the subnet group is null
get the for the given .
executes the given retry retry if it is not already in retry or throws an exception .
check if the given uuid is a valid id .

register a service to the service .
check if the service is a service .
parses a string value from a string .
check that the service is a valid service .
<p > newinstance< / p >
marshall the given parameter object .
export the database to the database .
export a file to a file .
exports the given documents to the given outputstream .
serialize a csv data into a byte array .
main method for testing
writes a json representation of the json representation .
logs a message with the given message .
{
rethrows error exception .

print the trace information .
adds a new object id to the list of objects that are registered with the given id .
get the { @link } for the given id .
add a new generator to the list of generators .
returns the { @link } for the given { @code id } .
write the contents of the file into a writer .
marshall the given parameter object .
get the schema for the table .
get the column value .
get the list of all columns in the table .
get the column s position in the table .
returns the primary key index for the primary key .
get the tables for the given name .
returns the names of all tables in the table .
creates a new class by its name .
extract the given from the given interfaces and returns the result .
extract the type parameters from the given type .

builds a method that is used to generate a method with the given type .
build a new object from the .
{
marshall the given parameter object .
{
<p > the parameters passed in the parameter . the parameters are the following : < / p > <ul > <li > <p > <code > / code > – the <code > mlmodel< / code > to <code > / code > parameter . < / p >
@param keydeserializer { @link keydeserializer } used to deserialize the keys . @param valuedeserializer { @link jsondeserializer } used to deserialize the keys . @param valuedeserializer { @link jsondeserializer } used to deserialize the keys . @param valuedeserializer { @link jsondeserializer } used to deserialize the keys . @param valuedeserializer { @link jsondeserializer } used to deserialize the keys . @param valuedeserializer {
<p > the ids of the request ids . < / p >
<p > the ids of the pull request ids . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
{
creates a new { @link } instance for the given namespace .
updates the namespace .
updates the id of the given correlationid .
@param keydeserializer { @link keydeserializer } used to deserialize the keys . @param valuedeserializer { @link jsondeserializer } used to deserialize the keys . @param valuedeserializer { @link jsondeserializer } used to deserialize the keys . @param valuedeserializer { @link jsondeserializer } used to deserialize the keys . @param valuedeserializer { @link jsondeserializer } used to deserialize the keys . @param valuedeserializer {
marshall the given parameter object .

returns the type of the field type .
{
atomically updates the result of the given future .
<p > newinstance< / p >
{
completes the future that completes with the given future .
returns a future that is a future that is a future that is not a .

returns a future that is a function that is a function that is a function of the function .

returns a future that is a future that is a future that is a future that is not a future .
retrieves the dashboards for the dashboard .
get dashboard dashboard
creates a new { @link } with the specified serializer .
{
get the dashboard for the user .
marshall the given parameter object .
retrieves the dashboard for the specified dashboard .
update the dashboard dashboard .
delete dashboard dashboard
<p > newinstance< / p >
creates dashboard dashboard for dashboard dashboard
returns a new list of all metrics that are contained in the given list .
{
<p > newinstance< / p >
returns all the { @link } s of the given { @link } .
get a { @link } for a given id .
{
marshall the given parameter object .
<p > the metrics for the metrics . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setdimensions ( java . util . collection ) } or { @link #withdimensions ( java . util . collection ) } if you want
verifies that the actual value is equal to the expected value .
verifies that the actual value is equal to the expected value .
verifies that the actual { @code double } value is less than the given one .
verifies that the actual xor value is greater than the given one .
verifies that the actual xor value is less than the given one .
{
/ * ( non - javadoc )
verifies that the actual { @code type } is not a { @link type } .
/ * ( non - javadoc )
verifies that the actual { @code type } is a { @code static } .
verifies that the actual { @link string } is not equal to the given { @link string } .
verifies that the actual { @code cause } is not equal to the given { @code cause } .
{
{
{
marshall the given parameter object .
<p > the arns of the names of the product . < / p >
<p > the names of the exclusions . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
initialize the .
updates the value of the preference s access control policy for the given user .

sends a message to the server .
sends the notification to the notification .
<p > a list of job definitions . < / p >
<p > a list of job definitions . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
marshall the given parameter object .
get the data set for the given { @link } .
get the type of the given type .
{
marshall the given parameter object .
{
<p > a list of node identifiers that are associated with the node . < / p >
<p > the list of inventory snapshots . < / p >
<p > the snapshots of the snapshots . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want
<p > a list of elastic ip addresses . < / p >
<p > a list of elastic ip addresses that are attached to the elastic elastic elastic endpoint . < / p >
<p > the elastic gpu to be used for the elastic endpoint . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection

marshall the given parameter object .

{
returns a { @link } that is the type of the type of the managed type .
{
{
{
{
get the metadata map .
{
returns the class name of the map .
assign the type of managed managed instance to be used for the given managed type .

assign the type of the class to the given map .
checks if the given class is a member of the given class .
get the entity attribute for the given entity .
returns the type of the given entity .
get the from the .
execute the runnable .
read the files from the given file .

reads a single number from the given string .
read a single integer from a file .
returns the window for the window .
returns the modifiers for the given modifier .
copy the state of the target to the target .
check if the current state of the current state is not visible .
/ * ( non - javadoc )
sets the cache for the cache .
find the specified method on the given endpoint .
this method dumps the list of that match the given name .
bill method for bill .
bill
resolves the given file to be used for the given file .
ensures that the specified version is newer than the specified version number .
ensures that the { @link } is used to determine the version of the .
configures the classpath and checks the classpath .
create a new { @link logger } instance .
creates a new { @link properties } object .
creates the context .
creates a classloader for the given classloader .
creates a new { @link } for the given { @code resourcename } .
returns a new { @code joiner } describing the source code of the given source .
create a new { @link closure } that represents the given closure .
creates a new { @link } instance .
creates a new context binding for the given context .
creates a new { @link } instance for the given { @link } .
marshall the given parameter object .
marshall the given parameter object .
check that the given { @code string } is not null .
check that the given { @code string } is not null .
check if the given string is not empty .
checks if the given list is empty .
check that the given { @code null } is empty .
ensures that the array contains a single value .
check that map is empty .
checks if the list is empty .
ensures that a { @code null } set is { @code null } .
ensures that a array is empty .
checks if the given map contains a mapping for the given key .
this method is intended for internal use only . returns the marshaled request configured with additional parameters to enable operation dry - run .
<p > enables the specified message to the specified message . < / p > <p > <b > required permissions< / b > : to check the parameters of the request is a valid phone number . <p > this action is used to enable the traffic to the traffic to the traffic of the traffic dialog .
<p > the list of all messages in the request . < / p >
<p > deletes the specified message . < / p >
<p > deletes the specified message . < / p >
<p > retrieves the specified attributes of the specified queue . < / p > <p > for more information see <a href = http : // docs . aws . amazon . com / iam / latest / userguide / id_tags . html > arn< / a > in the <i > amazon ec2 / i > . < / p >
<p > retrieves the url of the specified url . < / p >
<p > lists the source tasks that are associated with the specified amazon kinesis analytics amazon redshift . amazon pinpoint can t be used to retrieve the list of destinations . < / p >
<p > lists the tags for the specified tags . < / p >
<p > cancels the queue and the queue id associated with the specified queue . < / p >
<p > sends the request to the specified message . < / p >
<p > sends a message to the specified amazon chime voice message . < / p >
<p > sends a message to the specified message . < / p >
<p > sets the specified attributes . < / p > <p > the <code > / code > operation supports tag - based permissions . < / p > <p > you can use the <code > / code > to set the list of attributes to the user . < / p >
<p > returns the tag that is associated with the specified tag . the <code > / code > action is used to create a new <code > / code > . < / p >
<p > removes the specified list of users from the specified queue . < / p > <p > you can list the last occurrence of the specified key from the queue . < / p > <p > you can list the last occurrence of the specified key from the queue . < / p > <p > you can list the
marshall the given parameter object .
/ * ( non - javadoc )
find the host and port from the given host .
find the hosts that match the given host .
returns all nodes that are reachable from the node s nodes .
adds a node to the list of nodes .
removes a node from the queue .
mark the node with the given node .
mark the node with the given node .
send event to event handler
marshall the given parameter object .

sets the property value .
creates a map of the values of the given property names .
returns the number of for the given name .
{
marshall the given parameter object .
computes the membership function evaluated at the given absolute tolerance .
marshall the given parameter object .
{
marshall the given parameter object .
sets the value of the attribute .
returns the term as a variable of the term .
{
add a new edge to this node .
add a new line to the list of lines .
marshall the given parameter object .
marshall the given parameter object .
marshall the given parameter object .
returns the reader for the given reader .
waits for a message to be sent to the console .
marshall the given parameter object .
<p > the items for this item . < / p >
<p > the items for this item . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setitems ( java . util . collection ) } or { @link #withitems ( java . util . collection ) } if you want



add a new to the logger .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
{
{
{
{
{
sleep for the specified amount of time .
sets the retry retry retry .
sets the retry policy .
sets the { @code } to the builder .
sets the retry policy .
sets the { @code } and { @code } .
{
returns the next element in the cursor .
/ * ( non - javadoc )

create a event .
creates a new instance of the given { @link } .


execute the given dml connection .



{
if the permit is not currently set the current thread is interrupted .
applies the given {
{
returns the next number of elements in the next record .
returns the absolute path to the given file .
returns the parent of the jpaentry of this directory .
add a new file to the list .
commit the commit commit commit and commit the given commit .
/ * ( non - javadoc )

converts a type to a type .
visits a { @link } annotation .
visits an instruction in the given position .
******************** initialization ************************************
******************** resizing ******************************************
puts a node in the map .
dumps the specified node to the given node .
print the count of spaces to the output stream .
executes git - modified and execute the puppet wizard .
returns a new file object .
{
returns status status response .
returns the status of the file .
builds the command line arguments .
******************** initialization ************************************
******************** methods *******************************************
******************** resizing ******************************************
******************** initialization ************************************
******************** initialization ************************************
******************** resizing ******************************************
******************** initialization ************************************
******************** methods *******************************************
checks if the given file is acceptible .

{
builds the command line arguments .

convert the byte array to a byte array .
returns the pom file .
returns the file extension of the given artifact extension .
returns the value of the specified byte array .
returns the pom file .
get the column name for the table .
checks if the given {
checks if the given { @link } is equal to the given { @link } .
handles the query .
returns true if the next element is in the list of items .
returns the next element in the list .
returns the next object .
logs the given message using the specified logger and arguments .
check if the logger is currently enabled for the given logger .
logs a message with the specified level .
gson invokes this call - back method during parsing .
create a new locpathiterator with a path .
create a new from the given path .


returns a { @code } that will be used to determine the .

create a new path expression
returns the values of the specified member .
create a new path expression

scans the file and returns the list of files in the list .
scan the file .
/ * [ deutsch ] <p > allen / p >
returns the value of the specified parameter values .
creates the editor .
create the .
save the data in the workbook .
initialize the .

show the page of the page .
renders the specified column .

sets the timeout for the given timeout .
returns a new { @code } that is used to create a new { @code graphics2d } .


creates a { @link } from the given { @link linkrelation } .
creates a catalog schema from the schema schema .
create a catalog schema from the catalog schema .
create a catalog schema from the schema .
compare two collections arrays .
compares two bitsets with the same number of columns .
compute the distance between the two specified distance .
add a new edge to the graph .
writes the edges from the node to the given node .
remove the from the
check if the given string is a valid numeric value .
validates that the given value is valid .
validates the arguments and the arguments of the arguments .
add a new hole point to the list of .
creates a new .

check if the threshold is valid .
check if the threshold is valid .
{
/ *
/ * ( non - javadoc )
calculates the distance between the two longitudes .
process the given file .
filters the list of items in the list .
write the to the file .
extracts the from the .
returns the latitude of the given id .
check if the is a list of
returns the list of nodes that are reachable from the node s node ids .
set the id of the .
{
add a new to the list of objects .


check if the project is a project .
merges the { @link } to the { @link } .
method .
translate a query into a datalog query .
save the data in the database .
find the redirect uri for the given redirect uri .
creates a new instance of the specified class .
create a new instance of the given class .
quote a string with the given string .
generates a list of all the query parameters for the given query .

find a setter method for the given property name .
find a getter getter setter method for a property .


remove the port from the list of port ports
split a list of strings into a list of strings .
returns a new instance of the given class .
cast a object to a primitive type .
clone the given object and return the .
creates a new { @link } for the given number of threads .
{ @inheritdoc }
creates a new .
creates a new { @link } with the specified configuration settings .
convert a { @link } to a { @link keyedstream }
{
returns a new with the specified configuration .
returns the configuration for the given configuration .

sends a request to the channel .
{
{
import maven pom .
called when the view is pressed .
{
notification that the user has pressed the menu items .
called when the activity is clicked .
notifies the listeners that the view is pressed .
returns the next character in the given string .
/ * ( non - javadoc )
adjust the text to the textview .
/ * ( non - javadoc )

checks if the file is a directory .
returns all the names of the properties that are configured on the configured service .
get the system property .
sets the listener for the given tag .
sets the { @link } for the given { @link } .
sets the list of { @link } s .
add a new {
get the type of the class .
check if the filter is a filter .
add a new mapping to the specified type .
adds a mapping from the given mapping to the specified mapping .
returns the index of the parent of the parent if it is not empty .
creates a table .
{
create a new { @link } with the specified data source .
{
{
creates a new observable instance for the specified observable .
{
rethrows the exception .
/ * ------------------------------------------------------------
returns all the locales and the list of templates in the list .
convert a name to a string .

converts a string to a string .
check if the given string is a pattern with the given name .
check if the given string is a valid pattern .
checks if the given string is a valid pattern .
check if the given pattern is a valid pattern .
checks if the given string is a valid value of the given string .
creates a new observable instance for the specified observable .
adds the specified element to the list .
iterate over the elements of the supplied consumer .
checks if the given { @code subscriber } is a { @link subscriber } .
returns true if the specified { @code iterator } is contained in the list of receivers .
calls the consumer with the given consumer .
get the sslconfig properties from the configuration file .
the next () method .
the exception is thrown when the exception is thrown .
completes the current thread s { @link } .
{
{
creates a new instance of the given type .
gets custom attributes for custom campaign .
returns the set of permissions for this .
<p > registers the given { @code } .
find a valid user .

get the name of the attribute name .
returns the value of the given variable name .
get the cookie value for the given key .

/ * ( non - javadoc )

calculates the distance between the two lines .
/ * ( non - javadoc )
notifies the listeners that the recyclerview has been changed .
notifies the listeners that the listener has been changed .
adapts the client to the client .
initializes the client .
add a new event to the event .
add a property to the event .
add a configuration event to the project .
add a new event to the list of events .
add a single event .
add a project to the batch .


create a new event event .
sends a request to the remote project .
sends a { @link workflowtask } to the { @link } .
sets the url to be used for the url .
sets the proxy server for the given host .
validate the properties of a property .
merge the global properties and add it to the global properties .
validates that the event is a valid event .
validates that the event is not valid .
validates that the given value is not valid .
build the map map .
publish a project to the given project .
publish the project .
/ * --- private methods ---
handles the given response .
handles a request to the given {
handles a failure failure .
handles a single failure response .
get the json object from the given json object .

sets the { @link } for the given { @link } .
creates a new {
creates a new {
query the statistics for the given event .
counts the number of documents in the given { @link } .
query the statistics of the given query .
根据某个字段名条件查询数据列表，返回所有字段
execute a query against the given query .

execute a request to the server .
create a response from the response and returns the result as a map .
sends a request to the request .
{


get the parameters for the given parameters .
/ * ( non - javadoc )
handles the request to the server .
build a new instance .
check if the guard is a .
check if the given candidate is currently active .
create a new for the given type .
returns the symbol that is the symbol of the symbol .
returns true if the expression is a valid {
get a { @link } from the given { @link } .
initializes the bean handler .
create a new { @link } .
returns a list of all subscribers that are subscribed to the list of items .
postcondition : () .
returns the description of the given node .
returns the currency token for the currency symbol .
get the currency name for a currency .
returns the currency symbol symbol for the given currency symbol symbol .
parses the token from the context .
returns a descriptor for the given type .
resolve the type from the class or if it is not a type .
sets the { @code } and { @code } .
add the specified filter to the list .

/ * [ deutsch ] <p > bestimmt das das das das subtraktionsergebnis . < / p >
validates the given url .
extract the xml from the given xml .
returns the grailsapplication context for the given application .
find the for the given application .
lookup an entry from the cache .
/ * ( non - javadoc )
creates a { @link } for the given { @link } .
returns the first child of the array .
get the children of the given map .
deactivates the given { @link } .
retrieves a { @link } for a given user .
get user info for a user .
request the request to be used for the request .

creates a new client from the given authenticateduser .
create a new authentication request .
creates a request context with the given request context .

returns a new { @link } that collects the mappings in the specified workspace .
returns a new bitmap with the specified number of bytes .
computes xor - wise xor between bitmaps from a given bitmap .
check if the event is a valid event .
returns the { @link } that is the specified number of elements .

returns true if the given class is a member of the specified class .
get the message for the message .
get the reply for a message .
retrieves the prompt for the user .
returns the id of the user who have to be used to retrieve the id .
get the message id from the message .
get the user s user - defined text .
get the message for the given location .
get the image for a given image .
get the message for a given message .
get the message .
get the attachment file .
get the message for a specific field .
{
validates the given and .
compute the cardinality of the cardinality of the .
fills the array with the given length .
returns the bit at the specified index .
calculates the number of words in the given .
returns the number of bits in the input array .
returns the bit at the specified index .

returns the upper triangular factor of this { @code long } .
add a frame to the frame .

add a new message to the current state .
this method is called when the browser is pressed .

compute the best effort to be used by the cluster .
returns a new { @code bitmap } that fills in the specified { @code offset } .
calculates the xor and number of bitmaps from the given range .
cardinality of the intersection of two polynomials .
adds a new { @code int } array to the given { @code int } .

complements the specified range of the given bitmaps with the given length .
complements the given number of bits from the given { @code int } value .
compute the intersection of two polynomials .
removes the given number of bytes from the specified range .
{

adds the specified number of elements to the specified { @link } .
removes the specified element from the tail of the given { @code } .
reads a data from a datainput .
{
{
flips the specified range of the specified range .
{

{
removes the specified range from the specified range . if the range is not specified it is removed from the range . if the range is not specified it is removed from the range . if the range is not specified it is removed from the range . if the range is not specified it is removed from the range . if the
removes the specified range from the specified range . if the range is greater than the specified range the range will be removed . if the range is greater than the specified range the range will be removed . if the range is greater than the specified range the range will be removed . if the range is greater than the specified range
<p > . < / p >

run the given and returns true if the current state is not already in the list .
{
creates a new { @link } object from the request .
returns the proxy for the given class .
specifies the authorization code grant request .
add a new service to the server .
sets the current value of the current matrix to the current position .
sets the components of this vector to the specified vector .
sets the components of the given vector .
sets the components of the vector .
sets the components of the given vector .
sets the components of this vector to the given vector .
sets the components of the given <code > v< / code > and the <code > v< / code > to the <code > v< / code > .
set the value at the given position .
set the value at the given index .
sets the value of the specified component .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an <code > x - y * x / y * y - y - z / sub > < / code >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add a new vector to the specified vector .
/ * ( non - javadoc )
sets the components of this vector to the given <code > a< / code > .
apply a mirror / transformation to this transformation .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
set the components of the matrix to be a vector of x and y components .
/ * ( non - javadoc )
rotates the given angle around the given axis .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the components of this vector to the specified values .
/ * ( non - javadoc )
get the list of for the given .

sets the x y and z components .
/ * ( non - javadoc )
returns the absolute angle of the image .
computes the dot product of the dot product
/ * ( non - javadoc )
/ * ( non - javadoc )
compute the dot product of the given x y and z .
/ * ( non - javadoc )

/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
sets the values of the given vector .
{
/ * ( non - javadoc )
sets the x y z coordinates .
/ * ( non - javadoc )

/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the component that is the absolute value of the component .
/ * ( non - javadoc )
creates a new authenticateduser instance .
initializes the database .
check if the given { @link } is not a valid schema definition .
initializes the working directory .
get the next record .
/ * ( non - javadoc )
<p > . < / p >
append a record to the specified buffer .
check if the is a .

get next record by next count next next record .
read the contents of the record .
close the stream and close the underlying stream .
get the path from the path .
check if the response is valid .
get the file name from the archive file .
get the input stream for the given url .
put the http http request with the given http request .
put http : // www . . com / docs / api / / / / / / / / / / / / / / / / / / / / / / / / /
perform a put request .
convert a response object to a json object .
<p > return the { @link } for the specified stream . < / p >
creates a new object from the given .
creates a random symmetric continuation for a random amount of money .

calculates the amount of time in the jwt and the secret rate .

split a secret into a single - encoded n1ql secret .
combine the and into a list of .
randomize the symmetric algorithm .
calculates the bit of the given number of bits .


resolve the key and value for the given key .
resolve the given key to the given token .
verifies that the given is valid .
returns the number of transactions in the .
get the from the given .
initializes the preference .
obtains all attributes from a specific attribute set .
obtains the color state from the given text color from the given text .
obtains all attributes from a specific attribute set .
obtains the number of hours to the preference s color from a specific typed array .
creates the listener for the given number of days .

returns the number of bits in the range of the specified number of digits .
sets the number of digits to the specified number of digits .
crates a { @link } with the specified { @code selector } .
returns a matcher that matches the specified { @code } .
returns a date that matches the specified date - time zone .
returns a matcher that matches the specified domain .
returns a matcher that matches the specified glob path .
returns a matcher that matches the specified { @code } .
returns a normalised - level { @link webelementfinder } that is used to parse the specified { @code cookie } as a { @code cookie } .
returns a matcher that matches the specified { @link } and returns the { @link } .
returns a matcher that matches the specified { @code } .
configure the authentication provider .
{
/ * ( non - javadoc )
sets the content - type of the given charset to the default charset .
sets the charset for the content - type header .
sets the charset for the content - type header .
{
{
creates a new { @link } instance for the given { @link charset } .
returns the cookie with the specified name .
returns the value of the specified cookie name .
creates a new { @link } from the given { @link } .
creates a provider populating a provider for the given type .
/ * ( non - javadoc )
sets the value of the parameter .
sets the value of the http request .

sets the cookie with the given name and cookie name .
get the cookie value from the request .

get user - defined authentication .
write the options of the options


adds a binding to the list of .

this method is called by the method to get the .
build the { @link } for the given { @link throwable } .

get user - defined authentication
returns the line number for the given member .
write the into a .
add a query parameter to the list .
create a new node from the given node .
create a new node with the specified node .
create a new node with the given node and returns the result .
creates a criteria with the given criteria and returns the result .
creates a query fragment for a given criteria .
get the field name from the field name .
returns the name of the field name and the name of the field .
creates a { @link } instance for a field .
<p > . < / p >
prepends a query to the query .
adds the query to the query .
adds a list of fields to the list of fields .

<p > . < / p >

<p > . < / p >
get the minimum value of the passed value as double .
returns the maximum value of the passed value .
delete the index of the geometry .
returns the last occurrence of the specified date .
query the bounding box for the bounding box and geometry labels .
process the given { @link } .
returns the jstype type of the feature .
{
{
get the serializer for this serializer .
{
{
{
{


convert a response to a response .
returns the { @link } for the given { @code } .
parses the and returns the index of the .

parses the given { @link } from the given { @link } .



check the remote port of the remote port .
tries to parse the port of port from the given port .


parses the given string into a string representation .
generate the html class for the given package .
add the package to the package tree .
add the given class name to the list of labels .
compiles the script and returns a script .
/ * ( non - javadoc )
invokes the method on the specified method .
creates a new { @link jsonobject } with the specified name and value .

main method .


get the cache for the given name .
returns a binding with the specified scope and bindings .

decodes the given file name from the file system .
get the class of the given class .
create a new {
create a { @code } from a { @link } .
creates a new { @link } from the given map .
creates a new { @link } with the given name and name .
creates a new { @link } instance from the given { @link } .
log a message with the specified arguments .
log a message with the given message .
log a message with the specified detail message .
log a debug message with the given message .
log a message with the given message .
log a message with the given message .
log a message with the given message .
log a message with the given message .
log a message with the given exception .
log a message with the given message .
log a message with the given message .
log a message with the given message .
log a message with the error message .
log a error message with the given error message .
log a message with the given exception .

creates a new instance of the given class .

creates a message from the given message and returns the object .
{

add a sourceunit type to a class .
get the { @link } annotation for the given { @link findoption } .
get the annotation for the given annotation .
{
{
{
{
/ * [ deutsch ] <p > liefert die aktuelle zeit als in der assoziierten zeitzone und utc - zeit als . < / p >
/ * [ deutsch ] <p > erzeugt eine dauer in einen utc utc utc benutzt . < / p >
returns a timestamp representing the date in the chronology .
validates that the fields are valid .
returns the value of the specified field as a partial instant .
sets the amount of partial instant . <p > this method is equivalent to calling { @code ( temporalfield long ) } .
returns the value of the specified period .
returns the value of the specified field in the specified array .
add a new amount to this instant .
add a long to the specified duration .
creates a { @link } that applies the { @link } to the { @link } .
creates a { @link } from the given { @link flow } .
sets the next read - only read buffer .
<p > returns a copy of the specified period . < / p >
<p > this period type of time zone . < / p >
returns a copy of this period with the specified period .
returns a copy of this period with the specified duration in the same order as the specified field . if the field is not present in the set it is returned .
adds a field to the period of the specified field .
returns a copy of this period with the specified period .
returns a copy of this period with the specified period .
returns a copy of this period with the specified period .
returns a copy of this period with the specified period .
returns a copy of this period with the specified period .
obtains an instance of { @code [ ( java . util . collection ) } and { @link java . time . period } .
returns a copy of this period with the specified period .
returns a copy of this period with the specified period .
returns a copy of this period with the specified period .
returns a copy of this period with the specified period . <p > this returns a copy of this period with the specified period . <p > this returns a copy of this period with the specified period . <p > this returns a copy of this period with the specified period . <p > this method subtracts the specified period from the
sets the list of classes that are not included in the list .

decrypts the specified encrypted text using the specified key .
returns a copy of this period with the specified period . <p > this returns a new period of hours excluding hours and minutes . the hours must be in utc .
{
returns a copy of this period with the specified period . <p > this returns a copy of this period with the specified period and duration . the amount of time is measured by the number of days in the period . the number of millis is included in the period . <p > this instance is immutable and unaffected by this method
returns a copy of this period with the specified period . <p > this returns a copy of this period with the specified period . <p > this instance is immutable and unaffected by this method call .
returns a copy of this period with the specified period .
returns a copy of this period with the specified amount .
returns a copy of this date with the specified number of days . <p > this method is equivalent to : <ul > <li > { @code } < / li > <li > { @code > } < / li > <li > { @code > } < / li > <li > { @code > } <
converts a { @code weeks } to a { @code weeks } . <p > the conversion is used to adjust the weeks to the date .
returns a copy of this date with the specified number of hours hours hours and minutes . <p > the returned number is a number of hours and seconds in seconds .
returns the specified { @code } .

<p > this method returns a copy of this period with the specified period . < / p >
returns a copy of this date with the specified hour seconds . <p >
returns a date that is used to adjust the date picker years to the date . <p > this queries the date time zone and the hour seconds . <p > this queries the date time zone and the date fields and the date fields that are used to adjust the date fields . <p > this queries the date time zone and
returns a duration of the duration of the specified duration .
gets the chronology .
gets the chronology .
process the given { @link } .
populate the data file .
clear the member data .
process a project .
read the data from the mpp file .
read calendar data from the calendar .

process the data for a task .
sets the for the given .
process the data of the .


process the .
read the data from the mpp file .
read the data from the mpp file .
write the given { @link string } to the given { @link string } .
split the input string into a list of strings .
checks if the given string is a valid .
checks if the given source is a source or a .
{
{
returns the integer value of the given byte array .
returns the integer value of the given byte array .
returns the string representation of the given byte array .
get the date of the given date .
checks if the module module is a module module .
get the string representation of the given char .
check if the given is a valid .
check if the given element is a valid element .
check if the given path is a valid css element .
returns the first component of the specified component .
check if the given string is a valid unicode character .
validates that the given value is valid and throw an exception .
/ * ( non - javadoc )
applies the given constraint to the given value .
convert the value to a array of strings .
parses the given parameters .
returns the for the given request matches the given filter .
find the best match for the given search matches the criteria
this method is used to determine the operation .
this method is used to get the instance for this request .

syntactic sugar
adds a new { @code } to the given { @code } .
checks if the specified value is a valid value of this type .
syntactic sugar
syntactic sugar
syntactic sugar
syntactic sugar
creates a new .
populate the .
check if the tag list is valid .
checks if the resource is a valid .
converts the object to a boolean .
returns the value of the specified object .
returns true if the value is a boolean value .
convert an integer to a integer .
converts an integer to a { @link object } .
returns the value of the specified value . if the value is null then the value is returned .
convert a { @link object } to a { @link } .
converts a long to a long .
converts a long to a long .
convert the specified object to a float .
converts a value into a float .
converts an object to a float value .
convert the value to a double .
cast a value to a double .
returns the value of the specified double value as a double . if the value is null then the default value is returned .
convert a short to a short .
converts a value to a short .
converts the given value to a short value .
convert the specified value to a { @link java . util . biginteger } .
converts the given value to a <code > char< / code > .
returns the value of the specified value . if the value is null the default value is returned .
converts a { @link } to a { @link } .
converts the given value to a byte array .
converts the specified value to a byte array .
converts the given object to a long .
convert an object to a string .
converts the given object to a class .
converts this object to a biginteger .
returns the value of the specified object . if the value is null then the value is returned .
convert the value to a bigdecimal .
returns the value of the specified bigdecimal object .
{
add a reference to the reference - range .
syntactic sugar
syntactic sugar
extracts the prefix from the prefix and returns the prefix of the first occurrence of the given prefix .

get the string value from the given key .
get the integer value .
get the long value of a long .
get a value from the given key .
get the float value for the given key .
get the json value for the given key .
returns the value mapped by key if it exists .
get the binary byte array for the given key .
get the value of the specified key .
get the string value of the given key .
get the integer value .
get the value of the specified key .
get the value of a key from the cache .
get the float value for the given key .
get the boolean value .
returns the json representation of the given key .
returns the json value for the given key .
get the binary byte array for the specified key .
get the value of the specified key .
put a key / value pair into a map .
puts a { @code charsequence } into a { @code char } .
put a key / value pair into a map .
check if the activity is a activity
checks if the activity is a activity .
put a key / value pair into a map .
put a key into a map .
get the parent of a task .
/ * returns the task id of the task .
read the from the .
this method is called by the relation to handle the relation .
returns the for the given id .
get the { @link } for the given { @link } .
returns the uuid uuid .

read the resource from the resource file .
read assignment from a { @link } .
returns the list of child expressions in the given { @link } .
adds a new child node to the parent type .
process the given { @link file } with the given name and the name of the given { @link file } .
creates a new instance of the given datapoint with the specified name .



reply .


send a contact to the cc bcc : username / username / username / username / username / username / username / username / username / username / username / username / username / username / username / username / username / username / username / username / username / username / username / username / username / username / username / username

{
<p > the message returned from the text if the text is not present . < / p >
<p > the text of the text that you want to send to the text . < / p > <p > this method is invoked when the text is not present in the text text . < / p > <p > this method is invoked when the text is not present in the text text . < / p > <p
<p > renders the html input message . < / p > <p > the html content is a form of the html input and the content of the message is rendered by the { @link } . < / p > <p > the html content is a form of the html input and the content of the message is written
设置一个header<br >
sets the headers to be used for the request .
sets the headers to be built .
for internal use with { @link } .
<p > the attachment of the attachment of the attachment . < / p > <p > if <code > type< / code > is <code > null< / code > the attachment is returned . < / p > <p > if <code > type< / code > is <code > null< / code > the attachment is returned . < /
{
get the object associated with the given target object .
{
sets the attachment of the document .

returns a new instance of the given type .
generates the import definition of the given { @link } .
generate the for the given .

generates the html code for the given element .

generate the for the given id .
generates the appropriate for the given type .
returns the id of the given id .
generate the for the given id .
create a new .
generate the for the given node .
generate a new ref for the given id .
returns the name of the class .

opens the dialog .
sets the file filter to be used by the .
parses the parameters from the given parameters .
parses the given parameters and returns a { @link } object .
escape the given escape .
finds the annotation index for the given annotation .
unescapes the given string with the given value .
creates a new proxy with the specified id .
creates a proxy for a given proxy server .
creates a proxy for a proxy server .
create a from the given resource bundle .
add a tag to the tag .
adds a new tag to the list of tag tags .
check if the tag name is valid .
check that the taglet is not in the .
check if the tag is in the tag with the given tag name .
creates a new {
initializes the .
add a new to the .
get the name of the first tag .
{
{
{
add the to the list .
{
{
{
{
{
{
syntactic sugar
syntactic sugar
get the summary header for the member header .
{
{
{
{
get summary table for a given member .
{
{
add the link to the navigation link .
returns the for the given .


adds a directory to the directory .
add a jar file to the jar file .
finds the first matching class .
returns the next token in the list .

returns true if the given option is a valid option .
returns the {

/ * ------------------------------------------------------------
get the approximate human readable string for a given amount of seconds .
format the task to be run as well as the output of the task .
get the approximate log - precision exponentially for a given amount of units .
get the time spent in milliseconds .
get the average value of the distribution from the given number of times .
start the task
appends a new value to the output .
formats the given date as a string .
syntactic sugar
initializes the .
read calendar data from a calendar field .
read the working hours from the calendar .
returns the number of hours in the number of hours .
read the data from the calendar .
read resources from the resource .
read the and .
creates a url for the given url .
get the location location for the given location .

{
{
{
create an instance of { @link project . storepoints . storepoint . calendars . calendars . weekdays . calendars . weekdays . calendars }
create an instance of { @link project . storepoints . storepoint . calendars . days . }
create an instance of { @link project . storepoints . storepoint . calendars . calendars . days . }
create an instance of { @link project . storepoints . storepoint . calendars . weekday . }
create an instance of { @link project . storepoints . storepoint . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars
creates a new project .
create an instance of { @link project . storepoints . storepoint . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars }
create an instance of { @link project . calendars . project . calendars . project . calendars . project . calendars . weekday . calendars . weekday . calendars }
create a new { @link } .
if the resource is a valid { @link } .
create an instance of { @link project . storepoints . storepoint . calendars . weekdays . calendars }
get the list of files in the folder .
copies the contents of the specified folder to a file . <p >
loads the file from the specified file .
create an instance of { @link project . storepoints . storepoint . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars . calendars }
returns the npm version of the npm .
create an instance of { @link project . storepoints . storepoint . calendars . weekday . }
creates a new instance of { @link project . calendars . project . calendars . calendars . calendars } .
creates a new project .
create an instance of { @link project . calendars . project . calendars . project . calendars . project . calendars . project . calendars . project . calendars . project . calendars . project . calendars . weekday . calendars . weekday . calendars }
creates a new .
create a new instance .
creates a new value .
appends the buffer to the buffer .
{
parses the given { @code tag } into a { @code } .
parse the page content from the given page .
writes the given tag to the page .
writes the given tag to the given { @link } .
add a new entry to the list .
{
find the first point in the given position in the list .
sets the system properties for the .
extracts the request parameters from the request .
returns a { @code } containing all the properties of the specified property path .
{
extracts the { @link } from the given { @link bucketupdate } .
extract the metadata from the given { @code } .
reads the given from the given reader .
read the from the given .
extracts the data from the given { @code } .
extracts the data from the given { @code } .
add a new route to the route .
{

converts the given object to a type .
convert the specified type to a list of { @link } .
invoke a setter method with the given value and returns the value of the given value .
returns the value of the given property .
sets the value of the given property .
find the index of the first occurrence of the specified character .
extracts the index from the sas7bdat string .
creates a { @link } bean .

converts the given object to a map of the getter and getter for the given index .
extract the value type from the given bean .
get the output mode for the specified .
get the number of lines that are not available in the screen .
defines the navigation bar which is used to show the navigationbar .
sets the background view of the view .
main method .
{
get the class path of the given file .
{
returns a set of the specified size in the given array .
executes the task on the given task .
applies the plugin to the given plugin .
gets the list of resource policies .
{
{
{
generate the file .
generate the index file .
{
process the input stream .
reads the file from the given file .
process a project .
process the table calendars .
process the rows .
process the rows .
process the rows .
process the { @link } for the given { @link } .
join the rows in the list .
get the table s columns .
find the cache for the specified key
{
returns the class for the specified key .
find the specified { @link key } with the specified key .
sets the value of the .
check if the is a .
creates a new { @link } instance for the given { @code } .
{
{
loads a file from a file .
add a new task to the queue .
add the given resource .
add a file to the project .
add a calendar field to the given calendar calendar .
add a working day to the given day .
add a new { @link } to the given { @link } .

add a new to the list of .
add a custom custom field fields to the given { @link } .
add a new { @link } to a { @link } .
add a to the file .
add a new child node to the table .
add a filter to the list of filters .
add a to the list of nodes that are the leaf of the given node .
save the file to a file .
returns all the names of the set of methods that are not in the set .
{
{
configures the scanner for the application .
register a { @link } with the given { @link } .
sets the digest to the digest .
creates a file from the given bundle .
returns a file object from the bundle bundle .

register the given list of .
creates a digest to the digest .
create a bundle for the given bundle .
resets the to be deleted .
/ *

method to invoke a method to perform the method .
sets the value of the given attribute name .
sets the value of the given attribute name .
{

returns the best - matching { @code } .
create a new with a specified id .
creates a new instance of the specified { @link } .
creates a new instance of the given variant .
search for the intent to find the specified intent .
search for the specified object .
this is the same as the () method to perform the () method .
loads the page from the head .
resets the online to the next page .
marks the pending request .
add a facet to the list of attributes .
sets the facets of the person that should be used to set the facets to be highlighted .
adds a facet to the specified facet .
add a new attribute to the list of attributes .
remove a facet from the given attribute .
sets the value of the specified attribute .
checks if the given string is a valid attribute value .
returns the list of text facets for the given attribute .
clear the attributes of the given person .
returns the { @link } that is used to determine the { @link } .
add a new to the given .
remove a double from the given string .

returns a new instance that represents the given .
remove a from the given .
add a facet to the facet .
remove the facet facet from the facet .
deletes the facet facet attributes from the facet .
sets the { @link } to the given { @link } .
sets the { @link errorlistener } of the { @link } to the errorlistener of the { @link } .
check if the json object is a json object .
sets the query .
sets the index for the index .
retrieves the list of objects .
set the labels for the labels .

get the config file path .
returns the absolute path relative to the path relative to the path .

hashes a hash from the input stream .
get the path for the given path .
get the size of the file .
build a string from the given string .
decrease the priority of the specified { @code } .
get the options for the given options .
adds a new { @code } to the specified priority .
{
merges two fibonacci heaps into two sets .
returns the { @link } that is the entry in the list .
returns the first minimal { @code b } of the first occurrence of the specified { @code b } .
check that the parent is the parent of the parent .

returns a new { @code } that is the union of the specified { @code } .
removes the entry from the jpaentry list .
create a new path element for the given class .
create a new path expression
get the package name for a given package .
package protected for testing
creates a path for the package .

converts a byte array into a byte array .
find the first occurrence of the given character in the given sequence .
get the artifact architecture for the specified artifact .
returns a new instance of the specified service .
{
{
{
{
create a new { @link } instance for the given { @link } .
create a new instance of the given .
creates a new { @link } for the specified type .
{
{
dumps the slf4j logger .
{
find the for the specified service .
create a new instance of the specified type .
{
create a new instance of the specified { @link } .
returns a proxy for the specified protocol .
answers a proxy that will be used to connect to the proxy server .

handles a failure message .
start the directory and start the directory .
stop the actor .
create a new instance .
allocate a new instance .
creates a new instance .
{
check if the given regular expression matches the regular expression .
adds a new schemaconcept to the registry .
check if the given string is not valid .
{
stops the stage .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<pre > (
<pre > (
{
stop the .
adds a { @link } to the given namespace .
{
get the for a namespace .
returns the { @link } for the specified document id .
start the metrics to the graphite thread .
get the instance for the given .
process the process instance .
stop the .
get the instance .

increment the value of the given correlationid value .
sets the value of the given value .
record the duration of the duration of the duration of the duration .
estimates the number of statistics in the given range .

execute the action and executes the action .
execute the command .
traverses the given list of classes and iterates through the given { @link } .

handles the and them in the and them .
parse the given { @link astnode } with the given { @link } .
creates a new user s { @link } .
build a { @link } for the given user id .
get the list of users for the user .
deletes the specified client key from the client .
enable the clientsecret for the client .
disable the user with the given id .
converts the given number into a long .
add a julian day to the julian day
/ * [ deutsch ] <p > subtrahiert den angegebenen datums . < / p >
sets the value at the specified absolute value .

get the remote address of the request .

sets the parameters of the .



build the for the given expression .
initializes the for the given deployment descriptor .
process the specified { @link } .
process the given freemarker container .

claim a message at the given offset .
append a message to the specified length .
appends the given message to the message .
appends the specified message to the specified message .
returns the parameters of the list of parameters .
send the message to the message .
handles a message for the given message id and the id of the message .
process the given and executes the action .
send a { @link } to the { @link } .
returns a copy of this date with the specified number of years . <p > if the specified amount is not null then the day is unchanged . <p > if the specified amount is not null then the day is unchanged . <p > if the day is not valid for the year this method returns the day of the year .
obtains an instance of { @code yearmonth } from a { @code calendar } . <p > this factory converts to an amount in terms of the amount . the amount is determined by the amount in the zone . <p > the conversion is immutable . <p > if the amount of time is specified then the amount of time the amount
obtains a { @code } from the given { @code string } . <p > the iso - 8601 time is used to parse the string value of the { @code } object . <p > the iso - 8601 time zone is defined by the iso - 8601 chronology . <p > the iso - 8601 time zone is used
obtains an instance of { @code seconds } from the specified temporal . <p > this method is equivalent to : <pre > builder . builder ( date ) . start ( date ) { if ( 1 ) . equals ( 1 ) < / p > <p > { @code ( date ) } .
adds this amount to the specified temporal object . <p > this returns a temporal object of the same observable type as the input with the specified amount added . <p > this returns a temporal object of the same observable type as the input with the specified amount added . <p > this returns a temporal object of the same observable type
subtracts this amount from the specified temporal object . <p > this returns a temporal object of the same observable type as the input with the specified amount subtracted . <p > in most cases it is clearer to reverse the calling { @link temporalamount } by using the provided { @link temporalamount } . <p > this returns a temporal object of
compares this amount to the specified amounts .
{
parses a { @code string } from the given { @code string } .

configures the user identity .
returns the unicode integer array for the given flags .
{
{ @inheritdoc }
converts the given date to the specified calendar field .
sets the field at the given offset .
{
returns a map of all snapshots from the stream .
prints the data to the console .
get the length of the specified value .
creates a new { @link } for the given { @link } .
add a new hole to the next segment .
writes the given { @code } to the given { @code outputstream } .
resets the current state of the { @link } to the { @link } .
sets the value of the given byte array .

{
get the properties from the properties file .
{
/ * ( non - javadoc )

this method returns the state of the .
{
updates the state of the timer .
updates the ripple effect .
called when the is pressed .

{
merges the fields in the given array into a list of fields .
creates a from the specified .
initializes the list of .
returns the next element in the array .
returns true if the specified element is in the array .
get the list of .
ensures that the reference is not null or not .
returns the key value pair that is mapped to the given map .
solve the x = x * x * x * x * x * x * x * x * x
solve the x = x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x * x
compute the eigenvalues of the matrix .
solve a * x = b
compute the eigenvalues of the matrix norm .
compute the eigenvalues of the matrix .
compute the eigenvalues of the matrix .
compute the eigenvalues of the matrix .
compute the eigenvalues of the matrix multiplication .
get all fields for a field .


/ * ( non - javadoc )
load a file from the given file
loads a file from the given file .
loads the { @link } from the given { @link inputstream } .
loads the tiles from the input stream .
read the geometries of the given geometry .
build image id from image url .
{
executes the given npm and returns the result .
reads a single { @link geometry } from a { @link geometry } .
reads a sparse vector from a geometry .
create a new host instance .
updates the progress bar .
sets the .
binds the given { @link } to the { @link } .
clear the text and the last element in the list .
create a new layer with the specified configuration .
write layer properties .
add a key pair to the index .
adds a value to the list of the specified value .
returns the first element of the current result .
marshall the given parameter object .
add a layer to the layer
find route from postcard .
builds a route from the given location .
escape the given string .
find a route by route .
this method is used to determine if the node is a valid .
loads the text from the given { @link } .
fills the image with the given content . <p >
creates a new export handler for the given export id . <p >
reads the manifest from the given file and returns the detail information . <p >
reads the manifest from the manifest . <p >
import a report for the given import . <p >
report the report . <p >
returns the file name for the given file . <p >
imports the data from the given { @link } and { @link } . <p >
imports the given module . <p >
perform a request to retrieve the properties of the request .
sets the response body to the response .

submits the user to the given resource . <p >
returns a comparator which is used to sort the comparator . <p >
returns the alias for the given alias . <p >

get the memory size of the cache .
process the queue for the given queue .
handles the method .
get the for the given column name .
sets the maximum number of the currently active backstack .
creates a menu .
called when the menu items are clicked .
adds a new option to the list of .
returns true if the popup is aligned with the given position .
selects the value of the selected radio button .
sets the value of the .
closes the editor . <p >
returns the popup height of the popup . <p >
initializes the widget with the given name . <p >
called when a value is pressed .
opens the popup and closes the clip area .
sets the popup position . <p >
adds the editor handlers to the list of decoration . <p >
adds the editor panel to the current panel . <p >
initializes the highlighting cell .
sets the position of the given panel . <p >
returns the { @link } for the given partition .
get the record for a .
generate the record for the given record .

<p > creates a new { @link } instance for the given value . <p >


process the given { @link } .
retrieves the report report for the given connection .
handles a new upgrade request . <p >
upgrades a file upgrade to a file . <p >
adds a new submenu to the list . <p >
shows the publish dialog . <p >
initialize the .
<p > this method initializes the schema . <p >

loads the set of properties from a file .
returns a list of all the files in the jar file .
returns a list of all jars from the classpath .
upgrade the given { @link } to the given { @link } .
get the values of the field in the record s record .


loads a { @link inputstream } from the given { @link inputstream } .
loads a { @link } from the given reader and loads it from the given reader .
enable or disable the current state of the keyboard .
<p > . < / p >

parse the given { @link } .
parses the { @link } and { @link } s .
builds a bracketed aql query into a list of .
returns the condition that is used to determine the table name .
get the offset from the sas7bdat file .
get the format from the input fields .

validates that the given offset is valid and if it is not a valid .
{
{
validates the validation report .
upgrade the config to the cache .
creates a new signature with the id and id .

checks if the field is a valid field .
checks if the field is a field or a field .
checks if the field is a valid field .
send a message to the given data .
creates a new field with the given field and type .
get the feature table for the feature table
get or create a new table or create the table if it exists .
returns true if the table name is not in the table .
create a new columnfamily
create a table .
create a new columnfamily .

gen - last :

create a new table with the specified table name .
create a new columnfamily table .
create a new trigger .
create a new columnfamily
create a new columnfamily
create a new columnfamily
create a new columnfamily
{
delete the columnfamily table
delete the extension
drops the table with the specified table .

check if the table name is not defined in the table .
drop all table name and column name .
trigger a table .


add a controller to the controller .

get the geometry envelope
get the table name from column name .
create a new fitting


returns a bounding box with the specified bounding box .
checks if the given point is a point on the given point .
checks if the bounding box intersects a point on the given point .
get the svg value of the bounding box .
get the latitude longitude value of the latitude and longitude
creates a field record for a field .
{
generate a string definition for the given column name .
get the latitude longitude value from the tile box .
returns the absolute value of the specified rectangle .
get the latitude latitude from latitude and longitude
get the latitude latitude from latitude and longitude .
get the tile from the tile
get the for the given tile coordinates
get the from the tile list

get the image for the given coordinates .
get the bounding box for the given bounding box .
get the bounding box for a given tile .
get the tile color coordinates for the tile id
get the bounding box for the given bounding box .
get the tile tile coordinate for the specified tile coordinate .
get the grid tile point for the tile .
get the tile tile for the tile widths .
convert a bounding box to a latitude box
calculates the maximum size of the given size .
calculates the maximum distance between the specified number of tiles .
calculates the maximum distance of the given maximum number of degrees .
returns the number of tiles at the specified location in the specified direction .
get tile info for a bounding box .
get the bounding box for the given bounding box .
get the total number of tiles in the given box .
get the tile from the specified tile
main method .
/ * ( non - javadoc )


creates a corner tile .
creates a corner tile from the coordinates of the bounding box .
get the tile for a latitude and z .

get the bounding box for the given bounding box .

creates a zoom - level tile for the specified texture .
creates a zoom level for the specified texture .
sets the tile center of the texture .
delete the table index

delete the table with the specified primary key .
add the options to the list of .
delete the table with the specified table and delete all rows .
delete the table by id .


deletes all tables in the database .
returns the next element in the list .
returns the next element in the list .

returns a from the specified photo .
this method is used to create a from the wallet and returns the license .




parse a message from the given stream .
returns true if the input stream is a valid .
shows the error dialog for the given exception . <p >
shows the error dialog for the given exception . <p >
copies the content of the container to the container . <p >
encodes the given byte array into a string .
encodes the given string into a base64url string .
decodes a byte array into a byte array .
decodes a byte array from the given byte array .

{
returns true if the is a .
returns the script that is used to create a script .
sets the script for the script .
returns the transaction associated with the given transaction .
/ * ( non - javadoc )
connect to the specified connection .
connect to the specified destination .
disconnect the connection .
verifies the given { @link } with the given { @link } .
verifies that the given scriptpubkey are not in the process .
<p > sets the position of the element in the panel . < / p >
{
loads the providers from the provider list .
reads the attribute name from the given attribute .
reads the attribute value from the { @link } .
read attributes from the given attributes .
{
{
creates a security security context for the given security context .
/ *

generates a hash function that is used to encrypt the multisig data for the given user .
{
returns the number of transactions that are currently active .
register a { @link } bean .
process the given bean by looking up the and .
find all the persistence unit .
returns the for the given .
get the wallet for the wallet
get the balance for the given id .
get the next time in the range of the specified time .
returns the channel for the given id .
get the { @link } for the given { @link } .
get the { @link } for the given { @link } .

/ *
<p > . < / p >
get the system property for the specified host and port .

initialize the .
remove a channel from the channel .
{
validates the given list of validators .
get the list of for the given .
returns the list of classes that are referenced by the given class .
check if the type of the parameter is not present in the list of type arguments .
returns the { @link } for the given { @link annotatedelement } .
validates the given method name and returns the default value .
check if the attributes specified by the attribute is a valid attribute .
{
returns the {
get the timers of the .
get the directory for the given directory .
returns a { @link } that is used to resolve the { @link } to be used by the { @link } .

initialize the .
add a new { @link } to the set of configurations .
add a new configuration to the specified directory .
installs the given { @link } to the configuration file .
set the to be used for the given path .
remove the plugin from the configuration file .
remove the list of from the list of .
get the configuration .

remove a list of all from the given .
get the plugin list by .
add the given file to the list of files .
add a new parameter to the list of .
get the deployment unit for the deployment unit .
deletes the principal from the opencms principals . <p >
initializes the dialog . <p >
returns the list of resource objects for the given resource . <p >
returns the list of all categories for the given category . <p >
returns the category map of the given category . <p >
returns the list of categories for the given category . <p >

get the wallet for the passed in wallet .
closes the channel .
get the connection for the given connection .
get the channel for a given id .
get the map of { @link } s that are currently in the map .

increments the specified amount of data from the given { @code } .
increments the counters for the given amount .
returns the { @link } for the given { @code } .



parse a name and name and name and return a new instance of the given name .
returns the name of the first element in the array .

converts a { @link } to a { @link org . apache . osgi . broker . } .
converts a { @link } to a { @link } .
parses the given string into a .
escape a string to a string .

filter a filter based on the predicate

get the filter names for the given filter .
set the filter to match the filter predicate .
{
{


{
<pre > name of the first id that is the first id of the specified account . < / pre >
returns the id of the given id .

handles a { @link android . gms . } .

get a new instance of the given service .
get the cached instance of a container .

get the container container .
{
returns the current session .
/ * ( non - javadoc )
returns the for the given target .
localirobject implementation ---------------------------------
containedimpl implementation ----------------------------------
/ * ( non - javadoc )
calculates the specifier for the given range .
converts a string to a dotted address .
returns a new array with all the bits of the specified array .

pop the current point from the current position .

close the connection and close the connection .
creates a prepared statement with the given parameters . <p >
get the list of interfaces that the given class is a class .
get the user s model for the user .

returns the method arguments for the given method .
{ @inheritdoc }
get the instance of the given component .
shows the dialog for the given resource . <p >
adds a button to the current user . <p >
creates a button for the given button . <p >
creates a permission for the given permission .
returns the for the opencms user . <p >
returns a list of all relations in the relation . <p >
returns the list of all the sites in the given list . <p >
returns the type of the resource from the vfs resource type . <p >
returns the best match for the given resource id . <p >
returns the solr search results . <p >
recursively traverses the folder in the list of resources that are in the list . <p >
/ * ( non - javadoc )
returns the solr index . <p >
get the proxy object by the given object .
login .
get the proxy object from the given object .
get the link to the current page .
resets the settings for the button to the current user . <p >
binds the given service to the given service .
localirobject implementation ---------------------------------
set the flags .
containedimpl implementation ----------------------------------
returns the lowest member members of the member .
returns the type of all the member types .

check if the given is a valid .

returns the entities that are the specified entity .
returns the report report for the given path .


{
/ * ( non - javadoc )

check if the given resource is a valid .
checks if the given { @link } is a { @link } .
check if a transaction is valid .
throw exception if the type is not a synthetic method .
throw exception if the given method is not a {
creates a new iterator instance for the given iterator .
{
returns the expression that evaluates to true if the expression is not in the expression .
{

{
returns true if the specified class is a class .
returns the default { @link } for the given { @link } .
returns the list of interfaces implemented by the given list of interfaces .
returns the service name for the given service name .
returns the index of the first occurrence of the given number of times .
add a new record to the list .
returns all loggers that are currently registered by the logging loggers .
returns the name of the logger .
<p > the list of key - value pairs for the grant . < / p >
{
<p > a list of key - value pairs . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if
add a factory to the factory builder .
prepare the context for the context .
/ * ( non - javadoc )
{
{
{
adds a service to the service .
clear the from the .
copies the contents of the given data to the given . <p >
updates the aliases with the given id . <p >
process the bean definition for the given .
clones the given object .
execute the given action .
{
initialize the database connection .
load the and .
{
{
/ * private (
check if the resource is a resource .
{
{
close the { @link } and { @link } .
parses the given and returns true if it is not in the process .

{
returns the for the message .
called when the is pressed .
fade keyboard animation . <p >
restore the font and hide the existing space .
sets the current element . <p >
sets the selected . <p >
this method initializes the workplace editors . <p >
saves the user to the user . <p >
adds a new event to the list of listeners . <p >
adds a new { @link } to the list of . <p >
adds a new resource handler for the given resource name . <p >
returns the handler handler for the given request . <p >
execute the database .
returns the current login manager . <p >
returns the publish id of the publish dialog . <p >
returns the for the given session id . <p >
removes all selectable resources that are available to publish to the publish list . <p >
sets the user import list . <p >
sets the for the given user name . <p >
sets the history settings for the given settings . <p >
sets the locale for the given locale . <p >
sets the password for the user . <p >
create a new worksheet with the specified name and name .
add a cell to the cell .

sets the password for the user . <p >
sets the current page . <p >
sets the value of the current user . <p >
sets the default { @link } . <p >
sets the workplace configuration for the given url . <p >
sets the file name for the given project . <p >
sets the session mode . <p >
add a new structuredefinition style .
write the contents of the file to the given file .


write the given { @link } to the given { @link outputstream } .
get the current position of the given .
get a read - only preference file from the file .
returns the total number of bytes belonging to the given id .
get the file from the given file .
this method is called when the { @link } is used to determine the state of the component .
get the cache for the given component .
get the long state of the given .
returns the cache of the specified component .
push the counters for the counters .
-----------------------------------------------------
push the data in the map .

returns the compact form of the given .
returns the for the given data .
push a counters with the given name .
returns a { @link } object that represents the documents of this document .

clear the current state of the .
clear the data from the cache .
{
stop the timer .
record the last modified time of the .
sets the total number of ticks in the bucket .

stop the checkpoint .
remove the record from the list .
sets the object for the given object .
{
{
/ * ( non - javadoc )
save the given to the given .
{
{
{
detaches the from the iterator .
attach a new { @link } to a { @link } .
returns the for the given graph .
validates that the property value is not valid .
check if the class definition is a or not .

report the and .
get the zip file and return the map .

encode a binary encoded binary data .
decodes a json encoded json string into a base64 encoded string .
disable the tab list . <p >
fills the list of editors with the given search parameters . <p >
fills the panel with the given tab name . <p >
returns the tab name for the given tab id . <p >
selects the tab with the given title . <p >
sets the size of the dialog . <p >
sets the visibility of the decoration painter . <p >
updates the tab size for the tab . <p >
sets the size of the preference s dialog . <p >
close the underlying stream .
returns the text of the given tab .
initializes the button bar . <p >
shows the tab . <p >
expect the expected value as a json object .
skip the next line on the line .
returns the next quoted quote .
reads characters from a char char .
decodes a { @link biginteger } object from a { @code int } value .
/ *
reads a literal literal .
decodes a { @code bytebuf } into a { @link bytebuf } .
returns the next pseudorandom value to the next pseudorandom { @code double } .
returns the next token in the stream .
skip the next token in the json array .
checks if the given { @code field } is equal to the specified { @code field } .

{
{
{
asynchronously request a request to the authenticated user .
asynchronously request a request to a request .
synchronously subscribes to the request .
reads a resource file from the vfs file . <p >
returns the html for the given version . <p >
login the user s password .
cancel the user to enter .
returns the remote address of the remote server .
checks if the given permissions should be deleted . <p >
set the request to use for the request .
sets the http response .
clears the current thread . <p >
returns the configured policy for the given resource . <p >
locks a resource . <p >
locks a resource . <p >
ensures the user has to be used to read the user . <p >
returns the properties of the given property name . <p >
returns the service service .
check if the node is a node with the given node .
replaces the first occurrence of the given node with the given name and return the first child of the node .
check if the node is a block of a block .
check if the node is a direct predecessor or not .
returns true if the given node is a descendant of the given .
if the operator is a direct predecessor or a new node it is not a unaryexpression .

traverses the given operator and adds it to the list of .
if the node is a it is not a .
remove the last node in the list of the given node .
returns true if the given node is a valid .
check if the node is a valid property expression
check if the condition is not met .
this method is used to add a new node to the given node .
replace the occurrence of a node with the given node .
/ * ( non - javadoc )
{
get the path to the given directory .
/ * ( non - javadoc )
returns the cache for the given path .
adds the specified mapping to the resource list .
adds the specified resource to the list of files in the bundle .
checks if the resource is a resource .
/ * ------------------------------------------------------------
creates a new { @link } for the given { @link } .
resets the cache to the cache .
checks if the given {
serialize the mapping to the cache .
loads the cache mapping from the given file .
quote a string with the given string .
convert the value to a { @link } .

returns all the module names for the given module name . <p >
adds the given resource to the list of objects . <p >

adjust the resources to be deleted by the . <p >
returns a new word with the given prefix and the prefix prefix .
helper function to filter the resources . <p >
clones the given resource . <p >
clones the given map type and adds the types to the given types . <p >
clones the given module . <p >
copies the resource types to the given resource type . <p >
creates a folder with the given name . <p >
<p > . < / p >
checks if the value is a valid value . <p >
locks a resource . <p >
fills the resources from the opencms vfs . <p >
replaces all the resources in the opencms vfs . <p >
replaces all resources in the vfs . <p >
replaces all the resources in the given opencms vfs . <p >
the list of all files in the file system is the last element in the vfs . <p >
transforms the given resource into a single file . <p >
reads the xml content from the xml file . <p >
execute the given parameters .
reads the index content from the given resource . <p >
main method .
/ * ( non - javadoc )
returns the best flags for the given component .
returns the {
builds a request that will be used to generate the request parameters .
/ * ( non - javadoc )

creates a new .
initialize the servlet handler .
initialize the jawr context .
initialize the for the
initialize the jawr resolver configuration .
/ * ------------------------------------------------------------
initialize the jawr config .
initializes the request handler .
/ * ------------------------------------------------------------
initializes the bundle handler for the bundle .
creates the jawr config .
/ * ------------------------------------------------------------

initialize the for the current thread .
copy the content of the request to the given path and returns true if the resource is not present .
handles the request to the given request .
checks if the given bundle is a valid bundle type .
writes the request content to the given url .
generates the html code for the given request .
check if the path is valid .
get the struts path from the request .
sets the headers for the request .
destroy the and destroy the .
returns the names of the bundles that are available for the bundle .

resets the state of the .
get the propertydescriptor for the property name .
sets the annotation for the given object .
{
initializes the mapping mapping .
add a resource path to the resource .
check if the file is a file extension .
add a new to the list of files .
{ @inheritdoc }
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the path to the file .
get the engine engine engine engine .
puts a new object into the specified object .

finds the first instance of the given class .
finds all the elements in the given list .
find the first matching name by name .
checks if the given type is a subtype of the given type .
builds the for the given .
returns the constant value of the given variable or null if the constant is not null .
sets the { @code } and { @code } .
returns the number of bits in the given long value .
loads the class name from the class loader .
instantiate a new instance of the given class .


/ *
transform the given string to a { @link string } .
returns the short name for the given namespace .
returns the property name of the property .
/ *
build the property .
returns the jstype of the given type .
returns the type of the type of the given type .
returns a { @link } object that represents the specified field type .
returns the first instance of the given {
find the best match for the given kind .
returns the smallest power of the k - randomly randomly shuffled to the power of the first element .
returns the average bit value for the given key .
{

compacts all the in the .
finds all the { @link } s that are not in the specified { @link set } .
creates a new configuration object with the given parameters . <p >
get the suffix of a prefix from the given prefix .
<p > executes the given javascript function and returns a new object with the name of the script . < / p >
initializes the model .
initializes the model and initializes the treemodel .
{
enables the current state of the producer .
publish the { @link } to the list of { @link } s .
reads the state of the given { @code } .
/ * ( non - javadoc )
returns the jstype type of the given type .
returns the jstype type for the given type .
returns a { @link } that is represented by a { @link } .
creates a new instance for the given type .
reads the macros in the given . <p >
returns the resources that are published to the resources . <p >
returns the name of the node .
initializes the bundle . <p >
returns the list of combo box select box . <p >
/ * ( non - javadoc )
hash a hash .
returns a hash of the specified key .
add a set of names to the names of the names .


build a new { @link } with the specified default bundle definition .
scroll the scroll position .
scroll the scroll bar if the scroll scroll scroll scroll scroll scroll is scrolled .
{

returns true if the current thread is a process for the given event .
returns the detail of the given exception . <p >
returns the detail information of the given exception . <p >
returns the length of the specified byte array .
动态添加词典
merge the map with the given map .


sets the icon . <p >
create a new template node .
parse a node and return the ast node .
/ *
parses the { @link astnode } for the given { @link astnode } .
sets the offset of the node .
create a new node with the given name and node .
downloads the specified file to the given url .
returns the minimum number of milliseconds in the given { @code port } .
<code > repeated . alluxio . grpc . block . = 1 ; < / code >
<code > repeated . google . cloud . datalabeling . . ( ) == [ a ] . () < / code >
<code > repeated . jscomp . ( member ) ;
<code > repeated group group entry = ( ) < / code >
gets the for the given .
converts a { @link } to a { @link } .
get the srid for the given srid .
loads a srid from the database .
<code > . jscomp . requirement = {
<pre > the default value for the compiler . < / pre >

<code > optional string = 1 ; < / code >
<pre > the name of the class that was configured to be used for the compiler . < / pre >
<code > optional string = 1 ; < / code >
<pre > the name of the authenticated rule . < / pre >
<code > optional string = 1 ; < / code >
<pre > the name of the agent . for example if tensorflow is turned turned into a specific application / octet pair . < / pre >
<pre > the number of members that are not in the list . < / pre >
check if the service is authorized .
sets the .
checks if the is a .
returns the root folder of the project .
replies the project id of the project .
get the properties for the given service .
loads the properties from the resource .
get the version of the given .
sets the title of the window .
check if the srid is a database table .
check if the database is valid for the database table .
get the value of the key from the configuration .
get the absolute url of the url .
initializes the combo box . <p >
handles the selection of the selection . <p >
returns a new that will be used to publish the clip - board to be deleted . <p >
returns the total number of pixels in the page .
process the command .
parses the given reader and returns the reader .
start the thread .
returns a {
checks if the given node is a valid js js definition .
determine if the given module is a valid js .
returns true if the given module is a valid js uri .
checks if the given { @code } is a { @code } .
check if the node is a valid js node .
removes the module id from the list of { @link } s .
start the payment request .
refund the braintree signer for a given payment id .
get the annotation for the given annotation .
get the jsonunmarshaller annotation
get the value of the given member .
get the name of the field name .
returns a list of for the given .
get the { @link } for the given { @link } .

get the first page of the page .
get the html page for a given page .
returns the first { @link propertydescriptor } for the given { @code field } .
decodes the given and returns the .
returns a map of all the nodes in the given map .
rewrite the given .
check the given function and return true if the given function is not valid .
process the given and goog .
/ * private methods
process the given and .
handles a {
visits a variable definition and goog .
/ *
register the given namespace prefixes for the given namespace prefixes .
returns whether the given element is a namespace .
create a new with the given parameters .
create a new { @link } .
/ * ( non - javadoc )
visits all the types of the given class and returns the type of the ast .
generates a wither for the given element . <p >
returns the buffer s length .

get the image for the current instance .
adds the search rules for the given rules . <p >
adds the xml configuration to the given xml element . <p >

generate a object from the given kafdocument array .

extract the list of from the given .
resolve the node name from the given name .
returns the name of the node that is the first node in the given node .
converts a bytebuffer into a bytebuffer .
converts a bytebuffer into a bytebuffer .


returns the size of the .
moves the specified file to the target file .
check if the given credentials is a valid credentials .

<p > a list of objects . < / p >
convert a string to a string .
sets the position of the .
sets the notification to be used for the user .
finds the first image for the given type .
create a new
create a new
creates a new with the given type .
create a new instance with the specified format .
create a for the given .

returns the number of days in the specified order .
set the url to be used by the url .
<p > . < / p >
delete a request from the request
deletes all the specified attributes .
get the age of the date .
get the date value from the excel format .
check if the current date picker is valid .
returns true if the specified value is not valid .
create a checksum of bytes .

returns the jstype at the given one .
get the input buffer .
get the webcam .
creates a new { @link } instance for the given index . <br > <br >
sets the configuration .
{

<p > retrieve a for the specified { @link } . < / p >

<p > . < / p >


<p > . < / p >
register a new instance .
get the url handler for the given url .
returns the url of the url .

returns a cmsobject which will be used to import the search for the given resource . <p >
show the help menu .
set the value of the warning .
sets the environment .
sets the plugin for the given compilation unit .
converts the given { @link } to a { @link org . apache . hadoop . cli . } .
sets the value of the given key .
find the from the file .
gets a list of all the for the given .
check if the file is in the cache .
returns the last modified last modified time for the given file .
returns the last modified last modified time for the file .
converts a { @link } to a { @link } .
converts the properties of a map into a map .
deletes the from the disk .

sets the value of the given key .
{
builds a new { @link } instance .
generate a random uuid .
{
get the query string from the query .


check if the query string is not valid .
<p > . < / p >
returns a pattern that matches patterns and pattern patterns .
returns the list of displayed components for the given widget . <p >
creates the list of widgets for the given container . <p >
<p > . < / p >
---------------------------------------------------------------- header
check whether the given { @code duration } is equal to the expected state .
check if the { @link } is a percentage of the specified { @link duration } .



get the object with the given event as a list of event .
get the { @link } for the given { @link } .
calculates the shape for the given shape .
computes the eigenvalues of the given result .
computes the imaginary imaginary part of the complex number .
scales the given complex number in the form of a complex number .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
determine the number of
{
{
sets the direction of the direction .
{
{
{
sets the paragraph and the paragraph s text .
sets the cell s position .
sets the indent .
sets the horizontal alignment for the horizontal alignment .
sets the alignment of the paragraph to the paragraph .
sets the format for the given cell .
sets the format for the given name .
creates a new { @link } with the given { @link } .
calculates the distance between the and .
returns the date of the page . <p >
returns a map of beans that are used to create the fields . <p >
returns the date of the last date of the current date . <p >

returns a <code > / code > instance for the given date . <p >
returns the value of the radio bean . <p >
returns a new date object for the given date . <p >
returns the title of the title . <p >
returns true if the given { @code date } is in the given date . <p > the date is the time in days . <p > the date is the time of the day - of - month . <p > the date is the time in days . <p > the date is the time of the day - of -

initializes the series of variables in the given list . <p >
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
this method calculates the number of elements in the ndarray
returns the number of nodes in the cluster .
returns the number of nodes in the cluster .
read the data from the stream .
start the server .
returns all projects in the given folder . <p >
creates a new job that will be used to create a new job . <p >
returns the resource for the given resource id . <p >
returns the specified { @code param } .
creates a new object . <p >
copies the contents of the given byte array to the given byte array . <p >
reads the given log entry from the given sql id . <p >
resets the resource to be deleted . <p >
serializes the publish message to the given publish list .
writes a resource to the publish history . <p >
prepares the dialog and executes the search . <p >
publishes a resource to the given folder . <p >
deletes a file . <p >
publishes a publish list of resources to a resource . <p >
returns the horizontal position of the given position . <p >
checks if the given position is a valid position . <p >
returns the position of the element in the given element . <p >
returns the scaled layout for the given element . <p >
returns the array of the specified element in the array . <p >
returns true if the specified point is inside the polygon .
this method is called when the element is not a valid . <p >
returns the area of the area that is cropped the area of the area .
returns true if the given draggable is a child of the given child . <p >
returns true if the specified element is a .
checks if the exception is compatible with the given type .
/ * private methods : > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
returns the { @link } for the given name .
filter the specified filter .
returns the total number of pn counters that the total number of times in the map .
/ * ( non - javadoc )
adds a property to the specified direction .
{
creates a new { @link } instance .
returns a canonical filter for a property .
returns a canonical filter for a property .

returns the type of the type .
returns the value of the given property .
removes the head of the list of {
commits the edited group to the current user . <p >
returns the category of the current organizational unit . <p >
creates the dialog html for the given html dialog . <p >
{
{
returns the list of languages that are currently selected . <p >
returns the list of navigation beans . <p >
returns the roles for the user . <p >
returns the list of available html entities . <p >
returns the list of available editors . <p >
updates the metric with the given id .
{
{
initializes the user . <p >
applies a flat task to the given stream .
{
{
create a new { @link filter } with the given filtering query .
this method is used to process the output for the
returns all the versions of the given .
adds a new alias to the list . <p >
returns the aliases for the given alias . <p >
get the paths of the
initializes the aliases . <p >
validates that the given { @code map } is not empty .
validates the given aliases . <p >
creates a new button button . <p >
creates a new button for the given button . <p >
creates a new button button . <p >
creates a label for the given label .
creates a combobox in the list box . <p >
creates a new widget widget . <p >
initializes the alias . <p >
validates the given id and returns the result as a valid detail id . <p >
validates the given configuration and returns a new map of the user s ids . <p >
creates a new { @link } .
invoke the method with the given arguments .
renames the given resource . <p >
builds the locale for the selected locale . <p >
builds the html for the user . <p >
validates the parameters of the form . <p >
returns the template for the given list of templates . <p >
returns the set of template templates for the given template . <p >
returns the xml pages of the given page . <p >
checks if the given element is a page element . <p >
returns <code > true< / code > if the given page is not valid . <p >
checks if the given element is a valid element .
checks if the given element is a valid template element . <p >
performs the quick deletion of the edit operation . <p >
removes the page from the given page . <p >
writes the page report page page page page page page page page page page page page page page page page page . <p >
returns a new { @link } with the specified keys and values .
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
build config .
get the topology information for a topology

build the bean for the given component .
build the instance .
build the for the given .

{
creates a new { @link } instance for the given { @link document } .
partitions the aggregate field and returns a new { @link } .
partitions the { @link dataset } for the given { @link dataset } .
partitions a new distribution with the same id as the { @link } .
{
map the input stream to a { @link } .
returns a { @link dataset } that applies the given { @link } to the output stream .
peek stream into stream .
get a stream by field name .
returns the field by field name .
returns a comparator that is the first element of the given comparator .
get a stream by name .
returns a stream of { @code } with the given { @code field } .
returns a stream of the given comparator .
applies a { @link } to the specified number of tuples .
returns a stream that applies a { @link } to the specified number of rows .
applies a watermark transformation to each window . the window function is called by the window operator and then applies the watermark to each window .
returns a { @link stream } that applies the { @link } to the window .
applies a { @link keyedstream } into a { @link keyedstream } .
applies a { @link } to the window .
returns a builder for the given { @code } .
returns a {
returns a list of all the objects that are contained in the given list of list .
returns a builder for the given id .
returns a stream that contains the { @link } s that are contained in a multi - stream response stream .
returns a {
update the given {
updates the {
remove all the from the list .
remove all occurances of the given filter
returns the { @link } for the given id .
returns the { @link } that is used to determine the { @link } .
returns a that matches the given predicate .


marshall the given parameter object .
unsubscribe to the handler .
{
rotate the left - hand side right - left half of the left right - handed right left right left side of the left right hand side .
flip the color of the original value .
move the left right fringe right left to right .
move the left right right right left right right fringe
returns the protocol protocol .
get the class of the class .
creates a new { @link } instance .

adds a binding to the given class .
returns the previous position of the previous position .
returns the number of items that is the number of times .
returns true if the given filter is not a filter .
returns a new list with the specified list of the list of .
returns the first {
extracts the path from the uri .
extracts the scheme from the given url .
extracts the user from the key from the user .
extracts the options from the request .
validates the configuration and sets the .

computes the dot product of the two vectors .
multiply the quotient and then applies the .
permutes the values of the specified permutation .
/ * [ deutsch ] <p > liefert den n&auml ; nge mit dem angegebenen . < / p >
initialize the table .
parses a single resource bean . <p >
parses the given bean definition and returns a new configuration object . <p >
returns the names of all the available translations . <p >
returns the formatter for the given resource . <p >
returns the locale from the given locale . <p >
returns the format for the given location . <p >
returns the value of the given url string . <p >
parses the given form and returns the result . <p >
parses a single field bean from a sitemap property bean . <p >
parses the parameters of the given jsp string . <p >
parses the parameters of a map and returns a map of parameters to the given location . <p >
parses the xml content from the xml field . <p >
parses the configuration from a resource . <p >
increments the value of the given byte array .
returns true if the given byte is equal to the specified value .
opens a new resource with the given path and a path . <p >
handles the case of the items . <p >
handle a item which is shown by the user . <p >
adds a new child node to the list of groups that are currently selected . <p >
removes the given item from the list . <p >
adds the roles to the list of roles . <p >
adds a new ou . <p >
returns the id of the ou . <p >
returns the id of the ou for the given id . <p >
loads the items from the list of items . <p >
get the { @link } for the given { @link executor } .
reset the current thread .
{
executes the request and execute the request .
creates a new { @link } with the given { @link } .
parses a json response from a json response .
sets the class for the given { @code } .
creates a new xml using the given content - type .
check if the is a valid .
check if the is a valid

add the file to the list of files .
set the value of the value .
check if the color value is a valid color .
closes the editor . <p >
closes the editor . <p >
returns the names of the specified languages for the specified type .
returns a collection of strings corresponding to the specified { @code } .
converts a string to a hex string .
opens the popup menu popup and closes the popup panel . <p >
{

{
extract the from the given .
find the first matching dataset for the given .
find a from the list of groups in the .
get the dataset dataset by name .
decodes the given signed { @code int } from the { @code byte } .
decodes the specified signed byte array as a byte array .
decodes a signed long from the { @code byte } array .
decodes the specified signed byte from the { @code byte } array .
decodes a signed byte array into a byte array .
decodes the specified byte array into a byte array .
decodes a signed short from a byte array .
decodes the given signed { @code byte } from the { @code byte } array .
decodes a signed byte from a byte array .
decodes a signed byte array from the { @code char } array .
decodes the given byte array from the { @code byte } array .
decodes the given signed { @code boolean } from the { @code byte } array .
decodes a float from the given { @code byte } array .
decodes a signed byte array from the given { @code byte } .
decodes a double from the given { @code byte } .
decodes a double from the given byte array .
decodes the given byte from the given byte array .
decodes the given byte from the given { @code byte } .
decodes the given byte from the given byte array .
decodes the specified 64 encoded string from the given byte array .
reads a stream from the input stream .
reads the contents of the input stream into a { @link } .
decodes a byte array into a byte array .
decodes the given byte array into a byte array .
create a for the specified .
generate a list of all datasets in the dataset .
create a new for a given path .
{
register a class name with the given class name .
register a class name to be used for debugging .
transform the given into a object .
convert a to a
translate a to a object .
get the { @link } for the given { @link } .
persist the current state of the file .
find the last file of the given file .
purges the current disk cache .

/ * ( non - javadoc )
advances the next number of lines to the next number .

/ * ( non - javadoc )
sets the consumer for the .
{
receive notification of the start of a start element .
builds the for the given .
returns the size of the specified size .
returns a new { @link } with the given { @link } .


returns a byte array that contains the byte array of the given byte array .
returns a byte array that represents the bytes of the given offset .
returns a new { @link } that represents the { @link } that is the first bit of the first bit .
returns a new { @code } instance containing the given { @code offset } .
returns a new { @link } that is used to store the given number of elements .
creates a { @link } from the given byte array .
creates a { @link bitvector } from a { @link } .
split a file into a list of files .
splits all files in the given { @link workunit } to the given { @link workunit } .
this method is called to merge the file to the given file .
creates a { @link } from a { @link writablebytechannel } .
serializes the given byte array into a byte array .
convert an array of bytes into an array of { @code } .
creates a object from a given { @code } .
copies the size of the given { @code } to a { @code } .
returns the smallest bit of the specified bit .

create a new { @link } instance .
creates a reader from a bit file .
factory method for creating a new { @link } .
write the ncml - in document to the output stream .
creates a new index of the given { @code } .
compare two { @code } and { @code b } .
returns the number of occurrences of the given number of times .
get the variable name for the given variable .
creates a new bit based on the specified indexes .
deserializes a byte array into a byte array .
converts a data object into a string representation of the given data object . <p >
creates a new instance .
creates a new instance .
format a string .
checks if the given class is a valid protocol .
parses a string into a string .




create a { @link } from the given url .

starts the dialog . <p >
parses the arguments and return the result .
record the record in the given { @link } .
{
call the command to process the command .

shows the ui artefacts of the screen .
process a wave from wave .
{
{
{
calculate the offset in the form of the .
{
{
check if the uri is a valid uri .
get the input output file with the given configuration .
sets the list of nodes to be included in the list .

{
check if the file is valid .
open a new netcdf file .
add attributes for the attributes .
read data from a variable .
wml2 : datetime :
get the coordinateaxis from the netcdf axis .
get the shape name from the netcdf name .
adds a new listener to the list of listeners .
builds the for the given node .
{

process the fields of the fields of the given class .
processes the annotations for the given annotation .
add the given action handler to the given handler .
add a { @link } to the { @link } .
build the .
gets the next .
lists all of the brokers in the batch .
check if the given user has a state
get the project id for the given project id .
creates a new job and returns the job id .
delete job .



{
reads the double value from the given double value .
reads the number of integers from the given calendar value .


{
called when a task is completed .
/ * ( non - javadoc )
writes the data to the output stream .
writes the data to the output stream .
/ *
returns the title of the textbox .
adds a new file to the list of changes .
returns all the work units .
compares two points in the given tolerance .
{
create a launcher driver .
wraps the request into a {
initializes the reader .
{
{
{

loads the user edit settings for the given action . <p >
get the list of tasks that are used to create the tasks .
{
{


close the .
shutdown the server .
get the for the given .
/ * ( non - javadoc )
{
close the connection and reset the state of the .
returns the algorithm that is used to generate a totp - safe algorithm that is used by the algorithm .
returns true if the given {
opens a new path . <p >
creates a tree tree for a given resource . <p >
performs the search for the given site . <p >
updates the root folder and children . <p >
{
{

finds the name of the type in the given name .
returns the type of the given type .
{
sets the value of the value of the given value .
reads the list of available entries from the given list of available names from the given list of available names . <p >
adds a new table to the list of . <p >
reads the given from the given . <p >
creates the index and fills the list of . <p >
returns all the users groups in the map . <p >
{
{
{
submits the dialog to the current user . <p >
adds the specified field to the layout .
add a new value to the map .
returns the list of all the fields in the given group . <p >

read a resource from the given resource .
reads the resource from the given resource and returns a string representation of the resource .
reads the given file from the given file .

check if the flag is true false otherwise

aborts the given . <p >
returns the last link in the vfs . <p >
set the list of variables to make sure that the list is in the list of dimensions .
check that the dimension is aligned for the given dimension .
find the group with the given name .
create a launcher launcher with the given jobtype and path .
create a launcher launcher launcher launcher for the given job and job name .
create a launcher launcher launcher launcher configuration .
creates a new { @link } with the given { @link } .
creates a new { @link } instance .
creates a new { @link } with the given properties and values .
puts a { @link properties } object into a { @link properties } object .
put properties into the properties object .


creates a new object from the given object . <p >
returns a list of all elements in the given element . <p >
push event to the .
converts value to a string .
removes all entity attributes from the entity . <p >
generate the id id for the id .
add a mapping to the map .
{

get the 3d coordinates for a given offset .
get the 1d 1d index of the given coordinates in the range [ 0 ] .
/ *
returns the vector of the given array of doubles .

/ * ( non - javadoc )
check if the file is valid .
open the randomaccessfile / field .
get the detail information for this object
create a new variable .
create a variable with variable name and value .
this method is used to resolve a variable to a variable .
add attributes to the attributes .
returns the number of the in the given .
create a with the given .
create a new array with the data array and the length of the array .
create a variable reference for a variable .


transfer triples by attribute to target .

find the group of the group
returns true if the given { @link } is annotated with { @link } .
injects the component to the component .
injects the given component into the component .
sets the value of the style . <p >
injects component component component component of the given component .


injects the given component to the given { @link component } .
----- private methods -----
{
returns the list of selected options . <p >
initializes the dialog . <p >
{
get the schema for the given schema .
add avro schema to the schema .
{
{ @inheritdoc }

flattens a schema into a map of schema schemas .
{
enable disable view .
removes the user from the opencms user . <p >
creates a new token with the given user id . <p >
validates the user in the given opencms user . <p >
set the { @link } for the given { @link } .
adds a new { @code } to the given destination { @code } .

loads all the states of the given { @link } .
loads the state of the given { @link } .
get the name of the .
removes the principal from the opencms context . <p >
get the { @link } for the given { @link } .
get the key .
get the { @link } for the given { @link elementdescriptor } .
print the output of the output file .
print the output file to the output .
print the postgres file marks the specified output file .
print the value of the file .
print all values in the output file .
print a variable .

print the data in the dds .
print the given string to the given string .
print a new array with the given value .
write the contents of the given to the given output stream .

returns the output stream for the given outputstream .
returns the date of the date picker .
returns true if the given is a valid carrier .
deselects the selected navigation button . <p >
returns a predicate that evaluates to true if the given predicate is a { @link predicate } .
returns a predicate that evaluates to true if the supplied predicate evaluates to true .
returns a predicate that evaluates to { @code true } if the supplied predicate is { @code true } .
selects a button widget . <p >
apply the operator to the given .




compute the double - precision bit double .
converts a byte array into a byte array .


create a new .
creates a new { @link } for the given { @link } .



get the 3d coordinates for a given dimension .
get the 1d 1d array of the given .
returns the vector of the given vector .
compute the bounds of the given .
create a new { @link } instance .
register a stopwatch that will be run as a stopwatch with the given delay .
generates a rsa key for the aes key .
paint the graphics context
build the list of children .
returns the set of nodes reachable from the nodes of the node .
{
returns a new { @code joiner } that will be used to create a new { @code } .
merge this node into another one .
print the data in the dds .
print the variable s variables and return the result .

{

sets the parent view .
/ * ( non - javadoc )
get the maximum value of the given axis .
{
paint the graphics context .
returns the shape for the given shape .
{
{
{
returns the number of strokes in the direction of the specified position .
{

verifies that the input is valid .

get the total number of files in the record .
save state to the file .
read the records from the file .
get the read count for the given { @link file } .
write a { @link } to a file .
/ * ( non - javadoc )


add a new to the job .
/ * --- private methods ---
add a file to the list of files .
/ * private ( ) { = . ( ) ;
adds a file to the list of files .

prepare the given { @link } to the given { @link } .
cleans up the job files .
adjust the counters of the job counters .
add a new partition to the .
get the for the given .
sets the to use for the given .
convert a record to a json array .
converts value to json string .
{
open a new <code > / code > object .
get the image for the given image .
{

gets the action .
creates a file with the given name and path .

add a new provider to the registry .
returns the provider for the specified name .
returns a metric instance for the specified key .
{
creates a new { @link file } from the given { @link file } .
purges the snapshots from the file .
check if the file is valid .
create a new document document .
updates the current editor . <p >
create a new shape with the given shape .
compute the shape for the given shape .
increments the index of the bit at the specified index .
/ * the range of the next range is the number of nodes that are the number of nodes that are structurally equal .
primes the index and the index of the given index .
/ * ( non - javadoc )
sets the raw data for this content . <p >
sets the path to the given path . <p >
index a dimension .
returns the index of the first occurrence of the specified shape .
returns a new array containing the indices of the first dimension of the first dimension of the first dimension of the first dimension of the first dimension of the first dimension of the first dimension of the first dimension of the first dimension of the first dimension of the first dimension of the first dimension of the first dimension of the first dimension
returns a new iterator for the iterator .
returns the number of bits in the current element .
sets the number of bits in the current state .
sets the index of the specified index .
sets the value of the specified dimension .
sets the index of the specified number of times .

set the {
get the xml templates from the given file .
write the given xml - encoded xml representation of the given xml .

writes the xcal element into the given writer .
write the xml to the output stream .
{
adds a listener to the list of listeners .
initialize the .
notifies all listeners that the root of this has been deleted .
check if the specified file has been changed .
create a new { @link } instance .

create a new from the given parent file .

delete the given entry from the list .
get the list of paths from the file .
displays the value of the form field . <p >
sets the visibility of the .
sets the visibility of the radio buttons .
sets the visibility of the map .
sets the visibility of the editor . <p >
sets the visibility of the visible area .
sets the visibility of the visibility class .
sets the preferred visibility of the 1px anchors if the picker is not visible .
listen to the user .
initialize fields with the default fields .
initializes the . <p >
returns the opencms type of the opencms vfs . <p >
get the 3d coordinates of the given points .
get the 1d 1d 1d array of coordinates in the given coordinates .
{
initializes the widgets . <p >
returns a { @link } that will be used to create a { @link } .

get the type of the element .
get the double shape for a given variable .
get the double value of the given double .
returns the value of the specified object .
upgrade the file to the given file .
create a new pid from the given namespace .
/ * ( non - javadoc )
get the namespace value for the given namespace .

loads the resource for the resource identified by the given resource id . <p >
converts a { @link } to a { @link activity } .
converts a { @link activity } to a { @link } .
converts a { @link } to a { @link } .
converts the activity into a {
/ * ( non - javadoc )
add the configuration to the configuration .
creates a new { @link } from the given { @link properties } .
returns the page data for the page . <p >

tries to find the rectangle that is aligned to the specified rectangle .
/ * ( non - javadoc )
paints the border of the panels panel .
{
adds the components to the list of components that are registered with the specified component .
get all the columns of the given type .
checks if the given configuration is a valid configuration property .
get the list of components that should be used to visualize the component .
returns the { @link } for the given { @link component } .
returns the output of the .
checks if the job is a valid .
returns true if the { @link } is in the { @link } .
get the file path from the file system .
creates a .
returns the label of the given job .
returns the label value of the label .
unpacks the .
configure the .
set the compiler environment .

sets the home connection to the system .
/ * ( non - javadoc )
get the environment variables for the given request .
checks if the given date is a valid date .
scan the package of the package .
scans the classpath for the given package name .
scans the classpath for the given package name .
scan the given file and returns the first matching build file .
wait until the server is stopped .
get the list of all the substitutions that match the condition .
set the member data .
{
get the member data .
get the double value of the member with the given member .
get the double array for a given array .
get the float indices for the member .
get the array of float indices .
get the scalar value member of the given member .
get the byte array of the given member .
get the index of the field with the given member .
get the index of the given member .
get the short value for the member with the given member .
get the short array for the given member .
get the scalar member field .
get the array containing the members of the given array .
get the scalar value member member .
creates a new instance of the specified table . <p >
creates a new { @link } instance for a given class . <p >
returns a table containing all tables for the table .
builds a list of beans to a list of rows . <p >
returns the style of the preference s value .
returns the property filter for the given filter . <p >
returns true if the given view is a macro name . <p >
get the array of char array .
get the member string .
get scalar field that is a scalar space .
register a class .
register a class with the given class .
open a featuredataset from a url .

reads a content definition from the given resource type . <p >
returns the content type definition . <p >
returns a resource handler instance for the given resource . <p >
unmarshals the given xml content from the xml content . <p >
/ * ( non - javadoc )
writes the data to the output stream .
creates a new xml content definition . <p >
unmarshals the given xml content from the xml content . <p >
creates a name type name .
validates that the attribute value is valid . <p >
validates that the attributes are not valid . <p >
validates the given element and returns the result . <p >
gets the content definition for the given schema . <p >
translate the schema to the schema . <p >
externalizes a { @link } to a xml element . <p >
adds a new xml element to the xml xml element and returns the xml element . <p >
unmarshals the given xml content from the xml content of the xml content . <p >
adds a new xml schema to the list of . <p >
creates a default xml element with the default xml configuration . <p >
creates a new xml document from the given xml content . <p >
creates a new xml element with the given locale . <p >
returns a schema for the given path . <p >
gets the xml schema schema . <p >
returns the schema schema for the given xml schema . <p >
sets the name of the .
returns the xml schema schema . <p >
{
{
{
sets the value of the given attribute as a { @code } .
sets the value of the { @code attribute } property .
{
close the file .
{
normalize the absolute url .

normalize the absolute path to the absolute path .
returns the port for the given port number .
{
{
copy properties from the given properties to the given properties object .
parses the given parameters and returns the parameters .

{



process the remote server .
put the given url into a new server .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
remove a relationship from the matchspace .
validate the given .

writes the geometry to the list .
/ * ------------------------------------------------------------
closes the underlying file .
get value from the given cell .
creates a new { @link } with the specified options and the current position .
update the html for the given html browser .
get the id of the .
refresh the state of the database .
adds the given { @link } to the given { @link } .
add a new to the list of listeners .
visits a method instruction .

submits the dialog and initializes the date . <p >
sets the object to be used for the given object .
adds a new resource to the list of resource files . <p >
returns the full path for the given project . <p >
creates a temporary project . <p >
initializes the form fields . <p >

get the property value for the specified key .
get the property value for the given key .
sets the value of the property .
sets the value at the specified index .
sets the index of the specified property .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the value of the specified property .
sets the value of the specified key .
creates a method with the given parameters and arguments .

returns the property value of the specified property .
get a property as a string .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the format of the given .
/ * ( non - javadoc )
{
apply the given { @code } to the given { @code uri } .
tries to find the cached url for the given url .
returns the url of the connection .

get the url to the url .
read data from the data array .
open the file .
returns the list of queues for the given queue .
/ * ( non - javadoc )
add a new value to the list .
get a { @link } for the given { @link } .
adds a provider to the given provider .
remove a specific provider from the given provider .
get the xml data from the given namespace .
sets the { @link } for the given { @link } .
check if the given { @link } is valid .
appends the parameter to the given url . <p >
appends the given url to the given url . <p >
create a map parameter map with the given parameters .
creates a map of parameters to the given parameters .
creates a map of parameters from the given parameters . <p >
encodes the form of the form . <p >
encodes the given uri into a uri url . <p >


returns the map of the attributes of the map . <p >
returns the value of the property .
get the value value for the given cookie name .
build the list of hosts .
returns a json map of parameters for the given parameters .
returns the first parameter if it is not present . <p >
returns the first parameter if it is not present . <p >

compute the scores for the scores .
returns a { @code } that encodes the raw values of the form { @code } . <p >
returns the url of the url from the url . <p >
get the value of the request .
find the best matching segment with the specified segment .
reads the file and returns the file . <p >
reads the file contents from the given file and returns the file name . <p >
read the parameters from the given map . <p >
updates the redirect link to the given target . <p >
redirects the redirect to the given redirect url . <p >
remove a session from the request .
sets the value of the request .
sets the http headers . <p >
get the component that is used to identify the component .
log a message with the given message . <p >
gets the service . <p >
generates the html code for the html code . <p >
returns a list of all items in the given list of items . <p >
print the constraint .
{
/ * ( non - javadoc )
{
{
opens a new resource for a given resource . <p >
adjust the to the top height .
initializes the content . <p >
unlocks the given lock . <p >
returns the message for the given message . <p >
{ @inheritdoc }
writes the given {

returns true if the given { @link } is available for the given { @link } .
/ * ( non - javadoc )

remove the last occurrence of the last occurrence of the last occurrence of the last item .
store the data in the file .

updates the resource for the given resource . <p >
sets the resource image . <p >

builds the html for the search . <p >
initializes the button with the given date and time . <p >
returns a copy of the current user . <p >
returns the best - matching resources for the given collection . <p >
remove a local variable from the local variable .
returns whether the user has the given xmpp address .
returns true if the user has the specified occupant .
send a message to a jingle message .
add a message to the remote server .
add a new to the .

/ * ( non - javadoc )

initialize the connection manager .
sends a response to the server .
sends a response to the server .
check if the current state is not valid .
check if the exception is a valid connection .
report the state of the state .
report a failure message .
report a report of the exception .
wait until the condition is satisfied .
checks if a response is a valid connection .
/ * ( non - javadoc )
{
{
{
{
/ * ( non - javadoc )
{
{
check if the file is in the file .
read the block from the block .
get the file cache for the given file .
get the file cache for the given file .
sets the flag .
returns all files in the list .
closes the file .
seek to the next position in the buffer .
returns the length of the file .
flush the file to the output stream .
reads a number of bytes from the stream .
reads the data from the given byte array starting at offset pos .
read the data from the file .
reads the next byte from the given file .
reads the contents of the given byte array into a byte array .
write the contents of the file to the specified offset .
writes the data to the file .
read a short value from the stream .
reads a signed integer from the stream .
reads a number of bytes from the input stream .
reads a long from the stream .
read a float from a float array .
read a double from the given double array .
read a string from the specified byte array .
get the maximum number of bytes in the specified string .
write a boolean value to the given boolean value .
writes a short to a short .
writes the char array to the specified character stream .
writes a number of bytes to a stream .
writes a long to the specified long .
write a float array to a float .
writes a double to a double .
writes the string to the output stream .
writes the specified character to the specified character .
write a string to the stream .
writes a string to the given string .
find the next matching bmp from the specified offset and the offset of the specified file .
{
main method .
{
serializes the given message to a byte array .
returns the raw message from the given message .
serializes the message to the given message .
get the uri for the uri .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
reads a message from the given message .
returns a string that is a pascal string that is a pascal string that is a pascal string that is a string that is a greater equal to the specified length . <p >
checks if the given string starts with the specified prefix .
returns true if the given string is a substring of the given text .
returns the index of the specified needle in the specified index .
searches for the specified substring in the string array .
returns true if the given pattern matches the specified pattern .
capitalizes the first letter of the first letter of the first letter .
format a number .
/ * ( non - javadoc )
check if the queue is currently in the queue .
{
/ * ( non - javadoc )
check if the current mode is the same as this
returns a new { @link } with the given id and id .

returns a map of all the objects that are used to generate the user .
check if the given { @link } is not available .
/ * ( non - javadoc )
sends a sasl challenge to the server .
fire the user change event to fire the . <p >
/ * ( non - javadoc )
this method is called to shut down the page .
start the current page .
process the current page of the current page .
opens the dialog for the given dialog . <p >
opens a new dialog resource . <p >
reloads the specified page .
sets the list of to be used for the given .
parses the resources from the resources . <p >
/ * ( non - javadoc )
loads the image from the given url .
clear the given url .

/ * ( non - javadoc )
create a new { @link } with the specified number of bytes .
get the width of the image .
get the width of the image .

set the status code for the status code .
adds the tail of the tail to the tail of the record .
remove the head of the list .

convert a latlonpoint to projection coordinates
convert a latlonpoint to a latlonpoint
get the for the given connection .
sets the for the given .
returns true if the specified service is active .
returns the preferred protocols of the protocols .
returns a stream of the that is used to receive the given stream .

verifies that the given transfer is a transfer message .

/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new for the given message .
this method is used to execute a {
/ *
get the name of the type .
creates a dialog for the given message .
get the bounding box for the bounding box
get station for a given station .
get iterator from the data grid
get iterator from the .
generate a new expression .
{
get a { @link } for the given { @link } .
find the first matching type for a given key type .
find the saga instance for a saga instance .
add a new name to the list .
get the list of active connections for the given user .
adds a symbol to the specified symbol .
returns the first occurrence prefix for the given prefix .
creates a new { @link } instance for a given type .
add all the contents of the list to the list .
get the hash of the .
{
get the date time from the given date
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
add a parameter to the specified value .
add a parameter to the specified value .

writes a tag to a stringbuffer . <p >
add a parameter to the specified value .

compare the table .
add a new message to the list of .
add a new message to the list of .
get the message from the message .
returns the type of the type of the given code .


adds a { @code int } to the specified value .
initializes the { @link } for the given { @link } .
removes the root folder of the given resource . <p >
initializes the locale . <p >
sets the value of the preference s value .
get the person of the person person .
formats the given { @link } with the given { @link } and the given { @link } .

/ * private (
connects to the server .
disconnects from the current network .
send a message to the specified channel .
registers a new listener for the given listener .
registers a listener for the specified listener .
registers a listener for the given listener .
clear the map of all consumers in the map .
validates the signature of the given signature .
generates a new hmac signature .
subscribe to a channel .
subscribe to a channel .

subscribe to the specified channel .
disables the { @link } and disables the { @link } .
checks if the channel is currently being sent to the channel .
sets the proxy server for the given host and port .
get the for the given .

enable or disable the
sets the amount of the .
sets the maximum time .
/ * ( non - javadoc )

/ * ( non - javadoc )
{
{
decode the input input with the given input .
creates a new .
reads the input stream and returns the result .

get the pixel value for the given raster .
get the pixel values for the image .
validates the image .
draw a coverage data image from the given tile array .

draw a coverage data image from a coverage data image .
creates a new texture image with the specified texture .
sets the pixel value for the image .
sets the pixel value for the given pixel pixel pixel value .
create a new tile filled with the given shape .
merge the given result into a new one .
/ * ( non - javadoc )
configure the default configuration for the configuration .

{
this method is used to determine the configuration of the .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
process the event .
compute the for the given task .

adds a new item to the list .
gets the value of the item in the given item .
add a new extension to the list of extensions that are not in the given extension .
get the cached geopackage
calculates the sunset date of the given date .
returns the instance of the instance .
/ * ( non - javadoc )
{
{
{
{
{
{
{
{
{
check if the cursor is not a boolean
fills the xml element with the given attributes . <p >
sets the type of the { @code } .
decodes the specified byte array into a byte array .
returns the image as a byte array .
flush the input stream to disk .
get the pixel value for the pixel .
read the pict data from the sas7bdat file .
gets the link image for the given resource . <p >
returns a { @code } that is a member of the given member name and member name and member name and member name .
creates a new { @link } instance for a given member .

query the location of the given type .
set the list of for the given location .
set the list of objects .
sets the progress of the scene .
returns the index of the first indexed by the specified index .
find the index of the featurable at the deepest level .
searches for the feature index within the given row index .
find the feature index of the feature row with the given index .
deletes the set of indexes in the given collection .
deletes the index of the specified index .
delete the index of the geometry .
adds a new resource collector to the list of parameters . <p >
{
adds the specified resource to the list of resource configurations . <p >
returns true if the given query is a substructure .
returns the list of all the feature types in the given type .
retains the collection of objects .
query the feature index of the feature table
counts the number of rows in the table .



get the bounding box for the bounding box
returns the context of the given resource . <p >


sends a message to the specified mail account .
sends a message to the specified host and port .
sends a message to the specified mail account .
sends a { @link mail . } .
sets the host to use for the given host .
returns the resource type resource type . <p >
returns the resource type for the given resource type . <p >
get the file name of the file .
get the file path from the file path .
sets the template to use for the given template . <p >
checks if the resource type is a resource type .
sets the configuration for the module . <p >
sets the resource translator . <p >
shuts down the list of resources . <p >
returns the rfs name for the given template file . <p >
initializes the html for the html page . <p >
registers a new server with the specified type .
initializes the mime types for the given mime type . <p >
initializes the resource type . <p >
initializes the resource types for the resource . <p >
reads a single resource from the given path . <p >
selects the title in the given category . <p >
creates a property property property property name . <p >
fills the detail field from the given field descriptor . <p >
fills the content of the given item . <p >
read the next record from the cache .
solve the x = b and w .
creates a new html for the html page . <p >
parses the given gallery widget . <p >
get the button bar for the given title .
returns the button bar for the given button . <p >
returns the button bar for the given button . <p >
returns the list of selected languages . <p >
initialize the .
returns the name of the button for the given name . <p >
parses the options from the given options . <p >
handles a cluster membership change event .
bootstraps the given { @link } .
bootstraps the given { @link } .
returns an iterator over the elements of this batch .
fetch the results from the given position .
creates a url for a file .
add a { @link } to the { @link } .
converts the given xml content to a xml page . <p >
returns the templates for the given template . <p >
returns the template beans for the given resource . <p >
set the adapter to be notified when the adapter adapter is not currently called by the adapter .
initializes the configuration . <p >
this method is used to check the compression compression compression compression .
initializes the opencms workplace configuration . <p >
add a name to the compiler .
{
{
loads the resource from the opencms vfs . <p >
adds the selector to the list of actions .
returns a list of all actions .
returns a list of all elements that are contained within the given selector .
checks if the node has a node in a subtree .
returns the number of active elements in the list .
binds the given { @link } to the sentry server .
binds the given request to the given url .
create a new { @link } with the given host and port .
creates a new { @link } instance .
returns an iterator of all the elements in this iterator .
convert a { @link } to a jts { @link multipoint } .
convert a { @link polygon } to a polygon .
convert a latlonpoint to a latlonpoint
converts a { @link } to a { @link multipoint } .
convert a { @link latlonpoint } to a { @link latlonpoint } .
convert a { @link linestring } to a { @link linestring } object .
convert a { @link matrix4d } to a { @link } .
convert a json representation into a geometrycollection object .
convert a { @link } to a { @link } .
converts a { @link polygon } to a { @link polygon } .

convert a to a multipolygon .


convert a into a object .

create a polygon and a polygon
create a new from the given linestrings .
creates a point from a point in a point .
computes the absolute points in the input array .
get the id from the given { @link } .
sets the state state .
shows the report for the current thread . <p >

sets the last index of the last item in the list .
register a { @link } to the provided { @link } .
register a single index .
clear all commands that are currently running .
{
clear the sequence of all the commands in the list .
commit the head of the given event .
get the next event in the queue .
clear the index of the queue .
sends the event to the event .
open the connection .
adds a new field to the opencms vfs . <p >
adds a new field to the opencms vfs . <p >
converts a string array to a { @code string } .
converts a list of strings to a list of strings .
setter for - sets the .
setter for - sets the trusted user trusted user identity provider .
***********************************************************************************
add a new child property to the given path .
returns a <code > enumeration< / code > of the <code > / code > property .
returns true if the specified { @code } is not a valid { @link } .
sets the active { @code } .
sets the child to the set of child elements .
fills the file with the given value .
deletes the given file .
ensures that the given directory is not valid .
ensures that the given file is not valid .
deletes the given file from the given file .
creates a new empty file with the given length .



creates a { @link file } for the given { @link file } .
check that the file exists in the file .

maps a { @code long } to a { @code long } .
unmaps a file from a given address .
get the for the given .
performs the action on the editor . <p >
/ * ( non - javadoc )
***********************************************************************************
get the value of a key from the map .
returns the sum of all values in the specified list of values .
removes the specified element from the list .
returns true if the specified key is a set of the specified size .
returns true if the value is a value of the specified value .

puts a new value into the map .

clear the map .
write the data to the stream .
/ * this method is called when the buffer is not written to the buffer .

stop the .
get the data for this object .
the given and convert it to a .
checks if the navigation mode is enabled . <p >
creates a new .
start the server .
{
creates a new { @code } with the given { @code throwable } .
logs a throwable with the given exception .
creates a table table for the table . <p >
creates a new table . <p >
creates a new context for the given context .
enable the current thread .
updates the tag tag . <p >
validates the start of the next open position .
returns the last line of the line .
returns the last line of the given line .


{
decrypts the given password using the specified salt and salt .
decrypts the given encrypted data using aes - 256 .
decrypts the given pkcs12 string .
encrypt the specified secret .
encrypts the given secret with the given key .
encrypts the given secret with the specified salt and secret .
add a new { @link } to the given { @link } .
returns the first child of this node .
finds the { @link } instance .
returns whether the given property is a webdav - node or a dav - > and the parent is a webdav - element .
sets the dav - .
sets the dav - name of the .
sets the { @link } for the given <code > / code > .
{
add a new to the list of listeners .
triggers a trigger to the end of the trigger .
initializes the object with the given object .

get the url for the given url .
returns the array of all the in the array .
returns the list of for the given css . <p >
returns the list of registered configuration for the specified configuration . <p >
returns the configured settings for the given resource . <p >
returns the default action for the given action . <p >
returns the default configuration list for the current user .
returns the editor editor for the given resource . <p >
returns the editor type for the given type . <p >
returns the list of installed . <p >
initializes the workplace workplace workplace ui . <p >
loads the plugins .
stores the current user s settings . <p >
returns the list of users for the user . <p >
sets the user permissions . <p >
adds the configuration to the list of profiles . <p >
loads the folder from renditions . <p >
loads the configuration for the application . <p >
loads the categories for the given user . <p >
loads the configuration settings . <p >
loads the configuration for the opencms workplace . <p >
creates a tag from a given tag .


returns the maximum size of the .
checks if the plan is a .
/ * ( non - javadoc )
/ * ( non - javadoc )
set the options used to configure the .

get username from a file .
add a user to the user .
main method for testing
creates a new .
returns the for the given .
/ * ( non - javadoc )
===============================================================

calls the method on the given { @code } .
/ * ( non - javadoc )
negotiates the value of the gauge .
returns the key of the key press .
inserts a object into the list of .
converts a { @link } to a { @link } .
returns the value of the specified value in the range [ 0 ] .
{

{
returns a flowable that emits the items emitted by the source publisher that is the first of the source publishers and the publisher emitted by the source publisher . <p > <img width = 640 height = 515 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single .
returns a flowable that emits the items emitted by the source publisher that is emitted by the source publisher and emits the source publishers . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt
concatenates the source publishers into a single { @link publisher } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . concat . pn . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher and emits the specified subscriber . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b
returns a flowable that emits the error items emitted by the source publisher . <p > <img width = 640 height = 190 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits items emitted by the source observable into a single item . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher into a single { @link subscriber } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source and a specified { @code future } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl > <dt >
converts a { @link future } to a { @link connectableflowable } that emits the first item emitted by the { @link publisher } s . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png
returns a flowable that emits the items emitted by the source publisher into a single { @link publisher } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <p > eager
returns a { @link connectableflowable } that applies a { @link } to each item emitted by the finite { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / generate . png alt = >
returns a cold synchronous scheduler . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd > the
returns a cold synchronous scheduler . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd > the
returns a flowable that emits the items in a specified { @code subscriber } and the specified { @code oncomplete } and the specified { @code oncomplete } and the specified { @code oncomplete } and the specified { @code oncomplete } and the specified { @code oncomplete } and the specified { @code oncomplete } and the specified { @code oncomplete }
returns a flowable that emits the long value of a specified scheduler . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . s . png alt = > <dl > <dt > <b > backpressure : < /
converts a publisher into a single { @link io . reactivex . } and { @link publisher } s . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . s . png alt = > <dl >
returns a single that emits the items emitted by the source publisher that match the predicate . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / takeuntil . . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher that are emitted by the source publisher and the specified publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt =
returns a { @code flowable } that emits the items emitted by the source publisher and returns a { @link maybe } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = >
returns a single that emits the items emitted by the finite source publisher into a single item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / collect . png alt = > <dl > <dt > <b > backpressure
maps the upstream items into publishers and returns a single item emitted by the finite source publisher . <p > eager concatenation is preferred for multiple threads in a single way that allows to combine the items emitted by the finite publisher into a single single value . <p > <img width = 640 height = 305 src = https : // raw
maps the upstream items into a single observablesource . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . pn . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source publisher into a single - value publisher . <p > if the publisher completes the resulting publisher emits the resulting observablesource . <p > if the upstream { @code publisher } emits the first item emitted by the source publisher and then completes the resulting { @code nosuchelementexception } . <p >
maps each item into a single { @code publisher } into a single - value publisher . <p > eager concatenation means that once a publisher is emitted by a single item that is emitted by the source publisher and then emitting the items in a single single single - - input sequence and returns a single - value pair of values .
maps the upstream items into publishers and returns a single - value of the values emitted by the finite source publisher . <p > if the upstream { @code publisher } emits the first item emitted by the source publisher and then completes the resulting { @code nosuchelementexception } . <p > if the publisher signals the number of items emitted by the
maps each item into a single { @code publisher } into a single - value publisher . <p > if the upstream { @code publisher } emits the first item emitted by the source publisher and then flattens the resulting values into a single { @code single } . <p > if the upstream { @code publisher } emits the first item emitted
returns a flowable that emits items emitted by the source publisher and a specified item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher and delays any emitted items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = >
returns a flowable that delays the specified delay in the specified { @code scheduler } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher and the specified subscription once the source publisher completes . <p > <img width = 640 height = 450 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl
returns a flowable that emits items emitted by the source publisher and the specified publisher . <p > <img width = 640 height = 335 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / flowable . png alt = > <dl > <dt > <b > backpressure : <
calls the {
returns an item that emits the item emitted by the source publisher and a specified item . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . t . png alt = > <dl > <dt > <b >
returns a flowable that emits items emitted by the source publisher and a specified number of items emitted by the finite source publisher . <p > if the sequence of items returns a single value of a single value it will be wrapped in a single { @code nosuchelementexception } .
returns a flowable that emits the items emitted by the source publisher and the specified values in the sequence . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt
returns a flowable that emits items emitted by the source publisher into a single item . <p > if the operator returns a single value of a single value it will be wrapped in a single that emits the other singlesource . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki
returns a flowable that emits items emitted by the source publisher and the specified { @code single } and emits the first item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single .
returns a single that emits the item that is a single item that is a single item that is a single item that is a single item that is newer than the current item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images /
returns a flowable that emits the items emitted by the finite source publisher and then applies the downstream downstream to the downstream . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl >
returns a flowable that maps the upstream items into publishers and returns the result . <p > if the upstream publisher completes up to the specified values it will be checked for the mapping of the upstream items . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex /
returns a flowable that mirrors the source publisher and then merges the items emitted by the source publisher . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <p > the operator honors the
returns a flowable that emits buffers of publishers from the source publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the items emitted by the source publisher and then drains them in a specified type . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl >
returns a flowable that emits the items emitted by the source publisher that is emitted by the source publisher . <p > if the flowable is empty this method returns a { @code 0l } that is emitted by the source publisher . <p > if the flowable is empty this method returns a { @code 0l } that is emitted by the
returns a flowable that emits the items emitted by the source publisher that is emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt
returns a flowable that mirrors the source publisher resubscribing to it s items that are emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher and then propagates the notification to the downstream downstream . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <p
returns a flowable that mirrors the source publisher and the specified value and emits the specified value if it encounters a publisher that emits the items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
returns a flowable that emits items emitted by the source publisher and an item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt
returns a flowable that mirrors the source publisher and the specified { @code oncomplete } and notifies the specified { @code oncomplete } and notifies subscribers of the specified { @code oncomplete } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a flowable that emits the items emitted by the source publisher and then flattens the specified publishers into a single { @link connectableflowable } and { @link publisher } to a specified { @link publisher } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava
returns a flowable that emits the items emitted by the source publisher and the last item emitted by the source publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / takeuntil . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher that is emitted by a specified function and emits the downstream item emitted by the source publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single
returns a flowable that emits the items emitted by the source publisher resubscribing to the current items emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl >
returns a flowable that emits the items emitted by the source publisher resubscribing to the current time and the specified predicate . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt
returns a flowable that emits the most recently emitted of the specified { @code subscriber } and { @code oncomplete } and returns the { @code 0l } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry .
dumps the specified <code > printwriter< / code > to the specified print .

returns a flowable that emits the items emitted by the source publisher that is emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt > <b
returns a flowable that mirrors the source publisher and the specified accumulator and the result of the previous item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt
returns a flowable that mirrors the source publisher and the specified values and calls the { @code function } to determine whether the items emitted by the source publisher is determined by a function to determine whether the items emitted by the source publisher is less than the specified downstream . <p > <img width = 640 height = 305 src = https
returns a single that emits the item emitted by the source publisher that is emitted by the source publisher and emits the item emitted by the finite source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single
find the class of the given class .
returns a flowable that emits the items emitted by the source publisher that is emitted by a specified scheduler . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / skip . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher and emits the specified items in a specified { @code publisher } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt
returns a flowable that emits the items emitted by the source publisher and then drains them in a specified { @code publisher } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt =
returns a flowable that emits items emitted by the source publisher and a specified value in a specified scheduler . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / startwith . png alt = > <dl > <dt > <b
subscribes to the specified consumer item . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . s . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
returns a flowable that emits the items emitted by the source publisher when the source publisher completes . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt > <b
returns a flowable that maps items emitted by the source publisher into a single { @code flowable } . <p > <img width = 640 height = 356 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . t . png alt = > <p > <b >
returns a flowable that emits items emitted by the source publisher into a single single item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . t . png alt = > <p > <b > note :
returns a flowable that emits buffers of items emitted by the source publisher that is emitted by a specified scheduler . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / skip . png alt = > <dl > <dt >
returns a flowable that mirrors the source publisher and emits items emitted by the source publisher and then propagates the items emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . .
returns a flowable that mirrors the source publisher and then propagates the items emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
returns a flowable that mirrors the specified publisher and then propagates the items emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl > <dt >
returns a flowable that mirrors the source publisher and then returns the item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . png alt = > <dl > <dt > <b >
returns a single that emits the items emitted by the finite source publisher if the items are a finite item . <p > <img width = 640 height = 385 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <dl >
returns a single that emits the items emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . t . png alt = > <dl > <dt > <b > backpressure : < /
returns a single that emits the first item emitted by the source publisher that is the first item emitted by the source publisher and then flattens the items into a single { @code } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a flowable that emits buffers of items it collects from the source publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . s . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits items emitted by the source publisher that is specified by the { @link scheduler } or { @code count } items emitted by the source publisher . if the source publisher completes the resulting observablesource emits the item emitted by the source publisher . if the publisher completes the resulting publisher emits the item emitted by the source
returns a flowable that emits windows of items it collects from the source publisher . <p > <img width = 640 height = 455 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt = > <p > <b > note : < /
creates a new container container page container page container page page . <p >
returns the container page for the given container element . <p >
saves a cms bean to the given resource . <p >
initialize the server .
saves the given file into the vfs . <p >
writes the container page page to the given container page . <p >
checks if the given link is a link to the vfs . <p >
returns the containers for the given container element . <p >
reads the given resource . <p >
removes the container from the container page . <p >
saves the container page page page element . <p >
sets the label .
gson invokes this call - back method during deserialization when it encounters a field of the specified type .
returns the parent folder of the given folder . <p >
returns the module folder for the given module . <p >
creates a new xml element with the given xml content . <p >
sets the module for the given module . <p >
submits a new resource to the given resource . <p >
adds a file to the vfs . <p >
adds the bundle bundle bundle bundle bundle . <p >
adds a resource to the list . <p >
adds the given resource type to the opencms vfs . <p >
renders the configuration . <p >
adjust the schema to the given schema . <p >
creates a resource type . <p >
fills the property editor with the given fields . <p >
returns the best available locale for the given locale . <p >
returns the number of possible resources that have been set for the current user . <p >
returns the bundle message bundle for the given resource bundle . <p >
get the name of the name of the name .
initializes the resource . <p >
check if the is valid .
locks a lock . <p >
check if the domain is valid .
returns true if the specified { @code } is equal to the specified { @code } .
returns true if the specified { @code } is not valid .
returns true if the specified country is valid .
checks if the specified string is a valid valid { @code } .
returns a string representation of the given name .
writes the file to the file .
kills the job .
{
process the command .
command . command . . . . . .
returns the directory for the given cluster name .
build the options for the options .
start the
get the best estimate of the resource .
returns a new with the given resources .
get the list of all that are currently in the list .
get the list of for the specified .
returns the list of all the url for the given query parameters .
returns all the applications in this application .
returns the application application .
updates the application with the specified url .
returns true if the given tag is a valid markdown node .
gets the path of the given resource .
get the root folder of the current path .


retries the action with the given action and retry if it is not already in the action .
returns a new { @link } instance that is used to edit the given action and returns the result as a { @link } .
returns the maximum length of the current network .

{
transforms the model into a new { @link } .
process the given resource .
returns the for the given resource .
creates a new { @link } for the given { @link } .
returns the type of the given .
analyzes the and the and inputhandlers .
verify the class for the given type .
returns a map of all the methods that are not in the given method .
checks if the given {
find the first matching type of the given type .
adds a new property to the list .
creates a new .
returns the { @link } that is a { @link } .
apply the given { @link } to the given { @link } .
decorates the { @link } for the given { @link } .
build the image .
build image from docker image .
gson invokes this call - back method during deserialization when it encounters a field of the specified type .
gson invokes this call - back method during deserialization when it encounters a field of the specified type .
{
gson invokes this call - back method during deserialization when it encounters a field of the specified type .
gson invokes this call - back method during deserialization when it encounters a field of the specified type .
returns a set of { @code annotationtype } .
initialize builder for script .
{
locates the specified uri from the given file .
initializes the script builder for the script .
validates the given {
creates a new { @link } from the given { @link } .
returns the first child of the given field .
merge the given into this one .


parse the header field .
add the given request headers to the cache .
sets the http headers .
{
send a request to the given url .
<p > connect to the client . < / p >
returns a { @code } that encodes the message with the given message .
create a new { @link } .
verifies that the specified { @code value } is not equal to the given { @code value } .
create a new { @link } instance .
creates a new instance .
{
creates a new element from the given xml element .
create a new element .
create a new object .
sets the flag set to true if the current is set .
sets the selected item .
set the text of the text .
returns a { @link } that is backed by the specified { @link } .
find the profile log for the given profile .
{
returns the list of all notes for the given id .
returns the specified region .
creates a new account with the specified id .
updates the acquisition of the specified account .
deletes a specified account .
builds a request that will be used to parse the request to the request .
returns the { @code } that is the first element of the { @code iterable } object .
creates a { @link } with the given { @link } .
converts a { @link iterable } to a { @link iterable } .
returns an { @code list<string > } containing all items from the given { @code iterable } .
returns true if the given { @code } is equal to { @code } .
returns the name of the first item in the given { @code iterable } .
returns an { @link iterable } that is used to filter the items in a list .
create a new { @link } with the given { @link } .
create a new { @link } instance .
creates a new { @link } instance .
outputs the given class to the given output stream .
prints the class statements to the given class .
clones the given array of objects with the given type .
converts the string to a string .
check if the object is a member of the specified type .
returns the next object from the given object .
compares two objects with equals to the specified value .
get the method members .
returns the number of the in the map .
returns the number of bytes that is the number of bytes in the given array .
converts the given class to a class .
processes the and them .
check the url and the .
initializes the .
read data from the file .
writes the given file to the given file .
remove the from the
draws the bitmap .
this method is called by the gui thread .
returns the bitmap of the current bitmap .
loads the module for the module dependencies .

get the {
check the type of the parameter .

write a json object to a jsongenerator .
{
undeploy a { @link } .
extracts the segment from the given segment .
returns the distance between the two specified points .
returns a range of all ranges of the given ranges .
returns the { @link version } of the given version .
checks if the given resource is a valid { @link } .

get the element at the given index .
returns the last element of the list .
returns a address that is the address of the specified address .
appends the list of elements to the list .
{
{
{
{
{
initializes bitmap with the given bitmap .
marks the content as a .
creates a request that gets the for the given build and type .
collect all the and their corresponding .
get all from the
get a logger instance .
get the logger instance for the given name .
initializes the .
sets the model for the model .
update the image with the given image .
updates the pie - text label in the image .
sets the position of the current position .
get the bundle for the specified locale .
registers the { @link } .
{
resolves the { @link } for the given { @link } .
/ * ( non - javadoc )
{
ends the current state .
checks if the given connection is a connection to the given exception .
logs a { @code } .
creates a new instance of the given { @code } .
parses a byte array into a byte array .
parse the given <code > / code > .
returns the list of all the messages in the list of { @code } .
sets the id of the .
add a new { @code } to the given { @code } .
returns the contents of the specified { @code byte [] } as the result of the { @code } .
returns the content type of the content type .
build a list of all the components that are referenced by the given service name .
removes the ejb from the sbb entity .
returns true if the given parameter is not available .
get the next node in the cluster .
enable or disable the current state of the current thread .
closes the database .
returns a { @link } that is used to convert the state of the given { @link } to a { @link } .
enable or disable the { @link android . app . android . } .
create a { @link } instance from the given { @link } .
prints the result of the .

{
creates a new client .
creates a new url for the given url .
creates a new { @link } for a given uri .
/ * ( non - javadoc )
this method is called by the to ensure that the source is not in the .
/ * ( non - javadoc )
process the .
performs the action on the .
shows the to be used by the .
shutdown the .
parse the given { @link pattern } into a { @link } .
creates a new { @link } with custom configurations .
creates a new { @link } with the given configuration and default values .
main method for debugging .
executes the command and returns the result .

flush the contents of the input buffer .
waits for the current thread to wait for the thread to wait until the thread is interrupted .
waits for the specified time waiting for this thread s wait for the specified time .
{
{
{
main method to run the .
draws the specified colour using the specified color .
{ @link } for { @link } .
draws the specified colour using the specified color .
build the userregistryconfiguration attribute map .
returns the profile descriptor for the given descriptor .
resume ping event
/ * ( non - javadoc )
converts a byte array into a byte array .
{
/ * ( non - javadoc )



creates a new { @link } instance for the given { @link } .
/ * ( non - javadoc )
get the list of for the given .
{
restores all the files in zookeeper .
{
{
add filter to request filter .
add a filter to the response .
creates a new proxy with the given host name .


/ * ( non - javadoc )
returns the descriptor for a given event descriptor .
registers a service .
{
reads the resource from the resource managed by the resource manager .
returns the default value for the given { @code } .
add a new path to the list .
creates a new { @link } with the given { @link string } .
creates a method that is used to create a new string for the given method .
get metrics for a given { @link } .
returns the { @link } for the given { @link } .
returns the {
await until the lock is held by the current thread .
creates a new { @link } instance for a given name .
creates a new .
/ * ( non - javadoc )
validate the method to validate the .
{
{
validate the descriptor .

creates a matcher that matches the given matcher .
builds a new .
builds a .
get the service name for the given service name .
returns the service name for the specified service .
create a new from the .
{
{

transforms a { @link } to a { @link } .
returns the {
schedules the given {
schedules the given {
fires a on all handlers in the handler manager . if no such handlers exist this method will call { @link () } .
{

clear the and clear the .

creates a new for the given component .
sets the { @link } used to determine if the { @link } is used .
/ * ( non - javadoc )
/ * private methods ------------------
/ * ( non - javadoc )
<p > . < / p >

returns the value of the property .
{
sets the track mode for the given track .
/ * ( non - javadoc )
fires a event on all registered handlers in the handler .
converts the given { @link workflowtask } to a { @link compoundcurve } .
parses the given { @code virtualfile } .
add a to the given path .
{
{
{

/ * ( non - javadoc )
creates a new { @link } instance for the given { @link operationcontext } .
get the default port for the given .
get the server for the given query .

callback callback when the file is not leaked .
adds a new listener to the specified file descriptor .
remove a file from the specified file .
<p > this method is used to start the application . < / p >
{
converts a { @link } to a { @link } .
converts a { @link } to a { @link } .
converts a { @link matrix4d } to a { @link } .
converts a { @link } to a { @link } .
converts a { @link matrix4d } to a { @link } .
converts a { @link } to a { @link } .
converts a { @link matrix4d } to a { @link } .
converts a { @link } to a { @link } .
converts a { @link matrix4d } to a { @link } .
sets the name of the class name .
build the deployment group information .
{
{
{
{
{
{
{
generate the annotation for the given class .
generate a profile for the given profile .
creates a new instance of the given class .
returns true if the class is not a subclass of the class .

{
sets the .
/ * ( non - javadoc )
this method is used to set the to be used for the .
sets the .
calculates the amount of time in the current time .
{
/ * ( non - javadoc )
get the first value of the first element in the string .
merges the given resource into the given resource .
add a new file to the screen .
set the system info for the given key .

add a new value to the list .
{


sets the value at the index of the element at the specified index .

runs the and them .
returns the value of the annotation value for the given annotation .
sets the value of the given { @code streamtransformation } .
returns the maximum value of the selected .
sets the maximum value of the fern .
sets the value of the .
sets the value of the .
sets the value of the .
updates the panel and .
adds the fields to the list .
creates a new instance of the given class .
{
根据某个字段名条件查询数据列表，返回所有字段
find the first matching element in the given column id .
insert a new entity into the table .
returns true if the entity is connected to the specified entity .
updates the specified entity and updates the existing entity .
sets a parameter to be used for the given parameters .
creates a layout chooser translator for the specified layout .

/ * --- overridden methods
populate the measureunit /
updates the location of the given .

lays out the edges from the list .
lays out the parent .
sets the for the given .
remove all the from the
initialize the for the given .
check if the coordinatesystem is a valid .
returns true if the leaf of the leaf is the leaf of the leaf node .
compute the from the given entry .
returns the entry entry in the map .
returns the total number of entries that are equal to the maximum of the size .
adds the given entry to the current thread .
returns the next index of the next element in the list .
returns the value of the given .
merge the given into the given array .
sets the radio button .
{
sets the text for the given { @link } .
sets the .
reads the preview of the given { @code } from the given { @code } .
/ *
{
translates a single - valued array into a single - in - place .
returns a set of { @link } s that match the given { @link } .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :
{ @inheritdoc }
returns the sum of the features of the features .
{
returns true if the value is null or not .
compiles the given regex pattern .
checks if the specified element is in the set of .
extract the names of the from the given map .
extracts the names of all the names of the names of the names of the names .
{
check that the given string is valid .
check that the value is valid .
{ @inheritdoc }
{
{

main method .
creates a new instance of the given class .
returns the best equally - byte array for the given { @code } .
adds the specified serie column to the dataset with custom label .
adds the specified serie column to the dataset with custom label .
converts a json object into a json object .

get the { @link } for the given service name .
returns the name of the current user .
sets the number of times the given expression is a wildcard type .
sets the { @link } for the given { @link } .
sets the {
sets the path to the specified path .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
format a format of a { @link } .
returns a { @link annotation } of the specified type .
returns a { @code static } instance from the given { @code name } .
converts a string to a string .
copies the contents of the input stream into the output stream .
generates a redirect to the user .
generate a redirect url for the given signature .
generate a signature for the given signature .
returns the { @link } for the given { @code } .
euclidean distance
euclidean distance between the two points .
distance between the two points .
euclidean distance
<p > computes the euclidean distance between the given point and the given point . the distance between the two points are specified .



returns true if the current thread is a .
get the json object for the given key .
create a new spannablestringbuilder .
create a new { @link } instance .
create a new { @link } .
creates a polygon from the given { @link polygon } .
creates a { @link } instance .
/ * ---------------------------------------------------------------------------- -
calculate the for the given .
transform a object into a { @link } .
gen - last :
gen - last :
{
returns the class of the given class .

<p > converts a matrix into a 3x3 matrix . < / p >
<p > converts a qr - aligned matrix to a symmetric matrix . < / p >
check the and connections .
{
print the json response .
get a template by name .
get the { @link } for the given { @code style } .
get the default style for the given { @link } .
sets the default style of the preference s default styles .
validates that the configuration is valid and if not already set the default validation configuration validation checks .
sets the { @link } for the given { @link } .
sets the { @link } .
sets the angle of the angle in radians .
returns the closest point to the given point .
computes the center of the points in the contour .
finds the points in the contour .
sets the directory to be used for the given directory .
print the json object to the provided json object .
set the attributes of the attributes .
get the of the .
get the styles for a specific style name .
sets the keywords .

adjusts the given to the given bounds .
create a svg view for the given svg document .
save the given file to a file .
get the from the map .
/ * ( non - javadoc )
/ * ( non - javadoc )
encode a long value into a long .
{
{ @inheritdoc }
parse a from a given location .
returns the normalized score for the given sample .
converts a line into a line .

{ @inheritdoc }
{ @inheritdoc }
computes the euclidean distance between the line and the line .

computes the line between the line and the line .
computes the euclidean distance between the line and the line .

<p > finds the line between the line and z . < / p >
distance between the line segment .
calculates the line segment of the line segment .
distance between the points .
compute the distance between two points .
euclidean distance
returns the squared euclidean distance between the two lines .
computes the line between the line and the line .
{
{ @inheritdoc }
{
{
add a new child to the list .
{
updates the minimum and maximum values in the specified subtree .
merges the list of nodes into a .
deletes the leaf node that is the leaf of the tree .
{
deletes the leaf node from the list of nodes .
computes the euclidean distance between the two sets .
bessel function of the euclidean distance between two points .
populate annotations from the annotations .
set the default { @link } annotation .
returns the serviceurl for the given host name .
update the menu with the given title and the option .
load the from the given { @link inputstream } .
update the menu with the given title and the .
creates a new { @link } instance .
returns the title of the first appearance of the current page .
returns the value of the given { @code } .
returns the severity level for the given severity level .
returns the first key of the given key or the optional if the key is not present .
returns the feature labels for the given feature .
get the keys for the given key .
get the annotation for the given annotation .
get the list of all the for the given label .

returns a {


{

checks if the given type is a member of the given type .
returns a graph of vertices in the graph .
returns a list of all the fields in the given collection .

computes the convex hull of the given rectangle .
draws a rectangle with the given rectangle .
{
flip the bits from the given array .

checks if the two three points are equal .
{
checks if the given polygon is a polygon .
checks if the two arrays are equal .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a directory .
remove the current temporary directory .
returns the log level for the given log level .
returns the content length of the response .
get the response body as a string .
get the response as a json object
get the response bytes of the response .
returns the headers of the request .
returns the header header value for the header .
get the first header field .
{
{
returns the last consumed of the last poll if there is no segment .
adds a new { @code } to the given { @code } .
creates a new { @link } with the given { @link } .
updates the index of the given index definition .
this method initializes the .
evalutes expressions in the given expressions .
get the start position of the nearest point .

returns the number of elements that are the distance of the given neighbourhood .
sets the {
checks if the given partition is partitioned .
executes the given task .
add a field to the current scope .
/ * ( non - javadoc )

split the given number of items into a single - encoded random number of examples .
sets the for the given host and host .
sets the for the given location .
sets the search resources for the given url . <p >
sets the { @link } for the given { @link } .
randomly chooses the next n - grams in the given sequence .
sets the for the given .
sets a new that will be used to add a new variable to the list of all the hosts .
sets the for the given .
sets the { @link } for the { @link } .
randomly chooses the { @link } s in the specified { @link dataset } .
sets the { @link } for the given { @link } .
sets the password for the password .
sets the { @link } for the given { @link } .
sets the { @link } for the given key .
paint the .
{
/ * ( non - javadoc )
get the type of a field .

compute the minimum size of a field .
write a { @link } to a { @link } .


returns the value of the enum value for the given enum name .
returns the enum value for the given enum name . if the enum is null the enum is returned .
get the descriptor for the given descriptor descriptor .
get the set of for a proto field .
get the .
converts a list of { @code list } to { @code list } of { @code list } .
returns all for a given user .
returns the { @link } for the given id .
returns the { @link } for the given { @link } .



put a key / value pair into the cache .
/ * ( non - javadoc )
load the from the given { @link } .
load the xml document from the given { @link } .
parse a date object from a given field .
sort the rules for the given list of rules .
initializes the provider with the given provider .
sort the and the for each .
creates a namespace with the specified namespace .
add the to the
check the of the
creates a new instance of the given class .

returns the class of the given type .
generates a vertex vertex from the given vertex and a vertex name .
gets the { @link } for the given name .
returns the { @link } for the given { @link } .
finds the resource with the given name .
finds the resource with the given name and name .
copies the contents of the input stream into the output stream .
copies the contents of the input stream into the writer .
reads the contents of the inputstream into a byte array .
reads the contents of the url into a string .
reads the lines from the given { @code url } .
cancels all requests that are listening by the given service .
cancels a single - threaded task .
cancels a { @link } .
cancels a given { @code } with the specified id .
cancels a specific { @link } .
loads the meta - data from the given { @link } .
log a message with the specified tag log .
log a warning message .
send a log message with the given log message .
{
creates a new { @link } instance for the given { @link } .
returns a { @code char } encoded { @code string } .
encodes the specified byte array into a byte array .
decodes a string into a byte array .
decodes a { @code len } into a byte array .
checks if the given file is a compiler .
/ * ( non - javadoc )
/ * ( non - javadoc )
increment the number of ticks in the message .
read the tags from the given { @link } .
returns the list of { @link tag } s .
returns the tags for the tag .
find the tag with the given name .
get tag tag for a tag .
returns the tags that are tagged with the tag .
returns a set of tags for the tag .
check if the tag is a tag tag .
<p > write the tag to the output . < / p >
sets the maximum number of projects that are currently selected by the user .
add a new field to the registry .
adds a new member to the specified value .
adds a new member to the specified path .
get the list of .
adds the metadata to the list of metadata .
sets the title of the title .
builds a new {
sets the label of the label .
returns a {
shows a dialog with the specified dialog .
copies the data source to the specified { @code } .
flush the buffer to the end of the buffer .
fills the buffer with the contents of the given buffer .
rehashes the buffer to the given position .
write the next byte array into the given array .
creates a new instance for the given class .
add a new { @link } to the given { @link } .
add a new to the list of .
add a tag to the list of tags added to the tag .
sets the tags for the tag .
joins the joiner to the given set of sets .
get the response content for the given url .
sets up the background of the gauge .
/ * ( non - javadoc )
returns true if the given is a valid
returns the next subset of the next solution .


{
call this method to find a remote server .
{
performs the search step .
returns the index of the first occurrence of the specified index .
returns the first index of the specified index .
{
writes a short to the underlying stream .
writes the specified integer value into the stream .


{
writes the double into the stream .
create a new { @link } with the given id and ttl .
create a new { @link collector } that will remove the given id from the collector .
ack backup .
ack backup .

add a collection of connections to the peer .
{
returns the { @link } for the given { @link } .
get the cached for the cache
executes the given command and executes the given command and returns the result .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
executes a call to the given command and returns the response .
executes the given command remotely and returns the odocument object .
executes the given action on the given { @code } .
this method returns the value random variable of the product within the specified model evaluated at a given evalutationtime . note : for a lattice this is often the value conditional to evalutationtime for a monte - carlo simulation this is the value of the product of the product of the product within the specified model evaluated at a given evalutationtime . note
compiles a pattern into a pattern using the specified pattern .
compiles a pattern into a pattern using the specified pattern .
get the profile for the given id .
creates a default cache instance for the given {
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
the solution of the solution and the solution .
returns a new instance .
returns the children of this request .
main method for testing
模式匹配
resolve the given value to the given string .
adds a key pair to the current validation .
returns a date value from the date .
get the date value from the given date .
get the date value from the date .
returns the specified key if the key is not null .
start the .
stop the .
disposes the status of the .

remove the specified stop stop .
sets the maximum number of milliseconds to be used for the specified time period .
add a new listener to the list of listeners for the given listener .
remove a specific listener from the list of listeners .
this method initializes the and the .
fire the status about the .
asserts that the connection is not in the .
updates the best solution for the given solution .
updates the best solution for the given solution .
returns the total number of the currently running execution .
returns the next available time in milliseconds .
returns the current .
compute the number of that is the number of that is the number of .
resolves the principal for a given session name .

returns the { @link } for the given { @link } .
get the file name from the file .
parse the given { @link } into the given { @code testclass } .
returns a copy of the specified product with the specified mean range .

creates a from a given .
returns the cache for the cache for the given cache .
{
{
add a new jsp to the list of .
get the parent classloader for the current thread .
sets the name of the .
returns the time in milliseconds for the given name .
save the given file to the given class name .
check the compile - and compile - phase .
initializes the class path .
initialize the security policy .
start the thread .
stops the thread thread .
runs the thread .
create a from a model object .
{
{
{
{
{
{
commit the current transaction .
creates a new { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the exception for the given exception .

create a new array with the given name and value .

create a discount curve from given times and given forwards .
create a forward curve from a given id and a factor of given id and a factor of given type .
creates a forward curve from a given id and a factor of given id and a factor of given id .
create a discount curve from given id and a factor specified by the specified id .
create a discount curve from given times and given forwards .
create a discount curve from given times and given forwards .

get the context path from the servlet path .

{
main method to start the .
print a warning if it is not null .
returns the node s value for the specified node .
returns the next node in the set .
adds a new node to the set of child nodes .
insert a node in the list of nodes to the given value .

removes the specified node from the list of nodes .
search for the node s subtree .
search all intervals that are disjoint by the search criteria .
search for the node s nodes in the subtree rooted at the given node .

/ * ( non - javadoc )

<p > the valid target hosts . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection ) } if you want to
/ * ( non - javadoc )
<p > the list of objects . < / p >
decodes a { @code byte } from the given byte array .
decodes a { @code byte } value into a { @code } .
<p > the conversion capabilities used by the <code > createdbinstance< / code > parameter . < / p >
get the from the department of .
compute the of the given matrix .
gets the cash value of the given discount value .


creates a filter that matches all documents that match the specified filter expression .
flattens the list of blocks in the list of dest blocks .
start the flush timer .
build the query
returns the lucene query for the given query .
returns a list of interceptors that are not in the list of .
parse properties from a string .
add interceptor interceptor to be used to process the interceptor .
add interceptor interceptor to be used to process the interceptor .
returns the type of the given class .
returns true if the given object is a member of the given object .


invokes the specified interceptor on the specified interceptor .
get a list of all { @link } s that are annotated with { @link } .
get list of interceptors that are annotated with the given class .

returns true if the given string is a string .
highlights the text at the specified position .
validate the response for a domain

handles the user s status code .
sets the drawer of the drawer .
shows the current modal bar .
{
if the field is empty this method returns the first field .

gets the message from the given message .

get the formatted message for a formatted string .
{
sets the {
resets the internal data structures .
initializes the user .
converts the given source string to a { @link } .
converts the given source into a source string .
convert a string to a string .
converts a source string into a binary representation of the given source type .

converts a source string into a byte array .
get the attribute name of the element .
creates a for the given .
<p > . < / p >
parses the given expression .
/ * ------------------------------------------------------------

parses a quoted string .
sets the parent .
get the command enterprise action .
get the { @link } for the given group id .
check if the command is a command .
checks if the given group is a member of the given group .
registers a command .
fire the given command notification .
sets the action .
/ * set the { @link } for the given { @link } .
{
check if the command is a command that is a command that is a command .
{
returns the command for the given command .
checks if the given type matches the given type .
sets the { @link } to be used for the specified { @link } .
set the value of the .
get the input stream as a stream of bytes .
get the url of the image .
returns the image as a string .
get the image as a png image .
get the input stream for a given image .
set the sizes of the .
build a collection of objects from the .
returns the number of number of significant digits .

creates a new auth auth token with authentication .
checks if the file is in the file .
updates the primary key for a given id .

get the list of all values for the given id .
add a new batch to the cluster
selects a list of all the objects .
selects a list of items matching the given range .
{
initialize the .
check the responses for the request .
get the photo for a photo .
get the photo for a specific photo .
set the photo for the photo .
set the photo photos for the photo .
update the for a specific location .
list the photos for the specified photo .
set the photo .
serialize the given string into a string .
deserialize a object from the given byte array .
{
{
{

marks the transaction as deleted .
add a property to the configuration .
set properties for the given { @link hystrixmetricspublisher } instance .
{
start the timer .
stop the state of the current state .
split the input stream into a .
suspend the current thread .
resume the current thread .
returns the current time - time .
sets the title of the title .
gets the title of the title .
shows the dialog and show the dialog .
creates the dialog .
returns the window window for the given component .
initializes the .
returns the message message for the given message .
get the for the given .
add a new to the .
creates a new { @link } for the given { @link } .
adds a key to the .
adds a key pair key to the given key .
/ * ( non - javadoc )
creates a new { @link } .
get the list of all members .
returns the window window of the window .
sets the name of the table name .
sets the name of the column .

returns true if the given group is a member of the given member .
sets the column name for the column .
sets the data type .


sets the column name for the given column name .

returns the member for the given member .
get the cache for the given { @link key } .
returns the {
returns a {
creates a new { @link } with the given { @link throwable cause } and { @link } .
helper method to call the method .
thrown if the given property is not null .



get the { @link } for the { @link com . netflix . client . } .
sets the strategy used to use the strategy to use for the strategy .
sets the size of the size .
sets the type of the { @link } .
populate the cache and initializes the cache .
sets the value of the property .
gets the value of the property .
check if the given xml document is a valid xml document .
creates a new { @link } object .
creates a new { @link } object from the given { @link document } .
get connection from connection
sets the map of the map elements that are used to map the map .
returns the security controller associated with this application .
returns the parameters of the given parameters .
{
create a new instance .


{
{
returns the first clause for the given key .
{
{
{
{
{
/ * ( non - javadoc )
set the of the service .
add a list of events to the list of events .

{
{
creates a { @link } from the given { @link } .
add a new event event type .
initializes the model .
returns the binding factory for the given {
sets the model .
adds the given form to the form .
sets the state of the current state of the current state .
creates the command .
builds the attribute .
creates a new .
check if the configuration is a configuration file
initialize the service instance .
sets the value of the property .
downgrade the document to the document .
upgrade the document version of the document .
downgrade &lt ; ; elements to kyero .
downgrade &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ; &lt ;
downgrade &lt ; new_build&gt ; elements to kyero .
downgrade &lt ; new_build&gt ; elements to kyero .
handles the response exception .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
sets the { @link } for the given { @link } .
initialize the .
{
{
{
lookup the from the service .
returns the list of spans for the given list of spans .
build the service .
{
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
process a single event .
process a single event .
create a event for the given .
{
get alliance get all invited roles return a list of item summaries --- this route is cached for up to 300 seconds sso scope : esi - assets . read_corporation_assets . v1
get alliance member names return information about a member --- this route is cached for up to 300 seconds sso scope : esi - alliances . returns the names of all the members of a member member owns --- this route is cached for up to 300 seconds sso scope : esi - alliances .
get alliance information get information about a member --- this route is cached for up to 300 seconds sso scope : esi - location . . v1
get alliance member ( asynchronously ) return a list of all the alliances members --- this route is cached for up to 300 seconds sso scope : esi - alliances .
get alliance list return all orders in a corporation separated by a character for a particular item --- this route is cached for up to 300 seconds sso scope : esi - skills . read_skills . v1
get alliance endpoint returns a list of alliance or empty list --- this route is cached for up to 300 seconds sso scope : esi - fleets . read_fleet . v1
get alliance list return alliance list ( asynchronously ) --- this route expires daily at 11 : 05
get alliance get all invited roles return a leaf member ; s kills and roles return titles ; return all contracts ; s titles --- this route is cached for up to 300 seconds sso scope : esi - contracts . read_character_contracts . v1
get all roles ( create and roles ) from a fleet --- this route is cached for up to 300 seconds sso scope : esi - contracts . read_character_contracts . v1
get alliance ( asynchronously ) get all invited roles ( asynchronously ) get all invited roles ( asynchronously ) get all invited roles ( asynchronously ) get all invited roles ( asynchronously ) get all invited roles ( asynchronously ) get all invited roles ( asynchronously ) get all invited roles ( asynchronously ) get all invited roles ( asynchronously ) get all
{
{
check if the agent is not in the .
{
create a new
creates a { @link } instance .
get constellations get a list of all planetary extraction timers eve --- this route is cached for up to 3600 seconds
get factions get a list of all planetary extraction ids of faction --- this route is cached for up to 3600 seconds
get schematic information ( asynchronously ) get all invited attendees for a corporation --- this route is cached for up to 3600 seconds
updates the accesstoken with the given token .
gets the value of the property .
gets the value of the property .
runs the command line arguments .
{
/ * ( non - javadoc )





put a json object into a json object .
uploads a file from the specified url .


{
{
sign the given message .
schedule a timer of a task .
marshall the given parameter object .
/ * ( non - javadoc )
backward pass :
get a list of all the alliances --- this route expires daily at 11 : 05
get a list of all the alliances --- this route expires daily at 11 : 05
get constellation information ( asynchronously ) get all trained skills ( asynchronously ) get a list of all the alliances --- this route expires daily at 11 : 05
get a list of all the agents names and folders --- this route is cached for up to 3600 seconds --- requires one of the following eve corporation role ( s ) : [ ] [ ] [ 1 ] [ 1 ] [ 1 ] [ 1 ] [ 1 ] [ 1 ] [ 1 ] [ 1 ] [
get a list of all the agents names of a particular war . --- this route is cached for up to 3600 seconds
get corporation asset information ( asynchronously ) get information about a set of dogma resources --- this route is cached for up to 3600 seconds
get alliance list return all routes in faction --- this route is cached for up to 3600 seconds --- requires one of the following eve corporation role ( s ) : [ ] [ : ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]
list industry facilities get a list of all the alliances --- this route is cached for up to 5 seconds sso scope : esi - killmails . . v1
get alliance list return all routes ( asynchronously ) list return locations for a list of --- this route is cached for up to 3600 seconds

extracts the files from the specified file .
analyzes the and returns the set of all the .

execute the api .
check if the is active .
get the user s username .
/ * ( non - javadoc )
read the xml file and write the xml to the xml stream .
print the xml representation of this .
downgrade a kyero version of the document to the document .
upgrade version upgrade .
downgrade &lt ; new_build&gt ; elements to kyero .
remove the child elements from the list of child nodes .
upgrade the element in the given {
upgrades the given { @code } to the given { @code } .
upgrade the given element .
get headers from a get request
get the response headers for the given key .
get all public key and issuers for a given key .
get the greeting message for the given session .
get a client identified by name .
get status status of the status of the specified status .
get status status of a specific status status code .
get detailed information about a specific status .
verifies the specified contract of the specified contract of the current call and returns the last item in the call . if the user is not provided a call to the call to get the status of the call returns the last call to the same authorization . if the user is not provided a call to the call leg is not in
get a get of a contract of a virtual machine --- sso scope : esi - . . v1
get a fitting from a region ( asynchronously ) get a list of --- sso scope : esi - . . v1
get the list of all user - defined versions .
get the list of all user containers in the specified project .
get the details of a specific agent .
sets the value of the property .
gets the value of the property .
read the xml file and write the given input stream to the xml stream .
print the to the given writer .
/ * ( non - javadoc )
calculate the number of bits in the given seed .
clicks a horizontal scroll button .
clicks a click animation .
clicks the click on the given view .
get the location of the view .
clicks a popup for the given edittext index .
opens the menu .
clicks the given button click menu item clicks on the given menu item .
clicks a button bar item .
clicks the current button .
clicks the given action on the given element .
clicks on the given text and the text in the given text .
clicks a given view with the given { @link } .
clicks the given view at the given position .
clicks a list of the dividers and the textview in the given textview .
clicks a given item in the list of views .
returns the first matching the given index .
returns the item index for the given item .
generate a new .
encrypt a key from the given string .

generates a new key pair .
decrypts the scram - encoded string with rsa private key .
compute the overall number of factors .
waits for a new dialog to be deleted . <p >
waits for a new dialog to be deleted . <p >
checks if the is a .
checks if the view is a view .
hide the from the drawer
backward pass : dg / dx_i + = dg / dy_i / dy_i / dy_i / dw_i / dw_i / = dg / dy_i / dw_i = dg / dy_i / dw_i + = dg / dy_i / dw_i + = dg / dy_i / dw_i + = dg / dy_i / dw_i + = dg / dy_i / dw_i + =
matches a glob pattern .
open a file .
compare two strings .
returns the hash code for the given hash code .
returns the system .



copy src from src file to dest directory .
copy files from src to dest src .
converts a byte array into a hexadecimal string representation of the given byte array .

list all the titles search criteria within a character --- this route is cached for up to 3600 seconds
list all the orders in a character region --- this route is cached for up to 90 days in a single call .
get character orders by pos ( asynchronously ) list ( pos ) for a particular item ( pos ( pos ) or list ( pos ) for a list of titles ( asynchronously ) lists the titles ( asynchronously ) returns the article id for the character type --- this route is cached for up to 90 days in the following eve corporation
search for all categories ( s ) return all categories ( list s match ) returns the current location of the specified category .
list insurance items ( including personid ) of the specified categories . the search filter includes a list of links and their orders ( including the next item and the location of the list ) . the following are the following : ( / / / / ) / cat / cat \\ / / /
list insurance items ( asynchronously ) return all skills in a list ( pos )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )

calls the specified listener on the specified listener object .
add a new {

/ * ( non - javadoc )
sets the value of the idx th variable .
foward pass : y_i = x_i
backward pass : dg / dx_i + beta * x = alpha * x + beta * x + beta * y * x + conjg ( x + beta ) + beta * ( * ) + beta * ( * ) * ( x )) * ( * * ) * ( * )) ;
generates a new random key .
get the seconds of the specified time .
generates a with the given key .
returns the number of digits in the given range .
{
sets the message id .

create a descriptor descriptor descriptor descriptor .
adds a new to the list of .
signs a signed byte signed byte from a key .
sets the name of the specified attribute .

set the attribute node id for the attribute
get the type information for a given type .
applies the given { @code } to the input values .
<p > this method is used to create a new { @link } for the given type . < / p >
{

zips a directory into a zip file .
compares two { @code protein } objects .
returns a collection of objects that are used to create a collection of parameters from the given { @link } .
get the value of the given field as a float .

create a new { @link } .
sets the tag .

set the version of the given version .
sets the maximum allowed value of the .
set the log for the given log file .
sets the value of the .
sets the mail mail timeout .
sets the default mail .
update the user s settings for the specified username and port .
remove a mail mail mail mail mail smtp server .
updates the primary constraint mapping for the given .
remove a tag from the given tag .
update the with the given name and the name of the user .

/ * ( non - javadoc )

check if the document is a valid xml document .


update the data for the given connection name and the associated data .

remove a datasource from the source xml

updates the scope of the given scope .
updates the scope of the given type .
updates the current user s etag .
updates the acquisition for the given request .
updates the current session .
update the current user s settings .
update the current user s settings .
update the current mode .

updates the locale for the given locale .
updates the acquisition for the given resource .
update the server - side .



write a { @link } to a { @link list } of keys .
write a json representation of a json object .
serializes the given json representation to a { @link } .
creates a { @link } for the given { @link } .
checks if the given object is a primitive type or a primitive type .
update the of the object .
update the attributes of the given attribute .
updates the trigger .
update the boolean with the specified flag .

updates the specified .

get the element .
updates the attributes of a fleet with the specified attributes .
updates the current session .
update the location of a particular xml element with the specified name .
/ * ( non - javadoc )
remove the given from the registry .

updates the id of the given id .
remove all the from the given .

updates the given resource name for a given resource .

returns the message as a string .
serialize a json string into a list of objects .
initialize the .
registers a new instance of the given {
{

serialize a array of strings into a list of strings .
serialize a list of objects to a list of strings .
serialize a to a
serialize a map of strings into a map .
serialize the given query into a single string .
serializes the object to json .
serialize an object to json .

deserializes the given element into an object .
deserializes a query object into a object .
read the field from the resultset and return the result as a .
<p > . < / p >
deserializes the given array of objects into an array of elements .
returns the child element of the element .
returns the next character in the next char .
reads the next character from the stream .

reads the next byte from the stream .
{
{
{
returns the locale for the specified locale .
start the process .
{
computes the euclidean distance between the line and the line .
returns the line between the line and the line .

get the name of the row with the given name .

sets the collision shape for the given shape .







sets the cell row .
find the mapping from the map .
find the mapping from the map .
find the first item in the list of items .
loads the class of the class .
decrease the size of the buffer .
build a range of all the objects .
returns true if the given { @link } is a { @link } .
check if the given is a valid .

replace the value of a field with the given name and value .

selects the next line from the given region .
adds a list of to the list of dividers .
builds a comment from the given list of { @link } .

adds the given offset to the end of the calendar .
get the time zone of the calendar .
get the date / time for the given calendar .
get the time zone of the calendar .
get the date / time for the given calendar .
returns the content of the given byte array .
save the contents of the byte array to the given outputstream .




calculate the of the given .



remove the given { @link listener } from the registry .
returns the clusters .
clusters the given to the given list of clusters .
returns the closest point to the centroid .
merges the given list of { @link } s into a list of { @link } .
add a bundle bundle for the bundle bundle .
{
{
{
{
get the string representation of the .


returns the vector x value of the x y x y and z maxima by the given power of the x y x y z .
computes the derivative of the x - norm by the given number of times .
computes the smoothed distance between two points .
regularized incomplete beta function .
get the current modal chart .
get the cell row style .




get the cell style .





set the style for the given .

returns the value of the specified { @code short } .
returns the symbol for a given symbol .
returns the symbol for a given symbol .
returns true if the key is not in the list of key hashes .
stop the animation .
{
{
{
convert the specified number of to a human - level format .
/ * ( non - javadoc )
returns a {
sets the { @link } for the given { @link } .
loads the settings for the specified { @link } .
returns the upper bound for the given type .
returns the root node of the root node .

<p > creates a new instance of { @link } . < / p >
returns the number of times in the given { @code integer } .

/ * [ deutsch ] <p > liefert eine verschiebung ; < / pre >
{
{

checks if the given character is a valid character .
returns true if the current token is valid .
returns true if the string is a valid character .



{
marks the given pair as a suffix .

returns the number of lines in the line .
check if the next line is valid .
returns the line of the line .
returns the index of the first occurrence of the specified character in the specified index .
returns the last character in the string .
get the column value .
handles the { @link } .
called when the response is not ready .
waits for a new task to finish .
put a new object into the cache .
returns a new cache instance for the specified key .
removes the key from the map .
get the name of the file name from the given name .
get the tag for the given tag .
generates the { @link } for the given { @link } .
creates a new {


liest eine ob eine innerhalb .





returns true if the given { @link } is a { @link } .

/ * private methods

this method is the name of the variable in the variable name .
liest ein innerhalb ein wird ein ein gibt diesen ob einem . ( ) ;

/ *
/ * ( non - javadoc )
this method is used to determine whether the given expression is a valid expression .
executes the given .
this method is called when a { @link } is called .

initialize the xml reader .
{
{
load the from the given directory .
loads a file from the given file .
loads a from the given stream .
loads the from the .



read the embedded embedded property from the given table and return the .
returns the service id for the given service name .
get the state of the state of the given type .
destroy the connection .
{
{
find the entity that is associated with the given entity .
find the association of the given entities .
find the association of the given entity .
find the association of the given entity .

search for entities that are annotated with the given { @link } .
remove the specified entity from the list of entities .
updates the embedded embedded table .


returns the number of tasks that are currently available for the given batch size .

get the property name for the given property name .
returns the list of all the columns in the table .
get the database snapshot .
initialize the cache for the given object .
/ * ( non - javadoc )
{
{

update the object with the given object .
returns true if the given { @link } is a { @link } .

remove a supercolumn from the given id .
{
check that the given object is a valid id .
process the given entity object from the given .
check if the given is a .
build row column name for the column name .

returns the url of the url .

encodes the given string into a string .
returns the url of the given url .
parses the given string into a map of strings .
builds the options for the client .
check whether the configuration is a valid configuration .
returns the { @link } for the given property name .
get the connection configuration from the connection configuration .
create a new .
use the to configure the .
create a new instance .
create a new .
create a new .
create a new instance .
create a new .
use this api to create new { @link } .
create a new .
create a new .
create a new .
create a new .
returns true if the given address is a full - host .
clears all properties from the given { @code } .
deletes the entity identified by its id .
deletes the specified entity and adds it to the database .
get the id of the entity id .
returns the id of the given property id .
returns the id of the link to the specified id .
sets the {
sets the current thread context .
sets the { @link } to use for the given { @link } .
returns the log level for the given { @link } .
{
<p > . < / p >
returns the current thread if the current thread is interrupted .
set the thread pool .
returns the for the given .
sets the maximum size of the file .
destroy the .
/ * ( non - javadoc )
disconnect the given channel .
{
fires a new event frame .

wait for a timer to wait for the thread to wait until the awaited concurrent heartbeat is satisfied .
checks if the current thread is a jsr303 .

add a new message to the uri .
add a new to the list of .
create a new json object with the given json object and return the json object .
add a throwable to the json object .

{
main method .

sets the property type for the given property .
{
returns a list of fields that are used to sort the fields in descending order .

validates that the specified field is not valid .
returns the { @link } represented by this { @link mapperbuilder } .
check if the given header is a header .
compute the power of the power of the given exponent .


{
{
sets the minimum maximum value of the slider .
put the specified cursor to the specified position .
print the count of the line number .
{
{
get the from the .
returns true if the given object is null or empty .
returns true if the passed object is null or empty .
{
{
/ * ( non - javadoc )

pause the current thread .
sends a gossip response to the server .

{
returns the total size of the files in the file system .
deserializes a datadds into a object .
deserialize a variable type name .

get the specified id from the request .
get the url for the given url .
cancel a request .
get the specified template by id .
updates the specified template .
delete template by id .
lists the request .
retrieves the specified date from the specified year .

sorts the specified query into a single valued collection .
find all the query parameters and return the result as a list of query parameters .
finds all the elements in the given collection using the specified search parameters .
searches for the query and returns the result as a list of strings .
finds all elements matching the given query and sorts them .
check if the { @link } is not in the { @link } .
check if the user has the given role in the user s account .
conversion to { @code jsonobject } from java object .
returns the value of the { @code field } field .
returns the value of the field with the given name and value .
returns the object that is a valid object .
searches for the first matching search for the given search .
find the first matching the search query by the search query .
finds the first search by the search and returns the first index .
{
check if the given is a directory .
check that the file has a
check that the given is a

/ *
closes the underlying {
remove the from the .

/ * private methods -----
get the file .
get the .
get the for the given
/ * private methods
remove the from the
creates a new directory and adds it to the .
returns the list of files .
opens the client and returns the .

check if the attribute value is a valid attribute value .
write the given to the given
check if the given is a
add a new pair to the end of the list .
sets the body of the given { @code statement } to the given { @code } .
get the file type .
/ *
sends a pong request to the executor .
map the hash map of the pkcs12 form of the pem data .
returns the image of the image .
conversion to { @code jsonobject } from java object .
get the from the .
get the list of all descendants .
get the table s form .
get the electronic form field .
returns the string identifying the given

get the fields for the given field name and value .
closes the database .
split the given glob path to a list of strings .
<p > . < / p >
copies the array into a string array .
copies the contents of the array into a new array .
conversion to { @code jsonobject } from java object .
update a node with the specified node id .
adds a node to the given node .
remove a node from the partitions .
adds a node to the given node .
removes a node from the list of nodes .
remaps the cluster with the given cluster .
create a new partition with the cluster name .

register the specified bean by setting the name of the .
unregister the jmx server .
validates the parameters of the .
get the header for the header .
returns the names of all the columns names .
returns the names of all the columns of the specified columns .
get the key field .
gets the unique id for the given id .
returns the memory buffer of the given memory size .
get the number of bytes from the given byte array .



grant the grant for a user .
create a report for the job .
/ * ( non - javadoc )

{
{
returns the last modified time stamp from the last time .
connect to the server .
reconnect to the client .
sets the number of times that the given number of times to be recorded .
{
add a pair of items to the current member .
add a new member to the list of members .
add all keys to the set of values
{



removes the last long range from the given range .
returns the number of times that the specified range is less than the specified count .
returns the set of all the occurences of the given range .
returns the set of all the occurences of the given range .
removes the range from the specified range .
score the score for the score .

remove a pair of items from the specified range .
{
returns a new {
check that the given { @link } is not available .
closes the connection .
returns the total number of bytes that are available to the specified length .
returns a list of all the key - value pairs in the list .
returns the first element at the specified index .
{
returns a list of the specified sub - list of this list with the specified { @code key } .
sends a single - sent message to the client .

returns the maximum number of transactions that are currently active .
selects the position of the selection .
selects the selected item .
moves the current amount to the current position in the current position .
move the position of the item to the current position .
sets the position of the list .
returns a copy of this { @code position } with the given position .
sort the given comparator .
resets the fields for the field .
resets the fields for the specified member .
sets the name of the .
{
adds a new entry to the specified type .
get the type of the type .
get the number of bytes that is specified by the given type .
returns the number of arguments for the given argument .
inserts the specified object into the list of the specified objects .
returns the value of the first element in the list of nodes .
get the average value of the next interval in the range .
lookup a key from the given key .
lookup a value from the given name .



{

sends a message to the chanel .
sends a request to the specified file .
sends a { @link } to a { @link file } .
sends a request to the specified data .
returns a provider that is used to create a binding to the chain .
returns a provider for the given class .
returns a provider for the given provider class .
returns a provider for the given provider .
returns the provider for the given class .
resolve a provider provider for a given provider .
returns a { @link } that binds the specified provider to the specified { @code provider } .
resolve a provider for the given provider .
resolve the specified provider on the specified provider .
resets the to be used by the .
send a request to the given { @code url } .
get the targetnamespace name from the given scope .
{
creates a new logger with the given name and logging the log .
<p > lists all the objects in the list . < / p > <p > the list of objects can be used to sort the list of objects . < / p > <p > the <code > phrase< / code > elements are the same as the { @link list } of objects . < / p > <p > the
returns the short name for the given class .
returns a { @link string } representation of the given { @link } .
initialize the object .
updates the cache for the given name .
put the value of the member to the given value .
removes the specified attribute from the list of values .
returns a set of all the keys in this set .
returns a set of all the {
add a propertychangelistener to the list of listeners .
add a property to the list of listeners .
remove a property listener from the list of listeners .
fire the listeners for the given event .
fire the listeners for the given list of listeners .
fire the event .
fire the event .
returns the name of the property .
loads the properties from the map .
loads properties from the properties file .
loads the specified class from the specified class .
sets a property on the specified property .
get the array property of the given string .
get the property group for a given base name .
adds a new element to the list of elements in the given entry .
remove a from the map .
concatenates the given array into a new array .
checks if the given predicate is valid .
get the value at the specified index .

<p > . < / p >
selects a single element .
receive notification of a start element .
endelement method .

get the class name of the given class .
get the thread context loader for the given thread context classloader .
remove all entries in the table table .

returns a table that is used to store the database .




get the input stream for a file .
loads properties from a file .
reads properties from the properties file .
fire the event .
转移状态
sets the tag of the tag .
process the task queue for the given task .
updates the cache entries for the given entry .
updates the cache for the given predicate .
iterates through the current thread and returns a { @link } .
/ * private methods
main method .


validates the given constraint .
close the file .


main method .
write the to the output .
prints the system .
print the to stdout .
returns the list of { @link statementgroup } s for the given { @link statementgroup } .
returns true if the given group is a member of this group .
add a new name to the database .
get the site for a given site .

check if the jdbc driver is not valid .
{
{
loads properties from the file .
loads properties from a file .
returns an iterable that is backed by the specified { @code type } .

returns a list containing all of the given { @link list } of { @link class } s .
creates a new { @link } from a collection of values .
get the cache name for the given name .
returns a set of all the classes that are not equal to the given class .
returns a set of all the values of the given type .
creates a new { @link } with the given { @link class } .
creates a queue with the specified type and default type .
returns a { @code list<string > } that is a { @link } .
returns a { @code list<string > } that represents the list of { @link } s that are contained within the given { @link type } .
returns a { @code } that is used to filter the given type .
returns a { @code } that will be used to determine the values for the given type .
returns a { @code sortedmap } whose keys are the keys of the given key .
<p > . < / p >
returns the optional {
factory method for creating a new { @link } .
returns the id of the entity type .


{

reads the data from the database and returns a new object .
/ * ( non - javadoc )
write the data to the output .
creates a new { @link } instance for the given user .
encode a string into a string .
encode a string into a string .
decodes a { @code string } into a { @code string } .
decode a string to a string .
delete a table from the table .
get the object with the given id .



updates the contents of the given object .
query a single query with a given query string .
query for a single query string .

get the next item in the cursor
start the server with the given host and port .
start the browser .

returns the first file with the given name .
get the file name from the given file .
get the file name from the given file .
/ * ( non - javadoc )
parses the arguments and returns the result as a string .
get a key from the cache .
get the list of keys to retrieve the list of keys .
get a configuration object from the configuration key .
register the given service id .
evaluates the expressions in the chain .


sets the value of the specified belief set .

generate the specified class .
{
converts a boolean value to a boolean value .
destroy the connection manager .
aborts the transaction .
{
{
delete the object from the given object .


delete a selectioncriteria from a resultset .
delete the object references .
delete the specified object from the list of objects .
store the object in the cache .

store an object in the database .
store an object in the object .
sets the value of the property .
sets the named property .
store the object references in the given object .
/ * private methods
stores the objects in the given collection of objects .
adds the specified object to the list .
adds a reference to the collection of objects .
link a reference to the given object .





retrieves all cached objects from the cache .
{

get the object reference reference reference reference reference reference reference from the given reference .
check if the given object is a valid .

returns an iterator over the resultset object by selecting the iterator of the resultset .
returns a { @link } for the given { @link query } .
sets the adapter to be notified when the adapter is notified .
sets the current page element .
marshall the given parameter object .
sets the maximum position of the current page .
sets the margin of the page .
set the drawable to be used for the current drawable .
called when the page is scrolled .
grows the drag and drop the drag and drop down the drag and drop down the drag and drop down the drag and move to the current position .
<p > . < / p >

returns an iterator of all documents that match the criteria specified by the given query .
get a single materialized query from a resultset .

{
{
{
creates a proxy for the given proxy class .
returns the upper triangular matrix . <p >
adds a new resource to the given resource .
open a resource .


#ifdef java6
sets the jdbc driver for the given sql parameter .
<p > deletes the specified sql - value pair . < / p >
checks if the argument is a valid { @code args } .

returns the sql statement for the given sql statement .
close the resultset .
check if the given type is a valid { @link } .
sets the repeat mode . <p >
sets the offset offset in the current position .
sets the duration of the current animation .
sets the current state of the request . <p >
/ * ( non - javadoc )
{
{
assert that the array contains the given index .
compute the for the given .
returns the next available timeout .
clear the pool .

evicts the pool and evicts it if necessary .
start the timer .
/ * ( non - javadoc )
converts a list of objects into a list of objects .
build a criteria for a selectioncriteria
loads the class for the class loader .
returns the list of all the files in the list of all the files in the list .
returns the configured list of all the resources in the list of resources .
{

transfer all the contents of src / src / main / src / src / main / { @link } .
the table with the specified table .

removes the mapping for the given key .
removes all mappings from the table .
{
{
<p > get the agent tracker . < / p >
returns the names of the attributes of this attribute .

get the list of all objects in the specified object .


returns the { @code } if necessary .
invoke the method with the given method .
executes a method on the given object .
executes the given transactional method on the given { @link } .

returns true if the view is a view with the given id .
sets the animation for the animation .
create a layout view for the given layout .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
{
{
clear all threads from the pool .
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :
sets the parent views for the given parent view .
sets the { @link } that will be shown when the { @link } is pressed .
handles the view on the view .
{
sets the classpath .
set the reference to the default .
get the class field for the given class .
registers a transaction .
/ * private ( ) { = . ( ) ;
returns the transaction associated with this transaction .
/ * ( non - javadoc )

{
get the for the given .
verifies the response parameters .
get a { @link } for the given { @link } .
/ * ( non - javadoc )
copy the object to the given object .
set the ambient reflectance for the specified rectangle .
set the light to the light .
set the light to the gradient .
set the ambient reflectance for the given component .
resolve expressions as a string .
resolves the property value for the given property name .






check if the permissions of the permissions are granted .
request permissions for a given application .
checks if the permissions of the permissions are granted .
getter for - gets
setter for - sets
getter for - gets
setter for - sets
registers the {
getter for concepts - gets the label of the concept
setter for - sets
initializes the { @link } and { @link } .
broadcast the progress of the agent .
executes the given { @code } .
broadcast the { @link } to send to the { @link } .
add a file to the file .
add all files to the file .
sends a to the application .
creates the .
deletes the file or directory .
find the next next character .
{
check if the given { @link } is not in the { @link } .
main method .



creates a name class name for the given name .


creates a new folder with the given path and the basedir of the specified folder .
creates a path for the given path .
creates a reader for a file .
creates a file from the given file .
creates a file writer for a given file .

check if the given string is a valid identifier .
check if the specified { @link } is in the specified group .
check if the given string is a valid string .
returns true if the first element is a bit .
serialize the json string to a json object
read the xml file .
write the content of the given xml element .
adds a message to the default message .
resolve the given resource as a map of names of the template names .
resolve the specified { @link } to the given { @link string } .
formats the message with the given message .
get the .
create a new { @link } .
create a new node .
this method is called by the interface to create the .
returns a list of all nodes in the graph arranged by the given { @code indexedpredicate } .
remove a notification from the list of callbacks .
run the runnable .
called when the current thread is run on the thread .
called when the start of the execution is executed .
called when a method is invoked when the stop method is called .
checks if the current thread is a thread .
performs a comprehensive evaluation of the given { @code function } to each item in the specified { @code function } .

sets the tilesets of the given urls .
create a new
adds a listener to the list of listeners .
copies the listeners from the list of listeners to the listeners .

returns the {

returns the specified object .

parses the input stream and returns the offset from the reader .
======
==============
======
==============
generates a signature for the given name and signature .
binds the compiler configuration for the compiler .
bind the shader to the shader .

get the key of the key .
===========
===========
validates the given artifact against the given version .
validates that the artifact is valid .
validates the given license .
validates the module and returns the .
validates the given .
validates the given and .
get the class of the .
sort the files in the given array .
sets the value of the key to the specified value .
sets the value of the key to the specified key .
get the scaled data for the given key .
get the key value pair in the map .
sets the value of the key for the given key .
sets the key to the specified key .
sets the key to the specified key .
sets the value of the specified image to the specified location .
/ * ______________________________________________________________________

joins the given list of strings with the given separator .

resize image


convert a file to a file .
/ * ( non - javadoc )
sets the credentials for the credentials .
get the { @link } for the given { @code } .
add member member to the member .
fills the specified .
=========
copy a object to the given object .
configures the for the .
checks if the given artifact is a version of a maven artifact .
returns the last modified last modified last modified last modification .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last :
calls the function on the function and calls the function to perform the function .
===========
-------
-------
=========
===========
sets the angle of the gauge to the specified angle .
sets the shadow shadow for the scene .
******************** canvas ********************************************





returns the organization .
returns the organization .
get license by license
get the license license by license name
returns the artifact for the given artifact .
returns the artifact for the given artifact .
returns the module module for the given module .
returns a module for the specified module .
/ * ( non - javadoc )
{
retrieves the comments for the given comment id .




returns the number of bits in the array .


============
=========



get the for the given classdescriptor .
sets the bean for the given bean . <p >

check if the permission is not valid for the given permission .
show the user to the user s dialog .



returns true if the specified object is not valid .
get the .
load the properties file .

adds a new path to the list of paths .
set the .
send request to the given request .
send request to the given request .
send a request to the given session .

send a request to a { @link } .
send a request to a uri .
sends a request to the given destination .
send a request to the given destination .
sends a request to the client .
sends a request to the given destination .


sends a request to a uri .
returns a http request method .


use this api to fetch resources of given name .
get the response response from the response .
use this api to update .
use this api to unset the properties of resource . properties that need to be unset are specified in args array .
use this api to fetch all the resources that are configured on netscaler .
username username username username username username password username
get the url for the given uri .
resolve the url to the given url .
username username username
set the for the .
returns a uri for the specified uri .
returns the uri for the given uri .
returns a uri for the uri .
returns the uri for the given uri .
use this api to fetch resources of given name .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
<p > fill the given json string . < / p >
/ * ( non - javadoc )
search for the first region in the region in the specified region .
search for the first occurence of the first occurrence of the given article .
use this api to fetch a resources .
use this api to fetch filtered set of resources . set the filter parameter values in filtervalue object .
prints help information for the specified command line options .
parse the command line arguments .
add the panel to the current panel .
/ * set the properties to be set by default .
/ * set the properties to be set by the user .
returns true if the given array is a subset of the given .
returns the upper triangular matrix .
returns the upper triangular factor .
returns the number of elements in the array .
parses a string into a string .
{
returns the for the given .
returns an iterator for the elements of the specified iterator .
returns an iterator over all the elements in the iterator .

evaluate the projection matrix .
use this api to add .
use this api to update vpnformssoaction .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch resource of given name .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .


read a string from the given reader .

find the first occurrence of the specified space in the specified space .
read tag tag from the given tag .
read a string from the given string .

returns the entry at the index of the specified entry .
visits all the classes that have been registered to the given package .
visits a declaration type .
visits all the fields that are declared by the {
visits all the formal parameters .
returns the value of the given field as a string .


returns true if the group is a member of the given group .
returns the {
returns the next atom group .
sets the expression that is used to generate the expression .
main method .

{
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<p > . < / p >
use this api to fetch resources of given name .
{
{
use this api to add .
use this api to add resources .
use this api to delete .
use this api to update .
use this api to update resources .
use this api to unset the properties of resource . properties that need to be unset are specified in args array .
use this api to unset the properties of lbwlm resources . properties that need to be unset are specified in args array .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch resource of given name .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
use this api to update .
use this api to unset the properties of resource . properties that need to be unset are specified in args array .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch resources of given name .
get the column value as a column of the specified column
get the row number of the row
returns the position of the specified rectangle .
returns the absolute position of the specified rectangle .
returns the area of the area that the area is cropped .
find the index of the given cell with the specified cell .
finds the first occurrence of the specified cell with the specified cell .
calculate the widths of the grid .
calculate the grid columns from the grid table .
handles the { @link } for the given { @code throwable } .
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
returns the default layoutmanager .
/ * ( non - javadoc )
compute the coordinateaxis for a vertex .
{
/ * ( non - javadoc )
returns a list of all the in the list of .
returns a new item item that is used to retrieve item items from a given item .
get the color of the .
compute the euclidean norm of the matrix .
returns the value of the given element in the vector .
/ * ( non - javadoc )
collect all the resources that have been set in the same way as the given { @link } .
creates a { @link } .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >


calculates the alignment of the given alignment .
calculates the alignment of the .
calculates the scoring of the .

calculates the rmsd of the given .
find a location of the specified node in the given position .
main method .
returns a list of all the objects .
returns a clause that is functors in the clause .

{

{
{
get the set of resource for the resource .
returns the first term of the given term .




reads the next token from the stream .
reads the next chunk of the current directive .
applies a unary operator to the given { @code } .
initializes the .
consumes the next token in the stream .
reads the next token from the stream .
collect all elements from the supplied iterator into a collection .
use this api to fetch a resources .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
returns a set of all the occurences of the given .
returns all the characters in the given set of { @link } s .
use this api to disable .

create a new url from the given file path .


get all features that match the specified criteria .
checks if the given string is a string .

/ * ( non - javadoc )
returns the tag that is used to identify the tag .
returns the list of paths for the specified { @link } .
returns the names of all classes that are not in the list .
get the signature of the method signature .
use this api to fetch resources of given name .

sends a message to the client .
sends a message to the specified queue .
/ * ( non - javadoc )
receives messages from the queue and returns a { @link } that will be sent to the queue .
deletes the specified message from the request .
deletes a message from sqs queue .
sets the current selection for the given message .
sets the value for the given message .
sends a batch message to the batch .
send message to message .
deletes the specified messages .
deletes a batch of messages .
<p > the request to send to the specified message . < / p >
<p > the list of objects that are used to send messages in the request . < / p >
purges the specified queue .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
visits a variable in the .
{
visits a {
visit a .
visit a .
this method takes a single url and returns a list of { @link } s .
resets the state of the array .
returns the factorial of n - 1 if the given number is not equal .
returns the next permutation of the next array .
use this api to fetch resource of given name .
{
{
aligns the alignment between two proteins .
{
/ * ( non - javadoc )
commit the transaction .
rollback the current transaction .
{
add a new transaction to the cache .
acquires the lock on the thread .
release the thread context .
store the current session .
returns the url of the given configuration .
find the resource found for the given resource .
returns the url of the url .
search the next search and return the next search .
check if the node is a valid helm2 node .

restores the given object to the existing values of the given object .
get the value of the attribute

returns all public fields for the given class .
sets the buffer size .
get the key value pair .
put the key and value into the map .

usage : java twitter4j . examples . .
get properties from input stream .
get properties from file .

get the properties object from the properties file .
returns a { @link string } containing all the properties of the { @link properties } instance .
returns true if the given string is a valid name .
/ *
/ * ( non - javadoc )
{
returns a list of all link elements .

sets the value of the specified attribute as a { @link } .
use this api to fetch resources of given name .
use this api to add .
use this api to add vpnnexthopserver resources .
main method to run the .
get a list of all from the given stream .
use this api to update .
returns true if the current { @link } is a { @link } .
use this api to update lbwlm resources .
sets the state of the state of the given state .
use this api to unset the properties of lbwlm resources . properties that need to be unset are specified in args array .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch resource of given name .
write the contents of the file into the stringbuffer .

use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .

/ * ( non - javadoc )
splits the protein sequence of protein sequence into a proteinsequence

returns a proteinsequence of the input sequence .
sets the list of all the in the list .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch resource of given name .

displays the dialog s dialog .
use this api to fetch filtered set of resources . set the filter parameter values in filtervalue object .
gets the project associated with the specified project .
removes the specified revision from the specified project .
restores the specified { @code revision } into a { @link } .
get a user that has the given name .
adds a new member to the current member .
removes the specified member from the specified member .
updates the specified member .
retrieves the repository information for the specified project .
add the given revision revision to the given project .
add the specified { @link project } to the repository .
removes the specified revision from the repository .
restores the specified {
updates the specified grants .
add a new revision token .
add a new revision token .
remove a specific revision from the given id .
removes the specified article revision from the specified { @code id } .
sets the maximum height of the specified drawable .
updates the column value of the specified column .
get the column value .
removes a row from the row .
returns the maximum size of the preference s position .
{
updates the listeners for the given event .
updates the column width in the column in the specified column .
updates the specified entity with the given id .
adds the specified { @link project } to the specified { @link project } .
removes the specified permission revision from the specified { @code id } .
updates the specified permissions for the given user .
adds the specified { @link project } to the specified { @link project } .
removes the specified { @link user } .
updates the specified { @link } for the specified key .
adds the specified permission to the list of permission folders .
deletes the specified revision and adds it to the list of child folders .
updates the specified folder and adds it to the given path .
get the specified { @link project } for the specified user .
returns the specified { @link project } for the specified { @code id } .
find the specified { @link accesscontrollist } from the repository .
returns the user s profile for the given user .
get the tokens that should be used to retrieve the { @link } .
creates a new token with the given id .
creates a new token with the given id .
creates a new token with the specified token chunk .
{
{
returns the token with the given id .
find the token identified by the user id token .
checks if the profile member is the member .
ensures that the specified { @code project } is valid .
create a new { @link } .
creates a new { @link } .
get the ids of all the ids in the given ids .
initializes the reader .

returns the link to the given link .
returns the next next element in the list .
returns a key strokes for the specified keystroke .
convert the input string to a { @link } .
applies the given { @link } to the given { @link iblockstate } .
applies the to the view .
add a pinbox color .


adapts a color color color .

applies the dividers to the current view .
applies the to the discrimination .
use this api to add iptunnel .
use this api to add iptunnel resources .
use this api to delete .
use this api to delete dnsptrrec resources of given names .
use this api to update nspbr6 .
use this api to update nspbr6 resources .
use this api to unset the properties of resource . properties that need to be unset are specified in args array .
use this api to unset the properties of dnszone resources . properties that need to be unset are specified in args array .
use this api to enable .
use this api to enable nsip resources .
use this api to disable .
use this api to disable dnszone of given names .
use this api to rename a static resource .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch resource of given name .
use this api to fetch resources of given names .
use this api to fetch filtered set of resources . filter string should be in json format . eg : vm_state : down name : [ a - z ] +

reset the map .
use this api to fetch resources of given name .
sets the value of the given property .
returns a copy of the given array as a list of { @code [ [ [ n ] } .
creates a list with all items from the given array .
returns a set that is a set of values .
returns a collection of objects that matches the given collection of objects .
load a collection of classes from the given file .
loads the file from the given file .
returns true if the given collection is not null .
removes the specified object from the list .
returns the index of the first occurrence of the specified element in the list .
returns the index of the first occurrence of the specified element in the list .
returns a constrained view of the specified collection with the specified elements .
returns a constrained view of the specified collection .
returns a constrained view of the specified collection with the specified elements .
returns true if the passed in { @code list } is equal to the given { @code } .
compare two lists .
returns a list containing all items from the given iterable .
sorts the given list into ascending order .
returns a list containing all items from the given { @code iterable } .
returns a set that contains all items from the given { @code set } .
add all items from the collection to the collection .
returns a list with all items in the list .
returns a list containing all elements in the specified list .
flattens a collection of objects into a list of objects .

checks if the collection contains all of the elements in the collection .

get the set of values from the set

returns the center of the center of the atomplacer3d .
returns the points of the given point in the given point .
calculates the feasibility of the .
calculate the overall right state of the .
returns the list of subunit {


returns the for the given .

check if the parameter is not valid
compute the parameters for the given parameters .
compute the parameters of the given .
calculate the alignment between two residues and the residues in the alignment .
{



commit the given commit and commit the given commit .
pushes a new branch to the current working directory .

returns the cholesky decomposition of the given matrix .

decomposes the tridiagonal form of the given rng .
get the value of the property .
creates a new { @link } with the given name and path .
creates a new event .
creates a new event .
get a list of links for the given element .
get the { @link } for the given { @link } .
get a set of { @link } s .
creates a new object .
/ * ( non - javadoc )
sets the maximum size of the data .
adds a new row to the specified row .
<p > removes a new row from the specified row and stores the result in the specified row . < / p >
<p > checks if the matrix is a matrix of rows . < / p >
update the neighbors of the given index .
update the neighbors of the k - k - k - randomly vector by the k - k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k
returns the { @link } for the given { @link } .

decrypts the specified secret with the given key and secret key .
creates a new object from the given { @code } .
create a from the given .

returns a synchronized map that maps a map to a map .
clear the map .
convert a string to a string .
registers listener for the listener .
initialize the properties file .
reload the properties from the properties file .
get the trie .
add a node to the node .
get the node id from the trie .
returns a list of { @link } s that match the given host name .
resolve the host and port information .
get the { @link } for the given { @code } .
计算相似度分值
returns the number of characters in the input array .


create a new instance
use this api to fetch resources of given name .
use this api to fetch resources of given name .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
use this api to count resources configued on netscaler .
use this api to count the filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
check if the given track is a

updates the specified track with the specified value .
export the user to the user .


<p > sets the given { @code } to the given { @code } . < / p >
<p > computes the given number of times in the given { @code } . < / p >

returns the response body of the response body .
<p > performs the following operation : <br > <br > where c = a - z * b<sup > t< / sup > <br > c<sub > ij< / sub > = - a<sub > ij< / sub > * b<sub > ij< / sub > < / p >
returns the response body as a string .
close the stream .
get client client client client client client client .
releases the client spi .
get the string representation of the .
{

change the password for the user .
get a dse { @link } instance .
check if a given is a .
checks if the resource is a resource .
encodes the specified string into a byte array .
decodes a 64 - bit hexadecimal string .
solve a * x = b
compute the eigenvalues of the matrix and stores the values of the matrix .
{
{
/ * ( non - javadoc )
{
use this api to fetch resource of given name .
transforms a { @link } to a { @link } .

sets the list of selectable items items to be deleted . <p >
get the list of all models for the given .
sets the model for the given model . <p >
sets the list of { @link } s that are contained in the list .
sets the list of items that are contained in the list .
sets the model for the given model . <p >
sets the list of items to be deleted .
{
adds a new item to the list of items in the list .
sets the item at the given position .
moves the cursor position in the range of items to the given position .
removes a single item from the adapter .
remove a range of items from the list at the given index
removes the specified item from the fastadapter .

{
returns a new instance for the given .
use this api to enable lbmonitor of .
use this api to disable .
use this api to fetch all the resources that are configured on netscaler .
add a parameter to the request .
{
add a parameter to the list of values .
use this api to add .
get the result of the given { @link } .
use this api to add appfwlearningdata resources .
use this api to delete appfwprofile name .
use this api to delete lbwlm resources of given names .
returns a new { @link } object that can be used to execute the { @link } .
use this api to fetch resource of given name .
use this api to fetch statistics of resources .
get a {
add a batch of statements to the batch .
{

use this api to fetch statistics of resources .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
use this api to add iptunnel .
use this api to add authenticationradiusaction resources .
use this api to update .
use this api to update nslimitselector resources .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch all the resources that are configured on netscaler . this uses which is a way to provide additional arguments while fetching the resources .
use this api to fetch resource of given name .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
use this api to fetch a resources .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
sets the key for the specified key .
sets the name of the x y and z coordinates .
use this api to fetch resources of given name .
<p > performs the following operation : <br > <br > c = a * b<br > c<sub > ij< / sub > = - 1 * max + &alpha ; * a<sub > ij< / sub > = - 1 < / p >
<p > performs the following operation : <br > <br > c = a * b<br > c<sub > ij< / sub > = - > ij< / sub > +
<p > performs a rank - 1 norm of a matrix and stores the result in the given matrix . < / p >
<p > performs the following operation : <br > <br > c = a * b<br > c<sub > ij< / sub > = - > ij< / sub > * a<sub > ij< / sub > * b<sub > ij< / sub > < / p >
<p > performs the following operation : <br > <br > c = a + &beta ; b c : c : = c * a<sup > t< / sup > * b<br > c<sub > ij< / sub > = c<sub > ij< / sub > = - > ij< / sub > + &alpha ; * a<sub > ij< / sub
returns the product of the product between the two values .
<p > performs the following operation : < / p >
sets the texture to be used by the .

use this api to fetch resources of given name .
use this api to fetch resource of given name .
creates a new instance .
adds the element to the list .

returns the value at the index of the specified index .
returns the index of the specified element in the range of the specified element .
returns a new array containing the elements in the specified range .
copies the values from the specified range of the source to a new one .
reverses the array .
sets the element at the specified index .
called when the context is not installed .
/ *
use this api to generate a cluster .
use this api to fetch all the resources that are configured on netscaler .
<p > performs the following operation : < / p >
use this api to fetch all the resources that are configured on netscaler . this uses which is a way to provide additional arguments while fetching the resources .
<p > computes the qr decomposition of the matrix and returns the result . < / p >
compute the value for the .

process the topics .
{
process the .


/ * ( non - javadoc )
{
get the template name from the template .
get a svg view of the given
get the from the given
get a svg view of the given
get a svg view of the given
get the for the given
lookup the url for the given context .
resolve the view to the view .


returns a url for the given url .
{
{
creates a stats stats stats stats .
/ * ( non - javadoc )
/ * ( non - javadoc )
finds a field with the given name and field name .
initializes the connection configuration .
{
creates a new database table .
add the specified hml to the file .
adds a file to the file .
sets a value to the table .
initialize the .
returns the number of words in the range of the radar .
calculates the pearson correlation coefficient for the given .

returns the value of the largest member that is the largest value in the map .
calculates the score for the given index .
returns the probability density of the probability density - likelihood of the .
returns the probability density of the
returns the number of elements in the array .
returns the number of elements in the array .
computes the average of the next invokation .
get the value of the specified key .
{
get the client and client properties .
resets the client to use .
add a sort sort to the sort table .
add a sort sort to the sort order .
sets the pagination clause .
compute the energy of the and .
calculate the score of the given .
returns the of the given .
/ * this method is used to determine the of the .
/ * : : : : : : : : : : : : : : : : : : : : : : : : : : : : : :

returns the number of nodes in the subtree of the given node .
find the index of the first occurrence of the specified index .
use this api to fetch resources of given name .
use this api to fetch the statistics of all resources that are configured on netscaler .
use this api to fetch statistics of resource of given name .
use this api to fetch resource of given name .
use this api to fetch resources of given name .
use this api to fetch resources of given name .
reads the model from the given file .
returns a new with the specified weight .
returns a new with the specified number of features that are equal to the specified number of weights .
returns a new with the specified weight and index .
returns a new with the specified weight and weight index .
computes the unnormalized probabilities for the given dataset and returns the result as a { @code } .


create a new { @link } instance .

converts an array of doubles to a float array .
returns an array containing cumulative eigenvalues of the given complex number .
<p > performs the following operation : <br > <br > a = a + b <br > <br > c<sub > i< / sub > = 1 < / 2< > < / p >
adds a line to the end of the array .
adds a pair of two arrays to the given array .
<p > performs the following operation : <br > <br > c = a * b <br > <br > c<sub > ij< / sub > = c<sub > ij< / sub > = - 1 < / p >
<p > performs the following operation : <br > <br > c = a + b<br > <br > <br > c = a + b<br > <br > <br > c = a + b<br > <br > <br > c = a + b<br > <br > <br > c = a + b<br > <br > <br > c =
add an array of doubles to the array .
multiply a double array with a double array .
returns the value of the given element .
<p > adds the specified number of elements to the specified array . < / p >
computes the dot product of the given array by a b .
counts the number of occurrences of the given number of integers .
returns a vector with the given number of elements .
returns the array of elements in the array .
returns the largest double in the given array .
returns the largest absolute value of the given { @code double } .
returns the sum of all elements of the given double array .
computes the sum of the sum of the l2 norm .
returns the minimum value of the matrix elements .
returns the maximum value of the matrix .
returns the sum of the given number of times .

returns the product of the product between the given vector and the given vector .
returns the first occurrence of the specified array .
normalizes the input array to the given array .
computes the double - beta - norm of the two vectors .
<p > . < / p >
returns the number of samples in the specified range .
jensen - shannon divergence divergence between two vectors .

computes the jacobian norm of the given vector .
computes the dot product of the given and the given eigenvalues .
computes the difference between the two sets .
converts a byte array into a byte array .

returns an array containing the given elements in the specified order .
<p > a list of tags to be used in the tag . < / p >
<p > the tags to be included in the list of tags . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link #setresourcetags ( java . util . collection ) } or { @link #withresourcetags ( java . util . collection
returns the number of bytes that are currently being used by the user s protocol .
{
creates a path for a path .
returns true if the key is not in the map .
returns the map of the map entries for the given map .
add a new mapping to the list of .
main method to start the program .
creates a uri from a uri .
parse a uri uri from a uri .
create a new uri url for a uri .
{
builds a { @link } object .
set the uri uri .

set the port for the given port .
sets the specified uri .
query the uri for the given query .
sets the value of the given query parameter .
sets the query parameters for the query parameters .
sets the value of the given query parameter name .
sets the fragment id to the fragment .
returns the next character in the current line .
{
returns the next character in the current line .
moves the index of the index to the index .
move the next index point to the index .
returns the character value of the specified symbol .
{
{
recycle the drawable .
use this api to fetch resources of given name .
creates a new { @code predicate } for the given { @code predicate } .
returns a { @code } that is a { @code predicate } .
returns a { @code } whose { @code predicate } is { @code true } .
returns a { @code } that is a { @code } .
compress a byte array into a byte array .
pad a { @link charsequence } with the given { @link stringbuilder } .
normalizes a string to be used by the given string .
md5加密


adds a new token to the id .
returns an iterator for the iterator .
prints the tokens of the given huffman token .
get the list of all the in the array .
check if the flag is true if the flag is true false otherwise .

/ *
checks the validity of the token and the id of the token .
returns the first index of the specified method .
creates a new instance of the given { @code runnable } .
creates a new { @link } with the specified revision information .
returns the tag id for the specified tag id .
updates the tag with the specified tag name and tag name .
deletes a tag .
returns the compact tag records for the resource .
add a new mapping to the list of training features .
add a new pair of labels to the list of labels
get the provider for the given class .

returns the provider provider for the given provider .
get the list of providers for the given provider .
creates a new { @link } from the given list of { @link } .
use this api to fetch resource of given name .
use this api to add iptunnel .
use this api to fetch all the resources that are configured on netscaler .
use this api to fetch resource of given name .
use this api to fetch filtered set of resources . set the filter parameter values in filtervalue object .
converts a jpaentry of a resource to a resource id .
converts a { @link } to a { @link } .
creates a provider for a given id .
<strong > [ icu ] < / strong > returns the locale for the specified locale .
<strong > [ icu ] < / strong > returns the locale of the specified locale .
returns the id of the resource .
returns the path from the parent folder if it is not already present .
converts a path to a path .
extracts the id from the resource .
returns the id of the given id .
returns the type of the resource .
creates a resource id for a resource .
use this api to fetch the statistics of all resources that are configured on netscaler .
use this api to fetch statistics of resource of given name .
validates the given parameters .
get all the items in the list .
returns a stream of { @link } objects from the specified stream .
bulk delete api
<p > retrieve a list of input stream for a given key . < / p >
<p > returns the input stream for the specified key . < / p >



get all the dependencies for the given .
check transitive dependencies
returns a list of all isotopes in the tree .
returns a list of all isotopes that are entailed to be used by the .
returns a set of nodes that are reachable from the given .

sets the map of { @link } s for the given { @link } .
get the field header value from the header field .
get the date header field .
sets the value of the request property .
adds a property to the request .
get the property value for the given key .
get the properties for the request .
sets the { @link } to use for the given { @link } .
get the content handler for the given content handler .
strip the content of the content type .
create a new { @link } for a given class .
returns the package name of the given package name .
returns the content of the .
returns the content of the given inputstream .
check if the input stream is valid .
reads the next byte from the input stream .
skip the next line on the given stream .
use this api to create .
use this api to fetch resources of given name .
run the cluster and waits until the server is shutting down .
closes the connection .
use this api to fetch a resources .
use this api to fetch filtered set of resources . filter string should be in json format . eg : port : 80 servicetype : http .
{
{
{
check if the child node is a child node name .
{
{
{
{
{
{
{
{
{
/ * ( non - javadoc )
resets the field to the declaring field .
returns the parameters of the object .
returns the offset offset in the range of offset .
returns true if the segment is the first segment of the first segment .
loads the data from the given { @link } .

creates a bean for the given bean .
use this api to fetch resources of given name .
returns the default value of the given type .
removes the last entry from the list of entries .
returns the entry in the hashmap .
tries to find the entry that the parent element is located at the given position .

returns the specified key if the key is not present .
returns the value of the preference s priority .
add a key to the list .
add a priority to the priority
check if the priority is a member of the given priority .
decrease the priority of the specified preference .
increment the priority of the specified key .
returns a new { @code atomicreference } instance with the given value .
find all the beans in the specified set of beans .
creates a new { @link } from the given { @link } .
adds a method to the stack .
pushes the given type to the given class .
checks if the given { @link } is annotated with { @link } .

initializes the scope for the given scopes .
loads the specified service class loader .
reload the files from the bundle .
{
combines the iterators of iterators into a single iterator . the returned iterator is backed by the iterator .
use this api to fetch a resources .
use this api to fetch filtered set of resources . set the filter parameter values in filtervalue object .
returns the sample size of the lzencoder .
calculates the variance of the given { @link } with the given amount of the given { @link } .
use this api to fetch resources of given name .
returns true if the given { @code cls } is assignable to the given { @code cls } .
creates a new instance .
get the { @link } for the given { @link } .
use this api to fetch resources of given name .
this function is called after everything else has been recomposed and allows the template to be called after the template is called the values of the property set .
add a attribute .
add a new literal attribute to the list of attributes .
set the value of the attribute .

returns the qname for the given qname .
returns the first element in the input string .
use this api to clear .
returns the value of the specified attribute as a string .
use this api to renumber nspbr6 .
checks if the given prefix is a prefix of the prefix .
/ * ( non - javadoc )
checks if the list contains the specified filter .
returns the name of the prefix that is the name of the first occurrence of the specified prefix .
get the element name of the element in the source string .
check if the given prefix is a prefix of the prefix .
execute the given function and return the result .
visits a child node with the given name .
unsupported .
obtains a { @code japanesedate } representing the specified time .
obtains a { @code localdatetime } from a { @code localdatetime } .
obtains a { @code localdatetime } representing the specified offset in milliseconds . <p > this factory method allows to use a { @link java . time . instant } . <p > this allows you to convert a { @code zoneddatetime } to a { @code localdatetime } . <p > this method allows the amount to be a valid time -
obtains a { @code japanesedate } from a temporal object . <p > this obtains a date in the calendar system from the specified time object .
returns a copy of this date with the same time .
returns the value of the specified field . <p > this returns a field value for the specified field . if the value is not possible to return the value of the field is not set . if the value is not set then the value is returned . if the value is not valid then the value is returned . <p >
returns a copy of this date with the specified { @code localdatetime } . <p > the time zone is backed by the adjuster of this date to the same time . if the { @code date } is not a { @link } then the { @link } will be used to adjust the date and time of the adjuster
returns a copy of this date with the specified field . <p > this method subtracts the specified field and returns the value of the field . <p > this method subtracts the specified field and returns the value of the field . <p > this method subtracts the specified field and returns the value of the field . <p > this method
returns a copy of this date with the specified hour .
returns a copy of this date with the specified number of seconds .
returns a copy of this date with the specified time retaining the specified time .
returns a copy of this date with the specified number of hours . <p > this instance is immutable and unaffected by this method call .
returns a copy of this date with the specified amount added . <p > this returns a copy of this date with the specified amount added . <p > this returns a copy of this date with the specified amount added . <p > this returns a copy of this date with the specified amount added . <p > this returns a copy
returns a copy of this date with the specified date - time .
returns a copy of this date with the specified offset .
returns a copy of the date that this date - time with the specified duration added . <p > this method subtracts the specified period from the date . the time zone is a copy of the time zone .
returns a copy of this date with the specified date - time .
subtracts the specified amount from the specified amount from the specified amount of time to the specified amount . <p > the amount of time is measured by the specified amount subtracted . <p > this subtracts the specified amount from the specified period from the specified amount of time . <p > the amount of time is measured by the specified amount
returns a copy of this date with the specified number of years subtracted . <p > this subtracts the specified amount from the years to the specified number of years to the years . if the amount of time is greater than the maximum number of days then the amount is adjusted to the result .
returns a copy of this date with the specified amount to the maximum number of months subtracted . <p > this subtracts the specified amount from the months to the specified number of months subtracted . if the specified amount is not specified then the result will be adjusted to the specified number of months subtracted . <p > this subtracts the specified
returns a copy of this date with the specified number of weeks subtracted . <p > this subtracts the specified amount from the month - of - year - month . <p > this subtracts the specified amount from the month - of - year field< / time . this amount is only allowed to be in the same time .
returns a copy of this date with the specified number of days subtracted . <p > this subtracts the specified amount from the days - of - zone . <p > this subtracts the specified amount from the days - of - zone . <p > this method subtracts the specified amount from the days - of - zone . <p > this
{
subtracts the specified amount from the specified unit . <p > this calculates the amount of time between two { @code other } and { @code other } and { @code other } and then subtracts the specified amount from the specified unit . if the amount of time is specified the amount will be negative . if the amount of time is
format the date and time formatter .
checks if the given date is a date - time .
checks if the given date is a date and time .
/ * ( non - javadoc )
sets the type of the .
initialize the fields .
{
use this api to add .
use this api to add authenticationradiusaction resources .
use this api to update .
use this api to update appfwlearningdata resources .
use this api to fetch all the resources that are configured on netscaler .
initialize the .
updates the font table .

/ * ------------------------------------------------------------
check if the given byte is a valid bidi pair .
updates the style of the font and the font .
/ * ( non - javadoc )
transform the given transform into a view of the given transform .



use this api to fetch resources of given name .
adds a new { @link activity } to the given activity .
compares two integers with the same cardinality .

clear the current map of variables and clear the values of the query .
returns true if the given <code > value< / code > is empty or empty .
creates a filter filter .

get the query parameters .
use this api to update .
use this api to unset the properties of resource . properties that need to be unset are specified in args array .
use this api to fetch all the resources that are configured on netscaler .
{
resets the queue to be removed .
find the first occurrence of the given .
sort the key and sort key in the sort order .
enters a new instance of the given {
get a connection to a new connection
get a connection from the connection .
{
checks if the given { @code } is { @code true } .
checks if the given type is a synthetic variable .
process the given visitable object and return the appropriate type for the given .
sets the element at the specified index .
returns a new that aggregates the result of the given statement .
verify that the given is a object .
called when a fragment is pressed .
get a list of all the cursor and the cursor position .
returns the list of all the elements in the array .
get the list of rows for the given row .
{
returns the transaction id from the given transaction .
check if the given { @link } is not in the given { @link } .
flush the request to the server .
returns the cache entry for the given cacheconfig .
get the cache timeout for the given timeout .
returns the cache of the cache .
get the number of times the given number of times .
returns the maximum size of the cache .
get a specific type of given type .
returns the name of the application .
verify the name and the and .
sets the retry timeout for the connection .
returns the retry timeout for the connection .
returns the string password for the given user .
adds a new { @code } to the { @code } .
adds a new { @code } to the provided { @code } .
clears the and .
sets the transaction timeout for the given transaction .
print the keys in the list .
check if the client credentials should be authorized .
check if the user is authorized to be a valid ra .
check if the user has the same key as the key .
get the { @link } for the given key .
configure the configuration .
get jobs for a specific history .
/ * parse a list of nodes from a given filter .
returns a { @link } for a specified key .
returns the list of all parameters of the given type .
sets the description of the panels description .
generate the {
generate the {
compute the graph of the given node .
returns all the data types for the given type .
returns all the data types for the given data type .
{
{
returns the number of .
/ * ( non - javadoc )
returns the buffered image as a byte array .
execute the function .
checks if the specified { @link } is equal to the specified { @link } .
{
{
clones the given filter .
{
apply the { @link gvrcursorcontroller } to the screen .
returns the absolute color of the given angle in radians .

creates a new .
add a list of objects to the list of edbobjects .
add a new to the list of objects .
remove a from the list of .
builds the class loader for the given class .
{
sets the { @link } .
/ * ( non - javadoc )
sets the effective privacy flag .
sets the effective intable settings for the given .
sets the default settings for this setting .
compare two and returns the first empty list .
sets the default settings for this settings .
sets the default settings for this settings .
sets the default settings for this settings .
sets the default settings for this .
sets the flag .
sets the .
sets the flag to true if the current level collides flag set is true .
sets the flag of the .
sets the rounding mode .
{
returns the bundle containing all the bundle dependencies .
load the bundle definition from the bundle .
checks if the model is a bundle .
extracts the name from the url .
{
sets the value of the property .
sets the default number of decimals .
returns the best category for the given category .
{
get the { @link } for the given { @link } .
adds a new { @code } to the given { @code } .
returns the version of the .
returns the major minor version of the .
/ * ( non - javadoc )
{
{
returns the { @code string } representation of the given { @code string } .
{
returns the locale corresponding to the specified locale .

check if the url is a url .
read the arff file .

returns the host name of this host .
returns the host name of the host .
check if the given mask is equal to the given mask .
converts an { @link } to a { @link } .
converts a string to a string .
converts a { @code string } to a { @code string } .
/ * ( non - javadoc )
get the elements of the given array using the given prefix and the given { @code } .
/ * ( non - javadoc )
set the sql statement .
{
check if the given {
validates the given prefix and { @code } .
compares this { @code } to another .
checks if the given address is a prefix of the address .
checks if the given { @code } is valid .
returns the address for the given address .
{
returns the address of the given address .
/ * ( non - javadoc )
returns the number of bytes that are used to adjust the number of bits in the network .
returns the number of characters in the given string .
returns a list of strings in the given array of strings separated by the delimiter .
returns the prefix of the prefix length .
update all variables in the list of .

dump the output of the .
converts a string into a string .
converts a string into a hex string .
dumps the contents of the table to the given table .
dumps the row data to the given row .
dumps the to the output .
get the service class for the given service name .
sets the monetary value of the money .
sorts the list of elements in the list .
sorts the given list by key .
> > null< / code >
performs transformation on the transformation .
checks if the given date is a date in the julian calendar .
appends the specified to the list .
appends the internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal internal api .
appends the specified object to the specified object .
{
appends the string to the end of the string .
appends the given string to the end of the list .
appends the given <code > / code > to the <code > / code > .
appends the specified object to the end of the buffer .

append the given separator to the end of the list .
append the given number of segments to the specified index .

returns the content of the given list of { @link } s .
splits the given lines into lines with the given line .
the binary <code > a * b< / code > operator .
{
the binary <code > / code > operator .
the binary <code > / code > operator .
the right left - handed right - to - left - to - right order .
the elvis operator ( exclusive ) comparison of the left - right - handed coordinate system .
the elvis operator .

saves the to disk .
returns { @code true } if the two { @code needle } is less than equal to the specified value .
the operator s left - right right - wise right - wise is the right - handed coordinate .
constructor .
sets the value at the specified index .
pushes the value of the given value to the end of the array .
merge the given into a new one .
merge the given { @link } into the given { @link } .
get the organization for the organization .
returns a { @link } that localizes the title of the specified organization .
returns the organization .
**************************************************************
**************************************************************

parses a json string into a json payload .
resets the current state of the current thread .
resets the count of the next number .
resets the char array to the specified stringbuffer .
resets the char buffer .
resets the string representation of the given string .
resets the string to the current string .
skip the next line if it is not already in the list .
returns true if the script is a script .
get the index of the first index of the given index .
{
{
get the uri from the uri
returns the for the network network network .
returns true if the network is connected to a network .
reads the contents of the url into the url .
read a string from the given url .
read a list of strings from a list of strings .
read a list of strings from a file .

returns a { @code gpx } object with the specified input stream .
writes the given { @code } to the given { @code outputstream } .
skips the specified paired { @code } .
reads a <code > char< / code > from the specified <code > servletinputstream< / code > .
reads the contents of the given input stream into a new { @link inputstream } .
reads a number from the given input stream .
reads a { @link reader } from the given { @link reader } .
reads the contents of a { @link reader } into a { @link reader } .
reads the contents of the input stream into a byte array .
reads the file from the file .
read a string from a string .
read the given file from the given file .

write a file to a file .
write the file to the file .
write stream to file stream .
writes a file to the given file .





checks if the given file is a directory .
deletes a file .
reads the contents of the input stream into a byte array .
checks if the configuration is a resource .
encodes the given string into a string .
decodes a { @code string } from the given { @code string } .
{
returns the method list of the given method .
/ * ( non - javadoc )
creates a new instance .
check if the given character is a valid character .

{
{
{
returns the number of nodes in the given node .
returns the number of nodes in the current node .
extracts the spans for a single line .
add the cookie to the request .
get the nonce for a given time .

returns the value of the specified key from the given string .
returns true if the given key is a valid boolean .
returns the integer value of the specified key .
gets a boolean value from the specified key .
returns the list of all the keys in the list .

check that the config is not null and if not found it is not null .
sets the name of the given namespace .
sets the name of the given node to the given namespace .

replace the specified substring in the given string with the given offset .
replace the specified substring in the given range starting at the given offset .
copy a range of characters to a destination .
sets the child node that is the first node that is the last node of the given child .
{
returns the field name for the field name .
cleans up the .
checks if the given { @code activity } is a { @link } .




returns the n digit of the specified string .
returns the next character in the current position .
set the value of the attribute with the given value .
get the date value of the date or null if the value is not valid .
delete the attribute value .
returns an enumeration of names of attributes existing within this attribute .
creates a unique alias for the given property name .
{ @inheritdoc }

activate the service .

creates a new { @link } .
creates the suites .
creates the output for the given .
creates a list of all the files in the specified directory .
creates a log file and returns the output directory .
sorts the map .
copy the contents of the specified resource to the given directory .
creates a new instance of the specified class loader .
creates a new { @link } with the given { @link } and { @link } .
returns the string representation of the .
evaluate the xpath and return the result .
returns true if the tree is a descendant of this node .
<p > add variables to the specified index . < / p > <p > this method is used to fixup variables from the specified index . < / p >


creates a new { @link } .
prepare the cluster to be deleted .
add a property on the property list .
remove a property from the adapter .
sets the list of values to the given set of values .
update the properties of the given property
/ *
build module module build module information .
find the manifest file for the given manifest file .
checks if the manifest file is in the manifest .
this method returns the file name of the file .
sets the method to be used for the given method .
sets the name of the .
{
add a new handler to the given destination handler .
adds the specified { @link } to the given { @link } .
builds the validator for the given { @link } .
{
returns a map of all scripts that are used to generate the script .
returns the version number of the .
generates script scripts for script scripts .
sends a message to the specified { @link } .
loads the icon image for the given resource .
sends a message to the specified { @link } .


creates a filter filter filter filter filter .
checks that the given value is a valid operator .
generate a file output stream for writing to the output .
update the statistics for the given statistics .

adds a new to the list of objects .


{
converts rdata to a .
{

sets the value of the given value .
{
start the timer .
enable the
updates the number of times the given number of times .
updates the sql parameters for the given id .
update the code in the database .
updates the code in the database .
remove a from the given id .

prepare the given component .
disable the database and returns the database .
disable the sql statements for the given { @link } .
get the list of all the in the request .
get the number of the .

{
grants the current user s permissions to the given activity .
grants the permissions for the given redirect action .
authorize the user to enter permissions to the user .
checks if the given service is a valid android application .
checks if the application is not installed .
calculates the size of the given size .
calculates the number of bytes in the range [ 0 ] .
creates a { @code } that skips the specified { @code length } .
creates a stream that contains a stream of items that are equal to the specified number of items .

sends a dialog to the dialog .
called when a request is received from the request .

creates a new { @link } from a { @link file } .

sets the session session .
returns the current session .
returns the token as a string .
returns the current session for the given session .
sets the expire time for the current thread .
sets the current httpserverexchange
sets the id of the application .
sets the access token for this session .
sets the access token for this session .
returns the index of the given .
get a list of all the servers in the database .
<p > . < / p >

retrieves the url for the given url .
get the for a given id
add a new url to the server .
add a redirect to the server .

sets the name of the .
{
sets the url of the url .
sets the .
delete a redirect from the given id .
delete a
get the list of profiles .
check if the given server is a .
add a new amount of time to the list of available locations .
adds a new hole to the end of the source .
{
{ @inheritdoc }



generate a .
get the path to the root path .
get the path to the given path .
find the name of the first part of the name of the .
find the first suffix of the given name .
splits the given string into a single string .
returns the attributes of the session attributes .
get the stream as a string .
register a tag with the given name .
open a file .
read the bytes from the byte array .
write the contents of the file into a byte array .
clones the specified node in the specified tree .
this function is called after everything else has been recomposed and allows the template to be called after the form is called the form of the field is set to the current value .
execute the given dml node .
find the first matching element in the given list .
find the first matching expression for the given predicate .
get the xpath of the .
get the string representation of the .
get the next node from the list of documents .
get the source node of the given expression .
get the first match of the given predicate .
get the value of the given node from the given context .
get the format used to format the value of the form .
format a number of characters into a string .
get the xml number of the given selectitem element .
returns the number of characters in the specified table .

get the string representation of the .

visit a .

splits the input into a single - value array .
quote a string with the given string .
returns the type of the specified class .
returns the { @link } that is a method { @link } .
get the { @link } for the given { @link } .


returns the first matching annotation .

get the { @link } for the given { @link } .
returns a new instance of the given class .
returns a new instance of the class name .
creates a list of all instances of the specified list of instances .
process the table selection .
{
{
check if the given object is a primitive type .
creates a thread that will be used to create threads for the thread .
create an instance of the given type .
returns the value of the given { @code value } .
returns true if the specified object is a boolean value .

get the xml fragment for the given fragment .
get the current member .
{
converts an object to a { @link } .
converts an object to a { @link } .
cast a type of object to a type .
checks if the object is a descendant of another .
checks if two objects are equal .
checks if the object is a descendant of another .


append the xml element to the xml element .
/ * ( non - javadoc )
{
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------

/ * ------------------------------------------------------------


{
close the { @link } .
handles a file .

invoked when the input is ready to be written .

output the output stream .
close the output stream .
event handler for the given event handler .
/ * ( non - javadoc )
get the node s grandparent by the given node id .
adds a new { @code } to the given { @code } .

find the first index of the specified node in the given range .
find the index of the first node in the cache .
find the index of the node at the given index .
inserts a node at the index index node index to the index node .
insert the given node in the given node .
find the index of the node in the node at the specified index .
add a new to the list of .

counts the number of nodes in the specified node .

returns all resources that are contained in the list .


returns true if the entity is currently being used by this class .
returns the for the given entity .
sets the value of the given double .
replies if the given distance is coplanar or not .
replies if the given point is a power of the specified intersection .
replies if the given vector is equal to the specified tolerance .
compare two lines .
compare two geometries .
compute the distance from the given array .
replies the svg name of the specified region .
replies the name of the given name .
adds a listener to the list of listeners .
removes a listener .
notifies the listeners that the listeners have been notified .
replies the name of the given .

encodes the password into a password .
checks if the source type is a target type .
{
sets the child child node .
sets the child child to the parent .
replies if the given child is a child of this node .
{
log a message with the given message .
{

{
reconstitute the {
constructor .
set the field owner .
parses options from the options .
/ * ( non - javadoc )
check if the given string is valid .
links the first element in the list .
returns a new { @code } that is the last element of the last element .
links the specified node to the node .
unlinks the first element in the list .
removes the last element from the queue .
unlinks the last element of the queue .
returns the first element of this element .
returns the last element of this deque .
remove the first element from the list .
remove last ( if any ) .
removes the specified element from the tail list .
add all elements of this list to the specified collection . shifts the element currently at the specified position in the list . shifts the element currently at the specified position in the list . shifts the element currently at the specified position in the list . shifts the element currently at the specified position in the list . shifts the element currently
clear the element and the element .
sets the element at the specified index .
inserts the specified element at the specified index .
returns the first node in the list of nodes .
returns the index of the first occurrence of the specified element in the list .
returns the last index of the last occurrence of the specified element .
returns the last element of this deque .
returns the next element in this queue .
returns the first element in the list .
returns the last element of this deque .
returns the first element of this element .
returns the last element of this queue .
removes the last element of the specified element from the list of items .
returns an array containing all of the elements in the array .
returns the array of elements in the specified array .
write the state of this object to the given stream .
reconstitute the object .
open a file to a file .
closes all files and releases the file .
returns the number of bytes that are available for this file .
checks if the file is a valid table .
puts the specified value into the map .
put all keys in the map with the specified key .
removes the mapping from the map .
clear the queue .
returns true if the table contains the specified table .
returns a set view of the set of entries .

encode a unicode character into a string .
replies the string representation of the .
replies the html representation of the given html .
replies the text of the given text .


<p > creates a new { @link string } with the specified text and value . < / p >
replies the text of the given char .

replies the value for the given key .
removes the specified text from the given text .
split the given string into a { @code string } .
split a string into a string .
split the given string into a list of strings .
split a string into a list of strings .
.
replies a list of all occurences of the given uuid .

merges the specified { @link } to the given { @code } .
joins the given separator and returns the first character in the given separator .
join the specified collection using the specified separator .
join the specified collection into a { @link com . github . . } .
join the specified join into a { @link com . github . . . } .
join the given string using the specified separator .


convert a string to a string .
format the specified amount of time to the given unit .
converting the specified number of digits to a { @code int } .
replies the number of digits in the given string .

convert a string to a string .
decodes a { @link com . google . cloud . } .
{
returns the context of the context .
get the singleton instance of the current thread .
get the singleton instance of this instance .
returns the index of the first occurrence of the specified index .
registers a selectablechannel for the channel .
register a session to the session .
visits a type declaration .
visits an expression that is a logical statement .
visits a single expression
visits an expression in the array .
visits a bracketed expression that is the multiplication of the expression .
visits an expression in the quantified expression .
{
visits a record .
{


/ * package
set the connection datasource for the given connection .
scans the classpath for the given packages and all classes and resources are scanned .
checks if the matches the .
/ * ( non - javadoc )
displays the usage of the command line options .
loads the options from the given file .
replies if the given file is a valid file .
get the node at the given position .
find the enclosing node by looking at the root node .
start the document .
ends the end of the document .
pushes the reference to the current stream .
pops the current .
creates a new { @code } with the specified path and path .
checks if the given object is a boolean value .
compares two strings ignoring the expected value .


<p > . < / p >
adds a field to the field .

/ * ( non - javadoc )
{
replies if the layer is the light or the layer of the layer .
replies the list of all the elements in the list .
replies the list of all the .
replies the value of the property .
pushes the current frame to the current frame .
push a new element to the beginning of the element .
clear the password .
collect all profiles and profiles .

get the class of the given class .
returns the name of the file name of the file .
quote a string with the given string .

replaces the specified string with the given replacement .

sets the triangle for the given point .
sets the y - axis to the specified coordinates .
{
{
sets the value of the x - th element in the vector .
sets the given coordinates for the given points .
sets the components of the given properties .
/ * ( non - javadoc )
replies if the given input is a { @link } .
sets the pivot point .
sets the .
{
creates a file .
registers a new { @link } with the given { @link } .
compiles the command line arguments .
returns the for the specified type .

/ * ( non - javadoc )
check that the uptime check is valid .
checks if the specified is in the .

returns a { @link } for the given key .
returns the for the given client .
/ * ( non - javadoc )
sets the rotation and the rotation axis .
sets the z - th and the z - axis .
sets the value of the given double element .
returns the first dimension of the given two vectors .




replies the url to the given url .
replies the url of the url .
replies the file name for the given jar file .
replies the file name of the given file .
.
replies the file path for the given url .
replies if the given input is a { @link } .
replies the file name for the given file .
replies the url for the given file .
replies the filename that the file is in the classpath .
replies the file name for the given file .
replies the url for the given url .
replies the filename that corresponds to the specified filename .
replies the filename that the file is located in the file .
replies the filename that the file is located in the system .
replies the filename for the given file .
replies the filename for the given file .
replies the extension of the file extension .
<p > . < / p >
<p > . < / p >
get the domain for the given domain name .
replies the filename that the file resides in the file .
replies the mime - type of the file .
split the given file into a file .
splits the given file into a directory .
join the given { @code string } into the specified { @code target } .
joins the specified { @code file } into the specified { @code file } .
joins the given url into a { @link com . github . . . } .

replies if the file extension is in the file .
replies the extension of the file extension .
replies the extension of the url .
>
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
.

deletes the file from the file .
copy the contents of the given file to the given file .
copy the contents of the given file to the given file .
copy the contents of the input stream to the specified output stream .
replies the home directory for the given user .
replies the user name of the user .
replies the user name for the specified user .
replies the directory name for the given directory .
replies the system configuration for the given directory .
replies the system system property name .
replies the library for the given .
replies the file name for the given file .
convert a url to a file .
replies the url for the url .
replies the url for the given url .
replies the file path to the absolute path .
replies the absolute url of the absolute path .
replies the file url for the given url .
replies the path to the absolute path .
replies the url for the url .
extract the path from the given file .
replies if the given path is a dot or a directory .
normalize the file path to the file system .
replies the url for the given file .
replies the relative path of the file .
returns the absolute path to the absolute path of the given file .
replies the path to the absolute path .
replies the absolute path for the given url .
compresses the given file into a zip file .
compresses the given file and returns a new zip file .
unzip a file to a file .
compresses the given file into a file .
creates a temporary directory with the specified prefix suffix .
creates a temporary directory with the specified name and suffix .
fills the list of with the given parent and the given parent .


execute the function .

get the output charset for the given string .
replies the list of the listeners for the given type .
add a new listener to the list of listeners .
removes the specified listener from the list of listeners .
save the given streamable fields .

copy the contents of the given into the object .
set the bit at the specified position in the bit array .
returns true if the bit at the given index is the bit .

create a new .
get the url for the url .

returns the response result .
this method is used to add a list of to the list of .
the <code > / code > operator .
the elvis operator is the inverse of the form of {
the elvis operator .
the elvis operator ( s ) operator .
transform the left - right fold and left to right left to right .
clamp the minimum and maximum values .
replies if the given value is a double value .
replies if the given value is a double value .
replies if the given vector is a bit of the specified double ( inclusive ) and the given double .
replies if the given vector is a power of the given vector .
compare two double numbers .
compare two solutions .
replies the maximum value of the specified element .
/ * ( non - javadoc )


returns true if the specified certificate is not in the list of the specified certificate .
check the and the .
check if the certificate is valid .
add a certificate to the list of .
replies the maximum value for the given value .
replies the maximum value of the specified value .
replies the minimum value of the minimum value for the specified double .
replies the minimum value for the minimum value .
replies the number of degrees from the given { @code double } .
replies the angle between the specified { @code } .
replies the color of the given angle .
compute the minimum value of the given value .
replies the bounds of the given bounds .
replies the code for the given code .
replies the color of the given .
returns the minimum value of the given maximum value .
replies the angle between the given radians .
returns the number of counters that are used to form a .

this method is called when a is not a .

returns the number of characters in the input array .
convert the given { @link } to a { @link } .

returns the next line if it is not valid .
returns the next next next next next element in the given array .
skip characters from the beginning of the character .
sets the container for the container .
replies the container container .
replies the uuid .
compute the for the specified area .
adds a child to the list .
add a child to the child list .
{
/ * ( non - javadoc )
{
returns the index of the column that is the index of the specified column .
/ * ( non - javadoc )
sets the .
replies if the given output is a triangle .
sets the pivot point .
sets the .
reads the next buffer from the buffer .
reads the contents of the given byte array into a byte array .
read the byte array from the given offset .
reads the next byte from the stream .
returns the comment as a comment .
returns the entry entry for the given entry .
returns the stream for the given stream .
returns the cached instance .
release the cached cached cache .
returns a zip entry with the specified entries .
close the file .
reads the next value from the given object .
main method .
executes the given and returns the result .
put the key / value pair into the map .
removes the mapping for the specified key from the map .
{
sets the value of the .
get the attribute for the attribute .
get the attribute value for the attribute value .
retrieves the initials lines of a specified photo id . retrieves the initials - id header for the specified photo id . the &#x60 ; id is the &#x60 ; id of the &#x60 ; ; . if the &#x60 ; ; ; ; ; &#x60 ; ; ; ; ; &#x60 ;
adds a rule to the list of rules .
{
{
{
{
{
/ * ( non - javadoc )
{
returns true if the given { @code } is equal to the specified { @code } .
{
{
{

get the offset offset from the given offset and returns the offset of the specified offset .
find the best match for the given rule .
returns the closest offset of the given offset .
returns the offset in the local .
returns a new instance of the given {
sets the headers to be used for each request .
sets the cookies for cookies .
sets the parameters of the request .
adds a request to the form of { @code form } .
sets the request body .
sets the body of the request body .
sets the username and password .
sends a {

returns the { @link } for the given context .

{
given a class name and a classname name and the name of the class name .
replies the url of the resource .
{
/ * ( non - javadoc )
create a new instance of the given fxml class .
prints the stack trace of the specified stack trace .

create a new package name for the given package name .
removes the specified element from the list .
add a new value to the list .
add a list of elements to the specified list .
checks if the given list is in the list .
replies the index of the first index of the given list .
replies the index of the first index of the given list .
replies the index of the first index of the given list .
returns an iterator over the elements of the specified iterator .
get the report xml report .
waits until the command is available .
returns a predicate that evaluates to true if the predicate is true .
returns true if the given predicate is a valid predicate .
returns a score that is the first element of the given range of items .
selects the score for the given items .
returns a comparator that is used by the original { @link } to a list of items .
returns a comparator that is used by the { @link } for the { @link } .
returns a { @code sortedmap } containing all items in the given { @code iterable } .
sets the symbol for the given key .
returns the value of the specified key .
calls the specified service on the specified url .
/ * ( non - javadoc )
sends a post request to the url .
post http post request to the http post

put http request to http : // www . ietf . org / jira / browse / . html

put http response headers to http response .
get the url for the url
get the url of the url .


get the url of the url .


sends a request to the url .
performs a delete request .
get the html for the specified string .
handles a response error response .
<p > . < / p >
get the url of the file .
get the file path from the basedir .
add a cookies to the server .

creates a file from the given file name .

put http : // www . w3 . org / protocols / rfc2616 / rfc2616 . txt
build a new { @link } instance from the given file .
builds the http client .
execute the function .

parses properties from the properties file .
convert properties to properties object .
convert a double to a double .


receive notification of the element in the xml document .
receive notification of the given character .

compares two strings lexicographically by the specified comparator .
compares this { @code string } to the specified { @code string } .

/ *
sets the value of the given field .
sets the value of the given object .
sets the value of the field with the given name .
sets the value of the field .
sets the field value for the given field .
sets the short value of the field .
sets the date value of the date field .
sets the value of the field .
sets the value of the field .
sets the value of the field .

get the scope scope for the passed scope .
get the passed { @link } scope .
get the passed { @link } scope .

{
creates a new { @link } with the given { @link } .
creates a { @code } whose values are the same as { @code } .
returns a { @code } that applies the cumulative values of the given { @code consumer } .
returns a { @code } that applies cumulative cumulative values to the provided { @link } .
add a request to the request .
remove a request from the passed in request .

check if the passed in server is not in the cache .
checks if the given string is valid .
check if the given email address is valid .
parse the request request into a list of { @link } .
get the passed in request .
store the given trigger to the given trigger
{
{
{
{
<p > get the { @link } for the specified trigger . < / p >
get the state of the trigger .
pause the given trigger to the specified trigger .
<p > . < / p >
{
trigger a {
{
{
returns the value of the given character .
returns the next character in the given position .
initialize the compiler .
clone a object .
find the first occurrence of the given child of the given node .
detaches the associations from the iterator .
set the depth of the node .
returns the next node in the next node .
get the next node in the list .
get the next node in the list . the number of children are not included in the result .
call the visitors with the given visitor visit the given owner and call the visitor to execute the visitors .
convert a string to a string .
set the custom messager .
get the context path for the given webapplication .
clear the current context path .
reads the next byte from the byte array .
read the contents of the byte array into a byte array .
sets the decoded string to the given { @code string } value .
reads the header from the stream .
read the data from the input stream .
returns true if the output buffer is not ready to be written to the output buffer .
finds the first occurrence of the given value .
find the first occurrence of the given character .
reads the next byte from the stream .
reads the contents of the specified byte array into the specified byte array .
skips the next n bytes of the given number .
add a new import rule .
process the > / > > > > / > > / > / > / > / > / > / > / > / > / > / > /
add a new import rule .
add a new element to the passed in element .
add a new rule .
/ * ( non - javadoc )

splits a line into a list of lines .
get the next character offset from the given offset .
trim the given value .
trim the value of the given string .

returns true if the given character is a valid character .


loads properties from a properties file .
check if the list contains all the elements in the given list .

creates a data schema from a list of data .
set the attribute value .
get the context path from the request .
get the request path from the request .
get the request url for the request .
get the request url .
get the passed url as a string .
get the servlet path from the request .
get the request cookies .
get the base context path for the given context .
parses the given reader and returns a map of the characters that are not in the given xml document .
converts a numeric attribute to a $h

/ * private static final = . ( ) ;
returns the next 64 bit .
returns the next permutation of the next element in the stream .
returns the next in the list .
/ * --- private methods ---




find the file name of the given file .
find the sub directory of the given file .
writes a given { @link file } to a { @link file } .




get the input stream for the given input stream .
fills the buffer with the contents of the buffer .
reads a byte array from the given byte array .
reads a byte from the input stream .
skips the next n bytes in the stream .
closes the stream .

returns the next element in the list .

/ * the method is used to find the k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k k
if the heap array is empty then the heap is ignored .
inserts the specified element into this queue .
remove the specified element from the tail of the list .
removes the specified element from the list of objects .
removes the next object from the queue .
returns true if the given object is not empty .
returns the for the given .
get the port for the given port .
clear the capacity of this queue .
returns a copy of this object with the specified size .
returns a copy of this deque with the specified elements and returns the result .
writes the state of the stream to the pool .
reconstitute the {
get the entitymanagerfactory that this entitymanagerfactory is associated with the given entitymanagerfactory .
copy the contents of the input stream to the given stream .
copy a stream of content to a stream
/ * ( non - javadoc )
writes the { @link outputstream } to the given outputstream .
canonicalize the path to the path segments .

returns the prefix for the given scheme .
finds the first occurrence of the specified substring within the specified string .
check if the request is a request to find the current request .
creates a new { @link cipher } for the specified algorithm .
creates a new { @link cipher } for the given { @link cipher } .
creates a new algorithm that is used to encrypt a { @link } .
creates a new {
opens a file with the given path and path .
get a list of all the suffixes
sets the start of the start of the start of the start of the start of the start token .
sets the start of the start of the start of the start of the month .
sets the end of the recurrence .
sets the end of the recurrence .
/ * ( non - javadoc )
returns true if the given { @code } is equal to the specified { @code } . <p > this method is equivalent to : <ul > <li > { @code [ - 1 ] } <li > the following rules : <ul > <li > : / li > <li > / li > <li >
parses a rule .
decode the rule .
compare the specified .
returns the first element in the range of the specified { @code } .
ensures that the specified array is not a valid { @code byte [] } .
writes the given { @code } to the given { @code appendable } .
reads the next date from the stream .
read the line number from the reader and then reads the lines from the reader .

process the file and delete the marker .
process the given reader and write them to the given writer .
/ * ( non - javadoc )
returns the first element of the given namespace .
execute the xsl : : - style - style - compiler - stylesheet - stylesheet - stylesheet - stylesheet - stylesheet - stylesheet - stylesheet - stylesheet - stylesheet - stylesheet - stylesheet - stylesheet - stylesheet - stylesheet - stylesheet - stylesheet - stylesheet - stylesheet - element - wise - transformation
/ * ///////////////////////////////////////////////////////// sax2 methods
{
{
increment the value of the given value .
execute the function .
creates a new { @link } for the given channel and subchannel .
create a object .
creates a new { @link bytebuf } for the given { @link uri } .
creates a new { @link karyonserver } for the given { @link channel } .
get the .
returns a { @link } that will be used to establish the { @link } from the given { @link } .
writes a { @link observable } to the underlying stream .
<p > newinstance . < / p >
creates a new { @link bytebuf } for a { @link } .
print the { @link } for the given { @link } .

prints the contents of the given string .
check if the hypothesis is feasible .
print the {
print a constructor and appends the given constructor .
print a string argument .
print a list of {
print a string .
print a string .
print a string representation of the given type .
returns the argument of the argument . <p >
print a string literal .
print a string literal .
print the expression in the string .
creates or updates a policy definition .
creates or updates a policy security policy definition .
creates or updates a policy security policy assignment .
get the details of a managed policy .
retrieves the policy definition for a given policy .
gets the policy rules for a policy .
gets the policy rules for a policy .
get policy rules .
creates a policy in the managed policy .
creates or updates a policy security group .
creates or updates a policy security group .
creates or updates a policy security group definition .
deletes the specified policy name from the management group .
reads the lines of the given { @code file } from the given { @code file } .
deletes a management lock policy for a policy .
deletes a policy assignment .
deletes a policy assignment .
retrieves the policy definition for a given policy .
gets a policy definition for a managed policy .
gets a policy assignment .
get access policy definition .
lists all policy in the subscription .
get all policy assignments for a given policy .
get all policy assignments for a particular subscription .
lists the policy assignments for a subscription .
gets all the managed policies in a subscription .
get all roles for a given managed policy .
lists the policy assignments for a subscription .
lists the policy assignments for a subscription .
get all management policies for a given managed policy .
gets all the policy assignments for a resource group .
get a concatenated list of strings with the specified text .
factory method for creating a new { @link } .
set the text of a line to the passed text .
initializes the .
returns the next token in the current token .

creates a view for the given view .
compute the number of nodes in the given cluster .
randomly chooses the from the given .
calculates the mean mean of the mean value .
calculates the variance of the distribution .
calculates the average of the given sample to the given sample .
set the value of the key .
set the number of bits used to set the number of iterations .
set the template for the given template .


calculates the of the given .
set the for the passed in { @link } .

set the { @link } for the passed { @link } .
get the user name for the passed in locale .
get the user name from the user s default locale .
get the user name for the user .
check if the hypothesis is a score
get the css for the passed in text .
renames the given file name to the given file .
{
{
{
{
{
{

/ * package protected
set the settings for the given settings .

set the default mode for the given mode .
set the default style settings for the given { @link } .
set the base directory of the base directory .
format the text and output lines .
escape the given string using the given { @link string } .
creates or updates a network updates .
creates or updates a network updates or updates a network interface .
creates or updates a network network or updates a network interface .
gets the specified network interface .
gets the specified network interface network .
retrieves a network gateway .
updates a network interface in a specified resource group .
updates a network interface or updates existing in a network gateway tags .
updates a network tags .
gets a list of network configurations .
lists all network gateways in a resource group .
lists all network addresses assigned in the network interface .
lists all network gateways in a subscription .
get a network topology s network .
get a network tier from a vm .
get a network tier from a network interface .
create a new network definition for a network interface .
creates a new network definition for a specified resource .
creates a new network definition for a specified resource .
creates a new network definition for a specified resource group .
visits a { @link } annotation .
creates a new network definition for a specified resource .
creates a new network definition for a specified resource .
get the specified network security .
gets the specified network peering .
returns true if the given text is a valid text .
gets a single network network .
get the specified network security .
gets a single network interface endpoint .
gets a single network network .
returns a target of a target resource .
returns a configured network security group for a specified resource group .
gets a target network interface .
scroll the element horizontally .
scroll the element by removing the element .
scroll the element by removing the element .
scroll the element by removing the element .
get a network tap from a network .
gets the source of a specified location .
gets the source of a specified location .
get a network resources from a specified resource .
gets the source of a specified location .
gets a target network interface .
gets the source of a resource group .
get a network schedule for a specified resource .
get the source of a specified resource .
get a network link from a resource group .
get a target resource .
get a target network resources .
step 1 . 1 .
sets the specified location for the specified location .
sets the flow for a flow .
step 1 . 1 .
list the flow logs in the specified resource group .
list flow configurations for a specified resource .
get the status of a resource .
gets the status of a resource .
gets the status of a resource .
get the target log for a specified resource .
get the status of a resource .
gets the status of a resource .
checks the status of the network interface to the specified vm .
check if a parameter is not in a service .
gets the status of a resource .
gets the status of a resource .
check if the request is a hybrid network connection .
checks the status of the network interface to the specified vm .
check if a specified network service has a specific network .
check if the request is a hybrid network connection .
gets the status of a network capture .
gets the specified status code from a specified resource group .
gets the specified azure dev spaces from a specified location .
returns a { @link } for a specified location .
gets the specified status code from a specified location .
gets the specified azure dev spaces from the specified location .
lists all selectable sku s network interface .
lists all network configurations in a specified resource group .
lists all network configurations in a specified resource group .
lists all selectable sku s network interface .
lists all network configurations in a specified resource group .
lists the ip addresses in the specified resource group .
check the type of the
returns the arguments for the given { @code command } .
/ * private (
get the number of the .
returns the command line arguments .
get the host name .
get the file path from the configuration file .
sets the type of the passed in value .
set the start of the passed in light mode .
set the registry registry .
set the default value of the passed in object .

set the value of the passed in value .
checks if the given map is valid .

check if the user has a login request to the user .
get the user name from the request .
get the password for the passed in request .
{
/ * ( non - javadoc )
check the user id for the given user .
updates the current maneuver time .
sets the value of the current value of the current value .



<p > sets the value of the <code > / code > property .
selects the specified option .
selects the specified option .
selects the value of the selected element .
selects the selected element by selecting the selected element .
selects the index within the index of the element at the given index . <p >
selects a value in the list by selecting all values in the specified array .
selects labels for the labels in the given labels .
selects the index within the specified index .

returns the first option of the element .
returns the label of the selected element .
returns the value of the selected option .
returns the first element in the list .
returns the value of the option of the option .
returns the label of the element .
returns the value of the element content .
deselects all the settings and all the listeners . <p >
deselects a value . <p >
deselects the element at the given index . <p >
deselects a tab with the given label . <p >
returns the name of the given name .
returns the first index of a given list of objects .


get the sheet definition for the specified sheet .
get the excel row for a given worksheet .

get the row index of a row .
reset the list of objects .
resets the cursor position .
creates a new { @code } instance from the given { @code } .
{

write the tdwr data to the given <code > outputstream< / code > .

moves the next token to the next position in the stream .
check that the next byte is not valid .
reads the next byte from the stream .
add a node to the node .
add a node to the node .
remove a subtitle from the current rtf table .
get the next node in the list .
add a new node to the end of the node .
writes the given { @code tracy } to the given { @code tracy } .
clear the lock .
removes the next available tag .
/ *
generate a uuid from the uuid .
initialize the .
----------------------------------------------------------------------------
replace the specified char from the input stream .


add a key / value pair to the map .


read data from the map .


add a new json object to the given value .
assign a data to a specific id .
create a new { @link } .
create a new node from the nodes .
create a new .
create a new with a new character .
create a new with the given key .
create a new node with the given value .
process the data in the given frame .
reads the next from the input stream .
decode a object .
decodes a and returns true if it is not a valid json .
<p > . < / p >
<p > . < / p >
this method is used to determine whether the input is valid .
{
{ @inheritdoc }
{
validates that the given class is a valid class .
validates that the type of the type is a valid type .
retrieve a list of all the module types for the specified type identified by the name of the module identified by the name of the module identified by the name of the module identified by the name of the module identified by the name of the module name .
retrieve a list of all the types in the specified type identified by the given name .
retrieve a list of all the given types .
gets the specified express route circuit connection from a specified expressroutecrossconnection .
gets the specified express route circuit connection from a specified expressroutecrossconnection .
gets the specified express route circuit connection from a specified expressroutecrossconnection .
creates or updates a express route circuit connection from a specified express route circuits .
creates or updates a express route circuit connection in a specified express route circuits .
creates or updates a express route circuit connection in a specified express route circuits .
creates or updates a express route circuit connection from a specified express route circuits .
creates or updates a express route circuit connection in a specified express route circuits .
creates a new express route set in a specified express route circuits .
gets a list of all the express route circuits in a subscription .
lists all the connections in a specified express route circuit .
lists all connections in a specified express route circuit in a resource group .
gets a list of all the commerce subscription template .

closes the {



resets the to be used for the .
/ * ---------------------------------------------------------------------------- - ----------------------------------------------------------------------------
/ * ---------------------------------------------------------------------------- -
encodes the byte array into a byte array .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
update the model with the given model
update the model .
converts the given byte array into a string representation of the given byte array .
converts a dto object into a dto object .





/ * ( non - javadoc )
/ * ( non - javadoc )
delete a metadata resource metadata .
delete a metadata blob
get the locations for a given region .
get the locations for a given region .
get the current connection for the current session .
get the current location for the current location .
get a specific location for a specific location .
get a from a location .
get a specific location for a specific location .
set the for the specified region .
set the parameters for the given endpoint .
send a get request to moh
refresh region refresh region refresh region refresh region .
refresh device management
send a get upgrade to the specified file .
send a blob server to a file .
enable or disable the update of the update .
enable or disable the update of the current state of the change .
enable or disable the user s refresh connection .
get status of the specified status .
get the status of a specified type .
{
{
删除
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the value of a field .
get the options for the specified options .
sets the options for the user .
updates the options .
returns a string containing the password specified by the given { @code password } .
computes the product of two sets of two sets .
{
creates a { @link } that uses the { @link } for the { @link } .

returns the set of from the .
returns the probability of the function .
{
create a new text element with the given text .
{
adds the argument to the given list of arguments .
creates a { @code } variable containing the variables in the given { @code template } .
creates a { @code } from a variable name .
set the time the request was issued . client libraries typically set this to the current system clock time ; set it explicitly if you are calling the rest api directly .
set a timestamp indicating the last modified time of the resource known to the client . the operation will be performed only if the resource on the service has been modified since the specified time .
set a timestamp indicating the last modified time of the resource .
/ * ( non - javadoc )
find the for the given host and port .
initializes the system properties .
stops the server .
/ * ( non - javadoc )
encodes the given byte array into a byte array .
decodes a byte array into a byte array .
sets the phone number .
sets the value of the parameter .
{
sets the phone number .
convert a string to a string
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
returns the id of the .
/ * ( non - javadoc )
returns the remote address of the server .
/ * ( non - javadoc )
check if the current transaction is active .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
remove a transaction from the transaction .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
set the for the network .
/ * ( non - javadoc )
returns the next available { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
ack the ack .
check if the given payload is a reply .
remove all the entries in the list .
check if the request is a valid request .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the minimum number of elements to the specified capacity .
sets the { @code } to the specified key .
sets the { @link } for the specified { @link key } .
sets the { @link } for the specified { @link key } .
sets the { @code } to the specified { @code key } .
sets the key of the given key .
generate a new { @link keypair } for the specified key pair .
returns the buffer that is the current position of the bytebuffer .
sets the character to the end of the array .
adds a number of bits to the specified value .
adds the specified number of bytes to the specified value .
puts a long into the passed in value .
sets the value of the stringvalue to the specified value .
sets the number of elements in the matrix to be written to the current value .
sets the value of the stringvalue to the end of the array .
sets the value of the stringvalue to the end of the array .
adds a trailing character to the specified value .
adds the specified collection to the collection .
add a new mapping to the map .
compress the byte array into a byte array .
returns the integer value of the specified bit .
returns the unsigned 64 bit long .
returns the number of bytes in the input array .
returns the unsigned long value .
returns the byte array as a byte array .
returns the byte array as a byte array .
returns the string as a string .
get the string value of the given string .
returns a printable printable string of the hex string .
returns the collection of all the elements in the collection .
returns the collection of the specified class .


returns a printable printable printable string representation of the given string .
sets the file with the given name and value .
sets the content of the stringvalue to the specified value .
<p > puts the specified byte array into the specified byte array . < / p > <p > if <code > read< / code > is true the method is called to set the value of the <code > phrase< / code > to the <code > / code > .
calculates the crc of the given byte array .
hashes the given byte array into a byte array .



grows the buffer size .
compare two bytes .
{
convert a byte array into a byte array .
convert a byte array to a hexadecimal string
inflate the bytes from the byte array into a byte array .
compress a byte array into a byte array .
lists the backed up policies in the specified subscription .
gets a load balancer backup .
gets a shared load balancer frontend credential .
gets a load balancer shared backed up policies .
lists all machines in a subscription .
encode a string into a string .
decodes the given uri from the given url .
{
gets the details of a resourcename or returns a list of favorites resources .
deletes the specified virtual network .
gets the specified virtual network .
gets the specified virtual network .
gets a virtual network .
/ * ( non - javadoc )
creates or updates a network network .
creates or updates a network network or updates an existing virtual network .
creates or updates a network network or updates an existing virtual network .
creates or updates a network network .
creates or updates a network gateway in the specified virtual network .
creates or updates a network network or updates an existing virtual network .
updates a network tags .
updates a virtual network .
updates a network tags .
updates a network tags .
updates an existing virtual network .
updates a network tags .
add a new listener to the list of listeners .
/ * ( non - javadoc )
gets all network gateways in a subscription .
gets a list of virtual network gateways in a resource group .
get a virtual network network in a virtual network .
get a virtual network network in a virtual network .
returns the specified virtual network address in the specified virtual network address .
lists the usage plans in the specified virtual network gateway in the specified subscription .
gets all network gateways in a virtual network .
lists the usage filters in the specified subscription .
gets all network usage usage agreements that the specified virtual network gateway in a virtual network gateway in a virtual network gateway in a virtual network gateway in a virtual network gateway in a virtual network gateway in a virtual network gateway in a virtual network gateway in the specified subscription .
lists all network gateways in a subscription .
gets a list of virtual network gateways in a subscription .
lists all the network gateways in a subscription .
gets all selectable network interfaces in a subscription .
lists all network gateways in a subscription .
gets all network usage usage usage plans in an app service environment .
lists all the virtualhubs in a subscription .
{
adds a provider to the provider .
create a new instance with the given index .
returns the number of the in the .

parse a { @link } from the input stream .
adds a new tag to the .
returns the of the given .
calculates the for the given .
returns the first unique id of the .
check if the current node is a valid .
returns a set of { @code } objects that are represented by the given { @code } .
logs a message with the given message .
enable logging level .
/ * ( non - javadoc )
add all the items in the list .

returns the method with the given name .
returns the method with the given name .

get the class of the given class .
initialize the class cache .
returns a new instance of .
/ * ( non - javadoc )

{
replaces the given component with the given name and a new one .
loads the type name from the given name .
resolves the device type from the device .
initializes the .
get the repository for the given resource .
根据某个字段名条件查询数据列表，返回所有字段
add a module module .
sets the for the .
{
compacts the data from the array .
sets the value of the specified element .
returns true if the values are equal .
/ * private
set the to be used for the given .
sets the for the given .
sets the .
set the
set the
/ *
/ *
set the .
get the method name from the given http_method .
returns the method name of the method .
validate the .
write the contents of the file to the given file .
writes the given file to the specified output stream .
analyzes the input and returns the result .
set the time the request was issued . client libraries typically set this to the current system clock time ; set it explicitly if you are calling the rest api directly .
{

{
{

/ * private methods ------------------
add a response to the response .
updates the set of parameters for the given parameter set .
adds a new { @link } to the given { @link } .
create a new { @link } .
unmarshals the given application and returns the application context .
{
find the plugin from the container .
find the parent of the element in the list of parents .
search for the child element of the given parent .
gets the for the given plugin .
==============================================================
returns the list of listeners that should be used to visualize the component .
<p > . < / p >
{

sets the { @link } for the given { @link } .
registers a new { @link } with the given { @code alias } .
{
{
loads the properties for the given resource .
registers a key pair with the given key .
reads all available stopwords streams from the stream .
reads the next next response from the stream .
gets details about a vpn connection .
gets the specified application connection .
gets the specified application connection connection connection .
creates or updates a vpn connection in the specified expressroutecrossconnection .
creates or updates a vpn connection in the specified expressroutecrossconnection .
creates or updates a vpn connection in the specified expressroutecrossconnection .
creates or updates a vpn connection in the specified expressroutecrossconnection .
creates a new connection in the specified subscription .
creates a new vpn connection in a specified resource group .
lists the vpn connections connection for the specified expressroutecrossconnection .
lists all vpn connections with the specified parameters .
lists all the vpngateways in a vpn subscription .
lists the vpn connections in a virtual vpn gateway if it exists in the specified resource group .
lists all vpn gateways in a subscription .
gets a list of vpn connections in the specified subscription .
gets the used connection connection for the specified subscription .
gets a list of vpn gateway connection connection .
gets the used security connection for a vpn subscription .
gets the list of vpn connections in a subscription .
computes the dot product of this vector by the product of the two vectors .
sets the entrywise and the values of the other vector .
returns the entrywise sum of the other vector .
returns the entrywise difference of the two vectors .
returns the entrywise product = p >
applies the given { @code } to the given { @code } .
returns true if the given vector is equal to the given one .

parses the given arguments and returns the result .

{
creates a new instance of the specified { @code description } .
creates a new instance of the given { @code book } .
{
<p > returns the last last item in the list . < / p >
<p > marshallize . < / p >
{
compares this object to a single object .
{
get the property value for the given property .
{
sets the property editor .
{
removes the property from the specified property .
remove a property from the list .
remove a component from the component .
remove a component from the given list .
get a property from the given name .
returns a list of property names .
add a new property to the set .
add a new property to the list .
sets the property value .
set a property value .
remove all properties from the list .
get the component for the specified component .
returns a list of the specified type for the given class .
list all components that belong to this component .
list the components of the given component .
get the component component component component component component component component component component component component .
get the list of components that are contained in the component .
add a component to the given component .
remove all the components that are referenced by the given name .
validates the given list of properties .
check if the given class is a valid class definition .
check if the given list of values is allowed to be a .
returns a list containing the list of objects with the given type .
executes the given execution and returns true if it is not currently running .
reads the data from the data stream .

initializes the .
{
sets the parent element to the parent element .


{
save the id to the cache .
{
{
{
{
{ @inheritdoc }
{
returns a {
returns the instructions that the method is invoked if the method is not a method instruction .
execute a and returns the result .
lists all of the services in the service .
lists all of the service in the service .
{
{
{
/ * private void ( string httpservletrequest ) { if ( . () ) ; }
/ * ( non - javadoc )
<p > . < / p >
{
<p > . < / p >
{
{
{
{
{
{
/ * ( non - javadoc )
{
{
{ @inheritdoc }
{
{
{
{
{
{
{
{
{
{
/ * ( non - javadoc )
{
{
{
{
execute the given method on the given method .
lists all of the workflow states in the subscription .
gets a workflow trigger .
gets a workflow .
gets a workflow trigger .
reset actions for a workflow .
reset the actions to trigger a workflow .
reset all recommendation opt - out of a workflow group .
{
reset the trigger to the specified trigger .
runs the specified trigger monitor .
runs the specified trigger monitor .
runs the given trigger and returns a new workflow trigger .
gets a workflow schema .
gets a managed database schema .
gets a managed database schema .
gets the specified entity definition .
runs the specified trigger monitor .
sets the source of a workflow state .
updates the specified trigger monitor .
sets the status of a workflow .
get the url for a given trigger .
get the status of a workflow .
lists all of the workflow in a subscription .
updates a workflow state for a workflow .
resets the current state of the current thread .
close the input stream .
creates a new { @link } .
getmessage
{
creates a new .
{
{


{
sets the blob backup for the blob .
/ *
initialize the .
initialize the jawr configuration .
creates a new { @code } expression

<p > newinstance . < / p >

returns a string containing the given separator .
gets a database s database s vulnerability .
gets a database s blob .
gets a database s blob .
lists the backup policies of the subscription .
lists the resources in a subscription .
parses the given { @link node } and { @link } objects .
checks if the given { @link } is equal to the given { @code } .
get the value of the last modified value of the last modified value .
/ * ( non - javadoc )
send a request to the server .

/ * ______________________________________________________________________



sets the expected number of times to the expected expected expected result .
getter for - gets
setter for - sets
create a model for the compilation identified by the parameters .
create a job identified by job id .
create a new instance of the given project with the given name .
<p > . < / p >
<p > . < / p >
<p > marshallize . < / p >
create a job schedule .
retrieve the model of the job identified by the given job id .
retrieve the job identified by job id .
retrieve the job identified by the specified job id .
retrieve the job identified by job id .
retrieve a job identified by job id .
retrieve a job stream from a job id .
retrieve a list of jobs in a job .
create a new instance of the given name .
<p > returns the type of the type . < / p >
returns the list of all the .
{
<p > marshallize . < / p >
set the properties to be used for the given properties .

returns true if the given { @link } is empty .
creates a new { @link } instance from the given { @link } .
get the list of all the elements in the list .
returns the {
gets the authentication authentication for the given { @link } .
returns a { @code stream } which is the number of bytes from the specified stream .
{

/ *
creates a new card with the specified label and length .
creates a new card with the specified number of labels .
creates a new card with the specified number of characters .
creates a new { @link } with the specified { @link } .
creates a new { @link } with the specified number of decimals .
creates a { @link } from a { @link string } .
<p > creates a <code > string< / code > that represents the specified number of digits . < / p >
adds a new key pair to the specified key .
put a key / value pair into the specified key .
puts a single value into the preferences .




consumes the next character in the given range .
/ * ( non - javadoc )
initializes the property .
this method is called to call the {
this methods generates the html code of the current component .
renders the attributes of the given <code > / code > .
generates a for the given .
generates the error and sets the error .
returns the for the given input type .
get the value of the specified selectitem field .
get the value of the converter object for the given selectitem object .
returns the request parameter .


get the group name for the specified component .
initializes the application context .
{

get the instance .
creates a file from the given file name and returns the file name .
copy file from input stream to a file .
<p > . < / p >

ping a message to the specified receipt .
get the name of the channel .
get the name of the channel .
{
{
{
encodes the given value into the given string .


evaluates the specified expression and returns the value of the property .
translate a string to a string .
parses the given element and returns the content of the given element .
parses the given element into a element .
parses the properties of a property definition .
parses the configuration property .
returns the resource type for the given resource type .
get the size of a specified size .

returns the label for the given .

main method .
updates the specified resource .
downloads the specified resource to the specified resource .
downloads the specified resource to a resource .
downloads the specified resource to the specified resource .
downloads the specified resource to the specified resource .
downloads the specified resource to a resource .
captures the specified resource to the specified resource .
returns the type of the specified component .
returns the type of the first annotation of the aceassertion .
{



this method is called by the jsf framework .
this methods generates the html code of the current b : datatable .
add the given component to the list of attributes .
add the label of the label to the label .
add the given component to the list of attributes .
renders the tag .
generates the html code for the html code of the specified page .
run the task .
returns the list of selectitem items for the specified item .
renders the options .
renders the options .
renders the tag .
renders the tag mapping for the tag .
: =
add the specified index to the list of controls .
<p > set the value of the property . < / p >
<p > set the value of the <code > / code > property . < / p >
<p > the list of row ( s ) . < / p > <p > if the row select button is pressed . < / p > <p > if the row is pressed the horizontal select box is selected . < / p > <p > if the row is pressed the horizontal select box is selected . < / p
<p > set the value of the property for the row . < / p >
get the display name for the passed locale .
get the display name for the passed locale .
returns the locale names for the passed locale .
bootstraps the application .
shutdown the shutdown hook .
compute the eigenvalues of the matrix .
returns the field with the given name .
returns the setter method for the given name .
returns the getter method for the given name .
returns the method with the given name .
{
<p > . < / p >
insert a group member into a group .
delete the group name from the group .
get the list of all the groups that are available for the given group .

deletes the specified user name from the user .
returns all users that are currently installed in the users .
add a user to the group .
query the results of a batch .
query or get a list of analytics query .
queries documents by query string .
query and execute a redis expression .
checks if the user has user groups .
add the specified elements to the list .
lists all servers in a server .
lists all servers in a server .
updates a server advisor .
updates a server or updates an existing server .
updates a server advisor .
gets the specified azure resource .
compute the matrix decomposition .
gets a batch of jobs .
gets a streaming job .
retrieve a job from a job .
creates a new batch with the parameters of a streaming job .
creates a new batch of properties .
cancel a streaming job .
cancels the specified streaming job .
cancel a streaming job .

/ * ( non - javadoc )
returns the for the given address .
get the data type of the object .
set the time at which the resource was last modified .
/ * ( non - javadoc )
<p > returns the <code > simpletrigger< / code > s for the <code > simpletrigger< / code > . <p > if the time is not currently set the current time is returned . if the start time is not specified the default is adjusted to fire the time of the .
{
creates a { @link } .
{
get the date time from the date picker .
returns a { @link date } with the specified hour of hour minute second and nanosecond .
returns the date from the calendar s date and time .
{
transfers the contents of the input stream into a stream .
add a new schema to the list of schema .
selects the offspring list of offspring items in the list .
applies a condition to the downstream poller .
applies a downstream { @link bloomfilter } to the downstream .
selects the best match for a candidate condition .
selects the best achieved candidate for all the neighbors of the given candidate and fitness .
/ * ( non - javadoc )
sets the for the given .
creates a function that is the best achieved of the given function .
set the time at which the resource was last modified .
ensures that the given value is a complex number .
if a { @code val } is { @code true } the { @code value } is { @code true } .
if the given value is a long it is checked against the given value .
checks that the given value is a valid value of the given value .
checks if the given value is a valid value of the given condition .
checks if a predicate is present in the given { @code predicate } .
<p > checks if the given { @code value } is equal to the specified value . < / p >
checks if the given condition is a valid condition .
validates that the given { @code value } is equal to the given { @code value } .
validates that the given { @code value } is equal to the given { @code boolean } .
checks if the given value is a valid numeric condition .
checks if a given value is a { @code int } .
if the given value is a function it is only allowed to be greater than the specified value .
checks if the given value is a valid long value .
returns { @code true } if the given { @code value } is { @code true } .
<p > checks if the given { @code value } is equal to the specified value . the result is the result of the given { @code value } .
check if the given value is a double value .
checks if a given element is a power of a given value .
test if the given function is a function that is a function that is a function that is the same as the given function .


returns the byte array of the specified byte array .

get the inverse matrix .
returns the index of the given .
compute the median of the .
creates a shaped data .
creates a shaped .
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
get the number of bytes in the given .
get the initial length of the given texture .
get the input output for a given chunk .

create a array with a rice - bit array .
compute the number of cols and cols and cols .

{
{
{
returns the { @link soytype } of { @link } s that are represented by the given { @link } .
tokenizes the tokens from the tokens .
creates a request to the specified .
sets the response header .
/ * ( non - javadoc )
sets the .
{
get the list of objects .
read data from the input stream .
get the md5 message for the data .
<p > checks if the charsequence contains a character of the specified character . < / p >

connects to the connection .
disconnects from the connection .
parses a charsequence or a string .
parses a charsequence from the specified radix and returns the index of the specified character .
<p > parses the specified number of digits from the specified character sequence . < / p >
parses a short using the specified radix .
parses a charsequence from a { @code char } or { @code int } .
returns the index of the specified character in the specified radix .
extracts the authorization header from the httpservletrequest .
returns the { @link } for the given id .
retrieves the number of the .
{
{
{
/ * ------------------------------------------------------------
creates a new clientbuilder .

creates a new keystore .
creates a new pkcs12 client .

creates a new keystore .
sends a request to the next request .
connects to the specified peer and connects to the current connection .
connects to the endpoint .
sends a { @code } to the stream .
creates a new { @link } for the given { @code uri } .
{
creates a new { @link } instance .

get the message destination .
/ * ( non - javadoc )
/ * ( non - javadoc )


/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
returns the name of the .

check if the timeout is available in the server .
creates a shallow copy of this {
gets the { @link } for the given class .
lists the notification policies for a user .
revokes access to a virtual network .
revokes access to a disk .
returns all <code > icon< / code > elements
if not already created a new <code > managed - bean< / code > element will be created and returned . otherwise the first existing <code > managed - bean< / code > element will be created and returned . otherwise the first existing <code > managed - bean< / code > element will be created and returned . otherwise the first existing
returns all <code > managed - bean< / code > elements
if not already created a new <code > / code > element with the given value will be created . otherwise the existing <code > list - / code > element will be returned .

/ * ( non - javadoc )
returns the {
check if the given class is a valid attribute .
returns a new connection with the specified connection parameters .
{
{
increments the pool size size .
{
if not already created a new <code > named - query< / code > element will be created and returned . otherwise the first existing <code > named - query< / code > element will be returned .
returns all <code > / code > elements
if not already created a new <code > converter< / code > element will be created and returned . otherwise the first existing <code > converter< / code > element will be returned .
returns all <code > / code > elements
creates a new { @link } instance for the given { @link } .
initialize the file with the given name and path .
initializes the file with the given name and version name .
checks if the given { @code } is a valid { @link } .

change the to be deleted .
creates a new from the given file .
initialize the size of the file .
gets the value for this .
gets the value for this .
returns the value of the property .
<p > return the value of the <code > / code > property . < / p >
gets the value for this technologytargeting .
gets the value for this technologytargeting .
set the time at which the resource was last modified .
sets the value value for this .
gets the value for this .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
runs the example .
gets the value for this .
gets the value for this .



gets the value for this .
validates the .
returns the current .

sets the value for this .
close the closable down .
loads data from the given object .
get the data for a given data source .
returns the set of all that are associated with this aptcontrolinterface
returns the greatest value for the given { @code value } .
returns the greatest value for the given value .
returns the minimum value of the specified comparator .
returns an { @code int } that is less than equal to the specified value .
returns a comparator that compares the given { @code pair } into a { @code pair } .
returns a comparator that is a comparator that is a comparator that is a comparator .
if not already created a new <code > handler - chain< / code > element will be created and returned . otherwise the first existing <code > handler< / code > element will be returned .
returns all <code > / code > elements
runs the example .
runs the example .
waits for a new time to the wait time .
updates the acquisition for the given .
waits for a timer to be sent to the client .
check if the exception is a retry
returns the total amount of time for the given amount .
if not already created a new <code > property< / code > element will be created and returned . otherwise the first existing <code > property< / code > element will be returned .
returns all <code > property< / code > elements
if not already created a new <code > protocol - / code > element will be created and returned . otherwise the first existing <code > protocol - / code > element will be returned .
returns all <code > authentication - control< / code > elements
if not already created a new <code > security - role< / code > element will be created and returned . otherwise the first existing <code > security - permission< / code > element will be returned .
returns all <code > security - permission< / code > elements
get the field name for the field .
{
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
updates a kusto cluster .
updates a cluster .
if not already created a new <code > persistence - persistence - unit - group< / code > element with the given value will be created . otherwise the existing <code > persistence - unit - metadata< / code > element will be returned .
if not already created a new <code > / code > element will be created and returned . otherwise the first existing <code > / code > element will be returned .
returns all <code > / code > elements
if not already created a new <code > table - generator< / code > element will be created and returned . otherwise the first existing <code > table - generator< / code > element will be returned .
returns all <code > / code > elements
returns all <code > / code > elements
if not already created a new <code > mapping - group< / code > element will be created and returned . otherwise the first existing <code > mapping - group< / code > element will be returned .
returns all <code > / code > elements
if not already created a new <code > / code > element will be created and returned . otherwise the first existing <code > / code > element will be returned .
returns all <code > / code > elements
if not already created a new <code > entity< / code > element will be created and returned . otherwise the first existing <code > entity< / code > element will be returned .
returns all <code > entity< / code > elements
if not already created a new <code > / code > element will be created and returned . otherwise the first existing <code > / code > element will be returned .
returns all <code > / code > elements
starts the watch for the given { @link } .
{
gets the value for this proposallineitem .
if not already created a new <code > / code > element with the given value will be created and returned . otherwise the first existing <code > / code > element will be returned .
returns the maximum number of characters per page .
if not already created a new <code > / code > element will be created and returned . otherwise the first existing <code > / code > element will be returned .
returns all <code > / code > elements
if not already created a new <code > portlet - portlet - mode< / code > element with the given value will be created . otherwise the existing <code > portlet - mode< / code > element will be returned .
if not already created a new <code > portlet< / code > element with the given value will be created . otherwise the existing <code > portlet - mode< / code > element will be returned .
if not already created a new <code > / code > element will be created and returned . otherwise the first existing <code > / code > element will be returned .
returns all <code > / code > elements
if not already created a new <code > / code > element will be created and returned . otherwise the first existing <code > / code > element will be returned .
if not already created a new <code > / code > element will be created and returned . otherwise the first existing <code > / code > element will be returned .
runs the example .
runs the example .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
if not already created a new <code > / code > element will be created and returned . otherwise the first existing <code > / code > element will be returned .
returns all <code > / code > elements
if not already created a new <code > / code > element will be created and returned . otherwise the first existing <code > / code > element will be returned .
returns all <code > / code > elements
sets the { @link } for the given { @code } .
gets the value for this .
gets the value for this .
sets the date value for this .
gets the value for this .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
runs the example .
creates a new { @link } object .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
runs the example .
export the export agent .
export export data to a blob pool .
export a blob to a vault .
gets a specified integration account .
gets an integration account credential .
gets an integration account .
creates or updates an integration account .
creates or updates an integration account .
creates or updates an integration account .
gets a list of integration account .
gets the value for this videometadata .
sets the value for this videometadata .
runs the example .
runs the example .
runs the example .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
sets the value for this .
gets the columns columns .
sets the value for this .
gets the value for this .
sets the date value of the property .
extracts the node value from the given node .
extracts the nodes from the given node .
sets the value for this .
gets the value for this .
sets the value for this .
sets the value for this .
gets the direction value for this proposallineitem .
gets the value for this .
sets the value for this .
gets the value for this .
sets the value for this .
gets the value for this .
gets the value for this .
gets the value for this .
sets the value for this .
gets the value for this .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
lists the load balancer rules in the specified load balancer zone .
gets the specified load balancer rules .
gets the specified load balancer rules .
gets the specified load balancer inbound nat rule .
lists the load balancer rules in a subscription .
runs the example .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
creates a new .
if not already created a new <code > / code > element with the given value will be created . otherwise the existing <code > path< / code > element will be returned .
if not already created a new <code > chunk - chunk - data< / code > element with the given value will be returned .
if not already created a new <code > partition / code > element with the given value will be created . otherwise the existing <code > partition - join - partitions / code > element will be returned .

invoke a method on the given object and returns the object .
for the given interface get the stub implementation . if this service has no port for the given interface then serviceexception is thrown .
gets the value for this baseflashcreative .
sets the value for this baseflashcreative .
compute the of the given .
runs the example .
sets the value for this .
gets the value for this lineitemsummary .
sets the value for this lineitemsummary .
sets the value for this proposallineitem .
gets the value for this lineitemsummary .
gets the value for this proposallineitem .
sets the value for this targeting .
set the time the request was issued . client libraries typically set this to the current system clock time ; set it explicitly if you are calling the rest api directly .
gets the value for this .
gets the value for this .
sets the value for this .
sets the value for this .
process the deployment .
gets the value for this .
sets the value for this proposal .
gets the value for this .
gets the value for this .
if not already created a new <code > login - config< / code > element with the given value will be created . otherwise the existing <code > login - config< / code > element will be returned .
returns all <code > / code > elements
if not already created a new <code > converter< / code > element will be created and returned . otherwise the first existing <code > converter< / code > element will be returned .
returns all <code > / code > elements

sets the value for this proposallineitem .
runs the example .
runs the example .
gets the value for this .
sets the value for this .
runs the example .
gets the value for this .
sets the value for this .
gets the value for this sourcecontentconfiguration .
sets the value for this sourcecontentconfiguration .
<pre > use this operation to get syslog rules . < / pre >
use this api to fetch filtered set of resources . filter string should be in json format . eg : vm_state : down name : [ a - z ] +
<pre > converts api response of bulk operation into object and returns the object array in case of get request . < / pre >
<pre > performs generic data validation for the operation to be performed < / pre >
sets the value for this .
runs the example .
gets the value for this .
gets the value for this .
gets the sortorder value for this .
set the time at which the resource was last modified .
creates a new object .
sets the { @code headers } to the given { @code headers } .






create a new { @link } with the given { @link class } .
{
returns a new { @link } instance for the given { @link } .
returns a new { @code } instance for the specified { @code } .
returns a new { @link } instance for the given { @link } .
updates the cache for the given { @link mappable } .
{
adds a new log entry to the list of log files .
get the list of tasks that are currently running on the queue .
write a collection of { @link } to the given { @link outputstream } .
flush all the output streams to be written to the writer .
close the file .
retrieve the specified activity .
get the details of an existing job .
retrieve the automation identified identified by name .
get the details of an existing managed instance .
get the list of all the registered actions identified by the given name .
渲染到 stack trace
get a list of the users of the webhook identified by the given name .
get all app service plans for the specified agent .
retrieve a list of all the modules in the specified subscription .
get a list of all the specified types in a project .
get a list of all the agent policies in a given app service plan . get all app service plans in an app service plan . get all app service plans in an app service plan . get all app service plans in an app service plan . get all app service plans in an app service plan . get all app service
get a list of all app service plans in a subscription .
get all app service plans in an app service environment . get all get diagnostics by subscription id .
get all app service plans in an app service plan . get all get diagnostics by name .
translate a to a object .
/ * ( non - javadoc )
refresh the fields .
get the object by the specified object .
returns a new enumeration instance for the given database connection .
<pre > use this operation to get log messages . < / pre >
use this api to fetch filtered set of resources . filter string should be in json format . eg : vm_state : down name : [ a - z ] +
<pre > converts api response of bulk operation into object and returns the object array in case of get request . < / pre >
<pre > performs generic data validation for the operation to be performed < / pre >
store the object in the given object .
returns a { @link } for the given { @link query } .
decrypt the given plaintext encryption using aes - - .
writes the header header to the output stream .
{
//////////////////////////////////////
<pre > use this operation to upgrade netscaler instance . < / pre >
<pre > use this operation to upgrade netscaler instance . < / pre >
<pre > converts api response of bulk operation into object and returns the object array in case of get request . < / pre >
<pre > performs generic data validation for the operation to be performed < / pre >
loads the input stream from the given input stream .
create a new { @link } instance .
get the message as a string .








query the query for a given query
query for a query
bill date of a query


returns a { @code a } whose value is divided by a dot .
<pre > use this operation to add snmp manager . < / pre >
<pre > use this operation to delete snmp network interfaces . < / pre >
<pre > use this operation to get snmp manager . < / pre >
<pre > use this operation to modify snmp trap destination . < / pre >
use this api to fetch filtered set of resources . set the filter parameter values in filtervalue object .
<pre > converts api response of bulk operation into object and returns the object array in case of get request . < / pre >
<pre > performs generic data validation for the operation to be performed < / pre >
{
creates a new { @link } that will be used to edit the state of the node .
find the best match for the given path .




extract the instructions from the given instruction .
process the given { @link } .

checks if the given string is a valid json string .
returns true if the given string is a valid string .

<pre > use this operation to add device profile . < / pre >
<pre > use this operation to delete device profile . < / pre >
<pre > use this operation to get device profile . < / pre >
use this api to fetch filtered set of resources . set the filter properties to use on netscaler .
<pre > converts api response of bulk operation into object and returns the object array in case of get request . < / pre >
/ * ( non - javadoc )
{
build a new { @link } instance .
returns the url of the server .
{
parses a object from the given npm .
<p > convert the specified object into a map of values . < / p >

sets the { @link } for the given event type .

sets the currency for the given currency .
sets the for the given event .
set the attribute of the .
sets the description for the given event .

adds a new property to the default value .
this method is called when the request is started .
executes script actions .
perform a script that can be used to execute a script .
perform a call to the specified script .
executes the provided script .
decodes a char from the input array .
encodes the given byte array into a byte array .
constructs and initializes a new { @link } with the given { @link object [] arguments } .
constructs and initializes a new { @link } with the given { @link throwable cause } and { @link string message } formatted with the given { @link object [] arguments } .

constructs and initializes a new { @link throwable } with the given { @link throwable cause } and { @link string message } formatted with the given { @link throwable cause } and { @link string message } formatted with the given { @link throwable cause } and { @link string message } formatted with the given { @link object [] arguments }
constructs and initializes a new { @link } with the given { @link message message } formatted with the given { @link string message } formatted with the given { @link string message } formatted with the given { @link string message } formatted with the given { @link string message } formatted with the given { @link string message } formatted
constructs and initializes a new { @link message } with the given { @link message message } formatted with the given { @link string message } formatted with the given { @link string message } formatted with the given { @link string message } formatted with the given { @link string message } formatted with the given { @link string message } formatted
{
sets the menu menu menu .
{
gets a list of server connections .
deletes a network interface .
gets the specified network interface configuration .
gets the specified network interface network .
gets the specified network interface network interface .
creates or updates a network network .
creates or updates a network tap configuration .
creates or updates a network network or updates network updates for a specified network interface .
creates a network interface configuration .
creates or updates a network interface .
creates or updates a network interface configuration .
creates or updates a network interface .
gets a list of network configurations in a network interface .
lists all network configurations in a network interface .
构建
returns a type descriptor .
retrieve the user s primary key name .
retrieve the runbook identified by name .
retrieve the target group .
get the update for the specified compute node .
retrieve the update identified by name .
retrieve the named user s primary key name .
updates the specified data lake analytics account .
get the used groups in the specified cluster .
get the list of all the jobs identified by the name of the agent .
get a list of all worker groups in a worker pool .
creates a { @link } from a { @link } .
returns the short name for the given class name .
{
returns the message as a message .
retrieves all the { @link } s that are registered by the user .
returns a new { @link } instance for the specified { @link } .
returns a new { @link } instance for the specified { @link } .


evaluate the value of the given .
{
analyze the given .
sets the {
initializes the .
stop the .
{
{
<p > newinstance< / p >
returns the { @link } represented by { @link } .
returns a type of the specified type .
converts the value to a type .
convert the object to a date object .

returns the separator of the given separator .

lists all available virtual interfaces in the specified subscription .
lists all the virtualhubs in a subscription .
get link to a link .
get a link to this relation .

returns the class of the given type .
creates a new { @code } instance .
convert a string value to a { @link } .
executes a transaction .
cleans up the path from the path .
execute a { @link } .
export properties for a task .
export properties of task properties .
executes the specified command and returns the properties of the project .
get the series of series of series
adds a new data point .
adds a series of datapoints to a dataset .
serialize json into json .
{
set the time at which the resource was last modified .
create a new { @link } with the given { @link } .
create a filter filter
{
{
{
{
validates the given alias .
validates that the keystore is pkcs12 .
validates that the certificate is valid and if not already set the certificate chain .
gets all selectable items for a trigger .
gets all selectable items in a specified trigger .
gets a list of favorites defined within the specified subscription .
creates or updates a new compute node or updates an existing user s updates .
creates or updates a update condition .
creates or updates a trigger or updates an existing trigger or updates an existing trigger or updates .
updates a new update or updates .
creates or updates a new trigger or updates an existing managed database or updates an existing managed database or update an existing managed database or update an existing managed database or update an existing managed database or update an existing managed database or update an existing managed database or update an existing managed database or update an existing managed database or update an
creates or updates a trigger or updates an existing trigger or updates an existing trigger or updates .
gets all selectable trigger for a trigger .
{
{
{
creates a new { @link } instance with the specified configuration settings .
{
{
{
{
{
{
{
{
sets the report report for the given id .
returns the elapsed time of the specified time .
get the class for the given class name .
add a list of { @link } to the list of { @link } s .
declares a namespace with the given namespace and namespace name .
{
get the value of the object .
process a report file .
returns the { @link } for the given { @link } .
creates a new instance of the given class .
create a view for the given view .
create a new adapter with the specified default type .
initializes the bundle .
{

{
============================================================================================
{
sends a { @link } to send to the { @link } .
initialize the .
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
find the entity with the given id .
{
generates a password for the given username and password .
scans the given and returns the .
add file to the archive .
prepare the uploaded post - encoding .
creates a new attachment from the given form .
creates a new { @link attachment } .
create a new { @link } instance .
converts the list of attachments into a list of all the acls .

creates a new jms chat message .
send message to mq delivery message .
creates a file or directory .
creates a new { @link } with the specified name and locale .
creates a new instance of the given parent class .
adds a tag to the tag .
removes all tag tags from the tag tag .
get the package root of the package .
gets the details of a managed application .
returns a { @code collector } that accumulates elements into a { @code map } .
set the time the request was issued . client libraries typically set this to the current system clock time ; set it explicitly if you are calling the rest api directly .
set a timestamp indicating the last modified time of the resource known to the client . the operation will be performed only if the resource on the service has been modified since the specified time .
set a timestamp indicating the last modified time of the resource known to the client . the operation will be performed only if the resource on the service has not been modified since the specified time .
calculates the number of degrees in the graph .
/ * ( non - javadoc )
creates a new session instance with the given session id .
returns the current session .

{

collect metrics for each metrics in the registry .
process the given { @link } for the given { @link } .
process the metrics .
<p > process entity request . < / p > <p > this method is used to execute the request . < / p > <p > if the request is not used for the request you can use this method to update the data . < / p > <p > if the <code > / code > is not specified
<p > . < / p >
<p > make sure that is <code > / code > and then add it to the .
<p > checks if the input string is not <code > true< / code > . < / p >
generates a new for the given .


converts a { @link } to a { @link } .
returns the match of the specified node in the specified match .
<p > process entity request . < / p >
<p > process entity request . < / p >
<p > process entity request . < / p >
<p > process entity request . < / p >
<p > get the for the specified subscription . < / p >
<p > creates a <code > / code > object . < / p >
<p > . < / p >
<p > handle invoice . < / p >
<p > . < / p >
<p > . < / p >
<p > . < / p >
<p > add tax datapoint ids to be used for invoice . < / p >
<p > . < / p >

<p > . < / p >
get the value of the .
returns the context for the context .
adds a context to the context .
pops the current context .
check if the thread is a thread .
sets the current thread context .
sets the template engine .
sets the engine engine engine engine engine engine engine engine .
get the value of the specified key .
returns the value of the specified key .
sets the filter to be used to set the current filter .
sets the file .
sets the directory to be used for the given directory .
returns a { @link } that will be used to calculate the item in the given { @link } .
installs the given { @link } to the { @link } .
execute the http method .
opens a { @link } with the given url .
open url .

create a new path for the given path .
creates a patch method for a patch path .
creates a post request with the given path .
create a new http put request
adds a request to the given path .
add a new { @link } to the given { @link } .
create a new webdav object .
creates a copy of this with the given destination .
/ * ------------------------------------------------------------
converts the given { @link } to a { @link } .
<p > process entity request . < / p >
reads the next list of objects from the given array .
reads the mapping from the map .
reads the contents of the given { @link object } from the given { @link object } .
returns true if the specified { @code k } is equal to the given { @code key } .
creates a new record at the specified position .
{
verifies that the given condition is not valid .
verifies that the given method is a valid message .
<p > adds a { @code } to the given { @code type } . < / p >
returns the type of the given type .
returns the type of the type of the given type .

returns the name of the type of the type .
returns the upper bound of the given type .
builds the set of interfaces for the given type .
<p > process entity request . < / p >
<p > make sure that the object is not in the list . < / p >
<p > creates a description of the specified type . < / p >
<p > . < / p >
<p > . < / p >
initialize the class .

usage : java twitter4j . examples . [ woeid ]
returns the probability of the double value .
main method to start the file .
/ * package
/ * package
usage : java twitter4j . examples . . [ woeid ]
usage : java twitter4j . examples . html . [ ] }
<p > process entity request . < / p >
{
{
{
creates a new { @link } .
create a new { @link } .
sets the tag index .


set the latitude of latitude / longitude

add a polygon to the polygon
sets the list of choices to be used as a list of labels .
sets the list of filters to be used for each filter .
sets the words of the given ptb - tokenized words .
sets the facets for the facet documents .
returns the value of the given value .
get the time zone of the given time .
aes加密
aes加密
aes加密
reads a type from the input stream .
reads a single input stream from the given input stream .
creates a new { @link } instance .
reads the specified type from the given type .
parse a bean definition from the given bean class .
parses the given object from the given { @link webelementfinder } .
parses the given attribute as a string .
skip the next element in the stream .
parses the text and returns the text .
get the next event from the given location .
disposes the connection and close the connection .


update json .





build the select clause for the given select select select clause .
build the filter for the given filter .


executes the given sql query .
{
get the connection to the connection .
process the given filter .


invoke the method with the given name and returns the result .
{
{
reads the next hmtp from the json array .
/ * package

parses a string literal .
reads the next character from the next char .
/ * package
/ * package
<p > process entity request . < / p >
get the model data model .
redirect to the current browser .

sends a response to the client .
<p > process entity request . < / p >






render the current context .
set the { @link } for the given { @link } .
{
set the value of the request .

handles the server - side handler .


get the signature of the class that is declared by the given class .

{


/ *
.

returns the method signature for the given method .
find the first matching child property of the given object .
{
write the description for the specified element .
write the specified element to the specified parent .
write the to the
returns the local variable .
read the configuration file from the config file .
creates a new mail object with the specified id and password .
creates a new mail intent with the specified id and port .
creates a new { @link } object from the given { @link } .
creates a rate limiter for a rate limiter
read the state of the object .
{
{
{
/ * ( non - javadoc )
returns a list of the class for the given method .
lazy evaluation .
returns a { @code } that is used to execute the { @code } .
returns a new { @link } that is used to convert a { @code > } into a { @code > } .

<p > . < / p >
if the value is a { @link } then it is used to determine whether the value is a mapped value .
registers a new { @link } with the given name and name .


converts an { @link object } to an { @link document } .
use the supplied function to perform a lazy transform operation when getvalue is called <pre > { @code mutablelong mutable = mutablelong . fromexternal (( ) - > !this . value val - > !this . value ) ; } < / pre >
executes the given <code > resultset< / code > object .
{
executes the given { @link dataset } .
wraps the given class to a class .
<p > unwraps a class that is a class that is a class that is a class that is a class that is a class that is not a class . < / p >
returns true if the given array is empty .
returns a copy of the specified { @code char [] } array .
returns a byte array with the same value as the given byte array . <p >
returns a short array with the same short short - major entries .
returns a { @code int } describing the values of the given { @code float } .
returns a { @code long } - safe manner of the given { @code long } .
returns a float array with the given value .
returns a double array with the largest values .
returns true if the given array is null .

returns the byte array of the given byte array .
returns the first element of the first element of the first element of the first element of the array .
returns the first element of the given array . if the array is null then the returned array is returned .
returns the first long array of the given { @code long } .
returns the float array as a float array . if the float array is null then the float array is returned .
returns the value of the given double array as a double .
create a message with the given message .
gets a payment of the payment request .

this method is used to enable the current state of the current state .
initialize the plot .
shows the from the current user .
shows the dialog s dialog text .
hides the given popup .
hides the activity of the activity .
lazy evaluation .
returns a { @code } that is used to generate a { @code } .
compares this bloom filter to another bloom filter .

creates a filter that is the same as the specified number of times .
returns the number of bytes in the given sequence .
sets the header value .
add a header to the request .
get a subscription for a given subscription id .
cancels a subscription .
get the value of the specified property .
{


open a new {
/ * ( non - javadoc )
returns the value of the specified key .

puts the specified value into the specified key .
gets the storage component for the specified key .
copy the source file into target .


check if the agent is valid .

calculates the hash of the given hash .
get the tag for the tag .

sets the amount of time for the given amount .
sets the error status .
{
check if the passed locale is a country code .
returns the locale for the specified locale .

create a new { @link } .
this method will send the given { @link } to the { @link } and registers it to the .
shows the dialog of the dialog . <p >
returns the passed { @link } with the given { @link object value } .
find the first match of the passed predicate .
find all elements of the passed object with the specified predicate .
handles the sasl authentication .
get the url of the url .

get the time zone of the specified time zone .


returns the name of the .


process the given { @link } .
get the type of the type .
compares this buffer s current position .
/ * [ deutsch ] <p > bestimmt die l&auml ; ; r den angegebenen . < / p >
puts the vector into the buffer at the given position .
puts a buffer into this buffer .
/ * ( non - javadoc )
get the md5 destination .

loads the module module for the given module .
register a object with the given object .


get the object associated with the specified object .
resolve the given class name to a { @link } .
creates a new { @link } object .
find the enum value of the enum constant .
process all the listeners .
{
get the value of the given property .


invoke the method with the given arguments .
executes the callback and returns a response from the current thread .
find a method on the given method .
creates a new { @link } instance for the given { @link } .

get the from the given class .
load module class loader for the given class .
get the header for the specified tag .
get the server - side { @link } .

stops the thread pool .


adds a new { @code window } to the window .
removes the { @link view } s { @link } .
sets the { @link } to the given { @link } .

check if the given number of shards is not already present in the given { @code count } .
start the thread .
stop the timer .
sets the number of milliseconds to the specified number of milliseconds .
get cached state
/ * ( non - javadoc )
/ * ( non - javadoc )


parses the given reader into a { @link } .
{

parse a number of digits .
parses a charsequence from a string .
parses a long from a string .
parses a charsequence from a string .
parse a string from the given string .

decodes a charsequence from a string .
decodes a hexidecimal character from the specified character array .
{
invoke the specified method on the specified object .

<p > . < / p >
get the response body from the given request .
returns the {
write the current settings to the specified writer .
counts the number of files in the file .
get a list of all files in the file .
enqueue a task to be used for debugging purposes .
process a task .


converts rdata to a string
returns the next token in the current token .
get the string value of the given string .
returns the long value of the given character .

parses a long lived totp .
{
/ * ( non - javadoc )
returns the address of the given address .
{
returns the next character in the buffer .
returns the md5 of the given byte array .



parse attributes from the given attributes .
check if the given string is a valid .
find all packagedoc packages and add it to the dependency .
finds all classes that match the given criteria .
check if the passed string is a valid string .
parses a json array of json objects .
parses a single line and returns the result as a list of tokens .
creates a connection to the server .
returns true if the given socket is a valid ssl socket .
creates a new socket .
{
creates a new edge from the graph .
creates a vertex from a vertex and a vertex .
returns a {
returns a { @code enumset } that is not a { @code } .
adds the specified alert to the alert .
{
get the raw class of the type .
logs the given configuration .

get the configuration for the application .
returns true if the cluster is connected to the cluster .
{
removes the first element in the list .
clones the topics object with the given map .
{

get the result of the given object .

sets the number of nodes to be used by this node .
releases the given id from the cache .
stores the given {
loads the objects from the cache .
{
/ * private ( ) { if ( . () ) { if ( . () ) { if ( . () ) { if ( . () ) { if ( . () ) { if ( . () ) { if (

creates a new { @link } that is backed by the given { @code } .
{
{
/ * ( non - javadoc )
get the script for the script tag .
get the content of the script tag .
get the authorities for the given user .
returns the { @link } for the given { @link } .
get the configuration property from the configuration .
get the config from the config map .
writes the response to the given {
list the messages in the list of messages .

creates a directory and creates a directory .
/ * private methods
extracts the files from the zip file and returns the archive .
extracts the resource url from the given file .
finds the archive content of the given class .
closes the archive .
handle the data .

returns the classes of the classes that are not yet imported .
finds a { @code file } from the given { @code file } .

configure the request .
adds a new field to the existing table .
adds a new field to the existing table .
add filter filter to filter .
add the modifier to the member .

add the heading information for the given class .

returns the url of the request .
returns the absolute path to the absolute path .
create a { @link } type with the given { @link type } .
{

get the properties from the classpath
get properties from properties file .
add an attribute to the html representation of the attribute .
add the content to the content .
generates a tag name for a tag .
returns a list of all the items for a given application . <p >

creates a new { @link } with the specified { @link } .
generates a tag name for a tag name .
generates a tag for the html page .
generates a tag with the specified name .
generates a tag from the given tag tag .
generates a javascript script tag with the given tag name .
generates a tag table with the specified tag name .
executes the command .
start the process
saves the to the given .
loads the hbase files into the .
creates a new packet with the specified packet .
close the underlying file .
<p > . < / p >
writes the page to the page .
returns the number of bits in the given .
get the country code for the given country .
returns the current thread if the current thread is a .
creates a client version .
/ * ( non - javadoc )
creates a new { @link } object .
check if the specified file is a valid long .
returns true if the file is not in the file system .
check if the given id is a .
get the registry for the given id .
creates the default version for the application .
creates a version for the version .
creates a new policy for the given entity type .
{

parses a date from the date picker .
parses a date from iso - 8601 date format .
parses a date from a date and time zone .
check the metric with the given number of milliseconds .
check the validity of the metric and the time series .
validates the endpoint and validates the endpoint .
get the path of the given resource .
formats the given number of times .
put a key / value pair to the cache .
clear the current thread .
removes the mapping for the key from the map .
find the next expired time stamp .

match the given date and returns the date as a list of the .
parses a date from the calendar and returns the date as a string .
gets the api for the given version .
get the client s { @link } .
get the version of the .
returns a treenode that is a treenode that is a treenode that is the first node in the graph .
returns a { @link iterator } that traverses the iterator over the iterator .
returns a { @link iterator } that traverses the iterator from the iterator .
/ * [ deutsch ] <p > die l&auml ; ; mit hilfe des angegebenen . < / p >
check if the given string is a valid gln .
returns a set of participants in the session .
get the session from the given session id .
get the participant object from the given mailbox
closes the session .
close the session .
returns the output of the word .
get the state of the given .

insert a single - op into a new .
publish a message to the sentry server .
applies a { @link } to the given { @link } .
check if the given nonce is valid for the given id .
check if the specified member is a valid pid .
checks if the given string is a valid character .
returns the first character of the given string .
returns the first character of the given string .
returns the index of the given source target source .
checks if the given string is a valid source string .
checks if the given string is a target string .


checks if the given text contains a word .
checks if the given string is a word word .
checks if the given string is a target string .
checks if source is a target string .



returns a string representation of the specified string .

returns the number of occurences of the given target string .
get the value of the specified key from the cache if it is not already present .
{
{
execute request and returns the response body .
reopens the given log file with the given amount .
close the stream .
returns a copy of the given file with the specified number of bytes .

{
get the specified array list .
get the path to the specified path .
sets the list of { @link } s for the given { @link } .
sets the hash mapper for the given mapper .
returns the total number of rows associated with the table .
{
/ * ( non - javadoc )
check if the given object is a valid .
checks if the given object is a valid .
extract the name of the from the given name .

sets the size of the file .
create a filestatus to create a filestatus .
delete the current and delete the current .

updates the existing with the given id .
returns the { @link } that is used to get the list of views for the given { @link } .
returns the lucene options of the specified query .
returns the default size of the page .
/ * ( non - javadoc )
contexts : xexpression returns xsynchronizedexpression xassignment returns xsynchronizedexpression xassignment . xbinaryoperation_1_1_0_0_0 returns xsynchronizedexpression xorexpression returns xsynchronizedexpression xorexpression . xbinaryoperation_1_0_0_0 returns xsynchronizedexpression xequalityexpression . xbinaryoperation_1_0_0_0 returns xsynchronizedexpression xequalityexpression . xbinaryoperation_1_0_0_0 returns xsynchronizedexpression xequalityexpression . xbinaryoperation_1_0_0_0 returns xsynchronizedexpression xequalityexpression . xbinaryoperation_1_0_0_0 returns xsynchronizedexpression xrelationalexpression returns xsynchronizedexpression xrelationalexpression . xbinaryoperation_1_1_0_0_0 returns xsynchronizedexpression xotheroperatorexpression returns xsynchronizedexpression xotheroperatorexpression . xbinaryoperation_1_0_0_0 returns xsynchronizedexpression xequalityexpression . xbinaryoperation_1_0_0_0 returns xsynchronizedexpression xequalityexpression
check if the database table contains a value .
get the properties for the given properties .
returns the attachment names of the attachment .
retrieves the attachment list of attachments .
get the attachment from the attachment .
check if the is a .
returns the next row in the queue .
compares two { @code comparable } s .
creates a new { @link } with the specified value .
creates a new { @link } instance .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
unpack a new { @link } object .
returns a { @code runtimeexception } that will throw an exception if the exception is unchecked .
returns a { @code throwable } that is a { @code throwable } .
/ * ( non - javadoc )
replaces the given with the given name and return the value of the .
{
get the for a given project .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >



converts a { @link date } into a { @link date } .
returns the timezone name for the given timezone .
returns the value of the specified predicate .
returns a predicate that matches filtering predicate that is less than or equal to the specified predicate .

returns the list of { @link } s that are annotated with { @link } .
sets the { @link } for the { @link } .
$non - nls - 1$
sets the mode for the given mode .
sets the charset encoding .
reads a biginteger .
read a long from the input stream .
read the string representation of the given character .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the { @link } for the given { @link } .
{
sets the time zone .
sets the start date and time of the interval .
sets the time zone .
sets the current interval .
sets the time zone .
{
returns true if the current token is a valid .

sets the value of the rule .
returns the date of the last date of this date range .
sets the id for the given id .
returns the date of the user .
sets the object to be used by the user .
returns the date of the field .
returns the date of the current date .
set the location of the given resource .
returns the date of the start date of this date .
{
returns the date of this date . <p >
returns the last time of the current state of this calendar .
sets the duration of the duration of the given duration .
returns true if the title is a valid category .
returns true if the given date is in the range .
checks if the date is within the start date .
$non - nls - 1$
ensures that the given value is not valid .
calculates the hash of the hash .
returns an iterator over the elements of this iterator .
removes the specified element from this queue .
sets the maximum corner of the sparkline .
set the edge of the .
sets the for the given .
sets the edge to be used by the .
sets the maximum corner of the grid .
sets the maximum corner of the corner of the grid .
sets the corner of the image .
sets the corner of the image .
returns true if the polygon is a polygon .
{
check if the id is pressed .
updates the state of the animation .
/ * private void ( ) {
add a layer layer layer to the layer .
add a new child layer to the specified viewgroup .
add a new layer to the layer .
find the from the layer .
get the layer id at the position of the layer .
set the drawable to be used by the .
find the index of the layer with the specified id .
set the drawable at the specified index .
get the drawable at the given index .
sets the texture layer size .
sets the gravity for the given drawable .
set the location of the box at the specified position in the image .
sets the texture coordinates for the specified coordinates .
sets the padding for the specified area .
sets the position of the area drawn to the specified position .
get the outline of the outline .
resolve the gravity of the chart by the layout of the activity .
refresh the child rect .
sets the padding to be used by the .
execute the database .
waits until the next poll is available .
compute the for the given task .
returns a { @link } that will be used to estimate the number of tasks that occurred during the completion of the { @link } .
returns the md5 fingerprint of the md5 hash of the given md5 digest .
schedules a new { @link } for the given delay .
schedules a new backoff thread that is interrupted by the given delay .
this method is called to add a task to the task .
this method is invoked by the () method for the current thread .
creates a new { @link } that is used to execute the { @link } .
creates a new { @link } that will be used to execute the { @link } .
calls the given { @code callable } and { @link } and { @link } .

executes the given callable and returns the result .
calls the given { @code callable } and { @link } and { @link } .
returns a new { @link } that will be used to compute the result of the given { @link } .
returns all the tasks that have been added to the list of tasks that were added .
returns a new task that is not a task that is not a task that is not a task .
{
{
{
accept a { @link } that is asynchronously completed by a task .
{
/ * ( non - javadoc )
{
{
{
{
{
{


sets the current thread s current thread .
sets the result of the current thread .
sets the error response .
cancel the current thread .
{
returns the { @link } that will be used to create a new { @link } .

push a list of metrics to metrics .
filter metrics for the metric .
set the batch size of the batch .
start the thread .
converts a duration to a human - readable duration .
get the cpu - level .

updates the stats and statistics for the given id .
creates a new server - sent response .
creates a new server configuration .
creates a new { @link } with the given { @link } .
process a json string from the given json input .
updates the maximum number of bits in the current thread .
updates the update update update update update update update update update update update update update update update update update update update update update update update .
sets the number of times the given number of times to the given number .
{
{
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
validates the configuration .
returns a { @link tuple } of { @link tuple } objects .
/ * ( non - javadoc )
sets the value of the stringvalue to the specified position .
returns the information for the given object .
returns the default map of the given type .
returns the map for the given type .
parses the given type .

set the connection parameters .
returns the type of the type of the type .
get the output formatter output for the given {
/ * ( non - javadoc )
initialize the object .
convert the given string to a { @link } .

get the info information for a given .
get the column families for the given type .
returns the index of the type of the type .
get the partition keys for the given location .
returns the index of the first column that is defined by the given indexes .
get the for the given .
internalpurexbase . g : : 1 : returns [ eobject current = null ] : = eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( otherlv_0 = ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
internalsarl . g : : 1 : returns [ eobject current = null ] : = eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( () otherlv_1 = if otherlv_2 = ( ( ( ( ( ( ( ( ( ( () ( ( ( lv_elements_3_0 = rulexexpression ) ) ( ( lv_name_4_0 = rulevalidid ) ) ( otherlv_3 = ; ) ? otherlv_6 = > ( ( =
internalsarl . g : : 1 : returns [ eobject current = null ] : = eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( lv_name_4_0 = rulevalidid ) ) ( ( lv_name_4_0 = rulevalidid ) ) ( ( lv_name_4_0 = rulevalidid ) ) ) * ) ;
internalpurexbase . g : : 1 : returns [ string current = null ] : = ruleidorsuper eof ;
internalpurexbase . g : : 1 : rulejvmtypereference returns [ antlrdatatyperuletoken current = new antlrdatatyperuletoken () ] : ( this_id_0 = rule_id | kw = = ; | kw = < | kw = = ; | kw = < | kw = > | kw = < | kw = .. | kw = > kw = .. | kw =
internalsarl . g : : 1 : returns [ eobject current = null ] : = eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( lv_name_4_0 = rulevalidid ) ) ( ( lv_name_4_0 = rulevalidid ) ) ( otherlv_3 = = ( ( lv_name_4_0 = rulevalidid )
internalsarl . g : : 1 : returns [ eobject current = null ] : = eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( ( = rulejvmtypereference ) ) ? ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
internalpurexbase . g : : 1 : ruletypereferencenotypeargs returns [ eobject current = null ] : ( () ( ( lv_writeable_1_0 = rulevalidid ) ) ( otherlv_2 = ( ( lv_elements_3_0 = rulejvmtypereference ) ) ) * ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : = ruletypereferencenotypeargs eof ;
internalpurexbase . g : : 1 : returns [ eobject current = null ] : ( ( = rulejvmtypereference ) | = rulejvmtypereference | ( ( ( = rulejvmtypereference ) ) ) * ) ;
add a new { @link } to the specified { @link } .

internalsimpleexpressions . g : : 1 : returns [ eobject current = null ] : ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
internalsarl . g : : 1 : returns [ eobject current = null ] : = eof ;
internalpurexbase . g : : 1 : returns [ eobject current = null ] : ( = rulexannotation | = = = = = = = = = = = = = = = = = = = =
internalsarl . g : : 1 : returns [ eobject current = null ] : = eof ;
internalpurexbase . g : : 1 : ruleximportdeclaration returns [ eobject current = null ] : ( otherlv_0 = ( ( ( ( ( ( ( ( ( ( ( rulevalidid ) ) ) = > ( () rulearraybrackets ) ) * ) ? otherlv_6 = ;
internalsimpleexpressions . g : : 1 : returns [ eobject current = null ] : = eof ;
internalsimpleexpressions . g : : 1 : returns [ eobject current = null ] : ( () ( ( ( lv_writeable_1_0 = rulevalidid ) ) ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
internalpurexbase . g : : 1 : rulexreturnexpression returns [ eobject current = null ] : ( () ( ( lv_writeable_1_0 = rulevalidid ) ) ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
internalsimpleexpressions . g : : 1 : returns [ eobject current = null ] : = eof ;
internalsimpleexpressions . g : : 1 : returns [ eobject current = null ] : ( = = = = = = = = = = = | = = = | = = | = | =
internalpurexbase . g : : 1 : returns [ eobject current = null ] : = rulexreturnexpression eof ;
internalsimpleexpressions . g : : 1 : returns [ eobject current = null ] : ( = = | = | = | = | = | = | = | = | = | = | =
internalsarl . g : : 1 : returns [ eobject current = null ] : ( () otherlv_1 = } ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : = eof ;
----------------------------------------------------------------------------
internalsimpleexpressions . g : : 1 : returns [ eobject current = null ] : ( = ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
internalsarl . g : : 1 : returns [ eobject current = null ] : = eof ;
internalsarl . g : : 1 : ruletypereferencenotypeargs returns [ eobject current = null ] : ( () otherlv_1 = } ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : = eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( ( ( ( () rulearraybrackets ) ) = > ( () rulearraybrackets ) ) ( ( lv_name_4_0 = rulevalidid ) ) ( otherlv_3 = ; ) ? ) ;
internalsarl . g : : 1 : returns [ eobject current = null ] : = eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( lv_name_4_0 = rulevalidid ) ) ( ( lv_name_4_0 = rulevalidid ) ) ( otherlv_3 = = ( ( lv_name_4_0 = rulevalidid ) ) otherlv_3 = = ; ( (
internalsimpleexpressions . g : : 1 : returns [ eobject current = null ] : = eof ;
internalsimpleexpressions . g : : 1 : returns [ eobject current = null ] : ( = = | = | = | = | = | = | = | = | = | = | =
internalsarl . g : : 1 : returns [ eobject current = null ] : = eof ;
internalsarl . g : : 1 : returns [ eobject current = null ] : ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (
internalpurexbase . g : : 1 : returns [ string current = null ] : = eof ;
internalpurexbase . g : : 1 : returns [ antlrdatatyperuletoken current = new antlrdatatyperuletoken () ] : ( this_id_0 = rule_id | kw = = | kw = .. ( kw = = | kw = .. ) | ( kw = > kw = .. ) | ( kw = > | kw = .. ) | ( kw =
internalsarl . g : : 1 : rulejvmtypeparameter returns [ eobject current = null ] : ( () otherlv_1 = if otherlv_2 = ( ( ( ( ( () ( ( ( ( ( ( ( () rulearraybrackets ) ) ) ) ;
internalxtype . g : : 1 : returns [ eobject current = null ] : ( = = simplefilter ) ;
internalxtype . g : : 1 : returns [ eobject current = null ] : ( = simplefilter ) ;
internalxbase . g : : 1 : returns [ basedescr result ] = ( = ) ;
{
loads the class loader from the given {
{

check if the number of nodes is in the specified node .
this method is used to convert the rows into the grid list .
adds the specified number of lines to the list of lines .
returns a new that is the deepest node of the specified node .

defines the color that will be used to colorize the tickmark .
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
computes the best solution for the given solution .
computes the homography matrix .
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
returns a composite event for the given selection .
check if the column is in the list?
adapts the to the original .
add a new field value to the specified value .


returns true if the given { @link } is equal to the given { @link } .
check if the is a
returns the size of the specified array .
returns the size of the buffer in bytes .
initializes the list of .
returns the best - defined parameter type for the given type .
calculates the distance between the given distance to the given type .
returns a new { @code } instance with the specified number of pixels .
get the cnames for the given host and port .
returns the ranges of the given ranges .
reads the next byte array from the given buffer .
reads a line from the given line .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
applies a binary image to the specified intensity pixel bands in the image .
{
{
find the type of the given class .
returns the type of all the classes that are assignable to the given type .
returns the first type of the given { @code name } .
replies the type of the type .
returns the type of all the types of the given type .
converts a { @link grayf32 } to a { @link grayf32 } .
<p > . < / p >
computes the best estimate of the algorithm .
region > ( )
/ * ( non - javadoc )
creates a new field with the given name and value .
adds a file to the file .
process the input section of the line .
add a line to the file .
set the srid value for the given column family
set the column family
sets the output for the given configuration .
sets the column family name .
sets the { @link predicate } for the given { @link predicate } .
sets the { @link } to be used by the given { @link } .
get a { @link } for the given { @link } .
set the {
set the data set for the given range and range .
sets the list of files to be included in the list .
check whether the given expression is a .
creates a new { @link mimemessage } from the given buffer .

convert a polygon into a polygon .
convert a colour to a latitude longitude and the location of the box .
convert a latlonpoint to a latitude and longitude
get the value of the given name .
returns the first matching variable name .
remove a reference from the list of variables .
sets the variable name to the given scope .
finds the name of the name of the name of the name of the name of the name of the name of the name of the name of the name of the name .
returns true if field corresponding to fieldid is set ( has been assigned a value ) and false otherwise
returns the index of the given { @code columnfamily } .
{
{
wraps the given { @link string } to a { @link java . util . list } if the specified character is not a { @link java . util . charset } .
get the for the given command .
/ * private methods
imports a single file into a single table .
returns the { @link columnfamily } for the given { @link columnfamily } .
main method to run the tck .
convert a { @link bytebuffer } to a { @link } .
fetch all deploy profiles from the specified space .
get a specific uri from a given uri .
create a new { @link } . <p > the default implementation is { @code ( string ) } .
update the given { @link } . <p > this method is idempotent .
delete the specified resource . <p >
sets the roles that the user has the roles that the user has the roles .
syntactic sugar
sets the email for the email .
adds the control control control control control control control control control control to the specified control control control control control control control control control points and adds the control control control control to the control control control control control control control control control points .
fetch all profiles from the repository .
fetch all the profiles from the database .
fetch all profiles from a space .
fetch a space with a given id .
update a key / value pair . <p >
create a new space with a space .
delete a key from the cache .
creates a kernel and initializes the image .
computes the qr decomposition for the given .
sanitizes features in the image .
/ * ( non - javadoc )

returns true if the given edge is a valid .
{
executes the request and returns the response .
applies the transform to the image .
transform the image into a .
creates a new from the given json object .
creates a new from the given json object .
creates a new { @link } from a json object .
creates a new instance .
returns the property name of the property with the given name .
converts a collection of strings to a collection of strings .
finds the camera motion of the camera rig .
bucket bucket is used to track the bucket names
copies the model model to model model model model .
updates the edit text .
updates the text in the range of text and the end of the text .
{
{
{
{
performs a textured rectangle .
computes the hessian that is a gray scale image .
performs a horizontal 1d convolution for the specified image .
performs a simple intensity operation on the image .
/ * ( non - javadoc )
{
start a new scope .
stop the .
add a { @link } to the provided { @link } .
set the property value for the given property name .
initialize the .
{


check if the size of the grid is a subset of the given size .

initialize the features and returns the number of features .
sets the corners of the view .
sets the feature count to the given { @code } .
sets the image of the given image .

<p > computes the camera matrix for the camera matrices . < / p >
get the from the feature
<p > assigns the matrix to a view matrix . < / p >
<p > . < / p >
generate a .
computes the derivative of the image .
sets the derivative of the image .
calculates the intensity of the specified image .
sets the image for the given rgb image .
computes the average of the intensity of the given intensity .
computes the average of the intensity of the given intensity .
compute the score for each row in the row .

returns true if the parent element is a descendant of the given parent element .
trigger a callback that triggers the event .
computes the jacobian matrix and returns true if the rodrigues is true .
computes the dense vector .
process the output for the input image .
initialize the input image and initializes the list .
merges the given regions with the given vector and regions .
check that the first regions are the same as the first n of the regions .
finds the child node of the given node .
computes the tensor of the given .
checks if the given { @code object } is not { @code null } .
<p > a list of attributes that are associated with the specified attributes . < / p >
returns the { @link } for the specified image .
creates a corner of the specified type .
<p > creates a view around the specified type . < / p >
creates a { @code } with the specified value .
returns a { @code } that is the specified image .
creates a new { @code } with the specified value .
returns a view of the specified type .
validates that the card id is valid .
validates the specified .



{

find the kernel space and radius of the kernel .
checks if the image is inside the image .
checks if the list contains all items in the specified list .
checks if the given { @link list } is not equal to the specified { @link } .
checks if the given filter is a valid match for the given filter .
adapts a { @link } to a { @link } .
adapts a { @link } to a { @link } .
initializes the list of filters .
process the input image .
<p > computes the matrix inverse dft of matrix element . < / p >
computes the matrix norm of the matrix .
computes the eigenvalue decomposition of the matrix .
computes the eigenvalue decomposition of the matrix .

validates that the given { @link } is not defined .
<p > imports the specified compile - level file . < / p >
replace the with the given template .

process the children of the given node .
parses a { @link } .
get the xml file .
checks if the given is valid .
parse the xml file .
creates a filter that will be used to filter the list of files .
creates a filter that will be used to create a list of files that are not accepted by the source .
prunes the contour .
removes duplicated points from the contour
computes the convex hull of the given segment .
prunes the intersection of the given and returns the number of views in the list .
computes the acute distance between the two specified mbrs and the given distance .
computes the best derivative of the specified image and returns a new .
sets the list of all the to be removed .
fern .

returns a list of items matching the specified criteria .
returns the items in the list of items that are contained within the specified filter .
returns a {
returns a { @code } that holds the { @code } .
returns a {

returns a { @code collector } that collects the elements in the specified { @code } .
returns a { @code collector } that applies the provided { @link bifunction } to the provided { @link bifunction } .
binding for { @link }
binding for {
returns a { @code } that will concatenate the elements of the original observable into a single observable .
returns a set of { @code annotationtype } .
{
sets the value of the specified property .
returns a new instance of the type of the specified type .
returns a list of all the classes of the given type .
{
sets the modules for the given module .
configures the default { @link } .
get the annotation for the given annotation .
converts a byte array to a hexadecimal string .
returns the string representation of the specified string .
{
get the property value .
converts a long to a long .

create a { @code } for the given { @code charset } .
returns the current session .
returns a new instance .
computes the laplacian of hough matrix and stores the results in the specified scale matrix .
applies the rotation transformation to the specified direction .
computes the derivative of the image and returns the { @link } .

{
get the splits for the given file .
closes the given { @code closeable } .

sets the position of the given position .
sets the { @link } for the given { @link } .
run the loop .
get the worker threads that are waiting for the given worker thread .
returns the number of items that are waiting for the given number of times .
loads the data from the map .
loads the data from the map .
push a value to the current thread .

creates a { @link } from the given { @link inputstream } .

/ * ( non - javadoc )
advances the next interval to the given time .

visits a { @link } .
reads a byte array from the specified stream .
read the header and return the stream .
reads a signed int from an input stream .
reads a 32 - bit unsigned integer from the stream .
reads the next byte from the stream .
reads the contents of the given stream into a byte array .
check if the given { @link } is not available for the given { @link sequencenumber } .
parses the arguments from the given constructor .
parses the sub - classes and recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively recursively
verify the given element .
returns the string array of strings with the given separator character .
initialize the list of .
sets the view to be used to visualize a view of the view .
serialize the given byte array into a byte array .
{
main method for testing purposes .
/ * ( non - javadoc )
{

computes the mean histogram of the image .
returns the list of all headers that are contained in the list .
{
check if the image is inside the contour .
adjust the contour of the contour to the contour of the contour
computes the first corner of the given number of lines and the specified number of lines .
computes the line between the specified line and the line and the line .
finds the closest point between the two points .
process the grid .
adds a new row to the grid .
executes the command and returns the { @link } .


{
returns the set of connections that are mapped to the given { @link } .
returns the maximum of the current session .
opens a connection to the server .
closes the connection .
{
sets the tag tag for the tag tag .
sets the value of the { @link } .
sets the property type for the given type .
sets the default type for the given type .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
check if the child is a child of the specified child .
returns true if the given text is a valid css element .
launches the .
main method .
returns a { @code } that is a intersection of two { @code double } values .
returns a new average with the given tolerance .
quantile function .
parses the given command line arguments .
returns a {
main method .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
{

<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
{
updates the progress bar .
sets the alpha value of the .
validates the given element and validates the given element .
validates that the property value is valid and should be used to validate the value of the property .
executes the given element if it is not already in the messager .
{
sets the response status .
checks if the given node is a valid sax sax source .
checks if the expression is a valid expression .
check that the node is a namespace decl .
check if the node is a namespace element .
renders the current state of the given .
shows the { @link } for the given { @link } .
returns the .
returns the capabilities of the given capabilities .
get ports for ports .
get the port for the given port and port .
checks if the header is a header .
check the validation of the .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
check the of the .
returns the time stamp of the current thread context .
sets the { @link } for the given { @link } .
creates a new .
creates a new route action .
{
stop the route .
removes routes from the route metas routes .
get the for the given context .
get the list of configurations .
get the form of the form .
/ * ( non - javadoc )
parse a date value from the date picker .
sets the query parameters for the request .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
hmac hmac hmac continuation und und . . . . . . . . . . . . . . . . . . . . . . . . . . .
generates a secret key with the secret key .
returns the last completed last run .
check if the given name is a valid json string .
generates a key pair with the given signature .
registers the context for this context .
{
/ * ( non - javadoc )
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
parses the specified element and returns the value of the first element .
creates a new { @link } from the given { @link } .
{
resolve the given field name and value if it is not valid .
check if the given expression is a valid expression .
checks if the given string is valid .
{
returns a resource that matches the resource name .
returns a list of all resources that are referenced by the given name .
finds a resource with the given name .
find the first resource in the given url .
returns a resource that matches the specified resource name .
returns a list of all resources in the specified resource .
check if the given url is a directory .
adds the control control control control control control control to the specified control control control control control control control .



binds a command to a named parameter .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
converts the given value to a { @code string } .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
sets the issuer of the subject .

<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >

this method is called when the job is not running .
this method is called by the { @link } to use the { @link } method .
creates a new { @link } .
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
validates the command and returns the result result .
get the name of the destination name .
creates a new template template .
populate the bean from the map .
sets the { @link } for the given { @link } .
validates the given bean against the bean and then validates the and .
get workspace from the given workspace .
add a workspace to the workspace .
{
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
/ * ( non - javadoc )
/ * ( non - javadoc )
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
